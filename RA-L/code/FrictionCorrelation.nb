(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    489510,       9956]
NotebookOptionsPosition[    486091,       9842]
NotebookOutlinePosition[    486468,       9859]
CellTagsIndexPosition[    486425,       9856]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Robot swarm with friction.  Initial position is red rectangle.\
\>", "Section",
 CellChangeTimes->{{3.688996537687027*^9, 3.688996545431744*^9}, 
   3.6889970531901493`*^9, {3.688997258133162*^9, 3.688997269985483*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"controls", ":", " ", "A"}], ",", " ", "w", ",", " ", "h", ",", 
    " ", "L"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"eps", " ", "=", " ", 
        RowBox[{"1", "/", "20"}]}], ",", "rside", ",", "rtop", ",", "rbot"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"w", "<", "A"}], ",", 
        RowBox[{"w", "=", "A"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"xyCorr", "[", 
             RowBox[{"L", ",", "w", ",", "A", ",", "h"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", ".6"}], "}"}]}], "]"}], ","}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Pink", ",", 
           RowBox[{"Rectangle", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "eps"}], ",", 
               RowBox[{"-", "eps"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"1", "+", "eps"}], ",", 
               RowBox[{"1", "+", "eps"}]}], "}"}]}], "]"}], ",", "White", ",", 
           RowBox[{"Rectangle", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "1"}], "}"}]}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"draw", " ", "friction", " ", "zone"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Opacity", "[", "0.5", "]"}], ",", 
           RowBox[{
            RowBox[{"ChartElementData", "[", 
             RowBox[{"\"\<GradientRectangle\>\"", ",", 
              RowBox[{
              "\"\<ColorScheme\>\"", "\[Rule]", "\"\<PigeonTones\>\""}], ",", 
              RowBox[{"\"\<GradientOrigin\>\"", "\[Rule]", "Bottom"}]}], 
             "]"}], "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "h"}], "}"}]}], "}"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ChartElementData", "[", 
             RowBox[{"\"\<GradientRectangle\>\"", ",", 
              RowBox[{
              "\"\<ColorScheme\>\"", "\[Rule]", "\"\<PigeonTones\>\""}], ",", 
              RowBox[{"\"\<GradientOrigin\>\"", "\[Rule]", "Top"}]}], "]"}], 
            "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"1", "-", "h"}], ",", "1"}], "}"}]}], "}"}], "]"}]}], 
          "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"draw", " ", "Robots"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"rtop", "   ", "=", " ", 
           RowBox[{"Min", "[", 
            RowBox[{
             RowBox[{"A", "/", "w"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"L", ">", 
                RowBox[{"1", "-", "w"}]}], ",", " ", 
               RowBox[{"1", "-", "   ", 
                RowBox[{
                 RowBox[{"h", "/", "L"}], " ", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", "w"}], ")"}]}]}], ",", " ", 
               RowBox[{"1", "-", "h"}]}], "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"rside", " ", "=", " ", 
           RowBox[{"Min", "[", 
            RowBox[{
             RowBox[{"L", "+", "w"}], ",", "1"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"rbot", "   ", "=", " ", 
           RowBox[{"Min", "[", 
            RowBox[{
             RowBox[{"A", "/", "w"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"L", ">", 
                RowBox[{"1", "-", "w"}]}], ",", "    ", 
               RowBox[{
                RowBox[{"h", "/", "L"}], " ", 
                RowBox[{"(", 
                 RowBox[{"1", "-", "w"}], ")"}]}], ",", " ", "h"}], "]"}]}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"bottom", " ", "parallelogon"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Blue", ",", 
            RowBox[{"Polygon", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"w", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"w", "+", 
                  RowBox[{
                   RowBox[{"L", "/", "h"}], " ", "rbot"}]}], ",", "rbot"}], 
                "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"L", "/", "h"}], " ", "rbot"}], ",", "rbot"}], 
                "}"}]}], "}"}], "]"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"middle", " ", "rectangle"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"rtop", ">", "rbot"}], ",", 
           RowBox[{"{", 
            RowBox[{"Blue", ",", 
             RowBox[{"Polygon", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"rside", ",", "rbot"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"rside", ",", "rtop"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"rside", "-", "w"}], ",", "rtop"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"rside", "-", "w"}], ",", "rbot"}], "}"}]}], "}"}], 
              "]"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"top", " ", "parallelogon"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"A", "/", "w"}], ">", "rtop"}], ",", 
           RowBox[{"{", 
            RowBox[{"Blue", ",", 
             RowBox[{"Polygon", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"rside", ",", " ", "rtop"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"rside", "-", 
                   RowBox[{
                    RowBox[{"L", "/", "h"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"A", "/", "w"}], "-", "rtop"}], ")"}]}]}], ",", 
                  RowBox[{"A", "/", "w"}]}], " ", "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"rside", "-", "w", "-", 
                   RowBox[{
                    RowBox[{"L", "/", "h"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"A", "/", "w"}], "-", "rtop"}], ")"}]}]}], ",", 
                  RowBox[{"A", "/", "w"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"rside", "-", "w"}], ",", "rtop"}], "}"}]}], "}"}], 
              "]"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"initial", " ", "robot", " ", "config"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"EdgeForm", "[", 
            RowBox[{"{", "Red", "}"}], "]"}], ",", 
           RowBox[{"FaceForm", "[", "]"}], ",", 
           RowBox[{"Rectangle", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"w", ",", 
               RowBox[{"A", "/", "w"}]}], "}"}]}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"initial", " ", "robot", " ", "config"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Dashed", ",", "Gray", ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "h"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "h"}], "}"}]}], "}"}], "]"}], ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"1", "-", "h"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{"1", "-", "h"}]}], "}"}]}], "}"}], "]"}]}], "}"}], 
         ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"centroids", " ", "of", " ", "individual", " ", "parts"}], 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Purple", ",", 
           RowBox[{"PointSize", "[", "Large", "]"}], ",", 
           RowBox[{"Point", "[", 
            RowBox[{"{", 
             RowBox[{
              FractionBox[
               RowBox[{"w", "+", 
                RowBox[{
                 RowBox[{"L", "/", "h"}], " ", "rbot"}]}], "2"], ",", 
              FractionBox["rbot", 
               RowBox[{"2", " "}]]}], "}"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Purple", ",", 
           RowBox[{"PointSize", "[", "Large", "]"}], ",", 
           RowBox[{"Point", "[", 
            RowBox[{"{", " ", 
             RowBox[{
              RowBox[{"rside", "-", 
               FractionBox["w", "2"]}], ",", 
              FractionBox[
               RowBox[{"rbot", "+", "rtop"}], "2"]}], "}"}], "]"}]}], "}"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Purple", ",", 
           RowBox[{"PointSize", "[", "Large", "]"}], ",", 
           RowBox[{"Point", "[", 
            RowBox[{"{", " ", 
             RowBox[{
              FractionBox[
               RowBox[{"rside", "-", 
                RowBox[{
                 RowBox[{"L", "/", "h"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"A", "/", "w"}], "-", "rtop"}], ")"}]}], "-", "w", 
                "+", "rside"}], "2"], ",", 
              FractionBox[
               RowBox[{
                RowBox[{"A", "/", "w"}], "+", "rtop"}], "2"]}], "}"}], 
            "]"}]}], "}"}], ","}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "}"}], "]"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"A", ",", 
       RowBox[{"1", "/", "4"}]}], "}"}], ",", "0.001", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", "0.001", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"h", ",", 
       RowBox[{"1", "/", "8"}]}], "}"}], ",", "0.0001", ",", 
     RowBox[{"1", "/", "2"}]}], " ", 
    RowBox[{"(*", 
     RowBox[{
     "only", " ", "stretch", " ", "half", " ", "the", " ", "workspace"}], 
     "*)"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"L", ",", "0", ",", "2"}], " ", 
    RowBox[{"(*", 
     RowBox[{"we", " ", "could", " ", "make", " ", "this", " ", "bigger"}], 
     "*)"}], "}"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.688819236432025*^9, 3.688819577720038*^9}, {
   3.688846576934639*^9, 3.6888465975256367`*^9}, {3.688846643306011*^9, 
   3.688846747603136*^9}, {3.688846820949548*^9, 3.688846999827983*^9}, {
   3.688847066094385*^9, 3.68884715592889*^9}, {3.688856325263864*^9, 
   3.688856400904196*^9}, {3.688856436866187*^9, 3.688856484367713*^9}, {
   3.688856517496006*^9, 3.6888567361909447`*^9}, {3.688856778447385*^9, 
   3.6888568178435917`*^9}, {3.688856853071457*^9, 3.688856866670505*^9}, {
   3.68885692096854*^9, 3.688856929378634*^9}, {3.6888569595389633`*^9, 
   3.688856960922277*^9}, {3.6888569941910133`*^9, 3.688857328059915*^9}, {
   3.6888999114774837`*^9, 3.688899920944714*^9}, {3.688899982088603*^9, 
   3.688900006930079*^9}, {3.68890008919283*^9, 3.6889001104669533`*^9}, {
   3.688900190990326*^9, 3.688900346826803*^9}, {3.68890043385009*^9, 
   3.688900448552055*^9}, {3.6889004966330147`*^9, 3.688900581668413*^9}, 
   3.6889007260719976`*^9, {3.688900775143865*^9, 3.688900777656547*^9}, {
   3.688900822541747*^9, 3.688900850576845*^9}, {3.6889009126388273`*^9, 
   3.6889009154307528`*^9}, {3.688900995478894*^9, 3.688901000364987*^9}, {
   3.688901479929781*^9, 3.68890148071102*^9}, {3.688901681563437*^9, 
   3.688901686426935*^9}, {3.688901764383852*^9, 3.68890178363916*^9}, {
   3.688902011144176*^9, 3.68890201293668*^9}, {3.688902065451395*^9, 
   3.688902069242371*^9}, {3.688903652650916*^9, 3.688903806504781*^9}, {
   3.688904055239925*^9, 3.688904088579009*^9}, 3.688904122438333*^9, {
   3.68890415680134*^9, 3.688904183115941*^9}, {3.6889042551062326`*^9, 
   3.688904274421221*^9}, {3.688908558491153*^9, 3.688908561210465*^9}, {
   3.688908978997547*^9, 3.6889089950713463`*^9}, {3.6889091418453293`*^9, 
   3.688909161707097*^9}, {3.688919018718684*^9, 3.688919032104789*^9}, {
   3.688919227225069*^9, 3.688919280329267*^9}, 3.6889193616666317`*^9, {
   3.6889194066028433`*^9, 3.688919422715143*^9}, {3.6889201597070093`*^9, 
   3.688920349895032*^9}, {3.688920447756424*^9, 3.6889205189490557`*^9}, {
   3.688920621749331*^9, 3.688920636857809*^9}, {3.6889206668664083`*^9, 
   3.6889207265831327`*^9}, {3.688921354512123*^9, 3.688921377337098*^9}, {
   3.688995364287344*^9, 3.688995365473991*^9}, {3.688996222713719*^9, 
   3.688996354519013*^9}, {3.688997063371503*^9, 3.688997063906766*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`A$$ = 0.041, $CellContext`h$$ = Rational[
    1, 8], $CellContext`L$$ = 0.196, $CellContext`w$$ = 0.041, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`A$$], 
       Rational[1, 4]}, 0.001, 1}, {
      Hold[$CellContext`w$$], 0.001, 1}, {{
       Hold[$CellContext`h$$], 
       Rational[1, 8]}, 0.0001, 
      Rational[1, 2]}, {
      Hold[$CellContext`L$$], 0, 2}}, Typeset`size$$ = {540., {264., 275.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`A$547631$$ = 0, $CellContext`w$547632$$ = 
    0, $CellContext`h$547633$$ = 0, $CellContext`L$547634$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`A$$ = Rational[1, 4], $CellContext`h$$ = 
        Rational[1, 8], $CellContext`L$$ = 0, $CellContext`w$$ = 0.001}, 
      "ControllerVariables" :> {
        Hold[$CellContext`A$$, $CellContext`A$547631$$, 0], 
        Hold[$CellContext`w$$, $CellContext`w$547632$$, 0], 
        Hold[$CellContext`h$$, $CellContext`h$547633$$, 0], 
        Hold[$CellContext`L$$, $CellContext`L$547634$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`eps$ = 
         1/20, $CellContext`rside$, $CellContext`rtop$, $CellContext`rbot$}, 
        If[$CellContext`w$$ < $CellContext`A$$, $CellContext`w$$ = \
$CellContext`A$$]; Graphics[{{Pink, 
            
            Rectangle[{-$CellContext`eps$, -$CellContext`eps$}, {
             1 + $CellContext`eps$, 1 + $CellContext`eps$}], White, 
            Rectangle[{0, 0}, {1, 1}]}, {
            Opacity[0.5], 
            ChartElementData[
            "GradientRectangle", "ColorScheme" -> "PigeonTones", 
             "GradientOrigin" -> Bottom][{{0, 1}, {0, $CellContext`h$$}}], 
            ChartElementData[
            "GradientRectangle", "ColorScheme" -> "PigeonTones", 
             "GradientOrigin" -> 
             Top][{{0, 1}, {1 - $CellContext`h$$, 1}}]}, $CellContext`rtop$ = 
            Min[$CellContext`A$$/$CellContext`w$$, 
              
              If[$CellContext`L$$ > 1 - $CellContext`w$$, 
               1 - ($CellContext`h$$/$CellContext`L$$) (1 - $CellContext`w$$),
                1 - $CellContext`h$$]]; $CellContext`rside$ = 
            Min[$CellContext`L$$ + $CellContext`w$$, 1]; $CellContext`rbot$ = 
            Min[$CellContext`A$$/$CellContext`w$$, 
              
              If[$CellContext`L$$ > 
               1 - $CellContext`w$$, ($CellContext`h$$/$CellContext`L$$) (
                1 - $CellContext`w$$), $CellContext`h$$]]; {Blue, 
             
             Polygon[{{0, 
               0}, {$CellContext`w$$, 
                0}, {$CellContext`w$$ + ($CellContext`L$$/$CellContext`h$$) \
$CellContext`rbot$, $CellContext`rbot$}, {($CellContext`L$$/$CellContext`h$$) \
$CellContext`rbot$, $CellContext`rbot$}}]}, 
           If[$CellContext`rtop$ > $CellContext`rbot$, {Blue, 
             
             Polygon[{{$CellContext`rside$, $CellContext`rbot$}, \
{$CellContext`rside$, $CellContext`rtop$}, {$CellContext`rside$ - \
$CellContext`w$$, $CellContext`rtop$}, {$CellContext`rside$ - \
$CellContext`w$$, $CellContext`rbot$}}]}], 
           If[$CellContext`A$$/$CellContext`w$$ > $CellContext`rtop$, {Blue, 
             
             Polygon[{{$CellContext`rside$, $CellContext`rtop$}, \
{$CellContext`rside$ - ($CellContext`L$$/$CellContext`h$$) \
($CellContext`A$$/$CellContext`w$$ - $CellContext`rtop$), \
$CellContext`A$$/$CellContext`w$$}, {$CellContext`rside$ - $CellContext`w$$ - \
($CellContext`L$$/$CellContext`h$$) ($CellContext`A$$/$CellContext`w$$ - \
$CellContext`rtop$), $CellContext`A$$/$CellContext`w$$}, {$CellContext`rside$ - \
$CellContext`w$$, $CellContext`rtop$}}]}], {
            EdgeForm[{Red}], 
            FaceForm[], 
            
            Rectangle[{0, 
             0}, {$CellContext`w$$, $CellContext`A$$/$CellContext`w$$}]}, {
           Dashed, Gray, 
            Line[{{0, $CellContext`h$$}, {1, $CellContext`h$$}}], 
            Line[{{0, 1 - $CellContext`h$$}, {1, 1 - $CellContext`h$$}}]}, {
           Purple, 
            PointSize[Large], 
            
            Point[{($CellContext`w$$ + ($CellContext`L$$/$CellContext`h$$) \
$CellContext`rbot$)/2, $CellContext`rbot$/2}]}, {Purple, 
            PointSize[Large], 
            
            Point[{$CellContext`rside$ - $CellContext`w$$/
              2, ($CellContext`rbot$ + $CellContext`rtop$)/2}]}, {Purple, 
            PointSize[Large], 
            
            Point[{($CellContext`rside$ - ($CellContext`L$$/$CellContext`h$$) \
($CellContext`A$$/$CellContext`w$$ - $CellContext`rtop$) - $CellContext`w$$ + \
$CellContext`rside$)/
              2, ($CellContext`A$$/$CellContext`w$$ + $CellContext`rtop$)/
              2}]}, Null}]], "Specifications" :> {{{$CellContext`A$$, 
          Rational[1, 4]}, 0.001, 1}, {$CellContext`w$$, 0.001, 
         1}, {{$CellContext`h$$, 
          Rational[1, 8]}, 0.0001, 
         Rational[1, 2]}, {$CellContext`L$$, 0, 2}}, "Options" :> {}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{606., {392., 401.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.68899727566422*^9, 3.689350181200778*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Correlation as a function of Area of the robot swarm.\n",
 StyleBox["assume robot swarm of total area A is initialized in a rectangle w \
wide by ", "Subsubsection"],
 StyleBox[Cell[BoxData[
  FormBox[
   FractionBox["A", "w"], TraditionalForm]], "Subsubsection",
  FormatType->"TraditionalForm"], "Subsubsection"],
 StyleBox["tall in the lower left corner of a square workspace with sides of \
lenght 1.  If the swarm is pushed to the right a distance L\[Element][0,1-w], \
and the boundary layer height is h, what is the maximum correlation?\n", 
  "Subsubsection"]
}], "Section",
 CellChangeTimes->{{3.6629543033673983`*^9, 3.662954308103385*^9}, {
  3.688776222027101*^9, 3.688776355160273*^9}, {3.688780845151924*^9, 
  3.688780874560154*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Corxy", "[", 
   RowBox[{"\[Beta]_", ",", "A_"}], "]"}], ":=", 
  RowBox[{"Which", "[", 
   RowBox[{
    RowBox[{"A", "\[LessEqual]", 
     FractionBox["1", "2"]}], ",", 
    StyleBox[
     TagBox[GridBox[{
        {"\[Piecewise]", GridBox[{
           {
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               RowBox[{"Tan", "[", "\[Beta]", "]"}], " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"12", " ", 
                  SuperscriptBox["A", "2"]}], "-", 
                 SuperscriptBox[
                  RowBox[{"Tan", "[", "\[Beta]", "]"}], "2"]}]]}], 
              SqrtBox[
               RowBox[{
                RowBox[{"48", " ", 
                 SuperscriptBox["A", "4"]}], "+", 
                RowBox[{"24", " ", 
                 SuperscriptBox["A", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Tan", "[", "\[Beta]", "]"}], "2"]}], "-", 
                SuperscriptBox[
                 RowBox[{"Tan", "[", "\[Beta]", "]"}], "4"]}]]]}], 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
              "0", "\[LessEqual]", " ", "\[Beta]", "\[LessEqual]", " ", 
               RowBox[{"ArcTan", "[", 
                RowBox[{"2", " ", "A"}], "]"}]}], ")"}], " ", "||", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"2", " ", "\[Pi]"}], " ", "-", " ", 
                RowBox[{"ArcTan", "[", 
                 RowBox[{"2", " ", "A"}], "]"}]}], " ", "<", " ", "\[Beta]", 
               " ", "\[LessEqual]", "  ", 
               RowBox[{"2", "\[Pi]"}]}], ")"}]}]},
           {
            RowBox[{"-", 
             FractionBox["1", "2"]}], 
            RowBox[{
             RowBox[{"ArcTan", "[", 
              RowBox[{"2", "A"}], "]"}], "<", "\[Beta]", "\[LessEqual]", " ", 
             RowBox[{
              FractionBox["\[Pi]", "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}]}]},
           {
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               RowBox[{"Cot", "[", "\[Beta]", "]"}], " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"12", " ", 
                  SuperscriptBox["A", "2"]}], "-", 
                 SuperscriptBox[
                  RowBox[{"Cot", "[", "\[Beta]", "]"}], "2"]}]]}], 
              SqrtBox[
               RowBox[{
                RowBox[{"48", " ", 
                 SuperscriptBox["A", "4"]}], "+", 
                RowBox[{"24", " ", 
                 SuperscriptBox["A", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Cot", "[", "\[Beta]", "]"}], "2"]}], "-", 
                SuperscriptBox[
                 RowBox[{"Cot", "[", "\[Beta]", "]"}], "4"]}]]]}], 
            RowBox[{
             RowBox[{
              FractionBox["\[Pi]", "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}], "<", "\[Beta]", "\[LessEqual]", 
             RowBox[{
              FractionBox["\[Pi]", "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}]}]},
           {
            FractionBox["1", "2"], 
            RowBox[{
             RowBox[{
              FractionBox["\[Pi]", "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}], "<", " ", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{"\[Pi]", "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}]}]},
           {
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               RowBox[{"Tan", "[", "\[Beta]", "]"}], " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"12", " ", 
                  SuperscriptBox["A", "2"]}], "-", 
                 SuperscriptBox[
                  RowBox[{"Tan", "[", "\[Beta]", "]"}], "2"]}]]}], 
              SqrtBox[
               RowBox[{
                RowBox[{"48", " ", 
                 SuperscriptBox["A", "4"]}], "+", 
                RowBox[{"24", " ", 
                 SuperscriptBox["A", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Tan", "[", "\[Beta]", "]"}], "2"]}], "-", 
                SuperscriptBox[
                 RowBox[{"Tan", "[", "\[Beta]", "]"}], "4"]}]]]}], 
            RowBox[{
             RowBox[{"\[Pi]", "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", " ", "A"}], "]"}]}], "<", "\[Beta]", 
             "\[LessEqual]", 
             RowBox[{"\[Pi]", "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", " ", "A"}], "]"}]}]}]},
           {
            RowBox[{"-", 
             FractionBox["1", "2"]}], 
            RowBox[{
             RowBox[{"\[Pi]", "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}], "<", " ", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{
              FractionBox[
               RowBox[{"3", "\[Pi]"}], "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}]}]},
           {
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               RowBox[{"Cot", "[", "\[Beta]", "]"}], " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"12", " ", 
                  SuperscriptBox["A", "2"]}], "-", 
                 SuperscriptBox[
                  RowBox[{"Cot", "[", "\[Beta]", "]"}], "2"]}]]}], 
              SqrtBox[
               RowBox[{
                RowBox[{"48", " ", 
                 SuperscriptBox["A", "4"]}], "+", 
                RowBox[{"24", " ", 
                 SuperscriptBox["A", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Cot", "[", "\[Beta]", "]"}], "2"]}], "-", 
                SuperscriptBox[
                 RowBox[{"Cot", "[", "\[Beta]", "]"}], "4"]}]]]}], 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{"3", "\[Pi]"}], "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}], "<", "\[Beta]", "\[LessEqual]", 
             RowBox[{
              FractionBox[
               RowBox[{" ", 
                RowBox[{"3", "\[Pi]"}]}], "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}]}]},
           {
            FractionBox["1", "2"], 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{" ", 
                RowBox[{"3", "\[Pi]"}]}], "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}], "<", " ", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{
              RowBox[{"2", "\[Pi]"}], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{"2", "A"}], "]"}]}]}]}
          },
          AllowedDimensions->{2, Automatic},
          Editable->True,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{1.}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.84]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}},
          Selectable->True]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.35]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      "Piecewise",
      DeleteWithContents->True,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "Input"], 
    StyleBox[",", "Input"], 
    StyleBox["\[IndentingNewLine]", "Input"], 
    RowBox[{
     FractionBox["1", "2"], "<", "A", "<", "1"}], ",", 
    StyleBox["\[IndentingNewLine]", "Input"], 
    StyleBox[
     TagBox[GridBox[{
        {"\[Piecewise]", GridBox[{
           {
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               RowBox[{"Tan", "[", "\[Beta]", "]"}], " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"12", " ", 
                  SuperscriptBox["A", "2"]}], "-", 
                 SuperscriptBox[
                  RowBox[{"Tan", "[", "\[Beta]", "]"}], "2"]}]]}], 
              SqrtBox[
               RowBox[{
                RowBox[{"48", " ", 
                 SuperscriptBox["A", "4"]}], "+", 
                RowBox[{"24", " ", 
                 SuperscriptBox["A", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Tan", "[", "\[Beta]", "]"}], "2"]}], "-", 
                SuperscriptBox[
                 RowBox[{"Tan", "[", "\[Beta]", "]"}], "4"]}]]]}], 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
              "0", "\[LessEqual]", " ", "\[Beta]", "\[LessEqual]", " ", 
               RowBox[{"ArcTan", "[", 
                RowBox[{
                 RowBox[{"1", "/", "2"}], ",", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", "A"}], ")"}]}], "]"}]}], ")"}], " ", "||",
              " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"2", " ", "\[Pi]"}], " ", "-", " ", 
                RowBox[{"ArcTan", "[", 
                 RowBox[{
                  RowBox[{"1", "/", "2"}], ",", 
                  RowBox[{"(", 
                   RowBox[{"1", "-", "A"}], ")"}]}], "]"}]}], " ", "<", " ", 
               "\[Beta]", " ", "\[LessEqual]", "  ", 
               RowBox[{"2", "\[Pi]"}]}], ")"}]}]},
           {
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "A"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"17", "+", 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "5"}], "+", "A"}], ")"}], " ", "A"}], "-", 
                 RowBox[{"6", " ", 
                  SqrtBox["2"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "A"}], ")"}], " ", 
                    RowBox[{"Cot", "[", "\[Beta]", "]"}]}]], "+", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "A"}], ")"}], " ", " ", 
                    RowBox[{"Tan", "[", "\[Beta]", "]"}]}]]}], ")"}]}]}], 
                ")"}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Sqrt]", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "4"}], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "A"}], ")"}], "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{"2", "+", "A"}], ")"}], " ", 
                   RowBox[{"Cot", "[", "\[Beta]", "]"}]}], "+", 
                  RowBox[{"3", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "3"}], "+", 
                    RowBox[{"4", "A"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "A"}], ")"}], "4", " ", 
                    SqrtBox["2"], " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "A"}], ")"}], " ", " ", 
                    RowBox[{"Cot", "[", "\[Beta]", "]"}]}]]}]}], ")"}]}]}], 
                 ")"}]}], " ", 
               RowBox[{"\[Sqrt]", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "4"}], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "A"}], ")"}], "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{"2", "+", "A"}], ")"}], " ", 
                   RowBox[{"Tan", "[", "\[Beta]", "]"}]}], "+", 
                  RowBox[{"3", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "3"}], "+", 
                    RowBox[{"4", "A"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "A"}], ")"}], "4", " ", 
                    SqrtBox["2"], " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "A"}], ")"}], " ", " ", 
                    RowBox[{"Tan", "[", "\[Beta]", "]"}]}]]}]}], ")"}]}]}], 
                 ")"}]}]}], ")"}]}], 
            RowBox[{
             RowBox[{"ArcTan", "[", 
              RowBox[{
               RowBox[{"1", "/", "2"}], ",", 
               RowBox[{"(", 
                RowBox[{"1", "-", "A"}], ")"}]}], "]"}], "<", " ", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{
              FractionBox["\[Pi]", "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}]}]},
           {
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               RowBox[{"Cot", "[", "\[Beta]", "]"}], " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"12", " ", 
                  SuperscriptBox["A", "2"]}], "-", 
                 SuperscriptBox[
                  RowBox[{"Cot", "[", "\[Beta]", "]"}], "2"]}]]}], 
              SqrtBox[
               RowBox[{
                RowBox[{"48", " ", 
                 SuperscriptBox["A", "4"]}], "+", 
                RowBox[{"24", " ", 
                 SuperscriptBox["A", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Cot", "[", "\[Beta]", "]"}], "2"]}], "-", 
                SuperscriptBox[
                 RowBox[{"Cot", "[", "\[Beta]", "]"}], "4"]}]]]}], 
            RowBox[{
             RowBox[{
              FractionBox["\[Pi]", "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}], "<", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{
              FractionBox["\[Pi]", "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}]}]},
           {
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "A"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{"17", "+", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "5"}], "+", "A"}], ")"}], " ", "A"}], "-", 
                  RowBox[{"6", " ", 
                   SqrtBox["2"], " ", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"A", "-", "1"}], ")"}], " ", 
                    RowBox[{"Cot", "[", "\[Beta]", "]"}]}]]}], "-", 
                  RowBox[{"6", " ", 
                   SqrtBox["2"], " ", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"A", "-", "1"}], ")"}], " ", 
                    RowBox[{"Tan", "[", "\[Beta]", "]"}]}]]}]}], ")"}]}], 
               ")"}]}], "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Sqrt]", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"4", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "A"}], ")"}], "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{"2", "+", "A"}], ")"}], " ", 
                   RowBox[{"Cot", "[", "\[Beta]", "]"}]}], "+", 
                  RowBox[{"3", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "3"}], "+", 
                    RowBox[{"4", "A"}], " ", "+", 
                    RowBox[{"4", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "A"}], ")"}], 
                    SqrtBox["2"], " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"A", "-", "1"}], ")"}], " ", 
                    RowBox[{"Cot", "[", "\[Beta]", "]"}]}]]}]}], ")"}]}]}], 
                 ")"}]}], " ", 
               RowBox[{"\[Sqrt]", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"4", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "A"}], ")"}], "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{"2", "+", "A"}], ")"}], " ", 
                   RowBox[{"Tan", "[", "\[Beta]", "]"}]}], "+", 
                  RowBox[{"3", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "3"}], "+", 
                    RowBox[{"4", "A"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "A"}], ")"}], "4", " ", 
                    SqrtBox["2"], " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"A", "-", "1"}], ")"}], 
                    RowBox[{"Tan", "[", "\[Beta]", "]"}]}]]}]}], ")"}]}]}], 
                 ")"}]}]}], ")"}]}], 
            RowBox[{
             RowBox[{
              FractionBox["\[Pi]", "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}], "<", " ", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{"\[Pi]", "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}]}]},
           {
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               RowBox[{"Tan", "[", "\[Beta]", "]"}], " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"12", " ", 
                  SuperscriptBox["A", "2"]}], "-", 
                 SuperscriptBox[
                  RowBox[{"Tan", "[", "\[Beta]", "]"}], "2"]}]]}], 
              SqrtBox[
               RowBox[{
                RowBox[{"48", " ", 
                 SuperscriptBox["A", "4"]}], "+", 
                RowBox[{"24", " ", 
                 SuperscriptBox["A", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Tan", "[", "\[Beta]", "]"}], "2"]}], "-", 
                SuperscriptBox[
                 RowBox[{"Tan", "[", "\[Beta]", "]"}], "4"]}]]]}], 
            RowBox[{
             RowBox[{"\[Pi]", "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", " ", "A"}]}], "]"}]}], "<", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{"\[Pi]", "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", " ", "A"}]}], "]"}]}]}]},
           {
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "A"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"17", "+", 
                 RowBox[{"2", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "5"}], "+", "A"}], ")"}], " ", "A"}], "-", 
                 RowBox[{"6", " ", 
                  SqrtBox["2"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "A"}], ")"}], " ", 
                    RowBox[{"Cot", "[", "\[Beta]", "]"}]}]], "+", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "A"}], ")"}], " ", " ", 
                    RowBox[{"Tan", "[", "\[Beta]", "]"}]}]]}], ")"}]}]}], 
                ")"}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Sqrt]", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "4"}], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "A"}], ")"}], "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{"2", "+", "A"}], ")"}], " ", 
                   RowBox[{"Cot", "[", "\[Beta]", "]"}]}], "+", 
                  RowBox[{"3", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "3"}], "+", 
                    RowBox[{"4", "A"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "A"}], ")"}], "4", " ", 
                    SqrtBox["2"], " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "A"}], ")"}], " ", " ", 
                    RowBox[{"Cot", "[", "\[Beta]", "]"}]}]]}]}], ")"}]}]}], 
                 ")"}]}], " ", 
               RowBox[{"\[Sqrt]", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "4"}], " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "A"}], ")"}], "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{"2", "+", "A"}], ")"}], " ", 
                   RowBox[{"Tan", "[", "\[Beta]", "]"}]}], "+", 
                  RowBox[{"3", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "3"}], "+", 
                    RowBox[{"4", "A"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "A"}], ")"}], "4", " ", 
                    SqrtBox["2"], " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "A"}], ")"}], " ", " ", 
                    RowBox[{"Tan", "[", "\[Beta]", "]"}]}]]}]}], ")"}]}]}], 
                 ")"}]}]}], ")"}]}], 
            RowBox[{
             RowBox[{"\[Pi]", "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}], "<", " ", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{
              FractionBox[
               RowBox[{"3", "\[Pi]"}], "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}]}]},
           {
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               RowBox[{"Cot", "[", "\[Beta]", "]"}], " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"12", " ", 
                  SuperscriptBox["A", "2"]}], "-", 
                 SuperscriptBox[
                  RowBox[{"Cot", "[", "\[Beta]", "]"}], "2"]}]]}], 
              SqrtBox[
               RowBox[{
                RowBox[{"48", " ", 
                 SuperscriptBox["A", "4"]}], "+", 
                RowBox[{"24", " ", 
                 SuperscriptBox["A", "2"], " ", 
                 SuperscriptBox[
                  RowBox[{"Cot", "[", "\[Beta]", "]"}], "2"]}], "-", 
                SuperscriptBox[
                 RowBox[{"Cot", "[", "\[Beta]", "]"}], "4"]}]]]}], 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{"3", "\[Pi]"}], "2"], "-", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}], "<", "\[Beta]", 
             "\[LessEqual]", " ", 
             RowBox[{
              FractionBox[
               RowBox[{" ", 
                RowBox[{"3", "\[Pi]"}]}], "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}]}]},
           {
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "A"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{"17", "+", 
                  RowBox[{"2", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "5"}], "+", "A"}], ")"}], " ", "A"}], "-", 
                  RowBox[{"6", " ", 
                   SqrtBox["2"], " ", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"A", "-", "1"}], ")"}], " ", 
                    RowBox[{"Cot", "[", "\[Beta]", "]"}]}]]}], "-", 
                  RowBox[{"6", " ", 
                   SqrtBox["2"], " ", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"A", "-", "1"}], ")"}], " ", 
                    RowBox[{"Tan", "[", "\[Beta]", "]"}]}]]}]}], ")"}]}], 
               ")"}]}], "/", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Sqrt]", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"4", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "A"}], ")"}], "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{"2", "+", "A"}], ")"}], " ", 
                   RowBox[{"Cot", "[", "\[Beta]", "]"}]}], "+", 
                  RowBox[{"3", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "3"}], "+", 
                    RowBox[{"4", "A"}], " ", "+", 
                    RowBox[{"4", " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", "A"}], ")"}], 
                    SqrtBox["2"], " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"A", "-", "1"}], ")"}], " ", 
                    RowBox[{"Cot", "[", "\[Beta]", "]"}]}]]}]}], ")"}]}]}], 
                 ")"}]}], " ", 
               RowBox[{"\[Sqrt]", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"4", " ", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "A"}], ")"}], "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{"2", "+", "A"}], ")"}], " ", 
                   RowBox[{"Tan", "[", "\[Beta]", "]"}]}], "+", 
                  RowBox[{"3", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "3"}], "+", 
                    RowBox[{"4", "A"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "A"}], ")"}], "4", " ", 
                    SqrtBox["2"], " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"A", "-", "1"}], ")"}], 
                    RowBox[{"Tan", "[", "\[Beta]", "]"}]}]]}]}], ")"}]}]}], 
                 ")"}]}]}], ")"}]}], 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{" ", 
                RowBox[{"3", "\[Pi]"}]}], "2"], "+", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"1", "-", "A"}]}], "]"}]}], "<", " ", "\[Beta]", 
             "\[LessEqual]", 
             RowBox[{
              RowBox[{"2", " ", "\[Pi]"}], " ", "-", " ", 
              RowBox[{"ArcTan", "[", 
               RowBox[{
                RowBox[{"1", "/", "2"}], ",", 
                RowBox[{"(", 
                 RowBox[{"1", "-", "A"}], ")"}]}], "]"}]}]}]}
          },
          AllowedDimensions->{2, Automatic},
          Editable->True,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{1.}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.84]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}},
          Selectable->True]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.35]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      "Piecewise",
      DeleteWithContents->True,
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "Input"], 
    StyleBox[",", "Input"], 
    StyleBox["\[IndentingNewLine]", "Input"], 
    RowBox[{
     StyleBox["A", "Input"], 
     StyleBox["\[Equal]", "Input"], "1"}], ",", "0"}], "]"}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Corxy", "[", 
    RowBox[{
     RowBox[{"3", 
      RowBox[{"\[Pi]", "/", "4"}]}], ",", "A"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"A", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Gravity\>\"", ",", "\"\<Friction\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Bottom", ",", "Center"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<A\>\"", ",", "\"\<Corr\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.688776142496195*^9, 3.688776208046105*^9}, {
  3.688783044368784*^9, 3.688783044658894*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{InsetBox[
     GraphicsBox[{{{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJxF1Xk0lVsfB3BDRbqEqxApkjJFOmlSX5fSK4lI6EYiUclw1S1NN7ecogEh
JZV5qjcyFGWmqMxDhjjP85x0MuWpZMzhfd53rffcvdZee33+2r+9v7+9tqqr
j427iJCQUBQz/7vucO9tLO2z2yL0v0HiUuC10yGKl/F/HzpBKwYrRgosHmke
//VbksDPGwy2b1fJFNjhUldnxbVcgX2e+uve+VEg8Pew99XCwiUCV5e9Lqk3
Khf4SIC5pONgpcBlcw1mHh+vEjglsXJ60fK3AhsvLEqwfVIjsG5VV/5rrXqB
W4xth9KHGgT2kjjW1KrfJPC7dvsiqZvNAtuaOVA9PS0CG8Zds49Tfy8wOR3R
4vlXm8CfzOsTF1a0C5x1lwhoVO0UOPmqaLDmmQ8Cj7jt6z/8skvgeVvZNk/l
OQKfk/70C7WfENjtUZl55ON/vMPsAXv71D+eEjN0imfWjUNDgzMzBFoGlcdU
REmwKqZ1phk/ahQNj53N1BkYqTTJ+O9n/VqLxElILrZ8MczY8V5jZbQEiV81
KyQGGOtfzHdeIMnkyLkpRTIWc384fms+ic0qZlVNjDnm7FvSsiQenDxnWME4
b9VxnZtyJLLVKpyeMr7+657X8+SZXOXTt9xnfGh8o0uwIpPbzItONuNN3aqT
c5SZXI0vrfFmLFsuHnlZhUS3SMgOW8b9KbSuiCqJm3p2qoaM7/gWHeQvJ1Hk
sk1uZJqAj13SzzMrSSzUO7amkbHZxmtR41okvs22V3jEeETU8c2wHgmZ80c3
ODCu6YWbnwGJg7GBp7UZJ9Vq8IdYzH6vN1+a4hOwif6h37+BxJcRL+E7jDXP
fXjrYUSCeFB8ypWx0MHyQ5+2kLib8EeJFuNMrbA7pCmJLse06lwmh1+KtYXa
LEmUH/Hoe/KTwJedS3NDrJk8eP0jBxnXfZDz3GJLwjpJ/4Is49AJfn2yA4mT
Kp/FvSaZ869teHjCjcTSuDRD4QkCwxWVtisPk1hWPmEdN87kaVMg1uXJ3O9E
2A8jxlG+CT6m3iQcndQ43mMEFB6fgGwAiWZqvWfeCIGJjUeGX50lgRjWpDHj
zjdOqQEXSAxy9qq9/UHg3mez+dQlEsHZ1ptahwmoLFMkMm+S8A498LLuGwH1
mKILlkkkQgz8zay/EJitmW0gnEpijtmTb3mDBHjPU3i56STm8sUtFBmntobu
Us4kcXl5rWRHPwEtGVeVgQLmXa3/PGnUy/TT1TnFV+tJ8PvXpUZzCcjI//Qz
aiLR05HR2U4R+J5ML//aQuKhr0STPOOcivYb9p0k+kwKZUIJAoYzGU4an0iI
qD8fd+0isPlPK37FJAk/aaPz8a0ERo/2njXnkxgadc6qayGQdSBwsm6GhMEd
tshkMwE185yxjlkUAlULxCyaCIgry3+npShc7mZlva9j7reMw1NaRsFGKtw8
qoqAl6R3g78Fhd1VXl15zwloiIhZTVhSKFbYkZP2jAAx+rD2gjWF6cO+r+7m
Mf1DNr4NtqOw83jjgz9zCKzPWfvq4QEK4UkbjJQyCcxy5Be886cg1vqiQTqF
QGzS9cRlsRTeBR5JyL5F4IDpGiPiAYWaLxKLbcOZerkdLTHxFHjDfQ+/hRJI
W7JijmwqBbnLrWUrbxDIjSnzFMqmcNtv582/rjD9HTaq211Fwd9naFbDWQL8
cy75t4cpDBm7ioq4EXC2Y9XOteDCYJWhR7M2ARcly7h8Sy7arrjGz9IicJBy
9/ew5iJMJ1+NtZJ5r8ejFV/ZccGVWcq/oU7gSNCk+0UXLtSHTy/VXUzgRF7p
9OhJLroH9t5TlCIQssBSvyeOi4vaF8UzhzjIa3WPKB7l4vQ9OoiXwUGY8LLV
mOCiY51Oc3MaB0d1ybqSn1xcsVr8siSFA5WgfRJlQh/Brd2/PyKBAzbLKrBC
4iPK948OasZwsDdivU+1ykfcOGwSIhfMwZj1PIsms4/I6Ax7SblzsKEmS4R3
+yOac1bXHFXiYOm2wyMRW3uw7hph/tKjG2tZa8NzeT3Y1VDwu2pGF4jvN94k
Bn2Cj1Wnjk7XBwyu2R2kaMCDVYTNImdeJzQGdPuFm3nQ6y66LDHYgUr1k02+
gZ/hNHWqJPhVO0JbWt1s1HsxE/7+qkdsG2jb0nCRyl6YrA1k17u9R7bdAtMN
fn2YPrM4edl4CxJrL93nyvZDziGcnX+9GWNV+8/KlvfjtPzW2oDPjSDDS0ak
vQcwI5NUHaHTgNHGTYp/Sw1CQfur6UdeDXwj1UoDCgdRP6VXqNxbDflaNeke
5y/o3P17S0FvJWxbH08pT39BYJh02+ncUnw/EO/VlTGEc3N9V7PYz1Hikhkk
tZPGyKKh1QPPMvCi3suCs4vGToecrS/2ZuDZFi2ZJ7tp8DwT0qxH0/FYOTnW
0p5G7fypogZWOmLaY3Kuu9JItPc5L5GZipPWbEoigGb+GxXL3OgkaBs7bRZL
obHN+T1OuMdCI3ORaFsaDffg6q3bI+5BTaW9OuURjWT2qXqn0hgoTNnsMXtK
I2yFeoipwl3Myf/XsaBCGrLCftWHiqNA6bHuijbT2NeoOP3vwhvoevDNubmV
honzPLP5P6+hXTJTPbGdxp4V6eYi60JQN6CZZcKhEfHOREM9lY3C1CVVgX00
YqWkx5SqLyB/Yff13YM0zt1f4/XHgrPICYqxUaVpKMW0urzddwoZbgs4pT+Y
+kWvioxH+CC5qSkxbIxGnmSoczzXA3G/hR1xmaQxvcvrN7OFLojNstTT59PQ
eeOgdnuXNaKXzBuZmaHBWqEQtcrbd8t/AI7LkNQ=
          "]]}}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"A\"", TraditionalForm], 
        FormBox["\"Corr\"", TraditionalForm]},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
      PlotLabel->None,
      PlotRange->{{0, 1}, {0., 0.5}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], Scaled[{0.5, 0.5}], Center, 
     Scaled[{1, 1}]], InsetBox[
     TemplateBox[{"\"Gravity\"","\"Friction\""},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& )], 
     Scaled[{0.5, -0.01}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->False,
   AxesLabel->{
     FormBox["\"A\"", TraditionalForm], 
     FormBox["\"Corr\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->False,
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   ImagePadding->All,
   Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
   PlotLabel->None,
   PlotRange->Automatic,
   PlotRangeClipping->False,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1:eJxF1Xk0lVsfB3BDRbqEqxApkjJFOmlSX5fSK4lI6EYiUclw1S1NN7ecogEh
JZV5qjcyFGWmqMxDhjjP85x0MuWpZMzhfd53rffcvdZee33+2r+9v7+9tqqr
j427iJCQUBQz/7vucO9tLO2z2yL0v0HiUuC10yGKl/F/HzpBKwYrRgosHmke
//VbksDPGwy2b1fJFNjhUldnxbVcgX2e+uve+VEg8Pew99XCwiUCV5e9Lqk3
Khf4SIC5pONgpcBlcw1mHh+vEjglsXJ60fK3AhsvLEqwfVIjsG5VV/5rrXqB
W4xth9KHGgT2kjjW1KrfJPC7dvsiqZvNAtuaOVA9PS0CG8Zds49Tfy8wOR3R
4vlXm8CfzOsTF1a0C5x1lwhoVO0UOPmqaLDmmQ8Cj7jt6z/8skvgeVvZNk/l
OQKfk/70C7WfENjtUZl55ON/vMPsAXv71D+eEjN0imfWjUNDgzMzBFoGlcdU
REmwKqZ1phk/ahQNj53N1BkYqTTJ+O9n/VqLxElILrZ8MczY8V5jZbQEiV81
KyQGGOtfzHdeIMnkyLkpRTIWc384fms+ic0qZlVNjDnm7FvSsiQenDxnWME4
b9VxnZtyJLLVKpyeMr7+657X8+SZXOXTt9xnfGh8o0uwIpPbzItONuNN3aqT
c5SZXI0vrfFmLFsuHnlZhUS3SMgOW8b9KbSuiCqJm3p2qoaM7/gWHeQvJ1Hk
sk1uZJqAj13SzzMrSSzUO7amkbHZxmtR41okvs22V3jEeETU8c2wHgmZ80c3
ODCu6YWbnwGJg7GBp7UZJ9Vq8IdYzH6vN1+a4hOwif6h37+BxJcRL+E7jDXP
fXjrYUSCeFB8ypWx0MHyQ5+2kLib8EeJFuNMrbA7pCmJLse06lwmh1+KtYXa
LEmUH/Hoe/KTwJedS3NDrJk8eP0jBxnXfZDz3GJLwjpJ/4Is49AJfn2yA4mT
Kp/FvSaZ869teHjCjcTSuDRD4QkCwxWVtisPk1hWPmEdN87kaVMg1uXJ3O9E
2A8jxlG+CT6m3iQcndQ43mMEFB6fgGwAiWZqvWfeCIGJjUeGX50lgRjWpDHj
zjdOqQEXSAxy9qq9/UHg3mez+dQlEsHZ1ptahwmoLFMkMm+S8A498LLuGwH1
mKILlkkkQgz8zay/EJitmW0gnEpijtmTb3mDBHjPU3i56STm8sUtFBmntobu
Us4kcXl5rWRHPwEtGVeVgQLmXa3/PGnUy/TT1TnFV+tJ8PvXpUZzCcjI//Qz
aiLR05HR2U4R+J5ML//aQuKhr0STPOOcivYb9p0k+kwKZUIJAoYzGU4an0iI
qD8fd+0isPlPK37FJAk/aaPz8a0ERo/2njXnkxgadc6qayGQdSBwsm6GhMEd
tshkMwE185yxjlkUAlULxCyaCIgry3+npShc7mZlva9j7reMw1NaRsFGKtw8
qoqAl6R3g78Fhd1VXl15zwloiIhZTVhSKFbYkZP2jAAx+rD2gjWF6cO+r+7m
Mf1DNr4NtqOw83jjgz9zCKzPWfvq4QEK4UkbjJQyCcxy5Be886cg1vqiQTqF
QGzS9cRlsRTeBR5JyL5F4IDpGiPiAYWaLxKLbcOZerkdLTHxFHjDfQ+/hRJI
W7JijmwqBbnLrWUrbxDIjSnzFMqmcNtv582/rjD9HTaq211Fwd9naFbDWQL8
cy75t4cpDBm7ioq4EXC2Y9XOteDCYJWhR7M2ARcly7h8Sy7arrjGz9IicJBy
9/ew5iJMJ1+NtZJ5r8ejFV/ZccGVWcq/oU7gSNCk+0UXLtSHTy/VXUzgRF7p
9OhJLroH9t5TlCIQssBSvyeOi4vaF8UzhzjIa3WPKB7l4vQ9OoiXwUGY8LLV
mOCiY51Oc3MaB0d1ybqSn1xcsVr8siSFA5WgfRJlQh/Brd2/PyKBAzbLKrBC
4iPK948OasZwsDdivU+1ykfcOGwSIhfMwZj1PIsms4/I6Ax7SblzsKEmS4R3
+yOac1bXHFXiYOm2wyMRW3uw7hph/tKjG2tZa8NzeT3Y1VDwu2pGF4jvN94k
Bn2Cj1Wnjk7XBwyu2R2kaMCDVYTNImdeJzQGdPuFm3nQ6y66LDHYgUr1k02+
gZ/hNHWqJPhVO0JbWt1s1HsxE/7+qkdsG2jb0nCRyl6YrA1k17u9R7bdAtMN
fn2YPrM4edl4CxJrL93nyvZDziGcnX+9GWNV+8/KlvfjtPzW2oDPjSDDS0ak
vQcwI5NUHaHTgNHGTYp/Sw1CQfur6UdeDXwj1UoDCgdRP6VXqNxbDflaNeke
5y/o3P17S0FvJWxbH08pT39BYJh02+ncUnw/EO/VlTGEc3N9V7PYz1Hikhkk
tZPGyKKh1QPPMvCi3suCs4vGToecrS/2ZuDZFi2ZJ7tp8DwT0qxH0/FYOTnW
0p5G7fypogZWOmLaY3Kuu9JItPc5L5GZipPWbEoigGb+GxXL3OgkaBs7bRZL
obHN+T1OuMdCI3ORaFsaDffg6q3bI+5BTaW9OuURjWT2qXqn0hgoTNnsMXtK
I2yFeoipwl3Myf/XsaBCGrLCftWHiqNA6bHuijbT2NeoOP3vwhvoevDNubmV
honzPLP5P6+hXTJTPbGdxp4V6eYi60JQN6CZZcKhEfHOREM9lY3C1CVVgX00
YqWkx5SqLyB/Yff13YM0zt1f4/XHgrPICYqxUaVpKMW0urzddwoZbgs4pT+Y
+kWvioxH+CC5qSkxbIxGnmSoczzXA3G/hR1xmaQxvcvrN7OFLojNstTT59PQ
eeOgdnuXNaKXzBuZmaHBWqEQtcrbd8t/AI7LkNQ=
         "]]}}}, {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {"A", "Corr"}, AxesOrigin -> {0, 0}, 
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
      PlotRange -> {{0, 1}, {0., 0.5}}, PlotRangeClipping -> True, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]]}, {"Gravity", "Friction"}, LabelStyle -> {}, 
       LegendLayout -> "Row"]], {Bottom, Center}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{3.6887762086640987`*^9, 3.688783045280374*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Compute Values for a linear friction boundray layer  Assuming ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    FractionBox["A", "w"], ">", "h"}], ","}]], "Section",
  CellChangeTimes->{{3.6887800422503023`*^9, 3.688780151967244*^9}, {
   3.688780201200439*^9, 3.688780242195237*^9}, {3.6887802910017443`*^9, 
   3.688780291397174*^9}, {3.688780354790943*^9, 3.688780355097939*^9}, {
   3.688780457770368*^9, 3.6887804581183987`*^9}, {3.688780578649118*^9, 
   3.6887805789066153`*^9}, {3.688780992668132*^9, 3.6887810099475317`*^9}, {
   3.688781066542527*^9, 3.688781268341626*^9}, {3.688781792781948*^9, 
   3.688781811473839*^9}, {3.6887818798024683`*^9, 3.6887819072403097`*^9}}]
}], "Subsection",
 CellChangeTimes->{{3.6887804653965893`*^9, 3.68878047971577*^9}, {
  3.688781929583479*^9, 3.688781935938836*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"xave", " ", "=", " ", 
  RowBox[{"Simplify", "[", 
   RowBox[{"(*", 
    RowBox[{"rectangular", " ", "part"}], "*)"}], 
   FractionBox[
    RowBox[{
     RowBox[{
      SubsuperscriptBox["\[Integral]", "h", 
       FractionBox["A", "w"]], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubsuperscriptBox["\[Integral]", "L", 
          RowBox[{"L", "+", "w"}]], 
         RowBox[{"x", 
          RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], 
       RowBox[{"\[DifferentialD]", "y"}]}]}], "+", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "h"], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubsuperscriptBox["\[Integral]", 
          RowBox[{
           FractionBox["L", "h"], "y"}], 
          RowBox[{"w", "+", 
           RowBox[{
            FractionBox["L", "h"], "y"}]}]], 
         RowBox[{"x", 
          RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], 
       RowBox[{"\[DifferentialD]", "y"}]}]}]}], "A"], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"yave", " ", "=", " ", 
  RowBox[{"Simplify", "[", 
   RowBox[{"(*", 
    RowBox[{"rectangular", " ", "part"}], "*)"}], 
   FractionBox[
    RowBox[{
     RowBox[{
      SubsuperscriptBox["\[Integral]", "h", 
       FractionBox["A", "w"]], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubsuperscriptBox["\[Integral]", "L", 
          RowBox[{"L", "+", "w"}]], 
         RowBox[{"y", 
          RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], 
       RowBox[{"\[DifferentialD]", "y"}]}]}], "+", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "h"], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubsuperscriptBox["\[Integral]", 
          RowBox[{
           FractionBox["L", "h"], "y"}], 
          RowBox[{"w", "+", 
           RowBox[{
            FractionBox["L", "h"], "y"}]}]], 
         RowBox[{"y", 
          RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], 
       RowBox[{"\[DifferentialD]", "y"}]}]}]}], "A"], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"xvar", "=", " ", 
  RowBox[{
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{"(*", 
       RowBox[{"rectangular", " ", "part"}], "*)"}], 
      FractionBox[
       RowBox[{
        SubsuperscriptBox["\[Integral]", "h", 
         FractionBox["A", "w"]], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", "L", 
            RowBox[{"L", "+", "w"}]], 
           RowBox[{
            SuperscriptBox["x", "2"], 
            RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], 
         RowBox[{"\[DifferentialD]", "y"}]}]}], "A"], "]"}], "+", 
     RowBox[{"Simplify", "[", 
      RowBox[{"(*", 
       RowBox[{"parallelogram", " ", "part"}], "*)"}], 
      FractionBox[
       RowBox[{
        SubsuperscriptBox["\[Integral]", "0", "h"], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", 
            RowBox[{
             FractionBox["L", "h"], "y"}], 
            RowBox[{"w", "+", 
             RowBox[{
              FractionBox["L", "h"], "y"}]}]], 
           RowBox[{
            SuperscriptBox["x", "2"], 
            RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], 
         RowBox[{"\[DifferentialD]", "y"}]}]}], "A"], "]"}]}], "]"}], "-", 
   SuperscriptBox["xave", "2"]}]}], "\[IndentingNewLine]", 
 RowBox[{"yvar", " ", "=", " ", 
  RowBox[{
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{"(*", 
       RowBox[{"rectangular", " ", "part"}], "*)"}], 
      FractionBox[
       RowBox[{
        SubsuperscriptBox["\[Integral]", "h", 
         FractionBox["A", "w"]], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", "L", 
            RowBox[{"L", "+", "w"}]], 
           RowBox[{
            SuperscriptBox["y", "2"], 
            RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], 
         RowBox[{"\[DifferentialD]", "y"}]}]}], "A"], "]"}], "+", 
     RowBox[{"Simplify", "[", 
      RowBox[{"(*", 
       RowBox[{"parallelogram", " ", "part"}], "*)"}], 
      FractionBox[
       RowBox[{
        SubsuperscriptBox["\[Integral]", "0", "h"], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", 
            RowBox[{
             FractionBox["L", "h"], "y"}], 
            RowBox[{"w", "+", 
             RowBox[{
              FractionBox["L", "h"], "y"}]}]], 
           RowBox[{
            SuperscriptBox["y", "2"], 
            RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], 
         RowBox[{"\[DifferentialD]", "y"}]}]}], "A"], "]"}]}], "]"}], "-", 
   SuperscriptBox["yave", "2"]}]}], "\[IndentingNewLine]", 
 RowBox[{"covxy", " ", "=", " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{"(*", 
       RowBox[{"rectangular", " ", "part"}], "*)"}], 
      FractionBox[
       RowBox[{
        SubsuperscriptBox["\[Integral]", "h", 
         FractionBox["A", "w"]], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", "L", 
            RowBox[{"L", "+", "w"}]], 
           RowBox[{"x", "*", "y", 
            RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], 
         RowBox[{"\[DifferentialD]", "y"}]}]}], "A"], "]"}], "+", 
     RowBox[{"Simplify", "[", 
      RowBox[{"(*", 
       RowBox[{"parallelogram", " ", "part"}], "*)"}], 
      FractionBox[
       RowBox[{
        SubsuperscriptBox["\[Integral]", "0", "h"], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", 
            RowBox[{
             FractionBox["L", "h"], "y"}], 
            RowBox[{"w", "+", 
             RowBox[{
              FractionBox["L", "h"], "y"}]}]], 
           RowBox[{"x", "*", "y", 
            RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], 
         RowBox[{"\[DifferentialD]", "y"}]}]}], "A"], "]"}]}], "]"}], "-", 
   RowBox[{"xave", "*", "yave"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"corxy", "=", 
  RowBox[{"FullSimplify", "[", 
   FractionBox["covxy", 
    RowBox[{
     RowBox[{"Sqrt", "[", "xvar", "]"}], "*", 
     RowBox[{"Sqrt", "[", "yvar", "]"}]}]], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6887800422503023`*^9, 3.688780151967244*^9}, {
  3.688780201200439*^9, 3.688780242195237*^9}, {3.6887802910017443`*^9, 
  3.688780291397174*^9}, {3.688780354790943*^9, 3.688780355097939*^9}, {
  3.688780457770368*^9, 3.6887804581183987`*^9}, {3.688780578649118*^9, 
  3.6887805789066153`*^9}, {3.688780992668132*^9, 3.6887810099475317`*^9}, {
  3.688781066542527*^9, 3.688781268341626*^9}, {3.688781792781948*^9, 
  3.688781811473839*^9}, {3.6887818798024683`*^9, 3.6887819072403097`*^9}, {
  3.688781938886784*^9, 3.68878194517183*^9}, {3.688920863200222*^9, 
  3.688920885524126*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"h", " ", "w", " ", 
    RowBox[{"(", 
     RowBox[{"L", "+", "w"}], ")"}]}], 
   RowBox[{"2", " ", "A"}]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", "L"}], "+", "w"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"A", "-", 
      RowBox[{"h", " ", "w"}]}], ")"}]}], 
   RowBox[{"2", " ", "A"}]]}]], "Output",
 CellChangeTimes->{3.6887823677568073`*^9}],

Cell[BoxData[
 FractionBox["A", 
  RowBox[{"2", " ", "w"}]]], "Output",
 CellChangeTimes->{3.688782367797431*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"h", " ", "w", " ", 
        RowBox[{"(", 
         RowBox[{"L", "+", "w"}], ")"}]}], 
       RowBox[{"2", " ", "A"}]], "+", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "L"}], "+", "w"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"A", "-", 
          RowBox[{"h", " ", "w"}]}], ")"}]}], 
       RowBox[{"2", " ", "A"}]]}], ")"}], "2"]}], "+", 
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"-", "h"}], " ", "L", " ", "w", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"4", " ", "L"}], "+", 
       RowBox[{"3", " ", "w"}]}], ")"}]}], "+", 
    RowBox[{"2", " ", "A", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"3", " ", 
        SuperscriptBox["L", "2"]}], "+", 
       RowBox[{"3", " ", "L", " ", "w"}], "+", 
       SuperscriptBox["w", "2"]}], ")"}]}]}], 
   RowBox[{"6", " ", "A"}]]}]], "Output",
 CellChangeTimes->{3.688782367875392*^9}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["A", "2"], 
  RowBox[{"12", " ", 
   SuperscriptBox["w", "2"]}]]], "Output",
 CellChangeTimes->{3.688782367914318*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["h", "2"], " ", "L", " ", "w"}], 
    RowBox[{"6", " ", "A"}]]}], "+", 
  FractionBox[
   RowBox[{"A", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", "L"}], "+", "w"}], ")"}]}], 
   RowBox[{"4", " ", "w"}]], "-", 
  FractionBox[
   RowBox[{"A", " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"h", " ", "w", " ", 
        RowBox[{"(", 
         RowBox[{"L", "+", "w"}], ")"}]}], 
       RowBox[{"2", " ", "A"}]], "+", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "L"}], "+", "w"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"A", "-", 
          RowBox[{"h", " ", "w"}]}], ")"}]}], 
       RowBox[{"2", " ", "A"}]]}], ")"}]}], 
   RowBox[{"2", " ", "w"}]]}]], "Output",
 CellChangeTimes->{3.6887823680027313`*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"h", " ", "L", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"3", " ", "A"}], "-", 
     RowBox[{"2", " ", "h", " ", "w"}]}], ")"}]}], 
  RowBox[{"A", " ", 
   SqrtBox[
    FractionBox[
     SuperscriptBox["A", "2"], 
     SuperscriptBox["w", "2"]]], " ", 
   SqrtBox[
    FractionBox[
     RowBox[{"w", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4", " ", "A", " ", "h", " ", 
         SuperscriptBox["L", "2"]}], "+", 
        RowBox[{
         SuperscriptBox["A", "2"], " ", "w"}], "-", 
        RowBox[{"3", " ", 
         SuperscriptBox["h", "2"], " ", 
         SuperscriptBox["L", "2"], " ", "w"}]}], ")"}]}], 
     SuperscriptBox["A", "2"]]]}]]], "Output",
 CellChangeTimes->{3.688782368195155*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Compute Values for a linear friction boundray layer  Assuming ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    FractionBox["A", "w"], "<", "h"}], ","}]], "Section",
  CellChangeTimes->{{3.6887800422503023`*^9, 3.688780151967244*^9}, {
   3.688780201200439*^9, 3.688780242195237*^9}, {3.6887802910017443`*^9, 
   3.688780291397174*^9}, {3.688780354790943*^9, 3.688780355097939*^9}, {
   3.688780457770368*^9, 3.6887804581183987`*^9}, {3.688780578649118*^9, 
   3.6887805789066153`*^9}, {3.688780992668132*^9, 3.6887810099475317`*^9}, {
   3.688781066542527*^9, 3.688781268341626*^9}, {3.688781792781948*^9, 
   3.688781811473839*^9}, {3.6887818798024683`*^9, 3.6887819072403097`*^9}}],
 "Error: sum everything, then divide by A "
}], "Subsection",
 CellChangeTimes->{{3.6887804653965893`*^9, 3.68878047971577*^9}, {
  3.688781929583479*^9, 3.688781935938836*^9}, {3.6887823163795557`*^9, 
  3.6887823163797197`*^9}, {3.6889208969100637`*^9, 3.688920912511353*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"xave", " ", "=", " ", 
  RowBox[{"Simplify", "[", 
   RowBox[{"(*", 
    RowBox[{"parallelogram", " ", "part"}], "*)"}], 
   FractionBox[
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "h"], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubsuperscriptBox["\[Integral]", 
         RowBox[{
          FractionBox["L", "h"], "y"}], 
         RowBox[{"w", "+", 
          RowBox[{
           FractionBox["L", "h"], "y"}]}]], 
        RowBox[{"x", 
         RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], 
      RowBox[{"\[DifferentialD]", "y"}]}]}], "A"], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"yave", " ", "=", " ", 
  RowBox[{"Simplify", "[", 
   RowBox[{"(*", 
    RowBox[{"parallelogram", " ", "part"}], "*)"}], 
   FractionBox[
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "h"], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubsuperscriptBox["\[Integral]", 
         RowBox[{
          FractionBox["L", "h"], "y"}], 
         RowBox[{"w", "+", 
          RowBox[{
           FractionBox["L", "h"], "y"}]}]], 
        RowBox[{"y", 
         RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], 
      RowBox[{"\[DifferentialD]", "y"}]}]}], "A"], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"xvar", "=", 
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{"(*", 
     RowBox[{"parallelogram", " ", "part"}], "*)"}], 
    FractionBox[
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "h"], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubsuperscriptBox["\[Integral]", 
          RowBox[{
           FractionBox["L", "h"], "y"}], 
          RowBox[{"w", "+", 
           RowBox[{
            FractionBox["L", "h"], "y"}]}]], 
         RowBox[{
          SuperscriptBox["x", "2"], 
          RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], 
       RowBox[{"\[DifferentialD]", "y"}]}]}], "A"], "]"}], "-", 
   SuperscriptBox["xave", "2"]}]}], "\[IndentingNewLine]", 
 RowBox[{"yvar", " ", "=", 
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{"(*", 
     RowBox[{"parallelogram", " ", "part"}], "*)"}], 
    FractionBox[
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "h"], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubsuperscriptBox["\[Integral]", 
          RowBox[{
           FractionBox["L", "h"], "y"}], 
          RowBox[{"w", "+", 
           RowBox[{
            FractionBox["L", "h"], "y"}]}]], 
         RowBox[{
          SuperscriptBox["y", "2"], 
          RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], 
       RowBox[{"\[DifferentialD]", "y"}]}]}], "A"], "]"}], "-", 
   SuperscriptBox["yave", "2"]}]}], "\[IndentingNewLine]", 
 RowBox[{"covxy", " ", "=", " ", 
  RowBox[{
   RowBox[{"+", 
    RowBox[{"Simplify", "[", 
     RowBox[{"(*", 
      RowBox[{"parallelogram", " ", "part"}], "*)"}], 
     FractionBox[
      RowBox[{
       SubsuperscriptBox["\[Integral]", "0", "h"], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          SubsuperscriptBox["\[Integral]", 
           RowBox[{
            FractionBox["L", "h"], "y"}], 
           RowBox[{"w", "+", 
            RowBox[{
             FractionBox["L", "h"], "y"}]}]], 
          RowBox[{"x", "*", "y", 
           RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], 
        RowBox[{"\[DifferentialD]", "y"}]}]}], "A"], "]"}]}], "-", 
   RowBox[{"xave", "*", "yave"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"corxy", "=", 
  RowBox[{"FullSimplify", "[", 
   FractionBox["covxy", 
    RowBox[{
     RowBox[{"Sqrt", "[", "xvar", "]"}], "*", 
     RowBox[{"Sqrt", "[", "yvar", "]"}]}]], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6887800422503023`*^9, 3.688780151967244*^9}, {
  3.688780201200439*^9, 3.688780242195237*^9}, {3.6887802910017443`*^9, 
  3.688780291397174*^9}, {3.688780354790943*^9, 3.688780355097939*^9}, {
  3.688780457770368*^9, 3.6887804581183987`*^9}, {3.688780578649118*^9, 
  3.6887805789066153`*^9}, {3.688780992668132*^9, 3.6887810099475317`*^9}, {
  3.688781066542527*^9, 3.688781268341626*^9}, {3.688781792781948*^9, 
  3.688781811473839*^9}, {3.6887818798024683`*^9, 3.6887819072403097`*^9}, {
  3.688781938886784*^9, 3.68878194517183*^9}, {3.6887823218779173`*^9, 
  3.6887823558193827`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"h", " ", "w", " ", 
   RowBox[{"(", 
    RowBox[{"L", "+", "w"}], ")"}]}], 
  RowBox[{"2", " ", "A"}]]], "Output",
 CellChangeTimes->{{3.688782357106163*^9, 3.688782382758347*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["h", "2"], " ", "w"}], 
  RowBox[{"2", " ", "A"}]]], "Output",
 CellChangeTimes->{{3.688782357106163*^9, 3.688782382766556*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["h", "2"], " ", 
     SuperscriptBox["w", "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"L", "+", "w"}], ")"}], "2"]}], 
    RowBox[{"4", " ", 
     SuperscriptBox["A", "2"]}]]}], "+", 
  FractionBox[
   RowBox[{"h", " ", "w", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", 
       SuperscriptBox["L", "2"]}], "+", 
      RowBox[{"3", " ", "L", " ", "w"}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["w", "2"]}]}], ")"}]}], 
   RowBox[{"6", " ", "A"}]]}]], "Output",
 CellChangeTimes->{{3.688782357106163*^9, 3.688782382816272*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox["h", "3"], " ", "w"}], 
   RowBox[{"3", " ", "A"}]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["h", "4"], " ", 
    SuperscriptBox["w", "2"]}], 
   RowBox[{"4", " ", 
    SuperscriptBox["A", "2"]}]]}]], "Output",
 CellChangeTimes->{{3.688782357106163*^9, 3.688782382824174*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["h", "3"], " ", 
     SuperscriptBox["w", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"L", "+", "w"}], ")"}]}], 
    RowBox[{"4", " ", 
     SuperscriptBox["A", "2"]}]]}], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["h", "2"], " ", "w", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"4", " ", "L"}], "+", 
      RowBox[{"3", " ", "w"}]}], ")"}]}], 
   RowBox[{"12", " ", "A"}]]}]], "Output",
 CellChangeTimes->{{3.688782357106163*^9, 3.688782382833949*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["h", "2"], " ", "w", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3"}], " ", "h", " ", "w", " ", 
      RowBox[{"(", 
       RowBox[{"L", "+", "w"}], ")"}]}], "+", 
     RowBox[{"A", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4", " ", "L"}], "+", 
        RowBox[{"3", " ", "w"}]}], ")"}]}]}], ")"}]}], 
  RowBox[{
   SuperscriptBox["A", "2"], " ", 
   SqrtBox[
    FractionBox[
     RowBox[{
      SuperscriptBox["h", "3"], " ", "w", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4", " ", "A"}], "-", 
        RowBox[{"3", " ", "h", " ", "w"}]}], ")"}]}], 
     SuperscriptBox["A", "2"]]], " ", 
   SqrtBox[
    FractionBox[
     RowBox[{"h", " ", "w", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", "h", " ", "w", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"L", "+", "w"}], ")"}], "2"]}], "+", 
        RowBox[{"A", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", 
            SuperscriptBox["L", "2"]}], "+", 
           RowBox[{"6", " ", "L", " ", "w"}], "+", 
           RowBox[{"4", " ", 
            SuperscriptBox["w", "2"]}]}], ")"}]}]}], ")"}]}], 
     SuperscriptBox["A", "2"]]]}]]], "Output",
 CellChangeTimes->{{3.688782357106163*^9, 3.6887823828411913`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"xyCorr", " ", "[", 
   RowBox[{"L_", ",", "w_", ",", "A_", ",", "h_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"A", "/", "w"}], ">", "h"}], ",", " ", 
    FractionBox[
     RowBox[{"h", " ", "L", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", " ", "A"}], "-", 
        RowBox[{"2", " ", "h", " ", "w"}]}], ")"}]}], 
     RowBox[{"A", " ", 
      SqrtBox[
       FractionBox[
        SuperscriptBox["A", "2"], 
        SuperscriptBox["w", "2"]]], " ", 
      SqrtBox[
       FractionBox[
        RowBox[{"w", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", "A", " ", "h", " ", 
            SuperscriptBox["L", "2"]}], "+", 
           RowBox[{
            SuperscriptBox["A", "2"], " ", "w"}], "-", 
           RowBox[{"3", " ", 
            SuperscriptBox["h", "2"], " ", 
            SuperscriptBox["L", "2"], " ", "w"}]}], ")"}]}], 
        SuperscriptBox["A", "2"]]]}]], ",", 
    FractionBox[
     RowBox[{
      SuperscriptBox["h", "2"], " ", "w", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", "h", " ", "w", " ", 
         RowBox[{"(", 
          RowBox[{"L", "+", "w"}], ")"}]}], "+", 
        RowBox[{"A", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", "L"}], "+", 
           RowBox[{"3", " ", "w"}]}], ")"}]}]}], ")"}]}], 
     RowBox[{
      SuperscriptBox["A", "2"], " ", 
      SqrtBox[
       FractionBox[
        RowBox[{
         SuperscriptBox["h", "3"], " ", "w", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", "A"}], "-", 
           RowBox[{"3", " ", "h", " ", "w"}]}], ")"}]}], 
        SuperscriptBox["A", "2"]]], " ", 
      SqrtBox[
       FractionBox[
        RowBox[{"h", " ", "w", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "3"}], " ", "h", " ", "w", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"L", "+", "w"}], ")"}], "2"]}], "+", 
           RowBox[{"A", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"4", " ", 
               SuperscriptBox["L", "2"]}], "+", 
              RowBox[{"6", " ", "L", " ", "w"}], "+", 
              RowBox[{"4", " ", 
               SuperscriptBox["w", "2"]}]}], ")"}]}]}], ")"}]}], 
        SuperscriptBox["A", "2"]]]}]]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6887802793534613`*^9, 3.6887802845047817`*^9}, {
   3.688780332773563*^9, 3.68878038307504*^9}, {3.688780424206932*^9, 
   3.688780438230068*^9}, {3.688780563333303*^9, 3.688780572495413*^9}, {
   3.688781288011835*^9, 3.688781291870193*^9}, 3.68878181847081*^9, {
   3.6887827839808817`*^9, 3.6887828120371943`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"As", " ", "=", " ", 
   RowBox[{"1", "/", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hs", " ", "=", " ", 
   RowBox[{"1", "/", "3"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"xyCorr", " ", "[", 
    RowBox[{"L", ",", "w", ",", "As", ",", "1"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"L", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", "As", ",", "1"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<L\>\"", ",", "\"\<w\>\""}], "}"}]}], ",", 
   RowBox[{"RegionFunction", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"L", ",", "w", ",", "z"}], "}"}], ",", 
      RowBox[{
       RowBox[{"L", "<", 
        RowBox[{"1", "-", "w"}]}], "&&", 
       RowBox[{"w", "<", 
        RowBox[{"As", "/", "hs"}]}]}]}], "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.688780589765336*^9, 3.6887806424841557`*^9}, {
   3.688780686308249*^9, 3.688780721456184*^9}, {3.6887807563520193`*^9, 
   3.6887808366398373`*^9}, 3.688781296210928*^9, {3.688781388945698*^9, 
   3.6887814280980587`*^9}, {3.688781458583064*^9, 3.688781469331272*^9}, {
   3.688781501193348*^9, 3.688781501820135*^9}, {3.688781572636799*^9, 
   3.6887815765579777`*^9}, {3.688781635025858*^9, 3.6887816968709917`*^9}, {
   3.688781963945198*^9, 3.6887820039635963`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
3c9Zt2PfipJbObPqnY3iznaaA1mz4ql2b1iYhGkzWjqUecrYh5AT+tXptk8+
vyMR+Av3ECcNejP6JOGXoDzNHw59EDwkWtuMkKzvyY9bCVxlQ0wLqTJj1rnk
8Oiib23GGehu934H1goCt6vQjztun4HqrLddSkwh8N0rLsyf/JOOIm0CJ2JO
EvrnUlrrb9KVPsv/z7msbW6Smj6rT3VcpprkYp+NXr98FXEricBfGAnqWTPi
e/QLD7t50+J7wCfyzY9O2Wizr3Dm/RICr+MdjX3eXo0m6NtbI9bPrgep5LVh
66blA32FCyVXGmSiKdOHeQf8CD/MqeZYcLIuc9Z9v79t7x+4vZh9n+RgrXFE
z+oWJBlfvevpND331hbxvj6aiXq3h546WkTwsV827/Ub4Uy0IKXHe5xE6JMk
5Rdk3paOxm1j1t69Q/CXjVf6vomWjp6+earj9Wpa/qOrnDOHXIP8XbguTuQS
/lxoa8Cu59R01LE9gUc1nKAP/h72N4ycPet+4zLjd+YyDD8px6+nbFtL0Htz
PW6erG9EB0mnP/DWEPMa3XmJv4xahi54rpSWtyb8ZPpRKdKt9nykNrmjWZiT
sH9zFhbS6pDZ93aCBvSdOW/Pvi9tqfb1xN7BcmSTf9/yUwCxXhURJmKhv+vR
Kqtzu2Wn1ctLQ4oO9HmWouRLP26v3E/kXZeOnGrUYi1CR9N9eV4lEPtU9P3n
9sCKH2hfz8PNGgrEfjQ5USSuxMijMgK66gpMCPkLHdS2jpvO7v+cjOrPHR+a
fR8vc0lRSor/7PuijiqKc7d5lc7qn1wXHJW6+Xb2vTvoezx3SH2mYEHMF/oY
cY4JQ14DFZh+jXrLX0OXHDQaxVFNziHGLZMeeTT0kRF/J4dK3k/Ts2bO9VUW
10rQU7Q4OpRMzIs3IjQ9N6oMNQZ+7bu6kJBz6WYpg61d1ejt4chnN6b1W+7s
8zp5IICGMm6lor2aRHzMfHDq00OHAnT9Tb/C8qppeUXp6F61pib01sn3ZuMX
Yl4RfpzyLSU5yCj1vvPWSkJ+qWXxiacSi9HBKPl3o3uJdWyf2xHcvDYXaRR9
X5U7Tc/9QvszhzJr0J6J+u6mbGJfKLXxNpu+qUMJ5YXrWe0IXDj1gltFTAma
v3BXtrsuoYcBkQjFhxLFaDttRZw+NxHH24Rv8+8YzEPfTIYfvyUR9qOiKrFv
7Xsaem4VZbhfndCDl+lCVQ8GPestA+fj0+hrV9zJPPIhH70Mqed6bkrYj+hG
WS/1tDL0uKbFpmYuoX/jMENdtV/16EPjgivP9hLyj6NmPtO4YpT9JGn1gkOE
fu5M5iqdYtSNYYFbhzuWEPIrNHryias3ow1/WPYYBRD6F6qfCml/XYUiW23y
hV2I9dVR710qFsqwq5vNsVrT7GfHXpn5JqU5qH7iHvueCkL/I4FLz3k8r0Fu
nG+O99IIOcU2//blYeRF1kZhNUun5UX25ZEpvmk5KOfKi6xdfASf57FzvO8H
0ZBBSK5C1x5Cn/61bV4fX+ag09z1W7b9JOgtOC3ZCngrUcMje3vyC0L+x4aD
LaVFDL0I/1kSPM1vrNv95sjp6yVI3cT60p3VxLrLbuA3jtSgIRH23TcmWIhx
27qK/E9G5qBfkek/KbnEPtV4leDkpFGMvvVG2X/yIfRvbt/Gmj+vAnn2bbN+
PS3uQD/h0r1rBZM9hL81CMrereuYjta5X7w6MvV/17PM5sss3jGTh5m/ZVbn
MsuTmcUFZvbMrG5llq8y6xsw60swqyOY+Vtm9QWzdWcW15jZM7O6j1m8YObf
mNXRzPJhZvU4s7ydWZ7DrN5nVkcz6xswq1uZ9QGY1QvM6gtm9R2zPtV/Wy8w
60swy9uZ9Sv+f+Xz/23fgFm+yqx/wqwuY5ZXMMvrmMURZnkIs/4YszjLLG9h
lncxyxuZ9fGYxQtm+SGzvIJZHsWsfmGW7zGL18zyMWbxlFl/klkcZNYPYZan
McsDmfWRmOXVzOoLZn0PZv0oZnU6s37Xf9u3YdZPY9bPYdZ/ZtYHZtbH/m/7
UczyMWZ1E7N8klk+z6x+YZZ/Msv/meV7zOodZnkps7qAWV+UWR+VWd3NLO9l
Vncwy0uZ1bnM8n9mdQqzPtV/2+9iVl8wy3uZ1UfM6u7/tj5iVqczOx9h1i9l
dj7F7PyLWR+bWX+PWX+b2bkMs34ss3MHZv0cZucRzPqNzPrnzPrAzM7FmPWH
mZ2DMOuzMTuHYtavY3ae9d/235j1RZmdSzLrSzPrlzLrrzI7b2J2bvXf9l3/
274isz4ts74is/NZZucvzPqN/21dzKxvzKw/zOy8mFmfmdn5OLO+qM3SjNe1
k+/xPU9B7Xnsc7cmoj+ufy7VTMbj+5yH42W7Qk+UI1/1R6Q1U98x/b3xa5Yi
oSVIRf1VPn0yC+PilzbqnEFVqG5X8BvyZD7mU279/ZxmciuirKqKFp8qxvhq
quHQhYZ2TA98XF6pbV56rQ7TA252rde2yLURufufEyRNlWI+qprJfNUnOjEO
9CpJFVL37JrRuVVtDvTJCuK7lIJr6ueSu9AGf+P2uMlqjHvLIhcbx25MD3xa
6VOfXLe0YnrAs83NVGWT29DUyl8HyZO1mI+cmZbilFwPxvH3JPU2dhzm6EBG
RdurFe2J72qeL+2WrsroQVqLHZ6ITzVifNvQydrgrb0YBz5JO1OTqEu6kLJW
miqPfTOmF2BbMa/nRS9a6cE+NDVJfIezVjm6e25rL+Io0nzfe5f4Dqej14I3
SeJ9COwB7t/urk1e9djdG6874JltcpyKarF43QHXcfm4tu5wMl5H/B1L97A/
lfPS8DoCHrN8debZqiy8XoAvOOvg8SgmH+sZcHI3qcfBpwLrE/DN793GSlLr
sX6ebJHIciyfbedQT5VIFrZHFIdRYF6Af13FM175NZMC8wJ836Fgm4OJRRSQ
H/BDK34cWfyqmQL8IT8JcfpuMHz/O+YP+EK39c4/V9Rh/oD3rZK+uU2+A/OB
vN1035UMzY15mA/ga5+zPX11thPzATxjSU5O2+gw5gP5wLYWu2zTmyWYD+At
Z06v1d/9E9NDnF3y+Oml7y2VmB5w220vY/fsHMX0EL/+nPBce0G8HtMDbpU8
JbTcZxLTg5833Nu8Z3FbI6YHPKZP+OXke1Yq0LPdvJrZgmjI/TJJKU6diu1w
g/TkgpEjjLr2mHzkt7+E/7n751OmuDgN/c4f6Bd+V4ftMD9fz0F7uAhlrAu0
VRtpxnb4MVyVW0mxBMlY9RyvHiL8yejd/kxDDhqabMnSWL2gDfuBvVq+DuRq
hh8bCAy+ebkT26eY3H3uG4Il6Ee1xVMt9XZsn5Ys8llBPcVogavJiVc7u7B9
+kZlcMdP0pC+CM1J9EUXnlfSls0N4ZRyROK8NngtIQ7Paz5X82v6szLU4ri4
3dkzD8/rVM2zo5yGpWhBYV6GTE0Fnpdikk1Db2A5UtnObfj7bC6e14Mna94I
2ZShBSe8/F97VGP5v6h8bVjvUo4+21zO8zlfjeWU+j7RYGJM7COQU1PjarTh
+mq0ek6JKO17BrbDV8uXm5CnKtEfliQT/osUvF/Scj9FBy2pRvd1J/rHnxPr
Xq7j5yzkXYtchnySlnrUYjxSvlvmyoMGdF46Ms+PuxPbj/6F7de3RTWiZb4k
njlCNEw/ssXZS31bE1pj8N5bYxlhzx+MKmqWXWlGB7MnHL0eVGD6HTtXkVb+
bEY3phK3h4kR9txnZrnnp2grMu4ZuDT3dw2mv6+RdGXiQyuq41d7XXmHsOfN
N7i/5Je3oZuC56utFYh55RzWLSk/145cNcreWzqyUsEPbz8u5sgTWIRsub4/
3OBG+OF07i3KVLci9Ka51dGyohf781v5rNqu88uQS1rMFoHKTkwP91TJDyUM
grYTfLiWlvp776ShzeMRmVzNPdj/5xqcPJazuBR5bixf9n5LN/bzvr5pj9MP
tqGvESctU+Pq8bwqxqsNt0W1I09NYUGSfBMF8oGa+pbHLagNJfjlXvBpGcT4
sELP5/CWNnRcaNPGyJifGId9nWnNfb+85RfG33z9aihEbUcp70rvW6wbwno7
nM9X4nWrHek7b5f0CWWlgl1dOBPwOGja77xAzsrscnva+mJkLGLwdYV+Op6X
YcWCo67epUjthqd3ODUG5zP1Jw8fzbEvRRZllex+v9PwvtsiYbfghmsJ8sr8
XSrN8CtAv4z97Gu9nDKUdcqwNG3qG97Xw4d3a+f0laLQr33uI10teNyfrWoS
qpyV6Iv4pTs9QYcxH2MjJwmH3gpk3lU/5XLiLB43c/Pn+vUj5ajJ0+rUWGI0
pg/k8zTmUapCbFWsnl+3heL9ZWtAkiCtqUS2l9ha1BUfUMAPtHdlSVCLK5Bq
aNMI/8Jb2A8ciDKu7+WpQDq8BrfNqGnYb0iSjxjTtKuQxaK7Ek9eZFPAP/xt
SF5DVa1EWy/2bKDIRWF7sB+yHRu2oaPe7tEJ35PReB3HbBLHFPXoyIFubnn0
cgZex6O7WqNaDKuR+I2Pbza4ZWH6DWK5KCeoBh1P0zcXeZSH5zXHUnEsjkxH
DTx+OsEB1Xhe18f+jtkgOuLgOxwzOdWE8Vi/h8iVWoP2+Qm46F7px3IuYPuc
F95Sh5K/1Se5o3Q8rrPTYF5vdh1aaLP9usCfMixnwxEhZ29aLfKS5Tp9xK0O
09cJOHCqcjagUcF4ugilCsv5zME4z4RUjyqdbtfYWfThcfNcfh6Wl2xEu+O1
j2zqL8B85ufyamkLNaK3WqxqK4sa8LhKXz7ISPo1INedSZZnX3ZievGVQteF
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
lfxCfJBYx4PuV2RUbcvQs/N7NloqdeH4aE57qM1ZUor85gQGmSytx/gPTyrb
iAyjLqeE3Ve7n4H75PwKHAtHmmiITfpGm6dDD8Zj3a6IHySVoJKPZ+enmRLn
tld3LrLncSxGRTHvLpR97cJ4Ake+nENgCSJPhF0dfN+O7RD0v+RR09ivbsJO
eu9bZbUUFaNTmipbdE4TdZZC5uWO8KMlKP1s0jmBccLeoH4ZpfJ+XtPchdcF
/I+Cjq244dpm7E/2ciloWXI3on3LWh/qarLgfGDmPUCQfzc/2xylJRVocaf6
lQLlUswH3zM81iV+TYSDCvqceR8V+ISfjrJYTSa+uwL2r63AEZwkWYmmRBrv
lIjNo0LctMwVFOofmZ23PIk/vXlUjvhuDIxrZiz3KMiKGBf0LH7gVkTwtHNe
8P+fjXfZ2Ez7jgr4jSmr5zvmSVTM4u/Yw2d3R74a7S+u/biitIcC8s+9uVUG
9VWgSp6/J9eeCsX6OaYqFCza3jBLfk1+dZ/Vjxr+TzlhX69qtx+mDLejZS2k
0NCAIQrYIXxvgTMxSzEpsgfHKZskf57fU+3og/HOVaxPiHMZVZ/EH6ykDsSt
/OaPUyJR12SIsxiPMejJ47fOGqaw4Xy1ST1GwZqlHHH7X9Y+dmiQ6CuOPI2f
/j0HwKGvkhwscer5qzl4viwcm/PXh9ehVfU7777bRsK4f8VZzpX8Dah4WVCx
3GIOzEdIZ55YTtDsPMfO+8CFwr9tyNLhabvGOSL/bP04WqOo14yUB1zLVg3P
w7gtbYupXk4ziv6xPCw/jBOPG/jwsvcc+dn57cz7YLC/bhtWqIm8mfY7UzhP
n3G/C+w8WmYqbsXP2faWesPYxWN+1ex8tecg9dlI8yxcVCvdRm2gbZY8Wg36
tG0mBH+wH4src5IGp/0uAOTJzTOQ9p523xL0cCJq8eHEsdl6cDPxu7xoPrG+
ID/5nZCc5LTf14A8999Kiiyfph/YL/M1Dz9z2jTbD3RvKbrsMpe45wn7/cmC
weJNW/6X/X7tIZ8+f8P/KQ8z+Znpk5nemM2Lmf6Zzff/mtdM/TObLzO9MVtf
ZnYF3zuS8WbLIpFoaL+ky8mc1McqcL8UcOnypizaSAN+Hxbwrx3cIWcvtuDv
/wO+Tmvu0wWjbfj7nJi/ovW65I4O/H4Z4AfP8nyp1u/C76nJ+zgeYyGVonAH
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
BGNSoFlwAhUPGho8e0QjeETPfkdmhBsVZ3ErlA6XBfLwPTigk2ljMlh9v5ew
zepnR7pR64fYs5mtMt29hFer33pdsf2ZKUtmrg5NprFytXRiT7tR+zMwb8J7
TOD/DWwOxr3KZpJQRw7nkfH2HL6sZvGOUvQn4DeOt8y9O4fGllyPrTxHW2DA
kfju1ZNVA3XrKqj98PHfw8sLzT35VP+xftSur6GDgjKJdR0x6X/qzyuo/mPd
pIiKxLOdkusf55cbkx9OfoXrH/hus0OjcGGg5PqHo/y4b4EYP3+dPbrEJI/G
4svnxuizJdefvodM9UPOSPbzzJ5NIVUDFP9drSc+9JetJTMiSip9xObHi9Vz
I8xE86MgRsf79Rh1/uWtWvHukl4/EapvN5I9RrV/3bkwI09PQGRYL4tuEouX
P67bSz/NFunzL7rT0kVxIvTHwcPCRuOpIr4fAe2NEnlmL4/yReuHlPPTuaUS
fGte1vglRYxvHZsaLEKjfiU7cq8wjojFBZZTV1urMORZ83W2+Db+R9wBdTLh
u9OMIs5W1HThe+joP2OvEloze0n7/Kd/9vwHnVsRI6WJ/0rKy0pOkKaYT80L
bL3Le1686iXe1K0JjJKh9Nbdzsh09DaNdfKkowF7zguJ9aSR0uiubpqkvdiG
yxjMeyQZFyhkKHpYe5dKyP3uLm7YzG8vJdrLG+5V0dCRtAvrj710WT/J86P+
BSuFnz5I8iGm+95n73DJ9TzT55qvkaWkHfkt9NvME4t3AH9TV+g782SRBB82
E3quSwok7St8Rsb+CzJlEv1p4jt6mL8vkujP0Q1brZjqkvuNVdFqPraGkn5m
cDD5huYBSfxn00VyB3sk5SKtn9L4I02O0vgmrT/S+i9NXtL4Jk3u0vRQGh+k
6ZU0/ZSmD9LkKE2fpclXmn0tDtBJ3LU9Cf3bhsLaGJf0p8TRlhNrqoeeIN78
hN3k61BD5Jn9VRGSUIS4yyPTL8+aWghVpWaZKNG8BrjBpvO1AqUOouZAsBp7
qAZx5evb00/82Emca5i1anZkPeJV+bxbGZu7Cbkdd7O2b6fO405unKLNduoj
eq3t5OVlWOivjHeXutf9/pQoide+VjVUhvPvMbI+4HVOPbF/hJsdJ/Jj0L4g
TH/M1ohNvCuZ36Mjmk8BV9utHfT1n2YiZqm7r0bkM9TbdrMi2cbDBSSri+d5
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
+rcQqi4BfLc9jNXzgSPH+j+t4yFh
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxNmgn4V9P2xs/5nnP2DxkKoTRoUlEy3lAiQ4brmrqGroQyFlHGTGWKUkhz
CREaROYQpZB5jAyZx8tV5vle//fTuzzP/3l++/eus88++7vP3muv9a61T4u+
px0ysJZlWe8iy/SXbVVm2T+FL+piRZVl30p+R7hxyrLvJL8r+X3hf1X24p7K
HyqDVVaEvIvKJXmWlSqXSH5Jz6wjXEu4V+X+TxG+pnKUfq9dXZZ1UtsPos9G
Ie+hcnLp3/pZ4zlX+HHm549U/ScxzlfUTxPJ5wnnZ67nnbbO3V6QHa6Kg4Vb
CNcqPa5dhY30/JaSGwtvFP7EHKh8WFnuJ5wh/EXlNJUm6qyl+hgk+X3d+0HY
R7i26r/P3Nf76rcZk6n6KZnbbMFvqM3vmZ/9QqXQ9RHC/qUH+XsR48095omZ
5/945kF9nS5cT+vQTDdrMbef6pnjhM3Ux0eS+/I7ktfQ/VWSW6lcpOttdH2B
cDuVxarrVfq3mKOzhJur3+aSZ+h32gm3zL2OW4X8uOSRmfvhN6jjHn11CJk2
z6mkeC/GyFhnSR4tbK/SXfI3lev4rctLP39eaf3pGH3Sf8cYQw9hq9y68Zvm
viX9CJsKW6jMVv1MjX+Z3v/95N//d+YxnBF62FXym5Xn4xLhe2p7jOSN9Luv
6/po1kB6uKbafiXxKHSt8rp/JDxF95tmbrdL7jlibOdpHK0l9xcOyS3fqfoF
Km3jd59QaSP5/sxzxLOPCq+KOXlM8gA9fxt7RzhY5WfJh6BnpeXvNN479W7/
RkeE9VTfK/M776fxvSGsafzrqf5I3lXXB6j+bfa16hup/lj0WtdrSD5c8muS
+8ReYE+0i7EwtmN0fbFwTeGewt1V6qnU12/vqXZ/qO9zVSrd/zP5Pu26MO+l
7QF7tlnMP+u9aezrmSobl57/99Vmg9LzvUJyQ8lHY2ck/03yw+iccImud2b+
hLmuD8WuSN4/9/zeq9Ki9F75QvXdNKb1Ja+hMTZVfT/sguqviDlfiF7p3iuq
W491l7yB6rYTXqj2YxmvcKn6aSC5geoX6vo8yf/TM/erfj3J66j+btVPVJ93
CWfqnm5l5wtvVUGtzhJ+hQ6FPWGuusV8or/NQ4cHCK9nr6tcpwdPEv5Hz7Zi
T0o+Ulhf9b0lv8O767qF5KHCrVW2l9xdOD308B5dL1K7tYSXC2epbqbKbtgL
tWsjfFu4Jc9jZ7Bj6v9fkper/SlqOz3zuNvqXgf0X7iVyg6Sb9WLtpe8DfOf
vG9GxN7pqfoP1Eeluf2n5M1Vd6XwNrV7RvWvCqcLd1L986y1rv+ODqnNHZXH
Pke4j/AAlc7sB43n4Nx6v6XG+Y94dqnwKZVdVZbqem/hTYVtUoewJ5+w54Uv
CI9Q+Zx9UOe2+0T/h6r+Y9W3Uf29kh9R3d3CkcyZyiJdHxZr0Vx4oOoOyK2L
/bRXN5DcWfhGZn+AL+gSuorO7hL7jv13QrKtPDrZDzwX9mqB+n2W8Qh3Kv1e
Owq7Vtb/XdR+Z103jHreaWm8+yYa94Gqe1ptT1O7thrLMcJHdP2M7m8vbKQ2
D+kdb1B9Q8n3S54meUPeWfL1kjeqbKf2RVb9/urzCdXtresnVT9f8ojcvp85
4Tn0cEzhvvGfU4WHlNblydhYjWU7yW8I967Zlx4vfAC91f22dfZJrNVlwt3C
vmHn7g0biq7gR3aN/XuL8NKQ24QdwMd3jz3O2J6Pd+GdOoYv+8u/tAufVSXr
VhLeFP6+meS5wSc+FZ4Q+6sDXEPlKsld1eZHlQVwB+EPKqskH4ueq9ylNg/S
VmUMY9D9jSVfxv4SlpU5zYv4Gd27Rc9eJ1yXdVL9DsI/dD2O+Re+p7Kt5PtV
/6vkl9X+duFvKnMkTxT+pPKo5JuE/1W5W/JU4WA9c776XCb8rbI+t0men3dV
/21ws09jPLdU9q8rhRg0dD0X7hb7iP00O/Yp+5X9gs/bS20aay2f1O/ekrx3
0BO4y67YPnhOZc72uepepa7y/ttG2DvsTOvK/hqb8oXwS/V1s/ocI/xa5S3J
/1D92Mo8qRH2R+UO1U9K3gfHh09g3eEW+Gv46Tsh71nz+IcIb8QGZdZF/Pg5
KvN0vUVpW/eT7h+d+93Za82T79+u339AbW7Ev5fmKvi5ubq3SvfmCH8RzsM/
5LYprCG4uPR8wnMfqsx74Yf4x2mSz8zNX2ap3XDh7aXnnH3QOZkTwcXhRV2D
P8AjPlS7PYS/lva9zYIrwmU2zL33Psg8Tp49rjK/aKp1u0DypexT9FRllOS3
KnNJOOWoWGPW+h7Vb6bfaaHyje7diN7QX/Le5nc61fxOvBvvOTd+d2aMoVHI
tGkc8i3BD+GJcG3q4cwTdD1Z+F7lvX5/2IS1db2u8GzGXpp3DRHeo3F8r/f6
RNgfn5DZz8Ht8Wvt8Eul/de3hW1J1+BADfXMa8IlarNU5XXJT1W2hXAJOMXJ
wVkPK83ldgmbcx92Qf19KnywMPefVNjWwj/HCh8o7BPHC/cM/gMPwucyh9ui
93r373S9s7Bj5Tq46NSwsd8Ip6h0lLyycDwCf2hTef8x3/DqLqGPzO2omjnT
hcJWyXYAe4CesKbw1WGl45bJ6mOH3HEf835C6Bi6Ni+Zm7wiPCl3+7/eE/xK
uFn4feLHZ2LtWMPN1H/7zD64Jvkw7IDkc3RvE8l3hm0YltlfLinNo+7Uv/vY
Z7lj1YkhT1C5F76T2y82KRyLNRXeV5nP7qNxrqVyscZ+KbZR+KzajxV2ULuV
cB3JBfsmN7eAy/6Ym68tjj37OFiaQy1nUHB1tdmXPaPr/YXPqb+XJQ9jLUtz
ZThz7+Qx3h3j7J7MOTfU/dP1zIOqb6X+ukl+XfIkyQuxn7n33/qqXyZ5A+FC
3XtF8m3CLrpeIPkByRNq3qPTat7Hn6i+Uumm8nFwzW2iDW3h13eqbk3houDb
8O67KsvzhAM0zqfgOsKta/Z942q2Z9i1DXU9vPQ7XimsR4xd8/5E79as2Vax
v64If90+5MfC1mHfsJWXsz8YZ2a7dyU2obTNHhn7i312VTzbPmTqL1S5TvJG
mfu+9P+1GR2/Sz9wF+z/rlHfPTOPuza4XAf8tPAMuHFy/RbJ7a+Mftg3jOf0
GM+IGMMOetcb2C/CV9Ft1c8WPqTn90KPZWOPkvw7Y1D/qeacAvatgeSGNdt0
sH7IrOFbsY7oArEJ+oB+zc8dlz6mvu+QPAwuplJPckthfziJ5PbCTWNfsD+O
SO7nao3hJ93/MzcPRv/QQ/RxUc37YpbwWpWXdL+X8EQ921n3Rwq3z20j2Ntv
qvTP4/2D+32tdo2TZfIkvSr75e2TY8mjcuc0xpbe0/N4D5WDWFfWv7BNIL7F
b/QIn7U6lxBr1yTZHk4mNkmOEUqCsGRdqFdZD7Dt2AJ8BPLiIvJM4Zum5o7B
GCt5CerhopOFfXPz8xbqq23mPNgS9X+N7q8U9smt/+gDOZLjcudJFuEL1aZO
6/4oMY7k75L9Wpfwd8cLT8jd7ybJz+F3TlXdwNy85KTK/nSz5PfeLd4dTgUe
q/rrc/sP4rWhpdeGWHh65nr8x62lbTzv3i58FnNzQc08+3zyZOqzD/tWffZT
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
5PCwmeMKxyPYE87rn8+83nDnHplt3/8BrQHsJA==
          "]], Polygon3DBox[CompressedData["
1:eJwtmnnATtUWxs95z9n7Ew1URBKl0CgyNWkQlTSoeytXgwxpVhopkRSVZAoN
pGieSVFKISL3iluSSqOG24Qmzff5efYf+/vW2tPZZ5+91nrWs99devY76eJK
lmWj9afU/yf1Z0KeZc+qLJB8QJFl/1X9XOkHSa4KWRalPyz5DQnXqM/70uer
7C95R7XXk/yu2r9V+wead5nGfqKyVnJUe021P8i8am+l/w2kz1b7LLXfoTp1
yQao/i3JQ6U0lj5Leu2qLKuo7kT1fVzPWia5i8bspPbXVY6TvFb975S8q9rr
q/9B0ttJn6rxX6l/B+lHSW+rcoTk+1UO0rhN6t9C/Y9Unyc1/wtqf0ptr6i8
KbmT2r9X2136317tGzRmo+TtVddL+vaSv5PcVeVV6Qul76T5eun/LRrfU+UT
raGn9OGSe6islb6F5q8m+U/Jv2tsU/1vqPGfqszWM+5U3TZqv0r1qyV/qvHT
pN/DN5I8RuMnSG+mcorkbhqzXPKtKvtJ3l9lnOT31H+a5Pbqc6D0BZrvS803
XHVXq+1ilXaSn1fda+yP5q6p9e+ofntJ/0GlvuTtSs/NM46U/KPma6uxddU2
QGP/o///UNsVKt3VfoPmvEjt/VQOqPj81FLbQ+n77qm6rtK7qH2k5Hs05krJ
GyV/I3m1/n8lfbXKu8yl8Vep/+lqW6XxNwTv77bS35R+vuYt05yv6/9dap8s
eTe1r1B7D5XV7L/a+kkeEvw9tlb7ctYv/erM79BR8sDg8/WM5v1T7VdK31r6
5dLfkT5A88xgfq1voOTP1X6a/n+r+bbT/rVO9nCz+v9b/XOVQdLrqGBIa9Wv
Ed+88JmNqrtRTQ1VguR2qh+f2QaxxZ3V5w7J61XWSX8uej8HSX5f8pF63rHS
l0pfiS0F2/UD0pdKv0r6ddKfSOuZq8aTpR+m8qLkGirDJC+jTnI19d9W8iPq
/7b6j5Q+VnoT9ih4fs7ndLXvqfc9v+K9eFp1e1Rsk9jmEmxW8mD130X6TPXf
Xv3nR883QXojzhtnWvp3yV44k5xNzhBnqUr9T5b8ttq+kTxf861U32M0boP0
2iq91V5f+kbJd2rMFLXXVN1MyU3Uv4X0FzT+h+g9x19szPwtNqj+Asn3847S
56h/B8mvqX5Hre9w6a2kT5H+ucbXUZ/bpH+b7Pkbtf8i+WQ968pon/Ixa8nt
a15X3feSl6puP7UdrLpFfNtkb5MLP5s1vCi5mdrvk7y72rdUe1fpp2j8VM0/
THOtqdg2Fqm8J7mF+lXPbMNtJG9S3aVqe0h6Z8ntSj9vscqBkrtE2zL+f7Dk
ztH+Ar8xVHJHlac1/kW+mZ7dRGt6NLOPwld9WPh73q6yg+b7gO+YeU9qs2aN
75a7TxeN30H6OdJ3UltVlZ//ufQV0kvpNwaPZV+D9CrNN0/t36vuLq3pY+wk
8xmppz61Cscm7ONfxA/poyWvUHlO8j0qUyWfn745/v0p/LX0DpLPUnmD/U72
OhkfQFvpePO3+v6mcrzqjlZZo/qCcy15L8lbSK6l8qH0xupXR3INlVl8M+wg
eO94JvEEm8MX1M1siz+qPlP/YzLHKXwXczAWH0aMW6n+p2SOfX+p/ufcayGO
VSqeg7FdVB7UnJ3xfRqztda/pfQ5xAKtdRvpe5RuX6DSuvQesBePqf9vko9Q
eYL9lP5BtA8m1hHz8M01VHea5N00poHmXlLatrHxRfiO0lhgb9XdKPlVlWck
z1CZL/kYjZ8puTbfWOOX6TkHZN4v9nOK6i6W/KPqt9J63y39jrzbKsmjg/0f
frCa2idK7yt9tvpXlz4NzCH91NL2Sjz6jHaVfVX3uvqvkjxDcl21T9L/87Se
u1Q3hOdr/DuSu0qup/Zf8PuZv+9pqru2NB5pqTHXSf5S7a1y+5BdpJ+i0jHz
mPOYQ/Odq/Y9pY8LHt8id8wap7ETpffN7eMnEAvUvx/fVu88SvJCle2IFWr7
g9ig+kvU/0FVnSN5uObYQfL/VM5Wn8v4nqpbnPBHf+k7Y6cJDy3Hb6nvtSq5
6hZqTW9JPk5yHbXvHO1r26huqtp+LTYfz817SDzHv22n9v6SG6j/xuD3H1za
f89X/4Px1SoPpHh2kuRuGn8dsYQYLP1S6bVi6i+5KWPwXdiX5C9Vd2ZpXAG+
AIPU44zq/xnSq7So9bnPWwf9/0j13ViDnjER/4Rt8n01ZpL0t1Wexx/omf+W
fETp+LMu+Gw0l76z9D84d+y35jwf7FYxNpmpqpslH6q6odhdbp9xjMb/S/qW
pePRwNLxokM6/yNLxyu+0a2Sm0bjm7sl76rn7a7x9+A7sK0q44MT1P5P1V0O
lk34q03u8/m76g6VfLjqDpW8u/ofJv0S6btJfiwYjxyptY4Gn2jMS1n6JpJH
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
          "]], Polygon3DBox[CompressedData["
1:eJwt1nmw1lMcx/Gne+/zVCiXRPYujUhmKk2bJmpGpUxMSEYNrXcmUjeklLho
oU2blttCSquKVrRJKdUgrSiMpSQq7SbF6+v3/PGe3/l8zud7fr/nd37nnKeg
Y4/WT+WkUqleSGNTJpX6Oi+VmothpVKpW+gXdLyq7yLe7txUag6vBbbpX6O4
FkbITOIt0L/H9Rt8i+v449Req/YXfe/x2uFKNZVx1Bj/yPTQf6F2gUxlfE9/
xu+s9nrtVthI18YVvMEyDXkf0/tcqxirNU7rK6THu8c8mVfQj1cktzd+Cz0A
aZk+vF6uFdy3k9q78RNdjX8LFsufkD3tehLHtT/IJH2RGa39Du9p9HWPp3iX
4hIs05dnrPOu1elb0QXd5bq6btWX776Xq62I9fSReBbtHfwfsJHuqr675zqM
V9SuUtuWt54+qb8lVtEleF/tcDyotgzdQHYFPUqmHa88bxSm84rwnPGelNmi
3VK7lDHPyO2SnyX3FT9Hu7++C+Q+oRtor3UdiEF4W25NXLNj1KGLZYdo56v9
jj+Pdyjei7GLeMd4nekCfk/eQPe9A9N5YzFBbWW5A3Jt08lzx/OP5v3BW0Q/
irFy9ei6KKR7pJN5iPnYhqbp5NuKb6y08du75secYYP+541XnfeXzO2Yy1vF
K2OMsvTVct30T+T9qe99egLmaw/B/fpy6MlYHO8Zg9WuVns+xtc+51qMl3OT
OYm5GW68DPrKteEd5O3xfLvRiX4Ts+O7RX/sjN+KmdrPoje209OwUnsqame/
q5lYqF3N+KfivcTaRVn36M67Gx+quyGdvNP4Ng7KLeCd5TXhnfAcx/E3vZxf
X6YeKhp3Be+2eAf00LxkLVanX8+u1V9jbvlreEN4N/GW8ZrHWuV9hKbazTBC
3yCZurhWe4RcI/5KegAe4d1FN8aK+K24R7sFRusbJvMWb5W6abnJ747ff3Pc
2/P3wSLebF4+LkY9fTP8xvqur9Fv6K9kvB/VP0A35a+l62CDvmbxrlCk5ozx
TqEDPRUfqinBFLnN8V4wQ7uq2pP8JZnkHca7PIbexqjKW56do3jm2rLL6A44
QlfJS8YroXdn990LeTv0zVY7Mp3sk7FfdsHaWKcxl3nJmi4n/yW9jv8i7zde
F97wdDJH8XvH8fbjYbqh3FBeBdm9vPl0bib5tuMb34UWcvdgp/awvKQvMuOy
a3UC/xDa0weQ1v+k3GPYSa/HvXnJGRBnwQZ6E+6jCzCR9zm9FLXodfjAGM1j
n4tvP+pQLHeZzBTeUvcbg9d5a+Lb47XxjjvjMrXTeFdl96GL1e6RnZtJ5i7m
8GRO8q3fKXNNrPX4/uRG4lOZGqXNqfZMuWJcEGtfrkRukrEO4/F0Mk//zxd9
FB1jbmV/z032q1hjNekmWE2/xK8g35iuInsjHkUhr106WefvyvSJ/Rmb6VbY
apx9nmMvnsgkZ+1C/UPjHeCLTHJWx5k9VKYmrxs9Jr537WdQ3j1q0YdjvckV
yrXF/nRydsXe2c0znpV9gt6RTs7OOEPb87fTldQXqh1P/8x/KJ2crZFL8f7l
9YwzX25W7IHI15Xh1ceS3GQ+Yl7inCiPcpiY/e8Qv2Ne7EOeqx8Wy82PeYy9
y33PoRJ/UF6yT87Jnudxrm+ha8rWQONYy2qbuG6I81F+MhrFOub9B50pKQc=

          "]], 
         Polygon3DBox[{{1357, 985, 906, 907, 986, 1358}, {1341, 507, 541, 
          1239, 964, 1698}, {1333, 941, 1027, 1717, 1293, 1294}, {1339, 958, 
          966, 1700, 1326, 1327}, {1632, 551, 548, 1245, 1107, 1483}, {1327, 
          1326, 1701, 968, 969, 1702}, {1334, 944, 1209, 1735, 1297, 1298}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, 
     {GrayLevel[1], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxNlElIlVEUx7/vu5+vkrQ2DVQUbSKiYVELadNM6ku0ly9Tm3iR2KI0Gskh
igaMKGrTJhqEgggKIQyCpFEaEAOjSCpsEMvauGhaqP3+nbtocfife+655557
zv/c6Zma1I4oCILjiENKE0FwC8N+sCAMgiRSgn0oCzt4H/v+OAgmYr8MThvB
GbANexX4A58u8Cv+ufiUY9/BeizBh8Dl4Dx8VoBp5Ar6WrAdv4vs94GV3F+F
fQ74izgt6NfAAvzeoBeCpf6sYuzj3ATuOgHWgfU+50Kvt6I3hrYney13pJzl
rD3Zd4EXYot5GNzO3jnuTyYsD+WzAOwhj9XgMey9+P3B3qN3Yx8gTgb7zMjy
zESWq/Skszpk4/McLI6sVjvBz6y7sL8E1Yz56LXgEs6MQV8K3gUXIt0+v39v
Bx9LQqu5+qD9PrCEPG4SYyc4i/1h7CmkOTb9NzGPYB8K7O1ay341tjfr7U1g
jc9HeSXw6Ua/gf4MadNbIut7CTjseTEDuU2sdn9WMZb5vqv/s2PbvwSuZ52P
zwbwQmT1LAUruLsH+xownbDaqsbiyUpxD/1zZH3vBWuJtQn8CX7A9jq0+5K+
/quc8Vd3FXtuFHg+qK6q7x1kJH7fwFHg1oT1qBp8QtwI2yCY9nkqX/XnVWi5
nvA83AvWcyYb/yJwI345eiM4hDxSP8DzkfUrP7JaqCZzYpsv5aU4fb6nac/t
g56r6ttpz+3r7J1C73Cmqz5NYIWzt1bqLc78q5xxQHF0V0NotVCcQT/jmvWK
2M4q5lo/a2XO5qnO++/GZzz6HvAJ+DGwWdWsvGV9D3knjoRmK07Yn6C/YZGz
ui0Gz/L+ceiPI4tf6PuS5/v45b9YiqN79F7dlSJmC+f2JCwf5azcq/1saka3
ccckfJ4iGWdv3uKshq2e/+Kb+NJPbjnsPcQnV/PHmSnIUdajwalIM/pR/M9E
xo0JYG5kczZZvY5stjSbOX6uvyId2Adi+0PEK/Hrk+ewuKy5afWzk++50RYZ
h8SlBvCk+O/sn4nBB/hngZ34jUB/AR7ijiJs/eIAd83Fdhz/soTVTH+q8vmO
f2ds89jo/3PVO8/Pjs6q3vrDNzmbl83OZqFXfIvtzzwQ2t+9zhn3yp31/L3v
1197o9ji
          "]], Polygon3DBox[CompressedData["
1:eJwtlW1oUGUUx+997t1dhNvEXhYUxD4YtRl9MCKjwApzOnRubJhzS11pCrUM
Xyap64VU1FD0a5FtoFB9EmRioqClE6ZmGUIhNV/W8mXgPiwNnev35/98ONz/
Oc9zznPeb1X7B40dIUmSTiiHlhdJMsr3S4SbwC9nSXIpTZLnkL0CXgLNht8I
tYNfgg6Bp0In0XkX/j53e+CXg7sx+hj4ILIp4BrpwP8AHeb+MvidqXWk+ylv
HkX+B/xwSZL8C/0nv9CtKk2SNXwPwNdDq8HruT8fvb3w3dztR/Yd+hORdYC3
cP683uG8hfNPwOOJ/ekKfuMR3t8d/PZSaAm4ARrgbB82NnG+ivt3MudnV/Ad
3e3ne5Tzm9Bp8D1oP3f7FCP4W2x8lDrm2+AZmXP5Ivwb4Osl5l8Hb8feELQn
t450h7DxKPgyd+rAR6Bf4S9CrdF/5aoJnSfJz11kp1L7IF8WYHdm6ny1qJbI
nkpdk8vgz3L7pve+1ru8P0d1iPmezJ1pnP2O/tPKCfJ5nNdDg+D53K8GPwOt
AF/Dnz+536834TuQ94Ib0a9BvyV3LIpJ9ZvDnWHwIc42gMeQpbKN7BT4L8Wc
OsavwPexXwc/CxoDDwTbV0yK7Td0zoNPiHLHqFgroSvSR1aB/QdT98exwv30
N2ed4BLOjus9qABf5c5czhZBK8FrFX9iH7aB27hTm9rGW+DN2PgweIbUPzdy
29a5evd87rOy6J/6S/34EHcu5s5hX6yfcjsh+vojVAYeyd1n6rdr4EngCcHz
phlajU5T8MxodrbmtrWD8+/BD3D2OPR57OkngmXC6nP14Gu8U5G6N9WPsqEe
Olk4BtVOfanY1iAbB/+kGoPrCven+vT9wjFVBNtWrJohvfUxfA/8gsKzqZ5R
72Scn0tdgxy8OHOttXO0e8oz50I5UR1PBM+v4m0GtwXnVjmuD54RzYreWBic
E/Wz+lq5OpN5NmbG/Ki/ZUs2V4HPca9Uuwr6Jbjn5M8i9N5D/2FklVB17HH1
SHnqHlTvaMdo16hHNQt6b0ecZ81COzZG4GuRfwGezvdC6vy/mtmHhswzJ9/a
g2dROi/E/aL6qkaqlXaAdOS/dsOzuXO9Hvom9zsjcZ5nxRjUt+pPxbYVfnLm
GqqWb2fe9b2cv5N5xypXb2bevdrvXalnYl3uGVce1NPatdKRrnb8UvC6wnlU
PpvAzblnWztIu2hhrIdmqjWzz/Jdb+j/MZ7736T6Los7SrtKNVVtNcO34Dvj
bAsPBs+/ZOpp5XYAaik8z5VxH8r/8uBZlP+q6VnwmdQ98HNwPg/G+NS/oyXe
5f9AzYX90b9qbuZdqh2pXSle8rLgmdWsagb/B5HrANE=
          "]], Polygon3DBox[CompressedData["
1:eJwl0L8vQ2EYxfFHb1vpIDEbSNcaDBYkVoYiVRWJoUOHhoWKwWSw+iMISWO3
WSQGYimSWrpLhMbY2MTn5g7fvOec58d931tuHdYPchExiQLuixGNfMQntpKI
Dn+Ejqb5sYg71PgWVtVXsCAbGd6jr+lpvVPY53/lS7JZuoIdc6co0UP5D9b5
B5z45jmqsj9zr3SPfrGrhy/+G2tmB+66qHaWz+5cl23imJ8Zj3h3Tqg3zW3g
I92FN1miL4dnfhtduxpJ9t703VeFLLugL/Fkf9/5aPbGrhra6f+R39LL5ub0
7/L/EHcrSw==
          "]], Polygon3DBox[{{1625, 270, 1136, 1270, 558, 1370}}]}],
       Lighting->{{"Ambient", 
          GrayLevel[0.8]}}]}, 
     {GrayLevel[1], EdgeForm[None], 
      StyleBox[
       GraphicsGroup3DBox[{
         Polygon3DBox[{{808, 490, 671}, {646, 225, 585}, {745, 288, 746}, {
          1237, 30, 911}, {813, 236, 814}, {911, 30, 1230}, {630, 172, 629}, {
          671, 490, 680}, {814, 236, 815}, {759, 225, 646}, {946, 749, 
          1274}, {585, 225, 631}, {629, 172, 576}, {1275, 628, 1254}, {751, 
          499, 620}, {816, 236, 700}, {946, 30, 1237}, {1254, 628, 1276}, {
          821, 462, 661}, {1281, 706, 1256}, {1256, 706, 1262}, {747, 30, 
          748}, {815, 236, 816}}], 
         Polygon3DBox[{{761, 172, 225, 617}, {631, 225, 172, 630}, {746, 288, 
          30, 747}, {1276, 576, 172, 1254}, {1256, 462, 685, 1281}, {1274, 
          748, 30, 946}, {1254, 172, 575, 1275}, {1262, 661, 462, 1256}}], 
         Polygon3DBox[{{911, 879, 655, 499, 1237}, {1237, 499, 751, 749, 
          946}, {1230, 499, 655, 879, 911}}]}],
       Lighting->{{"Ambient", 
          GrayLevel[0.8]}}]}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl1Gloz3EcwPHv9t+wjXLOnDNb5io7MFp5IEcJhTJH5IwUq2GZOWeYW5Gi
lHKsxCPXHqy0phwpRx4YDzwgnmDu+3p958H79/4c3+/39/3+/r/fP2dJ+cw1
SSGEYS4FiHGSywZOSQ2hI//l6WoZnBnr7UKYIc+SZ8vLxP3EeeJOevPl2fLB
8txYx3BxPhfEe8UcI8UFXIgS8XT8MPcvvuAPHqeE8DVuKjmET5zMLWrf4l7F
3znBT9TSOQOZSMGqRAi3+CDKMBT7sRl7sQebUI3xOGzvE7gKG+N8DMEG1OGQ
/m4egx0Yi9q4vvpkXo4RWIbZOKC+lhPONynmmIilKEGl/iyuwEzkIR/l6ot4
FI7jEjo7511nbOIZ+s/4Ebo6Yze06nXntXo9OBM9USXP4l7ojT7oi34I9tWf
K4zJ5gHIwUDkok49j7fwNXt45X6j5XvlJTwGY1GKq/qN+l3E88Sf7ecGF+E6
zuFB/B31a8wvlp/GU7XraK9+Qt6MQhzDSXy0zhl+acxD3mruYZ6LAhzFTXw1
roabMBwL3SrDmrXGn4q/F2/ns7hjbKv1VqkVGrNPbSqm4QJu69025h4X6X8S
F3NyfGf5ijENettwX6+FX2CHe77VW41BeKM3h1dgJcbhvDGDrJGPBvlz88bh
hLHr+Z3aB/F7fs0f4jOI7358pviCb5iC+vi94J15OfIB6BWfqXkL4+8u/q3X
mXugC9Jw0ZxS9YHivtyOF8Xn4Xzr9Gah0Rr18bvW+8kLrJcq/hW/7bgXLjVu
QnzO2OU8O5EuruU0ruHt6CDeyu15E1fDcqEq0fYKhkpeD7cMzS6Xk9pek3BE
vFhckWj7/MP3OC78/5/6B8NhhAM=
       "]], Line3DBox[CompressedData["
1:eJwl0UkrxVEYB+BjSBaGQimkLJRhb0Xmeb5c83iNt4SFUqysWVnLh7CwIHbC
F2CjzENsWLPwyOLp9573PafO//yLYiuR5YQQwjoViSF8WURTQniT19xTmRRC
FQfmfWZ3eldU69VQSx3bZvWygUaaaGZHv0W20kY7Hbwnh9ApN8y7ZDc99BJh
Vb9P9hNlgEE29YfkMCOMMsY4EyyZT8oppokxwyxzzLPAInEufVcehaSRRTr5
pFJAJjfumy0zyCWHiHc79BZ36nseeOSJZz6dWXefF/WH+lW2/+1z7sK5b/UP
R5xbx+0tdacyyjn+m+mfcKveo4VTtuzdlWdE2aefNf1iWUIs8f+//gIo1TlH

       "]], 
      Line3DBox[{368, 166, 573, 619, 572, 614, 645, 571, 1272, 1737, 579, 
       1273, 570, 744, 498, 1569, 368}], 
      Line3DBox[{575, 172, 761, 617, 225, 759, 646, 585, 631, 630, 629, 576, 
       1276, 628, 1275, 575}], Line3DBox[{577, 290, 762, 577}], 
      Line3DBox[{51, 274, 723, 724, 725, 726, 1664, 727, 728, 729, 730, 731, 
       1646, 732, 733, 734, 683, 482, 460, 1614, 454, 472, 489, 1622, 51}], 
      Line3DBox[{30, 288, 745, 746, 747, 748, 1274, 749, 751, 620, 499, 1230, 
       30}], Line3DBox[{270, 467, 453, 679, 592, 1279, 667, 1669, 657, 609, 
       593, 1670, 625, 591, 605, 606, 590, 607, 1270, 558, 1671, 564, 557, 
       603, 604, 701, 1645, 663, 1673, 805, 466, 476, 448, 477, 459, 1615, 
       270}], Line3DBox[{464, 450, 474, 686, 774, 773, 772, 771, 770, 1277, 
       769, 485, 1229, 464}], Line3DBox[{674, 458, 765, 659, 674}], 
      Line3DBox[{461, 263, 443, 1620, 692, 1656, 721, 720, 719, 718, 717, 
       1265, 716, 715, 714, 446, 492, 1231, 461}], 
      Line3DBox[{680, 490, 808, 671, 680}], 
      Line3DBox[{681, 494, 812, 673, 704, 681}], 
      Line3DBox[{1227, 266, 780, 781, 782, 783, 1278, 784, 682, 1227}], 
      Line3DBox[{685, 462, 821, 661, 1262, 706, 1281, 685}], 
      Line3DBox[{1616, 441, 826, 710, 623, 622, 624, 1649, 687, 1616}], 
      Line3DBox[{688, 469, 830, 664, 688}], 
      Line3DBox[{1618, 452, 766, 767, 1653, 689, 1618}], 
      Line3DBox[{697, 493, 491, 776, 777, 1661, 778, 1660, 697}], 
      Line3DBox[{700, 236, 813, 814, 815, 816, 700}], 
      Line3DBox[{878, 638, 640, 555, 878}], Line3DBox[{879, 655, 879}], 
      Line3DBox[{639, 877, 876, 875, 639}], Line3DBox[{547, 880, 547}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1284, 1486, 1349, 1388, 1681, 1770, 1453, 1509, 1822, 1387, 
       1390, 1682, 1784, 1587, 1586, 1683, 1834, 1285, 1738, 1684, 1747, 1286,
        1685, 1748, 1287, 1739, 1686, 1749, 1288, 1598, 1599, 1838, 1331, 
       1289, 1787, 1392, 1393, 1687, 1786, 1603, 1604, 1455, 1456, 1839, 1606,
        1607, 1464, 1719, 1808, 1340, 1597, 1342, 1768, 1698, 1341, 1629}], 
      Line3DBox[CompressedData["
1:eJwVz71KQmEcB+BXwRICK72CPsylNkty8QpanEPRIXCpISH6uBCpseYuIG10
q6CgBi/ABsEa1TJ63uE5v//v/Tics9Y8qR4nQggHLKU8FkJI0DavLobQlUVO
2ba+wxNJOoy4t3fGs3lXZngxXzNgRd+X5XjfO/f0LH/6uUzLG+Zc6K+88RDP
Od+TJS7j9+nv8pMPrnjkyN06OftDfcwt39yxZe9LTuib150ryKn+Q4VGXGeD
mZ6Xm7TMy/E/+DUfxjPu1+Q/Ts4ncA==
       "]], 
      Line3DBox[{1304, 1541, 1542, 1406, 1720, 1793, 1336, 1405, 1705, 1743, 
       1408, 1470, 1692, 1812, 1407, 1356, 1548, 1828, 1337, 1409, 1707, 1744,
        1411, 1471, 1693, 1813, 1410, 1496, 1512, 1497, 1412, 1721, 1796, 
       1612, 1663}], 
      Line3DBox[{1309, 1547, 1362, 1414, 1722, 1775, 1472, 1413, 1797, 1363, 
       1417, 1473, 1776, 1723, 1416, 1364, 1420, 1724, 1777, 1474, 1419, 1558,
        1829, 1365, 1560, 1475, 1557, 1778, 1725, 1624, 1422, 1610, 1666}], 
      Line3DBox[{1311, 1366, 1425, 1814, 1476, 1477, 1424, 1800, 1368, 1428, 
       1478, 1479, 1815, 1427, 1561, 1369, 1588, 1816, 1480, 1481, 1430, 1502,
        1819, 1650}], 
      Line3DBox[{1316, 1372, 1431, 1802, 1338, 1550, 1712, 1745, 1434, 1482, 
       1694, 1817, 1433, 1564, 1565, 1436, 1835, 1483, 1632, 1647}], 
      Line3DBox[{1319, 1375, 1432, 1376, 1779, 1318, 1780, 1377, 1435, 1378, 
       1804, 1320, 1505, 1379, 1515, 1380, 1821, 1516, 1654}], 
      Line3DBox[{1324, 1382, 1695, 1781, 1322, 1783, 1383, 1445, 1696, 1782, 
       1440, 1566, 1384, 1568, 1678}], 
      Line3DBox[{1329, 1346, 1347, 1769, 1339, 1327, 1702, 1746, 1348, 1590, 
       1697, 1836, 1591, 1450, 1452, 1451, 1680}], 
      Line3DBox[{1386, 1554, 1553, 1485, 1508, 1344, 1465, 1818, 1699, 1521, 
       1484, 1302, 1609, 1460, 1608, 1461, 1758, 1457, 1459, 1605, 1458, 1301,
        1832, 1491, 1492, 1394, 1555, 1788, 1732, 1300, 1601, 1602, 1757, 
       1600, 1351, 1299, 1791, 1400, 1756, 1718, 1297, 1735, 1755, 1592, 1295,
        1753, 1752, 1689, 1293, 1717, 1751, 1398, 1292, 1807, 1350, 1391, 
       1785, 1703, 1290, 1487, 1488, 1750, 1389, 1579, 1578, 1535}], 
      Line3DBox[{1540, 1582, 1352, 1397, 1759, 1704, 1495, 1303, 1543, 1772, 
       1353, 1539, 1354, 1794, 1305, 1355, 1760, 1706, 1306, 1773, 1357, 1358,
        1795, 1307, 1359, 1595, 1761, 1708, 1596, 1308, 1731, 1774, 1556, 
       1360, 1545, 1361, 1668}], 
      Line3DBox[{1549, 1583, 1584, 1415, 1762, 1709, 1310, 1498, 1798, 1727, 
       1418, 1367, 1801, 1312, 1499, 1500, 1421, 1730, 1824, 1522, 1313, 1501,
        1559, 1799, 1728, 1423, 1672}], Line3DBox[{1569, 1442, 1841, 1737}], 
      Line3DBox[{1614, 1643, 1646}], Line3DBox[{1617, 1820, 1651}], 
      Line3DBox[{1622, 1635, 1664}], 
      Line3DBox[{1642, 1577, 1736, 1840, 1546, 1667}], 
      Line3DBox[{1657, 1524, 1523, 1563, 1713, 1830, 1562, 1374, 1503, 1317, 
       1803, 1373, 1429, 1833, 1711, 1585, 1314, 1710, 1763, 1426, 1371, 
       1315}], Line3DBox[{1662, 1627, 1639, 1674}], 
      Line3DBox[{1677, 1636, 1439, 1507, 1506, 1325, 1716, 1765, 1438, 1805, 
       1715, 1321, 1714, 1764, 1437, 1381, 1323}], 
      Line3DBox[{1679, 1576, 1448, 1567, 1447, 1589, 1330, 1831, 1462, 1463, 
       1446, 1806, 1701, 1326, 1700, 1766, 1345, 1328}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{882, 1018, 1071, 1822, 1019, 1130, 1020, 1785, 976, 1026, 
       978, 1740, 1196, 1163, 1164, 981, 1772, 1036, 983, 1743, 1038, 1122, 
       990, 1046, 1797, 992, 1048, 1798, 1124, 997, 1054, 1800, 999, 1056, 
       1197, 1833, 1002, 1170, 1004, 1745, 1060, 1007, 1780, 1009, 1062, 1805,
        1012, 1783, 1014, 1066, 1806, 968, 969, 1746, 970, 971, 1238, 1241}], 
      Line3DBox[{885, 933, 1738, 887, 1752, 942, 1742, 906, 985, 1773, 1040, 
       987, 1744, 1042, 1123, 994, 1050, 1829, 995, 1175, 1174, 1052, 1799, 
       1125, 1135, 1246, 1058, 1819, 1247, 1280}], 
      Line3DBox[{889, 1748, 935, 890, 1755, 1209, 944, 1837, 908, 1210, 1761, 
       988, 1043, 1092, 1133, 1093, 1796, 1233, 1267}], 
      Line3DBox[{891, 936, 1739, 893, 1756, 1028, 1790, 1030, 1165, 1166, 
       1167, 1774, 1044, 1271}], 
      Line3DBox[{895, 1213, 938, 1838, 896, 1214, 1757, 979, 1032, 1085, 1810,
        1086, 910, 1282}], 
      Line3DBox[{897, 1021, 1787, 1023, 1024, 1788, 1172, 1173, 1033, 1120, 
       1792, 1119, 1132, 1187, 1232}], 
      Line3DBox[{900, 1073, 1078, 1216, 1839, 1217, 1218, 1074, 1758, 1145, 
       1155, 962, 1189, 1207, 1208, 1191, 1193, 1192, 1064, 1826, 1179, 1180, 
       1260}], Line3DBox[{901, 960, 1079, 1808, 1081, 1080, 1082, 1111, 1818, 
       965, 1146, 1157, 1156, 1113, 1075, 1147, 1110, 1129, 1015, 1112, 1159, 
       1160, 1158, 1827, 1243}], 
      Line3DBox[{1017, 1115, 974, 1070, 1770, 930, 881, 1116, 1750, 975, 1025,
        1083, 1809, 1084, 903, 1121, 1759, 980, 1035, 1088, 1089, 1793, 912, 
       989, 1045, 1775, 1094, 1095, 916, 1762, 996, 1053, 1100, 1814, 1101, 
       919, 1763, 1001, 1169, 952, 1802, 922, 1006, 1779, 954, 924, 1764, 
       1011, 1781, 956, 926, 1766, 966, 958, 1769, 928, 967, 1240}], 
      Line3DBox[{1171, 1200, 1201, 1199, 1784, 931, 883, 977, 1807, 1072, 
       1771, 940, 904, 982, 1794, 1037, 1090, 1812, 947, 913, 991, 1047, 1776,
        1096, 950, 917, 998, 1801, 1055, 1102, 1815, 951, 920, 1003, 1803, 
       1059, 1105, 1817, 953, 923, 1008, 1804, 1061, 955, 925, 1765, 1013, 
       1063, 1782, 957, 927, 1076, 1831, 1181, 1077, 1065, 1205, 1206, 1836, 
       959, 929, 972, 1067, 1242}], Line3DBox[{1266, 1178}], 
      Line3DBox[{1212, 1211, 1239, 964, 1768, 963, 961, 902}], 
      Line3DBox[{1219, 1198, 1834, 932, 884, 1751, 1027, 941, 1741, 905, 1760,
        984, 1039, 948, 1828, 914, 993, 1049, 1777, 1097, 1098, 918, 1824, 
       1151, 1000, 1057, 1103, 1816, 1202, 1104, 921, 1152, 1176, 1830, 1005, 
       1177, 1106, 1203, 1835, 1107, 1245, 1127, 1137, 1010, 1821, 1138, 1250,
        1204, 1251, 1283}], Line3DBox[{1225, 1222, 1268}], 
      Line3DBox[{1226, 1840, 1234, 1194, 1168, 909, 945, 1789, 1031, 1791, 
       1029, 894, 937, 1749, 892}], Line3DBox[{1228, 1220, 1820, 1223, 1263}],
       Line3DBox[{1261, 1811, 1131, 1087, 1034, 1118, 1188, 1832, 1117, 899, 
       939, 1786, 1215, 1022, 898}], 
      Line3DBox[{1269, 1099, 1778, 1051, 1149, 1150, 1148, 915, 949, 1813, 
       1091, 1041, 1795, 986, 907, 943, 1754, 1753, 888, 934, 1747, 886}], 
      Line3DBox[{1272, 1841, 1249, 1273}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
    "]],
  AutomaticImageSize->True,
  Axes->True,
  AxesLabel->{
    FormBox[
     TagBox["L", HoldForm], TraditionalForm], 
    FormBox[
     TagBox["w", HoldForm], TraditionalForm], 
    FormBox[
     TagBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
        "CacheGraphics" -> False], 
       Spacer[0]], HoldForm], TraditionalForm]},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{362.88557592792233`, 260.53110331549635`},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->NCache[{{0, 1}, {
      Rational[1, 4], 1}, {-3.426337934124774, 3.1824093577557626`}}, {{0, 
     1}, {0.25, 1}, {-3.426337934124774, 3.1824093577557626`}}],
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-3.0241144006600185`, 0.256277382399615, 1.496346883243047},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.6887816200794163`*^9, 3.688781697546536*^9}, 
   3.688781821644271*^9, {3.6887819692919893`*^9, 
   3.688782004690013*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJysvQd8VVXaPXy4vaXQSYEkhA4hlIQSQgmBkEYagUAIgRB6r1IEUVFBUZDe
O1IsYEXFOvY+tnGcd5o6M45tZtRR7K7vWfucfXMSir7v98/vt285995zdlnr
edbz7H12RtYsmTF1bs2SmbU1iSMW1SyYMbN2cWLO/EVyyNnIMByJhtFoXaLB
1zAM/VD315YP9iP/uwOR6rUTX375JW655RY89thjhsM69uijj2LTpk38zPxy
6IIf+vDBBx9g6tSpWLFiBb7++mv12YEDBzBu3Dg88sgjl/idH2+//TaWL1+O
66+/Hr/5zW/UZzt37sRNN92Ea665Bl999ZX5g+BFfvzss89i7dq1ePLJJ3Hd
ddfhu+++w8aNG9UFeYJz585d6scePPjgg+qqcgWsWrUKL7/8MjZs2ODASy+9
JK1euXKlboj5O/8F5wjg5MmTqmv4d88996iLXnvttfjtb3+LH3/8EatXr8bj
jz+uPg9c8PsgduzYgX379qljn3/+OZYsWYKZM2fi97//vTrGhlgVubASEdb4
/PTTT9i+fTvuu+8+a8y8OH36tDrZ3/72N/VdtoQ9JY289Il+/vlnVYvz58+H
B59d+q9//YutCR8jSP773//WdY3PdjL1939HY6Z1DamD/sT80gfm56nW5+zV
w4cPs87her3wwgtYv3496yvveMyN559/XjWcI7x582b8/e9/v+j5Tp06pfBm
P98rr7yiRvff//53uGN5bPbs2Xj44Yfxxz/+Edu2bVPn/uKLL8zzvl//vHfc
cYdCGc/rsQ3YunXrWP/wtThAS5cuVcT7teeRemHRokV49dVXrfY6sXXrVoWq
cL+998vnef/99zFr1iz8+c9/Dp/n6NGjqi//N+f5y1/+ghkzZuC9994Ln4cM
0d+rtbXfGl/Dbx0jW/Qxdb155vW6qSePwqb+s11bX5rmp2ETjh07prqZ72qs
0/DS0sVqqK+88krVVZ988ok5CgFl6mj+tAXj85133omrrrpKcZmf/eEPf1Cf
za1fQdZg//79+Oijj3DmzJmGFSSHFi5cSPyYFXQQOpPVp03xxBNPYM6cOXjq
qafwP//zP7RD6gTffPONuhYtI6vK9+ypPXv2KHoT8dJk3HbbbZg7dy7+9Kc/
mb03p37lyFiin2i5+uqr1cjaKsfOveGGG3DkyJEwIHmpZcuW0bZavefE999/
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
oySjrZpXu8Y2bWKbR6uDtj36omTwqHnvaVnxWJrTXF6H18txrYI8bOcM2Y5S
v9E2nNvm6rhbiqPQN60Xri/iymJ/OHTXy2JpgXXItLPUtMBMctL68xy0ztvK
o7E8P04tz2bCiEpXQXqqCenHLGvMxM9TygKr1w4eNNrj7smNMSyju0RuUUqc
nrWiN4pl/pxi9SVB9KuLTI3wpg3NNwia757WAlvHxeHAhFaoGtpRLi+sEDRP
lahuTZEY9xkBPDqNsyd+nJ3sx93VXhwrN3CgxMCekYZYDzcm9Y1EK5eBzetW
KeOr0UzU6ox2vHXMfhdch/po5q2TvBfVvsMtU0/apms0cxZF70io7+yhL9AI
32ihWW17uu4GFEvAOL2PoHlaOoE8Pd3Nt8S2IEkeXUS4acLlO339KOmjpmhN
mDsVzCMUzOf1d2NBf1p0L8b0bSX2uS2GpHUR8REndjsalf1aYvaAAJaInV6s
MlzMc7mVvb5ikJk4XTbYpoulW7S95vPqoW6MERyX9k9SmKb0uNqUHhfI4rC5
bqA6mEaYMCgBFQPbYjPnbernQlU6waFWcAQUHsNzfVJosreXBlGY0Rm5GV1x
bWFzHB7jN7NWg1QW6aAt4NpuWedNhT51CSGIstyby6KwIj9WZRh0HpSwfkDD
eropf2mtzaDMtM7MRtHxnxFMD1eYjlSiQltnztrQ0lOIMMdJgfHbRXUW+g3B
9KqSJOwcH4erSxMxJaeDfD8SD08J4r5JQWwpb6qyZ49NC+D5uRH404oo/EGC
uLeWCD8WRKhjT88M4fiEJlhbEosTZQb+8tjeFTaLSUvK5VetbXDWEG8AZ94W
zVt7zf3CzGPcC4VRGm2+yzLRvPuPd6bzFmwGd7zRzqW+UX+pntMGdX3rv47o
9uzeiZFJBqamE9NT0gTsU9Pccho5QNirIsB3EvkK9PKjKX0E6umxmN2X+S7h
gIsccBD0wqs5/dyYxyJ4n9YviDF9BO/pbZGZ1k2J7dkZARUrim4x6hJt0p4l
Az0NAS9fWK4yFiuHuDG6vxjqfkkEuzLkRvMGMttbH+sNpMnN+R7BdxuMHZiE
jQWeC5YQWlg3HBbai2i0wxOUluSePSwO1xU2wYQhbTExS4x6WQgHR/sUsu1B
HAnCExZldMCs7BjsEs2zZ5SgXhDO2FDP8eglDArlU0yUP2QtZThnBXpirx2E
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
XZCWAFCyEqXBH9o1LrBJ+h07lVi34AhqVJ+X52ZQ16Y1aetgjhxyM+mdcckS
ASISFATdFe306l7ScaCPYMZfud0r3XRwZhINRB/UPbp/txQyltejmnL3DQug
QcNG4eAr4RdGnP2/wIeyJcHSJPEH2y7n36WLNKukP63rVY4GemCj42XYaFs5
gBrelEn5twZSYT2VuRrfKIS61kujXg3TZRfG2s6BolCc/rheyvZIlj9fJ1EH
qA1SaFgY1iqD7uqeLDsudvaP4Wgsgwr5sagbTpeJlowVZth6Y+OQhQ2jULA9
eXS7yrR/ZCLjgZXLjNIEqgc2yk4OONO74LbQiggZr7dpYKr4K9i2jEThwNbV
aWHPLFrbP50eGZhGJ+bE0R92a8/KaB+9Zdlxj1mhIKh+YoS0ePs6CCm1O+aY
FiiTB+Mop6Yv7Xn6eQckv/zyi+wTPnHiRFkgMRO2/i+BRE2n1SBxEvFzJw2n
jb1dlN9YQKIw0qMUI9mMkWxf6pBdjppWT6CON8fS8Nq+NLZBAE1p5E/zm/tT
QcMUGeN4d8cQ2akD/wRG5zHGyLZcpUN2sw7ZiySSRO5h9NSACNYblem5wRHs
3obLrpwPOXzaM1DVNYe1zpbZFNv6J0jLF7KaBy2M2Ebne47eXxgVT1M7Z0r4
9OP0KI8k+5V0yJUi9/OLomjsnVXo/fGJ6rjrZVFS0v9nAfY5x8pRIIt6Z9Fd
fTJlph9GMwpuBqXJMdj/LI5V7V/3qBGq4zpXpa+mO93ILl+n5cUyP36yx/2X
BWHUt2M9OvPfOYMEMBGFHLxKVSAx+IEDiWr6mjVrmJ+7du3i97BjFcYCnzCD
KOz6jgdwevTo4YxycTzb3NzrAs7sCcPoIQZOlYxUDto1cHo7wGmpgdM+24fa
VQ+n1rUzadCtvqJgxt8RQNOllOhPI5owqOpVptltY+gRSfso47OVjc8O8VhC
nRIi+kHW9Y6lAS2yOOYO5Uc4vTlSpcTfH8OGh2Pu9wsj6K6eFaiofSaN65BJ
K3pWpHcKWeFMiJRz2TBxzHRCIeUztkM2beqPebqo0kQp8FgK5pfrUDD/zFfK
5bNJCbSgRyZdwr5pK/0oMxBwbvLyaGV8+CeUyy8Mls1DACY2WAymvi1r0I7h
qbR2QDo9zj8xQvAvzPfEkIT7dF/ISjMgQWNItI2ue89u6aK1Gx51WjjsDLcX
dswQoS1btjBLN2/e7FJNtKbTzmAH9UJTjSnFjg82WRrfZODAgc7B6FdDTMGA
wdTrBhdVz7IQ04qWTjSICaQ2jJg2mS4a2rIyTSwpos7VAqS2V8LqZnLjACmo
LG3tTwvahFGHelVoZts4ORRFdj30Vj4u9u0ak/TS4GAqapNGG/vEyqlEqqZX
WkR5X3eYqsmvYbKjfnrndOrTvJq0d2A/7q7BSfRJiZvdlAhWO1E0vG0V2fyH
UKhMxFynuoHb8giboWdGlleIcfbq2m0UHBC54iQkuqRTNeK63K3at/+YH0c/
82MbowXuTnGnqtJ8vKxPFq1h24R9+L/oDiNBjukwUi7NPR4jnfXjwr3R1O12
VSq5DiDZI2pMTRpJQRNyeygc+4gSH+sCa9eu9YCPrlp7wCev/2DqWsNFNbIt
+DShMUMLqGZ6PDVi69SGQ6MWqS66Z+ogem7XZmpRLYqG1A6gYlY6E6F0mgZK
U9rytoG0qG2Y9C5geMODXcOkNLzdslaAz56CcImk95ueBQ2ftyz4SAKGPd1P
Jb8cLhtjPi2JpPeLoun+3Iq0oFsa5bVQcJrYKYsGt65ChydHicLBAZCAzc9X
s1ZlKB14ND/OxHbvqvB8dc+Cr610+D1+VvjxdULqC6bw4YrWzQtoNYmh8Z2r
0NmlaFaPpV8XxtGWoZVocS6buL7KxAFPm4dXopX9MumDySn0O2ulf5dJa41K
P6+KoQ9LguiOhg2cI6TsuoYXZuy6xhUxk61/gUYdjAG28YFZDBhY5I2PbsBH
ZQsftWhc4XCqmZHI+EiU0Ll5RR969ZntdPHCOSrudju1rRlFo+oG0oSGATSV
jdKc5oG0UCeFMbxncut46tkoi0a2rEgbe4TT7n5BYpQwGmBKhwo0rWNFiYiA
D6lDAB8oh41WLQMfmPBZJ+js8BlT8lAO+3oCjoOMpX6Mk4Xd0+Vgs6U902gJ
Pz6fECPeDFoFcL43ImgfoMNVNj5O6aE8rxYlSSsAvBm7FmEw8h/Q4UAk2M66
OLtCAI+3xqXQvJ7Z8IDVaQ5oG7lb97twlHSKVcuvC+Ppa/Zw7snLpE3D0mho
++rUq3lN2jg4nZb3Za96YIaM6ZnRMoAe2/a4QQimXeEghetECFwdTJW+DCGw
UZjBYyOkZ8+eXlPqFEK6M0Kq2wipQ98e/Jzq35RNd1RLoFZpLsprVInOnvlX
vuL1p7fIBLic2xKouEEgI0RV9RcwQpa1DaJ7OgbJEXrru4bQtHaJulpVkR7r
Hc6GKIzaN6hO69lleWmI7uVjhLw2QrktpqnERohdMFUoiZQky1F2W75ilGDE
CxIsX06IptcL42QbK3aeT7gzS47Senp4spzlAe3x7zyc+M3YcIWWGiCtQU4z
QjBi/NOJCYyGKLtkgE0vizBcXqNEjJEDlCC17dUCyQXWI/PYUzkyI4Fjo2in
gOV9Oh6Go67UQ9rYkUHLxh+L4ukEY2fnSDVXdVnPJLq9bn06d/68x/HrJrjx
AomdhjMgAc+//PLLUpDcoH/Rq1cvx0sxgOhXMEg8kpuqWoBoSb9+f4Qa3lLZ
AcTQNtXZd1Z9U/+dOU0z+9SlHjUCqUvtZJrQKIhmNgug+S3ZM2FA3C37MVWS
Fj3Om3qG0qwOidSvSRblNc2S0fsHBgdJFf1F1I8ACMuPFbPiBQiT10fp8msN
iO9YbWDWz725qRIgfycdRqgdRdC3OMZjIvvT/SvQA/1SaVDralTcsTLdnZsm
h7x8P8NNZ+ajbhTlgOGzifHUr2V1qSldVkNSasMH7onoDFeIxyZogwj4tQen
YZBXddOB5Fs2GlZA4zij/PQ4P1PZRJ/nS0N8aExRics4DnZ+3wsF0CBmbp5B
AWb2YBzIZShA9685ccmgANugxt1Rjka2zaS//v0vQOuR744dphurZVNjdiwa
J7lo90MrdZBUn+ZNGErds13U6ZYE2ZE7q5m/OBaLWwfRXUjV3xnkpEsQzTze
J0iimfxmmZTbpDKNb5dKO/MjxXBAJbzKCHhjpKdf+qFGwKdjSw2HqAWNAPij
GGq+f2S8NECWVnaUTwqnAmn5v+ZGSOH6vZJ4WskIAAp6Nq0hR/zsH51C302P
pf8WRsq2wceHVKQLizwQoJ0Lf6ch0vJR4Z9CMWAjrr/OrUXTQwPSaO/IitL5
4+ucxSdzK/zAeqfkwzw/vzKKBjUtT18fPmpYbadWvViNLJfZpGFYbR/v7MHq
f//912wBdFj90Wdf04I7Qzg6zLBZfYitSnoGs7paHOXc4KbDX36kWV2XRgwe
QB0zXDT4Nj+Zsj2yYRTNa+FPi1oH0op2QWpGSedgnfUIkU1v93WNpo4NqokF
WJyTyGzPpok4/lmqMaEi7G95sdr4kB4WYAKyHBiNHSt9XD+wgB+bYldjoi4L
QUzPq6nGHJ/upvfHJUhufUibajQ5J1vy699MiRM2X1qCA6Q1i605JLpnwZPF
KO0hNYaB9mfZb7wkuyMvZ7Hk3LV038uuYXGwtLykX5vF8PwxCfOxxx7jV+oZ
cen+/fvR5sJGhOMCc2IEDIARfeH9rZrPXx78lpbnhNC4jhl0yvDZT7yHjEy2
9FViqF/DCiqAvYPy8vvTTbHM4lr+NKKOL3WsnUqjGsfSolYByshrnS412+4h
tCM3iHV5Jk1uX15mvO0bEExP9w+jZV2TqH/zbNnPiHNHPhgTKgbeYXGZRp5Z
NDmc7umdSo8WpIgOB4tNJaUsFnvnJU7qKVCQYhh5zG6b0KkyjeTwYBz/vL9f
Oh3DHJLZMTLTDUcYXFgcBVUOCTXdKQ63mXsXdEPpWyUpsuVRHSfP7JZCC3i+
XA+6UA9fPT1KuH5/DE1t7KJ1Dz1qGG6nw70YDpt8//33Yxy5y1c/79q1ix56
6CE03bOpUQ34aMjHGLZNmza5AgQYAcJ7JDH4lTwAlO+//z7MxI6UqRl/5Nh3
1PHWGKpXNZ7+PePIvcFDvcwIWjGhAGPOtdw3p34MilviIPf+NKw2W4m64XRH
rZqs5oPE0K/UxXxUZB/qHkQbuoeJ9/dY7zCJD/boXk4M8Hye48eV3ZNoQMts
mt6pEj03NFqA8YXetPSpFyiQ6fywOFra4j4fH+2RDTdq3gFFGbGjd9oBQ/0A
iL0MDMwb+oy9vvv7pdF9fdOlyL8qL51mdsumVwqT6cRs9svmxqis57JIEXkZ
9qc0ABT8BI4W9xeWNxvIrwMYvnRxZST7SwmyBcOgwkySxvEPXqhABxLUAFku
PbrcoNT5wd4Dnn3ppZdekjYR4MZfngPl73BoBcYoYMg90ATfgZHigaZ169YJ
mkK0mkFTAN+K1NhCHQiFaAhdunSRDh09TvetegDOoLdKqZfBanrvZqVS2lJf
Rs9t8S4acFuAqJWiun7Uu24SdaqXQSva+tNdjB60HD3AluPhboFU1CqFJrZJ
oZ3sKDzeN9TJQDw7IEyyD0heHRgWTvf3SpIZmUNaZdOsnDR6eYRbEISNn8ZF
xA6JvUMSaDzHBGi0LAs9318FPb9ZUeVf86LkKLFhbavKAZ7/zFfu4qXFkRI3
nGCVAjSt7JNBjw5MleOKejSrSQ8womYxol4rTpFt0n/Oi5XUJ7ZLozP4P2z2
XeaWUXRiQAQ4YLVxFO9xs3/sz4ya4MrUALBT4RU98VJWKPDbb7/Je6U1UzWq
1WAoRGMIwx4NhkK0BjJn/QEtBjM47goYUZjBs690NgIp+I4QPP9n4SI1LZ26
Nb+V/jv9j8JFA8FFbcYF2oMG3BZIo2/3p/ENA6UWm9sw1fEogIuN3VDXTaP1
3cOljrKDcbHLqqM8p0MIOJAYBwwH8snBMTSvSyXq17yq1FDm8P9fGcUeQFGU
DBwsap9ND7OZQc3kyBVw8cN14ALHMr9cmETTumRLtuFv7+5He3Owm2HklrmE
X0xOoHsYKijBwYcAVNYWpFNRx6q0vn8anZgbR3/Nj1U5Tp0pd0YqSTSxDCGo
0TGOrlmhrE5OdbYgTz1n48VkLb3wYucXTD848gtINuGV6VCDA+mNF4w7gk6x
8YK/hU6x8bJhwwYHL8EaL7BSGIXk6JijNl4qpVG/OxvTpQvn/HSg0SevgG5P
cFG7WmnU47ZoGllHbXSZ2CSEutdPo+4NMgQv67sE0sIO0dIHsLlXMG2VTKbC
y5NeeDmgs1RSNikMEyv0fmEk7RsaS/O7VqL53SpRl8Y1aFaXdMlcvlMUIzuu
EHB4zyexk+Bl4cV0epxdEEkLe2TSR+MTRH941NwUZrDJdEG08kWdZPgFDK1k
M+Tijy50s2HC8VmJghtMYVidl0G9m9egDRxyLO6VRW+MTZEdt7/Pi1MJrLuj
1OYsBRIViGo35acZIdSrbT10EF4HYHAuKH6N7YIGMHbKstZVAINMpTdg0JVm
ABOsAQOjpUHjKJjNmzfLVEkAJrh0J5fsksE3vqa/F/hJTk6mHdu3aYNZmQYP
G0H1OXJtUzuDOtySxOBRhVts41vcyo+GNkminAZZNLedW7amTGmbxOFLkIDH
U9mE0fOOsgl3wKOSV8qvxWy2g2yEvh6PdHgkAymNcptVk+17KMw+PiiJvpoQ
LbmKE9PDmdk/TIt0hXn4tt4TCH7X84mPT4+hiey+nJrLYGDkMANN2U3rG4GO
ClRTLoti5IDpZZhrnUT39M1Q9Xx+fZJtEhTOruEV6eFBlWhNfrrMh0e2c2mf
TFqdn0E/z4mnPxhMZqabZD5Z00xr5KI1Gx51ZWny28luL+QgOwnfF7ODy0LO
ndeJnGDLOUYnLKPHQQ52pwKdOBLEIOfhhx+m119/vdQ0eSFnm/5edG9HR0fT
E0/s1MipRp989iW1zg6kPreFU4ebOd6r5UtF9VUNDglyFFAWtg2n9vWqUqPa
N9D9XSJoO0dF2yy1s1e7L8/r/SJAjlN708jxTnt+OymMSjpm0oa88uwER9HG
/PKshjJksObi7mm0gB8fj4sRtfP7zAhf6BzWo96gQex7d580SWkgoeWU3eZB
y2CviL/HljqdH3fJpD9Jc3FwgVF/tCJKvN3nR1cQW3RBT712qTPfjIn6a0Es
/TY/jnaPqEir2ZytKTBIypLXD/bPoI8Y/DUrxdKXXx90UGMnwDVqyuoSKisB
PswLNdifH6x36cOIoQ+AHWB+D8/qtKc1a9Z4hFRADcIvGzUIu9544w1toNSe
UY0Y+cYV+nsxIKZ169Y4qlyjJp2+PnSU2lYJpLxa4dSRUTP0Nl8aUy+AJtwR
QDObBdKi1uzcdGDd0yGSmt5ek3o0yqIhzStJrR8b4HfbqEF/PUoqdmbMGzXS
PMTvF0XL3IdPS6LRGOKDE0tcifQZR06vjo6TnW8DWlaVZBmqKp+NjxV18+ec
CEEM7JRBDjoSESm9V5Ig55XYZX4ve2XpnEBrQ6Y61vNnjqJGtq/KH4lR5Tcf
OQUh3BkWKV7NUlViEYVkwejraYm0bmAGjWsaTqOLSlymzvHZZ59JCqwMuNgH
T9upcATeeDVHv6eh4gEX/F1ZcMEcZW+4INPmDRecgW3Dxd5iPF5/L5KxpqCr
fJsb6auDR6hd1QDqXzuUmt2cRoNv9aPRdQNoXEM2UU0DJaV+D8NlZPNkGt86
iR7sFkoDmqXLcbDLc+LoyfwQenoAzqtSMdJLQ70SqWXA5Rs2T7sHx9O4jlly
TpV3L9FxvRMIKZi3CuNkQ9rAVtVkZySm+n42IZaOTkXIi+pKEH08Pp76tagu
G9S820IYL0rZ+NqKRudTgzwggzaj14uTaW73LDFN5xe7BTW+QI0ESYwxBzbL
TANaOI1onkLfHD7mQMTOk3tBBCbKnG5u58nvvltNql93FYhAEyFE8obI6tWr
PSCCkKkUInhWEME5cwBHiIbIqVOnzCwRV1/9vQjNMGy0FCJ1BCKtKgdKy1mz
mytR91tjqLCur4JIE0AkgGa3CqdO9bNpVU6onBy8je3Q2u6R1LlhNcprlkU7
+kXQi4ND1Gax64DIUbZBhe2zxAbhJG4bIkf1bp3SCbOq4vIdezHvFqv8Okpy
PZrWoNldM+nF0Ym0qm8lenJYCp1fGCGGSEOEceDsXPS1rZHL1ilnHR8miuZ0
y6KDUxOw10LydPi7C4udEozK2klPNNIVSxVIPhwTSA0bNqisiWxnXr3wgZQL
Nn/Z+LCT689cBR+ouJWFj1WrVl2GDxg9HFpm4wM9IDY+kOoxKqStPNelQ4eP
UHy4vyTi+94SRI1vzaa+ddw0saGfg4UeDdJocqsYerBLEG3sHiItiNux379f
KC3OSaA+TSrTmDZpUn3z7iDzxsIXbFnQOQbL8glbFtRcvLFQViiE0Bk97yjY
IxH/7TQ3bRtUXnbU4CDJGV2y6LmRyTJtGLu3zi10Dpkt0zk5YzsnUmaJoi+n
JMjWCvQNIYnrr6b7n18SLWqDwXPRqtJKbe5uN81vFUCbtz/hug4wlJVPAUBM
/+nHVwEDlExZYIANsMEwbdo0cVIBg2ANBjR6bN++nU6ePOnYExsMN8nzHQKG
mDB/ya0NruVHA2sFUaPbqtKQ+lFSjJvYNEI2N0s5trPaCCH9qH1C6Il+GPgQ
zIohkka2yaD+LbJpde8EVgph9O7oMOnc8ADDWOVm7BoEu5EpFRnZ+FBGr7K9
vaqsygzGS52ZH0FvFifQ7G6ZtGtoeVrcU221ujs3XYaiHpoSJ9ut/mIQIM8G
f0LHxD5AA/umJkRGJn99QRrtGV6BJR4Z/UWMAEaEr+gHPxmXe2FJtNERygtR
Sdpvp4RQizrV6ez5CwYQ5sQydvi8AYG8m3dDhg2IX/R70ODe/ih8xaeeekqg
EKIBgf19OKjUTphgbjQA4A2IHTt24BplAkJNjWhBh48cJXeoHw2r7U/D6/jT
mLp+1KtOPLWqnSVTQcY2jaJhTZLpXnYo7te1nEd7enYMwpF4aQiDJD+aJnRg
h6RlNq3rk0gvD4+kT4tDZYirAcSRCWE0ul0Wre9XXnpKy7ISx61Je1dL12M7
8bg7K9POIeXp4qIIGbr0www3OxcqTX9/33TpwprZNZuW9Myku3Iz2AmJo+9n
xIqWMGfIo7bz48xYGtqmGusRtyrtCCZ8SjERJOdlXlhS+pC6LZuKp/J8afjo
4iqak7DP4Dg8fC8wICEB7/KXX35xwAAv0JgPYY1J2585c+YyFWEjIpiefPJJ
l5p6DFRMmTKFOX11ROBzQISyF7fQJ59+RskxoTS6TjkqvL0cFdctRxPqu6hP
nRjKqVOB2tdOo5GNY2lVBx9afacfbcjxo03d/WlH7wDZE7W3IES1pg/C8Ykh
9NZIjkYGuGlx1/I0onUmFbdLp439kuhTnLA2PpTeK4qiEW2z2S5ESYtOWdsW
rqYKDPd/Z/tweEoMDWlTlX8Xrbp1YuTMCEQf2BuF7OpPM2Ok32/HkIp0HwNi
VT8FCAzLfiAvjaZ3QaY9mV4uTFHjX3Am+bJID0/hfOkhTtALi+Fh2EjA4LoL
SyNoYOPy9M2RY66qmn12TkylNDxmJpoAwwy2QnIT0Pjtt98UDFKvAgPW8jiM
+DIYQOABA6UYbqFx48ZTn17daXi3RjSCHyP5Map7IyrscQf16NKBuud0onG5
jWlCn8Y0qW8TmtqvCU3Lb0rz8uvRlrxYerwghnYNiKUnB8fSM0Nj6bnhcfTS
iFh6c0wMvTwqTjz7oo7VaHDbmjI5eWZnpnPvZPpxcjB9OzGUjk8Kpe8nh9IP
U0Lpx6mh9BM/TkwLpV/48et0fswI8zrVFrsiVevFS+wCzmRX8J+5ET4YsuJK
kbL8Ke+xKnozkxRWFqK+GyNs/3xSAt3bJ50eGZBKvZrXkG1xq/PSheUHmN3f
z4yjn2bFqihiWaSU7S7oOYT8U7Pf32E14swXBwVQgwYNXdWuj8VlpSFMnlxY
fHsZLA6SZz+OWT8nd2Qojepciwq71Pah4q61WbxLutWW7sv27dvTwC5NaGZu
LZqeW4dm9a1D8/rVoTn5DWnMoN5UOKg3X7hocK4vFQ/JZdqNHZJLE4f14kdv
GjKgHw3I70Pt7uxCk/q3oVWjm9ID/Fhf1ITWjGlKq8c04/ea0Wo8+P8PjMHP
FvRocQM6NDWRDnGcfXh6Ih3hx9EZiRy0x9PojjXpkUGZdGJ2Ao7PmpmITqBZ
ieoYl/lh/Ahnrw35y3MLwpm4C/np4sJwnAW4OIzVaAgdneKWtPmf89z01eR4
1t5ptHlgRVqbX0mOq8O0+6W9M6T4+gNr8BPMaRyDKkK7nG34pSWQV2Qac6r5
0qatT1wPo+xdzldsqW0m/61Kf3L41apRHSq53UXTG/MfN/GhOc18aEHzcjS+
STgVNEyk9rdn0OzW4bS+sy9t7OIv6hJDEbb0jZKN6XsHRtOzg6Np/1A3vTjc
TQdGuunVUW56fbRb5OrtwhipYaPFqKBba3p4TF16tLAuFea2oIYtO9EY/rl2
ZAPaUVKXto6tS5uL69Fj/MDPDUWNGToThuWyBpgwPJfGDculEQP7UsnQPjSR
X+M9/Bw/vA+tHNOONhQ386P1xc39acPY5sywR8c1o5WjW9POMTXp1IJ4+mN+
IlzrRQk4AGJBIn07M5mOzEyhhwdn+dDSPlUZrfXr1qFxOTVFttblVWT5w1HC
0RI/9e14R3VNUvsYDZsDMu6/rOyu0L25/LcKTRgzhMbWcdGcFoE0r2UgLWwd
RCvaBlBO/Uwa2SyRSlrEU06DbLq7UxiHskHioGzVuzCR7cAOuxdxIKiZd8Ie
69s4z2hMmHSRYtYJtjEs7FaR7urByoH11zHWX0jMby5IoEX8Po4vm51TifYO
iWfHJYz+nh1Cp2aF0u8zGMnHp8cx6GfgMBH0ATwzqgJtGpQmZZefZmGc6M+z
MF73tzkxdGDyDbR1XAN6fFx99ubG1/ejJ8bXRw1+Yn1aM7oRdevUhlYUdgKP
+C8mDc/1ockjcl1hNHNUb5ozphdNG9mbRg/uS0MH5lFx/xxq2q4r5eTkUJcu
OdSuTSsaN2ESLL59wjWyG6dOnWJU4Fm5EcYRNEN7sa0fVbYyZASBiZlfcsWm
YsWr22nkQMZdLZfwaEmbIFomldkA6tYgk0Y3T6b1OQE0tU2cjJZDlRa8wiRP
RBcmiYmUA6r2puP37dFW0aRYRRUj2mTT00PjZR6N2d2GE5dRoUVf+Kb+KTSv
W7qkFHAs3K4hyfTFhBhxI/7mEPMkuxDYMYts5owumfTO2HjJYp6cEykzvTDY
Acrr9LxwOjuPFdg8UWKsv+aHo49zQTiUGF3QD1rCAVBxPC3snsZ2yE0n58XT
yfnxTGs8nZofD+KzSP3Fj78XxtG/C2Pprek30rNT6tNzU+rRs5Nr0/Deremp
Z54N1BYdWguB/+TJk9nK41klApAc4PiPL1jKYUQg4G2Q5jBYZo4B8NPP2ESC
Az4xzZudVLNxDVEHLJB6VeZHgzzxgKyDd0yD/KrxaSw83EYHXthHGwub0KLm
LmnxROf3sg6h1Jnl9d5OobS2i+rkWJ0TRgObpUkvELKUiDRRQEP11SS0X9d7
SN6R/r8IaQ7DMYG7OcKc0imdI8sw1eZp7XY0E1x/mhYhRTTsIcHGtTW6wXfC
ndmScto7LJmOTXXT24wDdIb/PVeNFXTmuan5lz4ABUeS6BtzEpbzos0h3T6S
jvCT0AKhybMjy7OB4786uyDKDw6KL/IWzKZzi6JkiwHcS1ocwX/AGFoeTi8X
uKikqNB06iEnDNeAGcT8xrOKGJAXAEpCNFaQczBYCdRYwWggE2aa43AxBga4
wGfHjh0rvzf7n5FIROCwdu1a9fEA2UqLmpn9cXY+Az3xAMVuarx2WGMypHL1
FvLfG+nsP3/SxtENaWVbX9k9v6RDJLWoW4PWdQ2hDd1DpFFQ6W+VjsQBCMVt
UmlHXqTsBhC9cIVUJLp5EFyu65si6ciysGCHGTho59cZ0AWsN6ZHMzZUymlx
z3Rqf8cNlN+iOo1oV4W+mhRL30r2+sz8SIf5qnnQHALLryUzyeQ3B7YjG6XC
kFgpjpySU8zOLOCI8uzCaMCBnzi2YHKd4/B1QCOOIA5/67R5oXwEwQTXAzTv
Iax6wLTmaai8h5wQuvxQK8D2aJhS1CGQVgCGUNDEpFPVzxMkqQCkEdDLhf/j
b4ALlLr4bwI8GYyQ1pRiy0piCINbyn+zaMSwwZR3QzlalxMgo5uLWpanx3oG
0SPM1E29QmgzG+YtqHf2USMSZt6ZQs3r3kB390iUfYbvjg4VxqqNQErIMaf/
rdHREjtiVLPT0W8z12uWRum4ZgRzJ2ZEuZRy/4sVPkpZGE52f99KdA/6upup
vu6lHNCA2YenxorAn1sYwf5qJDr+XUq0PbmLqT4YvPHYwFSIueKun8NdH81d
zC97b6QklF01NP2wkRRK86LTO+mLlIFs0cLx9qbzCsKF97DZ3T5CFyMUESz6
eP0tcguafWYriB2MJF6dffWob788Sox1U3GLRGpxe3Va0CFahi2BbWhw2NYn
VJocYK9356uZm9vZr0XiZ0irLJrIP58bEiVzNj8uVnv8vigJp8cHJsjxCjjC
9SuzQ+f62Ocxlxh2+8VRiTJf7tyCCLHZP0x3S0Vpdb9KEjYgxsfQr3v7pMm5
vl9PjqMjzFKc8nNBBYs+ood9aTwraTTinVsYrbiH2vACvXfDZI+FmTCLSB2u
iKY57DFv2b4zQ1tLCBhcKjxYGM3+XkTp+owaZx4J9DZ0LFSl4RyyQhhGjRPS
DYeRB4bitT+HFAEmDX722WfeHLbLmNfgcGPKy8uj2NhYaljnZhrSOInuQzdu
lxDpwgeHwVkIJlJ7T+o2lhdY82KM1q4BbpqTU5GGt86iMe0yaX3fZHpzdBR9
NylEij9r+5anI6x5Pbh7hSSP9zx1w2Ecc1bSMZueGFKeo381wBKHakDTnmWO
Y+DvTzPcsh3nkwnxMiNp2+AK0mvZvWlNCRDRK/nymGTpzJ2pd/PBJl9awhb4
P9n0ifrAWfVwiUL21Vy+wCb5e15P19b16b/zFwyX4Q/BDqL7iNWrNIq4VJP9
ypUrEcc43EN23hQIfCw0wIS+8cYbzufguRnH2nwO1ri4uBgG1JvLOqvoweXL
0oeKy0nUs1dvSk2IpN6NMmhJW9V7fXfHYFqTEywzIsFpcBnjjJ4ZGEb7TKOS
tq2YKgG/e3VuMk3rlEY5jWrQ1M7p1K9FVfpobBQdnxTGX8/8dUV5JnAneydw
PTmM/A4Gpo3tWBmpO3DXB+2RKoeXoMY4zzEHq0dJ+e/8ogipEp+Y5abPWVjB
YSR20MLWsv5N7L9l0aKembQiN4MOTeX4bHqcpAdoseI6ErznRJjPSYuKlJD1
AxncSQ2kKylTO0kwdzC86BGB0LGLJek2ZF7BWjhWLOuGiyjEmSMaDRdRqC0p
KaFXXnnF4TZa1Dy3VqpIDJ977bXXvLltjy3xzhLCQFjcLk+PPLqJslITqUP9
qlTUPI5WtAtUkdedwbQ2R3lVW3OVXD8zwNT9w52i7lvak5Ljokqw7SKSQ5lU
uu3WW9mjQj9sumQnZBzE1HBfsNkVXkYdz5PZf7FjtaJ3Gq3LTzWi7CrlNvJ6
2qFOcXyqf/QDG+1oaQTr7TjKa1md/zRGknu7hlYQiceWK3RNQ+IfzE+j+T2y
JMF/hPnP4bh81mzaQHLvGMfs1SvG0ZffHHKZrAS0MRiLV4ZLW7duleDWWyYL
CwvRc+R8Dg2GpmPAfA6d07DLzDpvbl5pY65HQlD5yDXo6LHjdFPlCjSvbTi1
qluNJrV0cwwdKBW59d1CxJUCN3dCfnXTzwHdYFgaL0c4+6NQdCnpkEmr+5Sn
twvdtKJXqpwRUNg+WzZDvjEmVuT3xPRwR2avdNoFYmZsisQpF3+qTtWyOOoD
hsIhjhKXKYq1aoQMRNw1rAJdxM5ZjHJYBDjQYkAJrc6/MI8ht7v5M6vB46GK
xz3A4wLF41V5mfREboDscjR8hI9kJMucj/zyyy9L5w0aAg1/EM4OHz5cTjk3
fEQXO9S6Oq5FvQdVj89heIcXH8uq512WtzJ8/PqbQ3RDdgVa3iGYRjdLpDvr
M707hNOGbsod3pKr/Ki9/U2ca+U8tES+r2MbNIq+PQZ7W6pK+QS7FbAH/hu2
rp+Oi6YtA5JlJDQ6dJb3qkRvF8fSF+Pd9PvMcLaqHPvOKD2wB/vh3+M4F6V1
xLm6i+safPRjnkVKUylOSPxzrgS7eFsGRenHmfm62BrCXpbRvuxAM3d/09zd
w9x9oG8qdazL0nrsW5OkhdZFzwRCm0D9HraVQNuy9DjMMS4UZgAaJuJ4JrhG
qLmZzxkXCpNxvZhoD5C6biYuaR/KBjSQJraKk2Tj5LaJEsfsyguhPQVhUgV9
UavUUgZGOAxEbwQGXewclEDjO2YKA73L4T9MjZDeGHT8bhuYLG13GGqATuCd
Q5IlQJX+iFnqRNjVTMZdQ1PUnO8ymYi00xwrSoVV1ZYV297gI2E/+7mFkeAj
O0en5+NvTs+3miiMowSLibIpa9MDA31p0sQJRgDRYQepQDATpMUQ7QhFRUXC
L1hNBCesQAP1r6Fn4efYv2a9qVMLZlNrWaWyy1KPilM3lHKqQyitYJF7oHMg
3ZcTRiNapFKXO6rQXV3j6aUhwezMsro0KYTRikt2B8unJeqcXji06/NQpw4v
O4WgLd+J6REyQOvYlChJHyxiseopaccs2sPceZ9FbWibqmpXsT5K5aTZFOLB
LF+bWS6RPSYVmAXRm8FuzhcT4+jsfDGRwjA/YZivmEvNLJePjmPQfN2pimzt
cFQluGQaroO04UP8wo6KbCeEM8OhqfM7JCEOHDjg/I6ZoX/nwSPv8BKRLSJc
Lx6lOTxayjy6i93RVeycbOiGvaHBtLBzAuU2rUwl7SqpQ2FHhXHUr0yZ3VQi
/avj+f2iaBk1jv7Vq3YYeZiySHggs9BD/920aOHXhvyK1LtZDWpe70YJK9F1
9s3kWFGLZ+dH0BnZEqxUIXw27aGecljkLzJ1ZgFrYo5H4K2cnY+v+Qc5oX/n
RfmWcipQc0o9UFj+dmIw9WxTD6GGU7CC7kIx99KlS64MT2rbBSs7CEAM4kXt
BA9qr2Rqr0aSrQdyMKFOYWReTnkqaF6ZHuoXT1+MVd0acBoMpbE9DieG7h6S
KOMyjk2Wo7F4eUxndtzK9AGvcEzWnywBlxaGifO/aUAFofSGgopSx5/UOZvm
dcsU6fmcUf4Nkm7TYkBKycP8tzBCkRR9XnAo+D2ceK1OII1Ef8s8sAe/Y3KL
bfIpJby/Q3joL4ye2LR9p0NwbKmEseCfetucQ3DDC5vgl8XWiuD1heA1syvS
4vZhQvAHmOAP9QqlLWjuz1dGAtOQnh4ULXsRx7TNpHUcQ781Jorj5XCZXYKt
zd+xyinukCWN/N9PDS9T7Xx/mdN9OcERbR2VaCtboi0YitPzVP/299Pd9MTg
8pIl2TpIxc9dm9SULMocZgT6q75kRhycrMam/zTTLUzCnqQzQlyleuDd/ase
LkG6v/zCTzr0jk8Kpma1qwLdQmsf2IUsTwrb9aVrUDhF0hzJFSrR6JYpHN0E
0gOsPB7uE0rb8sJoN/tR+waH08vDVPrwA1YYoO7MHBW/zu1aiV4cGSupwy/G
R9GAVlXpywlRV6Ku3mzjZ8FZDsVV2cRAITBaFTwiHBnqDOKwZnfFSrICOgSJ
CyQyQEgQHqhFqmq7TlygkQ3n6cLVRSby60lxdHhKLP3A7hajmy6x+3xxUQTS
Fpq+Kq2Ibp2ho4odIMN1RTEAQPYisx2CXIPMFenPkyepa49cGtIoju5nMq9B
Wp5d1e3s6TzJIH6OPZ1XsCulEFuulWcje5jGRtKmgmQZ34VNk0PbVKHh/IDW
QHgB0h63EkBeGsNHFHRwKYYtxYGo420TdcwqDSRngxbOCVBzRCnzc5IoZEkf
8AO/+21WtGgeAH5NXiXaMaQCDddJI7zGeQFLe2XQwSlxdGwaQB/DNI+U+syl
xRHOuQHnFoTLYKNvjnzrtPuY48TgqWZ70t0OGa6RtilPs+YuoAF1I4XmazlE
eIyVxg6G9V6G9fPss7w6KoLeRUa8JFKmm3yO6SasNHAQOvyUd4tiaCDDuoDt
4qh2lVmQ0+ldDgUAbfgpP5ZF75DSSWrWJAx04MzvnlGWc+lB8j+F5CB8oIef
CcX9WmESLWGSMgkxQG1RhEtVVTG5Go28e1gMQHpEe20b3igZnbXCiixaBlZM
jpNofkevchzNjXNgbqYbwUB6kdt27g25kWKFhoFUWOROpWkz59CAelG0ism9
DsUJJvUTmLPK8H6B3cPX4HqUKEcdWuPL8ZFO4eHwJDaSHHkhV3lwUhS9UxRL
9+WiqliVRrStzLo1mbULR2Cz1NEUpsvphGpm00WJAKE3dl6NuzObHh9c3qgR
X4fWvjoam8P/g7vhJ9qg5M7KtHc4+uMjSz0NDqRPS9JMaQw0wv0+O1q2oCN5
tmdYeWl8e5yRjwlIN9WsRse+9USxicFUc6tTjbqSJw50//HHH4whU0esL7/N
oqlM24H1FW3Xs8OxZUAY7WIYP8MwfpFh/AbD+KNxrHmnRsme6kOTIp1mcey/
3zs0kdb0qyhV2++nqkPhoD7eGxsrrSbjmO4LuqczVjLYxY6jT8ezyE6Pluq+
ma+PSPfQJI5YmSc/zoBrzJQVFPsq19tQFpVzC7toJf2eVe8EJjKmQbAL7g8i
i3uBJi1xydXjglYRaCN7Pt+HJkyaYsMUrjBg6kXPslL2oDFiIrviP2nSJKnk
bdiwgWm8ceNGfg9Vu3379gndwxy6q+i2skP31Z0CaUNuKNt2dt4Yz8+OjOB4
L4LeZBX9CeP3R8Yh9q1/O1VZQPAAKrqkYxY9lF9BZovbTh2sH3CM/4Peq/pU
YlVaSXbsTe6cJQdOoRX3iwmxQv8DrD8wWw14Pnk1nV2qQDyZAL2N5u5H+lek
86zLmQkBYIL4f9LtrxiA5H6LdF/aw3GOQTIcOiRlf/rpJ1cVT8pj654JgWwk
YzMGkgUh+jCdV199VVK+zzzzDHMDz7709NNPSyMtZmKEaQ5p7giHQuXZV448
BV/AoWB5VrdkGi2EYars53YY9gAzbCM7ituHhNMeFpJ9oyPoAAvJWywkn+FU
RJZkdMCiGxbDBsCYz8e7pV3h0KQo5a3EadVutU1Pj1Qn1c1WkxCPT+Wgg33C
HYNV6IPQFF0QqHiPbFeFPp/ArsfkGPpX+4oOe3zLkhZIynF20+E5fsbRDySD
o6HAUkb5MSOj6JmCAKpze12omKqOI1jVkzN2yttM70YrCnIzx44dc3I1SMyj
W8HmFgJYcAd8CtXcgoxBfmx5QvkG5mH9+vUOt1CHQW7Q0WNe3PrJYtQgzaiH
2BnawX7mkyxVz7NUvcJS9TZL1ecsTX/Oi6Y/5kbTb8wwNXCINcPIJJrCUsJW
wBesgeWFEBjLW2oRYoVbv2qvB2kecO21wgRpg1yXl0r3sdQhwbC8Vzot4HAJ
57TCUz86JQYdCuykREht9DTz5m8Erv/MU7XpSHpxdLL4OSxPvg6f/LTvDoey
U1U/2rx9lyNIQDEiI1DFi11lHbMGcwAWQuPdpt9DDsGbXRAQpN5tdoHNZbEL
GtRmFxodkLZ11J8abRJDk6fPUvzpHEgP54XS4yMi6CkWov1FTD8WoncnRtEX
03AIj5v+XqBmfoJP2FkC53vzgPJCa9UycCX++DpeKT/4PeYULx8bElRKrhJt
H1SeLrCTiGQPLNKnzJ8HOKraNkg5nF2b1JDtbYiyYMafYjP+zSQVaUGWoPjQ
o36EA4D/JJNwWvjzj87e/SNpIcfm+4lnenR8EPVsgyGQF+2tCMizoUeomifv
7B4uwzs7GLizDN4Fa95BJFkcwT+mv+IdFKBpQArRvMPp45hQrExXKe+Qmgfv
Qi1RMxPndmlW5vUfRP3rhtMaZuUj7APvZIfhaY41XmQxe53F7F12uH6Zr6Y5
YwgXdvb8uyBKNgChrev7adHCIs3EGVFX5J2vDIVNFWFDIxiyQhLFzVJZOlgo
7DQBSPD+jxy9/TDNzSZVhc6PDqgoITPc19zm1WlqTjbVq32LRBJf6PD50GT0
k0RLzuIiP/DzjC5yOUG0S8RQilbTmvhDCFUAFyBdPSCStijCPNZh1T1ZiiQs
fGLsQiqLpSPwHKZ5CHpjCBS4F0LPPvusS7WAYlgPjFuoJX+4KORP8dBPPoOU
LYb48O2EiFutql9mnKyaQBVL257YTcMaxQobH+XQcTdrymdYGl9iaXyDWfgx
26Ydw8vTol5ZdHBaAv04K078qHdKEmXfJqwLwmZwzDDRVx+JY1gXIGxBv6bx
OCB3zD4/icT9FRf145QcQwiRYiXpihIV+cvMaHFSMBZ6Yuds2lCQysaxgsyB
a1H/Jtl5eB9zGipiiZMUiaPvpsf4SOrJX4fn7MtOCKKurRtACF2Ge3oim4wp
ATlxKO/nn3/uxT27x6os7s23uQcJRAqc3RPmlOIeXBUoalsC8XWQcnYYHQkE
9+DC/Pzzzyy9inVoTtD/XJPkOY4OHf2O8muH0IM5QbSJXfc97InsY+l7maXv
rclR9BEL0lcz4uTYj/UF6RK6IR/XjuVgTX6ajKtB/GHCx19EgRrW+YF14o3D
MM1HOJMt2ajTcyP9bf98NsJKJ+U6J0o49f20GHFZIDVgAcJKE+EjrASHoHAf
zKsksY6K8mvwe2nSr4Wun1eLy1NhHRT+H9EhZICj7UBfCJn23TWrMiw33bju
8WWw6iEv3clXY+rjWZ1gBU6BZyEW53BKs+IcNvComTa6qY85DOnzFV2KHeHg
WWgZnOsnz0n0xdeHKa8W9uoF0WMczD7JXHuOBe4VFri32T35gPF+cok+oGWp
2kfz3rhEalz3ZhrathpNYg0G4dvN0eKxqTHCQZg2aMg/tCPva/MPPVnH2KNE
JHxiRrTwT8SO/cQ/ZztOvrAPvsmK3uzUF1REa52Pjmi1WZOHZMxZRfJf/zUH
npCb1bibvmKmooK8pGsyxcTG08FDh+zNVsal92IW8uWmWlQWs/bjOVxzB622
mJgJvhi5Qrs1LBv4EnwV7iAoQzMQ8g6hlko0c2PUJpJ04c6g24PlyJctHA4/
xZzZPyGKXp0SRe+ws/AxO41/YD70XW76D9tPF0eJOsQJGSjJIY5H3A8imr5F
ZLUk9JoYyxFCtLRQgWNK84kylBQD9tivZweShUyUY4AwKfgyJiFriWt+NC6e
w4AoyadJ7sFf+5NS9PhX2uNVi8XTfV1UNLbEcRvtCkYNT45gEI9JqBuOwJU0
+6a/0u8ZQQRrgjWD0OvqzSC054AZtvhA8SG/phRfKYOwwwEdkjaD9NwNHSZG
09cHD1Od1ED28oNoK4diz7DCe4FF5zUWnfdmKgb9voK9tHti6CzmSSyPYpFh
BgytIKGoKt3ByESyMoqWeAreHhwFpHrHsxkB0+CGfzwuTuJlmCCkiSfx7z4o
iYeSc/k5YuQratBfuSLMmlfGJEl2Hr6hH5gjUhQA3vCnRISQf5sbTrm3J9DB
I8ddxiO06xw1PdmCLLxpojBsgekCufHqb1tQUNtDtGWrMexAvBofjKCgxxhh
Au7B9h30rhRXuDZA2JocG+ZP93cMom3IXzAPXmQheYOF5H3mwZcL3PTvqlg6
dz/zYaWbzi5307LcTOkxQEu+6c4WYM82aQaOaF2q/nGcnbjP2DN/kAUCXjui
q2k5WeLA4f/w2jETHsIAC8VOoI+RBGwSUdVblzBHlW/95bPg8d5hKeCOxMql
HBLp4df/SHIjivbklqOSceOMzKBibgTDizmQDzOF3TAHfIQbTiafEGlzCN4g
OLRv3z6mMp59wSeZ4q0mepaqMhifUg7FC4fQaPjBhx9TYoS/jOUGB/Yx9V9m
9/hNRusHc9x0kNXT+Qc5Rnkghi7c76YjcxOoX8sa9O8i1SKNfi7DgZNztD+W
7HjWSC78PQclFeVxj25fRULkNf1UeIvu7Jnse2HnH9p7v5iAMDeWDQKHbEzo
c8wUJClgJGCjQPxP+HN92AsXnpzCd5ZF/DOlomEkAwEpzAhCkhs8iQ+wehP/
snYRU2AvS2thfNhzzz1n8SLe4cWgwUMoLtRH9kJsGxJGz7GWOcAEeYsR/tE8
Nx2CKdgYJ3TGhPc1gzLo0aGVZIbWvwuV8baQ7qv0hWTZmM78Radmo6DlpsEc
FcGV/kfaZ6OlCoX0O2KX7YMqSOqnRf0bGf5Z0hMP/Y/67JdM9a84OMXfrWN/
6tkRyUSLIpQR8BUG/KNNhE+poVBdJvIJ9Yxi4JN9oREmOdrIFE2Qbr7Rk+Y4
T8lk8a9Ic5XFj6Gj3x6n9MRIWtUxkLYNDqP9TL9XGCTvzHXTx6wljrC2vvRI
HF3awDTc6KbFedn0yYwkusBa48xSt6KjwqpLklzwaXSTxknTpKFiidNzI2QS
/GSOE4C50lqfSpid1ZEi/CR2hSRaBG7hjcIA4GdbvQW9S+OaVNShCi3snsHK
Jp4+m6Cq3sem4KBXpdzPL1DRIoop/yLgZ/2PTqx5qhTVLE3SnoagZicOrK4m
qJnRCKfVHPAQdyWCqupfrPRdvfzyAZo4ehAtb+GibexFvsCreY1B+d58N32y
yE1HMaSciUoPxdKp++NpdKdqdO5eNot3K7N4mj1LEFY2xpjsoZ+Qyl9IB4B9
yLYO4gsyKmckxQnT8P5/KJ3OUz3f+BtYvcL2lWljfqqAERkVkBRBB1o4VvVN
E12OQL64g8qswG/8WmdXsBXnmTx/lYm8eNEZ6WIXPm66nHDG278G4eLkgzfe
dAuNHZZPK1q5aCuawjgoeZ0l+f2Fbvp0CaMVZzZsZCQ+Ek0Pj0inWTglZlU0
XbqbHT62YaeXRGvJNog01FMkkgjolTGJ0r4HwjDxAvELP3ET4h0vDq5CCRMZ
DgiyDnC9QVC8j0gJehSR1M8z3GKwxEnpX1HCMGgDJPYHtK4hY9937Nxtg8wU
NbxoZTvbhlZX6HJNEC+85g03UfHQPLoLtOIg8yW2Km8ywD5YFEOfLYuhXxlQ
P9yVQA+NTKNOTW6kF0oq0PF58XRsNvtIi9xq2vaSSOlJUJ3DYg6Ur4QWhAUq
swfnmE2GkMlfe1NCovnIGiQJKdGzI7Rm/0BMivXAa4ggxPGc/vmXOMzs3xUF
U/c2Den8hYsGTkjSADfQXjd7kgjeLwy9EjT1Hqw4vF/s3bQUWyzl5+dTWnoG
lQzPo3vbMIn6h9IBhtJbDKWPGEoHGTJbC1OpTwuGfkEG3dn4RnqqqAKN7VSV
Wja4SYZaYEh5yZ1VUPvzgSJnqwTmS1vNAiNZyuX/dkqMmAlWXC6LVAEecQE0
H9wmdjGFWsFCcD8hExrupzX2p807dhm0wKEx6/UiBVwMM5fPkALxbRm7VlLl
tLzMzCwaNHAAjanloscZLa8wUt5ZHEMfM1K+Wslqi3+eXhFNG4ek0VYcL/oA
+1ksUf/wZ07yZ49Mj6N1BWqswLp8lbKDt4c0HroLMFUImuI79gxfZQFbwIoZ
cag4fC4/4/KZhweQmDIHtFvuAClEkwba+nBJEHVpVZ/OeaIErhdcjls8SWO7
HIY0V+jVqCwV70aNG1NiXDTVqJpNvWty/DUglF5llLy7NIY+YfN3mAVp9/jy
dIo187QelemL2Ul06V43XeTX55fKeBM1CwODk3Tl+I85yKG66WtWnCjKbxlY
gUaxj4ZST6dGN0iedT77ZogSYbtg54xvpvvmYP6ZdIFKWGYrFMGeIe395LDy
3rTyld7wqQKh3R7aGXlsJJxv9SSU6TxF0vMahIoRlZ2QmEgRQeUowt9F+bf4
004WqddZ27y3nDUOY+jY6hhaxj7Wx7MTqaAth66rmEj3qHD8/DKc7GQ2hp2e
r/PvSU4L1DldeIGpen9sgpgk+EswUSi3jWKt2tLysaCdVRgYT5/wA74WcsWn
tXeLPPMUljfV1YKg0FcoqXNhKkGi88aHxwVRN6QeSwEGTW0aq7zoho2hKI8h
3XgNusVKKiwpOZkig30pKricoltBKL3BKuiDu2Lp83ti6fiaWFo9Mp2WF2TS
ltFpRGuZZnAH2Mc6txypDNVBfEYmgM6PcqXJXYNyf6uSoawM1JOsHVPr4oII
D38KQTL6pxADrGWKohQGBwDxQnsWZfRQ3c+iDHFGxg9Ff9g+ZOGREfyd1d5/
ujwGBc44VQ4siin6+/G4xCzGiI8H1j1iI1DXjXVZyxlGaxfyY65OyUTRYmHh
EULJuFBFyV1MyTdZc314dyx9cV8sHV0TxwjMpLFdq9KX81lMEV2JY6UpuVSJ
qjSR6hK4NDzOcyp90NPfsWXv36o6JNJHhUNOQrW8tmfKt8Lj9NxIEd1f2MlD
cPAaaz8UMR4qSBVWGOAiPga54b4WsusKEVZhWZz4WbpixSIeSccnhlK1inHI
p9iANP6pFxnhUhk3wZDxsjOKmmsyIqfWtWtXioiMovAgX7ol2YcG1mJSsjC/
vSKWPmJAHlwdS28uTaKbb7mV+rXhePrBGLrIwn3hPreAEobh3BK1CeysJqUH
GQMFlP8tUIp9FgeiEMtTSpEppz9Qx5nS6odw9qVRqmfqona1oPJ+Y7oif4k9
i/BHoQw2cSiA/Y2jtJvVW0MXifTcmwNoTPE4FQkFSu/Stm3bJCLCwxzPACjW
8qSh9mA9aIi6OFKYXjRMklEA/v7+FBwcTCEB5eimJB8axDTczZbjHVaEn9zH
LjML9ft3JdGtt95Kj49lod7AynAV05EtB4KnC8ujZVTeuYVqiwAgeXq+3sQl
aTAVcwOP2JCL6Jz9hlCdMpkNyfubI6rJ7KKhfedvyatEImblWHI2mrQRvqIB
+5ymKIQXPIAwg7InmKofjAmnG7PLcxz4naEaNuBh2pnJ1GI7D1wvIM+LanbX
gaGarsR4Uy1VJiL4+fnxn7vkkRxejobWDhCqvcuo+3QVx3Br4+gPDjUndalC
L0yuSPRwlITucPLV8Y+RamrRkijZbIpuLcDstNGDc5U/Ad3Vt3kNcWqh7SVP
6ytkY5Iy2V5mz3Uxe65MH3nbD9SCNY1UZtdXLv14DxfwpIscfiI8ABUcc3Y9
antSA7reeB6GGlcYzJMqbxpK4JHE1Bh5ewA9ydR4n1XZZw+wPVsXTyc53FmY
m01jcqrSxG5VaGV+Ji3snUUTcypL6hT+6VMjKtDBqfF0eCpTcHKcrpeq3m9a
HC5WAQ6adALN0aUFP00NtGTCmGK7haGGv0MN9tGQsQO6/p0TRr3qJNDBo8cd
98LOu3lRA9i4TmpkSpqnYcOGDjUqRJajuhV96YmCEPrgfrZDjIvDG+Lp1MOx
tCIvi9YOzaCHhqXT17MS6fXxKfTwQFYM/HhkgDpR7mH+eSf7WQhup7GbCgpA
8cIj6NuiOr3HHoZUmCcpj8HOif2NrBcwECQS9Kf1wACEb6e6ZT7J77MUCQOU
yJ2aoxLKCo87e5WjcePHGzIhSgEt4K7W8SQTdBIcDdQUr0gms00H9U9DotSo
chTPdnBbXgh9yKLzJYPl6MZ4+v7BBFrLXthFVkD0oD58+V4c4IwJ8lp8lqli
+T96BMtvs9zirr7EUgHPHvkF2K8Od9wgrgFKuMi7F7ILi3gQ+V0Mgvh8Qqx0
2yhbGC6jymhRmOQRdg5JwcAfUNLPwZShk8FTb8HTd/axqiarpUa8OWOm4SuY
JIz7WnQqKCgQGoWEhlLFSKVqtvVTdPqaYfTDpnh6YHQG3cPC9N8DseKpyjmQ
d6kzyC5hlN0ipZyRK3KMnFLOkhJAafszVspwh37XKQGkrL6eGCvuFTZpPDE4
RVKzreC4ds4S+4VeP0RMSNcqKMYLHQ9OilEpdj+HlOf5cXpuhB/9MydCgwt3
srO3B7hsz6AMohkHyyYaZh55ES3FIZo7JpYqRCiibWeifQS9/FA8/bQlntaM
SafJrJvfml6eaHW0zPg1RMP8P8zkwSxBb4IhZH6zKJH6sE6G1+ijve9Tusom
S8OIKF46G1i89Zu0oETLA2fMPlRQkV3VG6TXd2O++n9vwWYlSXeDH8AtMLqb
sYdA29SIPmes/s7XOzcvlHoqyLlszJn8VV1P8qFMYHIy0fo9JKlBVjTVCflU
lF3BIV+0O4ZSI5UK26bJd/CRBPp5WzytK0yXXbmbEWGDfCv1OP6lmnyL1cTM
s9oZMORDjwRyMdjyoGsj4jnBiYJMzUbzIogGR+oiK3SVaYgVFP2mhwCjrwft
WCAmRjgBpI8xSBFd4XXHO5S+nN0tm4Y2iJJ0s40xk7jyIhJ2IcLJsolk/AJ8
vEwiRUbHUPU4F92W4kNb+oTQx6tZvz+aQCd2MJGKMmhEu2q0baQnkS55E2lh
Kcagw39E03GnyhzvRJdGerOxJROGzl+quGjMR84YCgvv+grtfBXt5sJNCgeP
GYQBdAbtgzNVNxME/Pby7OE9tc+s205U1fMkiZ2dMSS5wkyRskjiK5tjQZKj
mxPo1ycSaL0hyahKltgxLpapEZsqBRElJDG4uaBbgDeyHofhLyVJpCaJn/R7
Typ1IAMdTwhmf3akiO3efv5Ut25dunjxkrNA2+x7rd12gq577eGR0VQzwaw9
mD5hmTm2NZF+28lrH5shMvPEmFS2Z8yORXH0w+w4fRJKlJPHpCURarvJoggx
wTi+B6UByMvfCgqysmDjBc6DF5hovMCg0rX7ydrhEjSt5Edbn9hts9xknep7
Ltv2dq6x7Cjq37+/Y8YTw3xk2Tv68rKZ5ce3J9LvLAUPDkujaV2r0OhOVenB
oWk0okM16ilnl6X50Nr8NFc43ds3ncbzKsd2rELzumfSvhEpIgCHJ8dKUgkW
CUBnOIslZgWreA4nf7YTLkgYMaxNVXpyaLIknjxIATLs6etPt9etB3E2bgu0
5pYtW6SNqoEnKWyP5hqkqCJpWkOKEP9ybK19aHarQPqCI/nvnkikP1hrrspP
ow8mp9Djo1Lp77ti6OxShJ9u+mt+DP05F7OL3XKkMOaaPFygEhsDWlcTJYiE
G5TaFHYCEX3DSoxhCzGLrfAHJXH0YYnyZODRoFMO8dKFBWFiNfq3rMaO4OwI
X6GZr+0NKpVhtMelRZHUuYo/bXl8t0MFO4GkCWSUqe3KRF2dQNGyqaFcuXJK
TALLUXRQORrCccI3D7IY7EqikzsS6C4GwuvjK9DTxRWVuycnYXtM5JWD8RZH
sG09xcGBlOB0Dv6ktMZHy96afSOSpaYPWwuzgP8bs2D8F9SHBrdRKaKPmXof
jEUCzoOK2EY9L8JHtGmgeDPswMgD5D04NoB6tm1A51mh2HCC+GAKQUNPatnZ
DUMtu+fFolZF8QZNjAlquYPL0XBNrR/3JNPfO+OpkJ2E+b0qS0GE7lPn4FzU
ivS8UaTaf4EyuYeVKJzhiyiUOEUNJTraZii/JVTMr+z3mhUlpXl0zMLEIk/x
aP8KtHVgeeUTtqvMNGrX8Ab+GyQ04S+v6JUufiHOfQGNgU70s6BdEmfUbH18
jwMuczQc7KsXuQAiM7DXkAsdxuj69iJXshOS+/r6KnBpch1kcv28N5n+2Z1A
Y/h+5jG5XhpXQYXgy7UpXixTSKQ6fVbn0jDwDQ2CSGujSVfZHCUnASI34fTn
rEiBBPy2TUwTYmmDqUXPzalZyu/7XXpWo6UD/JtJKOluyK+IflDGJbadI7YY
1jKdOnTuBrtkUITMLGABFN3hSRZUBUw+zJAF7h1SOWWSxcfHhxISEikqxI8S
OMwaocly4ulkOv1kAo3uoFC0i5US3VNKFozuwKC0cwsUWZBGeKNIVTeMGf5L
DUkVsqgwPEjIcnIWUBUhDYGocH8yLlZMEb/vgw/4gECWIvpLEhWAnp9IFiZh
ov/58V17DVKQyDGW2osktqU2JLlCn0CSB0kign2pNpssoPIQk+TXfSn0y3oc
AlCZFvfJptyWNenicnUCHmHO+yLVs/OfJglQggZhOaJGpSR0legUwkTlrYEe
SNTsH5lEc7tmACJIHM4CjmZFmuQFqgXfFAfKwLFzFy6pjYyBkuxD5g77i/BA
67zO2bgaXQ6M66RC3OVUKO8r56mCCr/vT6Ejy930SEF5WtkvS6ggbaIrtI+C
aUpLI5Sfwow6MiUOUzJFV4KNp+eqE9QdSvhZlGArJAHAp6xo/xKbw5TwL6WE
SldNbgQbtEc3RgdIVgVHh0L2MYkCrdQMiMaeFEBDGpQJGm6uQYHUyyhQx1Bg
XRydfDGFDq2IoTeL42hV/wxpAEdX2YP902TOFA6VQOYEBSzsDhzWppoo1y8n
xovGQNIO+3GgNeG3iFYwvsu8cJeywyo8fmmkcuQlPDao8LFRMTZQ2snPl6oH
NN1jsCpQ4EUDU9PhYPlaNKjs0CAxMYlp4CeyUFzPnw4zDU69XF5o8MqYeLq/
IJPa3nEjfTklkf5ZGEN/z3dLF8XmgalSR4V3jkoBGuaRVdmQnyrFQUS2sLaw
CvezlsQwFGQR4LsgW/B+MdOLrcM3E2Pkc1/zT0UvDIlXlIKxBWj44RInBrOk
+DU0LAAF9WFDxjbEJgPTRNHIlKPtZEKkRSOPZIKiUS2hEawKUuShAT4iKXWZ
Tl+uZpX2ank6yDR6eXQ83ZefSb1b1FSnXCLzwrriop44SEvD6f2SRDnFlRap
wpOqDChVCZzAQsBzeW5EkrTnPgwLwVZ2J1vZIlbRdWrdIh4MaAmLgyoMTuVD
k8YOtiTwYN7T9IRw4fUv06MEe/iuQyWB1K3NHR7Oikm44JUXjeyMQYR+D/tF
ECh+++23ikat5Bfxl6WA06NZrtgCf3xvDP3zBuNoZQy9MCqeHh7MEVDrdFqX
40NHJoWoDN7SUp06o0s2+6vK4nIUh9yKdk1VJuVfbV3PyENwIjKFLh9Y09+w
R4vX/CzTELuDkV3ZzF4L9mKBjqAX+yqCy2mMN+xeXZufTj1u9KMHNzzsgR3Y
WJjfpp50QYMrytA2XezigUWXRNmz06lTJ4cuaUyXZDbBn9wTQ3+wln13ciQd
KIynvi2q0Yoht9O8Rcup1g3ZNPD2UNrQ2cXrDeV4IJ7yW1aX8OWfuSqBDbP7
V6nXLq68EgdlWSQswoHDbtkgDUfEWGUk4HxEwEK1s1LqsPw+M5L+mIkNwKpv
7dOiMLopi9l3+KgHZExGwIs0drLAkOayaKC1hgwSyRArD7LcHUMnnkqmF4eH
04GieOrZtCqtHduScNbd+QsX6dkXXqGly5ZTrzsqUdfb3LRzUKIYpDPzHbL4
qtyspydiHuKs5VYScWF1G+CoW7CcIVhS10UjC8c7a0WjNHQFJi0281yr7XJc
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
3A==\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ws", " ", "=", " ", ".1"}], ";", "  ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"must", " ", "be"}], " ", ">", " ", "A"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"As", " ", "=", " ", 
   RowBox[{"1", "/", "10"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hs", " ", "=", " ", 
    RowBox[{"1", "/", "10"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"xyCorr", "[", 
    RowBox[{"L", ",", "w", ",", "A", ",", "h"}], "]"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"xyCorr", " ", "[", 
    RowBox[{"L", ",", "ws", ",", "As", ",", "hs"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"L", ",", "0", ",", 
     RowBox[{"1", "-", "ws"}]}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<L\>\"", ",", "\"\<Corr\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", 
    RowBox[{"StringForm", "[", 
     RowBox[{
     "\"\<Correlation A=``,w=``,h=``\>\"", ",", "As", ",", "ws", ",", "hs"}], 
     "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6887822267435083`*^9, 3.688782260301168*^9}, {
  3.688782456999589*^9, 3.6887824880771303`*^9}, {3.688782553983079*^9, 
  3.6887826944265537`*^9}, {3.68878272866646*^9, 3.688782769827018*^9}, {
  3.688782885845804*^9, 3.688782928000101*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwVzms01HkAxvGhlDIqZUy7tawUymUPW53KyVMUDblL07JNzVJMxXaTVlKK
LZRWSlPa1hStluoMITI0hVhp3I35NZVx9ye1uQyL/e+L53zP591jzA/zDtJk
MBhu9P7vqJmXSWWhj/2owH6Kk3bAfo0gT4fDtoX2nyPe1T4cXDUxvWnMdkCq
RjIr0WcXHBi8D7psbyT2n9rn6xMCYejEzJlsPnJDXL2avU+iPKPKYNrgCEKz
OBfneV2E//PHd/41iIHOmetrdVyEMPVYHjhhkIzL0j6Ro3UWNmgljUrkIsxK
PbC8pOwp5n58n5ipkQ2jO8lDC29Koel4VVkVJcYn/i7tyNxKsOPck5YFFMBp
6tBP1jdqsMnjy3737mKcP9K7/4KzDBrbhJaDIWVw5Nv0nzGsR7bPcEJ+oxQl
3o15nIwG8EVO0T2scvzlK9J1bGuEyrLj9N+/VkI1cVFcPNyEsPHwhYtlVQDf
tiKhqRlbcyuYXcwazLfziKGutKD7Pn9R0C+18F3oRTnbt6L6o7rZlCdDqGb3
jZRXrYjLCn5wVFgHYZrTLXDk6G5dY6NRWw/XIvbD+0/keJ01efbFQAO4m+2W
BOq2QXijn6tc0QQf45V+7nva0GfeqLbiNMMo/Jxi7G4bjFvav20+34Lyd69j
d3S0YXLcY0JS1IoLFcGR9UsU2F1WcIco5LAvNNMp4CiQcXdrtTdLAaMvRsfG
jytw2LxWMrme4PK1r/tbbyqgWvZkXy/3LZLyBqU/FiuwwU6aYnVFibgZb3SW
KBRgD1clZorfwXmMcqobVuBQV6TWs/D3eJX1XD41n8BY18Fwq94H8PMl1nZm
BKnntdKC0z8g8GB8xsgGAoYOCSjc2I4o1Q8OUe4Elu2PYkRv2iHjPqg35RFY
fLHVzNmtwhO/CDerUIJvWFUvVWoVLszO0rOIIqiLC6Dy4jswYLM6lhlPEDF7
xk6xWSe2SyJHB64TtLdmmroUdcJSrOk7V0Rg2Kn20HTpQqlfJNM8m8CNsedZ
V2cXhs4WcnfmE+Dgi0tBJ7oR7yLItiwlWN69XrSA1YOVgYJB/VcEijTeAvKo
B9GHVinXygh23I1Rbd7UCxN/fVe3FgJpYaG6gfTCM+D74CglwSdD6hgjrA+B
Ya4F5R0E/5TWctym+iAJPjGd1EfQE/Zyb4WwHzmt1m/Dhwj++LlAKV9FoV6q
Dr03TBDju+3BXisKB/ymlUW0g9bJj/d+R0HlbM2po72KMcFUr6Yw23UBc4p2
XpK93WJQuC9bun3nCEHlw/JUPx8KfC1WgfYowSDV4NkQSeF2NJz2jxHIZIFL
/U9TiPhqy/Qp2rl5w93tZyisz3ksTqYdcYod/TmWApNXpS2hrcH0z9G7QqFq
lvURfTWBvkX7HM97FLLTBXZltEfmHW1qyaQwllB3q4m2/POMdF4WhWVxkpE+
2r8XrVgX9pCCjr5tGmucwNwlZN/lQgq+nrkZAtpzrcdtDIopbDt5ui2a9oBe
wuTtEgrKw8o512iL5dkpOVL6n0kgt5R2SsnGPWvKKYhjLp1opB2eXmtRUklh
07T3b720ubG80S3VFDwE+RlTtO1ChqQ1NRSupjzNWzRB8B8K0ICk
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"L\"", TraditionalForm], 
    FormBox["\"Corr\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotLabel->FormBox[
    InterpretationBox[
    "\"Correlation \
A=\\!\\(TraditionalForm\\`1\\/10\\),w=\\!\\(TraditionalForm\\`0.1`\\),h=\\!\\(\
TraditionalForm\\`1\\/10\\)\"", 
     StringForm["Correlation A=``,w=``,h=``", 
      Rational[1, 10], 0.1, 
      Rational[1, 10]], Editable -> False], TraditionalForm],
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.688782261022066*^9, {3.688782467041833*^9, 3.6887824885175543`*^9}, 
   3.6887826005339622`*^9, {3.68878267142581*^9, 3.688782695053233*^9}, {
   3.688782729424518*^9, 3.688782770623308*^9}, 3.6887828171162024`*^9, {
   3.688782918291214*^9, 3.688782928649192*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"hs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "/", "4"}], ",", 
      RowBox[{"1", "/", "2"}], ",", 
      RowBox[{"3", "/", "4"}], ",", "1"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"xyCorr", "[", 
    RowBox[{"L", ",", "w", ",", "A", ",", "h"}], "]"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Corxy", "[", 
       RowBox[{
        RowBox[{"3", 
         RowBox[{"\[Pi]", "/", "4"}]}], ",", "A"}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"xyCorr", " ", "[", 
         RowBox[{
          RowBox[{"1", "-", "A"}], ",", "A", ",", "A", ",", "h"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"h", ",", "hs"}], "}"}]}], "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"A", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Gravity\>\"", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"StringForm", "[", 
            RowBox[{"\"\<h=``\>\"", ",", "h"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"h", ",", "hs"}], "}"}]}], "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Right", ",", "Center"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<A\>\"", ",", "\"\<Corr\>\""}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.688776142496195*^9, 3.688776208046105*^9}, {
  3.688782965362002*^9, 3.6887830373662577`*^9}, {3.688783095873159*^9, 
  3.6887833040907793`*^9}, {3.688783347705393*^9, 3.6887833533681707`*^9}, {
  3.688783406680197*^9, 3.6887834072467422`*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxF1Xk0lVsfB3BDRbqEqxApkjJFOmlSX5fSK4lI6EYiUclw1S1NN7ecogEh
JZV5qjcyFGWmqMxDhjjP85x0MuWpZMzhfd53rffcvdZee33+2r+9v7+9tqqr
j427iJCQUBQz/7vucO9tLO2z2yL0v0HiUuC10yGKl/F/HzpBKwYrRgosHmke
//VbksDPGwy2b1fJFNjhUldnxbVcgX2e+uve+VEg8Pew99XCwiUCV5e9Lqk3
Khf4SIC5pONgpcBlcw1mHh+vEjglsXJ60fK3AhsvLEqwfVIjsG5VV/5rrXqB
W4xth9KHGgT2kjjW1KrfJPC7dvsiqZvNAtuaOVA9PS0CG8Zds49Tfy8wOR3R
4vlXm8CfzOsTF1a0C5x1lwhoVO0UOPmqaLDmmQ8Cj7jt6z/8skvgeVvZNk/l
OQKfk/70C7WfENjtUZl55ON/vMPsAXv71D+eEjN0imfWjUNDgzMzBFoGlcdU
REmwKqZ1phk/ahQNj53N1BkYqTTJ+O9n/VqLxElILrZ8MczY8V5jZbQEiV81
KyQGGOtfzHdeIMnkyLkpRTIWc384fms+ic0qZlVNjDnm7FvSsiQenDxnWME4
b9VxnZtyJLLVKpyeMr7+657X8+SZXOXTt9xnfGh8o0uwIpPbzItONuNN3aqT
c5SZXI0vrfFmLFsuHnlZhUS3SMgOW8b9KbSuiCqJm3p2qoaM7/gWHeQvJ1Hk
sk1uZJqAj13SzzMrSSzUO7amkbHZxmtR41okvs22V3jEeETU8c2wHgmZ80c3
ODCu6YWbnwGJg7GBp7UZJ9Vq8IdYzH6vN1+a4hOwif6h37+BxJcRL+E7jDXP
fXjrYUSCeFB8ypWx0MHyQ5+2kLib8EeJFuNMrbA7pCmJLse06lwmh1+KtYXa
LEmUH/Hoe/KTwJedS3NDrJk8eP0jBxnXfZDz3GJLwjpJ/4Is49AJfn2yA4mT
Kp/FvSaZ869teHjCjcTSuDRD4QkCwxWVtisPk1hWPmEdN87kaVMg1uXJ3O9E
2A8jxlG+CT6m3iQcndQ43mMEFB6fgGwAiWZqvWfeCIGJjUeGX50lgRjWpDHj
zjdOqQEXSAxy9qq9/UHg3mez+dQlEsHZ1ptahwmoLFMkMm+S8A498LLuGwH1
mKILlkkkQgz8zay/EJitmW0gnEpijtmTb3mDBHjPU3i56STm8sUtFBmntobu
Us4kcXl5rWRHPwEtGVeVgQLmXa3/PGnUy/TT1TnFV+tJ8PvXpUZzCcjI//Qz
aiLR05HR2U4R+J5ML//aQuKhr0STPOOcivYb9p0k+kwKZUIJAoYzGU4an0iI
qD8fd+0isPlPK37FJAk/aaPz8a0ERo/2njXnkxgadc6qayGQdSBwsm6GhMEd
tshkMwE185yxjlkUAlULxCyaCIgry3+npShc7mZlva9j7reMw1NaRsFGKtw8
qoqAl6R3g78Fhd1VXl15zwloiIhZTVhSKFbYkZP2jAAx+rD2gjWF6cO+r+7m
Mf1DNr4NtqOw83jjgz9zCKzPWfvq4QEK4UkbjJQyCcxy5Be886cg1vqiQTqF
QGzS9cRlsRTeBR5JyL5F4IDpGiPiAYWaLxKLbcOZerkdLTHxFHjDfQ+/hRJI
W7JijmwqBbnLrWUrbxDIjSnzFMqmcNtv582/rjD9HTaq211Fwd9naFbDWQL8
cy75t4cpDBm7ioq4EXC2Y9XOteDCYJWhR7M2ARcly7h8Sy7arrjGz9IicJBy
9/ew5iJMJ1+NtZJ5r8ejFV/ZccGVWcq/oU7gSNCk+0UXLtSHTy/VXUzgRF7p
9OhJLroH9t5TlCIQssBSvyeOi4vaF8UzhzjIa3WPKB7l4vQ9OoiXwUGY8LLV
mOCiY51Oc3MaB0d1ybqSn1xcsVr8siSFA5WgfRJlQh/Brd2/PyKBAzbLKrBC
4iPK948OasZwsDdivU+1ykfcOGwSIhfMwZj1PIsms4/I6Ax7SblzsKEmS4R3
+yOac1bXHFXiYOm2wyMRW3uw7hph/tKjG2tZa8NzeT3Y1VDwu2pGF4jvN94k
Bn2Cj1Wnjk7XBwyu2R2kaMCDVYTNImdeJzQGdPuFm3nQ6y66LDHYgUr1k02+
gZ/hNHWqJPhVO0JbWt1s1HsxE/7+qkdsG2jb0nCRyl6YrA1k17u9R7bdAtMN
fn2YPrM4edl4CxJrL93nyvZDziGcnX+9GWNV+8/KlvfjtPzW2oDPjSDDS0ak
vQcwI5NUHaHTgNHGTYp/Sw1CQfur6UdeDXwj1UoDCgdRP6VXqNxbDflaNeke
5y/o3P17S0FvJWxbH08pT39BYJh02+ncUnw/EO/VlTGEc3N9V7PYz1Hikhkk
tZPGyKKh1QPPMvCi3suCs4vGToecrS/2ZuDZFi2ZJ7tp8DwT0qxH0/FYOTnW
0p5G7fypogZWOmLaY3Kuu9JItPc5L5GZipPWbEoigGb+GxXL3OgkaBs7bRZL
obHN+T1OuMdCI3ORaFsaDffg6q3bI+5BTaW9OuURjWT2qXqn0hgoTNnsMXtK
I2yFeoipwl3Myf/XsaBCGrLCftWHiqNA6bHuijbT2NeoOP3vwhvoevDNubmV
honzPLP5P6+hXTJTPbGdxp4V6eYi60JQN6CZZcKhEfHOREM9lY3C1CVVgX00
YqWkx5SqLyB/Yff13YM0zt1f4/XHgrPICYqxUaVpKMW0urzddwoZbgs4pT+Y
+kWvioxH+CC5qSkxbIxGnmSoczzXA3G/hR1xmaQxvcvrN7OFLojNstTT59PQ
eeOgdnuXNaKXzBuZmaHBWqEQtcrbd8t/AI7LkNQ=
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]}, 
     {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]}}, InsetBox[
     TemplateBox[{
      "\"Gravity\"",InterpretationBox[
       "\"h=\\!\\(TraditionalForm\\`1\\/4\\)\"", 
        StringForm["h=``", 
         Rational[1, 4]], Editable -> False],InterpretationBox[
       "\"h=\\!\\(TraditionalForm\\`1\\/2\\)\"", 
        StringForm["h=``", 
         Rational[1, 2]], Editable -> False],InterpretationBox[
       "\"h=\\!\\(TraditionalForm\\`3\\/4\\)\"", 
        StringForm["h=``", 
         Rational[3, 4]], Editable -> False],InterpretationBox[
       "\"h=\\!\\(TraditionalForm\\`1\\)\"", 
        StringForm["h=``", 1], Editable -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.99, 0.5}], ImageScaled[{1, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"A\"", TraditionalForm], 
     FormBox["\"Corr\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
   PlotRange->{{0, 1}, {0., 0.9999999999999993}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1:eJxF1Xk0lVsfB3BDRbqEqxApkjJFOmlSX5fSK4lI6EYiUclw1S1NN7ecogEh
JZV5qjcyFGWmqMxDhjjP85x0MuWpZMzhfd53rffcvdZee33+2r+9v7+9tqqr
j427iJCQUBQz/7vucO9tLO2z2yL0v0HiUuC10yGKl/F/HzpBKwYrRgosHmke
//VbksDPGwy2b1fJFNjhUldnxbVcgX2e+uve+VEg8Pew99XCwiUCV5e9Lqk3
Khf4SIC5pONgpcBlcw1mHh+vEjglsXJ60fK3AhsvLEqwfVIjsG5VV/5rrXqB
W4xth9KHGgT2kjjW1KrfJPC7dvsiqZvNAtuaOVA9PS0CG8Zds49Tfy8wOR3R
4vlXm8CfzOsTF1a0C5x1lwhoVO0UOPmqaLDmmQ8Cj7jt6z/8skvgeVvZNk/l
OQKfk/70C7WfENjtUZl55ON/vMPsAXv71D+eEjN0imfWjUNDgzMzBFoGlcdU
REmwKqZ1phk/ahQNj53N1BkYqTTJ+O9n/VqLxElILrZ8MczY8V5jZbQEiV81
KyQGGOtfzHdeIMnkyLkpRTIWc384fms+ic0qZlVNjDnm7FvSsiQenDxnWME4
b9VxnZtyJLLVKpyeMr7+657X8+SZXOXTt9xnfGh8o0uwIpPbzItONuNN3aqT
c5SZXI0vrfFmLFsuHnlZhUS3SMgOW8b9KbSuiCqJm3p2qoaM7/gWHeQvJ1Hk
sk1uZJqAj13SzzMrSSzUO7amkbHZxmtR41okvs22V3jEeETU8c2wHgmZ80c3
ODCu6YWbnwGJg7GBp7UZJ9Vq8IdYzH6vN1+a4hOwif6h37+BxJcRL+E7jDXP
fXjrYUSCeFB8ypWx0MHyQ5+2kLib8EeJFuNMrbA7pCmJLse06lwmh1+KtYXa
LEmUH/Hoe/KTwJedS3NDrJk8eP0jBxnXfZDz3GJLwjpJ/4Is49AJfn2yA4mT
Kp/FvSaZ869teHjCjcTSuDRD4QkCwxWVtisPk1hWPmEdN87kaVMg1uXJ3O9E
2A8jxlG+CT6m3iQcndQ43mMEFB6fgGwAiWZqvWfeCIGJjUeGX50lgRjWpDHj
zjdOqQEXSAxy9qq9/UHg3mez+dQlEsHZ1ptahwmoLFMkMm+S8A498LLuGwH1
mKILlkkkQgz8zay/EJitmW0gnEpijtmTb3mDBHjPU3i56STm8sUtFBmntobu
Us4kcXl5rWRHPwEtGVeVgQLmXa3/PGnUy/TT1TnFV+tJ8PvXpUZzCcjI//Qz
aiLR05HR2U4R+J5ML//aQuKhr0STPOOcivYb9p0k+kwKZUIJAoYzGU4an0iI
qD8fd+0isPlPK37FJAk/aaPz8a0ERo/2njXnkxgadc6qayGQdSBwsm6GhMEd
tshkMwE185yxjlkUAlULxCyaCIgry3+npShc7mZlva9j7reMw1NaRsFGKtw8
qoqAl6R3g78Fhd1VXl15zwloiIhZTVhSKFbYkZP2jAAx+rD2gjWF6cO+r+7m
Mf1DNr4NtqOw83jjgz9zCKzPWfvq4QEK4UkbjJQyCcxy5Be886cg1vqiQTqF
QGzS9cRlsRTeBR5JyL5F4IDpGiPiAYWaLxKLbcOZerkdLTHxFHjDfQ+/hRJI
W7JijmwqBbnLrWUrbxDIjSnzFMqmcNtv582/rjD9HTaq211Fwd9naFbDWQL8
cy75t4cpDBm7ioq4EXC2Y9XOteDCYJWhR7M2ARcly7h8Sy7arrjGz9IicJBy
9/ew5iJMJ1+NtZJ5r8ejFV/ZccGVWcq/oU7gSNCk+0UXLtSHTy/VXUzgRF7p
9OhJLroH9t5TlCIQssBSvyeOi4vaF8UzhzjIa3WPKB7l4vQ9OoiXwUGY8LLV
mOCiY51Oc3MaB0d1ybqSn1xcsVr8siSFA5WgfRJlQh/Brd2/PyKBAzbLKrBC
4iPK948OasZwsDdivU+1ykfcOGwSIhfMwZj1PIsms4/I6Ax7SblzsKEmS4R3
+yOac1bXHFXiYOm2wyMRW3uw7hph/tKjG2tZa8NzeT3Y1VDwu2pGF4jvN94k
Bn2Cj1Wnjk7XBwyu2R2kaMCDVYTNImdeJzQGdPuFm3nQ6y66LDHYgUr1k02+
gZ/hNHWqJPhVO0JbWt1s1HsxE/7+qkdsG2jb0nCRyl6YrA1k17u9R7bdAtMN
fn2YPrM4edl4CxJrL93nyvZDziGcnX+9GWNV+8/KlvfjtPzW2oDPjSDDS0ak
vQcwI5NUHaHTgNHGTYp/Sw1CQfur6UdeDXwj1UoDCgdRP6VXqNxbDflaNeke
5y/o3P17S0FvJWxbH08pT39BYJh02+ncUnw/EO/VlTGEc3N9V7PYz1Hikhkk
tZPGyKKh1QPPMvCi3suCs4vGToecrS/2ZuDZFi2ZJ7tp8DwT0qxH0/FYOTnW
0p5G7fypogZWOmLaY3Kuu9JItPc5L5GZipPWbEoigGb+GxXL3OgkaBs7bRZL
obHN+T1OuMdCI3ORaFsaDffg6q3bI+5BTaW9OuURjWT2qXqn0hgoTNnsMXtK
I2yFeoipwl3Myf/XsaBCGrLCftWHiqNA6bHuijbT2NeoOP3vwhvoevDNubmV
honzPLP5P6+hXTJTPbGdxp4V6eYi60JQN6CZZcKhEfHOREM9lY3C1CVVgX00
YqWkx5SqLyB/Yff13YM0zt1f4/XHgrPICYqxUaVpKMW0urzddwoZbgs4pT+Y
+kWvioxH+CC5qSkxbIxGnmSoczzXA3G/hR1xmaQxvcvrN7OFLojNstTT59PQ
eeOgdnuXNaKXzBuZmaHBWqEQtcrbd8t/AI7LkNQ=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1:eJwV02k41VsbBnBDg6E6MmVLplBOkkSnvLilRIqMxRsSJUOUUwkVSVKR0E4Z
SjLVzjxE5nnKPMQhMuz/jgy7TobeEu/qw7rW9fuyrvu5nnvJOJw3O8PFwcGR
R87v2/DMeEfFhKV24aihgYwKC58yjjl8pKmh3r9I9bdF+XvCcmkHkKD766s0
8dsyv3NXFIyxvnsp6LeV9wonP6VZQPs9Y0aKmENo4uGylDUymVPbfrtjqvTm
KQU7HKJnaUkSmzo2Fp6KOgXLiyObNxFrtO/KiqSdhjev29BG4s1az1Kr45yQ
27vHXZx4DYMnflbKBc5Wu9vFiGdFL0bJJ7rh+LLx6g3Eg4GD948peCBur4eg
CLHj98SqaosLyHL3/ypI3KtsrW0T5QmPn+5JAsQVsdXq92mXsPpmeBA/sVqn
d7b8icuwo8Xm8hC/4lHeXhbnBQt9lfyVxJGXn8ixpXzAeSJVdXkHC6vSjJ4H
n/KFAONkxk9i31EuCenEq/BwOPprgdjxqLuQqYIfUp8ECH8h7guSfTBx1h+Z
hjEfJokVhtxWVlrcwMnWqCufiGOEZQKsowIw5fJJfog4MCDE+x7tFhqOx5xq
JC6TcHpzrOgWkrcFlVUTfy/QmZU9EQSGw+vpUuJzM3Pni+Nuw++AZVU2scUJ
+7NTUnfB59as+5g4bF4jubDiLtzEdXaEEzdEiIzdOnUP0cJ603eItRqa7DYl
huCtXfqgz+986urHjBXC0McXf9+a2L79D7p4fRg4OfRWmBLHun3uYJ19gPjr
7YcNiHk62lLKLcIRmrPPaDfxtdVBslZRERj4orxBgPj0JTbtLo2ObEvlvCJl
FnZxR/rmXKCD/rZQLYOYK1JtYKCejrULhtcSiOMzfeKUvR7hQIuofTBx/2du
qe7OKPzv7p4rJsRHT4nJSYVGwxiTTb3bWZD8UnTLYCwaM+5FGfXEU362lKdG
DP4Obj5eQHwv7kVKzXgM/JcO/u8RcU2vkqKrXhwiHnp6mRBrGO9Tzl96Bn3+
0zpFSmSewbGwIct4uJxguqYQ97rdZq9Oj0e/3z9WkcRFNWes0rc/h4xvup8L
sdUog8bx4Tl2DTbMCBNHblKPS97zAsomwvr228h79EMJX74moUnDmqdBkYWf
e0Z+JognQzhlUDuDeGbQ+5j5/mQ4adlq0Ym7trzkf0NPRrzaZMRJ4mfFq7yu
/pWCK6n3o75tJX0dqzZcdT0V5jY7vwsQ26tqz27kYYDSfeMurcCCeW+PcYsK
A8MKRheX5Vk4eM39lZ81A98vlGgNEW+ri7MbYTBwRqJMOpZ43vpnQ4rRawQ/
DZAQJA4NKHy682Eauqciumc3s1DQrqqvL5mJS0FVEaEypE8TUwZKBzMx6F/b
fJrYiSvVcL1HJhYvtb/TJBZV22g8UJoJFa5YkSlpForfBTAKlLOgCMMefeKN
O1yzD7dmwTFEg/1Nkux3TqP84toc3DnkPbhJguTlEtNxkslBVPdX55mNLOSs
m6uwUs/BeKlRfhnxvS2ZVVq2OWBfPBhuR6xhvbludXoOrr72OBIrzkJ0CX9L
7JFc5DNk6nloZD+BH/qrQ/Lw3GDL+lwRFgSGFZTOJuRBl9nf6kXcqOl5na8g
D+88vbU1iDXmV0qbjuYh1mZStUKY5HXZcWZoTz48X65wbxBiYcj4Jvs7lY+F
9DCepvWk3+JbVyjrFOBBVDs7fC0LElf+tuywLMBcqtErQ+KerpKUS24FePvK
S2AF8cH7poeKowrQSul+uryGhS0cV8MMpgtQE7WcY8nPwmeqRcwxphD/XGhN
WsnLwvnsi9ufzL6FXFHIkvwK0hfNka5GniKE5f6I6Ocm/7/B2PenRBFMadP/
hBE7f1Sst9MrwsesidvzXKQfa4ft5aOK4FMmZVbFyYKJyxF6zl/F4Gm3pR9e
pqAiI/+z2bcE8ruUljb/oPBv+PsGTs5yCEo+4mXNUCg5lw2maDk0ualBP+Jg
g9A3dUrl8FVaNNlALMGhmxRiVQ597wlB/WkKeufT/UWyykHfGc/5YpJCs4Ju
LH1HBZ5ed3DRG6cgvZJm9nKoAg7NtVb7Rig0VNaVt2lWgedRgt3KTgopzYvM
+/pV0B0dEgzuoBDUq8p3xKwK+1aq2/MQ604/s2g4W4Wxseha3naST+zKREVk
Fbh1DApWt1LIOr9FKGe8CqJV+0W/NFJ4sumOE51eDWvelirPSgouPofWWk/V
IPL0jy6VTAqMjett7eZrMO86vJiQQWGqtC/NkaMW4/RDNYLEHlzORzyEa7H1
jrLytzQKl0JuhwRq1qIjlNstk0HB/2k1b0ZoLeQOjXqIpFB4VKm1int7HbwL
v7VFxVGo5FVdTnOvh7/mtxvOd8h8iTVL4vJN+NVvr/31GAUd0dIX5hnNaFuw
9TGRobC9/kNh3Z9t6OweXmdBMdGtYz7zaqYdCyNbrwfEMnGOz62zR6UT7S+G
jwoaM/Gu73jpurAunC8uc77xZQzmB61GmMxuVLoLLWTeG8Pu5yHHn8u9R2Ka
Ca1WdgzDSw+7nf17ce9kUavFy1FQh9oSRav7kLglaWnD9lFkRX/06ZDpx3P5
H38pPBtB8h3uu4q+A8Bsb3kLzwjmHP/72an4AySSP7Sv8hoG/4HbZtkbhiC8
XzRfKP4jrglQa0ZsPuIy3+LpFTZDWFO2jaPXaBgO2xb3R4oMQsvr6K/qH8NI
t9QxC2YMIC4pNHFz3AjqXIVtTE37YWep1sJ7eBSbGn25bd73Ib/nzMOy+VFc
7WuVf3qyF3ubs7hYUWPY5/R2MpDzPaT1nOYeHmCC22lFtWRwN9TV1CPyWEx4
Qtc6Y2sXPv57vzExiMKY4mV+Wk8HpnaZBtFUWXD99CPRxrUdCpPbP3N2sSDL
MfWyUrMVNXKXOy8EfIJ3TDG19vo7POjucTSTG0eTsiUzdLEBbPOKCK6acXiK
2arqRtchx1Jk/17PCUR1hSlViNQgsSXw6ajgZ+RtjWuTbK/EQr3NVcGqz5D0
lBxpHSzDcET5nIDHJPYmLg8+tinCfMd/aDfXTWGvoy+15+gbXKDLVviUTCFc
+HHnhFAONrTICjDtptEtYTE1cT8N5j1pixJL02g78ZFzwD4Z/55MOPeBMQP2
wIG7TY2xKLfPDFp3hA1QOa+GS0NR1Hbu8JAxG4HMg9WuBqF4o/3n+gxTNvh2
6p3k7QpBmkRynNFxNpIkkwRvjd9DTF9MbqgDG5LVZULnhe/issntET4fNkpb
JsfELgRhm46t1uoUNt5qh94wcr8GhUxx7t6XbCjS/njrFXwVspJ9DSmv2Tg3
YbC7IcEXYotmFgez2fjOEckae++NVYUGbkElbIwFCl/6pXsZIzvUorm72KiQ
beo7q3cOH559tevqYYP5mKlY6ueKvrWZcol9bPge4dvnUOiM1knFLN0hNiY4
bcJjlc6gJFWqPmCC5JP+lB+50waFooOhplNsyPbF8/z1ygq5QTFmMmw2/gxJ
kvWVsQTDUWSoYpYNy0/dDwu3HEFyZ2di+AIbgmviD89v1MPzfeEu9j/YcHKS
iR6R1URcltEOlV8kn88sPV5aCY+l+OeWl9mwnxz+Y+fpw9r/B3OBhJA=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
         "]]}}}, {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {"A", "Corr"}, AxesOrigin -> {0, 0}, 
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
      PlotRange -> {{0, 1}, {0., 0.9999999999999993}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]]}, {"Gravity", 
        StringForm["h=``", 
         Rational[1, 4]], 
        StringForm["h=``", 
         Rational[1, 2]], 
        StringForm["h=``", 
         Rational[3, 4]], 
        StringForm["h=``", 1]}, LabelStyle -> {}, LegendLayout -> 
       "Column"]], {Right, Center}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.6887762086640987`*^9, {3.688783006941576*^9, 3.688783038196703*^9}, {
   3.688783099466401*^9, 3.6887831216370077`*^9}, {3.6887831818043013`*^9, 
   3.68878321580507*^9}, {3.68878326122471*^9, 3.688783304921433*^9}, {
   3.688783348996808*^9, 3.688783354015727*^9}, 3.688783408543992*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"hs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "/", "4"}], ",", 
      RowBox[{"1", "/", "2"}], ",", 
      RowBox[{"3", "/", "4"}], ",", "1"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"xyCorr", "[", 
    RowBox[{"L", ",", "w", ",", "A", ",", "h"}], "]"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Corxy", "[", 
       RowBox[{
        RowBox[{"3", 
         RowBox[{"\[Pi]", "/", "4"}]}], ",", "A"}], "]"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"xyCorr", " ", "[", 
         RowBox[{
          RowBox[{"1", "-", "A"}], ",", "A", ",", "A", ",", "h"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"h", ",", "hs"}], "}"}]}], "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"A", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Gravity\>\"", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"StringForm", "[", 
            RowBox[{"\"\<h=``\>\"", ",", "h"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"h", ",", "hs"}], "}"}]}], "]"}]}], "}"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Right", ",", "Center"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<A\>\"", ",", "\"\<Corr\>\""}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.688776142496195*^9, 3.688776208046105*^9}, {
   3.688782965362002*^9, 3.6887830373662577`*^9}, {3.688783095873159*^9, 
   3.6887833040907793`*^9}, {3.688783347705393*^9, 3.6887833533681707`*^9}, {
   3.688783406680197*^9, 3.6887834072467422`*^9}, {3.688783476719412*^9, 
   3.688783486365799*^9}, 3.68878351732631*^9, {3.6887836050209723`*^9, 
   3.688783609520074*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxF1Xk0lVsfB3BDRbqEqxApkjJFOmlSX5fSK4lI6EYiUclw1S1NN7ecogEh
JZV5qjcyFGWmqMxDhjjP85x0MuWpZMzhfd53rffcvdZee33+2r+9v7+9tqqr
j427iJCQUBQz/7vucO9tLO2z2yL0v0HiUuC10yGKl/F/HzpBKwYrRgosHmke
//VbksDPGwy2b1fJFNjhUldnxbVcgX2e+uve+VEg8Pew99XCwiUCV5e9Lqk3
Khf4SIC5pONgpcBlcw1mHh+vEjglsXJ60fK3AhsvLEqwfVIjsG5VV/5rrXqB
W4xth9KHGgT2kjjW1KrfJPC7dvsiqZvNAtuaOVA9PS0CG8Zds49Tfy8wOR3R
4vlXm8CfzOsTF1a0C5x1lwhoVO0UOPmqaLDmmQ8Cj7jt6z/8skvgeVvZNk/l
OQKfk/70C7WfENjtUZl55ON/vMPsAXv71D+eEjN0imfWjUNDgzMzBFoGlcdU
REmwKqZ1phk/ahQNj53N1BkYqTTJ+O9n/VqLxElILrZ8MczY8V5jZbQEiV81
KyQGGOtfzHdeIMnkyLkpRTIWc384fms+ic0qZlVNjDnm7FvSsiQenDxnWME4
b9VxnZtyJLLVKpyeMr7+657X8+SZXOXTt9xnfGh8o0uwIpPbzItONuNN3aqT
c5SZXI0vrfFmLFsuHnlZhUS3SMgOW8b9KbSuiCqJm3p2qoaM7/gWHeQvJ1Hk
sk1uZJqAj13SzzMrSSzUO7amkbHZxmtR41okvs22V3jEeETU8c2wHgmZ80c3
ODCu6YWbnwGJg7GBp7UZJ9Vq8IdYzH6vN1+a4hOwif6h37+BxJcRL+E7jDXP
fXjrYUSCeFB8ypWx0MHyQ5+2kLib8EeJFuNMrbA7pCmJLse06lwmh1+KtYXa
LEmUH/Hoe/KTwJedS3NDrJk8eP0jBxnXfZDz3GJLwjpJ/4Is49AJfn2yA4mT
Kp/FvSaZ869teHjCjcTSuDRD4QkCwxWVtisPk1hWPmEdN87kaVMg1uXJ3O9E
2A8jxlG+CT6m3iQcndQ43mMEFB6fgGwAiWZqvWfeCIGJjUeGX50lgRjWpDHj
zjdOqQEXSAxy9qq9/UHg3mez+dQlEsHZ1ptahwmoLFMkMm+S8A498LLuGwH1
mKILlkkkQgz8zay/EJitmW0gnEpijtmTb3mDBHjPU3i56STm8sUtFBmntobu
Us4kcXl5rWRHPwEtGVeVgQLmXa3/PGnUy/TT1TnFV+tJ8PvXpUZzCcjI//Qz
aiLR05HR2U4R+J5ML//aQuKhr0STPOOcivYb9p0k+kwKZUIJAoYzGU4an0iI
qD8fd+0isPlPK37FJAk/aaPz8a0ERo/2njXnkxgadc6qayGQdSBwsm6GhMEd
tshkMwE185yxjlkUAlULxCyaCIgry3+npShc7mZlva9j7reMw1NaRsFGKtw8
qoqAl6R3g78Fhd1VXl15zwloiIhZTVhSKFbYkZP2jAAx+rD2gjWF6cO+r+7m
Mf1DNr4NtqOw83jjgz9zCKzPWfvq4QEK4UkbjJQyCcxy5Be886cg1vqiQTqF
QGzS9cRlsRTeBR5JyL5F4IDpGiPiAYWaLxKLbcOZerkdLTHxFHjDfQ+/hRJI
W7JijmwqBbnLrWUrbxDIjSnzFMqmcNtv582/rjD9HTaq211Fwd9naFbDWQL8
cy75t4cpDBm7ioq4EXC2Y9XOteDCYJWhR7M2ARcly7h8Sy7arrjGz9IicJBy
9/ew5iJMJ1+NtZJ5r8ejFV/ZccGVWcq/oU7gSNCk+0UXLtSHTy/VXUzgRF7p
9OhJLroH9t5TlCIQssBSvyeOi4vaF8UzhzjIa3WPKB7l4vQ9OoiXwUGY8LLV
mOCiY51Oc3MaB0d1ybqSn1xcsVr8siSFA5WgfRJlQh/Brd2/PyKBAzbLKrBC
4iPK948OasZwsDdivU+1ykfcOGwSIhfMwZj1PIsms4/I6Ax7SblzsKEmS4R3
+yOac1bXHFXiYOm2wyMRW3uw7hph/tKjG2tZa8NzeT3Y1VDwu2pGF4jvN94k
Bn2Cj1Wnjk7XBwyu2R2kaMCDVYTNImdeJzQGdPuFm3nQ6y66LDHYgUr1k02+
gZ/hNHWqJPhVO0JbWt1s1HsxE/7+qkdsG2jb0nCRyl6YrA1k17u9R7bdAtMN
fn2YPrM4edl4CxJrL93nyvZDziGcnX+9GWNV+8/KlvfjtPzW2oDPjSDDS0ak
vQcwI5NUHaHTgNHGTYp/Sw1CQfur6UdeDXwj1UoDCgdRP6VXqNxbDflaNeke
5y/o3P17S0FvJWxbH08pT39BYJh02+ncUnw/EO/VlTGEc3N9V7PYz1Hikhkk
tZPGyKKh1QPPMvCi3suCs4vGToecrS/2ZuDZFi2ZJ7tp8DwT0qxH0/FYOTnW
0p5G7fypogZWOmLaY3Kuu9JItPc5L5GZipPWbEoigGb+GxXL3OgkaBs7bRZL
obHN+T1OuMdCI3ORaFsaDffg6q3bI+5BTaW9OuURjWT2qXqn0hgoTNnsMXtK
I2yFeoipwl3Myf/XsaBCGrLCftWHiqNA6bHuijbT2NeoOP3vwhvoevDNubmV
honzPLP5P6+hXTJTPbGdxp4V6eYi60JQN6CZZcKhEfHOREM9lY3C1CVVgX00
YqWkx5SqLyB/Yff13YM0zt1f4/XHgrPICYqxUaVpKMW0urzddwoZbgs4pT+Y
+kWvioxH+CC5qSkxbIxGnmSoczzXA3G/hR1xmaQxvcvrN7OFLojNstTT59PQ
eeOgdnuXNaKXzBuZmaHBWqEQtcrbd8t/AI7LkNQ=
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]}, 
     {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]}}, InsetBox[
     TemplateBox[{
      "\"Gravity\"",InterpretationBox[
       "\"h=\\!\\(TraditionalForm\\`1\\/4\\)\"", 
        StringForm["h=``", 
         Rational[1, 4]], Editable -> False],InterpretationBox[
       "\"h=\\!\\(TraditionalForm\\`1\\/2\\)\"", 
        StringForm["h=``", 
         Rational[1, 2]], Editable -> False],InterpretationBox[
       "\"h=\\!\\(TraditionalForm\\`3\\/4\\)\"", 
        StringForm["h=``", 
         Rational[3, 4]], Editable -> False],InterpretationBox[
       "\"h=\\!\\(TraditionalForm\\`1\\)\"", 
        StringForm["h=``", 1], Editable -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.99, 0.5}], ImageScaled[{1, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"A\"", TraditionalForm], 
     FormBox["\"Corr\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
   PlotRange->{{0, 1}, {0., 0.9999999999999993}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1:eJxF1Xk0lVsfB3BDRbqEqxApkjJFOmlSX5fSK4lI6EYiUclw1S1NN7ecogEh
JZV5qjcyFGWmqMxDhjjP85x0MuWpZMzhfd53rffcvdZee33+2r+9v7+9tqqr
j427iJCQUBQz/7vucO9tLO2z2yL0v0HiUuC10yGKl/F/HzpBKwYrRgosHmke
//VbksDPGwy2b1fJFNjhUldnxbVcgX2e+uve+VEg8Pew99XCwiUCV5e9Lqk3
Khf4SIC5pONgpcBlcw1mHh+vEjglsXJ60fK3AhsvLEqwfVIjsG5VV/5rrXqB
W4xth9KHGgT2kjjW1KrfJPC7dvsiqZvNAtuaOVA9PS0CG8Zds49Tfy8wOR3R
4vlXm8CfzOsTF1a0C5x1lwhoVO0UOPmqaLDmmQ8Cj7jt6z/8skvgeVvZNk/l
OQKfk/70C7WfENjtUZl55ON/vMPsAXv71D+eEjN0imfWjUNDgzMzBFoGlcdU
REmwKqZ1phk/ahQNj53N1BkYqTTJ+O9n/VqLxElILrZ8MczY8V5jZbQEiV81
KyQGGOtfzHdeIMnkyLkpRTIWc384fms+ic0qZlVNjDnm7FvSsiQenDxnWME4
b9VxnZtyJLLVKpyeMr7+657X8+SZXOXTt9xnfGh8o0uwIpPbzItONuNN3aqT
c5SZXI0vrfFmLFsuHnlZhUS3SMgOW8b9KbSuiCqJm3p2qoaM7/gWHeQvJ1Hk
sk1uZJqAj13SzzMrSSzUO7amkbHZxmtR41okvs22V3jEeETU8c2wHgmZ80c3
ODCu6YWbnwGJg7GBp7UZJ9Vq8IdYzH6vN1+a4hOwif6h37+BxJcRL+E7jDXP
fXjrYUSCeFB8ypWx0MHyQ5+2kLib8EeJFuNMrbA7pCmJLse06lwmh1+KtYXa
LEmUH/Hoe/KTwJedS3NDrJk8eP0jBxnXfZDz3GJLwjpJ/4Is49AJfn2yA4mT
Kp/FvSaZ869teHjCjcTSuDRD4QkCwxWVtisPk1hWPmEdN87kaVMg1uXJ3O9E
2A8jxlG+CT6m3iQcndQ43mMEFB6fgGwAiWZqvWfeCIGJjUeGX50lgRjWpDHj
zjdOqQEXSAxy9qq9/UHg3mez+dQlEsHZ1ptahwmoLFMkMm+S8A498LLuGwH1
mKILlkkkQgz8zay/EJitmW0gnEpijtmTb3mDBHjPU3i56STm8sUtFBmntobu
Us4kcXl5rWRHPwEtGVeVgQLmXa3/PGnUy/TT1TnFV+tJ8PvXpUZzCcjI//Qz
aiLR05HR2U4R+J5ML//aQuKhr0STPOOcivYb9p0k+kwKZUIJAoYzGU4an0iI
qD8fd+0isPlPK37FJAk/aaPz8a0ERo/2njXnkxgadc6qayGQdSBwsm6GhMEd
tshkMwE185yxjlkUAlULxCyaCIgry3+npShc7mZlva9j7reMw1NaRsFGKtw8
qoqAl6R3g78Fhd1VXl15zwloiIhZTVhSKFbYkZP2jAAx+rD2gjWF6cO+r+7m
Mf1DNr4NtqOw83jjgz9zCKzPWfvq4QEK4UkbjJQyCcxy5Be886cg1vqiQTqF
QGzS9cRlsRTeBR5JyL5F4IDpGiPiAYWaLxKLbcOZerkdLTHxFHjDfQ+/hRJI
W7JijmwqBbnLrWUrbxDIjSnzFMqmcNtv582/rjD9HTaq211Fwd9naFbDWQL8
cy75t4cpDBm7ioq4EXC2Y9XOteDCYJWhR7M2ARcly7h8Sy7arrjGz9IicJBy
9/ew5iJMJ1+NtZJ5r8ejFV/ZccGVWcq/oU7gSNCk+0UXLtSHTy/VXUzgRF7p
9OhJLroH9t5TlCIQssBSvyeOi4vaF8UzhzjIa3WPKB7l4vQ9OoiXwUGY8LLV
mOCiY51Oc3MaB0d1ybqSn1xcsVr8siSFA5WgfRJlQh/Brd2/PyKBAzbLKrBC
4iPK948OasZwsDdivU+1ykfcOGwSIhfMwZj1PIsms4/I6Ax7SblzsKEmS4R3
+yOac1bXHFXiYOm2wyMRW3uw7hph/tKjG2tZa8NzeT3Y1VDwu2pGF4jvN94k
Bn2Cj1Wnjk7XBwyu2R2kaMCDVYTNImdeJzQGdPuFm3nQ6y66LDHYgUr1k02+
gZ/hNHWqJPhVO0JbWt1s1HsxE/7+qkdsG2jb0nCRyl6YrA1k17u9R7bdAtMN
fn2YPrM4edl4CxJrL93nyvZDziGcnX+9GWNV+8/KlvfjtPzW2oDPjSDDS0ak
vQcwI5NUHaHTgNHGTYp/Sw1CQfur6UdeDXwj1UoDCgdRP6VXqNxbDflaNeke
5y/o3P17S0FvJWxbH08pT39BYJh02+ncUnw/EO/VlTGEc3N9V7PYz1Hikhkk
tZPGyKKh1QPPMvCi3suCs4vGToecrS/2ZuDZFi2ZJ7tp8DwT0qxH0/FYOTnW
0p5G7fypogZWOmLaY3Kuu9JItPc5L5GZipPWbEoigGb+GxXL3OgkaBs7bRZL
obHN+T1OuMdCI3ORaFsaDffg6q3bI+5BTaW9OuURjWT2qXqn0hgoTNnsMXtK
I2yFeoipwl3Myf/XsaBCGrLCftWHiqNA6bHuijbT2NeoOP3vwhvoevDNubmV
honzPLP5P6+hXTJTPbGdxp4V6eYi60JQN6CZZcKhEfHOREM9lY3C1CVVgX00
YqWkx5SqLyB/Yff13YM0zt1f4/XHgrPICYqxUaVpKMW0urzddwoZbgs4pT+Y
+kWvioxH+CC5qSkxbIxGnmSoczzXA3G/hR1xmaQxvcvrN7OFLojNstTT59PQ
eeOgdnuXNaKXzBuZmaHBWqEQtcrbd8t/AI7LkNQ=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
         "]]}}}, {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {"A", "Corr"}, AxesOrigin -> {0, 0}, 
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
      PlotRange -> {{0, 1}, {0., 0.9999999999999993}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]]}, {"Gravity", 
        StringForm["h=``", 
         Rational[1, 4]], 
        StringForm["h=``", 
         Rational[1, 2]], 
        StringForm["h=``", 
         Rational[3, 4]], 
        StringForm["h=``", 1]}, LabelStyle -> {}, LegendLayout -> 
       "Column"]], {Right, Center}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.68878348806485*^9, 3.688783518790533*^9, {3.6887836062380257`*^9, 
   3.688783610936289*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"yvar3", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"Simplify", "[", 
     FractionBox[
      RowBox[{
       SubsuperscriptBox["\[Integral]", "0", 
        FractionBox["A", "w"]], 
       RowBox[{
        SuperscriptBox["y", "2"], "w", " ", 
        RowBox[{"\[DifferentialD]", "y"}]}]}], "A"], "]"}], "-", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["A", 
       RowBox[{"2", " ", "w"}]], ")"}], "2"]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6889086697994127`*^9, 3.688908696728856*^9}}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["A", "2"], 
  RowBox[{"12", " ", 
   SuperscriptBox["w", "2"]}]]], "Output",
 CellChangeTimes->{3.6889086971645603`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["yave3"], "Input",
 CellChangeTimes->{{3.688908535239195*^9, 3.688908549648613*^9}}],

Cell[BoxData[
 FractionBox["A", 
  RowBox[{"2", " ", "w"}]]], "Output",
 CellChangeTimes->{{3.688908524646834*^9, 3.6889085499640017`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"rside", "-", 
  RowBox[{
   RowBox[{"L", "/", "h"}], " ", 
   RowBox[{"(", 
    RowBox[{"y", "-", "rtop"}], ")"}]}]}]], "Input",
 CellChangeTimes->{3.6889027110818977`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"xave1", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"(*", 
    RowBox[{"lower", " ", "parallelogram"}], "*)"}], 
   FractionBox[
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "rbot"], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubsuperscriptBox["\[Integral]", 
         RowBox[{
          FractionBox["L", "h"], "y"}], 
         RowBox[{
          RowBox[{
           FractionBox["L", "h"], "y"}], "+", "w"}]], 
        RowBox[{"x", 
         RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], 
      RowBox[{"\[DifferentialD]", "y"}]}]}], 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "rbot"], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubsuperscriptBox["\[Integral]", 
         RowBox[{
          FractionBox["L", "h"], "y"}], 
         RowBox[{
          RowBox[{
           FractionBox["L", "h"], "y"}], "+", "w"}]], 
        RowBox[{"\[DifferentialD]", "x"}]}], ")"}], 
      RowBox[{"\[DifferentialD]", "y"}]}]}]], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"xave2", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"(*", "rectangle", "*)"}], 
   FractionBox[
    RowBox[{
     SubsuperscriptBox["\[Integral]", "rbot", "rtop"], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubsuperscriptBox["\[Integral]", 
         RowBox[{"rside", "-", "w"}], "rside"], 
        RowBox[{"x", 
         RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], 
      RowBox[{"\[DifferentialD]", "y"}]}]}], 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "rbot", "rtop"], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubsuperscriptBox["\[Integral]", 
         RowBox[{"rside", "-", "w"}], "rside"], 
        RowBox[{"\[DifferentialD]", "x"}]}], ")"}], 
      RowBox[{"\[DifferentialD]", "y"}]}]}]], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"xave3", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"(*", 
    RowBox[{"higher", " ", "parallelogram"}], "*)"}], 
   FractionBox[
    RowBox[{
     SubsuperscriptBox["\[Integral]", "rtop", 
      FractionBox["A", "w"]], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubsuperscriptBox["\[Integral]", 
         RowBox[{"rside", "-", 
          RowBox[{
           RowBox[{"L", "/", "h"}], " ", 
           RowBox[{"(", 
            RowBox[{"y", "-", "rtop"}], ")"}]}], "-", "w"}], 
         RowBox[{"rside", "-", 
          RowBox[{
           RowBox[{"L", "/", "h"}], " ", 
           RowBox[{"(", 
            RowBox[{"y", "-", "rtop"}], ")"}]}]}]], 
        RowBox[{"x", 
         RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], 
      RowBox[{"\[DifferentialD]", "y"}]}]}], 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "rtop", 
      FractionBox["A", "w"]], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SubsuperscriptBox["\[Integral]", 
         RowBox[{"rside", "-", 
          RowBox[{
           RowBox[{"L", "/", "h"}], " ", 
           RowBox[{"(", 
            RowBox[{"y", "-", "rtop"}], ")"}]}], "-", "w"}], 
         RowBox[{"rside", "-", 
          RowBox[{
           RowBox[{"L", "/", "h"}], " ", 
           RowBox[{"(", 
            RowBox[{"y", "-", "rtop"}], ")"}]}]}]], 
        RowBox[{"\[DifferentialD]", "x"}]}], ")"}], 
      RowBox[{"\[DifferentialD]", "y"}]}]}]], "]"}]}]}], "Input",
 CellChangeTimes->{{3.688918952055593*^9, 3.68891898166615*^9}, {
  3.688920649242091*^9, 3.688920652099599*^9}, {3.688920805999097*^9, 
  3.688920832631114*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"L", " ", "rbot"}], "+", 
   RowBox[{"h", " ", "w"}]}], 
  RowBox[{"2", " ", "h"}]]], "Output",
 CellChangeTimes->{{3.688918956169711*^9, 3.6889189826247053`*^9}, 
   3.6889206527788877`*^9, {3.688920827493904*^9, 3.688920833199876*^9}}],

Cell[BoxData[
 RowBox[{"rside", "-", 
  FractionBox["w", "2"]}]], "Output",
 CellChangeTimes->{{3.688918956169711*^9, 3.6889189826247053`*^9}, 
   3.6889206527788877`*^9, {3.688920827493904*^9, 3.688920833211926*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"2", " ", "rside"}], "+", 
    FractionBox[
     RowBox[{"L", " ", 
      RowBox[{"(", 
       RowBox[{"rtop", "-", 
        FractionBox["A", "w"]}], ")"}]}], "h"], "-", "w"}], ")"}]}]], "Output",
 CellChangeTimes->{{3.688918956169711*^9, 3.6889189826247053`*^9}, 
   3.6889206527788877`*^9, {3.688920827493904*^9, 3.6889208333734617`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"yave", " ", "=", 
   FractionBox["A", 
    RowBox[{"2", " ", "w"}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xvar1", "=", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"Simplify", "[", 
      FractionBox[
       RowBox[{
        SubsuperscriptBox["\[Integral]", "0", "rbot"], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", 
            RowBox[{
             FractionBox["L", "h"], "y"}], 
            RowBox[{"w", "+", 
             RowBox[{
              FractionBox["L", "h"], "y"}]}]], 
           RowBox[{
            SuperscriptBox["x", "2"], 
            RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], 
         RowBox[{"\[DifferentialD]", "y"}]}]}], "A"], "]"}], "-", 
     SuperscriptBox["xave1", "2"]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xvar2", "=", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"Simplify", "[", 
       RowBox[{
        RowBox[{
         SubsuperscriptBox["\[Integral]", "0", "rbot"], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubsuperscriptBox["\[Integral]", 
             RowBox[{
              FractionBox["L", "h"], "y"}], 
             RowBox[{"w", "+", 
              RowBox[{
               FractionBox["L", "h"], "y"}]}]], 
            RowBox[{
             SuperscriptBox["x", "2"], 
             RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], 
          RowBox[{"\[DifferentialD]", "y"}]}]}], "+", 
        RowBox[{
         SubsuperscriptBox["\[Integral]", "rbot", "rtop"], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubsuperscriptBox["\[Integral]", 
             RowBox[{"rside", "-", "w"}], "rside"], 
            RowBox[{
             SuperscriptBox["x", "2"], 
             RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], 
          RowBox[{"\[DifferentialD]", "y"}]}]}]}], "]"}], "A"], "-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"xave1", "+", "xave2"}], ")"}], "2"]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xvar3", "=", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"Simplify", "[", 
       RowBox[{
        RowBox[{
         SubsuperscriptBox["\[Integral]", "0", "rbot"], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubsuperscriptBox["\[Integral]", 
             RowBox[{
              FractionBox["L", "h"], "y"}], 
             RowBox[{"w", "+", 
              RowBox[{
               FractionBox["L", "h"], "y"}]}]], 
            RowBox[{
             SuperscriptBox["x", "2"], 
             RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], 
          RowBox[{"\[DifferentialD]", "y"}]}]}], "+", 
        RowBox[{
         SubsuperscriptBox["\[Integral]", "rbot", "rtop"], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubsuperscriptBox["\[Integral]", 
             RowBox[{"rside", "-", "w"}], "rside"], 
            RowBox[{
             SuperscriptBox["x", "2"], 
             RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], 
          RowBox[{"\[DifferentialD]", "y"}]}]}], "+", 
        RowBox[{
         SubsuperscriptBox["\[Integral]", "rtop", 
          FractionBox["A", "w"]], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubsuperscriptBox["\[Integral]", 
             RowBox[{"rside", "-", 
              RowBox[{
               RowBox[{"L", "/", "h"}], " ", 
               RowBox[{"(", 
                RowBox[{"y", "-", "rtop"}], ")"}]}], "-", "w"}], 
             RowBox[{"rside", "-", 
              RowBox[{
               RowBox[{"L", "/", "h"}], " ", 
               RowBox[{"(", 
                RowBox[{"y", "-", "rtop"}], ")"}]}]}]], 
            RowBox[{
             SuperscriptBox["x", "2"], 
             RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], 
          RowBox[{"\[DifferentialD]", "y"}]}]}]}], "]"}], "A"], "-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"xave1", "+", "xave2", "+", "xave3"}], ")"}], "2"]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yvar", " ", "=", 
   FractionBox[
    SuperscriptBox["A", "2"], 
    RowBox[{"12", " ", 
     SuperscriptBox["w", "2"]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"covxy1", " ", "=", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{"(*", 
       RowBox[{"lower", " ", "parallelogram"}], "*)"}], 
      FractionBox[
       RowBox[{
        SubsuperscriptBox["\[Integral]", "0", "rbot"], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", 
            RowBox[{
             FractionBox["L", "h"], "y"}], 
            RowBox[{"w", "+", 
             RowBox[{
              FractionBox["L", "h"], "y"}]}]], 
           RowBox[{"x", "*", "y", 
            RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], 
         RowBox[{"\[DifferentialD]", "y"}]}]}], "A"], "]"}], "-", 
     RowBox[{"xave1", "*", "yave"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"covxy2", " ", "=", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"Simplify", "[", 
       RowBox[{
        RowBox[{
         SubsuperscriptBox["\[Integral]", "0", "rbot"], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubsuperscriptBox["\[Integral]", 
             RowBox[{
              FractionBox["L", "h"], "y"}], 
             RowBox[{"w", "+", 
              RowBox[{
               FractionBox["L", "h"], "y"}]}]], 
            RowBox[{"x", "*", "y", 
             RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], 
          RowBox[{"\[DifferentialD]", "y"}]}]}], "+", 
        RowBox[{
         SubsuperscriptBox["\[Integral]", "rbot", "rtop"], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubsuperscriptBox["\[Integral]", 
             RowBox[{"rside", "-", "w"}], "rside"], 
            RowBox[{"x", "*", "y", 
             RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], 
          RowBox[{"\[DifferentialD]", "y"}]}]}]}], "]"}], "A"], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"xave1", "+", "xave2"}], ")"}], "*", "yave"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"covxy3", " ", "=", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     FractionBox[
      RowBox[{"Simplify", "[", 
       RowBox[{
        RowBox[{
         SubsuperscriptBox["\[Integral]", "0", "rbot"], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubsuperscriptBox["\[Integral]", 
             RowBox[{
              FractionBox["L", "h"], "y"}], 
             RowBox[{"w", "+", 
              RowBox[{
               FractionBox["L", "h"], "y"}]}]], 
            RowBox[{"x", "*", "y", 
             RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], 
          RowBox[{"\[DifferentialD]", "y"}]}]}], "+", 
        RowBox[{
         SubsuperscriptBox["\[Integral]", "rbot", "rtop"], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubsuperscriptBox["\[Integral]", 
             RowBox[{"rside", "-", "w"}], "rside"], 
            RowBox[{"x", "*", "y", 
             RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], 
          RowBox[{"\[DifferentialD]", "y"}]}]}], "+", 
        RowBox[{
         SubsuperscriptBox["\[Integral]", "rtop", 
          FractionBox["A", "w"]], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            SubsuperscriptBox["\[Integral]", 
             RowBox[{"rside", "-", 
              RowBox[{
               RowBox[{"L", "/", "h"}], " ", 
               RowBox[{"(", 
                RowBox[{"y", "-", "rtop"}], ")"}]}], "-", "w"}], 
             RowBox[{"rside", "-", 
              RowBox[{
               RowBox[{"L", "/", "h"}], " ", 
               RowBox[{"(", 
                RowBox[{"y", "-", "rtop"}], ")"}]}]}]], 
            RowBox[{"x", "*", "y", 
             RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], 
          RowBox[{"\[DifferentialD]", "y"}]}]}]}], "]"}], "A"], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"xave1", "+", "xave2", "+", "xave3"}], ")"}], "*", "yave"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"corxy1", "=", 
  RowBox[{"FullSimplify", "[", 
   FractionBox["covxy1", 
    RowBox[{
     RowBox[{"Sqrt", "[", "xvar1", "]"}], "*", 
     RowBox[{"Sqrt", "[", "yvar", "]"}]}]], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"corxy2", "=", 
  RowBox[{"FullSimplify", "[", 
   FractionBox["covxy2", 
    RowBox[{
     RowBox[{"Sqrt", "[", "xvar2", "]"}], "*", 
     RowBox[{"Sqrt", "[", "yvar", "]"}]}]], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"corxy3", "=", 
  RowBox[{"FullSimplify", "[", 
   FractionBox["covxy3", 
    RowBox[{
     RowBox[{"Sqrt", "[", "xvar3", "]"}], "*", 
     RowBox[{"Sqrt", "[", "yvar", "]"}]}]], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6889019110668373`*^9, 3.688901981119997*^9}, {
  3.688902104977236*^9, 3.6889021525998697`*^9}, {3.6889022001760798`*^9, 
  3.688902202149105*^9}, {3.688902723758555*^9, 3.6889027375466223`*^9}, {
  3.688902782759594*^9, 3.6889029165069532`*^9}, {3.6889029638030443`*^9, 
  3.688902972493299*^9}, {3.688903007885413*^9, 3.688903205618622*^9}, {
  3.688903239436137*^9, 3.688903242939939*^9}, {3.688903283922933*^9, 
  3.6889035936045237`*^9}, {3.6889084887636137`*^9, 3.688908515126219*^9}, {
  3.688908637361163*^9, 3.688908641437399*^9}, {3.6889087079358377`*^9, 
  3.688908797590411*^9}, {3.688908829035327*^9, 3.688908916186413*^9}, {
  3.688918920654688*^9, 3.68891894836838*^9}, {3.688920774111223*^9, 
  3.688920783549704*^9}, {3.6889954219685593`*^9, 3.688995474645732*^9}, {
  3.688995508553876*^9, 3.688995651408782*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"A", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3"}], " ", 
      SuperscriptBox["A", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"L", " ", "rbot"}], "+", 
        RowBox[{"h", " ", "w"}]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["rbot", "2"], " ", 
      SuperscriptBox["w", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4", " ", "L", " ", "rbot"}], "+", 
        RowBox[{"3", " ", "h", " ", "w"}]}], ")"}]}]}], ")"}]}], 
  RowBox[{"h", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      SuperscriptBox["A", "2"], 
      SuperscriptBox["w", "2"]], ")"}], 
    RowBox[{"3", "/", "2"}]], " ", 
   SuperscriptBox["w", "3"], " ", 
   SqrtBox[
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "3"}], " ", "A", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"L", " ", "rbot"}], "+", 
          RowBox[{"h", " ", "w"}]}], ")"}], "2"]}], "+", 
      RowBox[{"2", " ", "rbot", " ", "w", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox["L", "2"], " ", 
          SuperscriptBox["rbot", "2"]}], "+", 
         RowBox[{"3", " ", "h", " ", "L", " ", "rbot", " ", "w"}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["h", "2"], " ", 
          SuperscriptBox["w", "2"]}]}], ")"}]}]}], 
     RowBox[{"A", " ", 
      SuperscriptBox["h", "2"]}]]]}]]], "Output",
 CellChangeTimes->{
  3.6889027506096497`*^9, {3.688902784148521*^9, 3.688902810429079*^9}, 
   3.688903604852857*^9, 3.68890894763022*^9, 3.688918937820148*^9, 
   3.688920789217493*^9, 3.688995686349793*^9, 3.688996017242638*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{"A", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "3"}], " ", 
      SuperscriptBox["A", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"L", " ", "rbot"}], "+", 
        RowBox[{"2", " ", "h", " ", "rside"}]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["w", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4", " ", "L", " ", 
         SuperscriptBox["rbot", "3"]}], "-", 
        RowBox[{"3", " ", "h", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", 
            SuperscriptBox["rbot", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"rside", "-", "w"}], ")"}]}], "+", 
           RowBox[{
            SuperscriptBox["rtop", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", "rside"}], "+", "w"}], ")"}]}]}], 
          ")"}]}]}], ")"}]}]}], ")"}]}], 
  RowBox[{"h", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      SuperscriptBox["A", "2"], 
      SuperscriptBox["w", "2"]], ")"}], 
    RowBox[{"3", "/", "2"}]], " ", 
   SuperscriptBox["w", "3"], " ", 
   SqrtBox[
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "3"}], " ", "A", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"L", " ", "rbot"}], "+", 
          RowBox[{"2", " ", "h", " ", "rside"}]}], ")"}], "2"]}], "+", 
      RowBox[{"2", " ", "w", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox["L", "2"], " ", 
          SuperscriptBox["rbot", "3"]}], "+", 
         RowBox[{"3", " ", "h", " ", "L", " ", 
          SuperscriptBox["rbot", "2"], " ", "w"}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["h", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"3", " ", 
             SuperscriptBox["rside", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "rbot"}], "+", "rtop"}], ")"}]}], "+", 
            RowBox[{"3", " ", "rside", " ", 
             RowBox[{"(", 
              RowBox[{"rbot", "-", "rtop"}], ")"}], " ", "w"}], "+", 
            RowBox[{"rtop", " ", 
             SuperscriptBox["w", "2"]}]}], ")"}]}]}], ")"}]}]}], 
     RowBox[{"A", " ", 
      SuperscriptBox["h", "2"]}]]]}]]], "Output",
 CellChangeTimes->{
  3.6889027506096497`*^9, {3.688902784148521*^9, 3.688902810429079*^9}, 
   3.688903604852857*^9, 3.68890894763022*^9, 3.688918937820148*^9, 
   3.688920789217493*^9, 3.688995686349793*^9, 3.688996018059703*^9}],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"A", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["A", "3"], " ", "L"}], "+", 
        RowBox[{"3", " ", 
         SuperscriptBox["A", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"2", " ", "h", " ", "rside"}], "+", 
           RowBox[{"L", " ", 
            RowBox[{"(", 
             RowBox[{"rbot", "-", "rtop"}], ")"}]}]}], ")"}], " ", "w"}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"L", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", 
               SuperscriptBox["rbot", "3"]}], "+", 
              SuperscriptBox["rtop", "3"]}], ")"}]}], "+", 
           RowBox[{"3", " ", "h", " ", 
            SuperscriptBox["rbot", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"rside", "-", "w"}], ")"}]}]}], ")"}], " ", 
         SuperscriptBox["w", "3"]}]}], ")"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"h", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         SuperscriptBox["A", "2"], 
         SuperscriptBox["w", "2"]], ")"}], 
       RowBox[{"3", "/", "2"}]], " ", 
      SuperscriptBox["w", "4"], " ", 
      RowBox[{"\[Sqrt]", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", 
          RowBox[{"A", " ", 
           SuperscriptBox["h", "2"], " ", 
           SuperscriptBox["w", "2"]}]], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["A", "3"], " ", 
            SuperscriptBox["L", "2"]}], "+", 
           RowBox[{"6", " ", 
            SuperscriptBox["A", "2"], " ", "L", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "h", " ", "rside"}], "+", 
              RowBox[{"L", " ", 
               RowBox[{"(", 
                RowBox[{"rbot", "-", "rtop"}], ")"}]}]}], ")"}], " ", "w"}], 
           "+", 
           RowBox[{"A", " ", 
            SuperscriptBox["w", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "3"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "h", " ", "rside"}], "+", 
                 RowBox[{"L", " ", 
                  RowBox[{"(", 
                   RowBox[{"rbot", "-", "rtop"}], ")"}]}]}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"6", " ", "h", " ", "rside"}], "+", 
                 RowBox[{"L", " ", 
                  RowBox[{"(", 
                   RowBox[{"rbot", "+", 
                    RowBox[{"3", " ", "rtop"}]}], ")"}]}]}], ")"}]}], "+", 
              RowBox[{"6", " ", "h", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "h", " ", "rside"}], "+", 
                 RowBox[{"L", " ", 
                  RowBox[{"(", 
                   RowBox[{"rbot", "-", "rtop"}], ")"}]}]}], ")"}], " ", 
               "w"}], "+", 
              RowBox[{
               SuperscriptBox["h", "2"], " ", 
               SuperscriptBox["w", "2"]}]}], ")"}]}], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["w", "3"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", 
               SuperscriptBox["L", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["rbot", "3"], "-", 
                 SuperscriptBox["rtop", "3"]}], ")"}]}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox["h", "2"], " ", "rbot", " ", "rside", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "rside"}], "+", "w"}], ")"}]}], "+", 
              RowBox[{"3", " ", "h", " ", "L", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  SuperscriptBox["rbot", "2"], " ", "w"}], "+", 
                 RowBox[{
                  SuperscriptBox["rtop", "2"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "rside"}], "+", "w"}], ")"}]}]}],
                 ")"}]}]}], ")"}]}]}], ")"}]}], ")"}]}]}], ")"}]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{
  3.6889027506096497`*^9, {3.688902784148521*^9, 3.688902810429079*^9}, 
   3.688903604852857*^9, 3.68890894763022*^9, 3.688918937820148*^9, 
   3.688920789217493*^9, 3.688995686349793*^9, 3.688996018923277*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{"cor1", ",", "cor2", ",", "cor3"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cor1", "[", 
     RowBox[{"A_", ",", "L_", ",", "h_", ",", "w_", ",", "rbot_"}], "]"}], ":=", 
    FractionBox[
     RowBox[{"A", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", 
         SuperscriptBox["A", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"L", " ", "rbot"}], "+", 
           RowBox[{"h", " ", "w"}]}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["rbot", "2"], " ", 
         SuperscriptBox["w", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", "L", " ", "rbot"}], "+", 
           RowBox[{"3", " ", "h", " ", "w"}]}], ")"}]}]}], ")"}]}], 
     RowBox[{"h", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         SuperscriptBox["A", "2"], 
         SuperscriptBox["w", "2"]], ")"}], 
       RowBox[{"3", "/", "2"}]], " ", 
      SuperscriptBox["w", "3"], " ", 
      SqrtBox[
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], " ", "A", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"L", " ", "rbot"}], "+", 
             RowBox[{"h", " ", "w"}]}], ")"}], "2"]}], "+", 
         RowBox[{"2", " ", "rbot", " ", "w", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             SuperscriptBox["L", "2"], " ", 
             SuperscriptBox["rbot", "2"]}], "+", 
            RowBox[{"3", " ", "h", " ", "L", " ", "rbot", " ", "w"}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["h", "2"], " ", 
             SuperscriptBox["w", "2"]}]}], ")"}]}]}], 
        RowBox[{"A", " ", 
         SuperscriptBox["h", "2"]}]]]}]]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cor2", "[", 
     RowBox[{
     "A_", ",", "L_", ",", "h_", ",", "w_", ",", "rbot_", ",", "rside_", ",", 
      "rtop_"}], "]"}], ":=", 
    FractionBox[
     RowBox[{"A", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", 
         SuperscriptBox["A", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"L", " ", "rbot"}], "+", 
           RowBox[{"2", " ", "h", " ", "rside"}]}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox["w", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", "L", " ", 
            SuperscriptBox["rbot", "3"]}], "-", 
           RowBox[{"3", " ", "h", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", 
               SuperscriptBox["rbot", "2"], " ", 
               RowBox[{"(", 
                RowBox[{"rside", "-", "w"}], ")"}]}], "+", 
              RowBox[{
               SuperscriptBox["rtop", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "2"}], " ", "rside"}], "+", "w"}], ")"}]}]}], 
             ")"}]}]}], ")"}]}]}], ")"}]}], 
     RowBox[{"h", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         SuperscriptBox["A", "2"], 
         SuperscriptBox["w", "2"]], ")"}], 
       RowBox[{"3", "/", "2"}]], " ", 
      SuperscriptBox["w", "3"], " ", 
      SqrtBox[
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], " ", "A", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"L", " ", "rbot"}], "+", 
             RowBox[{"2", " ", "h", " ", "rside"}]}], ")"}], "2"]}], "+", 
         RowBox[{"2", " ", "w", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", 
             SuperscriptBox["L", "2"], " ", 
             SuperscriptBox["rbot", "3"]}], "+", 
            RowBox[{"3", " ", "h", " ", "L", " ", 
             SuperscriptBox["rbot", "2"], " ", "w"}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["h", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"3", " ", 
                SuperscriptBox["rside", "2"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "rbot"}], "+", "rtop"}], ")"}]}], "+", 
               RowBox[{"3", " ", "rside", " ", 
                RowBox[{"(", 
                 RowBox[{"rbot", "-", "rtop"}], ")"}], " ", "w"}], "+", 
               RowBox[{"rtop", " ", 
                SuperscriptBox["w", "2"]}]}], ")"}]}]}], ")"}]}]}], 
        RowBox[{"A", " ", 
         SuperscriptBox["h", "2"]}]]]}]]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cor3", "[", 
     RowBox[{
     "A_", ",", "L_", ",", "h_", ",", "w_", ",", "rbot_", ",", "rside_", ",", 
      "rtop_"}], "]"}], ":=", 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"A", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["A", "3"], " ", "L"}], "+", 
           RowBox[{"3", " ", 
            SuperscriptBox["A", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "h", " ", "rside"}], "+", 
              RowBox[{"L", " ", 
               RowBox[{"(", 
                RowBox[{"rbot", "-", "rtop"}], ")"}]}]}], ")"}], " ", "w"}], 
           "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"L", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "2"}], " ", 
                  SuperscriptBox["rbot", "3"]}], "+", 
                 SuperscriptBox["rtop", "3"]}], ")"}]}], "+", 
              RowBox[{"3", " ", "h", " ", 
               SuperscriptBox["rbot", "2"], " ", 
               RowBox[{"(", 
                RowBox[{"rside", "-", "w"}], ")"}]}]}], ")"}], " ", 
            SuperscriptBox["w", "3"]}]}], ")"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"h", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           FractionBox[
            SuperscriptBox["A", "2"], 
            SuperscriptBox["w", "2"]], ")"}], 
          RowBox[{"3", "/", "2"}]], " ", 
         SuperscriptBox["w", "4"], " ", 
         RowBox[{"\[Sqrt]", 
          RowBox[{"(", 
           RowBox[{
            FractionBox["1", 
             RowBox[{"A", " ", 
              SuperscriptBox["h", "2"], " ", 
              SuperscriptBox["w", "2"]}]], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SuperscriptBox["A", "3"], " ", 
               SuperscriptBox["L", "2"]}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox["A", "2"], " ", "L", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "h", " ", "rside"}], "+", 
                 RowBox[{"L", " ", 
                  RowBox[{"(", 
                   RowBox[{"rbot", "-", "rtop"}], ")"}]}]}], ")"}], " ", 
               "w"}], "+", 
              RowBox[{"A", " ", 
               SuperscriptBox["w", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "3"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"2", " ", "h", " ", "rside"}], "+", 
                    RowBox[{"L", " ", 
                    RowBox[{"(", 
                    RowBox[{"rbot", "-", "rtop"}], ")"}]}]}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"6", " ", "h", " ", "rside"}], "+", 
                    RowBox[{"L", " ", 
                    RowBox[{"(", 
                    RowBox[{"rbot", "+", 
                    RowBox[{"3", " ", "rtop"}]}], ")"}]}]}], ")"}]}], "+", 
                 RowBox[{"6", " ", "h", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"2", " ", "h", " ", "rside"}], "+", 
                    RowBox[{"L", " ", 
                    RowBox[{"(", 
                    RowBox[{"rbot", "-", "rtop"}], ")"}]}]}], ")"}], " ", 
                  "w"}], "+", 
                 RowBox[{
                  SuperscriptBox["h", "2"], " ", 
                  SuperscriptBox["w", "2"]}]}], ")"}]}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["w", "3"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", 
                  SuperscriptBox["L", "2"], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    SuperscriptBox["rbot", "3"], "-", 
                    SuperscriptBox["rtop", "3"]}], ")"}]}], "+", 
                 RowBox[{"6", " ", 
                  SuperscriptBox["h", "2"], " ", "rbot", " ", "rside", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "rside"}], "+", "w"}], ")"}]}], "+", 
                 RowBox[{"3", " ", "h", " ", "L", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    SuperscriptBox["rbot", "2"], " ", "w"}], "+", 
                    RowBox[{
                    SuperscriptBox["rtop", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", "2"}], " ", "rside"}], "+", "w"}], ")"}]}]}],
                    ")"}]}]}], ")"}]}]}], ")"}]}], ")"}]}]}], ")"}]}], 
      ")"}]}]}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.688996076492673*^9, 3.688996198950191*^9}, {
  3.688996417690744*^9, 3.688996432575993*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{"xave1", ",", "yave"}], "}"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"xave2", ",", "yave"}], "}"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"xave3", ",", "yave"}], "}"}]}], "Input",
 CellChangeTimes->{{3.6889041093730297`*^9, 3.688904114836323*^9}, {
  3.688904192591353*^9, 3.688904197022682*^9}, {3.688904232927751*^9, 
  3.688904237855966*^9}, {3.688909008501585*^9, 3.68890901193948*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"rbot", " ", "w", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"L", " ", "rbot"}], "+", 
       RowBox[{"h", " ", "w"}]}], ")"}]}], 
    RowBox[{"2", " ", "A", " ", "h"}]], ",", 
   FractionBox["A", 
    RowBox[{"2", " ", "w"}]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.688904039804852*^9, 3.6889041152724524`*^9, 3.688904197631338*^9, 
   3.688904238373062*^9, {3.688908966105218*^9, 3.68890896917127*^9}, 
   3.688909020977829*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"w", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"L", " ", 
        SuperscriptBox["rbot", "2"]}], "+", 
       RowBox[{"h", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "rbot", " ", "rside"}], "+", 
          RowBox[{"2", " ", "rside", " ", "rtop"}], "+", 
          RowBox[{"2", " ", "rbot", " ", "w"}], "-", 
          RowBox[{"rtop", " ", "w"}]}], ")"}]}]}], ")"}]}], 
    RowBox[{"2", " ", "A", " ", "h"}]], ",", 
   FractionBox["A", 
    RowBox[{"2", " ", "w"}]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.688904039804852*^9, 3.6889041152724524`*^9, 3.688904197631338*^9, 
   3.688904238373062*^9, {3.688908966105218*^9, 3.68890896917127*^9}, 
   3.688909020988852*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["A", "2"]}], " ", "L"}], "+", 
     RowBox[{"A", " ", "w", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "h", " ", "rside"}], "+", 
        RowBox[{"2", " ", "L", " ", "rtop"}], "-", 
        RowBox[{"h", " ", "w"}]}], ")"}]}], "+", 
     RowBox[{
      SuperscriptBox["w", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"L", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["rbot", "2"], "-", 
           SuperscriptBox["rtop", "2"]}], ")"}]}], "+", 
        RowBox[{"2", " ", "h", " ", "rbot", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "rside"}], "+", "w"}], ")"}]}]}], ")"}]}]}], 
    RowBox[{"2", " ", "A", " ", "h", " ", "w"}]], ",", 
   FractionBox["A", 
    RowBox[{"2", " ", "w"}]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.688904039804852*^9, 3.6889041152724524`*^9, 3.688904197631338*^9, 
   3.688904238373062*^9, {3.688908966105218*^9, 3.68890896917127*^9}, 
   3.688909020997617*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["TODO: show mean, show correlation, etc.", "Subchapter",
 CellChangeTimes->{{3.6888084893808517`*^9, 3.68880852905367*^9}, {
  3.688809815643889*^9, 3.688809844061171*^9}, {3.6888576021137953`*^9, 
  3.688857616972393*^9}, {3.6889018685504627`*^9, 3.6889018709724407`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"controls", ":", " ", "A"}], ",", " ", "w", ",", " ", "h", ",", 
    " ", "L"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"eps", " ", "=", " ", 
        RowBox[{"1", "/", "20"}]}], ",", "rside", ",", "rtop", ",", "rbot"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"w", "<", "A"}], ",", 
        RowBox[{"w", "=", "A"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"xyCorr", "[", 
             RowBox[{"L", ",", "w", ",", "A", ",", "h"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", ".6"}], "}"}]}], "]"}], ","}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Pink", ",", 
           RowBox[{"Rectangle", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "eps"}], ",", 
               RowBox[{"-", "eps"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"1", "+", "eps"}], ",", 
               RowBox[{"1", "+", "eps"}]}], "}"}]}], "]"}], ",", "White", ",", 
           RowBox[{"Rectangle", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "1"}], "}"}]}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"draw", " ", "friction", " ", "zone"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Opacity", "[", "0.5", "]"}], ",", 
           RowBox[{
            RowBox[{"ChartElementData", "[", 
             RowBox[{"\"\<GradientRectangle\>\"", ",", 
              RowBox[{
              "\"\<ColorScheme\>\"", "\[Rule]", "\"\<PigeonTones\>\""}], ",", 
              RowBox[{"\"\<GradientOrigin\>\"", "\[Rule]", "Bottom"}]}], 
             "]"}], "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "h"}], "}"}]}], "}"}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ChartElementData", "[", 
             RowBox[{"\"\<GradientRectangle\>\"", ",", 
              RowBox[{
              "\"\<ColorScheme\>\"", "\[Rule]", "\"\<PigeonTones\>\""}], ",", 
              RowBox[{"\"\<GradientOrigin\>\"", "\[Rule]", "Top"}]}], "]"}], 
            "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"1", "-", "h"}], ",", "1"}], "}"}]}], "}"}], "]"}]}], 
          "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"draw", " ", "Robots"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"rtop", "   ", "=", " ", 
           RowBox[{"Min", "[", 
            RowBox[{
             RowBox[{"A", "/", "w"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"L", ">", 
                RowBox[{"1", "-", "w"}]}], ",", " ", 
               RowBox[{"1", "-", "   ", 
                RowBox[{
                 RowBox[{"h", "/", "L"}], " ", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", "w"}], ")"}]}]}], ",", " ", 
               RowBox[{"1", "-", "h"}]}], "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"rside", " ", "=", " ", 
           RowBox[{"Min", "[", 
            RowBox[{
             RowBox[{"L", "+", "w"}], ",", "1"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"rbot", "   ", "=", " ", 
           RowBox[{"Min", "[", 
            RowBox[{
             RowBox[{"A", "/", "w"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"L", ">", 
                RowBox[{"1", "-", "w"}]}], ",", "    ", 
               RowBox[{
                RowBox[{"h", "/", "L"}], " ", 
                RowBox[{"(", 
                 RowBox[{"1", "-", "w"}], ")"}]}], ",", " ", "h"}], "]"}]}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"bottom", " ", "parallelogon"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"Blue", ",", 
            RowBox[{"Polygon", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"w", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"w", "+", 
                  RowBox[{
                   RowBox[{"L", "/", "h"}], " ", "rbot"}]}], ",", "rbot"}], 
                "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"L", "/", "h"}], " ", "rbot"}], ",", "rbot"}], 
                "}"}]}], "}"}], "]"}]}], "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"middle", " ", "rectangle"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"rtop", ">", "rbot"}], ",", 
           RowBox[{"{", 
            RowBox[{"Blue", ",", 
             RowBox[{"Polygon", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"rside", ",", "rbot"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"rside", ",", "rtop"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"rside", "-", "w"}], ",", "rtop"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"rside", "-", "w"}], ",", "rbot"}], "}"}]}], "}"}], 
              "]"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"top", " ", "parallelogon"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"A", "/", "w"}], ">", "rtop"}], ",", 
           RowBox[{"{", 
            RowBox[{"Blue", ",", 
             RowBox[{"Polygon", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"rside", ",", " ", "rtop"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"rside", "-", 
                   RowBox[{
                    RowBox[{"L", "/", "h"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"A", "/", "w"}], "-", "rtop"}], ")"}]}]}], ",", 
                  RowBox[{"A", "/", "w"}]}], " ", "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"rside", "-", "w", "-", 
                   RowBox[{
                    RowBox[{"L", "/", "h"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"A", "/", "w"}], "-", "rtop"}], ")"}]}]}], ",", 
                  RowBox[{"A", "/", "w"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"rside", "-", "w"}], ",", "rtop"}], "}"}]}], "}"}], 
              "]"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"initial", " ", "robot", " ", "config"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"EdgeForm", "[", 
            RowBox[{"{", "Red", "}"}], "]"}], ",", 
           RowBox[{"FaceForm", "[", "]"}], ",", 
           RowBox[{"Rectangle", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"w", ",", 
               RowBox[{"A", "/", "w"}]}], "}"}]}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"initial", " ", "robot", " ", "config"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Dashed", ",", "Gray", ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "h"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "h"}], "}"}]}], "}"}], "]"}], ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", 
                RowBox[{"1", "-", "h"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", 
                RowBox[{"1", "-", "h"}]}], "}"}]}], "}"}], "]"}]}], "}"}], 
         ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"centroids", " ", "of", " ", "individual", " ", "parts"}], 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Purple", ",", 
           RowBox[{"PointSize", "[", "Large", "]"}], ",", 
           RowBox[{"Point", "[", 
            RowBox[{"{", 
             RowBox[{
              FractionBox[
               RowBox[{"w", "+", 
                RowBox[{
                 RowBox[{"L", "/", "h"}], " ", "rbot"}]}], "2"], ",", 
              FractionBox["rbot", 
               RowBox[{"2", " "}]]}], "}"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Purple", ",", 
           RowBox[{"PointSize", "[", "Large", "]"}], ",", 
           RowBox[{"Point", "[", 
            RowBox[{"{", " ", 
             RowBox[{
              RowBox[{"rside", "-", 
               FractionBox["w", "2"]}], ",", 
              FractionBox[
               RowBox[{"rbot", "+", "rtop"}], "2"]}], "}"}], "]"}]}], "}"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Purple", ",", 
           RowBox[{"PointSize", "[", "Large", "]"}], ",", 
           RowBox[{"Point", "[", 
            RowBox[{"{", " ", 
             RowBox[{
              FractionBox[
               RowBox[{"rside", "-", 
                RowBox[{
                 RowBox[{"L", "/", "h"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"A", "/", "w"}], "-", "rtop"}], ")"}]}], "-", "w", 
                "+", "rside"}], "2"], ",", 
              FractionBox[
               RowBox[{
                RowBox[{"A", "/", "w"}], "+", "rtop"}], "2"]}], "}"}], 
            "]"}]}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"draw", " ", "the", " ", "mean"}], "*)"}], " ", 
         RowBox[{"(*", 
          RowBox[{"Point", "[", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"A", "/", "w"}], ">", "rtop"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"xave3", ",", "yave3"}], "}"}], ",", " ", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"rtop", ">", "rbot"}], ",", 
               RowBox[{"{", 
                RowBox[{"xave2", ",", "yave2"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"xave1", ",", "yave1"}], "}"}]}], "]"}]}]}]}], "*)"}],
          "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Red", ",", 
           RowBox[{"PointSize", "[", "Large", "]"}], ",", 
           RowBox[{"Point", "[", 
            RowBox[{"{", 
             RowBox[{
              FractionBox[
               RowBox[{
                RowBox[{"L", " ", "rbot"}], "+", 
                RowBox[{"h", " ", "w"}]}], 
               RowBox[{"2", " ", "h"}]], ",", 
              FractionBox["A", 
               RowBox[{"2", " ", "w"}]]}], "}"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Green", ",", 
           RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
           RowBox[{"Point", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"rside", "-", 
               FractionBox["w", "2"]}], ",", 
              FractionBox["A", 
               RowBox[{"2", " ", "w"}]]}], "}"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Yellow", ",", 
           RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
           RowBox[{"Point", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               FractionBox["1", "2"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", " ", "rside"}], "+", 
                 FractionBox[
                  RowBox[{"L", " ", 
                   RowBox[{"(", 
                    RowBox[{"rtop", "-", 
                    FractionBox["A", "w"]}], ")"}]}], "h"], "-", "w"}], 
                ")"}]}], ",", 
              FractionBox["A", 
               RowBox[{"2", " ", "w"}]]}], "}"}], "]"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Text", "[", 
          RowBox[{
           RowBox[{"StringForm", "[", 
            RowBox[{"\"\<Corr=``\>\"", ",", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"A", "/", "w"}], ">", "rtop"}], ",", 
               RowBox[{"cor3", "[", 
                RowBox[{
                "A", ",", "L", ",", "h", ",", "w", ",", "rbot", ",", "rside", 
                 ",", "rtop"}], "]"}], " ", ",", "\[IndentingNewLine]", " ", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"rtop", ">", "rbot"}], ",", 
                 RowBox[{"cor2", "[", 
                  RowBox[{
                  "A", ",", "L", ",", "h", ",", "w", ",", "rbot", ",", 
                   "rside", ",", "rtop"}], "]"}], ",", 
                 RowBox[{"cor1", "[", 
                  RowBox[{
                  "A", ",", "L", ",", "h", ",", "w", ",", "rbot", ",", 
                   "rside", ",", "rtop"}], "]"}]}], "]"}]}], 
              "\[IndentingNewLine]", "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "/", "2"}], ",", 
             RowBox[{"1", "/", "2"}]}], "}"}]}], "]"}]}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}], "]"}]}]}], "]"}],
    ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"A", ",", 
       RowBox[{"1", "/", "4"}]}], "}"}], ",", "0.001", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"w", ",", "0.001", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"h", ",", 
       RowBox[{"1", "/", "8"}]}], "}"}], ",", "0.0001", ",", 
     RowBox[{"1", "/", "2"}]}], " ", 
    RowBox[{"(*", 
     RowBox[{
     "only", " ", "stretch", " ", "half", " ", "the", " ", "workspace"}], 
     "*)"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"L", ",", "0", ",", "2"}], " ", 
    RowBox[{"(*", 
     RowBox[{"we", " ", "could", " ", "make", " ", "this", " ", "bigger"}], 
     "*)"}], "}"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.688819236432025*^9, 3.688819577720038*^9}, {
   3.688846576934639*^9, 3.6888465975256367`*^9}, {3.688846643306011*^9, 
   3.688846747603136*^9}, {3.688846820949548*^9, 3.688846999827983*^9}, {
   3.688847066094385*^9, 3.68884715592889*^9}, {3.688856325263864*^9, 
   3.688856400904196*^9}, {3.688856436866187*^9, 3.688856484367713*^9}, {
   3.688856517496006*^9, 3.6888567361909447`*^9}, {3.688856778447385*^9, 
   3.6888568178435917`*^9}, {3.688856853071457*^9, 3.688856866670505*^9}, {
   3.68885692096854*^9, 3.688856929378634*^9}, {3.6888569595389633`*^9, 
   3.688856960922277*^9}, {3.6888569941910133`*^9, 3.688857328059915*^9}, {
   3.6888999114774837`*^9, 3.688899920944714*^9}, {3.688899982088603*^9, 
   3.688900006930079*^9}, {3.68890008919283*^9, 3.6889001104669533`*^9}, {
   3.688900190990326*^9, 3.688900346826803*^9}, {3.68890043385009*^9, 
   3.688900448552055*^9}, {3.6889004966330147`*^9, 3.688900581668413*^9}, 
   3.6889007260719976`*^9, {3.688900775143865*^9, 3.688900777656547*^9}, {
   3.688900822541747*^9, 3.688900850576845*^9}, {3.6889009126388273`*^9, 
   3.6889009154307528`*^9}, {3.688900995478894*^9, 3.688901000364987*^9}, {
   3.688901479929781*^9, 3.68890148071102*^9}, {3.688901681563437*^9, 
   3.688901686426935*^9}, {3.688901764383852*^9, 3.68890178363916*^9}, {
   3.688902011144176*^9, 3.68890201293668*^9}, {3.688902065451395*^9, 
   3.688902069242371*^9}, {3.688903652650916*^9, 3.688903806504781*^9}, {
   3.688904055239925*^9, 3.688904088579009*^9}, 3.688904122438333*^9, {
   3.68890415680134*^9, 3.688904183115941*^9}, {3.6889042551062326`*^9, 
   3.688904274421221*^9}, {3.688908558491153*^9, 3.688908561210465*^9}, {
   3.688908978997547*^9, 3.6889089950713463`*^9}, {3.6889091418453293`*^9, 
   3.688909161707097*^9}, {3.688919018718684*^9, 3.688919032104789*^9}, {
   3.688919227225069*^9, 3.688919280329267*^9}, 3.6889193616666317`*^9, {
   3.6889194066028433`*^9, 3.688919422715143*^9}, {3.6889201597070093`*^9, 
   3.688920349895032*^9}, {3.688920447756424*^9, 3.6889205189490557`*^9}, {
   3.688920621749331*^9, 3.688920636857809*^9}, {3.6889206668664083`*^9, 
   3.6889207265831327`*^9}, {3.688921354512123*^9, 3.688921377337098*^9}, {
   3.688995364287344*^9, 3.688995365473991*^9}, {3.688996222713719*^9, 
   3.688996354519013*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`A$$ = 0.255, $CellContext`h$$ = Rational[
    1, 8], $CellContext`L$$ = 0.5650000000000001, $CellContext`w$$ = 0.841, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`A$$], 
       Rational[1, 4]}, 0.001, 1}, {
      Hold[$CellContext`w$$], 0.001, 1}, {{
       Hold[$CellContext`h$$], 
       Rational[1, 8]}, 0.0001, 
      Rational[1, 2]}, {
      Hold[$CellContext`L$$], 0, 2}}, Typeset`size$$ = {540., {264., 275.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`A$528002$$ = 0, $CellContext`w$528003$$ = 
    0, $CellContext`h$528004$$ = 0, $CellContext`L$528005$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`A$$ = Rational[1, 4], $CellContext`h$$ = 
        Rational[1, 8], $CellContext`L$$ = 0, $CellContext`w$$ = 0.001}, 
      "ControllerVariables" :> {
        Hold[$CellContext`A$$, $CellContext`A$528002$$, 0], 
        Hold[$CellContext`w$$, $CellContext`w$528003$$, 0], 
        Hold[$CellContext`h$$, $CellContext`h$528004$$, 0], 
        Hold[$CellContext`L$$, $CellContext`L$528005$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`eps$ = 
         1/20, $CellContext`rside$, $CellContext`rtop$, $CellContext`rbot$}, 
        If[$CellContext`w$$ < $CellContext`A$$, $CellContext`w$$ = \
$CellContext`A$$]; Graphics[{{Pink, 
            
            Rectangle[{-$CellContext`eps$, -$CellContext`eps$}, {
             1 + $CellContext`eps$, 1 + $CellContext`eps$}], White, 
            Rectangle[{0, 0}, {1, 1}]}, {
            Opacity[0.5], 
            ChartElementData[
            "GradientRectangle", "ColorScheme" -> "PigeonTones", 
             "GradientOrigin" -> Bottom][{{0, 1}, {0, $CellContext`h$$}}], 
            ChartElementData[
            "GradientRectangle", "ColorScheme" -> "PigeonTones", 
             "GradientOrigin" -> 
             Top][{{0, 1}, {1 - $CellContext`h$$, 1}}]}, $CellContext`rtop$ = 
            Min[$CellContext`A$$/$CellContext`w$$, 
              
              If[$CellContext`L$$ > 1 - $CellContext`w$$, 
               1 - ($CellContext`h$$/$CellContext`L$$) (1 - $CellContext`w$$),
                1 - $CellContext`h$$]]; $CellContext`rside$ = 
            Min[$CellContext`L$$ + $CellContext`w$$, 1]; $CellContext`rbot$ = 
            Min[$CellContext`A$$/$CellContext`w$$, 
              
              If[$CellContext`L$$ > 
               1 - $CellContext`w$$, ($CellContext`h$$/$CellContext`L$$) (
                1 - $CellContext`w$$), $CellContext`h$$]]; {Blue, 
             
             Polygon[{{0, 
               0}, {$CellContext`w$$, 
                0}, {$CellContext`w$$ + ($CellContext`L$$/$CellContext`h$$) \
$CellContext`rbot$, $CellContext`rbot$}, {($CellContext`L$$/$CellContext`h$$) \
$CellContext`rbot$, $CellContext`rbot$}}]}, 
           If[$CellContext`rtop$ > $CellContext`rbot$, {Blue, 
             
             Polygon[{{$CellContext`rside$, $CellContext`rbot$}, \
{$CellContext`rside$, $CellContext`rtop$}, {$CellContext`rside$ - \
$CellContext`w$$, $CellContext`rtop$}, {$CellContext`rside$ - \
$CellContext`w$$, $CellContext`rbot$}}]}], 
           If[$CellContext`A$$/$CellContext`w$$ > $CellContext`rtop$, {Blue, 
             
             Polygon[{{$CellContext`rside$, $CellContext`rtop$}, \
{$CellContext`rside$ - ($CellContext`L$$/$CellContext`h$$) \
($CellContext`A$$/$CellContext`w$$ - $CellContext`rtop$), \
$CellContext`A$$/$CellContext`w$$}, {$CellContext`rside$ - $CellContext`w$$ - \
($CellContext`L$$/$CellContext`h$$) ($CellContext`A$$/$CellContext`w$$ - \
$CellContext`rtop$), $CellContext`A$$/$CellContext`w$$}, {$CellContext`rside$ - \
$CellContext`w$$, $CellContext`rtop$}}]}], {
            EdgeForm[{Red}], 
            FaceForm[], 
            
            Rectangle[{0, 
             0}, {$CellContext`w$$, $CellContext`A$$/$CellContext`w$$}]}, {
           Dashed, Gray, 
            Line[{{0, $CellContext`h$$}, {1, $CellContext`h$$}}], 
            Line[{{0, 1 - $CellContext`h$$}, {1, 1 - $CellContext`h$$}}]}, {
           Purple, 
            PointSize[Large], 
            
            Point[{($CellContext`w$$ + ($CellContext`L$$/$CellContext`h$$) \
$CellContext`rbot$)/2, $CellContext`rbot$/2}]}, {Purple, 
            PointSize[Large], 
            
            Point[{$CellContext`rside$ - $CellContext`w$$/
              2, ($CellContext`rbot$ + $CellContext`rtop$)/2}]}, {Purple, 
            PointSize[Large], 
            
            Point[{($CellContext`rside$ - ($CellContext`L$$/$CellContext`h$$) \
($CellContext`A$$/$CellContext`w$$ - $CellContext`rtop$) - $CellContext`w$$ + \
$CellContext`rside$)/
              2, ($CellContext`A$$/$CellContext`w$$ + $CellContext`rtop$)/
              2}]}, {Red, 
            PointSize[Large], 
            
            Point[{($CellContext`L$$ $CellContext`rbot$ + $CellContext`h$$ \
$CellContext`w$$)/(2 $CellContext`h$$), $CellContext`A$$/(
              2 $CellContext`w$$)}]}, {Green, 
            PointSize[Medium], 
            
            Point[{$CellContext`rside$ - $CellContext`w$$/
              2, $CellContext`A$$/(2 $CellContext`w$$)}]}, {Yellow, 
            PointSize[Medium], 
            
            Point[{(1/2) (
               2 $CellContext`rside$ + $CellContext`L$$ (($CellContext`rtop$ - \
$CellContext`A$$/$CellContext`w$$)/$CellContext`h$$) - $CellContext`w$$), \
$CellContext`A$$/(2 $CellContext`w$$)}]}, 
           Text[
            StringForm["Corr=``", 
             If[$CellContext`A$$/$CellContext`w$$ > $CellContext`rtop$, 
              $CellContext`cor3[$CellContext`A$$, $CellContext`L$$, \
$CellContext`h$$, $CellContext`w$$, $CellContext`rbot$, $CellContext`rside$, \
$CellContext`rtop$], 
              If[$CellContext`rtop$ > $CellContext`rbot$, 
               $CellContext`cor2[$CellContext`A$$, $CellContext`L$$, \
$CellContext`h$$, $CellContext`w$$, $CellContext`rbot$, $CellContext`rside$, \
$CellContext`rtop$], 
               $CellContext`cor1[$CellContext`A$$, $CellContext`L$$, \
$CellContext`h$$, $CellContext`w$$, $CellContext`rbot$, $CellContext`rside$, \
$CellContext`rtop$]]]], {1/2, 1/2}]}]], 
      "Specifications" :> {{{$CellContext`A$$, 
          Rational[1, 4]}, 0.001, 1}, {$CellContext`w$$, 0.001, 
         1}, {{$CellContext`h$$, 
          Rational[1, 8]}, 0.0001, 
         Rational[1, 2]}, {$CellContext`L$$, 0, 2}}, "Options" :> {}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{606., {392., 401.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.68892034216525*^9, 3.6889203504029408`*^9}, 
   3.6889204815968*^9, 3.6889205196293573`*^9, 3.6889206376597023`*^9, {
   3.6889207044415493`*^9, 3.688920727409342*^9}, 3.688921333572872*^9, 
   3.688921378517809*^9, 3.6889953085204687`*^9, 3.6889953659773073`*^9, 
   3.688996263925*^9, {3.688996342529883*^9, 3.688996355262273*^9}, 
   3.6889964366799307`*^9}]
}, Open  ]]
}, Open  ]],

Cell["\<\
TODO : powerpoint of moves in square: odd move to wall, even moves minimize \
delta errors, last move to goal pose.\
\>", "Subchapter",
 CellChangeTimes->{{3.6888084893808517`*^9, 3.6888085772550983`*^9}}]
},
WindowSize->{1251, 716},
WindowMargins->{{4, Automatic}, {Automatic, 0}},
Magnification->1.5,
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September 9, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 229, 4, 95, "Section"],
Cell[CellGroupData[{
Cell[676, 23, 14216, 338, 1167, "Input"],
Cell[14895, 363, 6059, 120, 834, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[21003, 489, 766, 15, 252, "Section"],
Cell[21772, 506, 31508, 813, 2706, "Input"],
Cell[CellGroupData[{
Cell[53305, 1323, 742, 20, 69, "Input"],
Cell[54050, 1345, 14196, 291, 379, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68283, 1641, 831, 15, 88, "Subsection"],
Cell[CellGroupData[{
Cell[69139, 1660, 6912, 197, 861, "Input"],
Cell[76054, 1859, 449, 16, 65, "Output"],
Cell[76506, 1877, 113, 3, 65, "Output"],
Cell[76622, 1882, 1064, 36, 74, "Output"],
Cell[77689, 1920, 163, 5, 71, "Output"],
Cell[77855, 1927, 909, 32, 75, "Output"],
Cell[78767, 1961, 762, 25, 110, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[79578, 1992, 977, 17, 124, "Subsection"],
Cell[CellGroupData[{
Cell[80580, 2013, 4226, 121, 535, "Input"],
Cell[84809, 2136, 219, 6, 65, "Output"],
Cell[85031, 2144, 185, 5, 69, "Output"],
Cell[85219, 2151, 668, 22, 74, "Output"],
Cell[85890, 2175, 358, 12, 70, "Output"],
Cell[86251, 2189, 561, 19, 70, "Output"],
Cell[86815, 2210, 1389, 45, 113, "Output"]
}, Open  ]],
Cell[88219, 2258, 2784, 80, 231, "Input"],
Cell[CellGroupData[{
Cell[91028, 2342, 1438, 34, 119, "Input"],
Cell[92469, 2378, 203658, 3353, 413, 108962, 1799, "CachedBoxData", \
"BoxData", "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[296164, 5736, 1397, 36, 169, "Input"],
Cell[297564, 5774, 3152, 66, 413, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[300753, 5845, 1878, 52, 144, "Input"],
Cell[302634, 5899, 59061, 1101, 365, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[361732, 7005, 2004, 54, 144, "Input"],
Cell[363739, 7061, 58866, 1099, 365, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[422642, 8165, 558, 16, 93, "Input"],
Cell[423203, 8183, 165, 5, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[423405, 8193, 97, 1, 43, "Input"],
Cell[423505, 8196, 139, 3, 65, "Output"]
}, Open  ]],
Cell[423659, 8202, 196, 6, 43, "Input"],
Cell[CellGroupData[{
Cell[423880, 8212, 3468, 102, 348, "Input"],
Cell[427351, 8316, 287, 7, 65, "Output"],
Cell[427641, 8325, 217, 4, 61, "Output"],
Cell[427861, 8331, 435, 12, 84, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[428333, 8348, 9833, 270, 1182, "Input"],
Cell[438169, 8620, 1728, 52, 114, "Output"],
Cell[439900, 8674, 2625, 77, 114, "Output"],
Cell[442528, 8753, 4609, 124, 249, "Output"]
}, Open  ]],
Cell[447152, 8880, 9744, 263, 754, "Input"],
Cell[CellGroupData[{
Cell[456921, 9147, 452, 9, 94, "Input"],
Cell[457376, 9158, 515, 15, 66, "Output"],
Cell[457894, 9175, 812, 23, 72, "Output"],
Cell[458709, 9200, 1117, 33, 72, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[459887, 9240, 278, 3, 91, "Subchapter"],
Cell[CellGroupData[{
Cell[460190, 9247, 17865, 429, 1549, "Input"],
Cell[478058, 9678, 7787, 154, 817, "Output"]
}, Open  ]]
}, Open  ]],
Cell[485872, 9836, 215, 4, 142, "Subchapter"]
}
]
*)

