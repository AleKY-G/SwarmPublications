(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    312441,       6628]
NotebookOptionsPosition[    307171,       6467]
NotebookOutlinePosition[    308796,       6518]
CellTagsIndexPosition[    308460,       6506]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Moving Two Particles with Shared Control Inputs Using Wall Friction\
\>", "DemoTitle",
 CellChangeTimes->{{3.6562430492504168`*^9, 3.656243101128138*^9}, {
  3.6563683104997177`*^9, 3.656368311683695*^9}, {3.656701397368229*^9, 
  3.656701428978952*^9}}],

Cell[CellGroupData[{

Cell["", "InitializationSection"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"contractMv1", "[", 
    RowBox[{"ps1_", ",", "ps2_", ",", "pe1_", ",", "pe2_", ",", "BestDir_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\[CapitalDelta]r", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Which", "[", 
       RowBox[{
        RowBox[{"BestDir", "==", "\"\<u\>\""}], ",", 
        RowBox[{"(*", 
         RowBox[{"A", ":", " ", 
          RowBox[{"move", " ", "r1", " ", 
           RowBox[{"(", 
            RowBox[{"left", " ", "top"}], ")"}], " ", "robot", " ", "to", " ",
            "top"}]}], "*)"}], " ", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[CapitalDelta]r", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             FractionBox[
              RowBox[{"1", "-", 
               RowBox[{
               "ps1", "\[LeftDoubleBracket]", "2", 
                "\[RightDoubleBracket]"}]}], 
              RowBox[{"2", "-", 
               RowBox[{
               "ps1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
               "-", 
               RowBox[{
               "pe1", "\[LeftDoubleBracket]", "2", 
                "\[RightDoubleBracket]"}]}]], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
               "pe2", " ", "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}], "-", 
               RowBox[{
               "ps2", " ", "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}]}], ")"}]}], ",", 
            RowBox[{"1", "-", 
             RowBox[{
             "ps1", "\[LeftDoubleBracket]", "2", 
              "\[RightDoubleBracket]"}]}]}], "}"}]}], ";"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"BestDir", "==", "\"\<d\>\""}], ",", 
        RowBox[{"(*", 
         RowBox[{"A", ":", " ", 
          RowBox[{"move", " ", "r2", " ", 
           RowBox[{"(", 
            RowBox[{"right", " ", "bottom"}], ")"}], " ", "robot", " ", "to", 
           " ", "bottom"}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[CapitalDelta]r", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             FractionBox[
              RowBox[{
              "ps2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
              RowBox[{
               RowBox[{
               "ps2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
               "+", 
               RowBox[{
               "pe2", "\[LeftDoubleBracket]", "2", 
                "\[RightDoubleBracket]"}]}]], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
               "pe2", " ", "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}], "-", 
               RowBox[{
               "ps2", " ", "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}]}], ")"}]}], ",", 
            RowBox[{"-", 
             RowBox[{
             "ps2", "\[LeftDoubleBracket]", "2", 
              "\[RightDoubleBracket]"}]}]}], "}"}]}], ";"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"BestDir", "==", "\"\<l\>\""}], ",", 
        RowBox[{"(*", 
         RowBox[{"A", ":", " ", 
          RowBox[{"move", " ", "r1", " ", 
           RowBox[{"(", 
            RowBox[{"left", " ", "top"}], ")"}], " ", "robot", " ", "to", " ",
            "left"}]}], "*)"}], " ", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[CapitalDelta]r", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{
             "ps1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
            ",", 
            RowBox[{
             FractionBox[
              RowBox[{
              "ps1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              RowBox[{
               RowBox[{
               "ps1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               "+", 
               RowBox[{
               "pe1", "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}]}]], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
               "pe2", " ", "\[LeftDoubleBracket]", "2", 
                "\[RightDoubleBracket]"}], "-", 
               RowBox[{
               "ps2", " ", "\[LeftDoubleBracket]", "2", 
                "\[RightDoubleBracket]"}]}], ")"}]}]}], "}"}]}], ";"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"BestDir", "==", "\"\<r\>\""}], ",", 
        RowBox[{"(*", 
         RowBox[{"A", ":", " ", 
          RowBox[{"move", " ", "r2", " ", 
           RowBox[{"(", 
            RowBox[{"right", " ", "bottom"}], ")"}], " ", "robot", " ", "to", 
           " ", "right"}]}], "*)"}], " ", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[CapitalDelta]r", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "-", 
             RowBox[{
             "ps2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
            ",", 
            RowBox[{
             FractionBox[
              RowBox[{"1", "-", 
               RowBox[{
               "ps2", "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}]}], 
              RowBox[{"2", "-", 
               RowBox[{
               "ps2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               "-", 
               RowBox[{
               "pe2", "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}]}]], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
               "pe2", " ", "\[LeftDoubleBracket]", "2", 
                "\[RightDoubleBracket]"}], "-", 
               RowBox[{
               "ps2", " ", "\[LeftDoubleBracket]", "2", 
                "\[RightDoubleBracket]"}]}], ")"}]}]}], "}"}]}], ";"}]}], " ",
        "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "\[CapitalDelta]r", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"effectContractMv1", "[", 
    RowBox[{"ps1_", ",", "ps2_", ",", "pe1_", ",", "pe2_", ",", "BestDir_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[CapitalDelta]r", ",", "r1", ",", "r2"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[CapitalDelta]r", "=", 
       RowBox[{"contractMv1", "[", 
        RowBox[{"ps1", ",", "ps2", ",", "pe1", ",", "pe2", ",", "BestDir"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"r1", " ", "=", " ", 
       RowBox[{"ps1", "+", "\[CapitalDelta]r"}]}], ";", 
      RowBox[{"r2", " ", "=", " ", 
       RowBox[{"ps2", "+", "\[CapitalDelta]r"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "check", " ", "to", " ", "see", " ", "if", " ", "move", " ", "leaves",
          " ", "the", " ", 
         RowBox[{"workspace", ".", "  ", "If"}], " ", "so"}], ",", " ", 
        RowBox[{
        "give", " ", "this", " ", "move", " ", "a", " ", "cost", " ", "of", 
         " ", "\[Infinity]"}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{
           "r1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "<", 
           "0"}], " ", "||", 
          RowBox[{
           RowBox[{
           "r1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ">", 
           "1"}], "||", " ", 
          RowBox[{
           RowBox[{
           "r1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "<", 
           "0"}], " ", "||", 
          RowBox[{
           RowBox[{
           "r1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ">", 
           "1"}], " ", "||", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
           "r2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "<", 
           "0"}], " ", "||", 
          RowBox[{
           RowBox[{
           "r2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ">", 
           "1"}], "||", " ", 
          RowBox[{
           RowBox[{
           "r2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "<", 
           "0"}], " ", "||", 
          RowBox[{
           RowBox[{
           "r2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ">", 
           "1"}]}], " ", ")"}], ",", "\[Infinity]", ",", "0"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"achieveDesiredSpacing", "[", 
   RowBox[{
   "ps1_", ",", "ps2_", ",", "pe1_", ",", "pe2_", ",", " ", "\[Epsilon]_"}], 
   "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "this", " ", "code", " ", "moves", " ", "two", " ", "particles", " ", "to",
     " ", "desired", " ", 
    RowBox[{"positions", ".", "  ", "ps1"}], " ", "is", " ", "leftmost", " ", 
    "and", " ", "at", " ", "least", " ", "as", " ", "high", " ", "as", " ", 
    "ps2"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[CapitalDelta]ey", " ", "=", " ", 
       RowBox[{
        RowBox[{"pe2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
         "-", 
        RowBox[{
        "pe1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
      RowBox[{"(*", 
       RowBox[{"desired", " ", "y", " ", "difference"}], "*)"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\[CapitalDelta]ex", " ", "=", " ", 
       RowBox[{
        RowBox[{"pe2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
         "-", 
        RowBox[{
        "pe1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], 
      " ", 
      RowBox[{"(*", 
       RowBox[{"desired", " ", "x", " ", "difference"}], "*)"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"L", "=", " ", "1"}], " ", 
      RowBox[{"(*", 
       RowBox[{"size", " ", "of", " ", "workspace"}], "*)"}], ",", 
      "\[IndentingNewLine]", "\[CapitalDelta]r", 
      RowBox[{"(*", 
       RowBox[{"current", " ", "x", " ", "and", " ", "y", " ", "difference"}],
        "*)"}], ",", "\[IndentingNewLine]", "r1", 
      RowBox[{"(*", 
       RowBox[{"leftmost", " ", "robot"}], "*)"}], ",", " ", 
      "\[IndentingNewLine]", "r2", 
      RowBox[{"(*", 
       RowBox[{"rightmost", " ", "robot"}], "*)"}], ",", " ", 
      "\[IndentingNewLine]", "moves", 
      RowBox[{"(*", 
       RowBox[{
       "desired", " ", "path", " ", "that", " ", "the", " ", "algorithm", " ",
         "makes"}], "*)"}], ",", "\[IndentingNewLine]", "pm1", 
      RowBox[{"(*", 
       RowBox[{"desired", " ", "moves", " ", "for", " ", "r1"}], "*)"}], ",", 
      "\[IndentingNewLine]", "pm2"}], 
     RowBox[{"(*", 
      RowBox[{"desired", " ", "moves", " ", "for", " ", "r2"}], "*)"}], 
     "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"r2", " ", "=", " ", "ps2"}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{"r1", " ", "=", " ", "ps1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"moves", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], "}"}]}], ";", "  ", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"list", " ", "of", " ", "commanded", " ", "moves"}], ",", " ", 
       RowBox[{"in", " ", "form", " ", 
        RowBox[{"{", 
         RowBox[{"\[CapitalDelta]x", ",", " ", "\[CapitalDelta]y"}], 
         "}"}]}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"pm1", " ", "=", " ", 
      RowBox[{"{", "r1", "}"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{
      "list", " ", "of", " ", "positions", " ", "of", " ", "robot", " ", 
       "1"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"pm2", " ", "=", " ", 
      RowBox[{"{", "r2", "}"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{
      "list", " ", "of", " ", "positions", " ", "of", " ", "robot", " ", 
       "2"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "can", " ", "it", " ", "be", " ", "solved", " ", "in", " ", "1", " ", 
       RowBox[{"move", "?"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"pe1", "-", "ps1"}], "\[Equal]", " ", 
        RowBox[{"pe2", "-", "ps2"}]}], ",", " ", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[CapitalDelta]r", "=", 
         RowBox[{"pe1", "-", "ps1"}]}], ";", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"moves", ",", " ", "\[CapitalDelta]r"}], "]"}], ";", 
        RowBox[{"r1", " ", "+=", " ", "\[CapitalDelta]r"}], ";", 
        RowBox[{"r2", " ", "+=", " ", "\[CapitalDelta]r"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"pm1", ",", "r1"}], "]"}], ";", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"pm2", ",", "r2"}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{"{", 
          RowBox[{"moves", ",", "pm1", ",", "pm2"}], "}"}], "]"}]}]}], "]"}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Optimal", " ", "solution"}], ",", " ", 
       RowBox[{
       "only", " ", "works", " ", "for", " ", "contractions", " ", "that", 
        " ", "are", " ", "still", " ", 
        RowBox[{"positive", ".", "  ", "Must"}], " ", "ensure", " ", "move", 
        " ", "stays", " ", "in", " ", "boundary"}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"\[CapitalDelta]ex", ">", "0"}], " ", "&&", " ", 
        RowBox[{"\[CapitalDelta]ey", "<", "0"}], " ", "&&", "  ", 
        RowBox[{
         RowBox[{"\[CapitalDelta]ex", "-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
            "ps2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            "-", 
            RowBox[{
            "ps1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
           ")"}]}], "<", "0"}], " ", "&&", " ", 
        RowBox[{
         RowBox[{"\[CapitalDelta]ey", "-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
            "ps2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
            "-", 
            RowBox[{
            "ps1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
           ")"}]}], ">", "0"}]}], ",", " ", 
       RowBox[{"(*", 
        RowBox[{"Is", " ", "a", " ", "contraction"}], "*)"}], " ", 
       "\[IndentingNewLine]", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", "BestDir", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"BestDir", " ", "=", 
           RowBox[{
            RowBox[{"Sort", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"\"\<u\>\"", ",", 
                  RowBox[{
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "pe1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    "ps1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ")"}], "2"], "+", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "L"}], "-", 
                    RowBox[{
                    "pe1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    "ps1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], ")"}], "2"], " ", "+", 
                   RowBox[{"effectContractMv1", "[", 
                    RowBox[{
                    "ps1", ",", "ps2", ",", "pe1", ",", "pe2", ",", 
                    "\"\<u\>\""}], "]"}]}]}], "\[IndentingNewLine]", 
                 RowBox[{"(*", "up", "*)"}], "}"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{"\"\<d\>\"", ",", 
                  RowBox[{
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "pe2", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    "ps2", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ")"}], "2"], "+", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "pe2", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "+", 
                    RowBox[{
                    "ps2", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], ")"}], "2"], " ", 
                   RowBox[{"(*", "down", "*)"}], "+", 
                   RowBox[{"effectContractMv1", "[", 
                    RowBox[{
                    "ps1", ",", "ps2", ",", "pe1", ",", "pe2", ",", 
                    "\"\<d\>\""}], "]"}]}]}], "}"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{"\"\<l\>\"", ",", 
                  RowBox[{
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "pe1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", 
                    RowBox[{
                    "ps1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ")"}], "2"], "+", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "pe1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    "ps1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], ")"}], "2"], " ", 
                   RowBox[{"(*", "left", "*)"}], "+", 
                   RowBox[{"effectContractMv1", "[", 
                    RowBox[{
                    "ps1", ",", "ps2", ",", "pe1", ",", "pe2", ",", 
                    "\"\<l\>\""}], "]"}]}]}], "}"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{"\"\<r\>\"", ",", 
                  RowBox[{
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", "L"}], "-", 
                    RowBox[{
                    "pe2", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    "ps2", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ")"}], "2"], "+", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "pe2", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    "ps2", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], ")"}], "2"], " ", 
                   RowBox[{"(*", "right", "*)"}], "+", 
                   RowBox[{"effectContractMv1", "[", 
                    RowBox[{
                    "ps1", ",", "ps2", ",", "pe1", ",", "pe2", ",", 
                    "\"\<r\>\""}], "]"}]}]}], "}"}]}], "}"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{
                "#1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                "<", 
                RowBox[{
                "#2", "\[LeftDoubleBracket]", "2", 
                 "\[RightDoubleBracket]"}]}], "&"}]}], "]"}], 
            "\[LeftDoubleBracket]", 
            RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"\[CapitalDelta]r", "=", 
           RowBox[{"contractMv1", "[", 
            RowBox[{
            "ps1", ",", "ps2", ",", "pe1", ",", "pe2", ",", "BestDir"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"moves", ",", " ", "\[CapitalDelta]r"}], "]"}], ";", 
          RowBox[{"r1", " ", "+=", " ", "\[CapitalDelta]r"}], ";", 
          RowBox[{"r2", " ", "+=", " ", "\[CapitalDelta]r"}], ";", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"pm1", ",", " ", "r1"}], "]"}], ";", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"pm2", ",", "r2"}], "]"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"Which", "[", 
           RowBox[{
            RowBox[{"BestDir", "==", "\"\<u\>\""}], ",", 
            RowBox[{"(*", 
             RowBox[{"A", ":", " ", 
              RowBox[{"move", " ", "r1", " ", 
               RowBox[{"(", 
                RowBox[{"left", " ", "top"}], ")"}], " ", "robot", " ", "to", 
               " ", "top"}]}], "*)"}], " ", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"B", ":", " ", 
              RowBox[{
              "move", " ", "r2", " ", "to", " ", "get", " ", "correct", " ", 
               "spacing"}]}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"\[CapitalDelta]r", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[CapitalDelta]ex", "-", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                   "r2", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "-", 
                   RowBox[{
                   "r1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ")"}]}], ",", 
                RowBox[{"\[CapitalDelta]ey", "-", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                   "r2", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "-", 
                   RowBox[{
                   "r1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], ")"}]}]}], " ", "}"}]}], ";", 
             RowBox[{"r2", " ", "+=", " ", "\[CapitalDelta]r"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"BestDir", "==", "\"\<d\>\""}], ",", 
            RowBox[{"(*", 
             RowBox[{"A", ":", " ", 
              RowBox[{"move", " ", "r2", " ", 
               RowBox[{"(", 
                RowBox[{"right", " ", "bottom"}], ")"}], " ", "robot", " ", 
               "to", " ", "bottom"}]}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"B", ":", " ", 
              RowBox[{
              "move", " ", "r1", " ", "to", " ", "get", " ", "correct", " ", 
               "spacing"}]}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"\[CapitalDelta]r", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                  "r2", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], "-", 
                  RowBox[{
                  "r1", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], "-", "\[CapitalDelta]ex"}], 
                 ")"}], ",", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                   "r2", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "-", 
                   RowBox[{
                   "r1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], ")"}], "-", 
                 "\[CapitalDelta]ey"}]}], " ", "}"}]}], ";", 
             RowBox[{"r1", " ", "+=", " ", "\[CapitalDelta]r"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"BestDir", "==", "\"\<l\>\""}], ",", 
            RowBox[{"(*", 
             RowBox[{"A", ":", " ", 
              RowBox[{"move", " ", "r1", " ", 
               RowBox[{"(", 
                RowBox[{"left", " ", "top"}], ")"}], " ", "robot", " ", "to", 
               " ", "left"}]}], "*)"}], " ", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"B", ":", " ", 
              RowBox[{
              "move", " ", "r2", " ", "to", " ", "get", " ", "correct", " ", 
               "spacing"}]}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"\[CapitalDelta]r", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[CapitalDelta]ex", "-", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                   "r2", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "-", 
                   RowBox[{
                   "r1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ")"}]}], ",", 
                RowBox[{"\[CapitalDelta]ey", "-", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                   "r2", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "-", 
                   RowBox[{
                   "r1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], ")"}]}]}], " ", "}"}]}], ";", 
             RowBox[{"r2", " ", "+=", " ", "\[CapitalDelta]r"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"BestDir", "==", "\"\<r\>\""}], ",", 
            RowBox[{"(*", 
             RowBox[{"A", ":", " ", 
              RowBox[{"move", " ", "r2", " ", 
               RowBox[{"(", 
                RowBox[{"right", " ", "bottom"}], ")"}], " ", "robot", " ", 
               "to", " ", "right"}]}], "*)"}], " ", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"B", ":", " ", 
              RowBox[{
              "move", " ", "r1", " ", "to", " ", "get", " ", "correct", " ", 
               "spacing"}]}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"\[CapitalDelta]r", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{
                  "r2", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], "-", 
                  RowBox[{
                  "r1", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], "-", "\[CapitalDelta]ex"}], 
                 ")"}], ",", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                   "r2", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "-", 
                   RowBox[{
                   "r1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], ")"}], "-", 
                 "\[CapitalDelta]ey"}]}], " ", "}"}]}], ";", 
             RowBox[{"r1", " ", "+=", " ", "\[CapitalDelta]r"}], ";"}]}], 
           "\[IndentingNewLine]", " ", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"moves", ",", " ", "\[CapitalDelta]r"}], "]"}], ";", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"pm1", ",", " ", "r1"}], "]"}], ";", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"pm2", ",", "r2"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"C", ":", " ", 
            RowBox[{"move", " ", "to", " ", "goal", " ", "position"}]}], 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"\[CapitalDelta]r", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{
              "pe2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              "-", 
              RowBox[{
              "r2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
             ",", " ", 
             RowBox[{
              RowBox[{
              "pe2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
              "-", " ", 
              RowBox[{
              "r2", "\[LeftDoubleBracket]", "2", 
               "\[RightDoubleBracket]"}]}]}], "}"}]}], ";", 
          RowBox[{"r1", " ", "+=", " ", "\[CapitalDelta]r"}], ";", 
          RowBox[{"r2", " ", "+=", " ", "\[CapitalDelta]r"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"moves", ",", " ", "\[CapitalDelta]r"}], "]"}], ";", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"pm1", ",", "r1"}], "]"}], ";", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"pm2", ",", "r2"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Return", "[", 
           RowBox[{"{", 
            RowBox[{"moves", ",", "pm1", ",", "pm2"}], "}"}], "]"}]}]}], 
        "\[IndentingNewLine]", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"END", " ", "OPTIMAL"}], ",", " ", 
       RowBox[{
       "otherwise", " ", "do", " ", "normal", " ", "process", " ", 
        "below"}]}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Move", " ", "1"}], ":", " ", 
       RowBox[{"Touch", " ", "left", " ", "wall"}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]r", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{
         "r1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ",", 
        " ", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Min", "[", 
           RowBox[{
            RowBox[{
            "r2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], " ",
             ",", " ", 
            RowBox[{
             RowBox[{
             "r1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
             " ", "+", " ", "\[CapitalDelta]ey"}]}], "]"}]}], "+", " ", 
         "\[Epsilon]"}]}], "}"}]}], ";", 
     RowBox[{"r1", " ", "+=", " ", "\[CapitalDelta]r"}], ";", 
     RowBox[{"r2", " ", "+=", " ", "\[CapitalDelta]r"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"moves", ",", " ", "\[CapitalDelta]r"}], "]"}], ";", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"pm1", ",", " ", "r1"}], "]"}], ";", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"pm2", ",", "r2"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Move", " ", "2"}], ":", " ", 
       RowBox[{"Adjust", " ", "x", " ", "and", " ", "y"}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]r", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", " ", 
         RowBox[{
         "r2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{"Sign", "[", "\[CapitalDelta]ey", "]"}], "]"}], 
          RowBox[{"Min", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
             "r1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
             " ", "-", 
             RowBox[{
             "r2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
             "+", " ", "\[CapitalDelta]ey", " ", "-", "\[Epsilon]"}], ",", 
            " ", 
            RowBox[{"L", " ", "-", 
             RowBox[{
             "r2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
             "-", "\[Epsilon]"}]}], "]"}]}], "+", "\[Epsilon]"}]}], "}"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"r1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        " ", ">", "0"}], ",", 
       RowBox[{"r1", " ", "+=", " ", "\[CapitalDelta]r"}]}], "]"}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"r2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        " ", ">", "0"}], ",", 
       RowBox[{"r2", " ", "+=", " ", "\[CapitalDelta]r"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"moves", ",", " ", "\[CapitalDelta]r"}], "]"}], ";", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"pm1", ",", " ", "r1"}], "]"}], ";", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"pm2", ",", "r2"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Move", " ", "3"}], ":", 
       RowBox[{"Touch", " ", "bottom", " ", "wall"}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]r", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Max", "[", 
         RowBox[{"\[Epsilon]", ",", " ", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Sign", "[", 
             RowBox[{
              RowBox[{
              "r2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
              "-", 
              RowBox[{
              "r1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
             "]"}]}], "\[CapitalDelta]ex"}]}], " ", "]"}], ",", " ", 
        RowBox[{"-", 
         RowBox[{"Min", "[", 
          RowBox[{
           RowBox[{
           "r1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
           RowBox[{
           "r2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
          "]"}]}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"r1", " ", "+=", " ", "\[CapitalDelta]r"}], ";", 
     RowBox[{"r2", " ", "+=", " ", "\[CapitalDelta]r"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"moves", ",", " ", "\[CapitalDelta]r"}], "]"}], ";", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"pm1", ",", " ", "r1"}], "]"}], ";", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"pm2", ",", "r2"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Move", " ", "4"}], ":", " ", 
       RowBox[{"Adjust", " ", "x"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]r", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"\[CapitalDelta]ex", "\[NotEqual]", "0"}], ",", " ", 
          RowBox[{
           RowBox[{"Sign", "[", 
            RowBox[{
             RowBox[{
             "r2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
             "-", 
             RowBox[{
             "r1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
            "]"}], "\[CapitalDelta]ex"}], ",", 
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{"Sign", "[", 
             RowBox[{"\[CapitalDelta]ey", " ", "-", 
              RowBox[{
              "r2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
              "+", 
              RowBox[{
              "r1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
             "]"}], "]"}], "  ", "\[Epsilon]"}]}], "]"}], " ", ",", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Abs", "[", 
            RowBox[{"Sign", "[", "\[CapitalDelta]ey", "]"}], "]"}], "-", 
           "1"}], ")"}], 
         RowBox[{"(", 
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{
            "r1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], " ",
             "-", 
            RowBox[{
            "r2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
           "]"}], ")"}]}]}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"r1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
        " ", ">", "0"}], ",", 
       RowBox[{"r1", " ", "+=", " ", "\[CapitalDelta]r"}]}], "]"}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"r2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
        " ", ">", "0"}], ",", 
       RowBox[{"r2", " ", "+=", " ", "\[CapitalDelta]r"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"moves", ",", " ", "\[CapitalDelta]r"}], "]"}], ";", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"pm1", ",", " ", "r1"}], "]"}], ";", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"pm2", ",", "r2"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Moves", " ", "5", " ", "and", " ", "6", " ", "only", " ", "happen", 
       " ", "if", " ", "\[CapitalDelta]y", " ", "is", " ", "not", " ", 
       "already", " ", "adjusted"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"\[CapitalDelta]ey", " ", "\[NotEqual]", " ", 
        RowBox[{
         RowBox[{"r2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
          "-", " ", 
         RowBox[{
         "r1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Move", " ", "5"}], ":", " ", 
         RowBox[{"Touch", " ", "right", " ", "wall"}]}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[CapitalDelta]r", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"L", "-", " ", 
            RowBox[{"Max", "[", 
             RowBox[{
              RowBox[{
              "r1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              ",", 
              RowBox[{
              "r2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
             "]"}]}], ",", " ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"\[CapitalDelta]ex", " ", "<", " ", "0"}], " ", ",", " ",
              "\[Epsilon]", ",", 
             RowBox[{"\[CapitalDelta]ey", " ", "-", " ", 
              RowBox[{"Max", "[", 
               RowBox[{
                RowBox[{
                "r1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                ",", " ", 
                RowBox[{
                "r2", "\[LeftDoubleBracket]", "2", 
                 "\[RightDoubleBracket]"}]}], "]"}]}]}], 
            RowBox[{"(*", 
             RowBox[{"should", " ", "change", " ", "this"}], "*)"}], "]"}]}], 
          "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"r1", " ", "+=", " ", "\[CapitalDelta]r"}], ";", 
        RowBox[{"r2", " ", "+=", " ", "\[CapitalDelta]r"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"moves", ",", " ", "\[CapitalDelta]r"}], "]"}], ";", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"pm1", ",", " ", "r1"}], "]"}], ";", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"pm2", ",", "r2"}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Move", " ", "6"}], ":", " ", 
          RowBox[{"Adjust", " ", "y"}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"\[CapitalDelta]r", "=", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Abs", "[", 
                RowBox[{"Sign", "[", "\[CapitalDelta]ex", "]"}], "]"}], "-", 
               "1"}], ")"}]}], "\[Epsilon]"}], ",", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"\[CapitalDelta]ex", " ", "\[NotEqual]", "0"}], ",", 
              RowBox[{"-", 
               RowBox[{"Sign", "[", "\[CapitalDelta]ex", "]"}]}], ",", 
              RowBox[{"-", 
               RowBox[{"Sign", "[", 
                RowBox[{
                 RowBox[{"Max", "[", 
                  RowBox[{
                   RowBox[{
                   "r1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", " ", 
                   RowBox[{
                   "r2", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], "-", 
                 RowBox[{"Min", "[", 
                  RowBox[{
                   RowBox[{
                   "r1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", " ", 
                   RowBox[{
                   "r2", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}]}], "]"}]}]}], "]"}], 
            RowBox[{"(", " ", 
             RowBox[{"\[CapitalDelta]ey", "-", " ", 
              RowBox[{"Max", "[", 
               RowBox[{
                RowBox[{
                "r2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                ",", " ", 
                RowBox[{
                "r1", "\[LeftDoubleBracket]", "2", 
                 "\[RightDoubleBracket]"}]}], "]"}], "+", 
              RowBox[{"Min", "[", 
               RowBox[{
                RowBox[{
                "r2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                ",", " ", 
                RowBox[{
                "r1", "\[LeftDoubleBracket]", "2", 
                 "\[RightDoubleBracket]"}]}], "]"}]}], ")"}]}]}], "}"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
           "r1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], " ", 
           "<", "1"}], ",", 
          RowBox[{"r1", " ", "+=", " ", "\[CapitalDelta]r"}]}], "]"}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
           "r2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], " ", 
           "<", "1"}], ",", 
          RowBox[{"r2", " ", "+=", " ", "\[CapitalDelta]r"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"moves", ",", " ", "\[CapitalDelta]r"}], "]"}], ";", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"pm1", ",", "r1"}], "]"}], ";", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"pm2", ",", "r2"}], "]"}]}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Move", " ", "7"}], ":", " ", 
       RowBox[{"Go", " ", "to", " ", "goal", " ", "position"}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"\[CapitalDelta]r", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
         "pe2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "-", 
         RowBox[{
         "r2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ",", 
        " ", 
        RowBox[{
         RowBox[{
         "pe2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "-", 
         " ", 
         RowBox[{
         "r2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
       "}"}]}], ";", 
     RowBox[{"r1", " ", "+=", " ", "\[CapitalDelta]r"}], ";", 
     RowBox[{"r2", " ", "+=", " ", "\[CapitalDelta]r"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"moves", ",", " ", "\[CapitalDelta]r"}], "]"}], ";", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"pm1", ",", " ", "r1"}], "]"}], ";", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"pm2", ",", "r2"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"moves", ",", "pm1", ",", "pm2"}], "}"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RotateCW90", "[", "r_", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"1", "-", " ", 
     RowBox[{"r", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
    ",", " ", 
    RowBox[{"r", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RotateCW90inplace", "[", "r_", "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", " ", 
     RowBox[{"r", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
    ",", " ", 
    RowBox[{"r", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RotateCCW90", "[", "r_", "]"}], " ", ":=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"r", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
    RowBox[{"1", "-", " ", 
     RowBox[{"r", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], 
   "}"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6436330620151863`*^9, 3.643633142555245*^9}, {
   3.643634635387471*^9, 3.643634635773616*^9}, {3.64363493510086*^9, 
   3.64363493534129*^9}, {3.643635816124959*^9, 3.6436358204569397`*^9}, {
   3.6436366106330957`*^9, 3.643636617664937*^9}, {3.643636682239799*^9, 
   3.643636694974148*^9}, 3.643636729566121*^9, {3.643636902849749*^9, 
   3.6436369286741333`*^9}, {3.643637089317648*^9, 3.643637103849972*^9}, {
   3.643716442501993*^9, 3.643716447801918*^9}, {3.644132841075902*^9, 
   3.644132875554392*^9}, {3.644135900822158*^9, 3.644136104160116*^9}, {
   3.6441361375657377`*^9, 3.644136187447153*^9}, 3.6441362539073133`*^9, {
   3.644136303167753*^9, 3.644136333030587*^9}, {3.644136417928399*^9, 
   3.644136429191375*^9}, {3.644136564663416*^9, 3.644136579037611*^9}, {
   3.644151452516255*^9, 3.644151471147826*^9}, {3.6441628139359293`*^9, 
   3.644162848484384*^9}, 3.6441629225327883`*^9, {3.6441629890134354`*^9, 
   3.6441630397915125`*^9}, {3.644163419358466*^9, 3.6441634621847477`*^9}, {
   3.6441635476892977`*^9, 3.644163576769205*^9}, {3.6441636111506433`*^9, 
   3.6441636208116093`*^9}, {3.644163758897416*^9, 3.6441637667802043`*^9}, 
   3.644163879803506*^9, 3.6441639104035654`*^9, {3.6441639642099457`*^9, 
   3.6441640529068146`*^9}, {3.6441641211746407`*^9, 3.644164159420015*^9}, {
   3.644164259667015*^9, 3.644164290558015*^9}, {3.644164427862015*^9, 
   3.644164432658015*^9}, {3.644164628012015*^9, 3.6441646816260147`*^9}, 
   3.6441647491980147`*^9, {3.644164784306015*^9, 3.6441648363500147`*^9}, 
   3.651274485412733*^9, {3.651274574982983*^9, 3.651274655776332*^9}, {
   3.651284247507251*^9, 3.651284259218851*^9}, {3.6512847944971123`*^9, 
   3.651284803458172*^9}, {3.651285508330059*^9, 3.65128551725109*^9}, {
   3.6512855608707323`*^9, 3.651285561838027*^9}, {3.651286145755126*^9, 
   3.651286168546471*^9}, 3.651286259798789*^9, {3.651286320784491*^9, 
   3.651286380383204*^9}, 3.6512864243865433`*^9, {3.6512864684121037`*^9, 
   3.65128660567682*^9}, 3.651286672467688*^9, {3.651286707337291*^9, 
   3.651286764017911*^9}, {3.65128682470173*^9, 3.651286872637767*^9}, {
   3.651286950177266*^9, 3.651286953433001*^9}, {3.651287153094515*^9, 
   3.651287157533863*^9}, {3.6512872816294603`*^9, 3.6512872823896933`*^9}, {
   3.6512873423936996`*^9, 3.651287346047942*^9}, 3.651287383929191*^9, {
   3.651287499602868*^9, 3.651287538281274*^9}, {3.651287583875154*^9, 
   3.651287620789282*^9}, {3.65128765538048*^9, 3.6512877005978403`*^9}, {
   3.651287766666272*^9, 3.6512877730010347`*^9}, {3.651287825618966*^9, 
   3.6512878586684732`*^9}, {3.651287927624159*^9, 3.651287939945753*^9}, {
   3.651288095389711*^9, 3.651288104725903*^9}, {3.651288174257298*^9, 
   3.6512882189211063`*^9}, {3.651288250777906*^9, 3.651288295741341*^9}, {
   3.651288351905418*^9, 3.651288353052971*^9}, {3.65128839452958*^9, 
   3.651288711762635*^9}, {3.651288771700984*^9, 3.651288773140184*^9}, {
   3.651288892390339*^9, 3.651288900786592*^9}, {3.65128932260843*^9, 
   3.6512893250783443`*^9}, 3.651289443688414*^9, {3.6512894972878733`*^9, 
   3.651289520243495*^9}, {3.651289869200612*^9, 3.6512900377728863`*^9}, {
   3.6512902100212*^9, 3.651290303355315*^9}, {3.651290486908821*^9, 
   3.65129050484557*^9}, {3.690030324508499*^9, 3.690030369921287*^9}, {
   3.690031765553954*^9, 3.690031767645833*^9}, {3.690031952595216*^9, 
   3.690032007669314*^9}, 3.690038385134664*^9, {3.690042942217854*^9, 
   3.69004305495424*^9}, {3.6900431324059258`*^9, 3.6900432030410624`*^9}, {
   3.690043262581071*^9, 3.690043537335676*^9}, 3.6900443293258133`*^9, {
   3.6901062290763197`*^9, 3.69010638825439*^9}, {3.6901064327155046`*^9, 
   3.690106560739703*^9}, {3.690106595668206*^9, 3.690106829983642*^9}, {
   3.690106875422556*^9, 3.690107103356131*^9}, {3.690107148998829*^9, 
   3.690107397281034*^9}, 3.6901074652842093`*^9, 3.690107534560816*^9, {
   3.690107621194695*^9, 3.690107622398881*^9}, 3.690107662901065*^9, {
   3.6901077303595943`*^9, 3.6901077317481813`*^9}, {3.690118807228149*^9, 
   3.6901188258835487`*^9}, 3.690128033568543*^9, 3.690128394437108*^9, {
   3.6901284723682747`*^9, 3.690128474527175*^9}, {3.690128576631948*^9, 
   3.690128584686462*^9}, 3.6901286708985043`*^9, {3.690128869892449*^9, 
   3.690128958272582*^9}, {3.690128994213073*^9, 3.690129005442054*^9}, {
   3.690129302185997*^9, 3.690129309596966*^9}, {3.6901298874295483`*^9, 
   3.6901298942773113`*^9}, {3.6901299329956017`*^9, 3.69012995554631*^9}, {
   3.690130007304871*^9, 3.690130018264534*^9}, {3.690132172663372*^9, 
   3.6901321878625383`*^9}, 3.690132271012642*^9, {3.690132423695472*^9, 
   3.690132432340168*^9}, {3.6901325333954144`*^9, 3.6901325493480043`*^9}, 
   3.690132860395362*^9, {3.69013290802488*^9, 3.6901329306965714`*^9}, {
   3.690133213670134*^9, 3.690133276631823*^9}, {3.690133340460074*^9, 
   3.690133363813302*^9}, {3.6901351010590353`*^9, 3.690135121517494*^9}, {
   3.6901352487169113`*^9, 3.690135252722941*^9}, {3.690135353061441*^9, 
   3.6901353614992247`*^9}, {3.690135900202751*^9, 3.6901359006434383`*^9}, {
   3.6901360834615583`*^9, 3.690136161736471*^9}, {3.690136248162682*^9, 
   3.690136252475765*^9}, {3.690136360569021*^9, 3.6901364718022747`*^9}, {
   3.690136534389657*^9, 3.6901365606812973`*^9}, {3.6901366260683193`*^9, 
   3.6901366268742943`*^9}, {3.690136697083164*^9, 3.690136778162305*^9}, {
   3.6901369040657988`*^9, 3.690137014722842*^9}, {3.690137125410261*^9, 
   3.690137152138892*^9}, {3.6901372161188087`*^9, 3.6901372688110323`*^9}, {
   3.690137310266241*^9, 3.690137337945393*^9}, {3.690137369035449*^9, 
   3.690137369275118*^9}, {3.690137459091556*^9, 3.690137480183227*^9}, {
   3.690137571843185*^9, 3.6901377169493103`*^9}, {3.690137760014929*^9, 
   3.6901378197845497`*^9}, {3.690137935450972*^9, 3.690137974846341*^9}, {
   3.690138077195315*^9, 3.6901380857958193`*^9}, {3.690138131820079*^9, 
   3.6901381853358393`*^9}, {3.690138217545109*^9, 3.690138278883835*^9}, {
   3.690138467943283*^9, 3.6901385541562843`*^9}, {3.6901388735812693`*^9, 
   3.690138894798167*^9}, {3.690138943495007*^9, 3.690138996553049*^9}, {
   3.690139092839849*^9, 3.690139098032301*^9}, {3.6901391291814127`*^9, 
   3.690139168950663*^9}, {3.690139913934394*^9, 3.690139923291296*^9}, {
   3.690140049372795*^9, 3.690140068146935*^9}, {3.690140125655877*^9, 
   3.690140163609909*^9}, {3.690140456066504*^9, 3.690140498592042*^9}, {
   3.690140970514653*^9, 3.690140986853001*^9}, {3.690141097631543*^9, 
   3.6901411000942793`*^9}, {3.690141426119788*^9, 3.690141435765792*^9}, {
   3.690141523481982*^9, 3.6901415420606728`*^9}, {3.690142098366166*^9, 
   3.690142139586381*^9}, {3.6901422847530003`*^9, 3.690142294480338*^9}, {
   3.6901423471175957`*^9, 3.6901423920320253`*^9}, {3.6901424441450377`*^9, 
   3.6901424457630453`*^9}, 3.69014255054635*^9, {3.690142693274708*^9, 
   3.690142706102029*^9}, {3.690142773904231*^9, 3.690142775297443*^9}, {
   3.690143125173915*^9, 3.690143132366529*^9}, {3.690143301280411*^9, 
   3.6901433033610764`*^9}, {3.690143376612554*^9, 3.6901433811893253`*^9}, {
   3.690143617295669*^9, 3.690143628485094*^9}, 3.6901436686882143`*^9, {
   3.690143721337126*^9, 3.690143727070857*^9}, {3.690143768886232*^9, 
   3.6901438034705973`*^9}, {3.690155802957637*^9, 3.6901558053968*^9}, {
   3.690155837464117*^9, 3.690155852317816*^9}, {3.69015588508081*^9, 
   3.6901559348768587`*^9}, {3.690156025130807*^9, 3.6901560291195917`*^9}, {
   3.690156069089366*^9, 3.690156120039815*^9}, {3.6901561679866953`*^9, 
   3.6901561888833437`*^9}, {3.690156481221405*^9, 3.690156489718297*^9}, 
   3.690156797825591*^9, {3.690156835537313*^9, 3.6901568626521807`*^9}, {
   3.690159758554804*^9, 3.690159761756681*^9}, {3.690185044000949*^9, 
   3.690185055588277*^9}, {3.6901860058206244`*^9, 3.6901862281038713`*^9}, {
   3.690186666480081*^9, 3.690186676061758*^9}, {3.690187375227727*^9, 
   3.690187377684705*^9}, {3.690187487292684*^9, 3.690187491732998*^9}, {
   3.6901876561003923`*^9, 3.690187716774066*^9}, {3.690187764979742*^9, 
   3.690187770020759*^9}, 3.690187802251783*^9, {3.690188091012463*^9, 
   3.690188170134878*^9}, {3.690188470768663*^9, 3.6901884895369387`*^9}, 
   3.690188563694615*^9, {3.690188603539316*^9, 3.690188636146983*^9}, {
   3.690188678578977*^9, 3.690188681312934*^9}, {3.690189097614181*^9, 
   3.690189139320828*^9}, 3.690189232953183*^9, {3.6901892756281977`*^9, 
   3.6901892763936*^9}, {3.690189307469932*^9, 3.690189328861908*^9}, 
   3.690189594024644*^9, {3.690189659475204*^9, 3.690189673442398*^9}, 
   3.690189728881001*^9, {3.6901897758988457`*^9, 3.690189828778412*^9}, {
   3.6901900765291157`*^9, 3.690190111576995*^9}, {3.690190243371166*^9, 
   3.690190253106876*^9}, {3.69019036248787*^9, 3.690190382276103*^9}, {
   3.690191447245265*^9, 3.690191490982328*^9}, {3.69020181566287*^9, 
   3.69020186069527*^9}, {3.690206420314115*^9, 3.690206432610235*^9}, 
   3.690284317459455*^9, 3.690289503837439*^9, {3.6902900599797287`*^9, 
   3.690290131899238*^9}, {3.690290242646875*^9, 3.690290245404241*^9}, {
   3.6903899833586893`*^9, 3.690390211166675*^9}, {3.690390252887865*^9, 
   3.690390270798608*^9}, {3.690392523310273*^9, 3.690392544845943*^9}, {
   3.690392937966073*^9, 3.6903931624437857`*^9}, {3.690393194744555*^9, 
   3.6903936869653893`*^9}, {3.690394265345669*^9, 3.6903942822414703`*^9}, {
   3.6903950368758717`*^9, 3.690395039809902*^9}, {3.690395765210561*^9, 
   3.690395795363139*^9}, {3.69039583906129*^9, 3.690395917399684*^9}, 
   3.6903961729135313`*^9, 3.6903962077713223`*^9, {3.690396273732423*^9, 
   3.690396283370865*^9}, 3.6903963155400267`*^9, {3.690396380861394*^9, 
   3.690396422867086*^9}, {3.690396553843795*^9, 3.690396576761677*^9}, 
   3.690396616379524*^9, {3.690396648900573*^9, 3.6903966814144573`*^9}, {
   3.690396716102405*^9, 3.690396798095995*^9}, {3.690396867368155*^9, 
   3.69039693945553*^9}, {3.6903969922327642`*^9, 3.690397021640571*^9}, {
   3.6903971190028667`*^9, 3.690397156049696*^9}, {3.69039728726929*^9, 
   3.690397444655319*^9}, {3.6903975309917107`*^9, 3.690397549118538*^9}, {
   3.690397592482532*^9, 3.690397670116343*^9}, {3.690397753533949*^9, 
   3.6903977710298643`*^9}, {3.690397815498205*^9, 3.690397830337742*^9}, {
   3.690397895656571*^9, 3.690397948006818*^9}, {3.690455847057989*^9, 
   3.690455847483282*^9}, {3.690455883973218*^9, 3.6904559636769257`*^9}, {
   3.6904953292841043`*^9, 3.690495364345866*^9}, {3.6904954319889402`*^9, 
   3.690495443763033*^9}, {3.6904955245610847`*^9, 3.690495625607452*^9}, {
   3.6904958289358*^9, 3.690495845621209*^9}, {3.690946435605899*^9, 
   3.690946436367498*^9}, {3.691380169787105*^9, 3.691380275000695*^9}, {
   3.691380332437258*^9, 3.6913803684970083`*^9}, {3.691380503151188*^9, 
   3.691380659769775*^9}, {3.6913806983123713`*^9, 3.691380755629888*^9}, {
   3.6913807932920017`*^9, 3.6913807947628736`*^9}, 3.6914174233791323`*^9, {
   3.6914175158342323`*^9, 3.691417588359511*^9}, {3.691417737698523*^9, 
   3.6914177437457523`*^9}, {3.691418013254024*^9, 3.691418093367276*^9}, {
   3.6914181235401983`*^9, 3.691418329321341*^9}, {3.691418366996751*^9, 
   3.691418370771719*^9}, {3.691418409380926*^9, 3.691418483157879*^9}, {
   3.691418518182418*^9, 3.69141864450521*^9}, {3.6914186854941196`*^9, 
   3.691418701682541*^9}, {3.691418830405489*^9, 3.691418855982379*^9}, {
   3.691418943174708*^9, 3.691419097761258*^9}, {3.691419145652437*^9, 
   3.6914192293903513`*^9}, {3.691424512926342*^9, 3.6914246898800898`*^9}, {
   3.6914248136022987`*^9, 3.691424856219829*^9}, {3.691451955588851*^9, 
   3.6914519794180937`*^9}, {3.691452141033505*^9, 3.691452142583688*^9}, {
   3.691452449402313*^9, 3.691452651050033*^9}, 3.691455303376236*^9, 
   3.691455880334173*^9},
 CellID->1412498031]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ManipulateSection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"movesAndPositions", ",", "path", ",", 
       RowBox[{"(*", 
        RowBox[{"paths", " ", "for", " ", "each", " ", "robot"}], "*)"}], 
       "path1", ",", "path2", ",", "\[IndentingNewLine]", 
       RowBox[{"r", " ", "=", " ", 
        RowBox[{"1", "/", "40"}]}], " ", 
       RowBox[{"(*", 
        RowBox[{
        "radius", " ", "of", " ", "start", " ", "and", " ", "end", " ", 
         "markers"}], "*)"}], ",", "\[IndentingNewLine]", 
       RowBox[{"thickness", " ", "=", " ", "0.002"}], ",", "rotateSolution", 
       ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"left", " ", "robot"}], "*)"}], " ", "ps1", ",", "pe1", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"right", " ", "robot"}], "*)"}], " ", "ps2", ",", "pe2", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"current", " ", "particle", " ", "position"}], "*)"}], " ", 
       "pm1", ",", "pm2", ",", "offset", ",", "\[IndentingNewLine]", 
       RowBox[{"c1", "=", "Blue"}], ",", 
       RowBox[{"c2", " ", "=", "Magenta"}], ",", "\[IndentingNewLine]", 
       "mvNum", ",", "\[IndentingNewLine]", "mvFrac"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "ensure", " ", "robots", " ", "do", " ", "not", " ", "overlap"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"EuclideanDistance", "[", 
          RowBox[{"s1", ",", "s2"}], "]"}], "<", "\[Epsilon]"}], ",", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
           "s1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "<", 
           RowBox[{
           "s2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
          ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
             "s1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             ">", 
             RowBox[{"2", "\[Epsilon]"}]}], ",", 
            RowBox[{
             RowBox[{
             "s1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             " ", "=", 
             RowBox[{
              RowBox[{
              "s2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              " ", "-", " ", "\[Epsilon]"}]}], ",", 
            RowBox[{
             RowBox[{
             "s2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             " ", "=", 
             RowBox[{
              RowBox[{
              "s1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              " ", "+", "\[Epsilon]"}]}]}], "]"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
             "s2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             ">", 
             RowBox[{"2", "\[Epsilon]"}]}], ",", 
            RowBox[{
             RowBox[{
             "s2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "=", " ", 
             RowBox[{
              RowBox[{
              "s1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              "-", " ", "\[Epsilon]"}]}], ",", 
            RowBox[{
             RowBox[{
             "s1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             " ", "=", 
             RowBox[{
              RowBox[{
              "s2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              "+", " ", "\[Epsilon]"}]}]}], "]"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"EuclideanDistance", "[", 
          RowBox[{"e1", ",", "e2"}], "]"}], "<", "\[Epsilon]"}], ",", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
           "e1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "<", 
           RowBox[{
           "e2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
          ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
             "e1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             ">", 
             RowBox[{"2", "\[Epsilon]"}]}], ",", 
            RowBox[{
             RowBox[{
             "e1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             " ", "=", 
             RowBox[{
              RowBox[{
              "e2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              " ", "-", " ", "\[Epsilon]"}]}], ",", 
            RowBox[{
             RowBox[{
             "e2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             " ", "=", 
             RowBox[{
              RowBox[{
              "e1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              " ", "+", "\[Epsilon]"}]}]}], "]"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
             "e2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             ">", 
             RowBox[{"2", "\[Epsilon]"}]}], ",", 
            RowBox[{
             RowBox[{
             "e2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "=", " ", 
             RowBox[{
              RowBox[{
              "e1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              "-", " ", "\[Epsilon]"}]}], ",", 
            RowBox[{
             RowBox[{
             "e1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             " ", "=", 
             RowBox[{
              RowBox[{
              "e2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              "+", " ", "\[Epsilon]"}]}]}], "]"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"ensure", " ", "ps1", " ", "is", " ", "leftmost"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"ps1", " ", ",", "pe1", ",", "ps2", ",", "pe2"}], "}"}], " ", 
       "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
           "s1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "<", 
           " ", 
           RowBox[{
           "s2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
          " ", "||", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{
             "s1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "\[Equal]", "  ", 
             RowBox[{
             "s2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
            " ", "&&", 
            RowBox[{
             RowBox[{
             "s1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
             "<", "  ", 
             RowBox[{
             "s2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}],
            ")"}]}], "  ", ",", 
         RowBox[{"{", 
          RowBox[{"s1", " ", ",", "e1", ",", "s2", ",", "e2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"s2", ",", "e2", ",", "s1", " ", ",", "e1"}], "}"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "if", " ", "leftmost", " ", "is", " ", "not", " ", "topmost"}], ",", 
        " ", 
        RowBox[{"rotate", " ", "the", " ", "solution"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"rotateSolution", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
          "ps1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], " ", 
          "<", "  ", 
          RowBox[{
          "ps2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
         "  ", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"ps1", " ", ",", "pe1", ",", "ps2", ",", "pe2"}], "}"}], 
           " ", "=", " ", 
           RowBox[{"Map", "[", 
            RowBox[{"RotateCCW90", ",", 
             RowBox[{"{", 
              RowBox[{"ps1", " ", ",", "pe1", ",", "ps2", ",", "pe2"}], 
              "}"}]}], "]"}]}], ";", "True"}], ",", "False"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"path", ",", "path1", ",", "path2"}], "}"}], " ", "=", " ", 
       RowBox[{"achieveDesiredSpacing", "[", 
        RowBox[{
        "ps1", ",", "ps2", ",", "pe1", ",", "pe2", ",", "\[Epsilon]"}], " ", 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"rotateSolution", ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"(*", 
          RowBox[{"undo", " ", "the", " ", "transformation"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"ps1", " ", ",", "pe1", ",", "ps2", ",", "pe2"}], "}"}], 
           " ", "=", " ", 
           RowBox[{"Map", "[", 
            RowBox[{"RotateCW90", ",", 
             RowBox[{"{", 
              RowBox[{"ps1", " ", ",", "pe1", ",", "ps2", ",", "pe2"}], 
              "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"path", "=", " ", 
           RowBox[{"Map", "[", 
            RowBox[{"RotateCW90inplace", ",", "path"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"path1", "=", " ", 
           RowBox[{"Map", "[", 
            RowBox[{"RotateCW90", ",", "path1"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"path2", "=", " ", 
           RowBox[{"Map", "[", 
            RowBox[{"RotateCW90", ",", "path2"}], "]"}]}], ";"}], "}"}]}], 
       "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"mvNum", " ", "=", " ", 
       RowBox[{"Floor", "[", 
        RowBox[{"progress", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Length", "[", "path", "]"}], "-", "1"}], ")"}]}], "]"}]}],
       " ", ";", "\[IndentingNewLine]", 
      RowBox[{"mvFrac", " ", "=", " ", 
       RowBox[{"FractionalPart", "[", 
        RowBox[{"progress", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Length", "[", "path", "]"}], "-", "1"}], ")"}]}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"pm2", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"mvFrac", ">", "0"}], ",", 
         RowBox[{
          RowBox[{"path2", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{"mvNum", "+", "1"}], ",", ";;"}], 
           "\[RightDoubleBracket]"}], "+", 
          RowBox[{"mvFrac", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"path2", "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{"mvNum", "+", "2"}], ",", ";;"}], 
              "\[RightDoubleBracket]"}], "-", 
             RowBox[{"path2", "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{"mvNum", "+", "1"}], ",", ";;"}], 
              "\[RightDoubleBracket]"}]}], ")"}]}]}], ",", 
         RowBox[{"path2", "\[LeftDoubleBracket]", 
          RowBox[{
           RowBox[{"mvNum", "+", "1"}], ",", ";;"}], 
          "\[RightDoubleBracket]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"pm1", " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"mvFrac", ">", "0"}], ",", 
         RowBox[{
          RowBox[{"path1", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{"mvNum", "+", "1"}], ",", ";;"}], 
           "\[RightDoubleBracket]"}], "+", 
          RowBox[{"mvFrac", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"path1", "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{"mvNum", "+", "2"}], ",", ";;"}], 
              "\[RightDoubleBracket]"}], "-", 
             RowBox[{"path1", "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{"mvNum", "+", "1"}], ",", ";;"}], 
              "\[RightDoubleBracket]"}]}], ")"}]}]}], ",", 
         RowBox[{"path1", "\[LeftDoubleBracket]", 
          RowBox[{
           RowBox[{"mvNum", "+", "1"}], ",", ";;"}], 
          "\[RightDoubleBracket]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{"(*", "workspace", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Darker", "[", "Red", "]"}], ",", " ", 
            RowBox[{"Rectangle", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "0.025"}], 
               RowBox[{"{", 
                RowBox[{"1", ",", "1"}], "}"}]}], ",", 
              RowBox[{"1.025", 
               RowBox[{"{", 
                RowBox[{"1", ",", "1"}], "}"}]}]}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Lighter", "[", 
             RowBox[{"Gray", ",", "0.8"}], "]"}], ",", " ", 
            RowBox[{"Rectangle", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}]}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"White", ",", " ", 
            RowBox[{"Rectangle", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"\[Epsilon]", ",", " ", "\[Epsilon]"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"1", "-", "\[Epsilon]"}], ",", 
                RowBox[{"1", "-", "\[Epsilon]"}]}], "}"}]}], "]"}]}], "}"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Lighter", "[", 
             RowBox[{"Gray", ",", "0.8"}], "]"}], ",", " ", 
            RowBox[{"Disk", "[", 
             RowBox[{"ps2", ",", "\[Epsilon]"}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Lighter", "[", 
             RowBox[{"Gray", ",", "0.8"}], "]"}], ",", " ", 
            RowBox[{"Disk", "[", 
             RowBox[{"pe2", ",", "\[Epsilon]"}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"PointSize", "[", "0.01", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Arrowheads", "[", ".02", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Thickness", "[", "thickness", "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"starting", " ", "poses"}], ",", " ", 
            RowBox[{
            "dashed", " ", "line", " ", "from", " ", "start", " ", "to", " ", 
             "end"}]}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"c1", ",", 
            RowBox[{"{", " ", 
             RowBox[{
              RowBox[{"Opacity", "[", ".3", "]"}], ",", "Dashed", ",", 
              RowBox[{"Arrow", "[", 
               RowBox[{"{", 
                RowBox[{"ps1", ",", "pe1"}], "}"}], "]"}]}], "}"}], ",", 
            RowBox[{"Point", "@", "ps1"}], ",", 
            RowBox[{"EdgeForm", "[", 
             RowBox[{"Directive", "[", 
              RowBox[{"c1", ",", 
               RowBox[{"Thickness", "[", "thickness", "]"}]}], "]"}], "]"}], 
            ",", 
            RowBox[{"FaceForm", "[", "None", "]"}], ",", 
            RowBox[{"Rectangle", "[", 
             RowBox[{
              RowBox[{"ps1", "-", 
               RowBox[{
                RowBox[{"2", "/", "3"}], "r", " ", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "1"}], "}"}]}]}], ",", 
              RowBox[{"ps1", "+", 
               RowBox[{
                RowBox[{"2", "/", "3"}], "r", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "1"}], "}"}]}]}]}], "]"}], ",", 
            RowBox[{"Circle", "[", 
             RowBox[{"pe1", ",", "r"}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"c2", ",", 
            RowBox[{"{", " ", 
             RowBox[{
              RowBox[{"Opacity", "[", ".3", "]"}], ",", "Dashed", ",", 
              RowBox[{"Arrow", "[", 
               RowBox[{"{", 
                RowBox[{"ps2", ",", "pe2"}], "}"}], "]"}]}], "}"}], ",", 
            RowBox[{"Point", "@", "ps2"}], ",", 
            RowBox[{"EdgeForm", "[", 
             RowBox[{"Directive", "[", 
              RowBox[{"c2", ",", 
               RowBox[{"Thickness", "[", "thickness", "]"}]}], "]"}], "]"}], 
            ",", 
            RowBox[{"FaceForm", "[", "None", "]"}], ",", 
            RowBox[{"Rectangle", "[", 
             RowBox[{
              RowBox[{"ps2", "-", 
               RowBox[{
                RowBox[{"2", "/", "3"}], "r", " ", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "1"}], "}"}]}]}], ",", 
              RowBox[{"ps2", "+", 
               RowBox[{
                RowBox[{"2", "/", "3"}], "r", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "1"}], "}"}]}]}]}], "]"}], ",", " ", 
            RowBox[{"Circle", "[", 
             RowBox[{"pe2", ",", "r"}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
           "plot", " ", "path", " ", "of", " ", "particle", " ", "1"}], 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"c1", ",", "\[IndentingNewLine]", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Arrow", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"path1", "\[LeftDoubleBracket]", 
                  RowBox[{"i", ",", ";;"}], "\[RightDoubleBracket]"}], ",", 
                 RowBox[{"path1", "\[LeftDoubleBracket]", 
                  RowBox[{
                   RowBox[{"i", "+", "1"}], ",", ";;"}], 
                  "\[RightDoubleBracket]"}]}], "}"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", "mvNum"}], "}"}]}], "]"}], ",", 
            "\[IndentingNewLine]", " ", 
            RowBox[{"Arrow", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"path1", "\[LeftDoubleBracket]", 
                RowBox[{
                 RowBox[{"mvNum", "+", "1"}], ",", ";;"}], 
                "\[RightDoubleBracket]"}], ",", "pm1"}], "}"}], "]"}], ",", 
            RowBox[{"Point", "@", "pm1"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                 "pm1", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}], "\[Equal]", "0"}], "||", 
                RowBox[{
                 RowBox[{
                 "pm1", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}], "\[Equal]", "0"}], "||", 
                RowBox[{
                 RowBox[{
                 "pm1", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}], "\[Equal]", "1"}], "||", 
                RowBox[{
                 RowBox[{
                 "pm1", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}], "\[Equal]", "1"}]}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"PointSize", "[", "0.005", "]"}], ",", "White", ",", 
                 RowBox[{"Point", "@", "pm1"}]}], " ", "}"}]}], "]"}], " ", 
             "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
          "\[IndentingNewLine]", " ", 
          RowBox[{"{", 
           RowBox[{"c2", ",", "\[IndentingNewLine]", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Arrow", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"path2", "\[LeftDoubleBracket]", 
                  RowBox[{"i", ",", ";;"}], "\[RightDoubleBracket]"}], ",", 
                 RowBox[{"path2", "\[LeftDoubleBracket]", 
                  RowBox[{
                   RowBox[{"i", "+", "1"}], ",", ";;"}], 
                  "\[RightDoubleBracket]"}]}], "}"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", "mvNum"}], "}"}]}], "]"}], ",", 
            "\[IndentingNewLine]", " ", 
            RowBox[{"Arrow", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"path2", "\[LeftDoubleBracket]", 
                RowBox[{
                 RowBox[{"mvNum", "+", "1"}], ",", ";;"}], 
                "\[RightDoubleBracket]"}], ",", "pm2"}], "}"}], "]"}], ",", 
            RowBox[{"Point", "@", "pm2"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                 "pm2", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}], "\[Equal]", "0"}], "||", 
                RowBox[{
                 RowBox[{
                 "pm2", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}], "\[Equal]", "0"}], "||", 
                RowBox[{
                 RowBox[{
                 "pm2", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}], "\[Equal]", "1"}], "||", 
                RowBox[{
                 RowBox[{
                 "pm2", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}], "\[Equal]", "1"}]}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"PointSize", "[", "0.005", "]"}], ",", "White", ",", 
                 RowBox[{"Point", "@", "pm2"}]}], " ", "}"}]}], "]"}], " ", 
             "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"mvNum", "+", "1"}], "\[Equal]", " ", 
                RowBox[{"Length", "[", "path", "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"mvNum", "=", " ", 
                  RowBox[{
                   RowBox[{"Length", "[", "path", "]"}], "-", "2"}]}], ",", 
                 RowBox[{"mvFrac", "=", "1"}]}], "}"}]}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"Darker", "[", "Red", "]"}]}], ",", " ", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"StringForm", "[", 
                 RowBox[{"\"\<Move `` of ``\>\"", ",", " ", 
                  RowBox[{"mvNum", "+", "1"}], ",", 
                  RowBox[{
                   RowBox[{"Length", "[", "path", "]"}], "-", "1"}]}], "]"}], 
                ",", 
                RowBox[{"FontSize", "\[Rule]", "18"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"1.55", ",", ".9"}], "}"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"StringForm", "[", 
                 RowBox[{"\"\<Total distance `` \>\"", ",", " ", 
                  RowBox[{"Round", "[", 
                   RowBox[{
                    RowBox[{"N", "[", 
                    RowBox[{"Total", "[", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"EuclideanDistance", "[", 
                    RowBox[{
                    RowBox[{
                    "path", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "2", ",", " ", 
                    RowBox[{"Length", "[", "path", "]"}]}], "}"}]}], "]"}], 
                    " ", "]"}], " ", "]"}], ",", ".01"}], "]"}]}], "]"}], ",", 
                RowBox[{"FontSize", "\[Rule]", "18"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"1.55", ",", ".8"}], "}"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"offset", " ", "=", " ", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1.55", ",", ".5"}], "}"}], "-", 
               RowBox[{
                FractionBox["1", "2"], 
                RowBox[{"path", "\[LeftDoubleBracket]", 
                 RowBox[{
                  RowBox[{"mvNum", "+", "2"}], ",", ";;"}], 
                 "\[RightDoubleBracket]"}]}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Opacity", "[", "0.3", "]"}], ",", " ", 
               RowBox[{"Arrow", "[", 
                RowBox[{"{", 
                 RowBox[{"offset", ",", 
                  RowBox[{"offset", "+", 
                   RowBox[{"path", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"mvNum", "+", "2"}], ",", ";;"}], 
                    "\[RightDoubleBracket]"}]}]}], "}"}], "]"}]}], "}"}]}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"Point", "[", 
             RowBox[{"offset", "+", 
              RowBox[{"mvFrac", 
               RowBox[{"(", 
                RowBox[{"path", "\[LeftDoubleBracket]", 
                 RowBox[{
                  RowBox[{"mvNum", "+", "2"}], ",", ";;"}], 
                 "\[RightDoubleBracket]"}], ")"}]}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Arrow", "[", 
             RowBox[{"{", 
              RowBox[{"offset", ",", "  ", 
               RowBox[{"offset", "+", 
                RowBox[{"mvFrac", 
                 RowBox[{"(", 
                  RowBox[{"path", "\[LeftDoubleBracket]", 
                   RowBox[{
                    RowBox[{"mvNum", "+", "2"}], ",", ";;"}], 
                   "\[RightDoubleBracket]"}], ")"}]}]}]}], " ", "}"}], 
             "]"}]}], "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
         "}"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "600"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.05"}], ",", "2.05"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", ".05"}], ",", "1.05"}], "}"}]}], "}"}]}]}], 
       "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Control", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"progress", ",", 
           RowBox[{"19", "/", "20"}], ",", "\"\<progress\>\""}], "}"}], ",", 
         "0", ",", "1", ",", 
         RowBox[{"1", "/", "420"}], ",", "Slider", ",", 
         RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"Control", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Epsilon]", ",", 
           RowBox[{"1", "/", "100"}], ",", "\"\<\[Epsilon]\>\""}], "}"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"1", "/", "10"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", "Slider", ",", 
         RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}]}], 
     "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s1", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"3", "/", "4"}], ",", 
         RowBox[{"1", "/", "5"}]}], "}"}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], "+", " ", "\[Epsilon]"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], "-", " ", "\[Epsilon]"}], ",", 
     "Locator", ",", 
     RowBox[{"Appearance", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s2", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "/", "4"}], ",", 
         RowBox[{"4", "/", "5"}]}], "}"}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], "+", " ", "\[Epsilon]"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], "-", " ", "\[Epsilon]"}], ",", 
     "Locator", ",", 
     RowBox[{"Appearance", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"e1", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"2", "/", "3"}], ",", 
         RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], "+", " ", "\[Epsilon]"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], "-", " ", "\[Epsilon]"}], ",", 
     "Locator", ",", 
     RowBox[{"Appearance", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"e2", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "/", "2"}], ",", 
         RowBox[{"2", "/", "3"}]}], "}"}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], "+", " ", "\[Epsilon]"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], "-", " ", "\[Epsilon]"}], ",", 
     "Locator", ",", 
     RowBox[{"Appearance", "\[Rule]", "None"}]}], "}"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"s1", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "/", "3"}], ",", 
           RowBox[{"2", "/", "3"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", "Locator", ",", 
       RowBox[{"Appearance", "\[Rule]", "None"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"s2", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "/", "3"}], ",", 
           RowBox[{"1", "/", "3"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", "Locator", ",", 
       RowBox[{"Appearance", "\[Rule]", "None"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"e1", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "/", "3"}], ",", 
           RowBox[{"1", "/", "3"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", "Locator", ",", 
       RowBox[{"Appearance", "\[Rule]", "None"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"e2", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "/", "3"}], ",", 
           RowBox[{"2", "/", "3"}]}], "}"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], ",", "Locator", ",", 
       RowBox[{"Appearance", "\[Rule]", "None"}]}], "}"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"s1", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"3", "/", "4"}], ",", 
           RowBox[{"1", "/", "5"}]}], "}"}]}], "}"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], "+", " ", "\[Epsilon]"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], "-", " ", "\[Epsilon]"}], ",", 
       "Locator", ",", 
       RowBox[{"Appearance", "\[Rule]", "None"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"s2", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "/", "4"}], ",", 
           RowBox[{"1", "/", "5"}]}], "}"}]}], "}"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], "+", " ", "\[Epsilon]"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], "-", " ", "\[Epsilon]"}], ",", 
       "Locator", ",", 
       RowBox[{"Appearance", "\[Rule]", "None"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"e1", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"3", "/", "4"}], ",", 
           RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], "+", " ", "\[Epsilon]"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], "-", " ", "\[Epsilon]"}], ",", 
       "Locator", ",", 
       RowBox[{"Appearance", "\[Rule]", "None"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"e2", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "/", "4"}], ",", 
           RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], "+", " ", "\[Epsilon]"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], "-", " ", "\[Epsilon]"}], ",", 
       "Locator", ",", 
       RowBox[{"Appearance", "\[Rule]", "None"}]}], "}"}]}], "*)"}], 
   "\[IndentingNewLine]", ",", " ", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.642115739423017*^9, 3.64211581465235*^9}, {
   3.64211639741261*^9, 3.6421164758259487`*^9}, {3.642116679890699*^9, 
   3.642116758410285*^9}, {3.6421167981616297`*^9, 3.6421168005846863`*^9}, {
   3.6421168336329927`*^9, 3.642116921518705*^9}, {3.6421169823382807`*^9, 
   3.642116983152133*^9}, {3.642117314830017*^9, 3.642117358348731*^9}, {
   3.6421174072466583`*^9, 3.642117409374476*^9}, {3.642124222434638*^9, 
   3.6421242442884417`*^9}, {3.6421243385112267`*^9, 3.6421244210821247`*^9}, 
   3.642124523498645*^9, {3.642124676308289*^9, 3.642124683116325*^9}, {
   3.642125072402566*^9, 3.6421250781572533`*^9}, {3.64212576654256*^9, 
   3.6421257904209137`*^9}, {3.6421262438727493`*^9, 3.642126438347135*^9}, {
   3.642126473201676*^9, 3.642126691985259*^9}, {3.642126756223467*^9, 
   3.642126835554819*^9}, {3.642126903107435*^9, 3.6421270025176773`*^9}, {
   3.642127038488562*^9, 3.642127046758442*^9}, {3.642127084238357*^9, 
   3.642127157246695*^9}, {3.642127204262809*^9, 3.642127209690259*^9}, {
   3.642127246954884*^9, 3.642127319781328*^9}, {3.642127385409954*^9, 
   3.6421274168238363`*^9}, {3.642127450642715*^9, 3.642127641204687*^9}, {
   3.6421277041053133`*^9, 3.642127718788436*^9}, {3.642127753056759*^9, 
   3.642127798980464*^9}, {3.642128036054687*^9, 3.6421280553374*^9}, {
   3.6421281050166693`*^9, 3.642128105398498*^9}, {3.64212814939351*^9, 
   3.642128178070827*^9}, {3.64212821189336*^9, 3.642128212659091*^9}, {
   3.642128269261517*^9, 3.6421284306116743`*^9}, {3.6421284878824368`*^9, 
   3.6421284882264833`*^9}, {3.6421558100467997`*^9, 3.642155974360018*^9}, {
   3.642156005232833*^9, 3.6421560422645197`*^9}, {3.642156076622274*^9, 
   3.642156083901799*^9}, {3.642156159241228*^9, 3.642156167623939*^9}, {
   3.6421562340406713`*^9, 3.642156294844129*^9}, {3.6421563252443743`*^9, 
   3.642156370664515*^9}, {3.64215644238334*^9, 3.6421564495985622`*^9}, {
   3.642156610906487*^9, 3.642156642063321*^9}, {3.64215667331456*^9, 
   3.64215677514955*^9}, {3.642156866886153*^9, 3.642156881402115*^9}, {
   3.6426182910941057`*^9, 3.642618384108675*^9}, 3.6426185170327682`*^9, {
   3.642618596294671*^9, 3.642618676789468*^9}, 3.6426187498891*^9, {
   3.642619321622118*^9, 3.642619346102807*^9}, {3.6426193968470793`*^9, 
   3.642619400774208*^9}, {3.642619435907682*^9, 3.642619559541754*^9}, 
   3.642619622594232*^9, {3.642619662250639*^9, 3.642619699344433*^9}, {
   3.643635854128748*^9, 3.643635868694798*^9}, {3.6436359858043203`*^9, 
   3.643636007806951*^9}, {3.6436360427518253`*^9, 3.6436361014379253`*^9}, {
   3.643636139982049*^9, 3.643636142124593*^9}, {3.643636212796832*^9, 
   3.6436362295152683`*^9}, {3.6436363305505466`*^9, 
   3.6436363343252077`*^9}, {3.643637348632453*^9, 3.643637351110564*^9}, {
   3.6436373946838284`*^9, 3.6436374194702587`*^9}, {3.643637475920896*^9, 
   3.643637631201536*^9}, {3.6436376728431387`*^9, 3.643637810362781*^9}, {
   3.643716063430435*^9, 3.643716074988155*^9}, {3.6440855797760553`*^9, 
   3.644085597159823*^9}, {3.644085952794071*^9, 3.644086013120738*^9}, {
   3.6441327364945993`*^9, 3.644132785376173*^9}, {3.644132921016861*^9, 
   3.644132974993626*^9}, {3.644133078651518*^9, 3.644133083085525*^9}, {
   3.644733181518611*^9, 3.644733186240388*^9}, {3.644733244614622*^9, 
   3.644733245734027*^9}, {3.644737241297286*^9, 3.644737267757646*^9}, {
   3.644737528788254*^9, 3.644737547458057*^9}, {3.644738706620455*^9, 
   3.644738706802505*^9}, {3.644738988749949*^9, 3.644738989620544*^9}, {
   3.644739999988098*^9, 3.6447400301535263`*^9}, {3.644740196387375*^9, 
   3.6447402186508904`*^9}, {3.644760554867786*^9, 3.6447606000812187`*^9}, {
   3.644760782174836*^9, 3.6447608020054607`*^9}, {3.6447608936062927`*^9, 
   3.6447609010912933`*^9}, {3.64476178519411*^9, 3.644761797560363*^9}, {
   3.644761973004347*^9, 3.64476197366735*^9}, {3.644762290803269*^9, 
   3.644762291503882*^9}, {3.644762535037574*^9, 3.644762543813292*^9}, {
   3.6447626556871557`*^9, 3.644762657221249*^9}, {3.644762836059572*^9, 
   3.644762836920858*^9}, {3.644762882322543*^9, 3.644762892833354*^9}, {
   3.6447635709219847`*^9, 3.6447635785360126`*^9}, {3.6447643539946547`*^9, 
   3.644764361393894*^9}, {3.6508805547593613`*^9, 3.6508805570296793`*^9}, {
   3.650880609143939*^9, 3.650880643382326*^9}, {3.650881001646927*^9, 
   3.650881027021592*^9}, {3.650881123211802*^9, 3.650881123690174*^9}, {
   3.650881188911755*^9, 3.6508811899652233`*^9}, {3.650881233547179*^9, 
   3.6508814760958242`*^9}, {3.650881508179291*^9, 3.6508815432091007`*^9}, {
   3.650881638206217*^9, 3.650881687026795*^9}, {3.650881756525618*^9, 
   3.650881762964785*^9}, {3.650881801899169*^9, 3.650881849185812*^9}, {
   3.6508819307746363`*^9, 3.650881959175651*^9}, {3.650881999880933*^9, 
   3.6508820381781054`*^9}, {3.650882092644788*^9, 3.6508821227219877`*^9}, {
   3.650882154743415*^9, 3.650882160934341*^9}, {3.650882197149085*^9, 
   3.650882215858631*^9}, {3.6508823532626953`*^9, 3.6508823721365356`*^9}, {
   3.650882423316435*^9, 3.650882430963951*^9}, {3.650882515523388*^9, 
   3.6508825239754868`*^9}, {3.650882558577022*^9, 3.650882582037064*^9}, {
   3.650882613473673*^9, 3.650882654688686*^9}, {3.650882698769465*^9, 
   3.650882757122204*^9}, {3.650882825144022*^9, 3.650882860224465*^9}, {
   3.650882920008556*^9, 3.650882947388052*^9}, {3.6508829785890512`*^9, 
   3.650882999148305*^9}, {3.650883211313672*^9, 3.650883361273575*^9}, {
   3.650883398325067*^9, 3.650883625866495*^9}, {3.650883677620977*^9, 
   3.650883685231779*^9}, {3.650883857422879*^9, 3.6508839381789093`*^9}, {
   3.6508839765569963`*^9, 3.6508840161209173`*^9}, {3.650884093988345*^9, 
   3.650884094944543*^9}, {3.650884151469512*^9, 3.650884156439414*^9}, {
   3.650885076219063*^9, 3.650885083530244*^9}, {3.650885160600233*^9, 
   3.650885196794684*^9}, {3.6508854865482883`*^9, 3.650885492779366*^9}, {
   3.6508856069172907`*^9, 3.6508856571739273`*^9}, {3.650886281737136*^9, 
   3.650886307846264*^9}, {3.650886349818143*^9, 3.65088637855849*^9}, {
   3.6508867881554117`*^9, 3.6508868170568237`*^9}, {3.650886953993387*^9, 
   3.650886956428447*^9}, {3.650887218088689*^9, 3.6508872201047487`*^9}, {
   3.650887386986128*^9, 3.65088738986182*^9}, {3.6508875839169693`*^9, 
   3.650887587029572*^9}, {3.650887914414068*^9, 3.650888008649688*^9}, {
   3.650888156920087*^9, 3.65088823117099*^9}, {3.65088855652558*^9, 
   3.650888577040256*^9}, {3.6508886894536123`*^9, 3.650888740636567*^9}, {
   3.650889097014827*^9, 3.650889101282255*^9}, {3.6508891413270407`*^9, 
   3.650889142896394*^9}, {3.6508912102919397`*^9, 3.6508914261639633`*^9}, {
   3.6508917125041018`*^9, 3.650891730532255*^9}, {3.650891768445057*^9, 
   3.6508917857873373`*^9}, {3.650891936759754*^9, 3.6508920081793003`*^9}, {
   3.650892117093508*^9, 3.6508921406478567`*^9}, {3.6508921795273533`*^9, 
   3.650892181065886*^9}, {3.651263097869979*^9, 3.651263142968305*^9}, 
   3.651263190304707*^9, {3.6512742880635366`*^9, 3.651274452625785*^9}, {
   3.651274493739476*^9, 3.651274494278893*^9}, {3.651274607305071*^9, 
   3.651274609231517*^9}, {3.6512746883226023`*^9, 3.6512747162057123`*^9}, {
   3.651284337163694*^9, 3.651284361034913*^9}, {3.651284424679278*^9, 
   3.651284483782055*^9}, {3.651284514179933*^9, 3.6512846819925003`*^9}, {
   3.651284863520995*^9, 3.651284908466528*^9}, {3.651285074696594*^9, 
   3.6512852143953257`*^9}, {3.651285289775483*^9, 3.6512853005997877`*^9}, {
   3.651285640206781*^9, 3.651285675293769*^9}, 3.651285783167285*^9, {
   3.6512860016723433`*^9, 3.6512860702283573`*^9}, {3.651286109662396*^9, 
   3.651286128893009*^9}, {3.651288717905159*^9, 3.651288722070737*^9}, 
   3.6512887823861303`*^9, 3.6512891206819067`*^9, {3.651290051082366*^9, 
   3.651290156772155*^9}, {3.6512903230368757`*^9, 3.6512903384748383`*^9}, {
   3.651290733647327*^9, 3.651290742751354*^9}, {3.6512908174662657`*^9, 
   3.651290852727298*^9}, {3.65129089521076*^9, 3.651290900325613*^9}, {
   3.651290992045032*^9, 3.6512910329767838`*^9}, {3.651291063188367*^9, 
   3.651291085811179*^9}, {3.65129113891813*^9, 3.651291139341095*^9}, {
   3.651291171872425*^9, 3.651291232333914*^9}, 3.651291355085929*^9, {
   3.651291393982236*^9, 3.651291395694765*^9}, {3.651291459336396*^9, 
   3.6512915135016937`*^9}, {3.651291661487998*^9, 3.651291759106419*^9}, {
   3.681762288709643*^9, 3.681762353136854*^9}, {3.6817624958879843`*^9, 
   3.681762564178989*^9}, {3.689323708814982*^9, 3.689323722346706*^9}, {
   3.690029937233748*^9, 3.690029942178267*^9}, {3.6900301736053467`*^9, 
   3.6900302979470263`*^9}, {3.6900304397969646`*^9, 3.690030444974771*^9}, {
   3.69003050284864*^9, 3.690030504218163*^9}, {3.690128075236841*^9, 
   3.690128091122655*^9}, {3.690129529411048*^9, 3.690129585037087*^9}, {
   3.690131853645454*^9, 3.690131886184162*^9}, {3.69013232397073*^9, 
   3.690132392526143*^9}, {3.690132612095097*^9, 3.6901326850404453`*^9}, {
   3.69013272276433*^9, 3.6901327385974216`*^9}, {3.6901327790111303`*^9, 
   3.6901327979752502`*^9}, {3.6901331136768913`*^9, 3.690133147470003*^9}, {
   3.690134148283403*^9, 3.6901342083330917`*^9}, {3.69013568748993*^9, 
   3.6901356888813066`*^9}, {3.690138689468708*^9, 3.690138708845715*^9}, {
   3.69015573422666*^9, 3.690155739634901*^9}, {3.690156348728642*^9, 
   3.690156415247944*^9}, {3.6901565139438267`*^9, 3.690156550086537*^9}, {
   3.690156650804082*^9, 3.690156667746607*^9}, {3.690159446961532*^9, 
   3.6901594670093307`*^9}, {3.6901863506264143`*^9, 3.690186353483474*^9}, {
   3.690186414446591*^9, 3.690186430693604*^9}, {3.6901865201726522`*^9, 
   3.690186580623513*^9}, {3.69018677198036*^9, 3.6901869577786903`*^9}, {
   3.690187035238089*^9, 3.69018707285317*^9}, {3.6901875146671133`*^9, 
   3.69018752363035*^9}, {3.69018797845347*^9, 3.690187987158762*^9}, {
   3.690188212536471*^9, 3.690188221761764*^9}, {3.690188262757925*^9, 
   3.6901882698462543`*^9}, {3.690188706241864*^9, 3.690188714545175*^9}, {
   3.690189847731152*^9, 3.6901898560116796`*^9}, {3.690201898893976*^9, 
   3.690201944221046*^9}, {3.6902019853258553`*^9, 3.690202034207094*^9}, {
   3.6902020651288958`*^9, 3.690202108432219*^9}, {3.690202155665407*^9, 
   3.6902022895275297`*^9}, {3.690202321153863*^9, 3.6902023363054943`*^9}, {
   3.6902023818169527`*^9, 3.690202492275186*^9}, {3.690202535431164*^9, 
   3.69020260487245*^9}, {3.690202641611929*^9, 3.690202929251513*^9}, {
   3.690202996606806*^9, 3.6902030285922527`*^9}, {3.6902030734978952`*^9, 
   3.690203073728286*^9}, {3.6902031785191383`*^9, 3.690203470211104*^9}, {
   3.6902035290773773`*^9, 3.690203571228979*^9}, {3.69020360476747*^9, 
   3.690203769334112*^9}, {3.6902038984537697`*^9, 3.690204039732196*^9}, {
   3.690204172258835*^9, 3.690204234602811*^9}, {3.6902043279215117`*^9, 
   3.690204423546637*^9}, {3.690204458287611*^9, 3.690204567046102*^9}, {
   3.690204622505005*^9, 3.69020464037426*^9}, {3.690204673513529*^9, 
   3.690204768573456*^9}, 3.690204800110516*^9, 3.690204991738796*^9, {
   3.6902050224778*^9, 3.690205022822013*^9}, {3.6902050549347687`*^9, 
   3.690205171584528*^9}, {3.690205224029223*^9, 3.690205324287943*^9}, {
   3.6902054097933073`*^9, 3.6902055040424023`*^9}, {3.690205556852191*^9, 
   3.690205591861549*^9}, {3.690205631002405*^9, 3.690205654266356*^9}, {
   3.690205812260271*^9, 3.690205814379924*^9}, 3.6902058729894323`*^9, {
   3.690205927277536*^9, 3.690206053440415*^9}, {3.690206090777513*^9, 
   3.690206090977532*^9}, {3.690206127742476*^9, 3.690206164486332*^9}, {
   3.690206206314437*^9, 3.690206274355253*^9}, {3.690206335671566*^9, 
   3.6902063950116053`*^9}, {3.690206436707076*^9, 3.690206485299809*^9}, {
   3.690206584138577*^9, 3.690206599790535*^9}, {3.690206635320155*^9, 
   3.6902066716179657`*^9}, {3.690206706439354*^9, 3.690206717611455*^9}, {
   3.6902070038345623`*^9, 3.690207004417589*^9}, {3.690207039943571*^9, 
   3.690207052628487*^9}, {3.6902071243099937`*^9, 3.690207150823227*^9}, {
   3.690207226323823*^9, 3.69020727524513*^9}, {3.6902073284339457`*^9, 
   3.690207359848404*^9}, {3.690207390107353*^9, 3.690207557174952*^9}, {
   3.690207610721209*^9, 3.690207624584337*^9}, {3.6902224495127563`*^9, 
   3.69022263436005*^9}, {3.6902226657079678`*^9, 3.690222921824893*^9}, {
   3.690223380962883*^9, 3.690223422359714*^9}, {3.690223484816197*^9, 
   3.6902235308566847`*^9}, {3.690223587659511*^9, 3.690223620635374*^9}, {
   3.690223697914814*^9, 3.690223763228116*^9}, {3.690223806710094*^9, 
   3.6902238353127937`*^9}, {3.690223937881323*^9, 3.690223957489017*^9}, {
   3.6902240279329233`*^9, 3.690224051542248*^9}, {3.690224522528985*^9, 
   3.690224525533634*^9}, {3.690224701556527*^9, 3.6902247019378366`*^9}, {
   3.690224806596757*^9, 3.690224823363667*^9}, {3.690225257975834*^9, 
   3.690225261727892*^9}, {3.690227894915429*^9, 3.690227914165872*^9}, {
   3.6902279778460217`*^9, 3.690227979398134*^9}, {3.690228110099163*^9, 
   3.6902281267114477`*^9}, 3.690228158352563*^9, {3.69022828175222*^9, 
   3.690228311021119*^9}, {3.690228379894977*^9, 3.6902284815742493`*^9}, {
   3.690228518880666*^9, 3.690228547133841*^9}, 3.690228597521545*^9, {
   3.690228663465954*^9, 3.690228705317926*^9}, {3.6902290358095293`*^9, 
   3.69022907521032*^9}, {3.6902291080244017`*^9, 3.6902291185482883`*^9}, {
   3.690229151143404*^9, 3.6902291537376413`*^9}, {3.6902840497060623`*^9, 
   3.69028406781703*^9}, {3.690284484045476*^9, 3.690284486024289*^9}, {
   3.690284533805171*^9, 3.6902846126672487`*^9}, {3.690390360956468*^9, 
   3.690390361244597*^9}, {3.690390434366844*^9, 3.690390551885077*^9}, {
   3.69039059622479*^9, 3.690390692652213*^9}, {3.690390869576763*^9, 
   3.6903909227138987`*^9}, {3.690390999565444*^9, 3.69039104310668*^9}, {
   3.690391169143785*^9, 3.6903911807111177`*^9}, {3.690391230026723*^9, 
   3.6903912383775797`*^9}, {3.690391274051304*^9, 3.690391279842911*^9}, {
   3.690392290196342*^9, 3.690392296011841*^9}, 3.690392332668983*^9, {
   3.6903923810245733`*^9, 3.69039240885389*^9}, 3.690392472958927*^9, {
   3.690392592682769*^9, 3.690392620946954*^9}, {3.690392652573049*^9, 
   3.690392727006609*^9}, 3.6903928240567923`*^9, {3.690394542408771*^9, 
   3.690394605420519*^9}, {3.690394663772273*^9, 3.690394830988435*^9}, {
   3.690394901056797*^9, 3.690395003144978*^9}, 3.690395833832098*^9, {
   3.690396015138752*^9, 3.690396046528558*^9}, {3.6903968158367453`*^9, 
   3.690396816386682*^9}, {3.690397847235973*^9, 3.690397865552958*^9}, {
   3.6914023605993547`*^9, 3.691402423970323*^9}, {3.6914025402747183`*^9, 
   3.691402591636598*^9}, {3.6914026314216757`*^9, 3.691402671436985*^9}, {
   3.691402720233904*^9, 3.691402843889426*^9}, {3.691402907673977*^9, 
   3.691402910673774*^9}, {3.691403149064604*^9, 3.6914031865231333`*^9}, {
   3.691416950779173*^9, 3.6914169796642*^9}, {3.691417045681613*^9, 
   3.691417046077231*^9}, {3.6914171451753263`*^9, 3.6914172655031433`*^9}, {
   3.6914173209059677`*^9, 3.691417322584237*^9}, {3.691417470331311*^9, 
   3.691417471266139*^9}, {3.691424208909111*^9, 3.691424255696596*^9}, {
   3.6914519480075397`*^9, 3.6914519534504642`*^9}, {3.6914520126657257`*^9, 
   3.6914521112648582`*^9}, 3.691452147004592*^9, {3.691452243749444*^9, 
   3.6914523162058697`*^9}, {3.691452366689218*^9, 3.6914523721114607`*^9}, {
   3.6914524353871717`*^9, 3.6914524356665373`*^9}, {3.69145270769676*^9, 
   3.691452752807851*^9}, {3.6914528165181837`*^9, 3.691452816890614*^9}, {
   3.691452856567432*^9, 3.691452856980112*^9}, {3.691453036584962*^9, 
   3.691453037431588*^9}, {3.691453089718872*^9, 3.691453209257813*^9}, {
   3.691453776756447*^9, 3.691453857883294*^9}, {3.691453982592104*^9, 
   3.691453999980484*^9}, {3.6914540988452587`*^9, 3.6914541003428783`*^9}, {
   3.691455890838458*^9, 3.691455914223442*^9}, {3.6914559622397327`*^9, 
   3.691455964117858*^9}},
 CellID->1619884417],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`e1$$ = {0.038, 0.962}, $CellContext`e2$$ = {
    0.962, 0.038}, $CellContext`progress$$ = 1, $CellContext`s1$$ = {0.962, 
    0.962}, $CellContext`s2$$ = {0.038, 0.038}, $CellContext`\[Epsilon]$$ = 
    Rational[19, 500], Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`progress$$], 
       Rational[19, 20], "progress"}, 0, 1, 
      Rational[1, 420]}, {{
       Hold[$CellContext`\[Epsilon]$$], 
       Rational[1, 100], "\[Epsilon]"}, 
      Rational[1, 1000], 
      Rational[1, 10], 
      Rational[1, 1000]}, {
      Hold[
       Row[{
         Manipulate`Place[1], 
         Manipulate`Place[2]}]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`s1$$], {
        Rational[3, 4], 
        Rational[1, 5]}}, 
      Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
      Dynamic[{1, 1} - $CellContext`\[Epsilon]$$]}, {{
       Hold[$CellContext`s2$$], {
        Rational[1, 4], 
        Rational[4, 5]}}, 
      Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
      Dynamic[{1, 1} - $CellContext`\[Epsilon]$$]}, {{
       Hold[$CellContext`e1$$], {
        Rational[2, 3], 
        Rational[1, 2]}}, 
      Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
      Dynamic[{1, 1} - $CellContext`\[Epsilon]$$]}, {{
       Hold[$CellContext`e2$$], {
        Rational[1, 2], 
        Rational[2, 3]}}, 
      Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
      Dynamic[{1, 1} - $CellContext`\[Epsilon]$$]}}, Typeset`size$$ = {
    600., {155., 159.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False, $CellContext`progress$2305872$$ = 
    0, $CellContext`\[Epsilon]$2305873$$ = 0, $CellContext`s1$2305874$$ = 
    0, $CellContext`s2$2305875$$ = 0, $CellContext`e1$2305876$$ = 
    0, $CellContext`e2$2305877$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, "Variables" :> {$CellContext`e1$$ = {
          Rational[2, 3], 
          Rational[1, 2]}, $CellContext`e2$$ = {
          Rational[1, 2], 
          Rational[2, 3]}, $CellContext`progress$$ = 
        Rational[19, 20], $CellContext`s1$$ = {
          Rational[3, 4], 
          Rational[1, 5]}, $CellContext`s2$$ = {
          Rational[1, 4], 
          Rational[4, 5]}, $CellContext`\[Epsilon]$$ = Rational[1, 100]}, 
      "ControllerVariables" :> {
        Hold[$CellContext`progress$$, $CellContext`progress$2305872$$, 0], 
        Hold[$CellContext`\[Epsilon]$$, $CellContext`\[Epsilon]$2305873$$, 0], 
        Hold[$CellContext`s1$$, $CellContext`s1$2305874$$, 0], 
        Hold[$CellContext`s2$$, $CellContext`s2$2305875$$, 0], 
        Hold[$CellContext`e1$$, $CellContext`e1$2305876$$, 0], 
        Hold[$CellContext`e2$$, $CellContext`e2$2305877$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`movesAndPositions$, $CellContext`path$, \
$CellContext`path1$, $CellContext`path2$, $CellContext`r$ = 
         1/40, $CellContext`thickness$ = 
         0.002, $CellContext`rotateSolution$, $CellContext`ps1$, \
$CellContext`pe1$, $CellContext`ps2$, $CellContext`pe2$, $CellContext`pm1$, \
$CellContext`pm2$, $CellContext`offset$, $CellContext`c1$ = 
         Blue, $CellContext`c2$ = 
         Magenta, $CellContext`mvNum$, $CellContext`mvFrac$}, 
        If[EuclideanDistance[$CellContext`s1$$, $CellContext`s2$$] < \
$CellContext`\[Epsilon]$$, 
          If[Part[$CellContext`s1$$, 1] < Part[$CellContext`s2$$, 1], 
           If[
           Part[$CellContext`s1$$, 1] > 2 $CellContext`\[Epsilon]$$, 
            Part[$CellContext`s1$$, 1] = 
            Part[$CellContext`s2$$, 1] - $CellContext`\[Epsilon]$$, 
            Part[$CellContext`s2$$, 1] = 
            Part[$CellContext`s1$$, 1] + $CellContext`\[Epsilon]$$], 
           If[
           Part[$CellContext`s2$$, 1] > 2 $CellContext`\[Epsilon]$$, 
            Part[$CellContext`s2$$, 1] = 
            Part[$CellContext`s1$$, 1] - $CellContext`\[Epsilon]$$, 
            Part[$CellContext`s1$$, 1] = 
            Part[$CellContext`s2$$, 1] + $CellContext`\[Epsilon]$$]]]; 
        If[EuclideanDistance[$CellContext`e1$$, $CellContext`e2$$] < \
$CellContext`\[Epsilon]$$, 
          If[Part[$CellContext`e1$$, 1] < Part[$CellContext`e2$$, 1], 
           If[
           Part[$CellContext`e1$$, 1] > 2 $CellContext`\[Epsilon]$$, 
            Part[$CellContext`e1$$, 1] = 
            Part[$CellContext`e2$$, 1] - $CellContext`\[Epsilon]$$, 
            Part[$CellContext`e2$$, 1] = 
            Part[$CellContext`e1$$, 1] + $CellContext`\[Epsilon]$$], 
           If[
           Part[$CellContext`e2$$, 1] > 2 $CellContext`\[Epsilon]$$, 
            Part[$CellContext`e2$$, 1] = 
            Part[$CellContext`e1$$, 1] - $CellContext`\[Epsilon]$$, 
            Part[$CellContext`e1$$, 1] = 
            Part[$CellContext`e2$$, 
               1] + $CellContext`\[Epsilon]$$]]]; {$CellContext`ps1$, \
$CellContext`pe1$, $CellContext`ps2$, $CellContext`pe2$} = If[
           Or[Part[$CellContext`s1$$, 1] < Part[$CellContext`s2$$, 1], 
            And[
            Part[$CellContext`s1$$, 1] == Part[$CellContext`s2$$, 1], 
             Part[$CellContext`s1$$, 2] < 
             Part[$CellContext`s2$$, 
               2]]], {$CellContext`s1$$, $CellContext`e1$$, \
$CellContext`s2$$, $CellContext`e2$$}, {$CellContext`s2$$, $CellContext`e2$$, \
$CellContext`s1$$, $CellContext`e1$$}]; $CellContext`rotateSolution$ = 
         If[Part[$CellContext`ps1$, 2] < 
           Part[$CellContext`ps2$, 
             2], {$CellContext`ps1$, $CellContext`pe1$, $CellContext`ps2$, \
$CellContext`pe2$} = 
            Map[$CellContext`RotateCCW90, {$CellContext`ps1$, \
$CellContext`pe1$, $CellContext`ps2$, $CellContext`pe2$}]; True, 
           
           False]; {$CellContext`path$, $CellContext`path1$, \
$CellContext`path2$} = $CellContext`achieveDesiredSpacing[$CellContext`ps1$, \
$CellContext`ps2$, $CellContext`pe1$, $CellContext`pe2$, $CellContext`\
\[Epsilon]$$]; 
        If[$CellContext`rotateSolution$, {{$CellContext`ps1$, \
$CellContext`pe1$, $CellContext`ps2$, $CellContext`pe2$} = 
            Map[$CellContext`RotateCW90, {$CellContext`ps1$, \
$CellContext`pe1$, $CellContext`ps2$, $CellContext`pe2$}]; $CellContext`path$ = 
            Map[$CellContext`RotateCW90inplace, $CellContext`path$]; \
$CellContext`path1$ = 
            Map[$CellContext`RotateCW90, $CellContext`path1$]; \
$CellContext`path2$ = Map[$CellContext`RotateCW90, $CellContext`path2$]; 
           Null}]; $CellContext`mvNum$ = 
         Floor[$CellContext`progress$$ (Length[$CellContext`path$] - 
            1)]; $CellContext`mvFrac$ = 
         FractionalPart[$CellContext`progress$$ (Length[$CellContext`path$] - 
            1)]; $CellContext`pm2$ = 
         If[$CellContext`mvFrac$ > 0, 
           Part[$CellContext`path2$, $CellContext`mvNum$ + 1, 
             Span[1, All]] + $CellContext`mvFrac$ (
             Part[$CellContext`path2$, $CellContext`mvNum$ + 2, 
               Span[1, All]] - 
             Part[$CellContext`path2$, $CellContext`mvNum$ + 1, 
              Span[1, All]]), 
           Part[$CellContext`path2$, $CellContext`mvNum$ + 1, 
            Span[1, All]]]; $CellContext`pm1$ = 
         If[$CellContext`mvFrac$ > 0, 
           Part[$CellContext`path1$, $CellContext`mvNum$ + 1, 
             Span[1, All]] + $CellContext`mvFrac$ (
             Part[$CellContext`path1$, $CellContext`mvNum$ + 2, 
               Span[1, All]] - 
             Part[$CellContext`path1$, $CellContext`mvNum$ + 1, 
              Span[1, All]]), 
           Part[$CellContext`path1$, $CellContext`mvNum$ + 1, 
            Span[1, All]]]; Graphics[{{
            Darker[Red], 
            Rectangle[(-0.025) {1, 1}, 1.025 {1, 1}]}, {
            Lighter[Gray, 0.8], 
            Rectangle[{0, 0}, {1, 1}]}, {White, 
            
            Rectangle[{$CellContext`\[Epsilon]$$, $CellContext`\[Epsilon]$$}, \
{1 - $CellContext`\[Epsilon]$$, 1 - $CellContext`\[Epsilon]$$}]}, {
            Lighter[Gray, 0.8], 
            Disk[$CellContext`ps2$, $CellContext`\[Epsilon]$$]}, {
            Lighter[Gray, 0.8], 
            Disk[$CellContext`pe2$, $CellContext`\[Epsilon]$$]}, 
           PointSize[0.01], 
           Arrowheads[0.02], 
           Thickness[$CellContext`thickness$], {$CellContext`c1$, {
             Opacity[0.3], Dashed, 
             Arrow[{$CellContext`ps1$, $CellContext`pe1$}]}, 
            Point[$CellContext`ps1$], 
            EdgeForm[
             Directive[$CellContext`c1$, 
              Thickness[$CellContext`thickness$]]], 
            FaceForm[None], 
            
            Rectangle[$CellContext`ps1$ - ((2/3) $CellContext`r$) {1, 
              1}, $CellContext`ps1$ + ((2/3) $CellContext`r$) {1, 1}], 
            Circle[$CellContext`pe1$, $CellContext`r$]}, {$CellContext`c2$, {
             Opacity[0.3], Dashed, 
             Arrow[{$CellContext`ps2$, $CellContext`pe2$}]}, 
            Point[$CellContext`ps2$], 
            EdgeForm[
             Directive[$CellContext`c2$, 
              Thickness[$CellContext`thickness$]]], 
            FaceForm[None], 
            
            Rectangle[$CellContext`ps2$ - ((2/3) $CellContext`r$) {1, 
              1}, $CellContext`ps2$ + ((2/3) $CellContext`r$) {1, 1}], 
            Circle[$CellContext`pe2$, $CellContext`r$]}, {$CellContext`c1$, 
            Table[
             Arrow[{
               Part[$CellContext`path1$, $CellContext`i, 
                Span[1, All]], 
               Part[$CellContext`path1$, $CellContext`i + 1, 
                Span[1, All]]}], {$CellContext`i, 1, $CellContext`mvNum$}], 
            Arrow[{
              Part[$CellContext`path1$, $CellContext`mvNum$ + 1, 
               Span[1, All]], $CellContext`pm1$}], 
            Point[$CellContext`pm1$], {
             If[
              Or[
              Part[$CellContext`pm1$, 1] == 0, Part[$CellContext`pm1$, 2] == 
               0, Part[$CellContext`pm1$, 1] == 1, Part[$CellContext`pm1$, 2] == 
               1], {
               PointSize[0.005], White, 
               Point[$CellContext`pm1$]}]}}, {$CellContext`c2$, 
            Table[
             Arrow[{
               Part[$CellContext`path2$, $CellContext`i, 
                Span[1, All]], 
               Part[$CellContext`path2$, $CellContext`i + 1, 
                Span[1, All]]}], {$CellContext`i, 1, $CellContext`mvNum$}], 
            Arrow[{
              Part[$CellContext`path2$, $CellContext`mvNum$ + 1, 
               Span[1, All]], $CellContext`pm2$}], 
            Point[$CellContext`pm2$], {
             If[
              Or[
              Part[$CellContext`pm2$, 1] == 0, Part[$CellContext`pm2$, 2] == 
               0, Part[$CellContext`pm2$, 1] == 1, Part[$CellContext`pm2$, 2] == 
               1], {
               PointSize[0.005], White, 
               Point[$CellContext`pm2$]}]}}, {
           If[$CellContext`mvNum$ + 1 == 
              Length[$CellContext`path$], {$CellContext`mvNum$ = 
               Length[$CellContext`path$] - 2, $CellContext`mvFrac$ = 1}]; 
            Darker[Red], 
            Text[
             Style[
              StringForm[
              "Move `` of ``", $CellContext`mvNum$ + 1, 
               Length[$CellContext`path$] - 1], FontSize -> 18], {1.55, 0.9}], 
            Text[
             Style[
              StringForm["Total distance `` ", 
               Round[
                N[
                 Total[
                  Table[
                   EuclideanDistance[
                    Part[$CellContext`path$, $CellContext`i], {0, 
                    0}], {$CellContext`i, 2, 
                    Length[$CellContext`path$]}]]], 0.01]], FontSize -> 18], {
             1.55, 0.8}], $CellContext`offset$ = {1.55, 0.5} - (1/2) 
              Part[$CellContext`path$, $CellContext`mvNum$ + 2, 
                Span[1, All]]; {
              Opacity[0.3], 
              
              Arrow[{$CellContext`offset$, $CellContext`offset$ + 
                Part[$CellContext`path$, $CellContext`mvNum$ + 2, 
                  Span[1, All]]}]}, 
            
            Point[$CellContext`offset$ + $CellContext`mvFrac$ 
              Part[$CellContext`path$, $CellContext`mvNum$ + 2, 
                Span[1, All]]], 
            
            Arrow[{$CellContext`offset$, $CellContext`offset$ + \
$CellContext`mvFrac$ Part[$CellContext`path$, $CellContext`mvNum$ + 2, 
                 Span[1, All]]}]}}, ImageSize -> 600, 
          PlotRange -> {{-0.05, 2.05}, {-0.05, 1.05}}]], 
      "Specifications" :> {{{$CellContext`progress$$, 
          Rational[19, 20], "progress"}, 0, 1, 
         Rational[1, 420], ControlType -> Slider, Appearance -> "Labeled", 
         ControlPlacement -> 1}, {{$CellContext`\[Epsilon]$$, 
          Rational[1, 100], "\[Epsilon]"}, 
         Rational[1, 1000], 
         Rational[1, 10], 
         Rational[1, 1000], ControlType -> Slider, Appearance -> "Labeled", 
         ControlPlacement -> 2}, 
        Row[{
          Manipulate`Place[1], 
          Manipulate`Place[2]}], {{$CellContext`s1$$, {
           Rational[3, 4], 
           Rational[1, 5]}}, 
         Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
         Dynamic[{1, 1} - $CellContext`\[Epsilon]$$], ControlType -> Locator, 
         Appearance -> None}, {{$CellContext`s2$$, {
           Rational[1, 4], 
           Rational[4, 5]}}, 
         Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
         Dynamic[{1, 1} - $CellContext`\[Epsilon]$$], ControlType -> Locator, 
         Appearance -> None}, {{$CellContext`e1$$, {
           Rational[2, 3], 
           Rational[1, 2]}}, 
         Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
         Dynamic[{1, 1} - $CellContext`\[Epsilon]$$], ControlType -> Locator, 
         Appearance -> None}, {{$CellContext`e2$$, {
           Rational[1, 2], 
           Rational[2, 3]}}, 
         Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
         Dynamic[{1, 1} - $CellContext`\[Epsilon]$$], ControlType -> Locator, 
         Appearance -> None}}, "Options" :> {}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{649., {202., 207.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`RotateCCW90[
         Pattern[$CellContext`r, 
          Blank[]]] := {
         Part[$CellContext`r, 2], 1 - 
         Part[$CellContext`r, 1]}, $CellContext`achieveDesiredSpacing[
         Pattern[$CellContext`ps1, 
          Blank[]], 
         Pattern[$CellContext`ps2, 
          Blank[]], 
         Pattern[$CellContext`pe1, 
          Blank[]], 
         Pattern[$CellContext`pe2, 
          Blank[]], 
         Pattern[$CellContext`\[Epsilon], 
          Blank[]]] := 
       Module[{$CellContext`\[CapitalDelta]ey = 
          Part[$CellContext`pe2, 2] - 
           Part[$CellContext`pe1, 2], $CellContext`\[CapitalDelta]ex = 
          Part[$CellContext`pe2, 1] - 
           Part[$CellContext`pe1, 1], $CellContext`L = 
          1, $CellContext`\[CapitalDelta]r, $CellContext`r1, $CellContext`r2, \
$CellContext`moves, $CellContext`pm1, $CellContext`pm2}, $CellContext`r2 = \
$CellContext`ps2; $CellContext`r1 = $CellContext`ps1; $CellContext`moves = {{
           0, 0}}; $CellContext`pm1 = {$CellContext`r1}; $CellContext`pm2 = \
{$CellContext`r2}; 
         If[$CellContext`pe1 - $CellContext`ps1 == $CellContext`pe2 - \
$CellContext`ps2, $CellContext`\[CapitalDelta]r = $CellContext`pe1 - \
$CellContext`ps1; AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
           AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]; 
           AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]; 
           AppendTo[$CellContext`pm1, $CellContext`r1]; 
           AppendTo[$CellContext`pm2, $CellContext`r2]; 
           Return[{$CellContext`moves, $CellContext`pm1, $CellContext`pm2}]]; 
         If[
           
           And[$CellContext`\[CapitalDelta]ex > 
            0, $CellContext`\[CapitalDelta]ey < 
            0, $CellContext`\[CapitalDelta]ex - (Part[$CellContext`ps2, 1] - 
             Part[$CellContext`ps1, 1]) < 
            0, $CellContext`\[CapitalDelta]ey - (Part[$CellContext`ps2, 2] - 
             Part[$CellContext`ps1, 2]) > 0], 
           Module[{$CellContext`BestDir}, $CellContext`BestDir = Part[
               
               Sort[{{"u", (Part[$CellContext`pe1, 1] - 
                    Part[$CellContext`ps1, 1])^2 + (2 $CellContext`L - 
                    Part[$CellContext`pe1, 2] - 
                    Part[$CellContext`ps1, 
                    2])^2 + $CellContext`effectContractMv1[$CellContext`ps1, \
$CellContext`ps2, $CellContext`pe1, $CellContext`pe2, "u"]}, {
                 "d", (Part[$CellContext`pe2, 1] - 
                    Part[$CellContext`ps2, 1])^2 + (Part[$CellContext`pe2, 2] + 
                    Part[$CellContext`ps2, 
                    2])^2 + $CellContext`effectContractMv1[$CellContext`ps1, \
$CellContext`ps2, $CellContext`pe1, $CellContext`pe2, "d"]}, {
                 "l", (Part[$CellContext`pe1, 1] + 
                    Part[$CellContext`ps1, 1])^2 + (Part[$CellContext`pe1, 2] - 
                    Part[$CellContext`ps1, 
                    2])^2 + $CellContext`effectContractMv1[$CellContext`ps1, \
$CellContext`ps2, $CellContext`pe1, $CellContext`pe2, "l"]}, {
                 "r", (2 $CellContext`L - Part[$CellContext`pe2, 1] - 
                    Part[$CellContext`ps2, 1])^2 + (Part[$CellContext`pe2, 2] - 
                    Part[$CellContext`ps2, 
                    2])^2 + $CellContext`effectContractMv1[$CellContext`ps1, \
$CellContext`ps2, $CellContext`pe1, $CellContext`pe2, "r"]}}, Part[#, 2] < 
                Part[#2, 2]& ], 1, 
               1]; $CellContext`\[CapitalDelta]r = \
$CellContext`contractMv1[$CellContext`ps1, $CellContext`ps2, \
$CellContext`pe1, $CellContext`pe2, $CellContext`BestDir]; 
            AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
            AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]; 
            AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]; 
            AppendTo[$CellContext`pm1, $CellContext`r1]; 
            AppendTo[$CellContext`pm2, $CellContext`r2]; 
            Which[$CellContext`BestDir == 
              "u", $CellContext`\[CapitalDelta]r = {$CellContext`\
\[CapitalDelta]ex - (Part[$CellContext`r2, 1] - 
                 Part[$CellContext`r1, 1]), $CellContext`\[CapitalDelta]ey - (
                 Part[$CellContext`r2, 2] - Part[$CellContext`r1, 2])}; 
              AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r], \
$CellContext`BestDir == 
              "d", $CellContext`\[CapitalDelta]r = {
                Part[$CellContext`r2, 1] - 
                 Part[$CellContext`r1, 1] - $CellContext`\[CapitalDelta]ex, (
                  Part[$CellContext`r2, 2] - 
                  Part[$CellContext`r1, 2]) - $CellContext`\[CapitalDelta]ey}; 
              AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r], \
$CellContext`BestDir == 
              "l", $CellContext`\[CapitalDelta]r = {$CellContext`\
\[CapitalDelta]ex - (Part[$CellContext`r2, 1] - 
                 Part[$CellContext`r1, 1]), $CellContext`\[CapitalDelta]ey - (
                 Part[$CellContext`r2, 2] - Part[$CellContext`r1, 2])}; 
              AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r], \
$CellContext`BestDir == 
              "r", $CellContext`\[CapitalDelta]r = {
                Part[$CellContext`r2, 1] - 
                 Part[$CellContext`r1, 1] - $CellContext`\[CapitalDelta]ex, (
                  Part[$CellContext`r2, 2] - 
                  Part[$CellContext`r1, 2]) - $CellContext`\[CapitalDelta]ey}; 
              AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]; Null]; 
            AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
            AppendTo[$CellContext`pm1, $CellContext`r1]; 
            AppendTo[$CellContext`pm2, $CellContext`r2]; $CellContext`\
\[CapitalDelta]r = {
              Part[$CellContext`pe2, 1] - Part[$CellContext`r2, 1], 
               Part[$CellContext`pe2, 2] - Part[$CellContext`r2, 2]}; 
            AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]; 
            AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]; 
            AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
            AppendTo[$CellContext`pm1, $CellContext`r1]; 
            AppendTo[$CellContext`pm2, $CellContext`r2]; 
            Return[{$CellContext`moves, $CellContext`pm1, \
$CellContext`pm2}]]]; $CellContext`\[CapitalDelta]r = {-
            Part[$CellContext`r1, 1], -Min[
               Part[$CellContext`r2, 2], 
               Part[$CellContext`r1, 
                 2] + $CellContext`\[CapitalDelta]ey] + $CellContext`\
\[Epsilon]}; AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]; 
         AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]; 
         AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
         AppendTo[$CellContext`pm1, $CellContext`r1]; 
         AppendTo[$CellContext`pm2, $CellContext`r2]; $CellContext`\
\[CapitalDelta]r = {-Part[$CellContext`r2, 1], Abs[
               Sign[$CellContext`\[CapitalDelta]ey]] 
             Min[Part[$CellContext`r1, 2] - 
               Part[$CellContext`r2, 
                2] + $CellContext`\[CapitalDelta]ey - \
$CellContext`\[Epsilon], $CellContext`L - 
               Part[$CellContext`r2, 
                2] - $CellContext`\[Epsilon]] + $CellContext`\[Epsilon]}; 
         If[Part[$CellContext`r1, 1] > 0, 
           AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]]; 
         If[Part[$CellContext`r2, 1] > 0, 
           AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]]; 
         AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
         AppendTo[$CellContext`pm1, $CellContext`r1]; 
         AppendTo[$CellContext`pm2, $CellContext`r2]; $CellContext`\
\[CapitalDelta]r = {
            
            Max[$CellContext`\[Epsilon], (-
              Sign[Part[$CellContext`r2, 2] - 
                Part[$CellContext`r1, 2]]) $CellContext`\[CapitalDelta]ex], -
            Min[
              Part[$CellContext`r1, 2], 
              Part[$CellContext`r2, 2]]}; 
         AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]; 
         AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]; 
         AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
         AppendTo[$CellContext`pm1, $CellContext`r1]; 
         AppendTo[$CellContext`pm2, $CellContext`r2]; $CellContext`\
\[CapitalDelta]r = {
            
            If[$CellContext`\[CapitalDelta]ex != 0, 
             Sign[Part[$CellContext`r2, 2] - 
               Part[$CellContext`r1, 2]] $CellContext`\[CapitalDelta]ex, Abs[
               
               Sign[$CellContext`\[CapitalDelta]ey - Part[$CellContext`r2, 2] + 
                Part[$CellContext`r1, 2]]] $CellContext`\[Epsilon]], (Abs[
               Sign[$CellContext`\[CapitalDelta]ey]] - 1) 
            Abs[Part[$CellContext`r1, 2] - Part[$CellContext`r2, 2]]}; 
         If[Part[$CellContext`r1, 2] > 0, 
           AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]]; 
         If[Part[$CellContext`r2, 2] > 0, 
           AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]]; 
         AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
         AppendTo[$CellContext`pm1, $CellContext`r1]; 
         AppendTo[$CellContext`pm2, $CellContext`r2]; 
         If[$CellContext`\[CapitalDelta]ey != 
           Part[$CellContext`r2, 2] - 
            Part[$CellContext`r1, 
             2], $CellContext`\[CapitalDelta]r = {$CellContext`L - Max[
               Part[$CellContext`r1, 1], 
               Part[$CellContext`r2, 1]], 
              
              If[$CellContext`\[CapitalDelta]ex < 
               0, $CellContext`\[Epsilon], $CellContext`\[CapitalDelta]ey - 
               Max[
                Part[$CellContext`r1, 2], 
                Part[$CellContext`r2, 2]]]}; 
           AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]; 
           AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]; 
           AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
           AppendTo[$CellContext`pm1, $CellContext`r1]; 
           AppendTo[$CellContext`pm2, $CellContext`r2]; $CellContext`\
\[CapitalDelta]r = {(-(Abs[
                  Sign[$CellContext`\[CapitalDelta]ex]] - 
                1)) $CellContext`\[Epsilon], 
              If[$CellContext`\[CapitalDelta]ex != 0, -
                Sign[$CellContext`\[CapitalDelta]ex], -Sign[Max[
                    Part[$CellContext`r1, 1], 
                    Part[$CellContext`r2, 1]] - Min[
                   Part[$CellContext`r1, 1], 
                   
                   Part[$CellContext`r2, 
                    1]]]] ($CellContext`\[CapitalDelta]ey - Max[
                Part[$CellContext`r2, 2], 
                Part[$CellContext`r1, 2]] + Min[
                 Part[$CellContext`r2, 2], 
                 Part[$CellContext`r1, 2]])}; If[Part[$CellContext`r1, 1] < 1, 
             AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]]; 
           If[Part[$CellContext`r2, 1] < 1, 
             AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]]; 
           AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
           AppendTo[$CellContext`pm1, $CellContext`r1]; 
           AppendTo[$CellContext`pm2, $CellContext`r2]]; $CellContext`\
\[CapitalDelta]r = {
           Part[$CellContext`pe2, 1] - Part[$CellContext`r2, 1], 
            Part[$CellContext`pe2, 2] - Part[$CellContext`r2, 2]}; 
         AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]; 
         AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]; 
         AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
         AppendTo[$CellContext`pm1, $CellContext`r1]; 
         AppendTo[$CellContext`pm2, $CellContext`r2]; 
         Return[{$CellContext`moves, $CellContext`pm1, $CellContext`pm2}]], \
$CellContext`effectContractMv1[
         Pattern[$CellContext`ps1, 
          Blank[]], 
         Pattern[$CellContext`ps2, 
          Blank[]], 
         Pattern[$CellContext`pe1, 
          Blank[]], 
         Pattern[$CellContext`pe2, 
          Blank[]], 
         Pattern[$CellContext`BestDir, 
          Blank[]]] := 
       Module[{$CellContext`\[CapitalDelta]r, $CellContext`r1, \
$CellContext`r2}, $CellContext`\[CapitalDelta]r = \
$CellContext`contractMv1[$CellContext`ps1, $CellContext`ps2, \
$CellContext`pe1, $CellContext`pe2, $CellContext`BestDir]; $CellContext`r1 = \
$CellContext`ps1 + $CellContext`\[CapitalDelta]r; $CellContext`r2 = \
$CellContext`ps2 + $CellContext`\[CapitalDelta]r; If[
           Or[
           Part[$CellContext`r1, 1] < 0, Part[$CellContext`r1, 1] > 1, 
            Part[$CellContext`r1, 2] < 0, Part[$CellContext`r1, 2] > 1, 
            Part[$CellContext`r2, 1] < 0, Part[$CellContext`r2, 1] > 1, 
            Part[$CellContext`r2, 2] < 0, Part[$CellContext`r2, 2] > 1], 
           Infinity, 0]], $CellContext`contractMv1[
         Pattern[$CellContext`ps1, 
          Blank[]], 
         Pattern[$CellContext`ps2, 
          Blank[]], 
         Pattern[$CellContext`pe1, 
          Blank[]], 
         Pattern[$CellContext`pe2, 
          Blank[]], 
         Pattern[$CellContext`BestDir, 
          Blank[]]] := 
       Module[{$CellContext`\[CapitalDelta]r}, 
         Which[$CellContext`BestDir == 
           "u", $CellContext`\[CapitalDelta]r = {((1 - 
                Part[$CellContext`ps1, 2])/(2 - Part[$CellContext`ps1, 2] - 
               Part[$CellContext`pe1, 2])) (Part[$CellContext`pe2, 1] - 
               Part[$CellContext`ps2, 1]), 1 - Part[$CellContext`ps1, 2]}; 
           Null, $CellContext`BestDir == 
           "d", $CellContext`\[CapitalDelta]r = {(Part[$CellContext`ps2, 2]/(
               Part[$CellContext`ps2, 2] + Part[$CellContext`pe2, 2])) (
               Part[$CellContext`pe2, 1] - Part[$CellContext`ps2, 1]), -
              Part[$CellContext`ps2, 2]}; Null, $CellContext`BestDir == 
           "l", $CellContext`\[CapitalDelta]r = {-
              Part[$CellContext`ps1, 1], (Part[$CellContext`ps1, 1]/(
               Part[$CellContext`ps1, 1] + Part[$CellContext`pe1, 1])) (
               Part[$CellContext`pe2, 2] - Part[$CellContext`ps2, 2])}; 
           Null, $CellContext`BestDir == 
           "r", $CellContext`\[CapitalDelta]r = {
             1 - Part[$CellContext`ps2, 1], ((1 - Part[$CellContext`ps2, 1])/(
               2 - Part[$CellContext`ps2, 1] - Part[$CellContext`pe2, 1])) (
               Part[$CellContext`pe2, 2] - Part[$CellContext`ps2, 2])}; Null]; 
         Return[$CellContext`\[CapitalDelta]r]], $CellContext`RotateCW90[
         Pattern[$CellContext`r, 
          Blank[]]] := {1 - Part[$CellContext`r, 2], 
         Part[$CellContext`r, 1]}, $CellContext`RotateCW90inplace[
         Pattern[$CellContext`r, 
          Blank[]]] := {-Part[$CellContext`r, 2], 
         Part[$CellContext`r, 1]}, Attributes[PlotRange] = {ReadProtected}}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.6567011401579103`*^9, 3.656701264683568*^9, {3.69145279129803*^9, 
   3.691452817347315*^9}, 3.691452860966983*^9, {3.691453136111508*^9, 
   3.69145320988822*^9}, {3.691453803148247*^9, 3.6914538232682247`*^9}, 
   3.6914538633410892`*^9, {3.6914539860216713`*^9, 3.6914540007318697`*^9}, 
   3.691454101296389*^9, {3.691455891613969*^9, 3.691455914987537*^9}, 
   3.6914559649584703`*^9},
 CellID->1974576598]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ManipulateCaptionSection"],

Cell[TextData[{
 "How can two particles in a 2D workspace that are steered by the ",
 StyleBox["same",
  FontSlant->"Italic"],
 " global control signal be moved to arbitrary final positions? This is \
difficult because the control input is ",
 StyleBox["symmetric",
  FontSlant->"Italic"],
 ". We provide an algorithm to bring the particles to the desired final \
positions using friction with the walls (dark red boundaries) for symmetry \
breaking."
}], "ManipulateCaption",
 CellChangeTimes->{{3.656243390745927*^9, 3.65624359675194*^9}, 
   3.6563584237212553`*^9, 3.656368281639295*^9, {3.656700898987805*^9, 
   3.6567009006533318`*^9}, {3.656700956799841*^9, 3.656701038822455*^9}, 
   3.656775300175087*^9, {3.656775332618423*^9, 3.656775339294792*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ThumbnailSection"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`e1$$ = {0.925, 0.756}, $CellContext`e2$$ = {
    0.86, 0.41200000000000003`}, $CellContext`progress$$ = 
    1, $CellContext`s1$$ = {0.75, 0.2}, $CellContext`s2$$ = {0.25, 
    0.8}, $CellContext`\[Epsilon]$$ = Rational[1, 40], Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`progress$$], 1, "progress"}, 0, 1, 
      Rational[1, 420]}, {{
       Hold[$CellContext`\[Epsilon]$$], 
       Rational[1, 1000], "\[Epsilon]"}, 
      Rational[1, 1000], 
      Rational[1, 10], 
      Rational[1, 1000]}, {
      Hold[
       Row[{
         Manipulate`Place[1], 
         Manipulate`Place[2]}]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`s1$$], {
        Rational[3, 4], 
        Rational[1, 5]}}, 
      Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
      Dynamic[{1, 1} - $CellContext`\[Epsilon]$$]}, {{
       Hold[$CellContext`s2$$], {
        Rational[1, 4], 
        Rational[4, 5]}}, 
      Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
      Dynamic[{1, 1} - $CellContext`\[Epsilon]$$]}, {{
       Hold[$CellContext`e1$$], {
        Rational[2, 3], 
        Rational[1, 2]}}, 
      Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
      Dynamic[{1, 1} - $CellContext`\[Epsilon]$$]}, {{
       Hold[$CellContext`e2$$], {
        Rational[1, 2], 
        Rational[2, 3]}}, 
      Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
      Dynamic[{1, 1} - $CellContext`\[Epsilon]$$]}}, Typeset`size$$ = {
    450., {117., 119.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False, $CellContext`progress$2293011$$ = 
    0, $CellContext`\[Epsilon]$2293012$$ = 0, $CellContext`s1$2293013$$ = 
    0, $CellContext`s2$2293014$$ = 0, $CellContext`e1$2293015$$ = 
    0, $CellContext`e2$2293016$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, "Variables" :> {$CellContext`e1$$ = {
          Rational[2, 3], 
          Rational[1, 2]}, $CellContext`e2$$ = {
          Rational[1, 2], 
          Rational[2, 3]}, $CellContext`progress$$ = 1, $CellContext`s1$$ = {
          Rational[3, 4], 
          Rational[1, 5]}, $CellContext`s2$$ = {
          Rational[1, 4], 
          Rational[4, 5]}, $CellContext`\[Epsilon]$$ = Rational[1, 1000]}, 
      "ControllerVariables" :> {
        Hold[$CellContext`progress$$, $CellContext`progress$2293011$$, 0], 
        Hold[$CellContext`\[Epsilon]$$, $CellContext`\[Epsilon]$2293012$$, 0], 
        Hold[$CellContext`s1$$, $CellContext`s1$2293013$$, 0], 
        Hold[$CellContext`s2$$, $CellContext`s2$2293014$$, 0], 
        Hold[$CellContext`e1$$, $CellContext`e1$2293015$$, 0], 
        Hold[$CellContext`e2$$, $CellContext`e2$2293016$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`movesAndPositions$, $CellContext`path$, \
$CellContext`path1$, $CellContext`path2$, $CellContext`r$ = 
         1/40, $CellContext`thickness$ = 
         0.002, $CellContext`rotateSolution$, $CellContext`ps1$, \
$CellContext`pe1$, $CellContext`ps2$, $CellContext`pe2$, $CellContext`pm1$, \
$CellContext`pm2$, $CellContext`offset$, $CellContext`c1$ = 
         Blue, $CellContext`c2$ = 
         Magenta, $CellContext`mvNum$, $CellContext`mvFrac$}, 
        If[EuclideanDistance[$CellContext`s1$$, $CellContext`s2$$] < \
$CellContext`\[Epsilon]$$, 
          If[Part[$CellContext`s1$$, 1] < Part[$CellContext`s2$$, 1], 
           If[
           Part[$CellContext`s1$$, 1] > 2 $CellContext`\[Epsilon]$$, 
            Part[$CellContext`s1$$, 1] = 
            Part[$CellContext`s2$$, 1] - $CellContext`\[Epsilon]$$, 
            Part[$CellContext`s2$$, 1] = 
            Part[$CellContext`s1$$, 1] + $CellContext`\[Epsilon]$$], 
           If[
           Part[$CellContext`s2$$, 1] > 2 $CellContext`\[Epsilon]$$, 
            Part[$CellContext`s2$$, 1] = 
            Part[$CellContext`s1$$, 1] - $CellContext`\[Epsilon]$$, 
            Part[$CellContext`s1$$, 1] = 
            Part[$CellContext`s2$$, 1] + $CellContext`\[Epsilon]$$]]]; 
        If[EuclideanDistance[$CellContext`e1$$, $CellContext`e2$$] < \
$CellContext`\[Epsilon]$$, 
          If[Part[$CellContext`e1$$, 1] < Part[$CellContext`e2$$, 1], 
           If[
           Part[$CellContext`e1$$, 1] > 2 $CellContext`\[Epsilon]$$, 
            Part[$CellContext`e1$$, 1] = 
            Part[$CellContext`e2$$, 1] - $CellContext`\[Epsilon]$$, 
            Part[$CellContext`e2$$, 1] = 
            Part[$CellContext`e1$$, 1] + $CellContext`\[Epsilon]$$], 
           If[
           Part[$CellContext`e2$$, 1] > 2 $CellContext`\[Epsilon]$$, 
            Part[$CellContext`e2$$, 1] = 
            Part[$CellContext`e1$$, 1] - $CellContext`\[Epsilon]$$, 
            Part[$CellContext`e1$$, 1] = 
            Part[$CellContext`e2$$, 
               1] + $CellContext`\[Epsilon]$$]]]; {$CellContext`ps1$, \
$CellContext`pe1$, $CellContext`ps2$, $CellContext`pe2$} = If[
           Or[Part[$CellContext`s1$$, 1] < Part[$CellContext`s2$$, 1], 
            And[
            Part[$CellContext`s1$$, 1] == Part[$CellContext`s2$$, 1], 
             Part[$CellContext`s1$$, 2] < 
             Part[$CellContext`s2$$, 
               2]]], {$CellContext`s1$$, $CellContext`e1$$, \
$CellContext`s2$$, $CellContext`e2$$}, {$CellContext`s2$$, $CellContext`e2$$, \
$CellContext`s1$$, $CellContext`e1$$}]; $CellContext`rotateSolution$ = 
         If[Part[$CellContext`ps1$, 2] < 
           Part[$CellContext`ps2$, 
             2], {$CellContext`ps1$, $CellContext`pe1$, $CellContext`ps2$, \
$CellContext`pe2$} = 
            Map[$CellContext`RotateCCW90, {$CellContext`ps1$, \
$CellContext`pe1$, $CellContext`ps2$, $CellContext`pe2$}]; True, 
           False]; {$CellContext`path$, $CellContext`path1$, \
$CellContext`path2$} = $CellContext`achieveDesiredSpacing[$CellContext`ps1$, \
$CellContext`ps2$, $CellContext`pe1$, $CellContext`pe2$, $CellContext`\
\[Epsilon]$$]; 
        If[$CellContext`rotateSolution$, {{$CellContext`ps1$, \
$CellContext`pe1$, $CellContext`ps2$, $CellContext`pe2$} = 
            Map[$CellContext`RotateCW90, {$CellContext`ps1$, \
$CellContext`pe1$, $CellContext`ps2$, $CellContext`pe2$}]; $CellContext`path$ = 
            Map[$CellContext`RotateCW90inplace, $CellContext`path$]; \
$CellContext`path1$ = 
            Map[$CellContext`RotateCW90, $CellContext`path1$]; \
$CellContext`path2$ = Map[$CellContext`RotateCW90, $CellContext`path2$]; 
           Null}]; $CellContext`mvNum$ = 
         Floor[$CellContext`progress$$ (Length[$CellContext`path$] - 
            1)]; $CellContext`mvFrac$ = 
         FractionalPart[$CellContext`progress$$ (Length[$CellContext`path$] - 
            1)]; $CellContext`pm2$ = 
         If[$CellContext`mvFrac$ > 0, 
           Part[$CellContext`path2$, $CellContext`mvNum$ + 1, 
             Span[1, All]] + $CellContext`mvFrac$ (
             Part[$CellContext`path2$, $CellContext`mvNum$ + 2, 
               Span[1, All]] - 
             Part[$CellContext`path2$, $CellContext`mvNum$ + 1, 
              Span[1, All]]), 
           Part[$CellContext`path2$, $CellContext`mvNum$ + 1, 
            Span[1, All]]]; $CellContext`pm1$ = 
         If[$CellContext`mvFrac$ > 0, 
           Part[$CellContext`path1$, $CellContext`mvNum$ + 1, 
             Span[1, All]] + $CellContext`mvFrac$ (
             Part[$CellContext`path1$, $CellContext`mvNum$ + 2, 
               Span[1, All]] - 
             Part[$CellContext`path1$, $CellContext`mvNum$ + 1, 
              Span[1, All]]), 
           Part[$CellContext`path1$, $CellContext`mvNum$ + 1, 
            Span[1, All]]]; Graphics[{{
            Darker[Red], 
            Rectangle[(-0.025) {1, 1}, 1.025 {1, 1}]}, {
            Lighter[Gray, 0.8], 
            Rectangle[{0, 0}, {1, 1}]}, {White, 
            
            Rectangle[{$CellContext`\[Epsilon]$$, $CellContext`\[Epsilon]$$}, \
{1 - $CellContext`\[Epsilon]$$, 1 - $CellContext`\[Epsilon]$$}]}, {
            Lighter[Gray, 0.8], 
            Disk[$CellContext`ps2$, $CellContext`\[Epsilon]$$]}, {
            Lighter[Gray, 0.8], 
            Disk[$CellContext`pe2$, $CellContext`\[Epsilon]$$]}, 
           PointSize[0.01], 
           Arrowheads[0.02], 
           Thickness[$CellContext`thickness$], {$CellContext`c1$, {
             Opacity[0.3], Dashed, 
             Arrow[{$CellContext`ps1$, $CellContext`pe1$}]}, 
            Point[$CellContext`ps1$], 
            EdgeForm[
             Directive[$CellContext`c1$, 
              Thickness[$CellContext`thickness$]]], 
            FaceForm[None], 
            
            Rectangle[$CellContext`ps1$ - ((2/3) $CellContext`r$) {1, 
              1}, $CellContext`ps1$ + ((2/3) $CellContext`r$) {1, 1}], 
            Circle[$CellContext`pe1$, $CellContext`r$]}, {$CellContext`c2$, {
             Opacity[0.3], Dashed, 
             Arrow[{$CellContext`ps2$, $CellContext`pe2$}]}, 
            Point[$CellContext`ps2$], 
            EdgeForm[
             Directive[$CellContext`c2$, 
              Thickness[$CellContext`thickness$]]], 
            FaceForm[None], 
            
            Rectangle[$CellContext`ps2$ - ((2/3) $CellContext`r$) {1, 
              1}, $CellContext`ps2$ + ((2/3) $CellContext`r$) {1, 1}], 
            Circle[$CellContext`pe2$, $CellContext`r$]}, {$CellContext`c1$, 
            Table[
             Arrow[{
               Part[$CellContext`path1$, $CellContext`i, 
                Span[1, All]], 
               Part[$CellContext`path1$, $CellContext`i + 1, 
                Span[1, All]]}], {$CellContext`i, 1, $CellContext`mvNum$}], 
            Arrow[{
              Part[$CellContext`path1$, $CellContext`mvNum$ + 1, 
               Span[1, All]], $CellContext`pm1$}], 
            Point[$CellContext`pm1$], {
             If[
              Or[
              Part[$CellContext`pm1$, 1] == 0, Part[$CellContext`pm1$, 2] == 
               0, Part[$CellContext`pm1$, 1] == 1, Part[$CellContext`pm1$, 2] == 
               1], {
               PointSize[0.005], White, 
               Point[$CellContext`pm1$]}]}}, {$CellContext`c2$, 
            Table[
             Arrow[{
               Part[$CellContext`path2$, $CellContext`i, 
                Span[1, All]], 
               Part[$CellContext`path2$, $CellContext`i + 1, 
                Span[1, All]]}], {$CellContext`i, 1, $CellContext`mvNum$}], 
            Arrow[{
              Part[$CellContext`path2$, $CellContext`mvNum$ + 1, 
               Span[1, All]], $CellContext`pm2$}], 
            Point[$CellContext`pm2$], {
             If[
              Or[
              Part[$CellContext`pm2$, 1] == 0, Part[$CellContext`pm2$, 2] == 
               0, Part[$CellContext`pm2$, 1] == 1, Part[$CellContext`pm2$, 2] == 
               1], {
               PointSize[0.005], White, 
               Point[$CellContext`pm2$]}]}}, {
           If[$CellContext`mvNum$ + 1 == 
              Length[$CellContext`path$], {$CellContext`mvNum$ = 
               Length[$CellContext`path$] - 2, $CellContext`mvFrac$ = 1}]; 
            Darker[Red], 
            Text[
             Style[
              StringForm[
              "Move `` of ``", $CellContext`mvNum$ + 1, 
               Length[$CellContext`path$] - 1], FontSize -> 18], {1.55, 0.9}], 
            Text[
             Style[
              StringForm["Total distance `` ", 
               Round[
                N[
                 Total[
                  Table[
                   EuclideanDistance[
                    Part[$CellContext`path$, $CellContext`i], {0, 
                    0}], {$CellContext`i, 2, 
                    Length[$CellContext`path$]}]]], 0.01]], FontSize -> 18], {
             1.55, 0.8}], $CellContext`offset$ = {1.55, 0.5} - (1/2) 
              Part[$CellContext`path$, $CellContext`mvNum$ + 2, 
                Span[1, All]]; {
              Opacity[0.3], 
              
              Arrow[{$CellContext`offset$, $CellContext`offset$ + 
                Part[$CellContext`path$, $CellContext`mvNum$ + 2, 
                  Span[1, All]]}]}, 
            
            Point[$CellContext`offset$ + $CellContext`mvFrac$ 
              Part[$CellContext`path$, $CellContext`mvNum$ + 2, 
                Span[1, All]]], 
            
            Arrow[{$CellContext`offset$, $CellContext`offset$ + \
$CellContext`mvFrac$ Part[$CellContext`path$, $CellContext`mvNum$ + 2, 
                 Span[1, All]]}]}}, ImageSize -> 600, 
          PlotRange -> {{-0.05, 2.05}, {-0.05, 1.05}}]], 
      "Specifications" :> {{{$CellContext`progress$$, 1, "progress"}, 0, 1, 
         Rational[1, 420], ControlType -> Slider, Appearance -> "Labeled", 
         ControlPlacement -> 1}, {{$CellContext`\[Epsilon]$$, 
          Rational[1, 1000], "\[Epsilon]"}, 
         Rational[1, 1000], 
         Rational[1, 10], 
         Rational[1, 1000], ControlType -> Slider, Appearance -> "Labeled", 
         ControlPlacement -> 2}, 
        Row[{
          Manipulate`Place[1], 
          Manipulate`Place[2]}], {{$CellContext`s1$$, {
           Rational[3, 4], 
           Rational[1, 5]}}, 
         Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
         Dynamic[{1, 1} - $CellContext`\[Epsilon]$$], ControlType -> Locator, 
         Appearance -> None}, {{$CellContext`s2$$, {
           Rational[1, 4], 
           Rational[4, 5]}}, 
         Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
         Dynamic[{1, 1} - $CellContext`\[Epsilon]$$], ControlType -> Locator, 
         Appearance -> None}, {{$CellContext`e1$$, {
           Rational[2, 3], 
           Rational[1, 2]}}, 
         Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
         Dynamic[{1, 1} - $CellContext`\[Epsilon]$$], ControlType -> Locator, 
         Appearance -> None}, {{$CellContext`e2$$, {
           Rational[1, 2], 
           Rational[2, 3]}}, 
         Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
         Dynamic[{1, 1} - $CellContext`\[Epsilon]$$], ControlType -> Locator, 
         Appearance -> None}}, "Options" :> {}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{572., {163., 168.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`RotateCCW90[
         Pattern[$CellContext`r, 
          Blank[]]] := {
         Part[$CellContext`r, 2], 1 - 
         Part[$CellContext`r, 1]}, $CellContext`achieveDesiredSpacing[
         Pattern[$CellContext`ps1, 
          Blank[]], 
         Pattern[$CellContext`ps2, 
          Blank[]], 
         Pattern[$CellContext`pe1, 
          Blank[]], 
         Pattern[$CellContext`pe2, 
          Blank[]], 
         Pattern[$CellContext`\[Epsilon], 
          Blank[]]] := 
       Module[{$CellContext`\[CapitalDelta]ey = 
          Part[$CellContext`pe2, 2] - 
           Part[$CellContext`pe1, 2], $CellContext`\[CapitalDelta]ex = 
          Part[$CellContext`pe2, 1] - 
           Part[$CellContext`pe1, 1], $CellContext`L = 
          1, $CellContext`\[CapitalDelta]r, $CellContext`r1, $CellContext`r2, \
$CellContext`moves, $CellContext`pm1, $CellContext`pm2}, $CellContext`r2 = \
$CellContext`ps2; $CellContext`r1 = $CellContext`ps1; $CellContext`moves = {{
           0, 0}}; $CellContext`pm1 = {$CellContext`r1}; $CellContext`pm2 = \
{$CellContext`r2}; 
         If[$CellContext`pe1 - $CellContext`ps1 == $CellContext`pe2 - \
$CellContext`ps2, $CellContext`\[CapitalDelta]r = $CellContext`pe1 - \
$CellContext`ps1; AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
           AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]; 
           AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]; 
           AppendTo[$CellContext`pm1, $CellContext`r1]; 
           AppendTo[$CellContext`pm2, $CellContext`r2]; 
           Return[{$CellContext`moves, $CellContext`pm1, $CellContext`pm2}]]; 
         If[
           
           And[$CellContext`\[CapitalDelta]ex > 
            0, $CellContext`\[CapitalDelta]ey < 
            0, $CellContext`\[CapitalDelta]ex - (Part[$CellContext`ps2, 1] - 
             Part[$CellContext`ps1, 1]) < 
            0, $CellContext`\[CapitalDelta]ey - (Part[$CellContext`ps2, 2] - 
             Part[$CellContext`ps1, 2]) > 0], 
           Module[{$CellContext`BestDir}, $CellContext`BestDir = Part[
               
               Sort[{{"u", (Part[$CellContext`pe1, 1] - 
                    Part[$CellContext`ps1, 1])^2 + (2 $CellContext`L - 
                    Part[$CellContext`pe1, 2] - 
                    Part[$CellContext`ps1, 
                    2])^2 + $CellContext`effectContractMv1[$CellContext`ps1, \
$CellContext`ps2, $CellContext`pe1, $CellContext`pe2, "u"]}, {
                 "d", (Part[$CellContext`pe2, 1] - 
                    Part[$CellContext`ps2, 1])^2 + (Part[$CellContext`pe2, 2] + 
                    Part[$CellContext`ps2, 
                    2])^2 + $CellContext`effectContractMv1[$CellContext`ps1, \
$CellContext`ps2, $CellContext`pe1, $CellContext`pe2, "d"]}, {
                 "l", (Part[$CellContext`pe1, 1] + 
                    Part[$CellContext`ps1, 1])^2 + (Part[$CellContext`pe1, 2] - 
                    Part[$CellContext`ps1, 
                    2])^2 + $CellContext`effectContractMv1[$CellContext`ps1, \
$CellContext`ps2, $CellContext`pe1, $CellContext`pe2, "l"]}, {
                 "r", (2 $CellContext`L - Part[$CellContext`pe2, 1] - 
                    Part[$CellContext`ps2, 1])^2 + (Part[$CellContext`pe2, 2] - 
                    Part[$CellContext`ps2, 
                    2])^2 + $CellContext`effectContractMv1[$CellContext`ps1, \
$CellContext`ps2, $CellContext`pe1, $CellContext`pe2, "r"]}}, Part[#, 2] < 
                Part[#2, 2]& ], 1, 
               1]; $CellContext`\[CapitalDelta]r = \
$CellContext`contractMv1[$CellContext`ps1, $CellContext`ps2, \
$CellContext`pe1, $CellContext`pe2, $CellContext`BestDir]; 
            AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
            AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]; 
            AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]; 
            AppendTo[$CellContext`pm1, $CellContext`r1]; 
            AppendTo[$CellContext`pm2, $CellContext`r2]; 
            Which[$CellContext`BestDir == 
              "u", $CellContext`\[CapitalDelta]r = {$CellContext`\
\[CapitalDelta]ex - (Part[$CellContext`r2, 1] - 
                 Part[$CellContext`r1, 1]), $CellContext`\[CapitalDelta]ey - (
                 Part[$CellContext`r2, 2] - Part[$CellContext`r1, 2])}; 
              AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r], \
$CellContext`BestDir == 
              "d", $CellContext`\[CapitalDelta]r = {
                Part[$CellContext`r2, 1] - 
                 Part[$CellContext`r1, 1] - $CellContext`\[CapitalDelta]ex, (
                  Part[$CellContext`r2, 2] - 
                  Part[$CellContext`r1, 2]) - $CellContext`\[CapitalDelta]ey}; 
              AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r], \
$CellContext`BestDir == 
              "l", $CellContext`\[CapitalDelta]r = {$CellContext`\
\[CapitalDelta]ex - (Part[$CellContext`r2, 1] - 
                 Part[$CellContext`r1, 1]), $CellContext`\[CapitalDelta]ey - (
                 Part[$CellContext`r2, 2] - Part[$CellContext`r1, 2])}; 
              AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r], \
$CellContext`BestDir == 
              "r", $CellContext`\[CapitalDelta]r = {
                Part[$CellContext`r2, 1] - 
                 Part[$CellContext`r1, 1] - $CellContext`\[CapitalDelta]ex, (
                  Part[$CellContext`r2, 2] - 
                  Part[$CellContext`r1, 2]) - $CellContext`\[CapitalDelta]ey}; 
              AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]; Null]; 
            AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
            AppendTo[$CellContext`pm1, $CellContext`r1]; 
            AppendTo[$CellContext`pm2, $CellContext`r2]; $CellContext`\
\[CapitalDelta]r = {
              Part[$CellContext`pe2, 1] - Part[$CellContext`r2, 1], 
               Part[$CellContext`pe2, 2] - Part[$CellContext`r2, 2]}; 
            AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]; 
            AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]; 
            AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
            AppendTo[$CellContext`pm1, $CellContext`r1]; 
            AppendTo[$CellContext`pm2, $CellContext`r2]; 
            Return[{$CellContext`moves, $CellContext`pm1, \
$CellContext`pm2}]]]; $CellContext`\[CapitalDelta]r = {-
            Part[$CellContext`r1, 1], -Min[
               Part[$CellContext`r2, 2], 
               Part[$CellContext`r1, 
                 2] + $CellContext`\[CapitalDelta]ey] + $CellContext`\
\[Epsilon]}; AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]; 
         AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]; 
         AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
         AppendTo[$CellContext`pm1, $CellContext`r1]; 
         AppendTo[$CellContext`pm2, $CellContext`r2]; $CellContext`\
\[CapitalDelta]r = {-Part[$CellContext`r2, 1], Abs[
               Sign[$CellContext`\[CapitalDelta]ey]] 
             Min[Part[$CellContext`r1, 2] - 
               Part[$CellContext`r2, 
                2] + $CellContext`\[CapitalDelta]ey - \
$CellContext`\[Epsilon], $CellContext`L - 
               Part[$CellContext`r2, 
                2] - $CellContext`\[Epsilon]] + $CellContext`\[Epsilon]}; 
         If[Part[$CellContext`r1, 1] > 0, 
           AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]]; 
         If[Part[$CellContext`r2, 1] > 0, 
           AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]]; 
         AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
         AppendTo[$CellContext`pm1, $CellContext`r1]; 
         AppendTo[$CellContext`pm2, $CellContext`r2]; $CellContext`\
\[CapitalDelta]r = {
            
            Max[$CellContext`\[Epsilon], (-
              Sign[Part[$CellContext`r2, 2] - 
                Part[$CellContext`r1, 2]]) $CellContext`\[CapitalDelta]ex], -
            Min[
              Part[$CellContext`r1, 2], 
              Part[$CellContext`r2, 2]]}; 
         AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]; 
         AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]; 
         AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
         AppendTo[$CellContext`pm1, $CellContext`r1]; 
         AppendTo[$CellContext`pm2, $CellContext`r2]; $CellContext`\
\[CapitalDelta]r = {
            
            If[$CellContext`\[CapitalDelta]ex != 0, 
             Sign[Part[$CellContext`r2, 2] - 
               Part[$CellContext`r1, 2]] $CellContext`\[CapitalDelta]ex, Abs[
               
               Sign[$CellContext`\[CapitalDelta]ey - Part[$CellContext`r2, 2] + 
                Part[$CellContext`r1, 2]]] $CellContext`\[Epsilon]], (Abs[
               Sign[$CellContext`\[CapitalDelta]ey]] - 1) 
            Abs[Part[$CellContext`r1, 2] - Part[$CellContext`r2, 2]]}; 
         If[Part[$CellContext`r1, 2] > 0, 
           AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]]; 
         If[Part[$CellContext`r2, 2] > 0, 
           AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]]; 
         AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
         AppendTo[$CellContext`pm1, $CellContext`r1]; 
         AppendTo[$CellContext`pm2, $CellContext`r2]; 
         If[$CellContext`\[CapitalDelta]ey != 
           Part[$CellContext`r2, 2] - 
            Part[$CellContext`r1, 
             2], $CellContext`\[CapitalDelta]r = {$CellContext`L - Max[
               Part[$CellContext`r1, 1], 
               Part[$CellContext`r2, 1]], 
              
              If[$CellContext`\[CapitalDelta]ex < 
               0, $CellContext`\[Epsilon], $CellContext`\[CapitalDelta]ey - 
               Max[
                Part[$CellContext`r1, 2], 
                Part[$CellContext`r2, 2]]]}; 
           AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]; 
           AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]; 
           AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
           AppendTo[$CellContext`pm1, $CellContext`r1]; 
           AppendTo[$CellContext`pm2, $CellContext`r2]; $CellContext`\
\[CapitalDelta]r = {(-(Abs[
                  Sign[$CellContext`\[CapitalDelta]ex]] - 
                1)) $CellContext`\[Epsilon], 
              If[$CellContext`\[CapitalDelta]ex != 0, -
                Sign[$CellContext`\[CapitalDelta]ex], -Sign[Max[
                    Part[$CellContext`r1, 1], 
                    Part[$CellContext`r2, 1]] - Min[
                   Part[$CellContext`r1, 1], 
                   
                   Part[$CellContext`r2, 
                    1]]]] ($CellContext`\[CapitalDelta]ey - Max[
                Part[$CellContext`r2, 2], 
                Part[$CellContext`r1, 2]] + Min[
                 Part[$CellContext`r2, 2], 
                 Part[$CellContext`r1, 2]])}; If[Part[$CellContext`r1, 1] < 1, 
             AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]]; 
           If[Part[$CellContext`r2, 1] < 1, 
             AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]]; 
           AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
           AppendTo[$CellContext`pm1, $CellContext`r1]; 
           AppendTo[$CellContext`pm2, $CellContext`r2]]; $CellContext`\
\[CapitalDelta]r = {
           Part[$CellContext`pe2, 1] - Part[$CellContext`r2, 1], 
            Part[$CellContext`pe2, 2] - Part[$CellContext`r2, 2]}; 
         AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]; 
         AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]; 
         AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
         AppendTo[$CellContext`pm1, $CellContext`r1]; 
         AppendTo[$CellContext`pm2, $CellContext`r2]; 
         Return[{$CellContext`moves, $CellContext`pm1, $CellContext`pm2}]], \
$CellContext`effectContractMv1[
         Pattern[$CellContext`ps1, 
          Blank[]], 
         Pattern[$CellContext`ps2, 
          Blank[]], 
         Pattern[$CellContext`pe1, 
          Blank[]], 
         Pattern[$CellContext`pe2, 
          Blank[]], 
         Pattern[$CellContext`BestDir, 
          Blank[]]] := 
       Module[{$CellContext`\[CapitalDelta]r, $CellContext`r1, \
$CellContext`r2}, $CellContext`\[CapitalDelta]r = \
$CellContext`contractMv1[$CellContext`ps1, $CellContext`ps2, \
$CellContext`pe1, $CellContext`pe2, $CellContext`BestDir]; $CellContext`r1 = \
$CellContext`ps1 + $CellContext`\[CapitalDelta]r; $CellContext`r2 = \
$CellContext`ps2 + $CellContext`\[CapitalDelta]r; If[
           Or[
           Part[$CellContext`r1, 1] < 0, Part[$CellContext`r1, 1] > 1, 
            Part[$CellContext`r1, 2] < 0, Part[$CellContext`r1, 2] > 1, 
            Part[$CellContext`r2, 1] < 0, Part[$CellContext`r2, 1] > 1, 
            Part[$CellContext`r2, 2] < 0, Part[$CellContext`r2, 2] > 1], 
           Infinity, 0]], $CellContext`contractMv1[
         Pattern[$CellContext`ps1, 
          Blank[]], 
         Pattern[$CellContext`ps2, 
          Blank[]], 
         Pattern[$CellContext`pe1, 
          Blank[]], 
         Pattern[$CellContext`pe2, 
          Blank[]], 
         Pattern[$CellContext`BestDir, 
          Blank[]]] := 
       Module[{$CellContext`\[CapitalDelta]r}, 
         Which[$CellContext`BestDir == 
           "u", $CellContext`\[CapitalDelta]r = {((1 - 
                Part[$CellContext`ps1, 2])/(2 - Part[$CellContext`ps1, 2] - 
               Part[$CellContext`pe1, 2])) (Part[$CellContext`pe2, 1] - 
               Part[$CellContext`ps2, 1]), 1 - Part[$CellContext`ps1, 2]}; 
           Null, $CellContext`BestDir == 
           "d", $CellContext`\[CapitalDelta]r = {(Part[$CellContext`ps2, 2]/(
               Part[$CellContext`ps2, 2] + Part[$CellContext`pe2, 2])) (
               Part[$CellContext`pe2, 1] - Part[$CellContext`ps2, 1]), -
              Part[$CellContext`ps2, 2]}; Null, $CellContext`BestDir == 
           "l", $CellContext`\[CapitalDelta]r = {-
              Part[$CellContext`ps1, 1], (Part[$CellContext`ps1, 1]/(
               Part[$CellContext`ps1, 1] + Part[$CellContext`pe1, 1])) (
               Part[$CellContext`pe2, 2] - Part[$CellContext`ps2, 2])}; 
           Null, $CellContext`BestDir == 
           "r", $CellContext`\[CapitalDelta]r = {
             1 - Part[$CellContext`ps2, 1], ((1 - Part[$CellContext`ps2, 1])/(
               2 - Part[$CellContext`ps2, 1] - Part[$CellContext`pe2, 1])) (
               Part[$CellContext`pe2, 2] - Part[$CellContext`ps2, 2])}; Null]; 
         Return[$CellContext`\[CapitalDelta]r]], $CellContext`RotateCW90[
         Pattern[$CellContext`r, 
          Blank[]]] := {1 - Part[$CellContext`r, 2], 
         Part[$CellContext`r, 1]}, $CellContext`RotateCW90inplace[
         Pattern[$CellContext`r, 
          Blank[]]] := {-Part[$CellContext`r, 2], 
         Part[$CellContext`r, 1]}, Attributes[PlotRange] = {ReadProtected}}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.6567011401579103`*^9, 3.656701264683568*^9, {3.69145279129803*^9, 
   3.691452817347315*^9}, 3.691452860966983*^9, {3.691453136111508*^9, 
   3.69145320988822*^9}, {3.691453803148247*^9, 3.6914538232682247`*^9}, 
   3.6914538633410892`*^9},
 CellID->51764781]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SnapshotsSection"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`e1$$ = {0.678, 0.56}, $CellContext`e2$$ = {
    0.48200000000000004`, 0.668}, $CellContext`progress$$ = Rational[
    2, 3], $CellContext`s1$$ = {0.75, 0.2}, $CellContext`s2$$ = {0.188, 
    0.8540000000000001}, $CellContext`\[Epsilon]$$ = Rational[1, 40], 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`progress$$], 1, "progress"}, 0, 1, 
      Rational[1, 420]}, {{
       Hold[$CellContext`\[Epsilon]$$], 
       Rational[1, 1000], "\[Epsilon]"}, 
      Rational[1, 1000], 
      Rational[1, 10], 
      Rational[1, 1000]}, {
      Hold[
       Row[{
         Manipulate`Place[1], 
         Manipulate`Place[2]}]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`s1$$], {
        Rational[3, 4], 
        Rational[1, 5]}}, 
      Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
      Dynamic[{1, 1} - $CellContext`\[Epsilon]$$]}, {{
       Hold[$CellContext`s2$$], {
        Rational[1, 4], 
        Rational[4, 5]}}, 
      Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
      Dynamic[{1, 1} - $CellContext`\[Epsilon]$$]}, {{
       Hold[$CellContext`e1$$], {
        Rational[2, 3], 
        Rational[1, 2]}}, 
      Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
      Dynamic[{1, 1} - $CellContext`\[Epsilon]$$]}, {{
       Hold[$CellContext`e2$$], {
        Rational[1, 2], 
        Rational[2, 3]}}, 
      Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
      Dynamic[{1, 1} - $CellContext`\[Epsilon]$$]}}, Typeset`size$$ = {
    450., {117., 119.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False, $CellContext`progress$2293011$$ = 
    0, $CellContext`\[Epsilon]$2293012$$ = 0, $CellContext`s1$2293013$$ = 
    0, $CellContext`s2$2293014$$ = 0, $CellContext`e1$2293015$$ = 
    0, $CellContext`e2$2293016$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, "Variables" :> {$CellContext`e1$$ = {
          Rational[2, 3], 
          Rational[1, 2]}, $CellContext`e2$$ = {
          Rational[1, 2], 
          Rational[2, 3]}, $CellContext`progress$$ = 1, $CellContext`s1$$ = {
          Rational[3, 4], 
          Rational[1, 5]}, $CellContext`s2$$ = {
          Rational[1, 4], 
          Rational[4, 5]}, $CellContext`\[Epsilon]$$ = Rational[1, 1000]}, 
      "ControllerVariables" :> {
        Hold[$CellContext`progress$$, $CellContext`progress$2293011$$, 0], 
        Hold[$CellContext`\[Epsilon]$$, $CellContext`\[Epsilon]$2293012$$, 0], 
        Hold[$CellContext`s1$$, $CellContext`s1$2293013$$, 0], 
        Hold[$CellContext`s2$$, $CellContext`s2$2293014$$, 0], 
        Hold[$CellContext`e1$$, $CellContext`e1$2293015$$, 0], 
        Hold[$CellContext`e2$$, $CellContext`e2$2293016$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`movesAndPositions$, $CellContext`path$, \
$CellContext`path1$, $CellContext`path2$, $CellContext`r$ = 
         1/40, $CellContext`thickness$ = 
         0.002, $CellContext`rotateSolution$, $CellContext`ps1$, \
$CellContext`pe1$, $CellContext`ps2$, $CellContext`pe2$, $CellContext`pm1$, \
$CellContext`pm2$, $CellContext`offset$, $CellContext`c1$ = 
         Blue, $CellContext`c2$ = 
         Magenta, $CellContext`mvNum$, $CellContext`mvFrac$}, 
        If[EuclideanDistance[$CellContext`s1$$, $CellContext`s2$$] < \
$CellContext`\[Epsilon]$$, 
          If[Part[$CellContext`s1$$, 1] < Part[$CellContext`s2$$, 1], 
           If[
           Part[$CellContext`s1$$, 1] > 2 $CellContext`\[Epsilon]$$, 
            Part[$CellContext`s1$$, 1] = 
            Part[$CellContext`s2$$, 1] - $CellContext`\[Epsilon]$$, 
            Part[$CellContext`s2$$, 1] = 
            Part[$CellContext`s1$$, 1] + $CellContext`\[Epsilon]$$], 
           If[
           Part[$CellContext`s2$$, 1] > 2 $CellContext`\[Epsilon]$$, 
            Part[$CellContext`s2$$, 1] = 
            Part[$CellContext`s1$$, 1] - $CellContext`\[Epsilon]$$, 
            Part[$CellContext`s1$$, 1] = 
            Part[$CellContext`s2$$, 1] + $CellContext`\[Epsilon]$$]]]; 
        If[EuclideanDistance[$CellContext`e1$$, $CellContext`e2$$] < \
$CellContext`\[Epsilon]$$, 
          If[Part[$CellContext`e1$$, 1] < Part[$CellContext`e2$$, 1], 
           If[
           Part[$CellContext`e1$$, 1] > 2 $CellContext`\[Epsilon]$$, 
            Part[$CellContext`e1$$, 1] = 
            Part[$CellContext`e2$$, 1] - $CellContext`\[Epsilon]$$, 
            Part[$CellContext`e2$$, 1] = 
            Part[$CellContext`e1$$, 1] + $CellContext`\[Epsilon]$$], 
           If[
           Part[$CellContext`e2$$, 1] > 2 $CellContext`\[Epsilon]$$, 
            Part[$CellContext`e2$$, 1] = 
            Part[$CellContext`e1$$, 1] - $CellContext`\[Epsilon]$$, 
            Part[$CellContext`e1$$, 1] = 
            Part[$CellContext`e2$$, 
               1] + $CellContext`\[Epsilon]$$]]]; {$CellContext`ps1$, \
$CellContext`pe1$, $CellContext`ps2$, $CellContext`pe2$} = If[
           Or[Part[$CellContext`s1$$, 1] < Part[$CellContext`s2$$, 1], 
            And[
            Part[$CellContext`s1$$, 1] == Part[$CellContext`s2$$, 1], 
             Part[$CellContext`s1$$, 2] < 
             Part[$CellContext`s2$$, 
               2]]], {$CellContext`s1$$, $CellContext`e1$$, \
$CellContext`s2$$, $CellContext`e2$$}, {$CellContext`s2$$, $CellContext`e2$$, \
$CellContext`s1$$, $CellContext`e1$$}]; $CellContext`rotateSolution$ = 
         If[Part[$CellContext`ps1$, 2] < 
           Part[$CellContext`ps2$, 
             2], {$CellContext`ps1$, $CellContext`pe1$, $CellContext`ps2$, \
$CellContext`pe2$} = 
            Map[$CellContext`RotateCCW90, {$CellContext`ps1$, \
$CellContext`pe1$, $CellContext`ps2$, $CellContext`pe2$}]; True, 
           False]; {$CellContext`path$, $CellContext`path1$, \
$CellContext`path2$} = $CellContext`achieveDesiredSpacing[$CellContext`ps1$, \
$CellContext`ps2$, $CellContext`pe1$, $CellContext`pe2$, $CellContext`\
\[Epsilon]$$]; 
        If[$CellContext`rotateSolution$, {{$CellContext`ps1$, \
$CellContext`pe1$, $CellContext`ps2$, $CellContext`pe2$} = 
            Map[$CellContext`RotateCW90, {$CellContext`ps1$, \
$CellContext`pe1$, $CellContext`ps2$, $CellContext`pe2$}]; $CellContext`path$ = 
            Map[$CellContext`RotateCW90inplace, $CellContext`path$]; \
$CellContext`path1$ = 
            Map[$CellContext`RotateCW90, $CellContext`path1$]; \
$CellContext`path2$ = Map[$CellContext`RotateCW90, $CellContext`path2$]; 
           Null}]; $CellContext`mvNum$ = 
         Floor[$CellContext`progress$$ (Length[$CellContext`path$] - 
            1)]; $CellContext`mvFrac$ = 
         FractionalPart[$CellContext`progress$$ (Length[$CellContext`path$] - 
            1)]; $CellContext`pm2$ = 
         If[$CellContext`mvFrac$ > 0, 
           Part[$CellContext`path2$, $CellContext`mvNum$ + 1, 
             Span[1, All]] + $CellContext`mvFrac$ (
             Part[$CellContext`path2$, $CellContext`mvNum$ + 2, 
               Span[1, All]] - 
             Part[$CellContext`path2$, $CellContext`mvNum$ + 1, 
              Span[1, All]]), 
           Part[$CellContext`path2$, $CellContext`mvNum$ + 1, 
            Span[1, All]]]; $CellContext`pm1$ = 
         If[$CellContext`mvFrac$ > 0, 
           Part[$CellContext`path1$, $CellContext`mvNum$ + 1, 
             Span[1, All]] + $CellContext`mvFrac$ (
             Part[$CellContext`path1$, $CellContext`mvNum$ + 2, 
               Span[1, All]] - 
             Part[$CellContext`path1$, $CellContext`mvNum$ + 1, 
              Span[1, All]]), 
           Part[$CellContext`path1$, $CellContext`mvNum$ + 1, 
            Span[1, All]]]; Graphics[{{
            Darker[Red], 
            Rectangle[(-0.025) {1, 1}, 1.025 {1, 1}]}, {
            Lighter[Gray, 0.8], 
            Rectangle[{0, 0}, {1, 1}]}, {White, 
            
            Rectangle[{$CellContext`\[Epsilon]$$, $CellContext`\[Epsilon]$$}, \
{1 - $CellContext`\[Epsilon]$$, 1 - $CellContext`\[Epsilon]$$}]}, {
            Lighter[Gray, 0.8], 
            Disk[$CellContext`ps2$, $CellContext`\[Epsilon]$$]}, {
            Lighter[Gray, 0.8], 
            Disk[$CellContext`pe2$, $CellContext`\[Epsilon]$$]}, 
           PointSize[0.01], 
           Arrowheads[0.02], 
           Thickness[$CellContext`thickness$], {$CellContext`c1$, {
             Opacity[0.3], Dashed, 
             Arrow[{$CellContext`ps1$, $CellContext`pe1$}]}, 
            Point[$CellContext`ps1$], 
            EdgeForm[
             Directive[$CellContext`c1$, 
              Thickness[$CellContext`thickness$]]], 
            FaceForm[None], 
            
            Rectangle[$CellContext`ps1$ - (2/3) $CellContext`r$ {1, 
              1}, $CellContext`ps1$ + (2/3) $CellContext`r$ {1, 1}], 
            Circle[$CellContext`pe1$, $CellContext`r$]}, {$CellContext`c2$, {
             Opacity[0.3], Dashed, 
             Arrow[{$CellContext`ps2$, $CellContext`pe2$}]}, 
            Point[$CellContext`ps2$], 
            EdgeForm[
             Directive[$CellContext`c2$, 
              Thickness[$CellContext`thickness$]]], 
            FaceForm[None], 
            
            Rectangle[$CellContext`ps2$ - (2/3) $CellContext`r$ {1, 
              1}, $CellContext`ps2$ + (2/3) $CellContext`r$ {1, 1}], 
            Circle[$CellContext`pe2$, $CellContext`r$]}, {$CellContext`c1$, 
            Table[
             Arrow[{
               Part[$CellContext`path1$, $CellContext`i, 
                Span[1, All]], 
               Part[$CellContext`path1$, $CellContext`i + 1, 
                Span[1, All]]}], {$CellContext`i, 1, $CellContext`mvNum$}], 
            Arrow[{
              Part[$CellContext`path1$, $CellContext`mvNum$ + 1, 
               Span[1, All]], $CellContext`pm1$}], 
            Point[$CellContext`pm1$], {
             If[
              Or[
              Part[$CellContext`pm1$, 1] == 0, Part[$CellContext`pm1$, 2] == 
               0, Part[$CellContext`pm1$, 1] == 1, Part[$CellContext`pm1$, 2] == 
               1], {
               PointSize[0.005], White, 
               Point[$CellContext`pm1$]}]}}, {$CellContext`c2$, 
            Table[
             Arrow[{
               Part[$CellContext`path2$, $CellContext`i, 
                Span[1, All]], 
               Part[$CellContext`path2$, $CellContext`i + 1, 
                Span[1, All]]}], {$CellContext`i, 1, $CellContext`mvNum$}], 
            Arrow[{
              Part[$CellContext`path2$, $CellContext`mvNum$ + 1, 
               Span[1, All]], $CellContext`pm2$}], 
            Point[$CellContext`pm2$], {
             If[
              Or[
              Part[$CellContext`pm2$, 1] == 0, Part[$CellContext`pm2$, 2] == 
               0, Part[$CellContext`pm2$, 1] == 1, Part[$CellContext`pm2$, 2] == 
               1], {
               PointSize[0.005], White, 
               Point[$CellContext`pm2$]}]}}, {
           If[$CellContext`mvNum$ + 1 == 
              Length[$CellContext`path$], {$CellContext`mvNum$ = 
               Length[$CellContext`path$] - 2, $CellContext`mvFrac$ = 1}]; 
            Darker[Red], 
            Text[
             Style[
              StringForm[
              "Move `` of ``", $CellContext`mvNum$ + 1, 
               Length[$CellContext`path$] - 1], FontSize -> 18], {1.55, 0.9}], 
            Text[
             Style[
              StringForm["Total distance `` ", 
               Round[
                N[
                 Total[
                  Table[
                   EuclideanDistance[
                    Part[$CellContext`path$, $CellContext`i], {0, 
                    0}], {$CellContext`i, 2, 
                    Length[$CellContext`path$]}]]], 0.01]], FontSize -> 18], {
             1.55, 0.8}], $CellContext`offset$ = {1.55, 0.5} - (1/2) 
              Part[$CellContext`path$, $CellContext`mvNum$ + 2, 
                Span[1, All]]; {
              Opacity[0.3], 
              Arrow[{$CellContext`offset$, $CellContext`offset$ + 
                Part[$CellContext`path$, $CellContext`mvNum$ + 2, 
                  Span[1, All]]}]}, 
            
            Point[$CellContext`offset$ + $CellContext`mvFrac$ 
              Part[$CellContext`path$, $CellContext`mvNum$ + 2, 
                Span[1, All]]], 
            
            Arrow[{$CellContext`offset$, $CellContext`offset$ + \
$CellContext`mvFrac$ Part[$CellContext`path$, $CellContext`mvNum$ + 2, 
                 Span[1, All]]}]}}, ImageSize -> 600, 
          PlotRange -> {{-0.05, 2.05}, {-0.05, 1.05}}]], 
      "Specifications" :> {{{$CellContext`progress$$, 1, "progress"}, 0, 1, 
         Rational[1, 420], ControlType -> Slider, Appearance -> "Labeled", 
         ControlPlacement -> 1}, {{$CellContext`\[Epsilon]$$, 
          Rational[1, 1000], "\[Epsilon]"}, 
         Rational[1, 1000], 
         Rational[1, 10], 
         Rational[1, 1000], ControlType -> Slider, Appearance -> "Labeled", 
         ControlPlacement -> 2}, 
        Row[{
          Manipulate`Place[1], 
          Manipulate`Place[2]}], {{$CellContext`s1$$, {
           Rational[3, 4], 
           Rational[1, 5]}}, 
         Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
         Dynamic[{1, 1} - $CellContext`\[Epsilon]$$], ControlType -> Locator, 
         Appearance -> None}, {{$CellContext`s2$$, {
           Rational[1, 4], 
           Rational[4, 5]}}, 
         Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
         Dynamic[{1, 1} - $CellContext`\[Epsilon]$$], ControlType -> Locator, 
         Appearance -> None}, {{$CellContext`e1$$, {
           Rational[2, 3], 
           Rational[1, 2]}}, 
         Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
         Dynamic[{1, 1} - $CellContext`\[Epsilon]$$], ControlType -> Locator, 
         Appearance -> None}, {{$CellContext`e2$$, {
           Rational[1, 2], 
           Rational[2, 3]}}, 
         Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
         Dynamic[{1, 1} - $CellContext`\[Epsilon]$$], ControlType -> Locator, 
         Appearance -> None}}, "Options" :> {}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{489., {154., 157.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`RotateCCW90[
         Pattern[$CellContext`r, 
          Blank[]]] := {
         Part[$CellContext`r, 2], 1 - 
         Part[$CellContext`r, 1]}, $CellContext`achieveDesiredSpacing[
         Pattern[$CellContext`ps1, 
          Blank[]], 
         Pattern[$CellContext`ps2, 
          Blank[]], 
         Pattern[$CellContext`pe1, 
          Blank[]], 
         Pattern[$CellContext`pe2, 
          Blank[]], 
         Pattern[$CellContext`\[Epsilon], 
          Blank[]]] := 
       Module[{$CellContext`\[CapitalDelta]ey = 
          Part[$CellContext`pe2, 2] - 
           Part[$CellContext`pe1, 2], $CellContext`\[CapitalDelta]ex = 
          Part[$CellContext`pe2, 1] - 
           Part[$CellContext`pe1, 1], $CellContext`L = 
          1, $CellContext`\[CapitalDelta]r, $CellContext`r1, $CellContext`r2, \
$CellContext`moves, $CellContext`pm1, $CellContext`pm2}, $CellContext`r2 = \
$CellContext`ps2; $CellContext`r1 = $CellContext`ps1; $CellContext`moves = {{
           0, 0}}; $CellContext`pm1 = {$CellContext`r1}; $CellContext`pm2 = \
{$CellContext`r2}; 
         If[$CellContext`pe1 - $CellContext`ps1 == $CellContext`pe2 - \
$CellContext`ps2, $CellContext`\[CapitalDelta]r = $CellContext`pe1 - \
$CellContext`ps1; AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
           AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]; 
           AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]; 
           AppendTo[$CellContext`pm1, $CellContext`r1]; 
           AppendTo[$CellContext`pm2, $CellContext`r2]; 
           Return[{$CellContext`moves, $CellContext`pm1, $CellContext`pm2}]]; 
         If[
           
           And[$CellContext`\[CapitalDelta]ex > 
            0, $CellContext`\[CapitalDelta]ey < 
            0, $CellContext`\[CapitalDelta]ex - (Part[$CellContext`ps2, 1] - 
             Part[$CellContext`ps1, 1]) < 
            0, $CellContext`\[CapitalDelta]ey - (Part[$CellContext`ps2, 2] - 
             Part[$CellContext`ps1, 2]) > 0], 
           Module[{$CellContext`BestDir}, $CellContext`BestDir = Part[
               
               Sort[{{"u", (Part[$CellContext`pe1, 1] - 
                    Part[$CellContext`ps1, 1])^2 + (2 $CellContext`L - 
                    Part[$CellContext`pe1, 2] - 
                    Part[$CellContext`ps1, 
                    2])^2 + $CellContext`effectContractMv1[$CellContext`ps1, \
$CellContext`ps2, $CellContext`pe1, $CellContext`pe2, "u"]}, {
                 "d", (Part[$CellContext`pe2, 1] - 
                    Part[$CellContext`ps2, 1])^2 + (Part[$CellContext`pe2, 2] + 
                    Part[$CellContext`ps2, 
                    2])^2 + $CellContext`effectContractMv1[$CellContext`ps1, \
$CellContext`ps2, $CellContext`pe1, $CellContext`pe2, "d"]}, {
                 "l", (Part[$CellContext`pe1, 1] + 
                    Part[$CellContext`ps1, 1])^2 + (Part[$CellContext`pe1, 2] - 
                    Part[$CellContext`ps1, 
                    2])^2 + $CellContext`effectContractMv1[$CellContext`ps1, \
$CellContext`ps2, $CellContext`pe1, $CellContext`pe2, "l"]}, {
                 "r", (2 $CellContext`L - Part[$CellContext`pe2, 1] - 
                    Part[$CellContext`ps2, 1])^2 + (Part[$CellContext`pe2, 2] - 
                    Part[$CellContext`ps2, 
                    2])^2 + $CellContext`effectContractMv1[$CellContext`ps1, \
$CellContext`ps2, $CellContext`pe1, $CellContext`pe2, "r"]}}, Part[#, 2] < 
                Part[#2, 2]& ], 1, 
               1]; $CellContext`\[CapitalDelta]r = \
$CellContext`contractMv1[$CellContext`ps1, $CellContext`ps2, \
$CellContext`pe1, $CellContext`pe2, $CellContext`BestDir]; 
            AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
            AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]; 
            AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]; 
            AppendTo[$CellContext`pm1, $CellContext`r1]; 
            AppendTo[$CellContext`pm2, $CellContext`r2]; 
            Which[$CellContext`BestDir == 
              "u", $CellContext`\[CapitalDelta]r = {$CellContext`\
\[CapitalDelta]ex - (Part[$CellContext`r2, 1] - 
                 Part[$CellContext`r1, 1]), $CellContext`\[CapitalDelta]ey - (
                 Part[$CellContext`r2, 2] - Part[$CellContext`r1, 2])}; 
              AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r], \
$CellContext`BestDir == 
              "d", $CellContext`\[CapitalDelta]r = {
                Part[$CellContext`r2, 1] - 
                 Part[$CellContext`r1, 1] - $CellContext`\[CapitalDelta]ex, (
                  Part[$CellContext`r2, 2] - 
                  Part[$CellContext`r1, 2]) - $CellContext`\[CapitalDelta]ey}; 
              AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r], \
$CellContext`BestDir == 
              "l", $CellContext`\[CapitalDelta]r = {$CellContext`\
\[CapitalDelta]ex - (Part[$CellContext`r2, 1] - 
                 Part[$CellContext`r1, 1]), $CellContext`\[CapitalDelta]ey - (
                 Part[$CellContext`r2, 2] - Part[$CellContext`r1, 2])}; 
              AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r], \
$CellContext`BestDir == 
              "r", $CellContext`\[CapitalDelta]r = {
                Part[$CellContext`r2, 1] - 
                 Part[$CellContext`r1, 1] - $CellContext`\[CapitalDelta]ex, (
                  Part[$CellContext`r2, 2] - 
                  Part[$CellContext`r1, 2]) - $CellContext`\[CapitalDelta]ey}; 
              AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]; Null]; 
            AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
            AppendTo[$CellContext`pm1, $CellContext`r1]; 
            AppendTo[$CellContext`pm2, $CellContext`r2]; $CellContext`\
\[CapitalDelta]r = {
              Part[$CellContext`pe2, 1] - Part[$CellContext`r2, 1], 
               Part[$CellContext`pe2, 2] - Part[$CellContext`r2, 2]}; 
            AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]; 
            AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]; 
            AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
            AppendTo[$CellContext`pm1, $CellContext`r1]; 
            AppendTo[$CellContext`pm2, $CellContext`r2]; 
            Return[{$CellContext`moves, $CellContext`pm1, \
$CellContext`pm2}]]]; $CellContext`\[CapitalDelta]r = {-
            Part[$CellContext`r1, 1], -Min[
               Part[$CellContext`r2, 2], 
               Part[$CellContext`r1, 
                 2] + $CellContext`\[CapitalDelta]ey] + $CellContext`\
\[Epsilon]}; AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]; 
         AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]; 
         AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
         AppendTo[$CellContext`pm1, $CellContext`r1]; 
         AppendTo[$CellContext`pm2, $CellContext`r2]; $CellContext`\
\[CapitalDelta]r = {-Part[$CellContext`r2, 1], Abs[
               Sign[$CellContext`\[CapitalDelta]ey]] 
             Min[Part[$CellContext`r1, 2] - 
               Part[$CellContext`r2, 
                2] + $CellContext`\[CapitalDelta]ey - \
$CellContext`\[Epsilon], $CellContext`L - 
               Part[$CellContext`r2, 
                2] - $CellContext`\[Epsilon]] + $CellContext`\[Epsilon]}; 
         If[Part[$CellContext`r1, 1] > 0, 
           AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]]; 
         If[Part[$CellContext`r2, 1] > 0, 
           AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]]; 
         AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
         AppendTo[$CellContext`pm1, $CellContext`r1]; 
         AppendTo[$CellContext`pm2, $CellContext`r2]; $CellContext`\
\[CapitalDelta]r = {
            
            Max[$CellContext`\[Epsilon], (-
              Sign[Part[$CellContext`r2, 2] - 
                Part[$CellContext`r1, 2]]) $CellContext`\[CapitalDelta]ex], -
            Min[
              Part[$CellContext`r1, 2], 
              Part[$CellContext`r2, 2]]}; 
         AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]; 
         AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]; 
         AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
         AppendTo[$CellContext`pm1, $CellContext`r1]; 
         AppendTo[$CellContext`pm2, $CellContext`r2]; $CellContext`\
\[CapitalDelta]r = {
            
            If[$CellContext`\[CapitalDelta]ex != 0, 
             Sign[Part[$CellContext`r2, 2] - 
               Part[$CellContext`r1, 2]] $CellContext`\[CapitalDelta]ex, Abs[
               
               Sign[$CellContext`\[CapitalDelta]ey - Part[$CellContext`r2, 2] + 
                Part[$CellContext`r1, 2]]] $CellContext`\[Epsilon]], (Abs[
               Sign[$CellContext`\[CapitalDelta]ey]] - 1) 
            Abs[Part[$CellContext`r1, 2] - Part[$CellContext`r2, 2]]}; 
         If[Part[$CellContext`r1, 2] > 0, 
           AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]]; 
         If[Part[$CellContext`r2, 2] > 0, 
           AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]]; 
         AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
         AppendTo[$CellContext`pm1, $CellContext`r1]; 
         AppendTo[$CellContext`pm2, $CellContext`r2]; 
         If[$CellContext`\[CapitalDelta]ey != 
           Part[$CellContext`r2, 2] - 
            Part[$CellContext`r1, 
             2], $CellContext`\[CapitalDelta]r = {$CellContext`L - Max[
               Part[$CellContext`r1, 1], 
               Part[$CellContext`r2, 1]], 
              
              If[$CellContext`\[CapitalDelta]ex < 
               0, $CellContext`\[Epsilon], $CellContext`\[CapitalDelta]ey - 
               Max[
                Part[$CellContext`r1, 2], 
                Part[$CellContext`r2, 2]]]}; 
           AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]; 
           AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]; 
           AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
           AppendTo[$CellContext`pm1, $CellContext`r1]; 
           AppendTo[$CellContext`pm2, $CellContext`r2]; $CellContext`\
\[CapitalDelta]r = {(-(Abs[
                  Sign[$CellContext`\[CapitalDelta]ex]] - 
                1)) $CellContext`\[Epsilon], 
              If[$CellContext`\[CapitalDelta]ex != 0, -
                Sign[$CellContext`\[CapitalDelta]ex], -Sign[Max[
                    Part[$CellContext`r1, 1], 
                    Part[$CellContext`r2, 1]] - Min[
                   Part[$CellContext`r1, 1], 
                   
                   Part[$CellContext`r2, 
                    1]]]] ($CellContext`\[CapitalDelta]ey - Max[
                Part[$CellContext`r2, 2], 
                Part[$CellContext`r1, 2]] + Min[
                 Part[$CellContext`r2, 2], 
                 Part[$CellContext`r1, 2]])}; If[Part[$CellContext`r1, 1] < 1, 
             AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]]; 
           If[Part[$CellContext`r2, 1] < 1, 
             AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]]; 
           AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
           AppendTo[$CellContext`pm1, $CellContext`r1]; 
           AppendTo[$CellContext`pm2, $CellContext`r2]]; $CellContext`\
\[CapitalDelta]r = {
           Part[$CellContext`pe2, 1] - Part[$CellContext`r2, 1], 
            Part[$CellContext`pe2, 2] - Part[$CellContext`r2, 2]}; 
         AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]; 
         AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]; 
         AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
         AppendTo[$CellContext`pm1, $CellContext`r1]; 
         AppendTo[$CellContext`pm2, $CellContext`r2]; 
         Return[{$CellContext`moves, $CellContext`pm1, $CellContext`pm2}]], \
$CellContext`effectContractMv1[
         Pattern[$CellContext`ps1, 
          Blank[]], 
         Pattern[$CellContext`ps2, 
          Blank[]], 
         Pattern[$CellContext`pe1, 
          Blank[]], 
         Pattern[$CellContext`pe2, 
          Blank[]], 
         Pattern[$CellContext`BestDir, 
          Blank[]]] := 
       Module[{$CellContext`\[CapitalDelta]r, $CellContext`r1, \
$CellContext`r2}, $CellContext`\[CapitalDelta]r = \
$CellContext`contractMv1[$CellContext`ps1, $CellContext`ps2, \
$CellContext`pe1, $CellContext`pe2, $CellContext`BestDir]; $CellContext`r1 = \
$CellContext`ps1 + $CellContext`\[CapitalDelta]r; $CellContext`r2 = \
$CellContext`ps2 + $CellContext`\[CapitalDelta]r; If[
           Or[
           Part[$CellContext`r1, 1] < 0, Part[$CellContext`r1, 1] > 1, 
            Part[$CellContext`r1, 2] < 0, Part[$CellContext`r1, 2] > 1, 
            Part[$CellContext`r2, 1] < 0, Part[$CellContext`r2, 1] > 1, 
            Part[$CellContext`r2, 2] < 0, Part[$CellContext`r2, 2] > 1], 
           Infinity, 0]], $CellContext`contractMv1[
         Pattern[$CellContext`ps1, 
          Blank[]], 
         Pattern[$CellContext`ps2, 
          Blank[]], 
         Pattern[$CellContext`pe1, 
          Blank[]], 
         Pattern[$CellContext`pe2, 
          Blank[]], 
         Pattern[$CellContext`BestDir, 
          Blank[]]] := 
       Module[{$CellContext`\[CapitalDelta]r}, 
         Which[$CellContext`BestDir == 
           "u", $CellContext`\[CapitalDelta]r = {((1 - 
                Part[$CellContext`ps1, 2])/(2 - Part[$CellContext`ps1, 2] - 
               Part[$CellContext`pe1, 2])) (Part[$CellContext`pe2, 1] - 
               Part[$CellContext`ps2, 1]), 1 - Part[$CellContext`ps1, 2]}; 
           Null, $CellContext`BestDir == 
           "d", $CellContext`\[CapitalDelta]r = {(Part[$CellContext`ps2, 2]/(
               Part[$CellContext`ps2, 2] + Part[$CellContext`pe2, 2])) (
               Part[$CellContext`pe2, 1] - Part[$CellContext`ps2, 1]), -
              Part[$CellContext`ps2, 2]}; Null, $CellContext`BestDir == 
           "l", $CellContext`\[CapitalDelta]r = {-
              Part[$CellContext`ps1, 1], (Part[$CellContext`ps1, 1]/(
               Part[$CellContext`ps1, 1] + Part[$CellContext`pe1, 1])) (
               Part[$CellContext`pe2, 2] - Part[$CellContext`ps2, 2])}; 
           Null, $CellContext`BestDir == 
           "r", $CellContext`\[CapitalDelta]r = {
             1 - Part[$CellContext`ps2, 1], ((1 - Part[$CellContext`ps2, 1])/(
               2 - Part[$CellContext`ps2, 1] - Part[$CellContext`pe2, 1])) (
               Part[$CellContext`pe2, 2] - Part[$CellContext`ps2, 2])}; Null]; 
         Return[$CellContext`\[CapitalDelta]r]], $CellContext`RotateCW90[
         Pattern[$CellContext`r, 
          Blank[]]] := {1 - Part[$CellContext`r, 2], 
         Part[$CellContext`r, 1]}, $CellContext`RotateCW90inplace[
         Pattern[$CellContext`r, 
          Blank[]]] := {-Part[$CellContext`r, 2], 
         Part[$CellContext`r, 1]}, Attributes[PlotRange] = {ReadProtected}}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.6567011401579103`*^9, 3.656701264683568*^9, {3.69145279129803*^9, 
   3.691452817347315*^9}, 3.691452860966983*^9, {3.691453136111508*^9, 
   3.69145320988822*^9}, {3.691453803148247*^9, 3.6914538232682247`*^9}, 
   3.6914538633410892`*^9},
 CellID->1362875717],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`e1$$ = {
     Rational[3, 4], 
     Rational[1, 2]}, $CellContext`e2$$ = {
     Rational[1, 4], 
     Rational[1, 2]}, $CellContext`progress$$ = Rational[
    79, 140], $CellContext`s1$$ = {
     Rational[3, 4], 
     Rational[1, 5]}, $CellContext`s2$$ = {
     Rational[1, 4], 
     Rational[1, 5]}, $CellContext`\[Epsilon]$$ = Rational[1, 1000], 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`progress$$], 1, "progress"}, 0, 1, 
      Rational[1, 420]}, {{
       Hold[$CellContext`\[Epsilon]$$], 
       Rational[1, 1000], "\[Epsilon]"}, 
      Rational[1, 1000], 
      Rational[1, 10], 
      Rational[1, 1000]}, {
      Hold[
       Row[{
         Manipulate`Place[1], 
         Manipulate`Place[2]}]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`s1$$], {
        Rational[3, 4], 
        Rational[1, 5]}}, 
      Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
      Dynamic[{1, 1} - $CellContext`\[Epsilon]$$]}, {{
       Hold[$CellContext`s2$$], {
        Rational[1, 4], 
        Rational[1, 5]}}, 
      Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
      Dynamic[{1, 1} - $CellContext`\[Epsilon]$$]}, {{
       Hold[$CellContext`e1$$], {
        Rational[3, 4], 
        Rational[1, 2]}}, 
      Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
      Dynamic[{1, 1} - $CellContext`\[Epsilon]$$]}, {{
       Hold[$CellContext`e2$$], {
        Rational[1, 4], 
        Rational[1, 2]}}, 
      Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
      Dynamic[{1, 1} - $CellContext`\[Epsilon]$$]}}, Typeset`size$$ = {
    450., {117., 119.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False, $CellContext`progress$2299359$$ = 
    0, $CellContext`\[Epsilon]$2299360$$ = 0, $CellContext`s1$2299361$$ = 
    0, $CellContext`s2$2299362$$ = 0, $CellContext`e1$2299363$$ = 
    0, $CellContext`e2$2299364$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, "Variables" :> {$CellContext`e1$$ = {
          Rational[3, 4], 
          Rational[1, 2]}, $CellContext`e2$$ = {
          Rational[1, 4], 
          Rational[1, 2]}, $CellContext`progress$$ = 1, $CellContext`s1$$ = {
          Rational[3, 4], 
          Rational[1, 5]}, $CellContext`s2$$ = {
          Rational[1, 4], 
          Rational[1, 5]}, $CellContext`\[Epsilon]$$ = Rational[1, 1000]}, 
      "ControllerVariables" :> {
        Hold[$CellContext`progress$$, $CellContext`progress$2299359$$, 0], 
        Hold[$CellContext`\[Epsilon]$$, $CellContext`\[Epsilon]$2299360$$, 0], 
        Hold[$CellContext`s1$$, $CellContext`s1$2299361$$, 0], 
        Hold[$CellContext`s2$$, $CellContext`s2$2299362$$, 0], 
        Hold[$CellContext`e1$$, $CellContext`e1$2299363$$, 0], 
        Hold[$CellContext`e2$$, $CellContext`e2$2299364$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`movesAndPositions$, $CellContext`path$, \
$CellContext`path1$, $CellContext`path2$, $CellContext`r$ = 
         1/40, $CellContext`thickness$ = 
         0.002, $CellContext`rotateSolution$, $CellContext`ps1$, \
$CellContext`pe1$, $CellContext`ps2$, $CellContext`pe2$, $CellContext`pm1$, \
$CellContext`pm2$, $CellContext`offset$, $CellContext`c1$ = 
         Blue, $CellContext`c2$ = 
         Magenta, $CellContext`mvNum$, $CellContext`mvFrac$}, 
        If[EuclideanDistance[$CellContext`s1$$, $CellContext`s2$$] < \
$CellContext`\[Epsilon]$$, 
          If[Part[$CellContext`s1$$, 1] < Part[$CellContext`s2$$, 1], 
           If[
           Part[$CellContext`s1$$, 1] > 2 $CellContext`\[Epsilon]$$, 
            Part[$CellContext`s1$$, 1] = 
            Part[$CellContext`s2$$, 1] - $CellContext`\[Epsilon]$$, 
            Part[$CellContext`s2$$, 1] = 
            Part[$CellContext`s1$$, 1] + $CellContext`\[Epsilon]$$], 
           If[
           Part[$CellContext`s2$$, 1] > 2 $CellContext`\[Epsilon]$$, 
            Part[$CellContext`s2$$, 1] = 
            Part[$CellContext`s1$$, 1] - $CellContext`\[Epsilon]$$, 
            Part[$CellContext`s1$$, 1] = 
            Part[$CellContext`s2$$, 1] + $CellContext`\[Epsilon]$$]]]; 
        If[EuclideanDistance[$CellContext`e1$$, $CellContext`e2$$] < \
$CellContext`\[Epsilon]$$, 
          If[Part[$CellContext`e1$$, 1] < Part[$CellContext`e2$$, 1], 
           If[
           Part[$CellContext`e1$$, 1] > 2 $CellContext`\[Epsilon]$$, 
            Part[$CellContext`e1$$, 1] = 
            Part[$CellContext`e2$$, 1] - $CellContext`\[Epsilon]$$, 
            Part[$CellContext`e2$$, 1] = 
            Part[$CellContext`e1$$, 1] + $CellContext`\[Epsilon]$$], 
           If[
           Part[$CellContext`e2$$, 1] > 2 $CellContext`\[Epsilon]$$, 
            Part[$CellContext`e2$$, 1] = 
            Part[$CellContext`e1$$, 1] - $CellContext`\[Epsilon]$$, 
            Part[$CellContext`e1$$, 1] = 
            Part[$CellContext`e2$$, 
               1] + $CellContext`\[Epsilon]$$]]]; {$CellContext`ps1$, \
$CellContext`pe1$, $CellContext`ps2$, $CellContext`pe2$} = If[
           Or[Part[$CellContext`s1$$, 1] < Part[$CellContext`s2$$, 1], 
            And[
            Part[$CellContext`s1$$, 1] == Part[$CellContext`s2$$, 1], 
             Part[$CellContext`s1$$, 2] < 
             Part[$CellContext`s2$$, 
               2]]], {$CellContext`s1$$, $CellContext`e1$$, \
$CellContext`s2$$, $CellContext`e2$$}, {$CellContext`s2$$, $CellContext`e2$$, \
$CellContext`s1$$, $CellContext`e1$$}]; $CellContext`rotateSolution$ = 
         If[Part[$CellContext`ps1$, 2] < 
           Part[$CellContext`ps2$, 
             2], {$CellContext`ps1$, $CellContext`pe1$, $CellContext`ps2$, \
$CellContext`pe2$} = 
            
            Map[$CellContext`RotateCCW90, {$CellContext`ps1$, \
$CellContext`pe1$, $CellContext`ps2$, $CellContext`pe2$}]; True, 
           False]; {$CellContext`path$, $CellContext`path1$, \
$CellContext`path2$} = $CellContext`achieveDesiredSpacing[$CellContext`ps1$, \
$CellContext`ps2$, $CellContext`pe1$, $CellContext`pe2$, $CellContext`\
\[Epsilon]$$]; 
        If[$CellContext`rotateSolution$, {{$CellContext`ps1$, \
$CellContext`pe1$, $CellContext`ps2$, $CellContext`pe2$} = 
            Map[$CellContext`RotateCW90, {$CellContext`ps1$, \
$CellContext`pe1$, $CellContext`ps2$, $CellContext`pe2$}]; $CellContext`path$ = 
            Map[$CellContext`RotateCW90inplace, $CellContext`path$]; \
$CellContext`path1$ = 
            Map[$CellContext`RotateCW90, $CellContext`path1$]; \
$CellContext`path2$ = Map[$CellContext`RotateCW90, $CellContext`path2$]; 
           Null}]; $CellContext`mvNum$ = 
         Floor[$CellContext`progress$$ (Length[$CellContext`path$] - 
            1)]; $CellContext`mvFrac$ = 
         FractionalPart[$CellContext`progress$$ (Length[$CellContext`path$] - 
            1)]; $CellContext`pm2$ = 
         If[$CellContext`mvFrac$ > 0, 
           Part[$CellContext`path2$, $CellContext`mvNum$ + 1, 
             Span[1, All]] + $CellContext`mvFrac$ (
             Part[$CellContext`path2$, $CellContext`mvNum$ + 2, 
               Span[1, All]] - 
             Part[$CellContext`path2$, $CellContext`mvNum$ + 1, 
              Span[1, All]]), 
           Part[$CellContext`path2$, $CellContext`mvNum$ + 1, 
            Span[1, All]]]; $CellContext`pm1$ = 
         If[$CellContext`mvFrac$ > 0, 
           Part[$CellContext`path1$, $CellContext`mvNum$ + 1, 
             Span[1, All]] + $CellContext`mvFrac$ (
             Part[$CellContext`path1$, $CellContext`mvNum$ + 2, 
               Span[1, All]] - 
             Part[$CellContext`path1$, $CellContext`mvNum$ + 1, 
              Span[1, All]]), 
           Part[$CellContext`path1$, $CellContext`mvNum$ + 1, 
            Span[1, All]]]; Graphics[{{
            Darker[Red], 
            Rectangle[(-0.025) {1, 1}, 1.025 {1, 1}]}, {
            Lighter[Gray, 0.8], 
            Rectangle[{0, 0}, {1, 1}]}, {White, 
            
            Rectangle[{$CellContext`\[Epsilon]$$, $CellContext`\[Epsilon]$$}, \
{1 - $CellContext`\[Epsilon]$$, 1 - $CellContext`\[Epsilon]$$}]}, {
            Lighter[Gray, 0.8], 
            Disk[$CellContext`ps2$, $CellContext`\[Epsilon]$$]}, {
            Lighter[Gray, 0.8], 
            Disk[$CellContext`pe2$, $CellContext`\[Epsilon]$$]}, 
           PointSize[0.01], 
           Arrowheads[0.02], 
           Thickness[$CellContext`thickness$], {$CellContext`c1$, {
             Opacity[0.3], Dashed, 
             Arrow[{$CellContext`ps1$, $CellContext`pe1$}]}, 
            Point[$CellContext`ps1$], 
            EdgeForm[
             Directive[$CellContext`c1$, 
              Thickness[$CellContext`thickness$]]], 
            FaceForm[None], 
            
            Rectangle[$CellContext`ps1$ - (2/3) $CellContext`r$ {1, 
              1}, $CellContext`ps1$ + (2/3) $CellContext`r$ {1, 1}], 
            Circle[$CellContext`pe1$, $CellContext`r$]}, {$CellContext`c2$, {
             Opacity[0.3], Dashed, 
             Arrow[{$CellContext`ps2$, $CellContext`pe2$}]}, 
            Point[$CellContext`ps2$], 
            EdgeForm[
             Directive[$CellContext`c2$, 
              Thickness[$CellContext`thickness$]]], 
            FaceForm[None], 
            
            Rectangle[$CellContext`ps2$ - (2/3) $CellContext`r$ {1, 
              1}, $CellContext`ps2$ + (2/3) $CellContext`r$ {1, 1}], 
            Circle[$CellContext`pe2$, $CellContext`r$]}, {$CellContext`c1$, 
            Table[
             Arrow[{
               Part[$CellContext`path1$, $CellContext`i, 
                Span[1, All]], 
               Part[$CellContext`path1$, $CellContext`i + 1, 
                Span[1, All]]}], {$CellContext`i, 1, $CellContext`mvNum$}], 
            Arrow[{
              Part[$CellContext`path1$, $CellContext`mvNum$ + 1, 
               Span[1, All]], $CellContext`pm1$}], 
            Point[$CellContext`pm1$], {
             If[
              Or[
              Part[$CellContext`pm1$, 1] == 0, Part[$CellContext`pm1$, 2] == 
               0, Part[$CellContext`pm1$, 1] == 1, Part[$CellContext`pm1$, 2] == 
               1], {
               PointSize[0.005], White, 
               Point[$CellContext`pm1$]}]}}, {$CellContext`c2$, 
            Table[
             Arrow[{
               Part[$CellContext`path2$, $CellContext`i, 
                Span[1, All]], 
               Part[$CellContext`path2$, $CellContext`i + 1, 
                Span[1, All]]}], {$CellContext`i, 1, $CellContext`mvNum$}], 
            Arrow[{
              Part[$CellContext`path2$, $CellContext`mvNum$ + 1, 
               Span[1, All]], $CellContext`pm2$}], 
            Point[$CellContext`pm2$], {
             If[
              Or[
              Part[$CellContext`pm2$, 1] == 0, Part[$CellContext`pm2$, 2] == 
               0, Part[$CellContext`pm2$, 1] == 1, Part[$CellContext`pm2$, 2] == 
               1], {
               PointSize[0.005], White, 
               Point[$CellContext`pm2$]}]}}, {
           If[$CellContext`mvNum$ + 1 == 
              Length[$CellContext`path$], {$CellContext`mvNum$ = 
               Length[$CellContext`path$] - 2, $CellContext`mvFrac$ = 1}]; 
            Darker[Red], 
            Text[
             Style[
              StringForm[
              "Move `` of ``", $CellContext`mvNum$ + 1, 
               Length[$CellContext`path$] - 1], FontSize -> 18], {1.55, 0.9}], 
            Text[
             Style[
              StringForm["Total distance `` ", 
               Round[
                N[
                 Total[
                  Table[
                   EuclideanDistance[
                    Part[$CellContext`path$, $CellContext`i], {0, 
                    0}], {$CellContext`i, 2, 
                    Length[$CellContext`path$]}]]], 0.01]], FontSize -> 18], {
             1.55, 0.8}], $CellContext`offset$ = {1.55, 0.5} - (1/2) 
              Part[$CellContext`path$, $CellContext`mvNum$ + 2, 
                Span[1, All]]; {
              Opacity[0.3], 
              
              Arrow[{$CellContext`offset$, $CellContext`offset$ + 
                Part[$CellContext`path$, $CellContext`mvNum$ + 2, 
                  Span[1, All]]}]}, 
            
            Point[$CellContext`offset$ + $CellContext`mvFrac$ 
              Part[$CellContext`path$, $CellContext`mvNum$ + 2, 
                Span[1, All]]], 
            
            Arrow[{$CellContext`offset$, $CellContext`offset$ + \
$CellContext`mvFrac$ Part[$CellContext`path$, $CellContext`mvNum$ + 2, 
                 Span[1, All]]}]}}, ImageSize -> 600, 
          PlotRange -> {{-0.05, 2.05}, {-0.05, 1.05}}]], 
      "Specifications" :> {{{$CellContext`progress$$, 1, "progress"}, 0, 1, 
         Rational[1, 420], ControlType -> Slider, Appearance -> "Labeled", 
         ControlPlacement -> 1}, {{$CellContext`\[Epsilon]$$, 
          Rational[1, 1000], "\[Epsilon]"}, 
         Rational[1, 1000], 
         Rational[1, 10], 
         Rational[1, 1000], ControlType -> Slider, Appearance -> "Labeled", 
         ControlPlacement -> 2}, 
        Row[{
          Manipulate`Place[1], 
          Manipulate`Place[2]}], {{$CellContext`s1$$, {
           Rational[3, 4], 
           Rational[1, 5]}}, 
         Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
         Dynamic[{1, 1} - $CellContext`\[Epsilon]$$], ControlType -> Locator, 
         Appearance -> None}, {{$CellContext`s2$$, {
           Rational[1, 4], 
           Rational[1, 5]}}, 
         Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
         Dynamic[{1, 1} - $CellContext`\[Epsilon]$$], ControlType -> Locator, 
         Appearance -> None}, {{$CellContext`e1$$, {
           Rational[3, 4], 
           Rational[1, 2]}}, 
         Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
         Dynamic[{1, 1} - $CellContext`\[Epsilon]$$], ControlType -> Locator, 
         Appearance -> None}, {{$CellContext`e2$$, {
           Rational[1, 4], 
           Rational[1, 2]}}, 
         Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
         Dynamic[{1, 1} - $CellContext`\[Epsilon]$$], ControlType -> Locator, 
         Appearance -> None}}, "Options" :> {}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{489., {154., 157.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`RotateCCW90[
         Pattern[$CellContext`r, 
          Blank[]]] := {
         Part[$CellContext`r, 2], 1 - 
         Part[$CellContext`r, 1]}, $CellContext`achieveDesiredSpacing[
         Pattern[$CellContext`ps1, 
          Blank[]], 
         Pattern[$CellContext`ps2, 
          Blank[]], 
         Pattern[$CellContext`pe1, 
          Blank[]], 
         Pattern[$CellContext`pe2, 
          Blank[]], 
         Pattern[$CellContext`\[Epsilon], 
          Blank[]]] := 
       Module[{$CellContext`\[CapitalDelta]ey = 
          Part[$CellContext`pe2, 2] - 
           Part[$CellContext`pe1, 2], $CellContext`\[CapitalDelta]ex = 
          Part[$CellContext`pe2, 1] - 
           Part[$CellContext`pe1, 1], $CellContext`L = 
          1, $CellContext`\[CapitalDelta]r, $CellContext`r1, $CellContext`r2, \
$CellContext`moves, $CellContext`pm1, $CellContext`pm2}, $CellContext`r2 = \
$CellContext`ps2; $CellContext`r1 = $CellContext`ps1; $CellContext`moves = {{
           0, 0}}; $CellContext`pm1 = {$CellContext`r1}; $CellContext`pm2 = \
{$CellContext`r2}; 
         If[$CellContext`pe1 - $CellContext`ps1 == $CellContext`pe2 - \
$CellContext`ps2, $CellContext`\[CapitalDelta]r = $CellContext`pe1 - \
$CellContext`ps1; AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
           AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]; 
           AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]; 
           AppendTo[$CellContext`pm1, $CellContext`r1]; 
           AppendTo[$CellContext`pm2, $CellContext`r2]; 
           Return[{$CellContext`moves, $CellContext`pm1, $CellContext`pm2}]]; 
         If[
           
           And[$CellContext`\[CapitalDelta]ex > 
            0, $CellContext`\[CapitalDelta]ey < 
            0, $CellContext`\[CapitalDelta]ex - (Part[$CellContext`ps2, 1] - 
             Part[$CellContext`ps1, 1]) < 
            0, $CellContext`\[CapitalDelta]ey - (Part[$CellContext`ps2, 2] - 
             Part[$CellContext`ps1, 2]) > 0], 
           Module[{$CellContext`BestDir}, $CellContext`BestDir = Part[
               
               Sort[{{"u", (Part[$CellContext`pe1, 1] - 
                    Part[$CellContext`ps1, 1])^2 + (2 $CellContext`L - 
                    Part[$CellContext`pe1, 2] - 
                    Part[$CellContext`ps1, 
                    2])^2 + $CellContext`effectContractMv1[$CellContext`ps1, \
$CellContext`ps2, $CellContext`pe1, $CellContext`pe2, "u"]}, {
                 "d", (Part[$CellContext`pe2, 1] - 
                    Part[$CellContext`ps2, 1])^2 + (Part[$CellContext`pe2, 2] + 
                    Part[$CellContext`ps2, 
                    2])^2 + $CellContext`effectContractMv1[$CellContext`ps1, \
$CellContext`ps2, $CellContext`pe1, $CellContext`pe2, "d"]}, {
                 "l", (Part[$CellContext`pe1, 1] + 
                    Part[$CellContext`ps1, 1])^2 + (Part[$CellContext`pe1, 2] - 
                    Part[$CellContext`ps1, 
                    2])^2 + $CellContext`effectContractMv1[$CellContext`ps1, \
$CellContext`ps2, $CellContext`pe1, $CellContext`pe2, "l"]}, {
                 "r", (2 $CellContext`L - Part[$CellContext`pe2, 1] - 
                    Part[$CellContext`ps2, 1])^2 + (Part[$CellContext`pe2, 2] - 
                    Part[$CellContext`ps2, 
                    2])^2 + $CellContext`effectContractMv1[$CellContext`ps1, \
$CellContext`ps2, $CellContext`pe1, $CellContext`pe2, "r"]}}, Part[#, 2] < 
                Part[#2, 2]& ], 1, 
               1]; $CellContext`\[CapitalDelta]r = \
$CellContext`contractMv1[$CellContext`ps1, $CellContext`ps2, \
$CellContext`pe1, $CellContext`pe2, $CellContext`BestDir]; 
            AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
            AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]; 
            AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]; 
            AppendTo[$CellContext`pm1, $CellContext`r1]; 
            AppendTo[$CellContext`pm2, $CellContext`r2]; 
            Which[$CellContext`BestDir == 
              "u", $CellContext`\[CapitalDelta]r = {$CellContext`\
\[CapitalDelta]ex - (Part[$CellContext`r2, 1] - 
                 Part[$CellContext`r1, 1]), $CellContext`\[CapitalDelta]ey - (
                 Part[$CellContext`r2, 2] - Part[$CellContext`r1, 2])}; 
              AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r], \
$CellContext`BestDir == 
              "d", $CellContext`\[CapitalDelta]r = {
                Part[$CellContext`r2, 1] - 
                 Part[$CellContext`r1, 1] - $CellContext`\[CapitalDelta]ex, (
                  Part[$CellContext`r2, 2] - 
                  Part[$CellContext`r1, 2]) - $CellContext`\[CapitalDelta]ey}; 
              AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r], \
$CellContext`BestDir == 
              "l", $CellContext`\[CapitalDelta]r = {$CellContext`\
\[CapitalDelta]ex - (Part[$CellContext`r2, 1] - 
                 Part[$CellContext`r1, 1]), $CellContext`\[CapitalDelta]ey - (
                 Part[$CellContext`r2, 2] - Part[$CellContext`r1, 2])}; 
              AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r], \
$CellContext`BestDir == 
              "r", $CellContext`\[CapitalDelta]r = {
                Part[$CellContext`r2, 1] - 
                 Part[$CellContext`r1, 1] - $CellContext`\[CapitalDelta]ex, (
                  Part[$CellContext`r2, 2] - 
                  Part[$CellContext`r1, 2]) - $CellContext`\[CapitalDelta]ey}; 
              AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]; Null]; 
            AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
            AppendTo[$CellContext`pm1, $CellContext`r1]; 
            AppendTo[$CellContext`pm2, $CellContext`r2]; $CellContext`\
\[CapitalDelta]r = {
              Part[$CellContext`pe2, 1] - Part[$CellContext`r2, 1], 
               Part[$CellContext`pe2, 2] - Part[$CellContext`r2, 2]}; 
            AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]; 
            AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]; 
            AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
            AppendTo[$CellContext`pm1, $CellContext`r1]; 
            AppendTo[$CellContext`pm2, $CellContext`r2]; 
            Return[{$CellContext`moves, $CellContext`pm1, \
$CellContext`pm2}]]]; $CellContext`\[CapitalDelta]r = {-
            Part[$CellContext`r1, 1], -Min[
               Part[$CellContext`r2, 2], 
               Part[$CellContext`r1, 
                 2] + $CellContext`\[CapitalDelta]ey] + $CellContext`\
\[Epsilon]}; AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]; 
         AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]; 
         AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
         AppendTo[$CellContext`pm1, $CellContext`r1]; 
         AppendTo[$CellContext`pm2, $CellContext`r2]; $CellContext`\
\[CapitalDelta]r = {-Part[$CellContext`r2, 1], Abs[
               Sign[$CellContext`\[CapitalDelta]ey]] 
             Min[Part[$CellContext`r1, 2] - 
               Part[$CellContext`r2, 
                2] + $CellContext`\[CapitalDelta]ey - \
$CellContext`\[Epsilon], $CellContext`L - 
               Part[$CellContext`r2, 
                2] - $CellContext`\[Epsilon]] + $CellContext`\[Epsilon]}; 
         If[Part[$CellContext`r1, 1] > 0, 
           AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]]; 
         If[Part[$CellContext`r2, 1] > 0, 
           AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]]; 
         AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
         AppendTo[$CellContext`pm1, $CellContext`r1]; 
         AppendTo[$CellContext`pm2, $CellContext`r2]; $CellContext`\
\[CapitalDelta]r = {
            
            Max[$CellContext`\[Epsilon], (-
              Sign[Part[$CellContext`r2, 2] - 
                Part[$CellContext`r1, 2]]) $CellContext`\[CapitalDelta]ex], -
            Min[
              Part[$CellContext`r1, 2], 
              Part[$CellContext`r2, 2]]}; 
         AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]; 
         AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]; 
         AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
         AppendTo[$CellContext`pm1, $CellContext`r1]; 
         AppendTo[$CellContext`pm2, $CellContext`r2]; $CellContext`\
\[CapitalDelta]r = {
            
            If[$CellContext`\[CapitalDelta]ex != 0, 
             Sign[Part[$CellContext`r2, 2] - 
               Part[$CellContext`r1, 2]] $CellContext`\[CapitalDelta]ex, Abs[
               
               Sign[$CellContext`\[CapitalDelta]ey - Part[$CellContext`r2, 2] + 
                Part[$CellContext`r1, 2]]] $CellContext`\[Epsilon]], (Abs[
               Sign[$CellContext`\[CapitalDelta]ey]] - 1) 
            Abs[Part[$CellContext`r1, 2] - Part[$CellContext`r2, 2]]}; 
         If[Part[$CellContext`r1, 2] > 0, 
           AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]]; 
         If[Part[$CellContext`r2, 2] > 0, 
           AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]]; 
         AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
         AppendTo[$CellContext`pm1, $CellContext`r1]; 
         AppendTo[$CellContext`pm2, $CellContext`r2]; 
         If[$CellContext`\[CapitalDelta]ey != 
           Part[$CellContext`r2, 2] - 
            Part[$CellContext`r1, 
             2], $CellContext`\[CapitalDelta]r = {$CellContext`L - Max[
               Part[$CellContext`r1, 1], 
               Part[$CellContext`r2, 1]], 
              
              If[$CellContext`\[CapitalDelta]ex < 
               0, $CellContext`\[Epsilon], $CellContext`\[CapitalDelta]ey - 
               Max[
                Part[$CellContext`r1, 2], 
                Part[$CellContext`r2, 2]]]}; 
           AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]; 
           AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]; 
           AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
           AppendTo[$CellContext`pm1, $CellContext`r1]; 
           AppendTo[$CellContext`pm2, $CellContext`r2]; $CellContext`\
\[CapitalDelta]r = {(-(Abs[
                  Sign[$CellContext`\[CapitalDelta]ex]] - 
                1)) $CellContext`\[Epsilon], 
              If[$CellContext`\[CapitalDelta]ex != 0, -
                Sign[$CellContext`\[CapitalDelta]ex], -Sign[Max[
                    Part[$CellContext`r1, 1], 
                    Part[$CellContext`r2, 1]] - Min[
                   Part[$CellContext`r1, 1], 
                   
                   Part[$CellContext`r2, 
                    1]]]] ($CellContext`\[CapitalDelta]ey - Max[
                Part[$CellContext`r2, 2], 
                Part[$CellContext`r1, 2]] + Min[
                 Part[$CellContext`r2, 2], 
                 Part[$CellContext`r1, 2]])}; If[Part[$CellContext`r1, 1] < 1, 
             AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]]; 
           If[Part[$CellContext`r2, 1] < 1, 
             AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]]; 
           AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
           AppendTo[$CellContext`pm1, $CellContext`r1]; 
           AppendTo[$CellContext`pm2, $CellContext`r2]]; $CellContext`\
\[CapitalDelta]r = {
           Part[$CellContext`pe2, 1] - Part[$CellContext`r2, 1], 
            Part[$CellContext`pe2, 2] - Part[$CellContext`r2, 2]}; 
         AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]; 
         AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]; 
         AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
         AppendTo[$CellContext`pm1, $CellContext`r1]; 
         AppendTo[$CellContext`pm2, $CellContext`r2]; 
         Return[{$CellContext`moves, $CellContext`pm1, $CellContext`pm2}]], \
$CellContext`effectContractMv1[
         Pattern[$CellContext`ps1, 
          Blank[]], 
         Pattern[$CellContext`ps2, 
          Blank[]], 
         Pattern[$CellContext`pe1, 
          Blank[]], 
         Pattern[$CellContext`pe2, 
          Blank[]], 
         Pattern[$CellContext`BestDir, 
          Blank[]]] := 
       Module[{$CellContext`\[CapitalDelta]r, $CellContext`r1, \
$CellContext`r2}, $CellContext`\[CapitalDelta]r = \
$CellContext`contractMv1[$CellContext`ps1, $CellContext`ps2, \
$CellContext`pe1, $CellContext`pe2, $CellContext`BestDir]; $CellContext`r1 = \
$CellContext`ps1 + $CellContext`\[CapitalDelta]r; $CellContext`r2 = \
$CellContext`ps2 + $CellContext`\[CapitalDelta]r; If[
           Or[
           Part[$CellContext`r1, 1] < 0, Part[$CellContext`r1, 1] > 1, 
            Part[$CellContext`r1, 2] < 0, Part[$CellContext`r1, 2] > 1, 
            Part[$CellContext`r2, 1] < 0, Part[$CellContext`r2, 1] > 1, 
            Part[$CellContext`r2, 2] < 0, Part[$CellContext`r2, 2] > 1], 
           Infinity, 0]], $CellContext`contractMv1[
         Pattern[$CellContext`ps1, 
          Blank[]], 
         Pattern[$CellContext`ps2, 
          Blank[]], 
         Pattern[$CellContext`pe1, 
          Blank[]], 
         Pattern[$CellContext`pe2, 
          Blank[]], 
         Pattern[$CellContext`BestDir, 
          Blank[]]] := 
       Module[{$CellContext`\[CapitalDelta]r}, 
         Which[$CellContext`BestDir == 
           "u", $CellContext`\[CapitalDelta]r = {((1 - 
                Part[$CellContext`ps1, 2])/(2 - Part[$CellContext`ps1, 2] - 
               Part[$CellContext`pe1, 2])) (Part[$CellContext`pe2, 1] - 
               Part[$CellContext`ps2, 1]), 1 - Part[$CellContext`ps1, 2]}; 
           Null, $CellContext`BestDir == 
           "d", $CellContext`\[CapitalDelta]r = {(Part[$CellContext`ps2, 2]/(
               Part[$CellContext`ps2, 2] + Part[$CellContext`pe2, 2])) (
               Part[$CellContext`pe2, 1] - Part[$CellContext`ps2, 1]), -
              Part[$CellContext`ps2, 2]}; Null, $CellContext`BestDir == 
           "l", $CellContext`\[CapitalDelta]r = {-
              Part[$CellContext`ps1, 1], (Part[$CellContext`ps1, 1]/(
               Part[$CellContext`ps1, 1] + Part[$CellContext`pe1, 1])) (
               Part[$CellContext`pe2, 2] - Part[$CellContext`ps2, 2])}; 
           Null, $CellContext`BestDir == 
           "r", $CellContext`\[CapitalDelta]r = {
             1 - Part[$CellContext`ps2, 1], ((1 - Part[$CellContext`ps2, 1])/(
               2 - Part[$CellContext`ps2, 1] - Part[$CellContext`pe2, 1])) (
               Part[$CellContext`pe2, 2] - Part[$CellContext`ps2, 2])}; Null]; 
         Return[$CellContext`\[CapitalDelta]r]], $CellContext`RotateCW90[
         Pattern[$CellContext`r, 
          Blank[]]] := {1 - Part[$CellContext`r, 2], 
         Part[$CellContext`r, 1]}, $CellContext`RotateCW90inplace[
         Pattern[$CellContext`r, 
          Blank[]]] := {-Part[$CellContext`r, 2], 
         Part[$CellContext`r, 1]}, Attributes[PlotRange] = {ReadProtected}}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.6567011401579103`*^9, 3.656701264683568*^9, {3.69145279129803*^9, 
   3.691452817347315*^9}, 3.691452860966983*^9, {3.691453136111508*^9, 
   3.69145320988822*^9}, {3.691453803148247*^9, 3.6914538232682247`*^9}, 
   3.6914538633410892`*^9, 3.6914539860216713`*^9},
 CellID->548836526],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`e1$$ = {0.076, 
    0.9720000000000001}, $CellContext`e2$$ = {0.9440000000000001, 
    0.066}, $CellContext`progress$$ = 1, $CellContext`s1$$ = {0.888, 
    0.020000000000000004`}, $CellContext`s2$$ = {0.048, 
    0.9380000000000001}, $CellContext`\[Epsilon]$$ = Rational[13, 1000], 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`progress$$], 1, "progress"}, 0, 1, 
      Rational[1, 420]}, {{
       Hold[$CellContext`\[Epsilon]$$], 
       Rational[1, 1000], "\[Epsilon]"}, 
      Rational[1, 1000], 
      Rational[1, 10], 
      Rational[1, 1000]}, {
      Hold[
       Row[{
         Manipulate`Place[1], 
         Manipulate`Place[2]}]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`s1$$], {
        Rational[3, 4], 
        Rational[1, 5]}}, 
      Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
      Dynamic[{1, 1} - $CellContext`\[Epsilon]$$]}, {{
       Hold[$CellContext`s2$$], {
        Rational[1, 4], 
        Rational[4, 5]}}, 
      Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
      Dynamic[{1, 1} - $CellContext`\[Epsilon]$$]}, {{
       Hold[$CellContext`e1$$], {
        Rational[2, 3], 
        Rational[1, 2]}}, 
      Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
      Dynamic[{1, 1} - $CellContext`\[Epsilon]$$]}, {{
       Hold[$CellContext`e2$$], {
        Rational[1, 2], 
        Rational[2, 3]}}, 
      Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
      Dynamic[{1, 1} - $CellContext`\[Epsilon]$$]}}, Typeset`size$$ = {
    450., {117., 119.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False, $CellContext`progress$2299461$$ = 
    0, $CellContext`\[Epsilon]$2299462$$ = 0, $CellContext`s1$2299463$$ = 
    0, $CellContext`s2$2299464$$ = 0, $CellContext`e1$2299465$$ = 
    0, $CellContext`e2$2299466$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, "Variables" :> {$CellContext`e1$$ = {
          Rational[2, 3], 
          Rational[1, 2]}, $CellContext`e2$$ = {
          Rational[1, 2], 
          Rational[2, 3]}, $CellContext`progress$$ = 1, $CellContext`s1$$ = {
          Rational[3, 4], 
          Rational[1, 5]}, $CellContext`s2$$ = {
          Rational[1, 4], 
          Rational[4, 5]}, $CellContext`\[Epsilon]$$ = Rational[1, 1000]}, 
      "ControllerVariables" :> {
        Hold[$CellContext`progress$$, $CellContext`progress$2299461$$, 0], 
        Hold[$CellContext`\[Epsilon]$$, $CellContext`\[Epsilon]$2299462$$, 0], 
        Hold[$CellContext`s1$$, $CellContext`s1$2299463$$, 0], 
        Hold[$CellContext`s2$$, $CellContext`s2$2299464$$, 0], 
        Hold[$CellContext`e1$$, $CellContext`e1$2299465$$, 0], 
        Hold[$CellContext`e2$$, $CellContext`e2$2299466$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`movesAndPositions$, $CellContext`path$, \
$CellContext`path1$, $CellContext`path2$, $CellContext`r$ = 
         1/40, $CellContext`thickness$ = 
         0.002, $CellContext`rotateSolution$, $CellContext`ps1$, \
$CellContext`pe1$, $CellContext`ps2$, $CellContext`pe2$, $CellContext`pm1$, \
$CellContext`pm2$, $CellContext`offset$, $CellContext`c1$ = 
         Blue, $CellContext`c2$ = 
         Magenta, $CellContext`mvNum$, $CellContext`mvFrac$}, 
        If[EuclideanDistance[$CellContext`s1$$, $CellContext`s2$$] < \
$CellContext`\[Epsilon]$$, 
          If[Part[$CellContext`s1$$, 1] < Part[$CellContext`s2$$, 1], 
           If[
           Part[$CellContext`s1$$, 1] > 2 $CellContext`\[Epsilon]$$, 
            Part[$CellContext`s1$$, 1] = 
            Part[$CellContext`s2$$, 1] - $CellContext`\[Epsilon]$$, 
            Part[$CellContext`s2$$, 1] = 
            Part[$CellContext`s1$$, 1] + $CellContext`\[Epsilon]$$], 
           If[
           Part[$CellContext`s2$$, 1] > 2 $CellContext`\[Epsilon]$$, 
            Part[$CellContext`s2$$, 1] = 
            Part[$CellContext`s1$$, 1] - $CellContext`\[Epsilon]$$, 
            Part[$CellContext`s1$$, 1] = 
            Part[$CellContext`s2$$, 1] + $CellContext`\[Epsilon]$$]]]; 
        If[EuclideanDistance[$CellContext`e1$$, $CellContext`e2$$] < \
$CellContext`\[Epsilon]$$, 
          If[Part[$CellContext`e1$$, 1] < Part[$CellContext`e2$$, 1], 
           If[
           Part[$CellContext`e1$$, 1] > 2 $CellContext`\[Epsilon]$$, 
            Part[$CellContext`e1$$, 1] = 
            Part[$CellContext`e2$$, 1] - $CellContext`\[Epsilon]$$, 
            Part[$CellContext`e2$$, 1] = 
            Part[$CellContext`e1$$, 1] + $CellContext`\[Epsilon]$$], 
           If[
           Part[$CellContext`e2$$, 1] > 2 $CellContext`\[Epsilon]$$, 
            Part[$CellContext`e2$$, 1] = 
            Part[$CellContext`e1$$, 1] - $CellContext`\[Epsilon]$$, 
            Part[$CellContext`e1$$, 1] = 
            Part[$CellContext`e2$$, 
               1] + $CellContext`\[Epsilon]$$]]]; {$CellContext`ps1$, \
$CellContext`pe1$, $CellContext`ps2$, $CellContext`pe2$} = If[
           Or[Part[$CellContext`s1$$, 1] < Part[$CellContext`s2$$, 1], 
            And[
            Part[$CellContext`s1$$, 1] == Part[$CellContext`s2$$, 1], 
             Part[$CellContext`s1$$, 2] < 
             Part[$CellContext`s2$$, 
               2]]], {$CellContext`s1$$, $CellContext`e1$$, \
$CellContext`s2$$, $CellContext`e2$$}, {$CellContext`s2$$, $CellContext`e2$$, \
$CellContext`s1$$, $CellContext`e1$$}]; $CellContext`rotateSolution$ = 
         If[Part[$CellContext`ps1$, 2] < 
           Part[$CellContext`ps2$, 
             2], {$CellContext`ps1$, $CellContext`pe1$, $CellContext`ps2$, \
$CellContext`pe2$} = 
            Map[$CellContext`RotateCCW90, {$CellContext`ps1$, \
$CellContext`pe1$, $CellContext`ps2$, $CellContext`pe2$}]; True, 
           False]; {$CellContext`path$, $CellContext`path1$, \
$CellContext`path2$} = $CellContext`achieveDesiredSpacing[$CellContext`ps1$, \
$CellContext`ps2$, $CellContext`pe1$, $CellContext`pe2$, $CellContext`\
\[Epsilon]$$]; 
        If[$CellContext`rotateSolution$, {{$CellContext`ps1$, \
$CellContext`pe1$, $CellContext`ps2$, $CellContext`pe2$} = 
            Map[$CellContext`RotateCW90, {$CellContext`ps1$, \
$CellContext`pe1$, $CellContext`ps2$, $CellContext`pe2$}]; $CellContext`path$ = 
            Map[$CellContext`RotateCW90inplace, $CellContext`path$]; \
$CellContext`path1$ = 
            Map[$CellContext`RotateCW90, $CellContext`path1$]; \
$CellContext`path2$ = Map[$CellContext`RotateCW90, $CellContext`path2$]; 
           Null}]; $CellContext`mvNum$ = 
         Floor[$CellContext`progress$$ (Length[$CellContext`path$] - 
            1)]; $CellContext`mvFrac$ = 
         FractionalPart[$CellContext`progress$$ (Length[$CellContext`path$] - 
            1)]; $CellContext`pm2$ = 
         If[$CellContext`mvFrac$ > 0, 
           Part[$CellContext`path2$, $CellContext`mvNum$ + 1, 
             Span[1, All]] + $CellContext`mvFrac$ (
             Part[$CellContext`path2$, $CellContext`mvNum$ + 2, 
               Span[1, All]] - 
             Part[$CellContext`path2$, $CellContext`mvNum$ + 1, 
              Span[1, All]]), 
           Part[$CellContext`path2$, $CellContext`mvNum$ + 1, 
            Span[1, All]]]; $CellContext`pm1$ = 
         If[$CellContext`mvFrac$ > 0, 
           Part[$CellContext`path1$, $CellContext`mvNum$ + 1, 
             Span[1, All]] + $CellContext`mvFrac$ (
             Part[$CellContext`path1$, $CellContext`mvNum$ + 2, 
               Span[1, All]] - 
             Part[$CellContext`path1$, $CellContext`mvNum$ + 1, 
              Span[1, All]]), 
           Part[$CellContext`path1$, $CellContext`mvNum$ + 1, 
            Span[1, All]]]; Graphics[{{
            Darker[Red], 
            Rectangle[(-0.025) {1, 1}, 1.025 {1, 1}]}, {
            Lighter[Gray, 0.8], 
            Rectangle[{0, 0}, {1, 1}]}, {White, 
            
            Rectangle[{$CellContext`\[Epsilon]$$, $CellContext`\[Epsilon]$$}, \
{1 - $CellContext`\[Epsilon]$$, 1 - $CellContext`\[Epsilon]$$}]}, {
            Lighter[Gray, 0.8], 
            Disk[$CellContext`ps2$, $CellContext`\[Epsilon]$$]}, {
            Lighter[Gray, 0.8], 
            Disk[$CellContext`pe2$, $CellContext`\[Epsilon]$$]}, 
           PointSize[0.01], 
           Arrowheads[0.02], 
           Thickness[$CellContext`thickness$], {$CellContext`c1$, {
             Opacity[0.3], Dashed, 
             Arrow[{$CellContext`ps1$, $CellContext`pe1$}]}, 
            Point[$CellContext`ps1$], 
            EdgeForm[
             Directive[$CellContext`c1$, 
              Thickness[$CellContext`thickness$]]], 
            FaceForm[None], 
            
            Rectangle[$CellContext`ps1$ - (2/3) $CellContext`r$ {1, 
              1}, $CellContext`ps1$ + (2/3) $CellContext`r$ {1, 1}], 
            Circle[$CellContext`pe1$, $CellContext`r$]}, {$CellContext`c2$, {
             Opacity[0.3], Dashed, 
             Arrow[{$CellContext`ps2$, $CellContext`pe2$}]}, 
            Point[$CellContext`ps2$], 
            EdgeForm[
             Directive[$CellContext`c2$, 
              Thickness[$CellContext`thickness$]]], 
            FaceForm[None], 
            
            Rectangle[$CellContext`ps2$ - (2/3) $CellContext`r$ {1, 
              1}, $CellContext`ps2$ + (2/3) $CellContext`r$ {1, 1}], 
            Circle[$CellContext`pe2$, $CellContext`r$]}, {$CellContext`c1$, 
            Table[
             Arrow[{
               Part[$CellContext`path1$, $CellContext`i, 
                Span[1, All]], 
               Part[$CellContext`path1$, $CellContext`i + 1, 
                Span[1, All]]}], {$CellContext`i, 1, $CellContext`mvNum$}], 
            Arrow[{
              Part[$CellContext`path1$, $CellContext`mvNum$ + 1, 
               Span[1, All]], $CellContext`pm1$}], 
            Point[$CellContext`pm1$], {
             If[
              Or[
              Part[$CellContext`pm1$, 1] == 0, Part[$CellContext`pm1$, 2] == 
               0, Part[$CellContext`pm1$, 1] == 1, Part[$CellContext`pm1$, 2] == 
               1], {
               PointSize[0.005], White, 
               Point[$CellContext`pm1$]}]}}, {$CellContext`c2$, 
            Table[
             Arrow[{
               Part[$CellContext`path2$, $CellContext`i, 
                Span[1, All]], 
               Part[$CellContext`path2$, $CellContext`i + 1, 
                Span[1, All]]}], {$CellContext`i, 1, $CellContext`mvNum$}], 
            Arrow[{
              Part[$CellContext`path2$, $CellContext`mvNum$ + 1, 
               Span[1, All]], $CellContext`pm2$}], 
            Point[$CellContext`pm2$], {
             If[
              Or[
              Part[$CellContext`pm2$, 1] == 0, Part[$CellContext`pm2$, 2] == 
               0, Part[$CellContext`pm2$, 1] == 1, Part[$CellContext`pm2$, 2] == 
               1], {
               PointSize[0.005], White, 
               Point[$CellContext`pm2$]}]}}, {
           If[$CellContext`mvNum$ + 1 == 
              Length[$CellContext`path$], {$CellContext`mvNum$ = 
               Length[$CellContext`path$] - 2, $CellContext`mvFrac$ = 1}]; 
            Darker[Red], 
            Text[
             Style[
              StringForm[
              "Move `` of ``", $CellContext`mvNum$ + 1, 
               Length[$CellContext`path$] - 1], FontSize -> 18], {1.55, 0.9}], 
            Text[
             Style[
              StringForm["Total distance `` ", 
               Round[
                N[
                 Total[
                  Table[
                   EuclideanDistance[
                    Part[$CellContext`path$, $CellContext`i], {0, 
                    0}], {$CellContext`i, 2, 
                    Length[$CellContext`path$]}]]], 0.01]], FontSize -> 18], {
             1.55, 0.8}], $CellContext`offset$ = {1.55, 0.5} - (1/2) 
              Part[$CellContext`path$, $CellContext`mvNum$ + 2, 
                Span[1, All]]; {
              Opacity[0.3], 
              Arrow[{$CellContext`offset$, $CellContext`offset$ + 
                Part[$CellContext`path$, $CellContext`mvNum$ + 2, 
                  Span[1, All]]}]}, 
            
            Point[$CellContext`offset$ + $CellContext`mvFrac$ 
              Part[$CellContext`path$, $CellContext`mvNum$ + 2, 
                Span[1, All]]], 
            
            Arrow[{$CellContext`offset$, $CellContext`offset$ + \
$CellContext`mvFrac$ Part[$CellContext`path$, $CellContext`mvNum$ + 2, 
                 Span[1, All]]}]}}, ImageSize -> 600, 
          PlotRange -> {{-0.05, 2.05}, {-0.05, 1.05}}]], 
      "Specifications" :> {{{$CellContext`progress$$, 1, "progress"}, 0, 1, 
         Rational[1, 420], ControlType -> Slider, Appearance -> "Labeled", 
         ControlPlacement -> 1}, {{$CellContext`\[Epsilon]$$, 
          Rational[1, 1000], "\[Epsilon]"}, 
         Rational[1, 1000], 
         Rational[1, 10], 
         Rational[1, 1000], ControlType -> Slider, Appearance -> "Labeled", 
         ControlPlacement -> 2}, 
        Row[{
          Manipulate`Place[1], 
          Manipulate`Place[2]}], {{$CellContext`s1$$, {
           Rational[3, 4], 
           Rational[1, 5]}}, 
         Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
         Dynamic[{1, 1} - $CellContext`\[Epsilon]$$], ControlType -> Locator, 
         Appearance -> None}, {{$CellContext`s2$$, {
           Rational[1, 4], 
           Rational[4, 5]}}, 
         Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
         Dynamic[{1, 1} - $CellContext`\[Epsilon]$$], ControlType -> Locator, 
         Appearance -> None}, {{$CellContext`e1$$, {
           Rational[2, 3], 
           Rational[1, 2]}}, 
         Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
         Dynamic[{1, 1} - $CellContext`\[Epsilon]$$], ControlType -> Locator, 
         Appearance -> None}, {{$CellContext`e2$$, {
           Rational[1, 2], 
           Rational[2, 3]}}, 
         Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
         Dynamic[{1, 1} - $CellContext`\[Epsilon]$$], ControlType -> Locator, 
         Appearance -> None}}, "Options" :> {}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{489., {154., 157.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`RotateCCW90[
         Pattern[$CellContext`r, 
          Blank[]]] := {
         Part[$CellContext`r, 2], 1 - 
         Part[$CellContext`r, 1]}, $CellContext`achieveDesiredSpacing[
         Pattern[$CellContext`ps1, 
          Blank[]], 
         Pattern[$CellContext`ps2, 
          Blank[]], 
         Pattern[$CellContext`pe1, 
          Blank[]], 
         Pattern[$CellContext`pe2, 
          Blank[]], 
         Pattern[$CellContext`\[Epsilon], 
          Blank[]]] := 
       Module[{$CellContext`\[CapitalDelta]ey = 
          Part[$CellContext`pe2, 2] - 
           Part[$CellContext`pe1, 2], $CellContext`\[CapitalDelta]ex = 
          Part[$CellContext`pe2, 1] - 
           Part[$CellContext`pe1, 1], $CellContext`L = 
          1, $CellContext`\[CapitalDelta]r, $CellContext`r1, $CellContext`r2, \
$CellContext`moves, $CellContext`pm1, $CellContext`pm2}, $CellContext`r2 = \
$CellContext`ps2; $CellContext`r1 = $CellContext`ps1; $CellContext`moves = {{
           0, 0}}; $CellContext`pm1 = {$CellContext`r1}; $CellContext`pm2 = \
{$CellContext`r2}; 
         If[$CellContext`pe1 - $CellContext`ps1 == $CellContext`pe2 - \
$CellContext`ps2, $CellContext`\[CapitalDelta]r = $CellContext`pe1 - \
$CellContext`ps1; AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
           AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]; 
           AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]; 
           AppendTo[$CellContext`pm1, $CellContext`r1]; 
           AppendTo[$CellContext`pm2, $CellContext`r2]; 
           Return[{$CellContext`moves, $CellContext`pm1, $CellContext`pm2}]]; 
         If[
           
           And[$CellContext`\[CapitalDelta]ex > 
            0, $CellContext`\[CapitalDelta]ey < 
            0, $CellContext`\[CapitalDelta]ex - (Part[$CellContext`ps2, 1] - 
             Part[$CellContext`ps1, 1]) < 
            0, $CellContext`\[CapitalDelta]ey - (Part[$CellContext`ps2, 2] - 
             Part[$CellContext`ps1, 2]) > 0], 
           Module[{$CellContext`BestDir}, $CellContext`BestDir = Part[
               
               Sort[{{"u", (Part[$CellContext`pe1, 1] - 
                    Part[$CellContext`ps1, 1])^2 + (2 $CellContext`L - 
                    Part[$CellContext`pe1, 2] - 
                    Part[$CellContext`ps1, 
                    2])^2 + $CellContext`effectContractMv1[$CellContext`ps1, \
$CellContext`ps2, $CellContext`pe1, $CellContext`pe2, "u"]}, {
                 "d", (Part[$CellContext`pe2, 1] - 
                    Part[$CellContext`ps2, 1])^2 + (Part[$CellContext`pe2, 2] + 
                    Part[$CellContext`ps2, 
                    2])^2 + $CellContext`effectContractMv1[$CellContext`ps1, \
$CellContext`ps2, $CellContext`pe1, $CellContext`pe2, "d"]}, {
                 "l", (Part[$CellContext`pe1, 1] + 
                    Part[$CellContext`ps1, 1])^2 + (Part[$CellContext`pe1, 2] - 
                    Part[$CellContext`ps1, 
                    2])^2 + $CellContext`effectContractMv1[$CellContext`ps1, \
$CellContext`ps2, $CellContext`pe1, $CellContext`pe2, "l"]}, {
                 "r", (2 $CellContext`L - Part[$CellContext`pe2, 1] - 
                    Part[$CellContext`ps2, 1])^2 + (Part[$CellContext`pe2, 2] - 
                    Part[$CellContext`ps2, 
                    2])^2 + $CellContext`effectContractMv1[$CellContext`ps1, \
$CellContext`ps2, $CellContext`pe1, $CellContext`pe2, "r"]}}, Part[#, 2] < 
                Part[#2, 2]& ], 1, 
               1]; $CellContext`\[CapitalDelta]r = \
$CellContext`contractMv1[$CellContext`ps1, $CellContext`ps2, \
$CellContext`pe1, $CellContext`pe2, $CellContext`BestDir]; 
            AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
            AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]; 
            AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]; 
            AppendTo[$CellContext`pm1, $CellContext`r1]; 
            AppendTo[$CellContext`pm2, $CellContext`r2]; 
            Which[$CellContext`BestDir == 
              "u", $CellContext`\[CapitalDelta]r = {$CellContext`\
\[CapitalDelta]ex - (Part[$CellContext`r2, 1] - 
                 Part[$CellContext`r1, 1]), $CellContext`\[CapitalDelta]ey - (
                 Part[$CellContext`r2, 2] - Part[$CellContext`r1, 2])}; 
              AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r], \
$CellContext`BestDir == 
              "d", $CellContext`\[CapitalDelta]r = {
                Part[$CellContext`r2, 1] - 
                 Part[$CellContext`r1, 1] - $CellContext`\[CapitalDelta]ex, (
                  Part[$CellContext`r2, 2] - 
                  Part[$CellContext`r1, 2]) - $CellContext`\[CapitalDelta]ey}; 
              AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r], \
$CellContext`BestDir == 
              "l", $CellContext`\[CapitalDelta]r = {$CellContext`\
\[CapitalDelta]ex - (Part[$CellContext`r2, 1] - 
                 Part[$CellContext`r1, 1]), $CellContext`\[CapitalDelta]ey - (
                 Part[$CellContext`r2, 2] - Part[$CellContext`r1, 2])}; 
              AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r], \
$CellContext`BestDir == 
              "r", $CellContext`\[CapitalDelta]r = {
                Part[$CellContext`r2, 1] - 
                 Part[$CellContext`r1, 1] - $CellContext`\[CapitalDelta]ex, (
                  Part[$CellContext`r2, 2] - 
                  Part[$CellContext`r1, 2]) - $CellContext`\[CapitalDelta]ey}; 
              AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]; Null]; 
            AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
            AppendTo[$CellContext`pm1, $CellContext`r1]; 
            AppendTo[$CellContext`pm2, $CellContext`r2]; $CellContext`\
\[CapitalDelta]r = {
              Part[$CellContext`pe2, 1] - Part[$CellContext`r2, 1], 
               Part[$CellContext`pe2, 2] - Part[$CellContext`r2, 2]}; 
            AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]; 
            AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]; 
            AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
            AppendTo[$CellContext`pm1, $CellContext`r1]; 
            AppendTo[$CellContext`pm2, $CellContext`r2]; 
            Return[{$CellContext`moves, $CellContext`pm1, \
$CellContext`pm2}]]]; $CellContext`\[CapitalDelta]r = {-
            Part[$CellContext`r1, 1], -Min[
               Part[$CellContext`r2, 2], 
               Part[$CellContext`r1, 
                 2] + $CellContext`\[CapitalDelta]ey] + $CellContext`\
\[Epsilon]}; AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]; 
         AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]; 
         AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
         AppendTo[$CellContext`pm1, $CellContext`r1]; 
         AppendTo[$CellContext`pm2, $CellContext`r2]; $CellContext`\
\[CapitalDelta]r = {-Part[$CellContext`r2, 1], Abs[
               Sign[$CellContext`\[CapitalDelta]ey]] 
             Min[Part[$CellContext`r1, 2] - 
               Part[$CellContext`r2, 
                2] + $CellContext`\[CapitalDelta]ey - \
$CellContext`\[Epsilon], $CellContext`L - 
               Part[$CellContext`r2, 
                2] - $CellContext`\[Epsilon]] + $CellContext`\[Epsilon]}; 
         If[Part[$CellContext`r1, 1] > 0, 
           AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]]; 
         If[Part[$CellContext`r2, 1] > 0, 
           AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]]; 
         AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
         AppendTo[$CellContext`pm1, $CellContext`r1]; 
         AppendTo[$CellContext`pm2, $CellContext`r2]; $CellContext`\
\[CapitalDelta]r = {
            
            Max[$CellContext`\[Epsilon], (-
              Sign[Part[$CellContext`r2, 2] - 
                Part[$CellContext`r1, 2]]) $CellContext`\[CapitalDelta]ex], -
            Min[
              Part[$CellContext`r1, 2], 
              Part[$CellContext`r2, 2]]}; 
         AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]; 
         AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]; 
         AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
         AppendTo[$CellContext`pm1, $CellContext`r1]; 
         AppendTo[$CellContext`pm2, $CellContext`r2]; $CellContext`\
\[CapitalDelta]r = {
            
            If[$CellContext`\[CapitalDelta]ex != 0, 
             Sign[Part[$CellContext`r2, 2] - 
               Part[$CellContext`r1, 2]] $CellContext`\[CapitalDelta]ex, Abs[
               
               Sign[$CellContext`\[CapitalDelta]ey - Part[$CellContext`r2, 2] + 
                Part[$CellContext`r1, 2]]] $CellContext`\[Epsilon]], (Abs[
               Sign[$CellContext`\[CapitalDelta]ey]] - 1) 
            Abs[Part[$CellContext`r1, 2] - Part[$CellContext`r2, 2]]}; 
         If[Part[$CellContext`r1, 2] > 0, 
           AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]]; 
         If[Part[$CellContext`r2, 2] > 0, 
           AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]]; 
         AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
         AppendTo[$CellContext`pm1, $CellContext`r1]; 
         AppendTo[$CellContext`pm2, $CellContext`r2]; 
         If[$CellContext`\[CapitalDelta]ey != 
           Part[$CellContext`r2, 2] - 
            Part[$CellContext`r1, 
             2], $CellContext`\[CapitalDelta]r = {$CellContext`L - Max[
               Part[$CellContext`r1, 1], 
               Part[$CellContext`r2, 1]], 
              
              If[$CellContext`\[CapitalDelta]ex < 
               0, $CellContext`\[Epsilon], $CellContext`\[CapitalDelta]ey - 
               Max[
                Part[$CellContext`r1, 2], 
                Part[$CellContext`r2, 2]]]}; 
           AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]; 
           AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]; 
           AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
           AppendTo[$CellContext`pm1, $CellContext`r1]; 
           AppendTo[$CellContext`pm2, $CellContext`r2]; $CellContext`\
\[CapitalDelta]r = {(-(Abs[
                  Sign[$CellContext`\[CapitalDelta]ex]] - 
                1)) $CellContext`\[Epsilon], 
              If[$CellContext`\[CapitalDelta]ex != 0, -
                Sign[$CellContext`\[CapitalDelta]ex], -Sign[Max[
                    Part[$CellContext`r1, 1], 
                    Part[$CellContext`r2, 1]] - Min[
                   Part[$CellContext`r1, 1], 
                   
                   Part[$CellContext`r2, 
                    1]]]] ($CellContext`\[CapitalDelta]ey - Max[
                Part[$CellContext`r2, 2], 
                Part[$CellContext`r1, 2]] + Min[
                 Part[$CellContext`r2, 2], 
                 Part[$CellContext`r1, 2]])}; If[Part[$CellContext`r1, 1] < 1, 
             AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]]; 
           If[Part[$CellContext`r2, 1] < 1, 
             AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]]; 
           AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
           AppendTo[$CellContext`pm1, $CellContext`r1]; 
           AppendTo[$CellContext`pm2, $CellContext`r2]]; $CellContext`\
\[CapitalDelta]r = {
           Part[$CellContext`pe2, 1] - Part[$CellContext`r2, 1], 
            Part[$CellContext`pe2, 2] - Part[$CellContext`r2, 2]}; 
         AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]; 
         AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]; 
         AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
         AppendTo[$CellContext`pm1, $CellContext`r1]; 
         AppendTo[$CellContext`pm2, $CellContext`r2]; 
         Return[{$CellContext`moves, $CellContext`pm1, $CellContext`pm2}]], \
$CellContext`effectContractMv1[
         Pattern[$CellContext`ps1, 
          Blank[]], 
         Pattern[$CellContext`ps2, 
          Blank[]], 
         Pattern[$CellContext`pe1, 
          Blank[]], 
         Pattern[$CellContext`pe2, 
          Blank[]], 
         Pattern[$CellContext`BestDir, 
          Blank[]]] := 
       Module[{$CellContext`\[CapitalDelta]r, $CellContext`r1, \
$CellContext`r2}, $CellContext`\[CapitalDelta]r = \
$CellContext`contractMv1[$CellContext`ps1, $CellContext`ps2, \
$CellContext`pe1, $CellContext`pe2, $CellContext`BestDir]; $CellContext`r1 = \
$CellContext`ps1 + $CellContext`\[CapitalDelta]r; $CellContext`r2 = \
$CellContext`ps2 + $CellContext`\[CapitalDelta]r; If[
           Or[
           Part[$CellContext`r1, 1] < 0, Part[$CellContext`r1, 1] > 1, 
            Part[$CellContext`r1, 2] < 0, Part[$CellContext`r1, 2] > 1, 
            Part[$CellContext`r2, 1] < 0, Part[$CellContext`r2, 1] > 1, 
            Part[$CellContext`r2, 2] < 0, Part[$CellContext`r2, 2] > 1], 
           Infinity, 0]], $CellContext`contractMv1[
         Pattern[$CellContext`ps1, 
          Blank[]], 
         Pattern[$CellContext`ps2, 
          Blank[]], 
         Pattern[$CellContext`pe1, 
          Blank[]], 
         Pattern[$CellContext`pe2, 
          Blank[]], 
         Pattern[$CellContext`BestDir, 
          Blank[]]] := 
       Module[{$CellContext`\[CapitalDelta]r}, 
         Which[$CellContext`BestDir == 
           "u", $CellContext`\[CapitalDelta]r = {((1 - 
                Part[$CellContext`ps1, 2])/(2 - Part[$CellContext`ps1, 2] - 
               Part[$CellContext`pe1, 2])) (Part[$CellContext`pe2, 1] - 
               Part[$CellContext`ps2, 1]), 1 - Part[$CellContext`ps1, 2]}; 
           Null, $CellContext`BestDir == 
           "d", $CellContext`\[CapitalDelta]r = {(Part[$CellContext`ps2, 2]/(
               Part[$CellContext`ps2, 2] + Part[$CellContext`pe2, 2])) (
               Part[$CellContext`pe2, 1] - Part[$CellContext`ps2, 1]), -
              Part[$CellContext`ps2, 2]}; Null, $CellContext`BestDir == 
           "l", $CellContext`\[CapitalDelta]r = {-
              Part[$CellContext`ps1, 1], (Part[$CellContext`ps1, 1]/(
               Part[$CellContext`ps1, 1] + Part[$CellContext`pe1, 1])) (
               Part[$CellContext`pe2, 2] - Part[$CellContext`ps2, 2])}; 
           Null, $CellContext`BestDir == 
           "r", $CellContext`\[CapitalDelta]r = {
             1 - Part[$CellContext`ps2, 1], ((1 - Part[$CellContext`ps2, 1])/(
               2 - Part[$CellContext`ps2, 1] - Part[$CellContext`pe2, 1])) (
               Part[$CellContext`pe2, 2] - Part[$CellContext`ps2, 2])}; Null]; 
         Return[$CellContext`\[CapitalDelta]r]], $CellContext`RotateCW90[
         Pattern[$CellContext`r, 
          Blank[]]] := {1 - Part[$CellContext`r, 2], 
         Part[$CellContext`r, 1]}, $CellContext`RotateCW90inplace[
         Pattern[$CellContext`r, 
          Blank[]]] := {-Part[$CellContext`r, 2], 
         Part[$CellContext`r, 1]}, Attributes[PlotRange] = {ReadProtected}}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.6567011401579103`*^9, 3.656701264683568*^9, {3.69145279129803*^9, 
   3.691452817347315*^9}, 3.691452860966983*^9, {3.691453136111508*^9, 
   3.69145320988822*^9}, {3.691453803148247*^9, 3.6914538232682247`*^9}, 
   3.6914538633410892`*^9, {3.6914539860216713`*^9, 3.6914540007318697`*^9}},
 CellID->130207798],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`e1$$ = {
     Rational[1, 3], 
     Rational[1, 3]}, $CellContext`e2$$ = {
     Rational[1, 3], 
     Rational[2, 3]}, $CellContext`progress$$ = Rational[
    19, 20], $CellContext`s1$$ = {
     Rational[1, 3], 
     Rational[2, 3]}, $CellContext`s2$$ = {
     Rational[1, 3], 
     Rational[1, 3]}, $CellContext`\[Epsilon]$$ = Rational[29, 1000], 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`progress$$], 1, "progress"}, 0, 1, 
      Rational[1, 420]}, {{
       Hold[$CellContext`\[Epsilon]$$], 
       Rational[1, 1000], "\[Epsilon]"}, 
      Rational[1, 1000], 
      Rational[1, 10], 
      Rational[1, 1000]}, {
      Hold[
       Row[{
         Manipulate`Place[1], 
         Manipulate`Place[2]}]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`s1$$], {
        Rational[1, 3], 
        Rational[2, 3]}}, {0, 0}, {1, 1}}, {{
       Hold[$CellContext`s2$$], {
        Rational[1, 3], 
        Rational[1, 3]}}, {0, 0}, {1, 1}}, {{
       Hold[$CellContext`e1$$], {
        Rational[1, 3], 
        Rational[1, 3]}}, {0, 0}, {1, 1}}, {{
       Hold[$CellContext`e2$$], {
        Rational[1, 3], 
        Rational[2, 3]}}, {0, 0}, {1, 1}}}, Typeset`size$$ = {
    450., {117., 119.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False, $CellContext`progress$2301255$$ = 
    0, $CellContext`\[Epsilon]$2301256$$ = 0, $CellContext`s1$2301257$$ = {0, 
    0}, $CellContext`s2$2301258$$ = {0, 0}, $CellContext`e1$2301259$$ = {0, 
    0}, $CellContext`e2$2301260$$ = {0, 0}}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, "Variables" :> {$CellContext`e1$$ = {
          Rational[1, 3], 
          Rational[1, 3]}, $CellContext`e2$$ = {
          Rational[1, 3], 
          Rational[2, 3]}, $CellContext`progress$$ = 1, $CellContext`s1$$ = {
          Rational[1, 3], 
          Rational[2, 3]}, $CellContext`s2$$ = {
          Rational[1, 3], 
          Rational[1, 3]}, $CellContext`\[Epsilon]$$ = Rational[1, 1000]}, 
      "ControllerVariables" :> {
        Hold[$CellContext`progress$$, $CellContext`progress$2301255$$, 0], 
        Hold[$CellContext`\[Epsilon]$$, $CellContext`\[Epsilon]$2301256$$, 0], 
        Hold[$CellContext`s1$$, $CellContext`s1$2301257$$, {0, 0}], 
        Hold[$CellContext`s2$$, $CellContext`s2$2301258$$, {0, 0}], 
        Hold[$CellContext`e1$$, $CellContext`e1$2301259$$, {0, 0}], 
        Hold[$CellContext`e2$$, $CellContext`e2$2301260$$, {0, 0}]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`movesAndPositions$, $CellContext`path$, \
$CellContext`path1$, $CellContext`path2$, $CellContext`r$ = 
         1/40, $CellContext`thickness$ = 
         0.002, $CellContext`rotateSolution$, $CellContext`ps1$, \
$CellContext`pe1$, $CellContext`ps2$, $CellContext`pe2$, $CellContext`pm1$, \
$CellContext`pm2$, $CellContext`offset$, $CellContext`c1$ = 
         Blue, $CellContext`c2$ = 
         Magenta, $CellContext`mvNum$, $CellContext`mvFrac$}, 
        If[EuclideanDistance[$CellContext`s1$$, $CellContext`s2$$] < \
$CellContext`\[Epsilon]$$, 
          If[Part[$CellContext`s1$$, 1] < Part[$CellContext`s2$$, 1], 
           If[
           Part[$CellContext`s1$$, 1] > 2 $CellContext`\[Epsilon]$$, 
            Part[$CellContext`s1$$, 1] = 
            Part[$CellContext`s2$$, 1] - $CellContext`\[Epsilon]$$, 
            Part[$CellContext`s2$$, 1] = 
            Part[$CellContext`s1$$, 1] + $CellContext`\[Epsilon]$$], 
           If[
           Part[$CellContext`s2$$, 1] > 2 $CellContext`\[Epsilon]$$, 
            Part[$CellContext`s2$$, 1] = 
            Part[$CellContext`s1$$, 1] - $CellContext`\[Epsilon]$$, 
            Part[$CellContext`s1$$, 1] = 
            Part[$CellContext`s2$$, 1] + $CellContext`\[Epsilon]$$]]]; 
        If[EuclideanDistance[$CellContext`e1$$, $CellContext`e2$$] < \
$CellContext`\[Epsilon]$$, 
          If[Part[$CellContext`e1$$, 1] < Part[$CellContext`e2$$, 1], 
           If[
           Part[$CellContext`e1$$, 1] > 2 $CellContext`\[Epsilon]$$, 
            Part[$CellContext`e1$$, 1] = 
            Part[$CellContext`e2$$, 1] - $CellContext`\[Epsilon]$$, 
            Part[$CellContext`e2$$, 1] = 
            Part[$CellContext`e1$$, 1] + $CellContext`\[Epsilon]$$], 
           If[
           Part[$CellContext`e2$$, 1] > 2 $CellContext`\[Epsilon]$$, 
            Part[$CellContext`e2$$, 1] = 
            Part[$CellContext`e1$$, 1] - $CellContext`\[Epsilon]$$, 
            Part[$CellContext`e1$$, 1] = 
            Part[$CellContext`e2$$, 
               1] + $CellContext`\[Epsilon]$$]]]; {$CellContext`ps1$, \
$CellContext`pe1$, $CellContext`ps2$, $CellContext`pe2$} = If[
           Or[Part[$CellContext`s1$$, 1] < Part[$CellContext`s2$$, 1], 
            And[
            Part[$CellContext`s1$$, 1] == Part[$CellContext`s2$$, 1], 
             Part[$CellContext`s1$$, 2] < 
             Part[$CellContext`s2$$, 
               2]]], {$CellContext`s1$$, $CellContext`e1$$, \
$CellContext`s2$$, $CellContext`e2$$}, {$CellContext`s2$$, $CellContext`e2$$, \
$CellContext`s1$$, $CellContext`e1$$}]; $CellContext`rotateSolution$ = 
         If[Part[$CellContext`ps1$, 2] < 
           Part[$CellContext`ps2$, 
             2], {$CellContext`ps1$, $CellContext`pe1$, $CellContext`ps2$, \
$CellContext`pe2$} = 
            Map[$CellContext`RotateCCW90, {$CellContext`ps1$, \
$CellContext`pe1$, $CellContext`ps2$, $CellContext`pe2$}]; True, 
           False]; {$CellContext`path$, $CellContext`path1$, \
$CellContext`path2$} = $CellContext`achieveDesiredSpacing[$CellContext`ps1$, \
$CellContext`ps2$, $CellContext`pe1$, $CellContext`pe2$, $CellContext`\
\[Epsilon]$$]; 
        If[$CellContext`rotateSolution$, {{$CellContext`ps1$, \
$CellContext`pe1$, $CellContext`ps2$, $CellContext`pe2$} = 
            Map[$CellContext`RotateCW90, {$CellContext`ps1$, \
$CellContext`pe1$, $CellContext`ps2$, $CellContext`pe2$}]; $CellContext`path$ = 
            Map[$CellContext`RotateCW90inplace, $CellContext`path$]; \
$CellContext`path1$ = 
            Map[$CellContext`RotateCW90, $CellContext`path1$]; \
$CellContext`path2$ = Map[$CellContext`RotateCW90, $CellContext`path2$]; 
           Null}]; $CellContext`mvNum$ = 
         Floor[$CellContext`progress$$ (Length[$CellContext`path$] - 
            1)]; $CellContext`mvFrac$ = 
         FractionalPart[$CellContext`progress$$ (Length[$CellContext`path$] - 
            1)]; $CellContext`pm2$ = 
         If[$CellContext`mvFrac$ > 0, 
           Part[$CellContext`path2$, $CellContext`mvNum$ + 1, 
             Span[1, All]] + $CellContext`mvFrac$ (
             Part[$CellContext`path2$, $CellContext`mvNum$ + 2, 
               Span[1, All]] - 
             Part[$CellContext`path2$, $CellContext`mvNum$ + 1, 
              Span[1, All]]), 
           Part[$CellContext`path2$, $CellContext`mvNum$ + 1, 
            Span[1, All]]]; $CellContext`pm1$ = 
         If[$CellContext`mvFrac$ > 0, 
           Part[$CellContext`path1$, $CellContext`mvNum$ + 1, 
             Span[1, All]] + $CellContext`mvFrac$ (
             Part[$CellContext`path1$, $CellContext`mvNum$ + 2, 
               Span[1, All]] - 
             Part[$CellContext`path1$, $CellContext`mvNum$ + 1, 
              Span[1, All]]), 
           Part[$CellContext`path1$, $CellContext`mvNum$ + 1, 
            Span[1, All]]]; Graphics[{{
            Darker[Red], 
            Rectangle[(-0.025) {1, 1}, 1.025 {1, 1}]}, {
            Lighter[Gray, 0.8], 
            Rectangle[{0, 0}, {1, 1}]}, {White, 
            
            Rectangle[{$CellContext`\[Epsilon]$$, $CellContext`\[Epsilon]$$}, \
{1 - $CellContext`\[Epsilon]$$, 1 - $CellContext`\[Epsilon]$$}]}, {
            Lighter[Gray, 0.8], 
            Disk[$CellContext`ps2$, $CellContext`\[Epsilon]$$]}, {
            Lighter[Gray, 0.8], 
            Disk[$CellContext`pe2$, $CellContext`\[Epsilon]$$]}, 
           PointSize[0.01], 
           Arrowheads[0.02], 
           Thickness[$CellContext`thickness$], {$CellContext`c1$, {
             Opacity[0.3], Dashed, 
             Arrow[{$CellContext`ps1$, $CellContext`pe1$}]}, 
            Point[$CellContext`ps1$], 
            EdgeForm[
             Directive[$CellContext`c1$, 
              Thickness[$CellContext`thickness$]]], 
            FaceForm[None], 
            
            Rectangle[$CellContext`ps1$ - (2/3) $CellContext`r$ {1, 
              1}, $CellContext`ps1$ + (2/3) $CellContext`r$ {1, 1}], 
            Circle[$CellContext`pe1$, $CellContext`r$]}, {$CellContext`c2$, {
             Opacity[0.3], Dashed, 
             Arrow[{$CellContext`ps2$, $CellContext`pe2$}]}, 
            Point[$CellContext`ps2$], 
            EdgeForm[
             Directive[$CellContext`c2$, 
              Thickness[$CellContext`thickness$]]], 
            FaceForm[None], 
            
            Rectangle[$CellContext`ps2$ - (2/3) $CellContext`r$ {1, 
              1}, $CellContext`ps2$ + (2/3) $CellContext`r$ {1, 1}], 
            Circle[$CellContext`pe2$, $CellContext`r$]}, {$CellContext`c1$, 
            Table[
             Arrow[{
               Part[$CellContext`path1$, $CellContext`i, 
                Span[1, All]], 
               Part[$CellContext`path1$, $CellContext`i + 1, 
                Span[1, All]]}], {$CellContext`i, 1, $CellContext`mvNum$}], 
            Arrow[{
              Part[$CellContext`path1$, $CellContext`mvNum$ + 1, 
               Span[1, All]], $CellContext`pm1$}], 
            Point[$CellContext`pm1$], {
             If[
              Or[
              Part[$CellContext`pm1$, 1] == 0, Part[$CellContext`pm1$, 2] == 
               0, Part[$CellContext`pm1$, 1] == 1, Part[$CellContext`pm1$, 2] == 
               1], {
               PointSize[0.005], White, 
               Point[$CellContext`pm1$]}]}}, {$CellContext`c2$, 
            Table[
             Arrow[{
               Part[$CellContext`path2$, $CellContext`i, 
                Span[1, All]], 
               Part[$CellContext`path2$, $CellContext`i + 1, 
                Span[1, All]]}], {$CellContext`i, 1, $CellContext`mvNum$}], 
            Arrow[{
              Part[$CellContext`path2$, $CellContext`mvNum$ + 1, 
               Span[1, All]], $CellContext`pm2$}], 
            Point[$CellContext`pm2$], {
             If[
              Or[
              Part[$CellContext`pm2$, 1] == 0, Part[$CellContext`pm2$, 2] == 
               0, Part[$CellContext`pm2$, 1] == 1, Part[$CellContext`pm2$, 2] == 
               1], {
               PointSize[0.005], White, 
               Point[$CellContext`pm2$]}]}}, {
           If[$CellContext`mvNum$ + 1 == 
              Length[$CellContext`path$], {$CellContext`mvNum$ = 
               Length[$CellContext`path$] - 2, $CellContext`mvFrac$ = 1}]; 
            Darker[Red], 
            Text[
             Style[
              StringForm[
              "Move `` of ``", $CellContext`mvNum$ + 1, 
               Length[$CellContext`path$] - 1], FontSize -> 18], {1.55, 0.9}], 
            Text[
             Style[
              StringForm["Total distance `` ", 
               Round[
                N[
                 Total[
                  Table[
                   EuclideanDistance[
                    Part[$CellContext`path$, $CellContext`i], {0, 
                    0}], {$CellContext`i, 2, 
                    Length[$CellContext`path$]}]]], 0.01]], FontSize -> 18], {
             1.55, 0.8}], $CellContext`offset$ = {1.55, 0.5} - (1/2) 
              Part[$CellContext`path$, $CellContext`mvNum$ + 2, 
                Span[1, All]]; {
              Opacity[0.3], 
              
              Arrow[{$CellContext`offset$, $CellContext`offset$ + 
                Part[$CellContext`path$, $CellContext`mvNum$ + 2, 
                  Span[1, All]]}]}, 
            
            Point[$CellContext`offset$ + $CellContext`mvFrac$ 
              Part[$CellContext`path$, $CellContext`mvNum$ + 2, 
                Span[1, All]]], 
            
            Arrow[{$CellContext`offset$, $CellContext`offset$ + \
$CellContext`mvFrac$ Part[$CellContext`path$, $CellContext`mvNum$ + 2, 
                 Span[1, All]]}]}}, ImageSize -> 600, 
          PlotRange -> {{-0.05, 2.05}, {-0.05, 1.05}}]], 
      "Specifications" :> {{{$CellContext`progress$$, 1, "progress"}, 0, 1, 
         Rational[1, 420], ControlType -> Slider, Appearance -> "Labeled", 
         ControlPlacement -> 1}, {{$CellContext`\[Epsilon]$$, 
          Rational[1, 1000], "\[Epsilon]"}, 
         Rational[1, 1000], 
         Rational[1, 10], 
         Rational[1, 1000], ControlType -> Slider, Appearance -> "Labeled", 
         ControlPlacement -> 2}, 
        Row[{
          Manipulate`Place[1], 
          Manipulate`Place[2]}], {{$CellContext`s1$$, {
           Rational[1, 3], 
           Rational[2, 3]}}, {0, 0}, {1, 1}, ControlType -> Locator, 
         Appearance -> None}, {{$CellContext`s2$$, {
           Rational[1, 3], 
           Rational[1, 3]}}, {0, 0}, {1, 1}, ControlType -> Locator, 
         Appearance -> None}, {{$CellContext`e1$$, {
           Rational[1, 3], 
           Rational[1, 3]}}, {0, 0}, {1, 1}, ControlType -> Locator, 
         Appearance -> None}, {{$CellContext`e2$$, {
           Rational[1, 3], 
           Rational[2, 3]}}, {0, 0}, {1, 1}, ControlType -> Locator, 
         Appearance -> None}}, "Options" :> {}, 
      "DefaultOptions" :> {ControllerLinking -> True}],
     ImageSizeCache->{489., {154., 157.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`RotateCCW90[
         Pattern[$CellContext`r, 
          Blank[]]] := {
         Part[$CellContext`r, 2], 1 - 
         Part[$CellContext`r, 1]}, $CellContext`achieveDesiredSpacing[
         Pattern[$CellContext`ps1, 
          Blank[]], 
         Pattern[$CellContext`ps2, 
          Blank[]], 
         Pattern[$CellContext`pe1, 
          Blank[]], 
         Pattern[$CellContext`pe2, 
          Blank[]], 
         Pattern[$CellContext`\[Epsilon], 
          Blank[]]] := 
       Module[{$CellContext`\[CapitalDelta]ey = 
          Part[$CellContext`pe2, 2] - 
           Part[$CellContext`pe1, 2], $CellContext`\[CapitalDelta]ex = 
          Part[$CellContext`pe2, 1] - 
           Part[$CellContext`pe1, 1], $CellContext`L = 
          1, $CellContext`\[CapitalDelta]r, $CellContext`r1, $CellContext`r2, \
$CellContext`moves, $CellContext`pm1, $CellContext`pm2}, $CellContext`r2 = \
$CellContext`ps2; $CellContext`r1 = $CellContext`ps1; $CellContext`moves = {{
           0, 0}}; $CellContext`pm1 = {$CellContext`r1}; $CellContext`pm2 = \
{$CellContext`r2}; 
         If[$CellContext`pe1 - $CellContext`ps1 == $CellContext`pe2 - \
$CellContext`ps2, $CellContext`\[CapitalDelta]r = $CellContext`pe1 - \
$CellContext`ps1; AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
           AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]; 
           AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]; 
           AppendTo[$CellContext`pm1, $CellContext`r1]; 
           AppendTo[$CellContext`pm2, $CellContext`r2]; 
           Return[{$CellContext`moves, $CellContext`pm1, $CellContext`pm2}]]; 
         If[
           
           And[$CellContext`\[CapitalDelta]ex > 
            0, $CellContext`\[CapitalDelta]ey < 
            0, $CellContext`\[CapitalDelta]ex - (Part[$CellContext`ps2, 1] - 
             Part[$CellContext`ps1, 1]) < 
            0, $CellContext`\[CapitalDelta]ey - (Part[$CellContext`ps2, 2] - 
             Part[$CellContext`ps1, 2]) > 0], 
           Module[{$CellContext`BestDir}, $CellContext`BestDir = Part[
               
               Sort[{{"u", (Part[$CellContext`pe1, 1] - 
                    Part[$CellContext`ps1, 1])^2 + (2 $CellContext`L - 
                    Part[$CellContext`pe1, 2] - 
                    Part[$CellContext`ps1, 
                    2])^2 + $CellContext`effectContractMv1[$CellContext`ps1, \
$CellContext`ps2, $CellContext`pe1, $CellContext`pe2, "u"]}, {
                 "d", (Part[$CellContext`pe2, 1] - 
                    Part[$CellContext`ps2, 1])^2 + (Part[$CellContext`pe2, 2] + 
                    Part[$CellContext`ps2, 
                    2])^2 + $CellContext`effectContractMv1[$CellContext`ps1, \
$CellContext`ps2, $CellContext`pe1, $CellContext`pe2, "d"]}, {
                 "l", (Part[$CellContext`pe1, 1] + 
                    Part[$CellContext`ps1, 1])^2 + (Part[$CellContext`pe1, 2] - 
                    Part[$CellContext`ps1, 
                    2])^2 + $CellContext`effectContractMv1[$CellContext`ps1, \
$CellContext`ps2, $CellContext`pe1, $CellContext`pe2, "l"]}, {
                 "r", (2 $CellContext`L - Part[$CellContext`pe2, 1] - 
                    Part[$CellContext`ps2, 1])^2 + (Part[$CellContext`pe2, 2] - 
                    Part[$CellContext`ps2, 
                    2])^2 + $CellContext`effectContractMv1[$CellContext`ps1, \
$CellContext`ps2, $CellContext`pe1, $CellContext`pe2, "r"]}}, Part[#, 2] < 
                Part[#2, 2]& ], 1, 
               1]; $CellContext`\[CapitalDelta]r = \
$CellContext`contractMv1[$CellContext`ps1, $CellContext`ps2, \
$CellContext`pe1, $CellContext`pe2, $CellContext`BestDir]; 
            AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
            AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]; 
            AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]; 
            AppendTo[$CellContext`pm1, $CellContext`r1]; 
            AppendTo[$CellContext`pm2, $CellContext`r2]; 
            Which[$CellContext`BestDir == 
              "u", $CellContext`\[CapitalDelta]r = {$CellContext`\
\[CapitalDelta]ex - (Part[$CellContext`r2, 1] - 
                 Part[$CellContext`r1, 1]), $CellContext`\[CapitalDelta]ey - (
                 Part[$CellContext`r2, 2] - Part[$CellContext`r1, 2])}; 
              AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r], \
$CellContext`BestDir == 
              "d", $CellContext`\[CapitalDelta]r = {
                Part[$CellContext`r2, 1] - 
                 Part[$CellContext`r1, 1] - $CellContext`\[CapitalDelta]ex, (
                  Part[$CellContext`r2, 2] - 
                  Part[$CellContext`r1, 2]) - $CellContext`\[CapitalDelta]ey}; 
              AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r], \
$CellContext`BestDir == 
              "l", $CellContext`\[CapitalDelta]r = {$CellContext`\
\[CapitalDelta]ex - (Part[$CellContext`r2, 1] - 
                 Part[$CellContext`r1, 1]), $CellContext`\[CapitalDelta]ey - (
                 Part[$CellContext`r2, 2] - Part[$CellContext`r1, 2])}; 
              AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r], \
$CellContext`BestDir == 
              "r", $CellContext`\[CapitalDelta]r = {
                Part[$CellContext`r2, 1] - 
                 Part[$CellContext`r1, 1] - $CellContext`\[CapitalDelta]ex, (
                  Part[$CellContext`r2, 2] - 
                  Part[$CellContext`r1, 2]) - $CellContext`\[CapitalDelta]ey}; 
              AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]; Null]; 
            AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
            AppendTo[$CellContext`pm1, $CellContext`r1]; 
            AppendTo[$CellContext`pm2, $CellContext`r2]; $CellContext`\
\[CapitalDelta]r = {
              Part[$CellContext`pe2, 1] - Part[$CellContext`r2, 1], 
               Part[$CellContext`pe2, 2] - Part[$CellContext`r2, 2]}; 
            AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]; 
            AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]; 
            AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
            AppendTo[$CellContext`pm1, $CellContext`r1]; 
            AppendTo[$CellContext`pm2, $CellContext`r2]; 
            Return[{$CellContext`moves, $CellContext`pm1, \
$CellContext`pm2}]]]; $CellContext`\[CapitalDelta]r = {-
            Part[$CellContext`r1, 1], -Min[
               Part[$CellContext`r2, 2], 
               Part[$CellContext`r1, 
                 2] + $CellContext`\[CapitalDelta]ey] + $CellContext`\
\[Epsilon]}; AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]; 
         AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]; 
         AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
         AppendTo[$CellContext`pm1, $CellContext`r1]; 
         AppendTo[$CellContext`pm2, $CellContext`r2]; $CellContext`\
\[CapitalDelta]r = {-Part[$CellContext`r2, 1], Abs[
               Sign[$CellContext`\[CapitalDelta]ey]] 
             Min[Part[$CellContext`r1, 2] - 
               Part[$CellContext`r2, 
                2] + $CellContext`\[CapitalDelta]ey - \
$CellContext`\[Epsilon], $CellContext`L - 
               Part[$CellContext`r2, 
                2] - $CellContext`\[Epsilon]] + $CellContext`\[Epsilon]}; 
         If[Part[$CellContext`r1, 1] > 0, 
           AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]]; 
         If[Part[$CellContext`r2, 1] > 0, 
           AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]]; 
         AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
         AppendTo[$CellContext`pm1, $CellContext`r1]; 
         AppendTo[$CellContext`pm2, $CellContext`r2]; $CellContext`\
\[CapitalDelta]r = {
            
            Max[$CellContext`\[Epsilon], (-
              Sign[Part[$CellContext`r2, 2] - 
                Part[$CellContext`r1, 2]]) $CellContext`\[CapitalDelta]ex], -
            Min[
              Part[$CellContext`r1, 2], 
              Part[$CellContext`r2, 2]]}; 
         AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]; 
         AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]; 
         AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
         AppendTo[$CellContext`pm1, $CellContext`r1]; 
         AppendTo[$CellContext`pm2, $CellContext`r2]; $CellContext`\
\[CapitalDelta]r = {
            
            If[$CellContext`\[CapitalDelta]ex != 0, 
             Sign[Part[$CellContext`r2, 2] - 
               Part[$CellContext`r1, 2]] $CellContext`\[CapitalDelta]ex, Abs[
               
               Sign[$CellContext`\[CapitalDelta]ey - Part[$CellContext`r2, 2] + 
                Part[$CellContext`r1, 2]]] $CellContext`\[Epsilon]], (Abs[
               Sign[$CellContext`\[CapitalDelta]ey]] - 1) 
            Abs[Part[$CellContext`r1, 2] - Part[$CellContext`r2, 2]]}; 
         If[Part[$CellContext`r1, 2] > 0, 
           AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]]; 
         If[Part[$CellContext`r2, 2] > 0, 
           AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]]; 
         AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
         AppendTo[$CellContext`pm1, $CellContext`r1]; 
         AppendTo[$CellContext`pm2, $CellContext`r2]; 
         If[$CellContext`\[CapitalDelta]ey != 
           Part[$CellContext`r2, 2] - 
            Part[$CellContext`r1, 
             2], $CellContext`\[CapitalDelta]r = {$CellContext`L - Max[
               Part[$CellContext`r1, 1], 
               Part[$CellContext`r2, 1]], 
              
              If[$CellContext`\[CapitalDelta]ex < 
               0, $CellContext`\[Epsilon], $CellContext`\[CapitalDelta]ey - 
               Max[
                Part[$CellContext`r1, 2], 
                Part[$CellContext`r2, 2]]]}; 
           AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]; 
           AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]; 
           AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
           AppendTo[$CellContext`pm1, $CellContext`r1]; 
           AppendTo[$CellContext`pm2, $CellContext`r2]; $CellContext`\
\[CapitalDelta]r = {(-(Abs[
                  Sign[$CellContext`\[CapitalDelta]ex]] - 
                1)) $CellContext`\[Epsilon], 
              If[$CellContext`\[CapitalDelta]ex != 0, -
                Sign[$CellContext`\[CapitalDelta]ex], -Sign[Max[
                    Part[$CellContext`r1, 1], 
                    Part[$CellContext`r2, 1]] - Min[
                   Part[$CellContext`r1, 1], 
                   
                   Part[$CellContext`r2, 
                    1]]]] ($CellContext`\[CapitalDelta]ey - Max[
                Part[$CellContext`r2, 2], 
                Part[$CellContext`r1, 2]] + Min[
                 Part[$CellContext`r2, 2], 
                 Part[$CellContext`r1, 2]])}; If[Part[$CellContext`r1, 1] < 1, 
             AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]]; 
           If[Part[$CellContext`r2, 1] < 1, 
             AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]]; 
           AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
           AppendTo[$CellContext`pm1, $CellContext`r1]; 
           AppendTo[$CellContext`pm2, $CellContext`r2]]; $CellContext`\
\[CapitalDelta]r = {
           Part[$CellContext`pe2, 1] - Part[$CellContext`r2, 1], 
            Part[$CellContext`pe2, 2] - Part[$CellContext`r2, 2]}; 
         AddTo[$CellContext`r1, $CellContext`\[CapitalDelta]r]; 
         AddTo[$CellContext`r2, $CellContext`\[CapitalDelta]r]; 
         AppendTo[$CellContext`moves, $CellContext`\[CapitalDelta]r]; 
         AppendTo[$CellContext`pm1, $CellContext`r1]; 
         AppendTo[$CellContext`pm2, $CellContext`r2]; 
         Return[{$CellContext`moves, $CellContext`pm1, $CellContext`pm2}]], \
$CellContext`effectContractMv1[
         Pattern[$CellContext`ps1, 
          Blank[]], 
         Pattern[$CellContext`ps2, 
          Blank[]], 
         Pattern[$CellContext`pe1, 
          Blank[]], 
         Pattern[$CellContext`pe2, 
          Blank[]], 
         Pattern[$CellContext`BestDir, 
          Blank[]]] := 
       Module[{$CellContext`\[CapitalDelta]r, $CellContext`r1, \
$CellContext`r2}, $CellContext`\[CapitalDelta]r = \
$CellContext`contractMv1[$CellContext`ps1, $CellContext`ps2, \
$CellContext`pe1, $CellContext`pe2, $CellContext`BestDir]; $CellContext`r1 = \
$CellContext`ps1 + $CellContext`\[CapitalDelta]r; $CellContext`r2 = \
$CellContext`ps2 + $CellContext`\[CapitalDelta]r; If[
           Or[
           Part[$CellContext`r1, 1] < 0, Part[$CellContext`r1, 1] > 1, 
            Part[$CellContext`r1, 2] < 0, Part[$CellContext`r1, 2] > 1, 
            Part[$CellContext`r2, 1] < 0, Part[$CellContext`r2, 1] > 1, 
            Part[$CellContext`r2, 2] < 0, Part[$CellContext`r2, 2] > 1], 
           Infinity, 0]], $CellContext`contractMv1[
         Pattern[$CellContext`ps1, 
          Blank[]], 
         Pattern[$CellContext`ps2, 
          Blank[]], 
         Pattern[$CellContext`pe1, 
          Blank[]], 
         Pattern[$CellContext`pe2, 
          Blank[]], 
         Pattern[$CellContext`BestDir, 
          Blank[]]] := 
       Module[{$CellContext`\[CapitalDelta]r}, 
         Which[$CellContext`BestDir == 
           "u", $CellContext`\[CapitalDelta]r = {((1 - 
                Part[$CellContext`ps1, 2])/(2 - Part[$CellContext`ps1, 2] - 
               Part[$CellContext`pe1, 2])) (Part[$CellContext`pe2, 1] - 
               Part[$CellContext`ps2, 1]), 1 - Part[$CellContext`ps1, 2]}; 
           Null, $CellContext`BestDir == 
           "d", $CellContext`\[CapitalDelta]r = {(Part[$CellContext`ps2, 2]/(
               Part[$CellContext`ps2, 2] + Part[$CellContext`pe2, 2])) (
               Part[$CellContext`pe2, 1] - Part[$CellContext`ps2, 1]), -
              Part[$CellContext`ps2, 2]}; Null, $CellContext`BestDir == 
           "l", $CellContext`\[CapitalDelta]r = {-
              Part[$CellContext`ps1, 1], (Part[$CellContext`ps1, 1]/(
               Part[$CellContext`ps1, 1] + Part[$CellContext`pe1, 1])) (
               Part[$CellContext`pe2, 2] - Part[$CellContext`ps2, 2])}; 
           Null, $CellContext`BestDir == 
           "r", $CellContext`\[CapitalDelta]r = {
             1 - Part[$CellContext`ps2, 1], ((1 - Part[$CellContext`ps2, 1])/(
               2 - Part[$CellContext`ps2, 1] - Part[$CellContext`pe2, 1])) (
               Part[$CellContext`pe2, 2] - Part[$CellContext`ps2, 2])}; Null]; 
         Return[$CellContext`\[CapitalDelta]r]], $CellContext`RotateCW90[
         Pattern[$CellContext`r, 
          Blank[]]] := {1 - Part[$CellContext`r, 2], 
         Part[$CellContext`r, 1]}, $CellContext`RotateCW90inplace[
         Pattern[$CellContext`r, 
          Blank[]]] := {-Part[$CellContext`r, 2], 
         Part[$CellContext`r, 1]}, Attributes[PlotRange] = {ReadProtected}}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.6567011401579103`*^9, 3.656701264683568*^9, {3.69145279129803*^9, 
   3.691452817347315*^9}, 3.691452860966983*^9, {3.691453136111508*^9, 
   3.69145320988822*^9}, {3.691453803148247*^9, 3.6914538232682247`*^9}, 
   3.6914538633410892`*^9, {3.6914539860216713`*^9, 3.6914540007318697`*^9}, 
   3.691454101296389*^9},
 CellID->1782372284]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "DetailsSection"],

Cell["\<\
Micro- and nano-robots hold promise for targeted drug delivery and \
micro-scale manufacturing. Due to their small size, large numbers of \
micro-robots are required to deliver sufficient payloads, and their size also \
makes it difficult to perform on board computation or contain a power and \
propulsion source. For this reason, these robots are usually powered and \
controlled by global inputs, such as a uniform external electric or magnetic \
field. Nevertheless, these applications require precision control of the \
shape and position of the robot swarm. This Demonstration uses friction with \
boundary walls to break the symmetry caused by the global input. Wall \
friction is used to steer two robots to arbitrary positions. We assume the \
walls have infinite friction that opposes any shear forces, so a particle in \
contact with the wall will not move unless the global input is directed away \
from the wall.\
\>", "DetailNotes",
 CellChangeTimes->{{3.6562436889702787`*^9, 3.656243774394072*^9}, {
   3.656243805609994*^9, 3.65624388963586*^9}, 3.6562444650748053`*^9, 
   3.6563686877863894`*^9, {3.6567754475712347`*^9, 3.656775449202664*^9}, {
   3.656775502986311*^9, 3.656775503423669*^9}, 3.65677557215765*^9, {
   3.6567756324490557`*^9, 3.6567756350548143`*^9}, 3.6914541636916437`*^9, 
   3.691454782234602*^9, 3.691455282633604*^9},
 CellID->1900616087],

Cell[TextData[{
 "Assume two robots are initialized at ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "1"], TraditionalForm]], "InlineMath",
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "2"], TraditionalForm]], "InlineMath",
  FormatType->"TraditionalForm"],
 " with corresponding goal destinations ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["e", "1"], TraditionalForm]], "InlineMath",
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["e", "2"], TraditionalForm]], "InlineMath",
  FormatType->"TraditionalForm"],
 ". We can exploit symmetry in the solution by labeling the leftmost (or, if \
they have the same x coordinate, the topmost) robot ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "1"], TraditionalForm]], "InlineMath",
  FormatType->"TraditionalForm"],
 ". If ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "1"], TraditionalForm]], "InlineMath",
  FormatType->"TraditionalForm"],
 " is not also the topmost robot, we rotate the coordinate frame by 90\
\[Degree]. Denote the current positions of the robots ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["r", "1"], TraditionalForm]], "InlineMath",
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["r", "2"], TraditionalForm]], "InlineMath",
  FormatType->"TraditionalForm"],
 ". Values .x and .y denote the x and y coordinates, i.e., ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "1"], TraditionalForm]], "InlineMath",
  FormatType->"TraditionalForm"],
 ".x and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "1"], TraditionalForm]], "InlineMath",
  FormatType->"TraditionalForm"],
 ".y denote the x and y locations of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "1"], TraditionalForm]], "InlineMath",
  FormatType->"TraditionalForm"],
 ". "
}], "DetailNotes",
 CellChangeTimes->{{3.6914542840105553`*^9, 3.6914544313568363`*^9}},
 CellID->1982808731],

Cell[TextData[{
 "Our algorithm assigns a global control input at every instance. The goal is \
to adjust \[Laplacian]r.x = ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["r", "2"], TraditionalForm]], "InlineMath",
  FormatType->"TraditionalForm"],
 ".x \[Minus] ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["r", "1"], TraditionalForm]], "InlineMath",
  FormatType->"TraditionalForm"],
 ".x from \[Laplacian]s.x = ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "2"], TraditionalForm]], "InlineMath",
  FormatType->"TraditionalForm"],
 ".x \[Minus] ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "1"], TraditionalForm]], "InlineMath",
  FormatType->"TraditionalForm"],
 ".x to \[Laplacian]e.x = ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["e", "2"], TraditionalForm]], "InlineMath",
  FormatType->"TraditionalForm"],
 ".x \[Minus] ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["e", "1"], TraditionalForm]], "InlineMath",
  FormatType->"TraditionalForm"],
 ".x and adjust \[Laplacian]r.y = ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["r", "2"], TraditionalForm]], "InlineMath",
  FormatType->"TraditionalForm"],
 ".y \[Minus] ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["r", "1"], TraditionalForm]], "InlineMath",
  FormatType->"TraditionalForm"],
 ".y from \[Laplacian]s.y = ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "2"], TraditionalForm]], "InlineMath",
  FormatType->"TraditionalForm"],
 ".y \[Minus] ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "1"], TraditionalForm]], "InlineMath",
  FormatType->"TraditionalForm"],
 ".y to \[Laplacian]ey = ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["e", "2"], TraditionalForm]], "InlineMath",
  FormatType->"TraditionalForm"],
 ".y \[Minus] ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["e", "`"], TraditionalForm]], "InlineMath",
  FormatType->"TraditionalForm"],
 ".y using a shared global control input. This algorithm exploits boundary \
friction to stop robots in contact with the wall."
}], "DetailNotes",
 CellChangeTimes->{{3.6914542840105553`*^9, 3.6914544650169477`*^9}, {
  3.6914545455648623`*^9, 3.69145459959223*^9}, {3.69145480418937*^9, 
  3.691454901968823*^9}, {3.691454963825759*^9, 3.691455000906932*^9}, {
  3.691455032939507*^9, 3.691455226077978*^9}},
 CellID->2140732382],

Cell["\<\
If the robots can be moved to their goal positions in one move, they are \
moved directly to the goal positions. If the ending positions are closer in \
both x and y directions than the initial positions, our algorithm finds the \
shortest three move sequence to bring them to their goals.\
\>", "DetailNotes",
 CellChangeTimes->{{3.6914542840105553`*^9, 3.6914544650169477`*^9}, {
   3.6914545455648623`*^9, 3.69145459959223*^9}, {3.69145480418937*^9, 
   3.691454901968823*^9}, {3.691454963825759*^9, 3.691455000906932*^9}, {
   3.691455032939507*^9, 3.6914552289454803`*^9}, 3.691455287590695*^9},
 CellID->1033792053],

Cell["\<\
Otherwise, our algorithm solves the positioning problem in four steps: First, \
it adjusts \[Laplacian]r.y, \[Laplacian]r.x as much as possible using the \
left wall. Second, \[Laplacian]r.x \[Minus] \[Laplacian]e.x is reduced to \
zero using the bottom wall. Third, if the robots were not correctly \
positioned relative to each other, \[Laplacian]r.y \[Minus] \[Laplacian]e.y \
is reduced to zero using the right wall. Lastly, the robots, now correctly \
positioned relative to each other, are moved to their goal locations.\
\>", "DetailNotes",
 CellChangeTimes->{{3.6914542840105553`*^9, 3.6914544650169477`*^9}, {
  3.6914545455648623`*^9, 3.6914546270948544`*^9}, {3.691455006146391*^9, 
  3.691455025858952*^9}, {3.691455237033888*^9, 3.691455242081594*^9}, {
  3.69145599908799*^9, 3.6914560183767138`*^9}},
 CellID->1325557675],

Cell[TextData[{
 "In the worse case, adjusting both \[Laplacian]r and \[Laplacian]r requires \
all four steps. The worst case path length is 2(",
 Cell[BoxData[
  FormBox[
   SqrtBox["2"], TraditionalForm]], "InlineMath",
  FormatType->"TraditionalForm"],
 "+1) \[TildeTilde] 4.82, and occurs when the robots are in opposite corners \
and must switch positions."
}], "DetailNotes",
 CellChangeTimes->{{3.6914542840105553`*^9, 3.691454471109749*^9}, 
   3.69145452354599*^9, {3.691454649779936*^9, 3.691454712303894*^9}, {
   3.691454946698695*^9, 3.691454952561439*^9}, {3.691455251810431*^9, 
   3.6914552542741747`*^9}},
 CellID->482604685],

Cell["\<\
The algorithm assumes robots do not start and end closer than \[Epsilon] to \
the boundary and that starting and ending positions are separated by at least \
\[Epsilon].\
\>", "DetailNotes",
 CellChangeTimes->{{3.6914542840105553`*^9, 3.691454471109749*^9}, 
   3.69145452354599*^9, {3.691454649779936*^9, 3.6914547787085743`*^9}},
 CellID->2054930820]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "ControlSuggestionsSection"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Resize Images"]}],
  "\"Click inside an image to reveal its orange resize frame.\\nDrag any of \
the orange resize handles to resize the image.\"",
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"ResizeImages"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Rotate and Zoom in 3D"]}],
  RowBox[{
   "\"Drag a 3D graphic to rotate it. Starting the drag near the center \
tumbles\\nthe graphic; starting near a corner turns it parallel to the plane \
of the screen.\\nHold down \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" (or \"", 
    FrameBox[
    "Cmd", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" on Mac) and drag up and down to zoom.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"RotateAndZoomIn3D"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[" Drag Locators"]}],
  RowBox[{"\"Drag any locator (\"", 
    GraphicsBox[
     LocatorBox[
      Scaled[{0.5, 0.5}]], ImageSize -> 20], 
    "\", etc.) to move it around.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.656243373781057*^9},
 FontFamily->"Verdana",
 CellTags->"DragLocators"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Create and Delete Locators"]}],
  RowBox[{"\"Insert a new locator in the graphic by holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key\\nand clicking where you want it to be. Delete a locator by \
clicking it\\nwhile holding down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" key.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{{3.6563584938112636`*^9, 3.656358496187501*^9}},
 FontFamily->"Verdana",
 CellTags->"CreateAndDeleteLocators"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[" Slider Zoom"]}],
  RowBox[{"\"Hold down the \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], 
    "\" key while moving a slider to make fine adjustments in the slider \
value.\\nHold \"", 
    FrameBox[
    "Ctrl", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" and/or \"", 
    FrameBox[
    "Shift", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" at the same time as \"", 
    FrameBox[
    "Alt", Background -> GrayLevel[0.9], FrameMargins -> 2, FrameStyle -> 
     GrayLevel[0.9]], "\" to make ever finer adjustments.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.656358492292112*^9},
 FontFamily->"Verdana",
 CellTags->"SliderZoom"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[" Gamepad Controls"]}],
  "\"Control this Demonstration with a gamepad or other\\nhuman interface \
device connected to your computer.\"",
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.35696210375764*^9, 3.3895522232313623`*^9, 
  3.6563687091380253`*^9},
 FontFamily->"Verdana",
 CellTags->"GamepadControls"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[True], Cell[" Automatic Animation"]}],
  RowBox[{"\"Animate a slider in this Demonstration by clicking the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJzzTSzJSM1NLMlMTlRwL0osyMhMLlZwyy8CCjEzMjAwcIKwAgOI/R/IhBKc\n\
/4EAyGAG0f+nTZsGwgysIJIRKsWKLAXGIHFmEpUgLADxWUAkI24jZs+eTaEt\n\
IG+wQKRmzJgBlYf5lhEA30OqWA=="], "Graphics", ImageSize -> {9, 9}, ImageMargins -> 
      0, CellBaseline -> Baseline], BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"button\\nnext to the slider, and then clicking the play button that \
appears.\\nAnimate all controls by selecting \"", 
    StyleBox["Autorun", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 CellChangeTimes->{3.656368710046033*^9},
 FontFamily->"Verdana",
 CellTags->"AutomaticAnimation"],

Cell[BoxData[
 TooltipBox[
  RowBox[{
   CheckboxBox[False], Cell[" Bookmark Animation"]}],
  RowBox[{
   "\"See a prepared animation of this Demonstration by selecting\\n\"", 
    StyleBox["Animate Bookmarks", FontWeight -> "Bold"], "\" from the\"", 
    AdjustmentBox[
     Cell[
      GraphicsData[
      "CompressedBitmap", 
       "eJyNULENwyAQfEySIlMwTVJlCGRFsosokeNtqBmDBagoaZjAI1C8/8GUUUC6\n\
57h7cQ8PvU7Pl17nUav7oj/TPH7V7b2QJAUAXBkKmCPRowxICy64bRvGGNF7\n\
X8CctGoDSN4xhIDGGDhzFXwUh3/ClBKrDQPmnGXtI6u0OOd+tZBVUqy1xSaH\n\
UqiK6pPe4XdEdAz6563tx/gejuORGMxJaz8mdpJn7hc="], "Graphics", 
      ImageSize -> {10, 10}, ImageMargins -> 0, CellBaseline -> Baseline], 
     BoxBaselineShift -> 0.1839080459770115, 
     BoxMargins -> {{0., 0.}, {-0.1839080459770115, 0.1839080459770115}}], 
    "\"menu.\""}],
  TooltipDelay->0.35]], "ControlSuggestions",
 FontFamily->"Verdana",
 CellTags->"BookmarkAnimation"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SearchTermsSection"],

Cell["micro robot", "SearchTerms",
 CellChangeTimes->{{3.656243329838565*^9, 3.656243333366346*^9}},
 CellID->1526825818],

Cell["nano robot", "SearchTerms",
 CellChangeTimes->{{3.656243329838565*^9, 3.6562433366567*^9}},
 CellID->2103676052],

Cell["global input", "SearchTerms",
 CellChangeTimes->{{3.656243329838565*^9, 3.65624334028122*^9}},
 CellID->1824992530],

Cell["shared control", "SearchTerms",
 CellChangeTimes->{{3.656243329838565*^9, 3.6562433535617647`*^9}},
 CellID->1086509384],

Cell["under actuated", "SearchTerms",
 CellChangeTimes->{{3.65624335549229*^9, 3.6562433646866693`*^9}, 
   3.656244473937188*^9},
 CellID->2010211626],

Cell["swarm", "SearchTerms",
 CellChangeTimes->{{3.65624335549229*^9, 3.656243367207562*^9}},
 CellID->2112517744],

Cell["robot swarm", "SearchTerms",
 CellChangeTimes->{{3.65624335549229*^9, 3.6562433704793663`*^9}},
 CellID->985590839]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "RelatedLinksSection"],

Cell[TextData[ButtonBox["Effect of Friction on Ball Rolling Down a Ramp",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://demonstrations.wolfram.com/\
EffectOfFrictionOnBallRollingDownARamp/"], None},
 ButtonNote->
  "http://demonstrations.wolfram.com/EffectOfFrictionOnBallRollingDownARamp/"]\
], "RelatedLinks",
 CellChangeTimes->{{3.656244405842351*^9, 3.65624440584439*^9}},
 CellID->1354228994],

Cell[TextData[ButtonBox["Ensemble Control of Robots with Unicycle Kinematics",
 
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://demonstrations.wolfram.com/\
EnsembleControlOfRobotsWithUnicycleKinematics/"], None},
 ButtonNote->
  "http://demonstrations.wolfram.com/\
EnsembleControlOfRobotsWithUnicycleKinematics/"]], "RelatedLinks",
 CellChangeTimes->{{3.656244021724565*^9, 3.656244021726632*^9}},
 CellID->1781125872],

Cell[TextData[ButtonBox["Friction",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://scienceworld.wolfram.com/physics/Friction.html"], None},
 ButtonNote->
  "http://scienceworld.wolfram.com/physics/Friction.html"]], "RelatedLinks",
 CellChangeTimes->{{3.656244183140074*^9, 3.656244190055181*^9}},
 CellID->1607975171],

Cell[TextData[ButtonBox["Static Friction",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://scienceworld.wolfram.com/physics/StaticFriction.html"], None},
 ButtonNote->
  "http://scienceworld.wolfram.com/physics/StaticFriction.html"]], \
"RelatedLinks",
 CellChangeTimes->{{3.656244198035781*^9, 3.656244216624057*^9}},
 CellID->1304485149],

Cell[TextData[ButtonBox["Static Friction",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://demonstrations.wolfram.com/StaticFriction/"], None},
 ButtonNote->
  "http://demonstrations.wolfram.com/StaticFriction/"]], "RelatedLinks",
 CellChangeTimes->{{3.65635848267415*^9, 3.65635848267515*^9}},
 CellID->129740159],

Cell[TextData[ButtonBox["Distribution of a Swarm of Robots in a Circular \
Workplace under Gravity",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://demonstrations.wolfram.com/\
DistributionOfASwarmOfRobotsInACircularWorkplaceUnderGravity/"], None},
 ButtonNote->
  "http://demonstrations.wolfram.com/\
DistributionOfASwarmOfRobotsInACircularWorkplaceUnderGravity/"]], \
"RelatedLinks",
 CellChangeTimes->{{3.691455402307598*^9, 3.691455409598138*^9}},
 CellID->2116028344],

Cell[TextData[ButtonBox["Distribution of a Robot Swarm in a Square under \
Gravity",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://demonstrations.wolfram.com/\
DistributionOfARobotSwarmInASquareUnderGravity/"], None},
 ButtonNote->
  "http://demonstrations.wolfram.com/\
DistributionOfARobotSwarmInASquareUnderGravity/"]], "RelatedLinks",
 CellChangeTimes->{{3.691455796476475*^9, 3.6914558049591293`*^9}},
 CellID->277794039]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "AuthorSection"],

Cell[TextData[{
 "Contributed by: ",
 ButtonBox["Shiva Shahrokhi",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/author.html?author=Shiva+\
Shahrokhi"], None},
  ButtonNote->
   "http://demonstrations.wolfram.com/author.html?author=Shiva+Shahrokhi"],
 " and ",
 ButtonBox["Aaron T. Becker",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://demonstrations.wolfram.com/author.html?author=Aaron+T.+\
Becker"], None},
  ButtonNote->
   "http://demonstrations.wolfram.com/author.html?author=Aaron+T.+Becker"]
}], "Author",
 CellChangeTimes->{3.6562433172526484`*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{974, 928},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September 9, \
2014)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "Demonstration.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "AutomaticAnimation"->{
  Cell[300263, 6268, 1505, 32, 27, "ControlSuggestions",
   CellTags->"AutomaticAnimation"]},
 "BookmarkAnimation"->{
  Cell[301771, 6302, 908, 21, 27, "ControlSuggestions",
   CellTags->"BookmarkAnimation"]},
 "CreateAndDeleteLocators"->{
  Cell[298269, 6214, 705, 16, 27, "ControlSuggestions",
   CellTags->"CreateAndDeleteLocators"]},
 "DragLocators"->{
  Cell[297885, 6200, 381, 12, 27, "ControlSuggestions",
   CellTags->"DragLocators"]},
 "GamepadControls"->{
  Cell[299865, 6256, 395, 10, 27, "ControlSuggestions",
   CellTags->"GamepadControls"]},
 "ResizeImages"->{
  Cell[296889, 6172, 312, 8, 27, "ControlSuggestions",
   CellTags->"ResizeImages"]},
 "RotateAndZoomIn3D"->{
  Cell[297204, 6182, 678, 16, 27, "ControlSuggestions",
   CellTags->"RotateAndZoomIn3D"]},
 "SliderZoom"->{
  Cell[298977, 6232, 885, 22, 27, "ControlSuggestions",
   CellTags->"SliderZoom"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"AutomaticAnimation", 307558, 6479},
 {"BookmarkAnimation", 307676, 6482},
 {"CreateAndDeleteLocators", 307798, 6485},
 {"DragLocators", 307915, 6488},
 {"GamepadControls", 308024, 6491},
 {"ResizeImages", 308133, 6494},
 {"RotateAndZoomIn3D", 308243, 6497},
 {"SliderZoom", 308352, 6500}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 264, 5, 75, "DemoTitle"],
Cell[CellGroupData[{
Cell[869, 31, 33, 0, 290, "InitializationSection"],
Cell[905, 33, 56457, 1248, 1927, "Input",
 InitializationCell->True,
 CellID->1412498031]
}, Open  ]],
Cell[CellGroupData[{
Cell[57399, 1286, 29, 0, 243, "ManipulateSection"],
Cell[CellGroupData[{
Cell[57453, 1290, 50316, 1098, 1481, "Input",
 InitializationCell->True,
 CellID->1619884417],
Cell[107772, 2390, 30209, 591, 421, "Output",
 CellID->1974576598]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[138030, 2987, 36, 0, 181, "ManipulateCaptionSection"],
Cell[138069, 2989, 761, 15, 55, "ManipulateCaption"]
}, Open  ]],
Cell[CellGroupData[{
Cell[138867, 3009, 28, 0, 179, "ThumbnailSection"],
Cell[138898, 3011, 29986, 586, 343, "Output",
 CellID->51764781]
}, Open  ]],
Cell[CellGroupData[{
Cell[168921, 3602, 28, 0, 113, "SnapshotsSection"],
Cell[168952, 3604, 29994, 585, 320, "Output",
 CellID->1362875717],
Cell[198949, 4191, 30136, 593, 320, "Output",
 CellID->548836526],
Cell[229088, 4786, 30069, 586, 320, "Output",
 CellID->130207798],
Cell[259160, 5374, 29488, 577, 320, "Output",
 CellID->1782372284]
}, Open  ]],
Cell[CellGroupData[{
Cell[288685, 5956, 26, 0, 268, "DetailsSection"],
Cell[288714, 5958, 1391, 21, 64, "DetailNotes",
 CellID->1900616087],
Cell[290108, 5981, 1953, 61, 44, "DetailNotes",
 CellID->1982808731],
Cell[292064, 6044, 2255, 69, 31, "DetailNotes",
 CellID->2140732382],
Cell[294322, 6115, 631, 10, 29, "DetailNotes",
 CellID->1033792053],
Cell[294956, 6127, 846, 13, 41, "DetailNotes",
 CellID->1325557675],
Cell[295805, 6142, 642, 14, 19, "DetailNotes",
 CellID->482604685],
Cell[296450, 6158, 362, 7, 18, "DetailNotes",
 CellID->2054930820]
}, Open  ]],
Cell[CellGroupData[{
Cell[296849, 6170, 37, 0, 99, "ControlSuggestionsSection"],
Cell[296889, 6172, 312, 8, 27, "ControlSuggestions",
 CellTags->"ResizeImages"],
Cell[297204, 6182, 678, 16, 27, "ControlSuggestions",
 CellTags->"RotateAndZoomIn3D"],
Cell[297885, 6200, 381, 12, 27, "ControlSuggestions",
 CellTags->"DragLocators"],
Cell[298269, 6214, 705, 16, 27, "ControlSuggestions",
 CellTags->"CreateAndDeleteLocators"],
Cell[298977, 6232, 885, 22, 27, "ControlSuggestions",
 CellTags->"SliderZoom"],
Cell[299865, 6256, 395, 10, 27, "ControlSuggestions",
 CellTags->"GamepadControls"],
Cell[300263, 6268, 1505, 32, 27, "ControlSuggestions",
 CellTags->"AutomaticAnimation"],
Cell[301771, 6302, 908, 21, 27, "ControlSuggestions",
 CellTags->"BookmarkAnimation"]
}, Open  ]],
Cell[CellGroupData[{
Cell[302716, 6328, 30, 0, 123, "SearchTermsSection"],
Cell[302749, 6330, 121, 2, 18, "SearchTerms",
 CellID->1526825818],
Cell[302873, 6334, 118, 2, 18, "SearchTerms",
 CellID->2103676052],
Cell[302994, 6338, 121, 2, 18, "SearchTerms",
 CellID->1824992530],
Cell[303118, 6342, 126, 2, 18, "SearchTerms",
 CellID->1086509384],
Cell[303247, 6346, 151, 3, 18, "SearchTerms",
 CellID->2010211626],
Cell[303401, 6351, 114, 2, 18, "SearchTerms",
 CellID->2112517744],
Cell[303518, 6355, 121, 2, 18, "SearchTerms",
 CellID->985590839]
}, Open  ]],
Cell[CellGroupData[{
Cell[303676, 6362, 31, 0, 111, "RelatedLinksSection"],
Cell[303710, 6364, 406, 9, 18, "RelatedLinks",
 CellID->1354228994],
Cell[304119, 6375, 428, 10, 18, "RelatedLinks",
 CellID->1781125872],
Cell[304550, 6387, 325, 7, 18, "RelatedLinks",
 CellID->1607975171],
Cell[304878, 6396, 346, 8, 18, "RelatedLinks",
 CellID->1304485149],
Cell[305227, 6406, 321, 7, 18, "RelatedLinks",
 CellID->129740159],
Cell[305551, 6415, 480, 11, 18, "RelatedLinks",
 CellID->2116028344],
Cell[306034, 6428, 435, 10, 18, "RelatedLinks",
 CellID->277794039]
}, Open  ]],
Cell[CellGroupData[{
Cell[306506, 6443, 25, 0, 111, "AuthorSection"],
Cell[306534, 6445, 609, 18, 18, "Author"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
