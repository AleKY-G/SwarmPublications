(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     52243,       1234]
NotebookOptionsPosition[     51228,       1198]
NotebookOutlinePosition[     51586,       1214]
CellTagsIndexPosition[     51543,       1211]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Uses dynamic programming to find an optional path for 2 robots actuated by \
global inputs\
\>", "Section",
 CellChangeTimes->{{3.6949518688287697`*^9, 3.694951887018344*^9}}],

Cell["\<\
Feb1,  email me at end of work day with progress
1.) make a test case to ensure base case 1 works Done.
2.) test rotation code 
3.) test if achievable in 3 moves for a move up -- do we get into the correct \
code?
4.) see  if achievable in 3 moves for \[OpenCurlyQuote]r\[CloseCurlyQuote] \
\[OpenCurlyQuote]l\[CloseCurlyQuote] \[OpenCurlyQuote]d\[CloseCurlyQuote]
\
\>", "Subsubsection",
 CellChangeTimes->{{3.694957212842634*^9, 3.694957326738517*^9}, {
  3.6949573972144117`*^9, 3.694957413205287*^9}, {3.694983808420594*^9, 
  3.69498381162698*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Idea\n", "Text"],
 StyleBox["Base case 1:", "Text",
  FontWeight->"Bold"],
 StyleBox["  deltaX and deltaY are 0, simply move robots to final position\n",
   "Text"],
 StyleBox["Base case 2:", "Text",
  FontWeight->"Bold"],
 StyleBox["  In 2 moves we can make both deltaX and deltaY 0, implement this \
move, then call ", "Text"],
 StyleBox["Base case 1:", "Text",
  FontWeight->"Bold"],
 StyleBox["\n\nWe build a list like in an A* algorithm.  Each item in the \
list has 4 entries, and the list is sorted based on the first entry:\n{", 
  "Text"],
 StyleBox["estimatedPathLength", "Text",
  FontWeight->"Bold"],
 StyleBox[",  ", "Text"],
 StyleBox["r1, r2", "Text",
  FontWeight->"Bold"],
 StyleBox[", ", "Text"],
 StyleBox["MOVES", "Text",
  FontWeight->"Bold"],
 StyleBox["}\n\n", "Text"],
 StyleBox["MOVES", "Text",
  FontWeight->"Bold"],
 StyleBox[" is the moves that have been applied to the robots: \
{{x1,y1},{x2,y2}} for a two move sequence.\n", "Text"],
 StyleBox["r1", "Text",
  FontWeight->"Bold"],
 StyleBox[" and ", "Text"],
 StyleBox["r2 ", "Text",
  FontWeight->"Bold"],
 StyleBox["are the positions of robot 1 and 2 after applying ", "Text"],
 StyleBox["MOVES", "Text",
  FontWeight->"Bold"],
 StyleBox[" to them.\n\n", "Text"],
 StyleBox["estimatedPathLength", "Text",
  FontWeight->"Bold"],
 StyleBox[" is the sum of the euclidean distances of ", "Text"],
 StyleBox["MOVES", "Text",
  FontWeight->"Bold"],
 StyleBox[" + an admissible heuristic (the maximum distance of", "Text"],
 StyleBox[" r1 ", "Text",
  FontWeight->"Bold"],
 StyleBox["or ", "Text"],
 StyleBox["r2", "Text",
  FontWeight->"Bold"],
 StyleBox[" from their goal positions).\n\nHow the solver works:\nStart with \
start positions ", "Text"],
 StyleBox["s1,s2", "Text",
  FontWeight->"Bold"],
 StyleBox[" and goal positions ", "Text"],
 StyleBox["g1, g2", "Text",
  FontWeight->"Bold"],
 StyleBox[".\n\n", "Text"],
 StyleBox["optimalPathList", "Text",
  FontWeight->"Bold"],
 StyleBox[" = { \n   {Max( distance(g1,s1), distance(g2,s2) ), s1,s2, {} }\n\n\
", "Text"],
 StyleBox["While", "Text",
  FontWeight->"Bold"],
 StyleBox[" forever\n     ", "Text"],
 StyleBox[" if ", "Text",
  FontWeight->"Bold"],
 StyleBox["the first item in ", "Text"],
 StyleBox["optimalPathList", "Text",
  FontWeight->"Bold"],
 StyleBox[", the ", "Text"],
 StyleBox["estimatedPathLength", "Text",
  FontWeight->"Bold"],
 StyleBox[" == sum of the euclidean distances of ", "Text"],
 StyleBox["MOVES", "Text",
  FontWeight->"Bold"],
 StyleBox[",\n           we have the optimal solution, so return the ", 
  "Text"],
 StyleBox["MOVES", "Text",
  FontWeight->"Bold"],
 StyleBox[" for the first item\n    ", "Text"],
 StyleBox["else", "Text",
  FontWeight->"Bold"],
 StyleBox["\n          ", "Text"],
 StyleBox["Pop ", "Text",
  FontWeight->"Bold"],
 StyleBox[" the first item from the list,  \n                  call  {move1, \
move2, r1new, r2new} = ", "Text"],
 StyleBox["wallFrictionMove", "Text",
  FontWeight->"Bold"],
 StyleBox["(direction, r1, r2, g1, g2) for the 4 walls \n                 ", 
  "Text"],
 StyleBox[" if", "Text",
  FontWeight->"Bold"],
 StyleBox[" already in contact with one wall, also try a ", "Text"],
 StyleBox["DRIFT_move", "Text",
  FontWeight->"Bold"],
 StyleBox[". Add all the new moves to ", "Text"],
 StyleBox["optimalPathList", "Text",
  FontWeight->"Bold"],
 StyleBox["\n", "Text"],
 StyleBox["end while", "Text",
  FontWeight->"Bold"],
 StyleBox["\n\n", "Text"],
 StyleBox["wallFrictionMove", "Text",
  FontWeight->"Bold"],
 StyleBox["(direction, r1, r2, g1, g2)  should first see if ", "Text"],
 StyleBox["Base case 1", "Text",
  FontWeight->"Bold"],
 StyleBox[": is possible, next see if  ", "Text"],
 StyleBox["Base case 2", "Text",
  FontWeight->"Bold"],
 StyleBox[" is possible, else try to reduce  ", "Text"],
 StyleBox["deltaX", "Text",
  FontWeight->"Bold"],
 StyleBox[" and ", "Text"],
 StyleBox["deltaY", "Text",
  FontWeight->"Bold"],
 StyleBox[".   We will need to ensure that the robots never overlap, which \
means that ", "Text"],
 StyleBox["wallFrictionMove", "Text",
  FontWeight->"Bold"],
 StyleBox[" might return several options.\n\n\n", "Text"],
 "(g2x-g1x)",
 StyleBox["= ", "Text"],
 "\[CapitalDelta]gx\n(r2x-r1x)",
 StyleBox["= ", "Text"],
 "\[CapitalDelta]rx\n\[CapitalDelta]gx-\[CapitalDelta]rx = \[CapitalDelta]ex"
}], "Subsection",
 CellChangeTimes->{{3.6939406005404882`*^9, 3.693940616693581*^9}, {
  3.694951912024303*^9, 3.694951961912994*^9}, {3.694952032107266*^9, 
  3.694952184718564*^9}, {3.694952236477687*^9, 3.694952239352273*^9}, {
  3.694952550956744*^9, 3.6949525902932053`*^9}, {3.694952650348186*^9, 
  3.694952682936309*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"admissibleHeuristic", "[", 
     RowBox[{"s1_", ",", "s2_", ",", " ", "g1_", ",", "g2_"}], "]"}], ":=", 
    RowBox[{"Max", "[", 
     RowBox[{
      RowBox[{"EuclideanDistance", "[", 
       RowBox[{"g1", ",", "s1"}], "]"}], ",", 
      RowBox[{"EuclideanDistance", "[", 
       RowBox[{"g2", ",", "s2"}], "]"}]}], "]"}]}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "a", " ", "distance", " ", "measurement", " ", "that", " ", "never", " ", 
     "over", " ", "estimates", " ", "to", " ", "possible", " ", "distance"}], 
    " ", "*)"}], " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"wallFrictionMoveDir", "[", 
     RowBox[{
     "dir_", ",", "s1_", ",", "s2_", ",", "g1_", ",", "g2_", ",", "moves_", 
      ",", "\[Epsilon]_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[CapitalDelta]ex", ",", " ", "\[CapitalDelta]ey", ",", " ", 
        RowBox[{"path", " ", "=", " ", "moves"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"s1", " ", "=", " ", 
          RowBox[{
          "starting", " ", "position", " ", "of", " ", "robot", " ", "1", " ",
            "for", " ", "this", " ", "move"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"s2", " ", "=", " ", 
          RowBox[{
          "starting", " ", "position", " ", "of", " ", "robot", " ", "2", " ",
            "for", " ", "this", " ", "move"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
         "moves", " ", "to", " ", "contact", " ", "wall", " ", "in", " ", 
          "direction", " ", 
          RowBox[{
          "dir", ".", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", "  ", "If"}], " ", "one", " ", "robot", " ",
           "is", " ", "already", " ", "touching", " ", "the", " ", "wall", 
          " ", "in", " ", "direction", " ", "dir"}]}], ",", " ", 
        RowBox[{
         RowBox[{"just", " ", "moves", " ", "the", " ", "second", " ", 
          RowBox[{
          "robot", ".", " ", "\[IndentingNewLine]", " ", "Movements"}], " ", 
          "are", " ", "chosen", " ", "to", " ", "minimize"}], " ", "|", 
         "\[CapitalDelta]ex", "|", " ", "and", " ", "|", "\[CapitalDelta]ey", 
         "|"}], ",", " ", 
        RowBox[{
        "the", " ", "error", " ", "from", " ", "the", " ", "desired", " ", 
         "spacing", " ", "of", " ", "the", " ", "robots"}], ",", " ", 
        RowBox[{
         RowBox[{"where", " ", "\[CapitalDelta]ex"}], " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"g2x", "-", "g1x"}], ")"}], " ", "-", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"r2x", "-", "r1x"}], ")"}], "  ", "and", " ", 
            "\[CapitalDelta]ey"}]}], " ", "=", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"g2y", "-", "g1y"}], ")"}], " ", "-", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"r2y", "-", "r1y"}], ")"}], " ", ".", "  ", "If"}], " ",
             "robots", " ", "would", " ", "end", " ", "up", " ", 
            "overlapping"}]}]}]}], ",", " ", 
        RowBox[{
         RowBox[{"returns", " ", "multiple", " ", "possibilities"}], " ", "+", 
         RowBox[{"/", 
          RowBox[{"-", " ", "\[Epsilon]"}]}]}]}], "  ", "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{"STEP", " ", "1"}], ":", " ", 
         RowBox[{"is", " ", "base", " ", "case", " ", "1", " ", 
          RowBox[{"possible", "?", "  ", "If"}], " ", "so"}]}], ",", " ", 
        RowBox[{"do", " ", "it", " ", "and", " ", "return"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[CapitalDelta]ex", ",", " ", "\[CapitalDelta]ey"}], "}"}], 
        " ", "=", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"g2", "-", "g1"}], ")"}], "-", 
         RowBox[{"(", 
          RowBox[{"s2", "-", "s1"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\[CapitalDelta]ex", "\[Equal]", "0"}], " ", "&&", " ", 
          RowBox[{"\[CapitalDelta]ey", " ", "\[Equal]", "0"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"path", ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
               "g2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               "-", "  ", 
               RowBox[{
               "s2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
               ",", " ", 
              RowBox[{
               RowBox[{
               "g2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
               "-", " ", 
               RowBox[{
               "s2", "\[LeftDoubleBracket]", "2", 
                "\[RightDoubleBracket]"}]}]}], "}"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Return", "[", 
           RowBox[{"{", " ", 
            RowBox[{"{", " ", 
             RowBox[{
              RowBox[{"distanceMoved", "[", " ", "path", "]"}], ",", "g1", 
              ",", "g2", ",", "path"}], " ", "}"}], "  ", "}"}], "]"}]}]}], 
        "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"OTHERWISE", ",", " ", 
         RowBox[{
         "move", " ", "in", " ", "the", " ", "desired", " ", "direction", " ",
           "to", " ", "contact", " ", "a", " ", 
          RowBox[{"wall", ".", "  ", "\[IndentingNewLine]", 
           RowBox[{"We", "'"}]}], "ll", " ", "need", " ", "to", " ", "rotate",
           " ", "the", " ", "coordinate", " ", "frames", " ", "so", " ", 
          "the", " ", "movement", " ", "is", " ", "up"}], ",", " ", 
         RowBox[{
         "and", " ", "ensure", " ", "robot", " ", "1", " ", "is", " ", "the", 
          " ", "first", " ", "to", " ", 
          RowBox[{"contact", ".", "\[IndentingNewLine]", "then"}], " ", 
          RowBox[{"we", "'"}], "ll", " ", "call", " ", "wallFrictionMoveUp"}],
          ",", " ", "\[IndentingNewLine]", 
         RowBox[{"then", " ", "we", " ", "take", " ", "the", " ", "answer"}], 
         ",", " ", 
         RowBox[{
         "and", " ", "reassign", " ", "robot", " ", "1", " ", "and", " ", "2",
           " ", "to", " ", "match", " ", "original", "\[IndentingNewLine]", 
          "then", " ", "rotate", " ", "answer", " ", "into", " ", "original", 
          " ", "coordinate", " ", "frame"}]}], "*)"}], "\[IndentingNewLine]", 
       
       RowBox[{
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "r1", ",", "r2", ",", "newPathEntries", ",", "s1t", ",", "s2t", 
            ",", "g1t", ",", "g2t", ",", "movest"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"if", " ", "move", " ", "is", " ", "up"}], ",", " ", 
            RowBox[{"call", " ", "wallFrictionMoveUp"}], ",", " ", 
            RowBox[{"otherwise", " ", "rotate", " ", "frame"}], ",", " ", 
            RowBox[{"then", " ", "unrotate", " ", "answers"}]}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"dir", "\[Equal]", "\"\<u\>\""}], ",", " ", 
             RowBox[{"newPathEntries", "=", " ", 
              RowBox[{"wallFrictionMoveUp", "[", 
               RowBox[{
               "s1", ",", "s2", ",", "g1", ",", "g2", ",", "moves", ",", 
                "\[Epsilon]"}], "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{"if", " ", "move", " ", "is", " ", "down"}], ",", " ", 
             RowBox[{"rotate", " ", "frame", " ", "180", " ", "deg"}], ",", 
             " ", 
             RowBox[{"then", " ", "unrotate", " ", "answers"}]}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"dir", "\[Equal]", "\"\<d\>\""}], ",", " ", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"s1t", ",", "s2t", ",", "g1t", ",", "g2t"}], "}"}], 
               "=", " ", 
               RowBox[{"Map", "[", 
                RowBox[{"rotate180", ",", 
                 RowBox[{"{", 
                  RowBox[{"s1", ",", "s2", ",", "g1", ",", "g2"}], "}"}]}], 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"movest", "=", " ", 
               RowBox[{"Map", "[", 
                RowBox[{"rotate180inplace", ",", "moves"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"Print", "[", "movest", "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"newPathEntries", "=", " ", 
               RowBox[{"wallFrictionMoveUp", "[", 
                RowBox[{
                "s1t", ",", "s2t", ",", "g1t", ",", "g2t", ",", "movest", ",",
                  "\[Epsilon]"}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{"undo", " ", "the", " ", "change"}], "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{"newPathEntries", "=", 
               RowBox[{"Table", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                   "aPathEntry", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                   RowBox[{"Map", "[", 
                    RowBox[{"rotate180", ",", 
                    RowBox[{
                    "aPathEntry", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}], " ", ",", 
                   RowBox[{"Map", "[", 
                    RowBox[{"rotate180", ",", 
                    RowBox[{
                    "aPathEntry", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"Map", "[", 
                    RowBox[{"rotate180inplace", ",", 
                    RowBox[{
                    "aPathEntry", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}]}], "]"}]}], " ", "}"}], 
                 "\[IndentingNewLine]", "  ", ",", 
                 RowBox[{"{", 
                  RowBox[{"aPathEntry", ",", " ", "newPathEntries"}], "}"}]}],
                 "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{"if", " ", "move", " ", "is", " ", "right"}], ",", " ", 
             RowBox[{"rotate", " ", "frame", " ", "90", " ", "deg"}], ",", 
             " ", 
             RowBox[{"then", " ", "unrotate", " ", "answers"}]}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"dir", "\[Equal]", "\"\<r\>\""}], ",", " ", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"s1t", ",", "s2t", ",", "g1t", ",", "g2t"}], "}"}], 
               "=", " ", 
               RowBox[{"Map", "[", 
                RowBox[{"rotate90", ",", 
                 RowBox[{"{", 
                  RowBox[{"s1", ",", "s2", ",", "g1", ",", "g2"}], "}"}]}], 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"movest", "=", " ", 
               RowBox[{"Map", "[", 
                RowBox[{"rotate90inplace", ",", "moves"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"newPathEntries", "=", " ", 
               RowBox[{"wallFrictionMoveUp", "[", 
                RowBox[{
                "s1t", ",", "s2t", ",", "g1t", ",", "g2t", ",", "movest", ",",
                  "\[Epsilon]"}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{"undo", " ", "the", " ", "change"}], "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{"newPathEntries", "=", 
               RowBox[{"Table", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                   "aPathEntry", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                   RowBox[{"Map", "[", 
                    RowBox[{"rotate90", ",", 
                    RowBox[{
                    "aPathEntry", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}], " ", ",", 
                   RowBox[{"Map", "[", 
                    RowBox[{"rotate90", ",", 
                    RowBox[{
                    "aPathEntry", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"Map", "[", 
                    RowBox[{"rotate90inplace", ",", 
                    RowBox[{
                    "aPathEntry", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}]}], "]"}]}], " ", "}"}], 
                 "\[IndentingNewLine]", "  ", ",", 
                 RowBox[{"{", 
                  RowBox[{"aPathEntry", ",", " ", "newPathEntries"}], "}"}]}],
                 "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{"if", " ", "move", " ", "is", " ", "left"}], ",", " ", 
             RowBox[{"rotate", " ", "frame", " ", "270", " ", "deg"}], ",", 
             " ", 
             RowBox[{"then", " ", "unrotate", " ", "answers"}]}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"dir", "\[Equal]", "\"\<l\>\""}], ",", " ", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{"s1t", ",", "s2t", ",", "g1t", ",", "g2t"}], "}"}], 
               "=", " ", 
               RowBox[{"Map", "[", 
                RowBox[{"rotate270", ",", 
                 RowBox[{"{", 
                  RowBox[{"s1", ",", "s2", ",", "g1", ",", "g2"}], "}"}]}], 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"movest", "=", " ", 
               RowBox[{"Map", "[", 
                RowBox[{"rotate270inplace", ",", "moves"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"newPathEntries", "=", " ", 
               RowBox[{"wallFrictionMoveUp", "[", 
                RowBox[{
                "s1t", ",", "s2t", ",", "g1t", ",", "g2t", ",", "movest", ",",
                  "\[Epsilon]"}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{"undo", " ", "the", " ", "change"}], "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{"newPathEntries", "=", 
               RowBox[{"Table", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                   "aPathEntry", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                   RowBox[{"Map", "[", 
                    RowBox[{"rotate270", ",", 
                    RowBox[{
                    "aPathEntry", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}], " ", ",", 
                   RowBox[{"Map", "[", 
                    RowBox[{"rotate270", ",", 
                    RowBox[{
                    "aPathEntry", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"Map", "[", 
                    RowBox[{"rotate270inplace", ",", 
                    RowBox[{
                    "aPathEntry", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}]}], "]"}]}], " ", "}"}], 
                 "\[IndentingNewLine]", "  ", ",", 
                 RowBox[{"{", 
                  RowBox[{"aPathEntry", ",", " ", "newPathEntries"}], "}"}]}],
                 "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
         "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], 
        RowBox[{"(*", 
         RowBox[{"end", " ", "inner", " ", "module"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"Return", "[", "newPathEntries", "]"}]}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], 
   RowBox[{"(*", 
    RowBox[{"end", " ", "outer", " ", "module"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"wallFrictionMoveUp", "[", 
     RowBox[{
     "r1in_", ",", "r2in_", ",", "g1in_", ",", "g2in_", ",", "moves_", ",", 
      "\[Epsilon]_"}], "]"}], ":=", " ", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "r1", ",", "r2", ",", "g1", ",", "g2", ",", "\[CapitalDelta]gx", ",", 
        "\[CapitalDelta]gy", ",", "m1", ",", "m2", ",", "\[IndentingNewLine]",
         "\[CapitalDelta]ey", " ", ",", "\[CapitalDelta]ex", " ", ",", 
        "\[IndentingNewLine]", 
        RowBox[{"L", "=", " ", "1"}], " ", 
        RowBox[{"(*", 
         RowBox[{"size", " ", "of", " ", "workspace"}], "*)"}], ",", 
        "\[IndentingNewLine]", "\[CapitalDelta]r", 
        RowBox[{"(*", 
         RowBox[{
         "current", " ", "x", " ", "and", " ", "y", " ", "difference"}], 
         "*)"}], ",", "\[IndentingNewLine]", "pm1", 
        RowBox[{"(*", 
         RowBox[{"desired", " ", "moves", " ", "for", " ", "r1"}], "*)"}], 
        ",", "\[IndentingNewLine]", "pm2", 
        RowBox[{"(*", 
         RowBox[{"desired", " ", "moves", " ", "for", " ", "r2"}], "*)"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"path", " ", "=", " ", "moves"}]}], "\[IndentingNewLine]", 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "robot", " ", "1", " ", "must", " ", "contact", " ", "this", " ", 
         "wall", " ", 
         RowBox[{"first", ".", " ", "If"}], " ", "not"}], ",", " ", 
        RowBox[{"switch", " ", 
         RowBox[{"entries", ".", "  ", "Remember"}], " ", "to", " ", "switch",
          " ", "again", " ", "at", " ", 
         RowBox[{"end", "!"}], "\[IndentingNewLine]", " ", "then", " ", 
         "move", " ", "robot", "  ", "while", " ", "first", " ", "robot", " ",
          "is", " ", "touching", " ", "wall"}]}], "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
          "r1in", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "<", 
          RowBox[{
          "r2in", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
         ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"r1", ",", "r2", ",", "g1", ",", "g2"}], "}"}], "=", 
          RowBox[{"{", 
           RowBox[{"r2in", ",", "r1in", ",", "g2in", ",", "g1in"}], "}"}]}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"r1", ",", "r2", ",", "g1", ",", "g2"}], "}"}], "=", 
          RowBox[{"{", 
           RowBox[{"r1in", ",", "r2in", ",", "g1in", ",", "g2in"}], "}"}]}]}],
         "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", "r1", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", "r2", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[CapitalDelta]gx", ",", "\[CapitalDelta]gy"}], "}"}], " ", 
        "=", " ", 
        RowBox[{"g2", "-", "g1"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
          "0", "\[LessEqual]", "  ", "\[CapitalDelta]gx", " ", "<", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
             "r1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
             "-", " ", 
             RowBox[{
             "r2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
            ")"}]}], " ", "&&", "  ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
             "r2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "-", "1"}], ")"}], " ", "\[LessEqual]", " ", "\[CapitalDelta]gy",
            " ", "<", " ", "1"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Print", "[", "\"\<Achievable\>\"", " ", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"in", " ", "Achievable", " ", "range"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
           "move", " ", "r1", " ", "and", " ", "r2", " ", "so", " ", "that", 
            " ", "r1", " ", "will", " ", "touch", " ", "the", " ", "up", " ", 
            "wall"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"m1", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{"1", "-", 
                RowBox[{
                "r1", "\[LeftDoubleBracket]", "2", 
                 "\[RightDoubleBracket]"}]}], 
               RowBox[{"2", "-", 
                RowBox[{
                "r1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                "-", 
                RowBox[{
                "g1", "\[LeftDoubleBracket]", "2", 
                 "\[RightDoubleBracket]"}]}]], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                "g2", " ", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}], "-", 
                RowBox[{
                "r2", " ", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}]}], ")"}]}], ",", 
             RowBox[{"1", "-", 
              RowBox[{
              "r1", "\[LeftDoubleBracket]", "2", 
               "\[RightDoubleBracket]"}]}]}], "}"}]}], ";", 
          RowBox[{"r1", " ", "+=", "  ", "m1"}], ";", " ", 
          RowBox[{"r2", " ", "+=", " ", "m1"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Print", "[", "m1", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"path", ",", " ", "m1"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", "path", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
           "move", " ", "r2", " ", "to", " ", "get", " ", "correct", " ", 
            "spacing"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"m2", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[CapitalDelta]gx", "-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                "r2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                "-", 
                RowBox[{
                "r1", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}]}], ")"}]}], ",", 
             RowBox[{"\[CapitalDelta]gy", "-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                "r2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                "-", 
                RowBox[{
                "r1", "\[LeftDoubleBracket]", "2", 
                 "\[RightDoubleBracket]"}]}], ")"}]}]}], " ", "}"}]}], ";", 
          RowBox[{"r2", " ", "+=", " ", "m2"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Print", "[", "m2", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"path", ",", " ", "m2"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", "path", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"distanceMoved", "[", "path", "]"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"g1in", ",", "g2in"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Return", "[", 
           RowBox[{"{", " ", 
            RowBox[{"{", " ", 
             RowBox[{
              RowBox[{"distanceMoved", "[", " ", "path", "]"}], ",", "g1in", 
              ",", "g2in", ",", "path"}], " ", "}"}], "  ", "}"}], "]"}]}], 
         ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"not", " ", "achievable", " ", "range"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Print", "[", "\"\<not achieveable\>\"", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Return", "[", " ", 
           RowBox[{"{", 
            RowBox[{"{", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"distanceMoved", "[", " ", "moves", "]"}], "+", "1"}], 
              ",", "g1in", ",", "g2in", ",", "moves"}], " ", "}"}], " ", 
            "}"}], " ", "]"}]}]}], " ", 
        RowBox[{"(*", 
         RowBox[{"THIS", " ", "IS", " ", "A", " ", "NULL", " ", "MOVE"}], 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
         "move", " ", "the", " ", "robots", " ", "to", " ", "minimize", " ", 
          "the", " ", 
          RowBox[{"error", ".", "  ", "This"}], " ", "might", " ", "return", 
          " ", "multiple", " ", "solutions"}], "*)"}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rotate90", "[", "r_", "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "-", " ", 
       RowBox[{"r", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
      ",", " ", 
      RowBox[{"r", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
     "}"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rotate90inplace", "[", "r_", "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", " ", 
       RowBox[{"r", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
      ",", " ", 
      RowBox[{"r", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
     "}"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rotate270", "[", "r_", "]"}], " ", ":=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"r", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
      ",", 
      RowBox[{"1", "-", " ", 
       RowBox[{
       "r", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], 
     "}"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rotate270inplace", "[", "r_", "]"}], " ", ":=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"r", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
      ",", 
      RowBox[{"-", " ", 
       RowBox[{
       "r", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], 
     "}"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rotate180", "[", "r_", "]"}], " ", ":=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "-", 
       RowBox[{"r", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
      ",", 
      RowBox[{"1", "-", " ", 
       RowBox[{
       "r", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
     "}"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rotate180inplace", "[", "r_", "]"}], " ", ":=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"r", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
      ",", 
      RowBox[{"-", " ", 
       RowBox[{
       "r", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
     "}"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"distanceMoved", "[", "moves_", "]"}], ":=", " ", 
     RowBox[{"Total", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Norm", "[", "m", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "moves2"}], "}"}]}], "]"}], "]"}]}], 
    ";"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6939408528236227`*^9, 3.693940888469677*^9}, {
   3.6939411305091133`*^9, 3.693941178437819*^9}, {3.693941387876739*^9, 
   3.6939413899004917`*^9}, {3.693941656965639*^9, 3.693941681444265*^9}, {
   3.693941786064103*^9, 3.693941802688339*^9}, {3.693941835689363*^9, 
   3.6939420230542583`*^9}, {3.6939420804095287`*^9, 3.69394220605469*^9}, {
   3.69394230325594*^9, 3.693942380441125*^9}, 3.694163599973598*^9, {
   3.6941707339115133`*^9, 3.6941708591178207`*^9}, {3.694171348574038*^9, 
   3.694171365971092*^9}, {3.694171399959486*^9, 3.694171476406212*^9}, {
   3.694171519220065*^9, 3.694171542443083*^9}, {3.6941717436032553`*^9, 
   3.694171751146134*^9}, {3.694171902501532*^9, 3.6941719175283003`*^9}, 
   3.6941721333534937`*^9, {3.694172366858963*^9, 3.694172475176903*^9}, {
   3.694172510680943*^9, 3.694172536105095*^9}, {3.694172590711431*^9, 
   3.6941726232159843`*^9}, 3.6941726573278637`*^9, {3.694173016287388*^9, 
   3.694173065879181*^9}, {3.6941731495712976`*^9, 3.694173288609469*^9}, {
   3.694175601608252*^9, 3.694175608959155*^9}, {3.6941818589940863`*^9, 
   3.694181883908156*^9}, 3.694189617187634*^9, 3.694373329087708*^9, {
   3.6944577291886044`*^9, 3.6944579604868402`*^9}, {3.6944580908461933`*^9, 
   3.69445816056343*^9}, {3.6944590515411797`*^9, 3.694459057212715*^9}, {
   3.694789332143281*^9, 3.6947893625847692`*^9}, {3.694797839893197*^9, 
   3.694797986266018*^9}, {3.694798020460239*^9, 3.694798110533209*^9}, {
   3.694802568905859*^9, 3.6948025759023943`*^9}, {3.694952267818956*^9, 
   3.694952387671607*^9}, {3.69495242737435*^9, 3.6949524933882837`*^9}, {
   3.694952716828657*^9, 3.694952875425663*^9}, {3.694952961359168*^9, 
   3.69495311078391*^9}, {3.694953177959278*^9, 3.694953206904295*^9}, 
   3.694953353572682*^9, {3.69495374669226*^9, 3.6949537480438547`*^9}, {
   3.694953989397366*^9, 3.69495432042314*^9}, {3.6949543709899073`*^9, 
   3.694954402358076*^9}, {3.6949544336109457`*^9, 3.694954489316423*^9}, {
   3.694954519838024*^9, 3.694954619638063*^9}, {3.694954676439558*^9, 
   3.6949549862473917`*^9}, {3.694955026267868*^9, 3.694955089067938*^9}, {
   3.694955263726976*^9, 3.6949552675503683`*^9}, {3.694955317972886*^9, 
   3.694955348540511*^9}, {3.694955389960005*^9, 3.694955546827735*^9}, {
   3.694955905292438*^9, 3.694956138265617*^9}, {3.6949561742960587`*^9, 
   3.694956339677886*^9}, {3.694956481622334*^9, 3.6949567563090343`*^9}, {
   3.694956795713811*^9, 3.694956926826346*^9}, {3.694956977884089*^9, 
   3.694957174068321*^9}, {3.694957349151458*^9, 3.694957381496011*^9}, {
   3.694981421904965*^9, 3.694981434264557*^9}, {3.694981502435019*^9, 
   3.694981509186743*^9}, {3.6949827486900253`*^9, 3.6949827590582523`*^9}, {
   3.694982827370994*^9, 3.694982832648131*^9}, {3.6949828780827103`*^9, 
   3.6949829576756973`*^9}, {3.694983018442698*^9, 3.6949830212590523`*^9}, {
   3.694983854991313*^9, 3.694983877417363*^9}, {3.694984043135763*^9, 
   3.694984044141467*^9}, {3.694984389561797*^9, 3.694984437264772*^9}, {
   3.6949847596682*^9, 3.694984911493659*^9}, {3.694984957002645*^9, 
   3.69498496866507*^9}, 3.6949864345263557`*^9, {3.694986541891062*^9, 
   3.694986589061227*^9}, {3.694986666712188*^9, 3.6949867112138777`*^9}, {
   3.694986883071473*^9, 3.6949869251433687`*^9}, {3.69498695674946*^9, 
   3.694986958598103*^9}, {3.6949870106651287`*^9, 3.694987051101959*^9}, {
   3.6949870813993473`*^9, 3.6949872322657433`*^9}, {3.6949872635489893`*^9, 
   3.694987266097929*^9}, {3.6949872991364193`*^9, 3.69498733320438*^9}, {
   3.694987380288198*^9, 3.694987415337792*^9}, {3.694987497384099*^9, 
   3.694987530625642*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Function", " ", "that", " ", "does", " ", "an", " ", "A", "*", " ", 
    "search", " ", "to", " ", "find", " ", "the", " ", "shortest", " ", 
    "path"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"optimal2robotPath", "[", 
    RowBox[{"s1_", ",", "s2_", ",", " ", "g1_", ",", "g2_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"optimalPathList", ",", "bestMoveSeq", ",", " ", "dist1"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"{", 
       RowBox[{
        StyleBox[
         RowBox[{"e", 
          StyleBox["stimatedPathLength", "Text",
           FontWeight->"Bold"]}]], ",", "r1", ",", "r2", ",", "MOVES"}], 
       "}"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"optimalPathList", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"admissibleHeuristic", "[", 
           RowBox[{"s1", ",", "s2", ",", " ", "g1", ",", "g2"}], "]"}], "+", 
          "0"}], ",", "s1", ",", "s2", ",", 
         RowBox[{"{", "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"dist1", " ", "=", " ", 
       RowBox[{"distanceMoved", "[", " ", 
        RowBox[{"optimalPathList", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "4"}], "\[RightDoubleBracket]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"optimalPathList", "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], " ", 
         "\[NotEqual]", "dist1"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "pathToExplore", ",", "r1", ",", "r2", ",", "wallMoves", ",", 
            "moves", ",", "currentPathLength"}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"body", " ", "of", " ", "while", " ", "loop"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"pathToExplore", " ", "=", " ", 
            RowBox[{"First", "[", "optimalPathList", "]"}]}], ";", " ", 
           RowBox[{"(*", 
            RowBox[{"pop", " ", "off", " ", "first", " ", "entry"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"Delete", "[", 
            RowBox[{"optimalPathList", ",", "1"}], "]"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"r1", " ", "=", " ", 
            RowBox[{
            "optimalPathList", "\[LeftDoubleBracket]", "2", 
             "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"r2", " ", "=", " ", 
            RowBox[{
            "optimalPathList", "\[LeftDoubleBracket]", "3", 
             "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"moves", "=", " ", 
            RowBox[{
            "optimalPathList", "\[LeftDoubleBracket]", "4", 
             "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"wallMoves", " ", "=", " ", 
               RowBox[{"wallFrictionMoveDir", "[", 
                RowBox[{
                "dir", ",", "r1", ",", "r2", ",", "g1", ",", "g2", ",", 
                 "moves"}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"optimalPathList", "=", 
               RowBox[{"Join", "[", 
                RowBox[{"optimalPathList", ",", "wallMoves"}], "]"}]}], ";"}],
              ",", "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"dir", ",", 
               RowBox[{"{", 
                RowBox[{
                "\"\<u\>\"", ",", "\"\<d\>\"", ",", "\"\<l\>\"", ",", 
                 "\"\<r\>\""}], "}"}]}], "}"}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"optimalPathList", " ", "=", " ", 
            RowBox[{"Sort", "[", "optimalPathList", "]"}]}], ";"}]}], 
         "\[IndentingNewLine]", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"return", " ", "the", " ", "best", " ", "movement"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"bestMoveSeq", "=", 
       RowBox[{"optimalPathList", "\[LeftDoubleBracket]", 
        RowBox[{"1", ",", "4"}], "\[RightDoubleBracket]"}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.693940726427231*^9, 3.69394085900465*^9}, {
   3.693940895539198*^9, 3.6939409666319933`*^9}, {3.693941015818716*^9, 
   3.693941070387782*^9}, {3.6939411957594147`*^9, 3.693941207223578*^9}, {
   3.69394124639567*^9, 3.69394141470152*^9}, {3.6939414777790194`*^9, 
   3.693941602916482*^9}, {3.693941719143827*^9, 3.6939417800565577`*^9}, {
   3.693941813999855*^9, 3.69394183001812*^9}, {3.6945254015518847`*^9, 
   3.6945254358842783`*^9}, {3.69495315352875*^9, 3.694953153935306*^9}, {
   3.694953365339604*^9, 3.6949534511634703`*^9}, {3.6949534979686403`*^9, 
   3.69495352316755*^9}, {3.694953558657641*^9, 3.694953604338295*^9}, {
   3.694953659629985*^9, 3.694953783907632*^9}, 3.694953852200987*^9}],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Manipulate", "[", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"r", " ", "=", " ", 
        RowBox[{"1", "/", "40"}]}], " ", 
       RowBox[{"(*", 
        RowBox[{
        "radius", " ", "of", " ", "start", " ", "and", " ", "end", " ", 
         "markers"}], "*)"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"left", " ", "robot"}], "*)"}], " ", "s1", ",", "g1", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"right", " ", "robot"}], "*)"}], " ", "s2", ",", "g2", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"c1", "=", "Blue"}], ",", 
       RowBox[{"c2", " ", "=", "Magenta"}], ",", "\[IndentingNewLine]", 
       "mvNum", ",", "\[IndentingNewLine]", "mvFrac"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"(*", "workspace", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Darker", "[", "Red", "]"}], ",", " ", 
          RowBox[{"Rectangle", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "0.025"}], 
             RowBox[{"{", 
              RowBox[{"1", ",", "1"}], "}"}]}], ",", 
            RowBox[{"1.025", 
             RowBox[{"{", 
              RowBox[{"1", ",", "1"}], "}"}]}]}], "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Lighter", "[", 
           RowBox[{"Gray", ",", "0.8"}], "]"}], ",", " ", 
          RowBox[{"Rectangle", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "1"}], "}"}]}], "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Lighter", "[", 
           RowBox[{"Gray", ",", "0.8"}], "]"}], ",", " ", 
          RowBox[{"Disk", "[", 
           RowBox[{"ps2", ",", "\[Epsilon]"}], "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Lighter", "[", 
           RowBox[{"Gray", ",", "0.8"}], "]"}], ",", " ", 
          RowBox[{"Disk", "[", 
           RowBox[{"pe2", ",", "\[Epsilon]"}], "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"PointSize", "[", "0.01", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Arrowheads", "[", ".02", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Thickness", "[", "0.002", "]"}], ","}], 
       "\[IndentingNewLine]", "}"}], "]"}]}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.6949675283364573`*^9, 3.694967536103579*^9}, {
   3.6949707691236486`*^9, 3.6949708271099987`*^9}, {3.694970881624192*^9, 
   3.6949708911687202`*^9}, {3.694971385309608*^9, 3.6949714732555437`*^9}, 
   3.694987361770356*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.694525462789328*^9, 3.694525505608941*^9}, 
   3.6945317807599707`*^9, {3.694531928172214*^9, 3.6945319296362867`*^9}, 
   3.694783300509295*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"distanceMoved", "[", "moves_", "]"}], ":=", " ", 
   RowBox[{"Total", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Norm", "[", "m", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"m", ",", "moves2"}], "}"}]}], "]"}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.694953346346113*^9, 3.694953348255649*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.694967521124178*^9, 3.694967523655262*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"move3", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], "}"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.694981580971253*^9, 3.694981591643993*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"wallFrictionMoveDir", "[", 
  RowBox[{"\"\<d\>\"", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", "/", "3"}], ",", 
     RowBox[{"1", "/", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "/", "3"}], ",", 
     RowBox[{"2", "/", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", "/", "3"}], ",", 
     RowBox[{"2", "/", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"2", "/", "3"}], "-", 
      RowBox[{"1", "/", "8"}]}], ",", 
     RowBox[{
      RowBox[{"1", "/", "3"}], "+", 
      RowBox[{"1", "/", "8"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}], "}"}], ",", "0.001"}], "]"}]], "Input",
 CellChangeTimes->{{3.694981107235057*^9, 3.694981225932355*^9}, {
  3.694981285968429*^9, 3.694981288141961*^9}, {3.694981553920746*^9, 
  3.6949815968934917`*^9}, {3.694982981114765*^9, 3.694982986334907*^9}, {
  3.694983721427019*^9, 3.694983782631647*^9}, {3.694983820040352*^9, 
  3.694983845572894*^9}, {3.6949838930866623`*^9, 3.694983921401643*^9}, {
  3.694983951479547*^9, 3.694983976596985*^9}, {3.69498447333265*^9, 
  3.694984474112238*^9}, {3.694984596512678*^9, 3.6949846366756268`*^9}, {
  3.69498466872789*^9, 3.694984693021571*^9}, {3.694987448321562*^9, 
  3.6949874489949417`*^9}, {3.694987763104907*^9, 3.694987764432382*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\(\\(\\(1\\/3\\)\\) \
\[LeftDoubleBracket] 1 \[RightDoubleBracket]\\)\[NoBreak] is longer than \
depth of object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.694987766578104*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\(\\(\\(1\\/3\\)\\) \
\[LeftDoubleBracket] 2 \[RightDoubleBracket]\\)\[NoBreak] is longer than \
depth of object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.694987766585229*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\(\\(\\(1\\/3\\)\\) \
\[LeftDoubleBracket] 1 \[RightDoubleBracket]\\)\[NoBreak] is longer than \
depth of object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\
\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.694987766591736*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Part :: \
partd\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.694987766597156*^9}]
}, Open  ]],

Cell[BoxData[" "], "Input",
 CellChangeTimes->{3.694983431638967*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1036, 648},
WindowMargins->{{Automatic, 12}, {Automatic, 0}},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September 9, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 185, 4, 99, "Section"],
Cell[768, 28, 563, 12, 155, "Subsubsection"],
Cell[CellGroupData[{
Cell[1356, 44, 4695, 131, 696, "Subsection"],
Cell[6054, 177, 32401, 704, 2241, "Input",
 InitializationCell->True],
Cell[38458, 883, 5246, 113, 420, "Input"],
Cell[43707, 998, 2948, 72, 301, "Input"],
Cell[46658, 1072, 194, 3, 28, "Input"],
Cell[46855, 1077, 375, 11, 28, "Input"],
Cell[47233, 1090, 92, 1, 28, "Input"],
Cell[47328, 1093, 262, 7, 46, "Input"],
Cell[CellGroupData[{
Cell[47615, 1104, 1392, 34, 28, "Input"],
Cell[49010, 1140, 523, 11, 39, "Message"],
Cell[49536, 1153, 523, 11, 39, "Message"],
Cell[50062, 1166, 523, 11, 39, "Message"],
Cell[50588, 1179, 528, 11, 24, "Message"]
}, Open  ]],
Cell[51131, 1193, 69, 1, 28, "Input"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
