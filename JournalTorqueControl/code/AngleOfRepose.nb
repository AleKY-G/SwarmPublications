(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    348286,       6907]
NotebookOptionsPosition[    346540,       6844]
NotebookOutlinePosition[    346897,       6860]
CellTagsIndexPosition[    346854,       6857]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 "Angle of Repose\n",
 StyleBox["Shiva Shahrokhi and Aaron T. Becker", "Subsubsection"],
 "\n",
 StyleBox["when granular media is dropped in a pile, it forms a cone.  The \
maximum slope of the cone depends on the material used, but is very \
repeatable (due to CLT) and is called the angle of repose.  \nRobot swarms, \
such as the Kilobot, also have an angle of repose\n\n", "Text"],
 ButtonBox["https://en.wikipedia.org/wiki/Angle_of_repose",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://en.wikipedia.org/wiki/Angle_of_repose"], None},
  ButtonNote->"https://en.wikipedia.org/wiki/Angle_of_repose"],
 StyleBox["\nThe angle of repose, or critical angle of repose,[1] of a \
granular material is the steepest angle of descent or dip relative to the \
horizontal plane to which a material can be piled without slumping. At this \
angle, the material on the slope face is on the verge of sliding. The angle \
of repose can range from 0\[Degree] to 90\[Degree]. ", "Text"]
}], "Subchapter",
 CellChangeTimes->{{3.683824312938307*^9, 3.6838243915394907`*^9}, {
  3.683824998055793*^9, 3.683825027831605*^9}, {3.683903155498979*^9, 
  3.6839031755126743`*^9}, {3.6876009940574493`*^9, 3.68760102409772*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"l", " ", "=", " ", "1"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"width", " ", "of", " ", "bar", " ", "holding", " ", "material"}],
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "a", ",", "b", ",", "p", ",", "c", ",", "lside", ",", "h", ",", "d", 
         ",", "Area"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Graphics", "[", " ", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"a", "=", " ", 
            RowBox[{
             RowBox[{"l", "/", "2"}], "*", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"b", " ", "=", " ", 
            RowBox[{
             RowBox[{"l", "/", "2"}], "*", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Alpha]", "]"}], ",", 
               RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "}"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"c", " ", "=", " ", 
            RowBox[{
             RowBox[{"l", "/", "2"}], "*", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
           
           RowBox[{"p", " ", "=", "  ", 
            RowBox[{
             RowBox[{"l", "/", "10"}], "*", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
               RowBox[{"-", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "}"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"h", " ", "=", " ", 
            RowBox[{"l", "/", "2"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"d", " ", "=", " ", 
            RowBox[{"l", "/", "2"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", "White"}], ",", 
          RowBox[{"Rectangle", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "l"}], ",", 
              RowBox[{"-", "l"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"l", ",", "2"}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", "Pink", ",", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Rotate", "[", 
               RowBox[{
                RowBox[{"Rectangle", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "l"}], "/", "2"}], ",", 
                    RowBox[{"-", ".1"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"l", "/", "2"}], ",", "0"}], "}"}]}], "]"}], ",", 
                
                RowBox[{
                 RowBox[{"-", "\[Theta]"}], " ", 
                 RowBox[{"\[Pi]", "/", "180"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], "]"}], "}"}], "]"}], ","}],
            "*)"}], "\[IndentingNewLine]", 
          RowBox[{"Polygon", "[", 
           RowBox[{"{", 
            RowBox[{"a", ",", 
             RowBox[{"a", "+", "p"}], ",", 
             RowBox[{
              RowBox[{"-", "a"}], "+", "p"}], ",", 
             RowBox[{"-", "a"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "draw", " ", "piles", " ", "of", " ", "stuff", " ", "on", " ", 
            "ground"}], "*)"}], "\[IndentingNewLine]", "Brown", ",", 
          RowBox[{"Polygon", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "l"}], "/", "2"}], 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
                RowBox[{"h", " ", 
                 RowBox[{"Cos", "[", "\[Alpha]", "]"}]}]}], ",", 
               RowBox[{
                RowBox[{"-", "d"}], "-", "h"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"-", "l"}], "/", "2"}], 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
               RowBox[{
                RowBox[{"h", " ", 
                 RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", "h", "-", 
                "d"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "l"}], "/", "2"}], 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
                RowBox[{"h", " ", 
                 RowBox[{"Cos", "[", "\[Alpha]", "]"}]}]}], ",", 
               RowBox[{
                RowBox[{"-", "h"}], "-", "d"}]}], "}"}]}], "}"}], "]"}], ",", 
          "\[IndentingNewLine]", "Brown", ",", 
          RowBox[{"Polygon", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"l", "/", "2"}], 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
                RowBox[{"h", " ", 
                 RowBox[{"Cos", "[", "\[Alpha]", "]"}]}]}], ",", 
               RowBox[{
                RowBox[{"-", "d"}], "-", "h"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"l", "/", "2"}], 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
               RowBox[{
                RowBox[{"h", " ", 
                 RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", "h", "-", 
                "d"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"l", "/", "2"}], 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
                RowBox[{"h", " ", 
                 RowBox[{"Cos", "[", "\[Alpha]", "]"}]}]}], ",", 
               RowBox[{
                RowBox[{"-", "h"}], "-", "d"}]}], "}"}]}], "}"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"granular", " ", "media"}], "*)"}], "\[IndentingNewLine]", 
          
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"\[Alpha]", ">", 
             RowBox[{"Abs", "[", "\[Theta]", "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"lside", "=", 
               FractionBox[
                RowBox[{"l", " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "+", "\[Alpha]"}], "]"}]}], 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Pi]", "-", 
                  RowBox[{"2", "\[Alpha]"}]}], "]"}]]}], ";", 
              RowBox[{"Polygon", "[", 
               RowBox[{"{", 
                RowBox[{"a", ",", 
                 RowBox[{
                  RowBox[{"lside", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Alpha]", "]"}], ",", 
                    RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "}"}]}], "-", 
                  "a"}], ",", 
                 RowBox[{"-", "a"}]}], "}"}], "]"}]}], "}"}], ",", 
            RowBox[{
             RowBox[{"lside", "=", "0"}], ";"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"Black", ",", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"N", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"l", "/", "2"}], 
                   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
                  RowBox[{"h", " ", 
                   RowBox[{"Cos", "[", "\[Alpha]", "]"}]}]}], ",", 
                 RowBox[{
                  RowBox[{"-", "h"}], "-", "d"}]}], "}"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ","}], "*)"}], 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"draw", " ", "angle", " ", "of", " ", "repose"}], "*)"}], 
          "\[IndentingNewLine]", "Black", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "a"}], "+", 
              RowBox[{"c", "/", "2"}]}], ",", 
             RowBox[{"-", "a"}], ",", 
             RowBox[{
              RowBox[{"-", "a"}], "+", " ", 
              RowBox[{
               RowBox[{"l", "/", "4"}], "*", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Alpha]", "]"}], ",", 
                 RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "}"}]}]}]}], "}"}], 
           "]"}], ",", "\[IndentingNewLine]", "Black", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"a", "-", 
              RowBox[{"c", "/", "2"}]}], ",", "a", ",", 
             RowBox[{"a", "+", " ", 
              RowBox[{
               RowBox[{"l", "/", "4"}], "*", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], ",", 
                 RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "}"}]}]}]}], "}"}], 
           "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Circle", "[", 
           RowBox[{
            RowBox[{"-", "a"}], ",", 
            RowBox[{"l", "/", "6"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "\[Alpha]"}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Circle", "[", 
           RowBox[{"a", ",", 
            RowBox[{"l", "/", "6"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Pi]", ",", 
              RowBox[{"\[Pi]", "-", "\[Alpha]"}]}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "measure", " ", "weight", " ", "of", " ", "granular", " ", "media",
             "  ", 
            RowBox[{"(", 
             RowBox[{
             "proportional", " ", "to", " ", "area", " ", "of", " ", 
              "triangle"}], ")"}]}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Area", " ", "=", " ", 
            RowBox[{
             RowBox[{"1", "/", "2"}], " ", "lside", " ", "l", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Alpha]", "-", "\[Theta]"}], "]"}]}]}], ";", 
           "\[IndentingNewLine]", "Black"}], ",", 
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"StringForm", "[", 
             RowBox[{"\"\<Area = ``\>\"", ",", 
              RowBox[{"N", "[", 
               RowBox[{"Round", "[", 
                RowBox[{"Area", ",", "0.01"}], "]"}], "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{"-", "1"}], "/", "2"}]}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
           "measure", " ", "torque", " ", "of", " ", "granular", " ", 
            "media"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"draw", " ", "a", " ", "scale"}], "*)"}], 
          "\[IndentingNewLine]", "Blue", ",", 
          RowBox[{"PointSize", "[", "Large", "]"}], ",", 
          RowBox[{"Point", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], "]"}]}], "\[IndentingNewLine]", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}], "]"}]}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Alpha]", ",", 
         RowBox[{"\[Pi]", "/", "4"}], ",", "\"\<Angle of Repose\>\""}], "}"}],
        " ", ",", "0", ",", 
       RowBox[{"5", 
        RowBox[{"\[Pi]", "/", "12"}]}], ",", 
       RowBox[{"\[Pi]", "/", "36"}], ",", 
       RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "0"}], "}"}], " ", ",", 
       RowBox[{
        RowBox[{"-", " ", "5"}], 
        RowBox[{"\[Pi]", "/", "12"}]}], ",", " ", 
       RowBox[{"5", 
        RowBox[{"\[Pi]", "/", "12"}]}], ",", 
       RowBox[{"\[Pi]", "/", "36"}], ",", 
       RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "add", " ", "setter", " ", "bar", " ", "so", " ", "you", " ", "can", 
       " ", "select", " ", "the", " ", "material", " ", "to", " ", 
       RowBox[{"use", ".", "  ", "Should"}], " ", "change", " ", "the", " ", 
       "angle", " ", "or", " ", "repose", " ", "and", " ", "the", " ", 
       "color", " ", "of", " ", "the", " ", "granular", " ", "media"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"material", ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<sand\>\"", ",", "\"\<salt\>\"", ",", "\"\<corn\>\"", ",", 
         "\"\<wheat\>\""}], "}"}]}], "}"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQAGIQ3fJILSms6LWj2vE7GSA6KVsnF0SfipFZDaJFHFdu
AtGW3Mu3gegDBl6PaoD0rxOOz0H0tO72ryDa6+xfMF3MODd/LkhfJUc7iG76
nNsNoo8Z7loGohdO7F4FosX2n10NojV2yW0F0T2NtQdB9LZKlmMgumi5zgkQ
/WTa+kebgXTLOobfIPpSWMB/EM11N4NxC5DuOMvJBqJdxLpUQTTLpFZtEJ0y
d4MhiLaW1DUD0ULni61B9L3yCAcQHfS22xlEzzh02gNEvz0xORhEh+jtjwXR
iz6w5oPokn0JxSA6YX5uCYj+5PewEkQrde/rA9ENYfOyTgBpg7D0fBB9k3NF
MYhOSm5qBNHHqlb8OA2yR/LNbxB9gamRrazyteP3U+vANAC58Mz/
  "]],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`material$$ = 
    "sand", $CellContext`\[Alpha]$$ = Rational[1, 6] 
    Pi, $CellContext`\[Theta]$$ = Rational[1, 36] Pi, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Alpha]$$], Rational[1, 4] Pi, "Angle of Repose"}, 
      0, Rational[5, 12] Pi, Rational[1, 36] Pi}, {{
       Hold[$CellContext`\[Theta]$$], 0}, Rational[-5, 12] Pi, 
      Rational[5, 12] Pi, Rational[1, 36] Pi}, {
      Hold[$CellContext`material$$], {"sand", "salt", "corn", "wheat"}}}, 
    Typeset`size$$ = {360., {116., 121.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`\[Alpha]$218913$$ = 0, $CellContext`\[Theta]$218914$$ =
     0, $CellContext`material$218915$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`material$$ = 
        "sand", $CellContext`\[Alpha]$$ = 
        Rational[1, 4] Pi, $CellContext`\[Theta]$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Alpha]$$, $CellContext`\[Alpha]$218913$$, 0], 
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$218914$$, 0], 
        Hold[$CellContext`material$$, $CellContext`material$218915$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`a$, $CellContext`b$, $CellContext`p$, \
$CellContext`c$, $CellContext`lside$, $CellContext`h$, $CellContext`d$, 
         Area$}, 
        Graphics[{$CellContext`a$ = ($CellContext`l/2) {
              Cos[$CellContext`\[Theta]$$], 
              
              Sin[$CellContext`\[Theta]$$]}; $CellContext`b$ = \
($CellContext`l/2) {
              Cos[$CellContext`\[Alpha]$$], 
              
              Sin[$CellContext`\[Alpha]$$]}; $CellContext`c$ = \
($CellContext`l/2) {1, 0}; $CellContext`p$ = ($CellContext`l/10) {
              Sin[$CellContext`\[Theta]$$], -
              Cos[$CellContext`\[Theta]$$]}; $CellContext`h$ = $CellContext`l/
            2; $CellContext`d$ = $CellContext`l/2; White, 
          Rectangle[{-$CellContext`l, -$CellContext`l}, {$CellContext`l, 2}], 
          Pink, 
          
          Polygon[{$CellContext`a$, $CellContext`a$ + $CellContext`p$, \
-$CellContext`a$ + $CellContext`p$, -$CellContext`a$}], Brown, 
          
          Polygon[{{((-$CellContext`l)/2) 
              Cos[$CellContext`\[Theta]$$] - $CellContext`h$ 
             Cos[$CellContext`\[Alpha]$$], -$CellContext`d$ - \
$CellContext`h$}, {((-$CellContext`l)/2) 
             Cos[$CellContext`\[Theta]$$], $CellContext`h$ 
              Sin[$CellContext`\[Alpha]$$] - $CellContext`h$ - \
$CellContext`d$}, {((-$CellContext`l)/2) 
              Cos[$CellContext`\[Theta]$$] + $CellContext`h$ 
              Cos[$CellContext`\[Alpha]$$], -$CellContext`h$ - \
$CellContext`d$}}], Brown, 
          
          Polygon[{{($CellContext`l/2) 
              Cos[$CellContext`\[Theta]$$] - $CellContext`h$ 
             Cos[$CellContext`\[Alpha]$$], -$CellContext`d$ - \
$CellContext`h$}, {($CellContext`l/2) 
             Cos[$CellContext`\[Theta]$$], $CellContext`h$ 
              Sin[$CellContext`\[Alpha]$$] - $CellContext`h$ - \
$CellContext`d$}, {($CellContext`l/2) 
              Cos[$CellContext`\[Theta]$$] + $CellContext`h$ 
              Cos[$CellContext`\[Alpha]$$], -$CellContext`h$ - \
$CellContext`d$}}], 
          
          If[$CellContext`\[Alpha]$$ > 
           Abs[$CellContext`\[Theta]$$], {$CellContext`lside$ = \
$CellContext`l Sin[$CellContext`\[Theta]$$ + $CellContext`\[Alpha]$$]/Sin[
              Pi - 2 $CellContext`\[Alpha]$$]; 
            Polygon[{$CellContext`a$, $CellContext`lside$ {
                  Cos[$CellContext`\[Alpha]$$], 
                  
                  Sin[$CellContext`\[Alpha]$$]} - $CellContext`a$, \
-$CellContext`a$}]}, $CellContext`lside$ = 0; Null], Black, 
          Line[{-$CellContext`a$ + $CellContext`c$/
             2, -$CellContext`a$, -$CellContext`a$ + ($CellContext`l/4) {
               Cos[$CellContext`\[Alpha]$$], 
               Sin[$CellContext`\[Alpha]$$]}}], Black, 
          
          Line[{$CellContext`a$ - $CellContext`c$/
            2, $CellContext`a$, $CellContext`a$ + ($CellContext`l/
              4) {-Cos[$CellContext`\[Alpha]$$], 
               Sin[$CellContext`\[Alpha]$$]}}], 
          
          Circle[-$CellContext`a$, $CellContext`l/6, {
           0, $CellContext`\[Alpha]$$}], 
          
          Circle[$CellContext`a$, $CellContext`l/6, {
           Pi, Pi - $CellContext`\[Alpha]$$}], 
          Area$ = (1/2) $CellContext`lside$ $CellContext`l 
            Sin[$CellContext`\[Alpha]$$ - $CellContext`\[Theta]$$]; Black, 
          Text[
           StringForm["Area = ``", 
            N[
             Round[Area$, 0.01]]], {0, (-1)/2}], Blue, 
          PointSize[Large], 
          Point[{0, 0}]}]], 
      "Specifications" :> {{{$CellContext`\[Alpha]$$, Rational[1, 4] Pi, 
          "Angle of Repose"}, 0, Rational[5, 12] Pi, Rational[1, 36] Pi, 
         Appearance -> "Labeled"}, {{$CellContext`\[Theta]$$, 0}, 
         Rational[-5, 12] Pi, Rational[5, 12] Pi, Rational[1, 36] Pi, 
         Appearance -> "Labeled"}, {$CellContext`material$$, {
         "sand", "salt", "corn", "wheat"}}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{405., {188., 193.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.684058102301015*^9, 3.684058124582138*^9}, {
   3.6840652353852167`*^9, 3.684065247781168*^9}, 3.687559180417255*^9, 
   3.6875604448645477`*^9, 3.687561358371175*^9}]
}, {2}]],

Cell[CellGroupData[{

Cell["Compute the Torque about the center of the object", "Subsection",
 CellChangeTimes->{{3.684065388893179*^9, 3.684065402042365*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"heightBottom", "[", 
    RowBox[{"x_", ",", "\[Theta]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Tan", "[", "\[Theta]", "]"}], "x"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"heightTop", "[", 
     RowBox[{"x_", ",", "\[Alpha]_", ",", "l_", ",", "\[Theta]_"}], "]"}], 
    " ", ":=", " ", 
    RowBox[{"Min", "[", "  ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Tan", "[", "\[Alpha]", "]"}], "x"}], "+", 
       RowBox[{
        RowBox[{"l", "/", "2"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], 
           RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ")"}]}]}], ",", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "x"}], "+", 
       RowBox[{
        RowBox[{"l", "/", "2"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], 
           RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "+", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ")"}]}]}]}], "]"}]}], 
   ";"}], " ", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Torque", "[", 
     RowBox[{"\[Theta]_", ",", "\[Alpha]_", ",", "l_"}], "]"}], " ", ":=", 
    " ", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "l"}], "/", "2"}], 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
      RowBox[{
       RowBox[{"l", "/", "2"}], 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}]], 
     RowBox[{"x", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"heightTop", "[", 
         RowBox[{"x", ",", "\[Alpha]", ",", "l", ",", "\[Theta]"}], "]"}], 
        "-", 
        RowBox[{"heightBottom", "[", 
         RowBox[{"x", ",", "\[Theta]"}], "]"}]}], ")"}], 
      RowBox[{"\[DifferentialD]", "x"}]}]}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Torque1", "[", 
   RowBox[{"\[Theta]_", ",", "\[Alpha]_", ",", "l_"}], "]"}], " ", ":=", " ", 
  
  RowBox[{
   SubsuperscriptBox["\[Integral]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "l"}], "/", "2"}], 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
    RowBox[{
     RowBox[{"l", "/", "2"}], 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}]], 
   RowBox[{"x", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"heightTop", "[", 
       RowBox[{"x", ",", "\[Alpha]", ",", "l", ",", "\[Theta]"}], "]"}], "-", 
      
      RowBox[{"heightBottom", "[", 
       RowBox[{"x", ",", "\[Theta]"}], "]"}]}], ")"}], 
    RowBox[{"\[DifferentialD]", "x"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.684065277136952*^9, 3.684065369793248*^9}, {
   3.68755924043531*^9, 3.6875592471882143`*^9}, {3.687559431042736*^9, 
   3.6875594434384336`*^9}, {3.687559586292943*^9, 3.68755966057832*^9}, {
   3.6875597703378077`*^9, 3.687559826999588*^9}, {3.6875598794995193`*^9, 
   3.6875599100477257`*^9}, {3.6875603585421143`*^9, 3.687560365901042*^9}, 
   3.6875609980810966`*^9}],

Cell["\<\
Angle of repose for  a list of materials :
  Ashes 40
Asphalt 30
Bark\
\>", "Text",
 CellChangeTimes->{{3.684017584732729*^9, 3.684017597044734*^9}, {
  3.687608590598846*^9, 3.687608601081749*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"x", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"heightTop", "[", 
      RowBox[{"x", ",", "\[Alpha]", ",", "l", ",", "\[Theta]"}], "]"}], "-", 
     RowBox[{"heightBottom", "[", 
      RowBox[{"x", ",", "\[Theta]"}], "]"}]}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6875599259413557`*^9, 3.687559930477131*^9}, {
  3.687560343306526*^9, 3.687560345970402*^9}}],

Cell[BoxData[
 RowBox[{"x", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Min", "[", 
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"Sec", "[", "\[Alpha]", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", "x", " ", 
          RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "+", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Alpha]", "+", "\[Theta]"}], "]"}]}], ")"}]}], ",", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "x"}], "+", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}], " ", 
          RowBox[{"Tan", "[", "\[Alpha]", "]"}]}]}], ")"}]}]}], "]"}], "-", 
    RowBox[{"x", " ", 
     RowBox[{"Tan", "[", "\[Theta]", "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.687560346742908*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], 
   RowBox[{"Min", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Sec", "[", "\[Alpha]", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "x", " ", 
         RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "+", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Alpha]", "+", "\[Theta]"}], "]"}]}], ")"}]}], ",", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "x"}], "+", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}], " ", 
        RowBox[{"Tan", "[", "\[Alpha]", "]"}]}]}], ")"}]}], "]"}]}], "-", 
  RowBox[{"x", " ", 
   RowBox[{"Tan", "[", "\[Theta]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.687560328780727*^9, 3.6875603356318283`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"Min", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Sec", "[", "\[Alpha]", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "x", " ", 
         RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "+", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Alpha]", "+", "\[Theta]"}], "]"}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "x"}], "+", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}], " ", 
       RowBox[{"Tan", "[", "\[Alpha]", "]"}]}]}]}], "]"}]}], "-", 
  RowBox[{"x", " ", 
   RowBox[{"Tan", "[", "\[Theta]", "]"}]}]}]], "Output",
 CellChangeTimes->{3.6875603362239857`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"heightTop", "[", 
        RowBox[{"x", ",", "\[Alpha]", ",", "1", ",", "\[Theta]"}], "]"}], ",", 
       RowBox[{"heightBottom", "[", 
        RowBox[{"x", ",", "\[Theta]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", 
       RowBox[{"\[Pi]", "/", "4"}], ",", "\"\<Angle of Repose\>\""}], "}"}], 
     " ", ",", "0", ",", 
     RowBox[{"5", 
      RowBox[{"\[Pi]", "/", "12"}]}], ",", 
     RowBox[{"\[Pi]", "/", "36"}], ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0"}], "}"}], " ", ",", 
     RowBox[{
      RowBox[{"-", " ", "5"}], 
      RowBox[{"\[Pi]", "/", "12"}]}], ",", " ", 
     RowBox[{"5", 
      RowBox[{"\[Pi]", "/", "12"}]}], ",", 
     RowBox[{"\[Pi]", "/", "36"}], ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.687560148760344*^9, 3.6875602444980593`*^9}, {
  3.6875602812708406`*^9, 3.687560283638091*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Alpha]$$ = Rational[1, 4] 
    Pi, $CellContext`\[Theta]$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Alpha]$$], Rational[1, 4] Pi, "Angle of Repose"}, 
      0, Rational[5, 12] Pi, Rational[1, 36] Pi}, {{
       Hold[$CellContext`\[Theta]$$], 0}, Rational[-5, 12] Pi, 
      Rational[5, 12] Pi, Rational[1, 36] Pi}}, Typeset`size$$ = {
    360., {109., 113.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Alpha]$89278$$ = 
    0, $CellContext`\[Theta]$89279$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`\[Alpha]$$ = 
        Rational[1, 4] Pi, $CellContext`\[Theta]$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Alpha]$$, $CellContext`\[Alpha]$89278$$, 0], 
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$89279$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{
         $CellContext`heightTop[$CellContext`x, $CellContext`\[Alpha]$$, 
          1, $CellContext`\[Theta]$$], 
         $CellContext`heightBottom[$CellContext`x, $CellContext`\[Theta]$$]}, \
{$CellContext`x, -1, 1}], 
      "Specifications" :> {{{$CellContext`\[Alpha]$$, Rational[1, 4] Pi, 
          "Angle of Repose"}, 0, Rational[5, 12] Pi, Rational[1, 36] Pi, 
         Appearance -> "Labeled"}, {{$CellContext`\[Theta]$$, 0}, 
         Rational[-5, 12] Pi, Rational[5, 12] Pi, Rational[1, 36] Pi, 
         Appearance -> "Labeled"}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{405., {167., 172.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.6875602256496468`*^9, 3.687560245260846*^9}, 
   3.687560294704483*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "l", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", " ", 
   RowBox[{
    RowBox[{"l", "/", "2"}], "*", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lside", "=", 
   FractionBox[
    RowBox[{"l", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Theta]", "+", "\[Alpha]"}], "]"}]}], 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Pi]", "-", 
      RowBox[{"2", "\[Alpha]"}]}], "]"}]]}], ";", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"lside", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Alpha]", "]"}], ",", 
       RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "}"}]}], "-", "a"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xMid", " ", "=", " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", "\[Alpha]", "]"}], 
      FractionBox[
       RowBox[{"l", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "+", "\[Alpha]"}], "]"}]}], 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Pi]", "-", 
         RowBox[{"2", "\[Alpha]"}]}], "]"}]]}], "-", 
     RowBox[{
      RowBox[{"l", "/", "2"}], 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "*)"}], " ", 
   FractionBox[
    RowBox[{"l", " ", 
     RowBox[{"Cot", "[", "\[Alpha]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "2"]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"FullSimplify", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "\[Alpha]", "]"}], 
       FractionBox[
        RowBox[{"l", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "+", "\[Alpha]"}], "]"}]}], 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Pi]", "-", 
          RowBox[{"2", "\[Alpha]"}]}], "]"}]]}], "-", 
      RowBox[{
       RowBox[{"l", "/", "2"}], 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "]"}], " ", "=", " ", 
    FractionBox[
     RowBox[{"l", " ", 
      RowBox[{"Cot", "[", "\[Alpha]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "2"]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.687560628340609*^9, 3.687560642952182*^9}, {
  3.68756071298022*^9, 3.687560733959805*^9}, {3.687560773164631*^9, 
  3.687560782352359*^9}, {3.687561274145791*^9, 3.6875613291123867`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", "l", " ", 
    RowBox[{"Cot", "[", "\[Alpha]", "]"}], " ", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", "l", " ", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
    RowBox[{"Tan", "[", "\[Alpha]", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.687561309593069*^9, 3.6875613299733152`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"heightTop", "[", 
     RowBox[{"x_", ",", "\[Alpha]_", ",", "l_", ",", "\[Theta]_"}], "]"}], 
    " ", ":=", " ", 
    RowBox[{"Min", "[", "  ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Tan", "[", "\[Alpha]", "]"}], "x"}], "+", 
       RowBox[{
        RowBox[{"l", "/", "2"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], 
           RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ")"}]}]}], ",", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "x"}], "+", 
       RowBox[{
        RowBox[{"l", "/", "2"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], 
           RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "+", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ")"}]}]}]}], "]"}]}], 
   ";"}], " "}]], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Plot force and torque\n",
 Cell[BoxData[
  GraphicsBox[{},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"\[Theta] (\[Degree])\"", TraditionalForm], 
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \\(rep\\)]\\) (\[Degree])\"", 
      TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
   PlotRange->{{-70, 70}, {-10, 80}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Prolog->{{{{
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[
         NCache[{{-45 + 5 2^Rational[1, 2], 15 - 5 2^Rational[1, 2]}, {-45 + 
            4 2^Rational[1, 2], 15 - 6 2^Rational[1, 2]}, {-45 - 6 
            2^Rational[1, 2], 15 + 4 2^Rational[1, 2]}, {-45 - 5 
            2^Rational[1, 2], 15 + 
            5 2^Rational[1, 2]}}, {{-37.928932188134524`, 
          7.9289321881345245`}, {-39.34314575050762, 
          6.514718625761429}, {-53.48528137423857, 
          20.65685424949238}, {-52.071067811865476`, 22.071067811865476`}}]], 
        
        EdgeForm[{
          RGBColor[0.368417, 0.506779, 0.709798]}], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        LineBox[
         NCache[{{-45 + 5 2^Rational[1, 2], 15 - 5 2^Rational[1, 2]}, {-45 - 
            5 2^Rational[1, 2], 15 + 
            5 2^Rational[1, 2]}}, {{-37.928932188134524`, 
          7.9289321881345245`}, {-52.071067811865476`, 
          22.071067811865476`}}]]}, {
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[
         NCache[{{-25 + 10 Cos[Rational[5, 36] Pi], 15 - 10 
            Sin[Rational[5, 36] Pi]}, {-25 + 10 Cos[Rational[5, 36] Pi] - 2 
            Sin[Rational[5, 36] Pi], 15 - 2 Cos[Rational[5, 36] Pi] - 10 
            Sin[Rational[5, 36] Pi]}, {-25 - 10 Cos[Rational[5, 36] Pi] - 2 
            Sin[Rational[5, 36] Pi], 15 - 2 Cos[Rational[5, 36] Pi] + 
            10 Sin[Rational[5, 36] Pi]}, {-25 - 10 Cos[Rational[5, 36] Pi], 
            15 + 10 Sin[Rational[5, 36] Pi]}}, {{-15.936922129633501`, 
          10.773817382593005`}, {-16.7821586531149, 
          8.961201808519705}, {-34.908314393847895`, 
          17.413567043333693`}, {-34.0630778703665, 19.226182617406995`}}]], 
        EdgeForm[{
          RGBColor[0.368417, 0.506779, 0.709798]}], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        LineBox[
         NCache[{{-25 + 10 Cos[Rational[5, 36] Pi], 15 - 10 
            Sin[Rational[5, 36] Pi]}, {-25 - 10 Cos[Rational[5, 36] Pi], 15 + 
            10 Sin[Rational[5, 36] Pi]}}, {{-15.936922129633501`, 
          10.773817382593005`}, {-34.0630778703665, 19.226182617406995`}}]]}, {
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{10, 15}, {10, 13}, {-10, 13}, {-10, 15}}], 
        EdgeForm[{
          RGBColor[0.368417, 0.506779, 0.709798]}], 
        RGBColor[0.368417, 0.506779, 0.709798], {
         PolygonBox[
          
          NCache[{{10, 
            15}, {-10 + 5 (-1 + 3^Rational[1, 2]) (1 + 3^Rational[1, 2]), 15 + 
             5 (-1 + 3^Rational[1, 2])^2}, {-10, 15}}, {{10, 
            15}, {-1.7763568394002505`*^-15, 17.679491924311225`}, {-10, 
            15}}]]}}, {
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[
         NCache[{{
           25 + 10 Cos[Rational[5, 36] Pi], 15 + 
            10 Sin[Rational[5, 36] Pi]}, {
           25 + 10 Cos[Rational[5, 36] Pi] + 2 Sin[Rational[5, 36] Pi], 15 - 
            2 Cos[Rational[5, 36] Pi] + 10 Sin[Rational[5, 36] Pi]}, {
           25 - 10 Cos[Rational[5, 36] Pi] + 2 Sin[Rational[5, 36] Pi], 15 - 
            2 Cos[Rational[5, 36] Pi] - 10 Sin[Rational[5, 36] Pi]}, {
           25 - 10 Cos[Rational[5, 36] Pi], 15 - 10 
            Sin[Rational[5, 36] Pi]}}, {{34.0630778703665, 
          19.226182617406995`}, {34.908314393847895`, 17.413567043333693`}, {
          16.7821586531149, 8.961201808519705}, {15.936922129633501`, 
          10.773817382593005`}}]], 
        EdgeForm[{
          RGBColor[0.368417, 0.506779, 0.709798]}], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        LineBox[
         NCache[{{
           25 + 10 Cos[Rational[5, 36] Pi], 15 + 
            10 Sin[Rational[5, 36] Pi]}, {
           25 - 10 Cos[Rational[5, 36] Pi], 15 - 10 
            Sin[Rational[5, 36] Pi]}}, {{34.0630778703665, 
          19.226182617406995`}, {15.936922129633501`, 
          10.773817382593005`}}]]}, {
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[
         NCache[{{45 + 5 2^Rational[1, 2], 15 + 5 2^Rational[1, 2]}, {
           45 + 6 2^Rational[1, 2], 15 + 4 2^Rational[1, 2]}, {
           45 - 4 2^Rational[1, 2], 15 - 6 2^Rational[1, 2]}, {
           45 - 5 2^Rational[1, 2], 15 - 5 2^Rational[1, 2]}}, {{
          52.071067811865476`, 22.071067811865476`}, {53.48528137423857, 
          20.65685424949238}, {39.34314575050762, 6.514718625761429}, {
          37.928932188134524`, 7.9289321881345245`}}]], 
        EdgeForm[{
          RGBColor[0.368417, 0.506779, 0.709798]}], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        LineBox[
         NCache[{{45 + 5 2^Rational[1, 2], 15 + 5 2^Rational[1, 2]}, {
           45 - 5 2^Rational[1, 2], 15 - 5 2^Rational[1, 2]}}, {{
          52.071067811865476`, 22.071067811865476`}, {37.928932188134524`, 
          7.9289321881345245`}}]]}}, {{
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[
         NCache[{{-45 + 5 2^Rational[1, 2], 30 - 5 2^Rational[1, 2]}, {-45 + 
            4 2^Rational[1, 2], 30 - 6 2^Rational[1, 2]}, {-45 - 6 
            2^Rational[1, 2], 30 + 4 2^Rational[1, 2]}, {-45 - 5 
            2^Rational[1, 2], 30 + 
            5 2^Rational[1, 2]}}, {{-37.928932188134524`, 
          22.928932188134524`}, {-39.34314575050762, 
          21.51471862576143}, {-53.48528137423857, 
          35.65685424949238}, {-52.071067811865476`, 37.071067811865476`}}]], 
        
        EdgeForm[{
          RGBColor[0.880722, 0.611041, 0.142051]}], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        LineBox[
         NCache[{{-45 + 5 2^Rational[1, 2], 30 - 5 2^Rational[1, 2]}, {-45 - 
            5 2^Rational[1, 2], 30 + 
            5 2^Rational[1, 2]}}, {{-37.928932188134524`, 
          22.928932188134524`}, {-52.071067811865476`, 
          37.071067811865476`}}]]}, {
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[
         NCache[{{-25 + 10 Cos[Rational[5, 36] Pi], 30 - 10 
            Sin[Rational[5, 36] Pi]}, {-25 + 10 Cos[Rational[5, 36] Pi] - 2 
            Sin[Rational[5, 36] Pi], 30 - 2 Cos[Rational[5, 36] Pi] - 10 
            Sin[Rational[5, 36] Pi]}, {-25 - 10 Cos[Rational[5, 36] Pi] - 2 
            Sin[Rational[5, 36] Pi], 30 - 2 Cos[Rational[5, 36] Pi] + 
            10 Sin[Rational[5, 36] Pi]}, {-25 - 10 Cos[Rational[5, 36] Pi], 
            30 + 10 Sin[Rational[5, 36] Pi]}}, {{-15.936922129633501`, 
          25.773817382593005`}, {-16.7821586531149, 
          23.961201808519707`}, {-34.908314393847895`, 
          32.4135670433337}, {-34.0630778703665, 34.22618261740699}}]], 
        EdgeForm[{
          RGBColor[0.880722, 0.611041, 0.142051]}], 
        RGBColor[0.880722, 0.611041, 0.142051], {
         PolygonBox[
          
          NCache[{{-25 + 10 Cos[Rational[5, 36] Pi], 30 - 10 
             Sin[Rational[5, 36] Pi]}, {-25 - 10 Cos[Rational[5, 36] Pi] + 
             20 Sin[Rational[1, 36] Pi], 30 + 
             20 3^Rational[-1, 2] Sin[Rational[1, 36] Pi] + 
             10 Sin[Rational[5, 36] Pi]}, {-25 - 10 Cos[Rational[5, 36] Pi], 
             30 + 10 Sin[Rational[5, 36] Pi]}}, {{-15.936922129633501`, 
           25.773817382593005`}, {-32.319963015413336`, 
           35.23257044814264}, {-34.0630778703665, 34.22618261740699}}]]}}, {
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{10, 30}, {10, 28}, {-10, 28}, {-10, 30}}], 
        EdgeForm[{
          RGBColor[0.880722, 0.611041, 0.142051]}], 
        RGBColor[0.880722, 0.611041, 0.142051], {
         PolygonBox[
          
          NCache[{{10, 30}, {0, 30 + 10 3^Rational[-1, 2]}, {-10, 30}}, {{10, 
            30}, {0, 35.773502691896255`}, {-10, 30}}]]}}, {
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[
         NCache[{{
           25 + 10 Cos[Rational[5, 36] Pi], 30 + 
            10 Sin[Rational[5, 36] Pi]}, {
           25 + 10 Cos[Rational[5, 36] Pi] + 2 Sin[Rational[5, 36] Pi], 30 - 
            2 Cos[Rational[5, 36] Pi] + 10 Sin[Rational[5, 36] Pi]}, {
           25 - 10 Cos[Rational[5, 36] Pi] + 2 Sin[Rational[5, 36] Pi], 30 - 
            2 Cos[Rational[5, 36] Pi] - 10 Sin[Rational[5, 36] Pi]}, {
           25 - 10 Cos[Rational[5, 36] Pi], 30 - 10 
            Sin[Rational[5, 36] Pi]}}, {{34.0630778703665, 
          34.22618261740699}, {34.908314393847895`, 32.4135670433337}, {
          16.7821586531149, 23.961201808519707`}, {15.936922129633501`, 
          25.773817382593005`}}]], 
        EdgeForm[{
          RGBColor[0.880722, 0.611041, 0.142051]}], 
        RGBColor[0.880722, 0.611041, 0.142051], {
         PolygonBox[
          
          NCache[{{
            25 + 10 Cos[Rational[5, 36] Pi], 30 + 
             10 Sin[Rational[5, 36] Pi]}, {
            25 - 10 Cos[Rational[5, 36] Pi] + 20 Cos[Rational[7, 36] Pi], 30 + 
             20 3^Rational[-1, 2] Cos[Rational[7, 36] Pi] - 10 
             Sin[Rational[5, 36] Pi]}, {
            25 - 10 Cos[Rational[5, 36] Pi], 30 - 10 
             Sin[Rational[5, 36] Pi]}}, {{34.0630778703665, 
           34.22618261740699}, {32.319963015413336`, 35.23257044814264}, {
           15.936922129633501`, 25.773817382593005`}}]]}}, {
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[
         NCache[{{45 + 5 2^Rational[1, 2], 30 + 5 2^Rational[1, 2]}, {
           45 + 6 2^Rational[1, 2], 30 + 4 2^Rational[1, 2]}, {
           45 - 4 2^Rational[1, 2], 30 - 6 2^Rational[1, 2]}, {
           45 - 5 2^Rational[1, 2], 30 - 5 2^Rational[1, 2]}}, {{
          52.071067811865476`, 37.071067811865476`}, {53.48528137423857, 
          35.65685424949238}, {39.34314575050762, 21.51471862576143}, {
          37.928932188134524`, 22.928932188134524`}}]], 
        EdgeForm[{
          RGBColor[0.880722, 0.611041, 0.142051]}], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        LineBox[
         NCache[{{45 + 5 2^Rational[1, 2], 30 + 5 2^Rational[1, 2]}, {
           45 - 5 2^Rational[1, 2], 30 - 5 2^Rational[1, 2]}}, {{
          52.071067811865476`, 37.071067811865476`}, {37.928932188134524`, 
          22.928932188134524`}}]]}}, {{
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[
         NCache[{{-45 + 5 2^Rational[1, 2], 45 - 5 2^Rational[1, 2]}, {-45 + 
            4 2^Rational[1, 2], 45 - 6 2^Rational[1, 2]}, {-45 - 6 
            2^Rational[1, 2], 45 + 4 2^Rational[1, 2]}, {-45 - 5 
            2^Rational[1, 2], 45 + 
            5 2^Rational[1, 2]}}, {{-37.928932188134524`, 
          37.928932188134524`}, {-39.34314575050762, 
          36.51471862576143}, {-53.48528137423857, 
          50.65685424949238}, {-52.071067811865476`, 52.071067811865476`}}]], 
        
        EdgeForm[{
          RGBColor[0.560181, 0.691569, 0.194885]}], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        LineBox[
         NCache[{{-45 + 5 2^Rational[1, 2], 45 - 5 2^Rational[1, 2]}, {-45 - 
            5 2^Rational[1, 2], 45 + 
            5 2^Rational[1, 2]}}, {{-37.928932188134524`, 
          37.928932188134524`}, {-52.071067811865476`, 
          52.071067811865476`}}]]}, {
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[
         NCache[{{-25 + 10 Cos[Rational[5, 36] Pi], 45 - 10 
            Sin[Rational[5, 36] Pi]}, {-25 + 10 Cos[Rational[5, 36] Pi] - 2 
            Sin[Rational[5, 36] Pi], 45 - 2 Cos[Rational[5, 36] Pi] - 10 
            Sin[Rational[5, 36] Pi]}, {-25 - 10 Cos[Rational[5, 36] Pi] - 2 
            Sin[Rational[5, 36] Pi], 45 - 2 Cos[Rational[5, 36] Pi] + 
            10 Sin[Rational[5, 36] Pi]}, {-25 - 10 Cos[Rational[5, 36] Pi], 
            45 + 10 Sin[Rational[5, 36] Pi]}}, {{-15.936922129633501`, 
          40.77381738259301}, {-16.7821586531149, 
          38.961201808519704`}, {-34.908314393847895`, 
          47.4135670433337}, {-34.0630778703665, 49.22618261740699}}]], 
        EdgeForm[{
          RGBColor[0.560181, 0.691569, 0.194885]}], 
        RGBColor[0.560181, 0.691569, 0.194885], {
         PolygonBox[
          
          NCache[{{-25 + 10 Cos[Rational[5, 36] Pi], 45 - 10 
             Sin[Rational[5, 36] Pi]}, {-25 - 10 Cos[Rational[5, 36] Pi] + 
             10 2^Rational[1, 2] Sin[Rational[1, 9] Pi], 45 + 
             10 2^Rational[1, 2] Sin[Rational[1, 9] Pi] + 
             10 Sin[Rational[5, 36] Pi]}, {-25 - 10 Cos[Rational[5, 36] Pi], 
             45 + 10 Sin[Rational[5, 36] Pi]}}, {{-15.936922129633501`, 
           40.77381738259301}, {-29.226182617406995`, 
           54.0630778703665}, {-34.0630778703665, 49.22618261740699}}]]}}, {
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{10, 45}, {10, 43}, {-10, 43}, {-10, 45}}], 
        EdgeForm[{
          RGBColor[0.560181, 0.691569, 0.194885]}], 
        RGBColor[0.560181, 0.691569, 0.194885], {
         PolygonBox[{{10, 45}, {0, 55}, {-10, 45}}]}}, {
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[
         NCache[{{
           25 + 10 Cos[Rational[5, 36] Pi], 45 + 
            10 Sin[Rational[5, 36] Pi]}, {
           25 + 10 Cos[Rational[5, 36] Pi] + 2 Sin[Rational[5, 36] Pi], 45 - 
            2 Cos[Rational[5, 36] Pi] + 10 Sin[Rational[5, 36] Pi]}, {
           25 - 10 Cos[Rational[5, 36] Pi] + 2 Sin[Rational[5, 36] Pi], 45 - 
            2 Cos[Rational[5, 36] Pi] - 10 Sin[Rational[5, 36] Pi]}, {
           25 - 10 Cos[Rational[5, 36] Pi], 45 - 10 
            Sin[Rational[5, 36] Pi]}}, {{34.0630778703665, 
          49.22618261740699}, {34.908314393847895`, 47.4135670433337}, {
          16.7821586531149, 38.961201808519704`}, {15.936922129633501`, 
          40.77381738259301}}]], 
        EdgeForm[{
          RGBColor[0.560181, 0.691569, 0.194885]}], 
        RGBColor[0.560181, 0.691569, 0.194885], {
         PolygonBox[
          
          NCache[{{
            25 + 10 Cos[Rational[5, 36] Pi], 45 + 
             10 Sin[Rational[5, 36] Pi]}, {
            25 + 10 2^Rational[1, 2] Cos[Rational[1, 9] Pi] - 10 
             Cos[Rational[5, 36] Pi], 45 + 
             10 2^Rational[1, 2] Cos[Rational[1, 9] Pi] - 10 
             Sin[Rational[5, 36] Pi]}, {
            25 - 10 Cos[Rational[5, 36] Pi], 45 - 10 
             Sin[Rational[5, 36] Pi]}}, {{34.0630778703665, 
           49.22618261740699}, {29.226182617406998`, 54.0630778703665}, {
           15.936922129633501`, 40.77381738259301}}]]}}, {
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[
         NCache[{{45 + 5 2^Rational[1, 2], 45 + 5 2^Rational[1, 2]}, {
           45 + 6 2^Rational[1, 2], 45 + 4 2^Rational[1, 2]}, {
           45 - 4 2^Rational[1, 2], 45 - 6 2^Rational[1, 2]}, {
           45 - 5 2^Rational[1, 2], 45 - 5 2^Rational[1, 2]}}, {{
          52.071067811865476`, 52.071067811865476`}, {53.48528137423857, 
          50.65685424949238}, {39.34314575050762, 36.51471862576143}, {
          37.928932188134524`, 37.928932188134524`}}]], 
        EdgeForm[{
          RGBColor[0.560181, 0.691569, 0.194885]}], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        LineBox[
         NCache[{{45 + 5 2^Rational[1, 2], 45 + 5 2^Rational[1, 2]}, {
           45 - 5 2^Rational[1, 2], 45 - 5 2^Rational[1, 2]}}, {{
          52.071067811865476`, 52.071067811865476`}, {37.928932188134524`, 
          37.928932188134524`}}]]}}, {{
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[
         NCache[{{-45 + 5 2^Rational[1, 2], 60 - 5 2^Rational[1, 2]}, {-45 + 
            4 2^Rational[1, 2], 60 - 6 2^Rational[1, 2]}, {-45 - 6 
            2^Rational[1, 2], 60 + 4 2^Rational[1, 2]}, {-45 - 5 
            2^Rational[1, 2], 60 + 
            5 2^Rational[1, 2]}}, {{-37.928932188134524`, 
          52.928932188134524`}, {-39.34314575050762, 
          51.51471862576143}, {-53.48528137423857, 
          65.65685424949238}, {-52.071067811865476`, 67.07106781186548}}]], 
        EdgeForm[{
          RGBColor[0.922526, 0.385626, 0.209179]}], 
        RGBColor[0.922526, 0.385626, 0.209179], {
         PolygonBox[
          
          NCache[{{-45 + 5 2^Rational[1, 2], 60 - 5 2^Rational[1, 2]}, {-45 - 
             5 2^Rational[1, 2] + 
             5 Rational[2, 3]^Rational[1, 2] (-1 + 3^Rational[1, 2]), 60 + 
             5 2^Rational[1, 2] + 
             5 2^Rational[1, 2] (-1 + 3^Rational[1, 2])}, {-45 - 5 
             2^Rational[1, 2], 60 + 
             5 2^Rational[1, 2]}}, {{-37.928932188134524`, 
           52.928932188134524`}, {-49.08248290463863, 
           72.24744871391589}, {-52.071067811865476`, 
           67.07106781186548}}]]}}, {
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[
         NCache[{{-25 + 10 Cos[Rational[5, 36] Pi], 60 - 10 
            Sin[Rational[5, 36] Pi]}, {-25 + 10 Cos[Rational[5, 36] Pi] - 2 
            Sin[Rational[5, 36] Pi], 60 - 2 Cos[Rational[5, 36] Pi] - 10 
            Sin[Rational[5, 36] Pi]}, {-25 - 10 Cos[Rational[5, 36] Pi] - 2 
            Sin[Rational[5, 36] Pi], 60 - 2 Cos[Rational[5, 36] Pi] + 
            10 Sin[Rational[5, 36] Pi]}, {-25 - 10 Cos[Rational[5, 36] Pi], 
            60 + 10 Sin[Rational[5, 36] Pi]}}, {{-15.936922129633501`, 
          55.77381738259301}, {-16.7821586531149, 
          53.961201808519704`}, {-34.908314393847895`, 
          62.4135670433337}, {-34.0630778703665, 64.22618261740699}}]], 
        EdgeForm[{
          RGBColor[0.922526, 0.385626, 0.209179]}], 
        RGBColor[0.922526, 0.385626, 0.209179], {
         PolygonBox[
          
          NCache[{{-25 + 10 Cos[Rational[5, 36] Pi], 60 - 10 
             Sin[Rational[5, 36] Pi]}, {-25 - 10 Cos[Rational[5, 36] Pi] + 
             20 3^Rational[-1, 2] Sin[Rational[7, 36] Pi], 60 + 
             10 Sin[Rational[5, 36] Pi] + 20 Sin[Rational[7, 36] Pi]}, {-25 - 
             10 Cos[Rational[5, 36] Pi], 60 + 
             10 Sin[Rational[5, 36] Pi]}}, {{-15.936922129633501`, 
           55.77381738259301}, {-27.439987671804445`, 
           75.69771134442792}, {-34.0630778703665, 64.22618261740699}}]]}}, {
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{10, 60}, {10, 58}, {-10, 58}, {-10, 60}}], 
        EdgeForm[{
          RGBColor[0.922526, 0.385626, 0.209179]}], 
        RGBColor[0.922526, 0.385626, 0.209179], {
         PolygonBox[
          
          NCache[{{10, 60}, {0, 60 + 10 3^Rational[1, 2]}, {-10, 60}}, {{10, 
            60}, {0, 77.32050807568876}, {-10, 60}}]]}}, {
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[
         NCache[{{
           25 + 10 Cos[Rational[5, 36] Pi], 60 + 
            10 Sin[Rational[5, 36] Pi]}, {
           25 + 10 Cos[Rational[5, 36] Pi] + 2 Sin[Rational[5, 36] Pi], 60 - 
            2 Cos[Rational[5, 36] Pi] + 10 Sin[Rational[5, 36] Pi]}, {
           25 - 10 Cos[Rational[5, 36] Pi] + 2 Sin[Rational[5, 36] Pi], 60 - 
            2 Cos[Rational[5, 36] Pi] - 10 Sin[Rational[5, 36] Pi]}, {
           25 - 10 Cos[Rational[5, 36] Pi], 60 - 10 
            Sin[Rational[5, 36] Pi]}}, {{34.0630778703665, 
          64.22618261740699}, {34.908314393847895`, 62.4135670433337}, {
          16.7821586531149, 53.961201808519704`}, {15.936922129633501`, 
          55.77381738259301}}]], 
        EdgeForm[{
          RGBColor[0.922526, 0.385626, 0.209179]}], 
        RGBColor[0.922526, 0.385626, 0.209179], {
         PolygonBox[
          
          NCache[{{
            25 + 10 Cos[Rational[5, 36] Pi], 60 + 
             10 Sin[Rational[5, 36] Pi]}, {
            25 + 20 3^Rational[-1, 2] Cos[Rational[1, 36] Pi] - 10 
             Cos[Rational[5, 36] Pi], 60 + 20 Cos[Rational[1, 36] Pi] - 10 
             Sin[Rational[5, 36] Pi]}, {
            25 - 10 Cos[Rational[5, 36] Pi], 60 - 10 
             Sin[Rational[5, 36] Pi]}}, {{34.0630778703665, 
           64.22618261740699}, {27.439987671804445`, 75.69771134442792}, {
           15.936922129633501`, 55.77381738259301}}]]}}, {
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[
         NCache[{{45 + 5 2^Rational[1, 2], 60 + 5 2^Rational[1, 2]}, {
           45 + 6 2^Rational[1, 2], 60 + 4 2^Rational[1, 2]}, {
           45 - 4 2^Rational[1, 2], 60 - 6 2^Rational[1, 2]}, {
           45 - 5 2^Rational[1, 2], 60 - 5 2^Rational[1, 2]}}, {{
          52.071067811865476`, 67.07106781186548}, {53.48528137423857, 
          65.65685424949238}, {39.34314575050762, 51.51471862576143}, {
          37.928932188134524`, 52.928932188134524`}}]], 
        EdgeForm[{
          RGBColor[0.922526, 0.385626, 0.209179]}], 
        RGBColor[0.922526, 0.385626, 0.209179], {
         PolygonBox[
          
          NCache[{{45 + 5 2^Rational[1, 2], 60 + 5 2^Rational[1, 2]}, {
            45 - 5 2^Rational[1, 2] + 
             5 Rational[2, 3]^Rational[1, 2] (1 + 3^Rational[1, 2]), 60 - 5 
             2^Rational[1, 2] + 5 2^Rational[1, 2] (1 + 3^Rational[1, 2])}, {
            45 - 5 2^Rational[1, 2], 60 - 5 2^Rational[1, 2]}}, {{
           52.071067811865476`, 67.07106781186548}, {49.08248290463863, 
           72.24744871391589}, {37.928932188134524`, 
           52.928932188134524`}}]]}}}}},
   Ticks->{{{-60, 
       FormBox[
        RowBox[{"-", "60"}], TraditionalForm]}, {-45, 
       FormBox[
        RowBox[{"-", "45"}], TraditionalForm]}, {-30, 
       FormBox[
        RowBox[{"-", "30"}], TraditionalForm]}, {-15, 
       FormBox[
        RowBox[{"-", "15"}], TraditionalForm]}, {15, 
       FormBox["15", TraditionalForm]}, {30, 
       FormBox["30", TraditionalForm]}, {45, 
       FormBox["45", TraditionalForm]}, {60, 
       FormBox["60", TraditionalForm]}}, {{15, 
       FormBox["15", TraditionalForm]}, {30, 
       FormBox["30", TraditionalForm]}, {45, 
       FormBox["45", TraditionalForm]}, {60, 
       FormBox["60", TraditionalForm]}}}]],
  CellChangeTimes->{
   3.687605837775404*^9, {3.687605874792824*^9, 3.687605886496085*^9}, {
    3.687605917515604*^9, 3.6876059674275103`*^9}, 3.687606019020296*^9, {
    3.687606049177376*^9, 3.687606053644273*^9}, {3.687606109723209*^9, 
    3.6876061576467113`*^9}, {3.687606230149214*^9, 3.687606267486062*^9}, 
    3.6876067552018623`*^9, {3.687606809537541*^9, 3.687606867311702*^9}, {
    3.6876068982662697`*^9, 3.687607046845057*^9}, {3.687607083947885*^9, 
    3.687607142974106*^9}, 3.687607186849019*^9, 3.687607288796714*^9, {
    3.687607349424101*^9, 3.687607372887609*^9}, 3.687608314659729*^9, 
    3.6876085441057253`*^9}],
 Cell[BoxData[
  GraphicsBox[{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
yVnL5NoHHq1dkcz1//7/5/h/AOr1ONk=
       "]]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
Du8oS9Ehk0Sttn/Z4kUMGHhocGkYz+1TEmoCEgyomvzeKYPnp8X1f4AyAwYX
nRLL4rnTLbIvWZcBp9+qWEbz/FJIswaZMmB7U+MbR557br3K+2PHgPKbnw+K
8dznlxkNtjNgiviFTfd49x+QMnNL9mfAoyb5Us48DzdOGKEIBhyO0GM84a1n
NLJQ/E8qA3avfXOT9/yMxjVcPloeZUB3LYOD2bz1f+pa9CipkAFLVtaffMyr
1xfOv6V15QzInmP8mObVc4riT/yu5uXfYRUs53lmWMbPspUBK8pL0kV49f9t
G69S944By20LBRp4/Vr0fcP8/DcGdFv5JTuZ10+hS309FoJM6BgosVmT12/R
JVan7iszoV95lZ3xBhKtvP01Yl6XCXsdfJNytUkk6V+8xcKMCSmjSl0jvP0k
2yQsdn87Ex5NPv7URoNEClH3xn/5M2GtaFfoFjUSKa8LajGPZMKWaoqqvSqJ
1nE70muPMiEh8vnStAKJjFknZ2tamVBN2+2tPe88UL+zu+deMWEKsC67LE4i
xqWZ22YjvHyrTr/PK0gElniG1Qiawp601RXmvPPm2KT2vtrMFLrpusKOWQK5
RHU1zdqbwnYBlmfCDwK5riMumu4whQNaJ7ZJThFoF3fMuzrSFOpPSb+YnyDQ
XlbFi3vXTGGxoU1tWx+B9n/f8+/PGl5cflNM82sChVxafYzZZgrvuF2YvfqC
QJFLYhzvjZjCLoXrLpTHBEprsmioUjGDOrWKs8waAp1lPaq4e8wM2iQuCl5z
gkDekuDujXNm0Aue12g7TCDV/yrvX75mBlOyN/vtzSBQcWx+W26rGTwS9Sp8
z0ECXb26bzhmkTkcNbp0yTWAQNWrRGQZYebwu3rAFgMKgRL7E5QNk81hhIvm
YKYegSyvftbQOmwOz104/a6DN6/rbV8ZyZaZw1+7r9jL8uZ5a0zJppkBc7jk
aXZw6S8u6u6zTa5ysYCHt03fvo+4KP9KFbfC2wJeDfi8Bd3lIs8Y3UOlwRbw
U5CH59UbXDQgIXU6L8MCNh4vrrU+x0WjNm8rY7EFHPjb8XrIQS6aLksdYRha
Qta2TXk1VC6Siq7bfE8cwMX9L2T0T3GQowoqGVQGsM9aviQni4PSW9CfZfoA
Tru5TQwmcdBX+Qc3dzkC2GZy7JLhXg56hhqkf2UA+OCywdJzNA56yBkOUVkE
octV6SMPnqYjTscYzSceQvntmpeNvqYhVfX9vtOpEMbX9q6LfJuGamPGj2Rl
QpiTeKO6oCsNfVP98L4yD0IHwwlayZ005BMxkb/4LoRNRsafD8WlISvZz7+L
v0H4QLgB3p5NRb/3TDWPBltBxaTs7hPjKUhU2nf+Z4QVPCDjyZl6nYJkW56Z
rEiwgirO7itgawoy0b9RZJhpBbN9rzbmXk5BgbP74uMuWcEqUY6fg28K6jz+
n55ovxXMD1T4mHotGZU2tOXoO1tD69OjalTPg2jruvM+UUY28Fq9iekDEIvy
2e71Kkwb6PFt+dZLErFoaK+oWhu0gSNvlnI8BmNQxJWoQWUXG3hnNp60TItB
OQYOu1tCbGC+RrHD4INo9IL5zUuh3AZ6lzxTKGdEoR1OrJ0PNG1hzD5fpUmh
cOQVM+YspsiC3LKkyjrTACTz49A9qjoLShsaqF3u8EdPow3VvXVYkFH4fdbe
xx/ZRsdMX2ewYMmTmLMoww/pRC0pcNnGgqy1xOnQ5z5oJnzt+IlsFgx9duWG
dKU3qvza6Fp7kgX157qqvZ95oaDwwPvDZ1lw1YuvvmqTnqg/7MZR6lUWLJra
tVJB1wM1HbCgv3rIgr+Nf9n3FmxHx0N2cuQXsWHD/OPcb4EuyPHTr4/WImyY
+Ehvcr2AM1oaUrQ9SJwNlcTOa+3X24zi/h7VqVViw9/dQprTHHu0OzjqmZcp
Gwp3Lomx1rJG8hOyZoQVGy6/d0LmkhNEnUG1xdft2HBuxEhc5b05Ygctjv3j
zobXRe/o/o6hIoEPJYPrvdlwRintouh9I1S932GTiz8bgrtor7eALtLbf0z5
fAQbJhT45PwSlEcjY5SM1ng2HGEnuUd/WYKK9nV/+ZLKhv//9/ldYwke8pl8
S+1TabI+ynfH+3r9oFy+ycCAvBOFfM/uvRY0XM73rVGXFytu8R2yd8qSWsP3
YICZJNHKd4t/a9X6kf8T//aYpvvx/1w/9fktwym+dQvfVDAFNy746MuPpZuU
+d6+UfJ0qDvfI1oecXeb+V4yMcHceNluwT8FyleEZTsseHOloIfSNscF7/g6
Ndtp5bRgef+Trx9KuiyYoZL4LWCK78oiQ5ro2JYFe05W3DnweOuCP4u6Nuy4
5rrg/k/1M6witwXPn/sdNJW2bcErhVblvyf4Vg1Ub+nN4tvW0E6j6TjfWfhY
78kLfMsOamym1/NNUdukH7/IfcFswsszZAnfO8ZDs3yW8Z1QmTPisIrveuv+
QoW1fLv4honfh3z7PEy3uGnLd+SGU0GX7PjO/Vb98LAL3/3pQineu/meHJW5
vtWPb0FH7V52IN/rpJwYBgf4psXuDlCP5NuuNzxnTSzfuyC3XjSR7//9/3DB
/wMyEUqN
       "]]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]}}, InsetBox[
     TemplateBox[{
      InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(TraditionalForm\\`15\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 15], 
        Editable -> False],InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(TraditionalForm\\`30\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 30], 
        Editable -> False],InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(TraditionalForm\\`45\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 45], 
        Editable -> False],InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(TraditionalForm\\`60\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 60], 
        Editable -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.01, 0.01}], ImageScaled[{0, 0}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"\[Theta]\"", TraditionalForm], 
     FormBox["\"Torque\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
   PlotRange->{{-70, 70}, {-0.01388887730109515, 0.013888874931540153`}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{{{-60, 
       FormBox[
        RowBox[{"-", "60"}], TraditionalForm]}, {-45, 
       FormBox[
        RowBox[{"-", "45"}], TraditionalForm]}, {-30, 
       FormBox[
        RowBox[{"-", "30"}], TraditionalForm]}, {-15, 
       FormBox[
        RowBox[{"-", "15"}], TraditionalForm]}, {15, 
       FormBox["15", TraditionalForm]}, {30, 
       FormBox["30", TraditionalForm]}, {45, 
       FormBox["45", TraditionalForm]}, {60, 
       FormBox["60", TraditionalForm]}}, Automatic}]],
  CellChangeTimes->{3.687560985963759*^9, 3.687561221247024*^9, 
   3.687561419496804*^9, 3.6875614635471497`*^9, 3.6875615270031853`*^9, 
   3.687562758051346*^9, 3.687605259958919*^9, 3.687606340424638*^9, 
   3.6876077475308104`*^9, 3.6876078671966133`*^9}],
 Cell[BoxData[
  GraphicsBox[{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
3ahVkNsC7ymCbLpDnZT+bvScN8trNWcRDB3hlWlGu9Gr9iV1m+eFcPJ+4KCk
1W6kyJIvWb+zEFLVTd0a/XYjvwP7z1G1HsAb/TmXDYW7kfuaNepd4gXgaEnb
XytHRensWfeqRvIg13+pwleNimr7d0xvvpkH44nFoiLbqKhH96jpBZc8COkU
6/GhUdH1gx2Z+l23Icvxs4OQBxWxyZ/Lc264Bb3uGXZHblJR6tMTx+/k54JL
8MTe1RtpKNyO/VcKkQkiC7FPdTbT0C8jiSFDq0x4FaSx2VWJhvQWvzwefJUB
1KDg7//q0VDf4tKd9R3poBTIcd3KnoYcHc/KoNep8OPEpsmUeBraO5PrfaM7
EUq/PretTqOh0LkG4YV9ieB7wrtm5BoNHZLc45z2MAEGjhcn6jygoW3kmdRa
EgcvAgx1uxtoyED2Ec/wo0uQ7Lc/WpyVjixjRiOnyqPA/POvaSMuOtIx9FLU
fRIJf/nl7vPlp6Np3jumP/0iIPTvMaVqCTpC9lj1t38YuB0LbHfZTkcR6hKV
j4+fBPEpUYMLu+honsNuu8iJ49DpW533rwkdNbRmPxsZ8QO676qQPw505B6k
okoZ9QKWT3cH5V3p6ObRAavhUXeo9DE1s/Kko1yOoBAOwgVUfZIkb56kI5eO
27nvbpnB6IT2xabTdCQvWb4z0FQXco/2zM5G0dH/P78fmAhzEr/EtNBRqRdG
iUwzxuvUfDOYjvH2ykzJYXrpSJHvSCHTZWNWb/jKmPY7Mr9Tp4rpQS8DgQtN
TDd6NlXIj/7P+FzbNpXp/8kf1VGmMc+0Sk7fQ3024xUndk3nm0kyvc9YIMvf
gelRBafQJy+Z5pia0je+Z7LiRZZCvuPxpiu2KGVzkrA3X7Hj1/mlzl2WKxb3
THvbIGC1Yj2p8DmveaZLczW28U5Yr9h55mF5QJvNir/w2tY7FtmueOBz3Q9a
rt2Kl2/89p0/a7/iNezrsscvMC3tvbmx/zLTVA2TLS+Smb6Mk/rTbjEtOrjF
QreOaW0ZM7XTrA4rpl9wcfbjYNpx0v+yOzfTYaWpo6brmK4zGsjZsIlpq8PH
+WsQ0+4N5wxLqEyfUk73vWPCdMZcZUOcFdMD59gjXd2YnhkT+dfGg2k2c8V+
ujfTskKWeuoBTG8LcfPafIppk/4TqetDmD6AztfxhjP93/eLK/4PW+1N4w==

       "]]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
aR2DbWd0ul4wmu3/fj9c9n8ALd978w==
       "]]}}, InsetBox[
     TemplateBox[{
      InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(TraditionalForm\\`15\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 15], 
        Editable -> False],InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(TraditionalForm\\`30\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 30], 
        Editable -> False],InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(TraditionalForm\\`45\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 45], 
        Editable -> False],InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(TraditionalForm\\`60\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 60], 
        Editable -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.01, 0.01}], ImageScaled[{0, 0}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"\[Theta] (\[Degree])\"", TraditionalForm], 
     FormBox["\"Force\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
   PlotRange->{{-70, 70}, {-0.4330126681562524, 0.}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{{{-60, 
       FormBox[
        RowBox[{"-", "60"}], TraditionalForm]}, {-45, 
       FormBox[
        RowBox[{"-", "45"}], TraditionalForm]}, {-30, 
       FormBox[
        RowBox[{"-", "30"}], TraditionalForm]}, {-15, 
       FormBox[
        RowBox[{"-", "15"}], TraditionalForm]}, {15, 
       FormBox["15", TraditionalForm]}, {30, 
       FormBox["30", TraditionalForm]}, {45, 
       FormBox["45", TraditionalForm]}, {60, 
       FormBox["60", TraditionalForm]}}, Automatic}]],
  CellChangeTimes->{
   3.6875617889436398`*^9, 3.687562308067196*^9, 3.687562733128643*^9, 
    3.687605236712493*^9, 3.687606104201973*^9, 3.68760630516457*^9, {
    3.687607653339971*^9, 3.687607701464322*^9}}]
}], "Subsection",
 CellChangeTimes->{{3.684065388893179*^9, 3.684065402042365*^9}, {
  3.68760862327945*^9, 3.6876086509850883`*^9}, {3.687608681853881*^9, 
  3.687608690355647*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Torque", "[", 
   RowBox[{"\[Theta]_", ",", "\[Alpha]_", ",", "l_"}], "]"}], " ", ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "<", 
     RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], ",", "0", ",", " ", 
    RowBox[{
     RowBox[{
      SubsuperscriptBox["\[Integral]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "l"}], "/", "2"}], 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
       FractionBox[
        RowBox[{"l", " ", 
         RowBox[{"Cot", "[", "\[Alpha]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "2"]], 
      RowBox[{"x", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Tan", "[", "\[Alpha]", "]"}], "x"}], "+", 
         RowBox[{
          RowBox[{"l", "/", "2"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "-", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ")"}], "  "}], "-", 
         RowBox[{
          RowBox[{"Tan", "[", "\[Theta]", "]"}], "x"}]}], ")"}], 
       RowBox[{"\[DifferentialD]", "x"}]}]}], "+", "\[IndentingNewLine]", " ", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", 
       FractionBox[
        RowBox[{"l", " ", 
         RowBox[{"Cot", "[", "\[Alpha]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "2"], 
       RowBox[{
        RowBox[{"l", "/", "2"}], 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}]], 
      RowBox[{"x", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "x"}], "+", 
         RowBox[{
          RowBox[{"l", "/", "2"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "+", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"Tan", "[", "\[Theta]", "]"}], "x"}]}], ")"}], 
       RowBox[{"\[DifferentialD]", "x"}]}]}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Force", "[", 
   RowBox[{"\[Theta]_", ",", "\[Alpha]_", ",", "l_"}], "]"}], " ", ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "<", 
     RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], ",", "0", ",", " ", 
    RowBox[{
     RowBox[{
      SubsuperscriptBox["\[Integral]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "l"}], "/", "2"}], 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
       FractionBox[
        RowBox[{"l", " ", 
         RowBox[{"Cot", "[", "\[Alpha]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "2"]], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Tan", "[", "\[Alpha]", "]"}], "x"}], "+", 
         RowBox[{
          RowBox[{"l", "/", "2"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "-", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ")"}]}], "  ", "-", 
         RowBox[{
          RowBox[{"Tan", "[", "\[Theta]", "]"}], "x"}]}], ")"}], 
       RowBox[{"\[DifferentialD]", "x"}]}]}], "+", "\[IndentingNewLine]", " ", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", 
       FractionBox[
        RowBox[{"l", " ", 
         RowBox[{"Cot", "[", "\[Alpha]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "2"], 
       RowBox[{
        RowBox[{"l", "/", "2"}], 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}]], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "x"}], "+", 
         RowBox[{
          RowBox[{"l", "/", "2"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "+", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"Tan", "[", "\[Theta]", "]"}], "x"}]}], ")"}], 
       RowBox[{"\[DifferentialD]", "x"}]}]}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.687560664406056*^9, 3.6875607044353027`*^9}, {
   3.687560788023061*^9, 3.687560826163909*^9}, {3.687560874292574*^9, 
   3.687560898291823*^9}, {3.687561215135357*^9, 3.687561217417838*^9}, {
   3.687561303196602*^9, 3.687561304110153*^9}, {3.6875613972576847`*^9, 
   3.687561454760153*^9}, {3.687561503273973*^9, 3.687561519176944*^9}, {
   3.687561640600293*^9, 3.687561649905732*^9}, 3.687608620067401*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"aDeg", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"15", ",", "30", ",", "45", ",", "60"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"as", " ", "=", 
   RowBox[{"aDeg", " ", 
    FractionBox["\[Pi]", "180"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Torque", "[", 
        RowBox[{
         RowBox[{"\[Theta]", 
          FractionBox["\[Pi]", "180"]}], ",", "a", ",", "1"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "as"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", 
     RowBox[{"-", "90"}], ",", "90"}], "}"}], ",", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "60"}], ",", 
        RowBox[{"-", "45"}], ",", 
        RowBox[{"-", "30"}], ",", 
        RowBox[{"-", "15"}], ",", "15", ",", "30", ",", "45", ",", "60"}], 
       "}"}], ",", "Automatic"}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "70"}], ",", "70"}], "}"}], ",", "Automatic"}], "}"}]}], 
   ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"StringForm", "[", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]\>\"", 
          ",", "a"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"a", ",", "aDeg"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Left", ",", "Bottom"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Theta]\>\"", ",", "\"\<Torque\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{
  3.687559813922858*^9, {3.6875598458335657`*^9, 3.68755986165352*^9}, {
   3.6875599898784924`*^9, 3.687559991319036*^9}, {3.687560025601347*^9, 
   3.68756007779023*^9}, {3.687560109254374*^9, 3.6875601171027327`*^9}, {
   3.687560479467846*^9, 3.6875605654545794`*^9}, {3.687560838776292*^9, 
   3.687560847684104*^9}, {3.687560901407469*^9, 3.687560902254848*^9}, {
   3.687561542970385*^9, 3.687561553559671*^9}, {3.687561599783189*^9, 
   3.6875616201068373`*^9}, {3.687562738376577*^9, 3.687562745841164*^9}, {
   3.687605244470797*^9, 3.687605248857699*^9}, {3.687606313778514*^9, 
   3.687606327910445*^9}, {3.687607726330922*^9, 3.687607732088462*^9}, {
   3.687607850913663*^9, 3.687607851661406*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
yVnL5NoHHq1dkcz1//7/5/h/AOr1ONk=
       "]]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
Du8oS9Ehk0Sttn/Z4kUMGHhocGkYz+1TEmoCEgyomvzeKYPnp8X1f4AyAwYX
nRLL4rnTLbIvWZcBp9+qWEbz/FJIswaZMmB7U+MbR557br3K+2PHgPKbnw+K
8dznlxkNtjNgiviFTfd49x+QMnNL9mfAoyb5Us48DzdOGKEIBhyO0GM84a1n
NLJQ/E8qA3avfXOT9/yMxjVcPloeZUB3LYOD2bz1f+pa9CipkAFLVtaffMyr
1xfOv6V15QzInmP8mObVc4riT/yu5uXfYRUs53lmWMbPspUBK8pL0kV49f9t
G69S944By20LBRp4/Vr0fcP8/DcGdFv5JTuZ10+hS309FoJM6BgosVmT12/R
JVan7iszoV95lZ3xBhKtvP01Yl6XCXsdfJNytUkk6V+8xcKMCSmjSl0jvP0k
2yQsdn87Ex5NPv7URoNEClH3xn/5M2GtaFfoFjUSKa8LajGPZMKWaoqqvSqJ
1nE70muPMiEh8vnStAKJjFknZ2tamVBN2+2tPe88UL+zu+deMWEKsC67LE4i
xqWZ22YjvHyrTr/PK0gElniG1Qiawp601RXmvPPm2KT2vtrMFLrpusKOWQK5
RHU1zdqbwnYBlmfCDwK5riMumu4whQNaJ7ZJThFoF3fMuzrSFOpPSb+YnyDQ
XlbFi3vXTGGxoU1tWx+B9n/f8+/PGl5cflNM82sChVxafYzZZgrvuF2YvfqC
QJFLYhzvjZjCLoXrLpTHBEprsmioUjGDOrWKs8waAp1lPaq4e8wM2iQuCl5z
gkDekuDujXNm0Aue12g7TCDV/yrvX75mBlOyN/vtzSBQcWx+W26rGTwS9Sp8
z0ECXb26bzhmkTkcNbp0yTWAQNWrRGQZYebwu3rAFgMKgRL7E5QNk81hhIvm
YKYegSyvftbQOmwOz104/a6DN6/rbV8ZyZaZw1+7r9jL8uZ5a0zJppkBc7jk
aXZw6S8u6u6zTa5ysYCHt03fvo+4KP9KFbfC2wJeDfi8Bd3lIs8Y3UOlwRbw
U5CH59UbXDQgIXU6L8MCNh4vrrU+x0WjNm8rY7EFHPjb8XrIQS6aLksdYRha
Qta2TXk1VC6Siq7bfE8cwMX9L2T0T3GQowoqGVQGsM9aviQni4PSW9CfZfoA
Tru5TQwmcdBX+Qc3dzkC2GZy7JLhXg56hhqkf2UA+OCywdJzNA56yBkOUVkE
octV6SMPnqYjTscYzSceQvntmpeNvqYhVfX9vtOpEMbX9q6LfJuGamPGj2Rl
QpiTeKO6oCsNfVP98L4yD0IHwwlayZ005BMxkb/4LoRNRsafD8WlISvZz7+L
v0H4QLgB3p5NRb/3TDWPBltBxaTs7hPjKUhU2nf+Z4QVPCDjyZl6nYJkW56Z
rEiwgirO7itgawoy0b9RZJhpBbN9rzbmXk5BgbP74uMuWcEqUY6fg28K6jz+
n55ovxXMD1T4mHotGZU2tOXoO1tD69OjalTPg2jruvM+UUY28Fq9iekDEIvy
2e71Kkwb6PFt+dZLErFoaK+oWhu0gSNvlnI8BmNQxJWoQWUXG3hnNp60TItB
OQYOu1tCbGC+RrHD4INo9IL5zUuh3AZ6lzxTKGdEoR1OrJ0PNG1hzD5fpUmh
cOQVM+YspsiC3LKkyjrTACTz49A9qjoLShsaqF3u8EdPow3VvXVYkFH4fdbe
xx/ZRsdMX2ewYMmTmLMoww/pRC0pcNnGgqy1xOnQ5z5oJnzt+IlsFgx9duWG
dKU3qvza6Fp7kgX157qqvZ95oaDwwPvDZ1lw1YuvvmqTnqg/7MZR6lUWLJra
tVJB1wM1HbCgv3rIgr+Nf9n3FmxHx0N2cuQXsWHD/OPcb4EuyPHTr4/WImyY
+Ehvcr2AM1oaUrQ9SJwNlcTOa+3X24zi/h7VqVViw9/dQprTHHu0OzjqmZcp
Gwp3Lomx1rJG8hOyZoQVGy6/d0LmkhNEnUG1xdft2HBuxEhc5b05Ygctjv3j
zobXRe/o/o6hIoEPJYPrvdlwRintouh9I1S932GTiz8bgrtor7eALtLbf0z5
fAQbJhT45PwSlEcjY5SM1ng2HGEnuUd/WYKK9nV/+ZLKhv//9/ldYwke8pl8
S+1TabI+ynfH+3r9oFy+ycCAvBOFfM/uvRY0XM73rVGXFytu8R2yd8qSWsP3
YICZJNHKd4t/a9X6kf8T//aYpvvx/1w/9fktwym+dQvfVDAFNy746MuPpZuU
+d6+UfJ0qDvfI1oecXeb+V4yMcHceNluwT8FyleEZTsseHOloIfSNscF7/g6
Ndtp5bRgef+Trx9KuiyYoZL4LWCK78oiQ5ro2JYFe05W3DnweOuCP4u6Nuy4
5rrg/k/1M6witwXPn/sdNJW2bcErhVblvyf4Vg1Ub+nN4tvW0E6j6TjfWfhY
78kLfMsOamym1/NNUdukH7/IfcFswsszZAnfO8ZDs3yW8Z1QmTPisIrveuv+
QoW1fLv4honfh3z7PEy3uGnLd+SGU0GX7PjO/Vb98LAL3/3pQineu/meHJW5
vtWPb0FH7V52IN/rpJwYBgf4psXuDlCP5NuuNzxnTSzfuyC3XjSR7//9/3DB
/wMyEUqN
       "]]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]}}, InsetBox[
     TemplateBox[{
      InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(TraditionalForm\\`15\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 15], 
        Editable -> False],InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(TraditionalForm\\`30\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 30], 
        Editable -> False],InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(TraditionalForm\\`45\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 45], 
        Editable -> False],InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(TraditionalForm\\`60\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 60], 
        Editable -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.01, 0.01}], ImageScaled[{0, 0}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"\[Theta]\"", TraditionalForm], 
     FormBox["\"Torque\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
   PlotRange->{{-70, 70}, {-0.01388887730109515, 0.013888874931540153`}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{{{-60, 
       FormBox[
        RowBox[{"-", "60"}], TraditionalForm]}, {-45, 
       FormBox[
        RowBox[{"-", "45"}], TraditionalForm]}, {-30, 
       FormBox[
        RowBox[{"-", "30"}], TraditionalForm]}, {-15, 
       FormBox[
        RowBox[{"-", "15"}], TraditionalForm]}, {15, 
       FormBox["15", TraditionalForm]}, {30, 
       FormBox["30", TraditionalForm]}, {45, 
       FormBox["45", TraditionalForm]}, {60, 
       FormBox["60", TraditionalForm]}}, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
yVnL5NoHHq1dkcz1//7/5/h/AOr1ONk=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
Du8oS9Ehk0Sttn/Z4kUMGHhocGkYz+1TEmoCEgyomvzeKYPnp8X1f4AyAwYX
nRLL4rnTLbIvWZcBp9+qWEbz/FJIswaZMmB7U+MbR557br3K+2PHgPKbnw+K
8dznlxkNtjNgiviFTfd49x+QMnNL9mfAoyb5Us48DzdOGKEIBhyO0GM84a1n
NLJQ/E8qA3avfXOT9/yMxjVcPloeZUB3LYOD2bz1f+pa9CipkAFLVtaffMyr
1xfOv6V15QzInmP8mObVc4riT/yu5uXfYRUs53lmWMbPspUBK8pL0kV49f9t
G69S944By20LBRp4/Vr0fcP8/DcGdFv5JTuZ10+hS309FoJM6BgosVmT12/R
JVan7iszoV95lZ3xBhKtvP01Yl6XCXsdfJNytUkk6V+8xcKMCSmjSl0jvP0k
2yQsdn87Ex5NPv7URoNEClH3xn/5M2GtaFfoFjUSKa8LajGPZMKWaoqqvSqJ
1nE70muPMiEh8vnStAKJjFknZ2tamVBN2+2tPe88UL+zu+deMWEKsC67LE4i
xqWZ22YjvHyrTr/PK0gElniG1Qiawp601RXmvPPm2KT2vtrMFLrpusKOWQK5
RHU1zdqbwnYBlmfCDwK5riMumu4whQNaJ7ZJThFoF3fMuzrSFOpPSb+YnyDQ
XlbFi3vXTGGxoU1tWx+B9n/f8+/PGl5cflNM82sChVxafYzZZgrvuF2YvfqC
QJFLYhzvjZjCLoXrLpTHBEprsmioUjGDOrWKs8waAp1lPaq4e8wM2iQuCl5z
gkDekuDujXNm0Aue12g7TCDV/yrvX75mBlOyN/vtzSBQcWx+W26rGTwS9Sp8
z0ECXb26bzhmkTkcNbp0yTWAQNWrRGQZYebwu3rAFgMKgRL7E5QNk81hhIvm
YKYegSyvftbQOmwOz104/a6DN6/rbV8ZyZaZw1+7r9jL8uZ5a0zJppkBc7jk
aXZw6S8u6u6zTa5ysYCHt03fvo+4KP9KFbfC2wJeDfi8Bd3lIs8Y3UOlwRbw
U5CH59UbXDQgIXU6L8MCNh4vrrU+x0WjNm8rY7EFHPjb8XrIQS6aLksdYRha
Qta2TXk1VC6Siq7bfE8cwMX9L2T0T3GQowoqGVQGsM9aviQni4PSW9CfZfoA
Tru5TQwmcdBX+Qc3dzkC2GZy7JLhXg56hhqkf2UA+OCywdJzNA56yBkOUVkE
octV6SMPnqYjTscYzSceQvntmpeNvqYhVfX9vtOpEMbX9q6LfJuGamPGj2Rl
QpiTeKO6oCsNfVP98L4yD0IHwwlayZ005BMxkb/4LoRNRsafD8WlISvZz7+L
v0H4QLgB3p5NRb/3TDWPBltBxaTs7hPjKUhU2nf+Z4QVPCDjyZl6nYJkW56Z
rEiwgirO7itgawoy0b9RZJhpBbN9rzbmXk5BgbP74uMuWcEqUY6fg28K6jz+
n55ovxXMD1T4mHotGZU2tOXoO1tD69OjalTPg2jruvM+UUY28Fq9iekDEIvy
2e71Kkwb6PFt+dZLErFoaK+oWhu0gSNvlnI8BmNQxJWoQWUXG3hnNp60TItB
OQYOu1tCbGC+RrHD4INo9IL5zUuh3AZ6lzxTKGdEoR1OrJ0PNG1hzD5fpUmh
cOQVM+YspsiC3LKkyjrTACTz49A9qjoLShsaqF3u8EdPow3VvXVYkFH4fdbe
xx/ZRsdMX2ewYMmTmLMoww/pRC0pcNnGgqy1xOnQ5z5oJnzt+IlsFgx9duWG
dKU3qvza6Fp7kgX157qqvZ95oaDwwPvDZ1lw1YuvvmqTnqg/7MZR6lUWLJra
tVJB1wM1HbCgv3rIgr+Nf9n3FmxHx0N2cuQXsWHD/OPcb4EuyPHTr4/WImyY
+Ehvcr2AM1oaUrQ9SJwNlcTOa+3X24zi/h7VqVViw9/dQprTHHu0OzjqmZcp
Gwp3Lomx1rJG8hOyZoQVGy6/d0LmkhNEnUG1xdft2HBuxEhc5b05Ygctjv3j
zobXRe/o/o6hIoEPJYPrvdlwRintouh9I1S932GTiz8bgrtor7eALtLbf0z5
fAQbJhT45PwSlEcjY5SM1ng2HGEnuUd/WYKK9nV/+ZLKhv//9/ldYwke8pl8
S+1TabI+ynfH+3r9oFy+ycCAvBOFfM/uvRY0XM73rVGXFytu8R2yd8qSWsP3
YICZJNHKd4t/a9X6kf8T//aYpvvx/1w/9fktwym+dQvfVDAFNy746MuPpZuU
+d6+UfJ0qDvfI1oecXeb+V4yMcHceNluwT8FyleEZTsseHOloIfSNscF7/g6
Ndtp5bRgef+Trx9KuiyYoZL4LWCK78oiQ5ro2JYFe05W3DnweOuCP4u6Nuy4
5rrg/k/1M6witwXPn/sdNJW2bcErhVblvyf4Vg1Ub+nN4tvW0E6j6TjfWfhY
78kLfMsOamym1/NNUdukH7/IfcFswsszZAnfO8ZDs3yW8Z1QmTPisIrveuv+
QoW1fLv4honfh3z7PEy3uGnLd+SGU0GX7PjO/Vb98LAL3/3pQineu/meHJW5
vtWPb0FH7V52IN/rpJwYBgf4psXuDlCP5NuuNzxnTSzfuyC3XjSR7//9/3DB
/wMyEUqN
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
         "]]}}}, {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {"\[Theta]", "Torque"}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
      Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
      PlotRange -> {{-70, 70}, {-0.01388887730109515, 0.013888874931540153`}},
       PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {
         Scaled[0.05], 
         Scaled[0.05]}}, 
      Ticks -> {{-60, -45, -30, -15, 15, 30, 45, 60}, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]]}, {
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 15], 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 30], 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 45], 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 60]}, 
       LabelStyle -> {}, LegendLayout -> "Column"]], {Left, Bottom}, 
     Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{3.687560985963759*^9, 3.687561221247024*^9, 
  3.687561419496804*^9, 3.6875614635471497`*^9, 3.6875615270031853`*^9, 
  3.687562758051346*^9, 3.687605259958919*^9, 3.687606340424638*^9, 
  3.6876077475308104`*^9, 3.6876078671966133`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"aDeg", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"15", ",", "30", ",", "45", ",", "60"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"as", " ", "=", 
   RowBox[{"aDeg", " ", 
    FractionBox["\[Pi]", "180"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Force", "[", 
        RowBox[{
         RowBox[{"\[Theta]", " ", 
          FractionBox["\[Pi]", "180"]}], ",", "a", " ", ",", "1"}], "]"}]}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "as"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", 
     RowBox[{"-", "90"}], ",", "90"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "60"}], ",", 
        RowBox[{"-", "45"}], ",", 
        RowBox[{"-", "30"}], ",", 
        RowBox[{"-", "15"}], ",", "15", ",", "30", ",", "45", ",", "60"}], 
       "}"}], ",", "Automatic"}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "70"}], ",", "70"}], "}"}], ",", "Automatic"}], "}"}]}], 
   ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"StringForm", "[", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]\>\"", 
          ",", "a"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"a", ",", "aDeg"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Left", ",", "Bottom"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Theta] (\[Degree])\>\"", ",", "\"\<Force\>\""}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.687561659787734*^9, 3.687561663305916*^9}, {
   3.687561818817523*^9, 3.687561820772396*^9}, 3.687561863441382*^9, {
   3.6875621531371107`*^9, 3.687562295568671*^9}, {3.6875627138293867`*^9, 
   3.6875627231159782`*^9}, {3.6876052206664753`*^9, 3.687605228277721*^9}, {
   3.687606066194991*^9, 3.687606096090818*^9}, {3.6876062853064613`*^9, 
   3.687606303493332*^9}, {3.687607641992549*^9, 3.687607690022036*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxN2Hk0VnsXB3D0yEzmOZJ5joTQOco8JdNFqJAMXWSIUAoXDUSmBkVdhDyc
RyqV7BNlSITETUok8xxRkfd513rfc+7556zP+v2+a+29/9jrrLPNO8ThKBMD
A4MwIwPDf9/Hi/LmN+JdcIb/PY0Pn4ZHxZEWax38PhtNumVGYf3jCdLbdWvZ
6nxI97f+IxNtTtpiTtR5nvtf93fnP/5805nwGda3bnWlToTLWPfU9TY6Ep4y
TLkS/MWBcFcZE8o4f4BwikV1VTcn6WGp7O+3hOwJl7iUendZ2hFW7MrwGE62
Ifyt7iNl4qYVYS/OrB1/vrMg/L2RYjYtaE64b7qf9YimKWHXU6L2jkH7CMtE
1ZkanDUmrPNE18zQECHsZ9vMtl5rQNbTKKVcNqFLWJnB0tH+4E7C9VIG74fP
ahI+05bxEz9Bek/UqHiBN+lnHZleB01I150e//KWhXTEI5WP5yU1CC9x90mZ
bagTDvdL8GYaIh0m+H4spoh0aHjyYpAK6flXO3QUuUiHyHyMGplVww+rif7N
LqwNs6dSnxR2quF2c243NL2tILhLe92jWg0vn7XorMx2hhnFQUQ0Ww2fKDr6
PnHeE46fvZDwLlINp+5dO28l4wNBGkMsdvpquJO4UCAtMAgmky9ZsYur4Y/b
zD25zodA4CfdtKY1VXx46Jfv864T4J+Wzofgqnh9nWm9+2gk+E0ZSGqaq+LY
hMMertXT4H03V4vPWQW3UHTmjPmUDO5SNp69oUp4u8R8157FKyCwbhR93UkJ
D69fqvH3yoL2fo0sLz0l/KW0vJ7MqyxAc/lbRzcUcU3p1If7CrNBnuvDzpV0
RXzfoyvPjMxzYfFnAKcIVQE/n0q5vRJ/Dc73pjx1m5DD3XPONb27UQB7a071
SrbL4VdxLsHGHwWwlhm0MITJ4ZvH2WNuqRRCsO1+hcBoOVxFMZISlFoITi+E
smJY5PD3S2cu2SK3Qbq6OPCGnCwunrDyQv3OHahNaxT9eEQG/1jEcV3YsBiS
q29cRvfJ4G4MUc1Cx4rBqS+cuUhWBi8f0MrozCyGeWnZhcCxbXis61hD+Ggx
KNYktawe34YHjZZ6RF0qgav9plEC0dK4Vdc3yYC2u+C3ITkT5SaNb8S5R3Au
3oWdst+9P+yWxrl8jSsCREqh8IPNTZNfUviIfm/2Ad9S4GXitjm8WQrvyggU
710thUW7jLI8CUl8c1hWd6lAOaRfRXO8BiXwUO4Wq6+7ykF5eP6s3B0JPIAD
+93vWg7ekQdc7ytI4HKc44sLN8qh+wYfyxstcfxoz19M7VvvQfV4tu9mS1H8
kKIHVUO4AsITrklFRgripoje28BuKiT90/vU2lAQj/Nlu887SYVsdQFXmU2C
OPxZ8f0UYyXU9KdnvMkQwD0TVa6ka1TCklYSo3IFP86h3hHTnFoJEV+Cv3wa
5sX53wxah2tUQZJ+RfyDMl787BHGTrV9VZB9eUL8Uigvbi0s6F3mUgU1Br5O
+r+34KN/1Od/iauCpSy3l1miW3C+ep1xn6YqGE9Ntcss5MQvlHJ/b5bHgFVn
U8oedU7cqnMlp0IdA8Wh0zD1lAO/2lt/7cQuDPz1wzXN+thxhhKtl/mmGExM
ePL94mLDk3nio6K8MWDP/ceq9AYrrjk4w3goAAPlvY6JzkqsuFRiwZB8KAaB
1y2WqkxY8MJj/Nf/OI3BpJV2r28sM979be65YS49v0Ll5mNjxpMy5lvk8+n5
vxXNIZeCrxpniizcpud/SdaKVm/Cc/1WLspT6fl7rNc7xhnx1YD5fIEGet41
sTv2JCP+fLtTA0MzPU/5za5EYcRxs0q59jZ63uNbbKIUA97CnnJ78zsMekXr
noZWrIEzxc5u7SsGaiWXCy1e/4Jg2ufO3gkMkrR8/pKe/gmKv9GXV2Yw0LJm
39+p8gPmLQc3KpcwON/3UbvUehUsVgNMeFYx+OxDEzkbtAI7ig+u2P/CID3O
dVjj3jKUNXgWRzPS4CurajNL2xKUeC3f8qLQwDBn497g5Dfwt2eiyLPQYJJa
EnlZeRH+XO/ncuOkgfHuGPdjVgswftSf9oKbBlebbBEkcB6Gz8w+4+WlwcX6
Cd5PjjPQk13LYy9IA/2+jA9pWVOQ9nLV0ViYBmNzusVGbycglVt5g1+UBjms
g8EzfONQ1TOwpUWMBvu2JevddBgF947SVE8JGizoqzHZXhmBI5vU/HokaVDg
0NO21jUMu9t5ylSlaGAbFJtTwTsETH2/7f2kabDMYlpfe+cT3JSs8jy3jQb2
+lkHRGQ+QOvcQMdpGRpUBA6NRN3uA7lZ66KD22nAmq8R3SfdAyhH80cxWRr4
tp/m0C3shPKL0rFP6T67nmekhryCzZu14ozkaKB3eKfvtFEjbPIZ+FxI9+e/
bgv+caoWgj+ylH2luzC35mX5TBHsYirq4ZCnASXmWLy35yUkFLvrw093l1IN
k3o6DXEV5XVZo9/39o19UJUBiD3+9V4T3af2b6u52tqEjMRoHQ2ju2E6Ke39
q3akIZQjYYNeD7NphDaXXzdSI36JKZjuMn75QuroO+SOed/oM3o/tsN9nHbH
3iNn+IQ15uj9LmLnT82ODSBm03EfGOluA8lw852fkclc4+ll+rwk754sy1sa
QvbLFx9po88zJP3N4FjNF0SLYc4gYSsNnkcqCulFfkXEBv6MFaPPn9/znE2q
zhhi1xglnS1Og0cq2o8VH07S6yvLVxGhATv/pbnok9OI79DtCEshGnj8HJFr
3TWLjNCa7lsI0Ofpa91a82EeaTBNCZjioYHSP1EjA08XkDNG6kPpXDToti7a
oOQvItnrwg38HDSQ1V7XcfZYQupqxRqeM9OgvUTpwGnDZUQ1+NTwJBMNToq5
HC+W+I54HC4JXt7AoIWx6s7ywAoSNmzWXvkDg+Odh3lyPX8hFHnkcfUUBqEc
Bx0b7dcQ/1Xp6KwxDCLNnPPm960jRvEVxvZfMDhTZyllrbyBODnk/fDsx8DC
6Zrw2VhGtM+0S/pVEwavTuQ+FlpmRDHhN64Xn2NgcznrIDWYCe1fVi5RrMPg
wKu0gv4jm1B5eeGUFQwDdzRBQceCGQ0LqkofvYrBgGd8a9tzZrRoxuRW6hUM
vGLjgrwNNqPbXod3br6Egc/Dk1WX1VnQablff+edodevGqQ7KcCG1ghGGHHQ
91m8iJN5wRAnWuKyj81QBgOmXQcmdA5yoQP3THfeFqXvB0e7i697uNCm3+N/
D2/BIDXd4s2PZm406evEg6X1KrBMuKWi/McWdD2PffBndRU4rF65n2TEh8ac
VpYs46kC/pRMin0MH0qVWzz3+0cl9AhmOIs/4kPz+hRaOEcqwUU7bYWmyY9+
4CzhdXpUCQeDUwwGtwugzIOvrNLdK8F3JLZRn10IPa+qIf8oiwo0vxmf5b1C
aFlVLeIVS4Xf4/QtEyuENrc1NDd7U+HqjLGp4owQymKTaDCsSYX27yzNQp3C
6DVrFS+dVxWwiy371bccUZT5l6ac+8I9YFOv6KJuk0RbAs5FtfOWgwsmGRbg
LokyFnTseLNQBkVal/nksiTRTr4sveyuMtijG+aYT9mKjhgqW/tnlEEYqvfu
wthW1K3oz6P6HGUQrOQ9fd9FGmUMeV+cvHwX+gxm5zIkZFDuOk1x9pvFMPkA
PbrfQAYtasjW0w4rhjWNrH4udxn0lP0PRyHzYpCW1Xt5IU8GHdWOf8g+XwT+
nAnXk/i2oxLUTRepe4pgdUDQNJpVFo0HxtrRjjsgcsbo+qElOTTl+mgfe1QB
KK9e5tnKL48etxN5wLOlAAzDhpMGdsijgZ91v18svQWH/VJC3ELk0VzXAvGp
vptQatdl4jgpj97NMELMNfNBT+ronNlnBVRV9k5bZvNVcMUvmai/VkJzuisp
+zMzYSzch8NzUglN3pppVCmeCScVdndfZFVGm0xWytOKMyA7fezQhIky6hwj
a3sj5DJ0eeyNLXqmjMobq8Xfq7gIVj9WaGJVKijbSkiD+UoivK/oiLZsV0GV
7a6Jqa4lgP/hYiR6SgXdIdQrKMiQACnNDu3vFFTRjLE7XN8pZ+FFDnU8o1AV
5Sj/ErHCHA2OlklVUK+KulkebxBlOAnDa+4nZwdU0TfIrReWq+HA4MtKsRFV
Q1VV+A6UvwwBIy0fKZYraujz+92exQle8Pqr/qgOpoZOzY88k1VzAY9rW6i+
HWporU5/QH+BNUzZjIVnTauhDx5GO1EqdCCGoX53A7s6+v/vbbaabMYFRdJX
jwW1SJmTftgh4nI6kbRpwpxExW3SPTpNX/qB9Lf88BN6a6Q1gzoufYvQIAxb
ix1lskjbdceKHaCRPq6vVFo5Q7pnU8PQTm1NwrzdEutz90jXjftGbHpC2m+j
Ykqo5V/nqkb9RiP/Ok/xfHRRYgfhJ4a3Tiikkfa9KzXqFaxF9h8n86Zdcyfh
VpNDJjijHuF80zbsUaYBYYGT9baPeRDCv48sNY0dNybsIHfbO3LHPsKeURP7
uSRMCbccba1VGDUjzDw9rW9+14LwD4YKzhPpVoRtq5kOSjrbEHZdXPr51tiO
sNjRnPfNfPaE9aTivvktka4u1NzFMXGAsMc89jC03YHwHIdjoyvVkfCn2YZV
00InwusFv4OWEpwJc1N4r48nk5b2394ycIG0iaaF7MsrpC/gmQM5d0iLDMna
6jaQ3iljrR7D6ELYLNnTI5iZtOtkyAVvNtKx1dmjVrykG/Z+uiW+jbS9zwme
Zyhp7+ZEI5oJ6QiV3KBiC9J53540p9mT/pRIOet1mPT8mFClgy9pJhulATN/
0nICdnoaoaR3RR/22x5B2mIgLFs4mrQ7+lcDRxzp//1fIfwfq/EoJg==
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
3ahVkNsC7ymCbLpDnZT+bvScN8trNWcRDB3hlWlGu9Gr9iV1m+eFcPJ+4KCk
1W6kyJIvWb+zEFLVTd0a/XYjvwP7z1G1HsAb/TmXDYW7kfuaNepd4gXgaEnb
XytHRensWfeqRvIg13+pwleNimr7d0xvvpkH44nFoiLbqKhH96jpBZc8COkU
6/GhUdH1gx2Z+l23Icvxs4OQBxWxyZ/Lc264Bb3uGXZHblJR6tMTx+/k54JL
8MTe1RtpKNyO/VcKkQkiC7FPdTbT0C8jiSFDq0x4FaSx2VWJhvQWvzwefJUB
1KDg7//q0VDf4tKd9R3poBTIcd3KnoYcHc/KoNep8OPEpsmUeBraO5PrfaM7
EUq/PretTqOh0LkG4YV9ieB7wrtm5BoNHZLc45z2MAEGjhcn6jygoW3kmdRa
EgcvAgx1uxtoyED2Ec/wo0uQ7Lc/WpyVjixjRiOnyqPA/POvaSMuOtIx9FLU
fRIJf/nl7vPlp6Np3jumP/0iIPTvMaVqCTpC9lj1t38YuB0LbHfZTkcR6hKV
j4+fBPEpUYMLu+honsNuu8iJ49DpW533rwkdNbRmPxsZ8QO676qQPw505B6k
okoZ9QKWT3cH5V3p6ObRAavhUXeo9DE1s/Kko1yOoBAOwgVUfZIkb56kI5eO
27nvbpnB6IT2xabTdCQvWb4z0FQXco/2zM5G0dH/P78fmAhzEr/EtNBRqRdG
iUwzxuvUfDOYjvH2ykzJYXrpSJHvSCHTZWNWb/jKmPY7Mr9Tp4rpQS8DgQtN
TDd6NlXIj/7P+FzbNpXp/8kf1VGmMc+0Sk7fQ3024xUndk3nm0kyvc9YIMvf
gelRBafQJy+Z5pia0je+Z7LiRZZCvuPxpiu2KGVzkrA3X7Hj1/mlzl2WKxb3
THvbIGC1Yj2p8DmveaZLczW28U5Yr9h55mF5QJvNir/w2tY7FtmueOBz3Q9a
rt2Kl2/89p0/a7/iNezrsscvMC3tvbmx/zLTVA2TLS+Smb6Mk/rTbjEtOrjF
QreOaW0ZM7XTrA4rpl9wcfbjYNpx0v+yOzfTYaWpo6brmK4zGsjZsIlpq8PH
+WsQ0+4N5wxLqEyfUk73vWPCdMZcZUOcFdMD59gjXd2YnhkT+dfGg2k2c8V+
ujfTskKWeuoBTG8LcfPafIppk/4TqetDmD6AztfxhjP93/eLK/4PW+1N4w==

       "]]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
aR2DbWd0ul4wmu3/fj9c9n8ALd978w==
       "]]}}, InsetBox[
     TemplateBox[{
      InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(TraditionalForm\\`15\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 15], 
        Editable -> False],InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(TraditionalForm\\`30\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 30], 
        Editable -> False],InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(TraditionalForm\\`45\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 45], 
        Editable -> False],InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(TraditionalForm\\`60\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 60], 
        Editable -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.01, 0.01}], ImageScaled[{0, 0}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"\[Theta] (\[Degree])\"", TraditionalForm], 
     FormBox["\"Force\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
   PlotRange->{{-70, 70}, {-0.4330126681562524, 0.}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{{{-60, 
       FormBox[
        RowBox[{"-", "60"}], TraditionalForm]}, {-45, 
       FormBox[
        RowBox[{"-", "45"}], TraditionalForm]}, {-30, 
       FormBox[
        RowBox[{"-", "30"}], TraditionalForm]}, {-15, 
       FormBox[
        RowBox[{"-", "15"}], TraditionalForm]}, {15, 
       FormBox["15", TraditionalForm]}, {30, 
       FormBox["30", TraditionalForm]}, {45, 
       FormBox["45", TraditionalForm]}, {60, 
       FormBox["60", TraditionalForm]}}, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
3ahVkNsC7ymCbLpDnZT+bvScN8trNWcRDB3hlWlGu9Gr9iV1m+eFcPJ+4KCk
1W6kyJIvWb+zEFLVTd0a/XYjvwP7z1G1HsAb/TmXDYW7kfuaNepd4gXgaEnb
XytHRensWfeqRvIg13+pwleNimr7d0xvvpkH44nFoiLbqKhH96jpBZc8COkU
6/GhUdH1gx2Z+l23Icvxs4OQBxWxyZ/Lc264Bb3uGXZHblJR6tMTx+/k54JL
8MTe1RtpKNyO/VcKkQkiC7FPdTbT0C8jiSFDq0x4FaSx2VWJhvQWvzwefJUB
1KDg7//q0VDf4tKd9R3poBTIcd3KnoYcHc/KoNep8OPEpsmUeBraO5PrfaM7
EUq/PretTqOh0LkG4YV9ieB7wrtm5BoNHZLc45z2MAEGjhcn6jygoW3kmdRa
EgcvAgx1uxtoyED2Ec/wo0uQ7Lc/WpyVjixjRiOnyqPA/POvaSMuOtIx9FLU
fRIJf/nl7vPlp6Np3jumP/0iIPTvMaVqCTpC9lj1t38YuB0LbHfZTkcR6hKV
j4+fBPEpUYMLu+honsNuu8iJ49DpW533rwkdNbRmPxsZ8QO676qQPw505B6k
okoZ9QKWT3cH5V3p6ObRAavhUXeo9DE1s/Kko1yOoBAOwgVUfZIkb56kI5eO
27nvbpnB6IT2xabTdCQvWb4z0FQXco/2zM5G0dH/P78fmAhzEr/EtNBRqRdG
iUwzxuvUfDOYjvH2ykzJYXrpSJHvSCHTZWNWb/jKmPY7Mr9Tp4rpQS8DgQtN
TDd6NlXIj/7P+FzbNpXp/8kf1VGmMc+0Sk7fQ3024xUndk3nm0kyvc9YIMvf
gelRBafQJy+Z5pia0je+Z7LiRZZCvuPxpiu2KGVzkrA3X7Hj1/mlzl2WKxb3
THvbIGC1Yj2p8DmveaZLczW28U5Yr9h55mF5QJvNir/w2tY7FtmueOBz3Q9a
rt2Kl2/89p0/a7/iNezrsscvMC3tvbmx/zLTVA2TLS+Smb6Mk/rTbjEtOrjF
QreOaW0ZM7XTrA4rpl9wcfbjYNpx0v+yOzfTYaWpo6brmK4zGsjZsIlpq8PH
+WsQ0+4N5wxLqEyfUk73vWPCdMZcZUOcFdMD59gjXd2YnhkT+dfGg2k2c8V+
ujfTskKWeuoBTG8LcfPafIppk/4TqetDmD6AztfxhjP93/eLK/4PW+1N4w==

         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
aR2DbWd0ul4wmu3/fj9c9n8ALd978w==
         "]]}}}, {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {"\[Theta] (\[Degree])", "Force"}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
      Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
      PlotRange -> {{-70, 70}, {-0.4330126681562524, 0.}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{0, 0}, {
         Scaled[0.05], 
         Scaled[0.05]}}, 
      Ticks -> {{-60, -45, -30, -15, 15, 30, 45, 60}, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]]}, {
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 15], 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 30], 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 45], 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 60]}, 
       LabelStyle -> {}, LegendLayout -> "Column"]], {Left, Bottom}, 
     Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.6875617889436398`*^9, 3.687562308067196*^9, 3.687562733128643*^9, 
   3.687605236712493*^9, 3.687606104201973*^9, 3.68760630516457*^9, {
   3.687607653339971*^9, 3.687607701464322*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "<", 
     RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], ",", "0", ",", " ", 
    RowBox[{
     RowBox[{
      SubsuperscriptBox["\[Integral]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "l"}], "/", "2"}], 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
       FractionBox[
        RowBox[{"l", " ", 
         RowBox[{"Cot", "[", "\[Alpha]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "2"]], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Tan", "[", "\[Alpha]", "]"}], "x"}], "+", 
         RowBox[{
          RowBox[{"l", "/", "2"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "-", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ")"}]}], "  ", "-", 
         RowBox[{
          RowBox[{"Tan", "[", "\[Theta]", "]"}], "x"}]}], ")"}], 
       RowBox[{"\[DifferentialD]", "x"}]}]}], "+", "\[IndentingNewLine]", " ", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", 
       FractionBox[
        RowBox[{"l", " ", 
         RowBox[{"Cot", "[", "\[Alpha]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "2"], 
       RowBox[{
        RowBox[{"l", "/", "2"}], 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}]], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "x"}], "+", 
         RowBox[{
          RowBox[{"l", "/", "2"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "+", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"Tan", "[", "\[Theta]", "]"}], "x"}]}], ")"}], 
       RowBox[{"\[DifferentialD]", "x"}]}]}]}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.687562310834149*^9, 3.6875623140180798`*^9}}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Cos", "[", "\[Theta]", "]"}], "<", 
    RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], ",", "0", ",", 
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"-", "l"}], ")"}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", "l", " ", 
       RowBox[{"Cot", "[", "\[Alpha]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Tan", "[", "\[Alpha]", "]"}], " ", "x"}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", "l", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "-", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"Tan", "[", "\[Theta]", "]"}], " ", "x"}]}], ")"}], 
      RowBox[{"\[DifferentialD]", "x"}]}]}], "+", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{
       FractionBox["1", "2"], " ", "l", " ", 
       RowBox[{"Cot", "[", "\[Alpha]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", "l", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}]], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], " ", "x"}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", "l", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "+", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"Tan", "[", "\[Theta]", "]"}], " ", "x"}]}], ")"}], 
      RowBox[{"\[DifferentialD]", "x"}]}]}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.687562314694036*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"DrawGranular", "[", 
     RowBox[{"\[Theta]_", ",", "\[Alpha]_", ",", "s_", ",", "colr_"}], "]"}], 
    ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "p", ",", "h", ",", "d", ",", "lside"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"l", " ", "=", " ", "20"}], ";", "\[IndentingNewLine]", 
       RowBox[{"a", "=", " ", 
        RowBox[{
         RowBox[{"l", "/", "2"}], "*", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"p", " ", "=", "  ", 
        RowBox[{
         RowBox[{"l", "/", "10"}], "*", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
           RowBox[{"-", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"h", " ", "=", " ", 
        RowBox[{"l", "/", "2"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"d", " ", "=", " ", 
        RowBox[{"l", "/", "2"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"Pink", ",", 
         RowBox[{"Polygon", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"s", "+", "a"}], ",", 
            RowBox[{"s", "+", "a", "+", "p"}], ",", 
            RowBox[{"s", "+", 
             RowBox[{"-", "a"}], "+", "p"}], ",", 
            RowBox[{"s", "-", "a"}]}], "}"}], "]"}], ",", 
         RowBox[{"EdgeForm", "[", 
          RowBox[{"{", "colr", "}"}], "]"}], ",", "colr", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"granular", " ", "media"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"\[Alpha]", ">", 
            RowBox[{"Abs", "[", "\[Theta]", "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"lside", "=", 
              FractionBox[
               RowBox[{"l", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Theta]", "+", "\[Alpha]"}], "]"}]}], 
               RowBox[{"Sin", "[", 
                RowBox[{"\[Pi]", "-", 
                 RowBox[{"2", "\[Alpha]"}]}], "]"}]]}], ";", 
             RowBox[{"Polygon", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"s", "+", "a"}], ",", 
                RowBox[{"s", "+", 
                 RowBox[{"lside", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Cos", "[", "\[Alpha]", "]"}], ",", 
                    RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "}"}]}], "-", 
                 "a"}], ",", 
                RowBox[{"s", "-", "a"}]}], "}"}], "]"}]}], "}"}], ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"s", "+", "a"}], ",", 
              RowBox[{"s", "-", "a"}]}], "}"}], "]"}]}], "]"}]}], 
        "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"aDeg", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"15", ",", "30", ",", "45", ",", "60"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"as", " ", "=", 
     RowBox[{"aDeg", " ", 
      FractionBox["\[Pi]", "180"]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"l", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", 
       RowBox[{"-", "90"}], ",", "90"}], "}"}], ",", 
     RowBox[{"Ticks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "60"}], ",", 
          RowBox[{"-", "45"}], ",", 
          RowBox[{"-", "30"}], ",", 
          RowBox[{"-", "15"}], ",", "15", ",", "30", ",", "45", ",", "60"}], 
         "}"}], ",", "aDeg"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "70"}], ",", "70"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "10"}], ",", "80"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta] (\[Degree])\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\) (\[Degree])\>\""}], 
       "}"}]}], ",", 
     RowBox[{"Prolog", "\[Rule]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"DrawGranular", "[", 
          RowBox[{
           RowBox[{"theta", " ", 
            FractionBox["\[Pi]", "180"]}], ",", 
           RowBox[{
            RowBox[{
            "aDeg", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
            " ", 
            FractionBox["\[Pi]", "180"]}], ",", 
           RowBox[{"{", 
            RowBox[{"theta", ",", 
             RowBox[{
             "aDeg", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}],
             "}"}], ",", 
           RowBox[{
            RowBox[{"ColorData", "[", 
             RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
            "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], "]"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "aDeg", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"theta", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "45"}], ",", 
             RowBox[{"-", "25"}], ",", "0", ",", "25", ",", "45"}], "}"}]}], 
          "}"}]}], "]"}], "\[IndentingNewLine]", "}"}]}]}], "]"}], 
   " "}]}]], "Input",
 CellChangeTimes->{
  3.687559813922858*^9, {3.6875598458335657`*^9, 3.68755986165352*^9}, {
   3.6875599898784924`*^9, 3.687559991319036*^9}, {3.687560025601347*^9, 
   3.68756007779023*^9}, {3.687560109254374*^9, 3.6875601171027327`*^9}, {
   3.687560479467846*^9, 3.6875605654545794`*^9}, {3.687560838776292*^9, 
   3.687560847684104*^9}, {3.687560901407469*^9, 3.687560902254848*^9}, {
   3.687561542970385*^9, 3.687561553559671*^9}, {3.687561599783189*^9, 
   3.6875616201068373`*^9}, {3.687562738376577*^9, 3.687562745841164*^9}, {
   3.687605244470797*^9, 3.687605248857699*^9}, {3.687605834334362*^9, 
   3.6876060532173433`*^9}, {3.687606106578257*^9, 3.687606157246667*^9}, {
   3.6876062112888193`*^9, 3.68760625966453*^9}, {3.687606347006308*^9, 
   3.687606355625946*^9}, {3.687606675130939*^9, 3.687606759438073*^9}, {
   3.6876068641308413`*^9, 3.6876068667850447`*^9}, {3.687606896839459*^9, 
   3.687606962582535*^9}, {3.687607013778679*^9, 3.687607030577381*^9}, {
   3.6876071666731567`*^9, 3.687607186291253*^9}, {3.687607285983603*^9, 
   3.6876072881055098`*^9}, {3.687607335330193*^9, 3.687607348370677*^9}, {
   3.687608309107409*^9, 3.687608314048029*^9}, {3.687608527919517*^9, 
   3.6876085391967773`*^9}}],

Cell[BoxData[
 GraphicsBox[{},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\[Theta] (\[Degree])\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \\(rep\\)]\\) (\[Degree])\"", 
     TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-70, 70}, {-10, 80}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Prolog->{{{{
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[
        NCache[{{-45 + 5 2^Rational[1, 2], 15 - 5 2^Rational[1, 2]}, {-45 + 
           4 2^Rational[1, 2], 15 - 6 2^Rational[1, 2]}, {-45 - 6 
           2^Rational[1, 2], 15 + 4 2^Rational[1, 2]}, {-45 - 5 
           2^Rational[1, 2], 15 + 
           5 2^Rational[1, 2]}}, {{-37.928932188134524`, 
         7.9289321881345245`}, {-39.34314575050762, 
         6.514718625761429}, {-53.48528137423857, 
         20.65685424949238}, {-52.071067811865476`, 22.071067811865476`}}]], 
       EdgeForm[{
         RGBColor[0.368417, 0.506779, 0.709798]}], 
       RGBColor[0.368417, 0.506779, 0.709798], 
       LineBox[
        NCache[{{-45 + 5 2^Rational[1, 2], 15 - 5 2^Rational[1, 2]}, {-45 - 5 
           2^Rational[1, 2], 15 + 
           5 2^Rational[1, 2]}}, {{-37.928932188134524`, 
         7.9289321881345245`}, {-52.071067811865476`, 
         22.071067811865476`}}]]}, {
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[
        NCache[{{-25 + 10 Cos[Rational[5, 36] Pi], 15 - 10 
           Sin[Rational[5, 36] Pi]}, {-25 + 10 Cos[Rational[5, 36] Pi] - 2 
           Sin[Rational[5, 36] Pi], 15 - 2 Cos[Rational[5, 36] Pi] - 10 
           Sin[Rational[5, 36] Pi]}, {-25 - 10 Cos[Rational[5, 36] Pi] - 2 
           Sin[Rational[5, 36] Pi], 15 - 2 Cos[Rational[5, 36] Pi] + 
           10 Sin[Rational[5, 36] Pi]}, {-25 - 10 Cos[Rational[5, 36] Pi], 15 + 
           10 Sin[Rational[5, 36] Pi]}}, {{-15.936922129633501`, 
         10.773817382593005`}, {-16.7821586531149, 
         8.961201808519705}, {-34.908314393847895`, 
         17.413567043333693`}, {-34.0630778703665, 19.226182617406995`}}]], 
       EdgeForm[{
         RGBColor[0.368417, 0.506779, 0.709798]}], 
       RGBColor[0.368417, 0.506779, 0.709798], 
       LineBox[
        NCache[{{-25 + 10 Cos[Rational[5, 36] Pi], 15 - 10 
           Sin[Rational[5, 36] Pi]}, {-25 - 10 Cos[Rational[5, 36] Pi], 15 + 
           10 Sin[Rational[5, 36] Pi]}}, {{-15.936922129633501`, 
         10.773817382593005`}, {-34.0630778703665, 19.226182617406995`}}]]}, {
      
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[{{10, 15}, {10, 13}, {-10, 13}, {-10, 15}}], 
       EdgeForm[{
         RGBColor[0.368417, 0.506779, 0.709798]}], 
       RGBColor[0.368417, 0.506779, 0.709798], {
        PolygonBox[
         NCache[{{10, 
           15}, {-10 + 5 (-1 + 3^Rational[1, 2]) (1 + 3^Rational[1, 2]), 15 + 
            5 (-1 + 3^Rational[1, 2])^2}, {-10, 15}}, {{10, 
           15}, {-1.7763568394002505`*^-15, 17.679491924311225`}, {-10, 
           15}}]]}}, {
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[
        NCache[{{
          25 + 10 Cos[Rational[5, 36] Pi], 15 + 10 Sin[Rational[5, 36] Pi]}, {
          25 + 10 Cos[Rational[5, 36] Pi] + 2 Sin[Rational[5, 36] Pi], 15 - 2 
           Cos[Rational[5, 36] Pi] + 10 Sin[Rational[5, 36] Pi]}, {
          25 - 10 Cos[Rational[5, 36] Pi] + 2 Sin[Rational[5, 36] Pi], 15 - 2 
           Cos[Rational[5, 36] Pi] - 10 Sin[Rational[5, 36] Pi]}, {
          25 - 10 Cos[Rational[5, 36] Pi], 15 - 10 
           Sin[Rational[5, 36] Pi]}}, {{34.0630778703665, 
         19.226182617406995`}, {34.908314393847895`, 17.413567043333693`}, {
         16.7821586531149, 8.961201808519705}, {15.936922129633501`, 
         10.773817382593005`}}]], 
       EdgeForm[{
         RGBColor[0.368417, 0.506779, 0.709798]}], 
       RGBColor[0.368417, 0.506779, 0.709798], 
       LineBox[
        NCache[{{
          25 + 10 Cos[Rational[5, 36] Pi], 15 + 10 Sin[Rational[5, 36] Pi]}, {
          25 - 10 Cos[Rational[5, 36] Pi], 15 - 10 
           Sin[Rational[5, 36] Pi]}}, {{34.0630778703665, 
         19.226182617406995`}, {15.936922129633501`, 
         10.773817382593005`}}]]}, {
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[
        NCache[{{45 + 5 2^Rational[1, 2], 15 + 5 2^Rational[1, 2]}, {
          45 + 6 2^Rational[1, 2], 15 + 4 2^Rational[1, 2]}, {
          45 - 4 2^Rational[1, 2], 15 - 6 2^Rational[1, 2]}, {
          45 - 5 2^Rational[1, 2], 15 - 5 2^Rational[1, 2]}}, {{
         52.071067811865476`, 22.071067811865476`}, {53.48528137423857, 
         20.65685424949238}, {39.34314575050762, 6.514718625761429}, {
         37.928932188134524`, 7.9289321881345245`}}]], 
       EdgeForm[{
         RGBColor[0.368417, 0.506779, 0.709798]}], 
       RGBColor[0.368417, 0.506779, 0.709798], 
       LineBox[
        NCache[{{45 + 5 2^Rational[1, 2], 15 + 5 2^Rational[1, 2]}, {
          45 - 5 2^Rational[1, 2], 15 - 5 2^Rational[1, 2]}}, {{
         52.071067811865476`, 22.071067811865476`}, {37.928932188134524`, 
         7.9289321881345245`}}]]}}, {{
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[
        NCache[{{-45 + 5 2^Rational[1, 2], 30 - 5 2^Rational[1, 2]}, {-45 + 
           4 2^Rational[1, 2], 30 - 6 2^Rational[1, 2]}, {-45 - 6 
           2^Rational[1, 2], 30 + 4 2^Rational[1, 2]}, {-45 - 5 
           2^Rational[1, 2], 30 + 
           5 2^Rational[1, 2]}}, {{-37.928932188134524`, 
         22.928932188134524`}, {-39.34314575050762, 
         21.51471862576143}, {-53.48528137423857, 
         35.65685424949238}, {-52.071067811865476`, 37.071067811865476`}}]], 
       EdgeForm[{
         RGBColor[0.880722, 0.611041, 0.142051]}], 
       RGBColor[0.880722, 0.611041, 0.142051], 
       LineBox[
        NCache[{{-45 + 5 2^Rational[1, 2], 30 - 5 2^Rational[1, 2]}, {-45 - 5 
           2^Rational[1, 2], 30 + 
           5 2^Rational[1, 2]}}, {{-37.928932188134524`, 
         22.928932188134524`}, {-52.071067811865476`, 
         37.071067811865476`}}]]}, {
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[
        NCache[{{-25 + 10 Cos[Rational[5, 36] Pi], 30 - 10 
           Sin[Rational[5, 36] Pi]}, {-25 + 10 Cos[Rational[5, 36] Pi] - 2 
           Sin[Rational[5, 36] Pi], 30 - 2 Cos[Rational[5, 36] Pi] - 10 
           Sin[Rational[5, 36] Pi]}, {-25 - 10 Cos[Rational[5, 36] Pi] - 2 
           Sin[Rational[5, 36] Pi], 30 - 2 Cos[Rational[5, 36] Pi] + 
           10 Sin[Rational[5, 36] Pi]}, {-25 - 10 Cos[Rational[5, 36] Pi], 30 + 
           10 Sin[Rational[5, 36] Pi]}}, {{-15.936922129633501`, 
         25.773817382593005`}, {-16.7821586531149, 
         23.961201808519707`}, {-34.908314393847895`, 
         32.4135670433337}, {-34.0630778703665, 34.22618261740699}}]], 
       EdgeForm[{
         RGBColor[0.880722, 0.611041, 0.142051]}], 
       RGBColor[0.880722, 0.611041, 0.142051], {
        PolygonBox[
         NCache[{{-25 + 10 Cos[Rational[5, 36] Pi], 30 - 10 
            Sin[Rational[5, 36] Pi]}, {-25 - 10 Cos[Rational[5, 36] Pi] + 
            20 Sin[Rational[1, 36] Pi], 30 + 
            20 3^Rational[-1, 2] Sin[Rational[1, 36] Pi] + 
            10 Sin[Rational[5, 36] Pi]}, {-25 - 10 Cos[Rational[5, 36] Pi], 
            30 + 10 Sin[Rational[5, 36] Pi]}}, {{-15.936922129633501`, 
          25.773817382593005`}, {-32.319963015413336`, 
          35.23257044814264}, {-34.0630778703665, 34.22618261740699}}]]}}, {
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[{{10, 30}, {10, 28}, {-10, 28}, {-10, 30}}], 
       EdgeForm[{
         RGBColor[0.880722, 0.611041, 0.142051]}], 
       RGBColor[0.880722, 0.611041, 0.142051], {
        PolygonBox[
         NCache[{{10, 30}, {0, 30 + 10 3^Rational[-1, 2]}, {-10, 30}}, {{10, 
           30}, {0, 35.773502691896255`}, {-10, 30}}]]}}, {
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[
        NCache[{{
          25 + 10 Cos[Rational[5, 36] Pi], 30 + 10 Sin[Rational[5, 36] Pi]}, {
          25 + 10 Cos[Rational[5, 36] Pi] + 2 Sin[Rational[5, 36] Pi], 30 - 2 
           Cos[Rational[5, 36] Pi] + 10 Sin[Rational[5, 36] Pi]}, {
          25 - 10 Cos[Rational[5, 36] Pi] + 2 Sin[Rational[5, 36] Pi], 30 - 2 
           Cos[Rational[5, 36] Pi] - 10 Sin[Rational[5, 36] Pi]}, {
          25 - 10 Cos[Rational[5, 36] Pi], 30 - 10 
           Sin[Rational[5, 36] Pi]}}, {{34.0630778703665, 
         34.22618261740699}, {34.908314393847895`, 32.4135670433337}, {
         16.7821586531149, 23.961201808519707`}, {15.936922129633501`, 
         25.773817382593005`}}]], 
       EdgeForm[{
         RGBColor[0.880722, 0.611041, 0.142051]}], 
       RGBColor[0.880722, 0.611041, 0.142051], {
        PolygonBox[
         NCache[{{
           25 + 10 Cos[Rational[5, 36] Pi], 30 + 
            10 Sin[Rational[5, 36] Pi]}, {
           25 - 10 Cos[Rational[5, 36] Pi] + 20 Cos[Rational[7, 36] Pi], 30 + 
            20 3^Rational[-1, 2] Cos[Rational[7, 36] Pi] - 10 
            Sin[Rational[5, 36] Pi]}, {
           25 - 10 Cos[Rational[5, 36] Pi], 30 - 10 
            Sin[Rational[5, 36] Pi]}}, {{34.0630778703665, 
          34.22618261740699}, {32.319963015413336`, 35.23257044814264}, {
          15.936922129633501`, 25.773817382593005`}}]]}}, {
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[
        NCache[{{45 + 5 2^Rational[1, 2], 30 + 5 2^Rational[1, 2]}, {
          45 + 6 2^Rational[1, 2], 30 + 4 2^Rational[1, 2]}, {
          45 - 4 2^Rational[1, 2], 30 - 6 2^Rational[1, 2]}, {
          45 - 5 2^Rational[1, 2], 30 - 5 2^Rational[1, 2]}}, {{
         52.071067811865476`, 37.071067811865476`}, {53.48528137423857, 
         35.65685424949238}, {39.34314575050762, 21.51471862576143}, {
         37.928932188134524`, 22.928932188134524`}}]], 
       EdgeForm[{
         RGBColor[0.880722, 0.611041, 0.142051]}], 
       RGBColor[0.880722, 0.611041, 0.142051], 
       LineBox[
        NCache[{{45 + 5 2^Rational[1, 2], 30 + 5 2^Rational[1, 2]}, {
          45 - 5 2^Rational[1, 2], 30 - 5 2^Rational[1, 2]}}, {{
         52.071067811865476`, 37.071067811865476`}, {37.928932188134524`, 
         22.928932188134524`}}]]}}, {{
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[
        NCache[{{-45 + 5 2^Rational[1, 2], 45 - 5 2^Rational[1, 2]}, {-45 + 
           4 2^Rational[1, 2], 45 - 6 2^Rational[1, 2]}, {-45 - 6 
           2^Rational[1, 2], 45 + 4 2^Rational[1, 2]}, {-45 - 5 
           2^Rational[1, 2], 45 + 
           5 2^Rational[1, 2]}}, {{-37.928932188134524`, 
         37.928932188134524`}, {-39.34314575050762, 
         36.51471862576143}, {-53.48528137423857, 
         50.65685424949238}, {-52.071067811865476`, 52.071067811865476`}}]], 
       EdgeForm[{
         RGBColor[0.560181, 0.691569, 0.194885]}], 
       RGBColor[0.560181, 0.691569, 0.194885], 
       LineBox[
        NCache[{{-45 + 5 2^Rational[1, 2], 45 - 5 2^Rational[1, 2]}, {-45 - 5 
           2^Rational[1, 2], 45 + 
           5 2^Rational[1, 2]}}, {{-37.928932188134524`, 
         37.928932188134524`}, {-52.071067811865476`, 
         52.071067811865476`}}]]}, {
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[
        NCache[{{-25 + 10 Cos[Rational[5, 36] Pi], 45 - 10 
           Sin[Rational[5, 36] Pi]}, {-25 + 10 Cos[Rational[5, 36] Pi] - 2 
           Sin[Rational[5, 36] Pi], 45 - 2 Cos[Rational[5, 36] Pi] - 10 
           Sin[Rational[5, 36] Pi]}, {-25 - 10 Cos[Rational[5, 36] Pi] - 2 
           Sin[Rational[5, 36] Pi], 45 - 2 Cos[Rational[5, 36] Pi] + 
           10 Sin[Rational[5, 36] Pi]}, {-25 - 10 Cos[Rational[5, 36] Pi], 45 + 
           10 Sin[Rational[5, 36] Pi]}}, {{-15.936922129633501`, 
         40.77381738259301}, {-16.7821586531149, 
         38.961201808519704`}, {-34.908314393847895`, 
         47.4135670433337}, {-34.0630778703665, 49.22618261740699}}]], 
       EdgeForm[{
         RGBColor[0.560181, 0.691569, 0.194885]}], 
       RGBColor[0.560181, 0.691569, 0.194885], {
        PolygonBox[
         NCache[{{-25 + 10 Cos[Rational[5, 36] Pi], 45 - 10 
            Sin[Rational[5, 36] Pi]}, {-25 - 10 Cos[Rational[5, 36] Pi] + 
            10 2^Rational[1, 2] Sin[Rational[1, 9] Pi], 45 + 
            10 2^Rational[1, 2] Sin[Rational[1, 9] Pi] + 
            10 Sin[Rational[5, 36] Pi]}, {-25 - 10 Cos[Rational[5, 36] Pi], 
            45 + 10 Sin[Rational[5, 36] Pi]}}, {{-15.936922129633501`, 
          40.77381738259301}, {-29.226182617406995`, 
          54.0630778703665}, {-34.0630778703665, 49.22618261740699}}]]}}, {
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[{{10, 45}, {10, 43}, {-10, 43}, {-10, 45}}], 
       EdgeForm[{
         RGBColor[0.560181, 0.691569, 0.194885]}], 
       RGBColor[0.560181, 0.691569, 0.194885], {
        PolygonBox[{{10, 45}, {0, 55}, {-10, 45}}]}}, {
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[
        NCache[{{
          25 + 10 Cos[Rational[5, 36] Pi], 45 + 10 Sin[Rational[5, 36] Pi]}, {
          25 + 10 Cos[Rational[5, 36] Pi] + 2 Sin[Rational[5, 36] Pi], 45 - 2 
           Cos[Rational[5, 36] Pi] + 10 Sin[Rational[5, 36] Pi]}, {
          25 - 10 Cos[Rational[5, 36] Pi] + 2 Sin[Rational[5, 36] Pi], 45 - 2 
           Cos[Rational[5, 36] Pi] - 10 Sin[Rational[5, 36] Pi]}, {
          25 - 10 Cos[Rational[5, 36] Pi], 45 - 10 
           Sin[Rational[5, 36] Pi]}}, {{34.0630778703665, 
         49.22618261740699}, {34.908314393847895`, 47.4135670433337}, {
         16.7821586531149, 38.961201808519704`}, {15.936922129633501`, 
         40.77381738259301}}]], 
       EdgeForm[{
         RGBColor[0.560181, 0.691569, 0.194885]}], 
       RGBColor[0.560181, 0.691569, 0.194885], {
        PolygonBox[
         NCache[{{
           25 + 10 Cos[Rational[5, 36] Pi], 45 + 
            10 Sin[Rational[5, 36] Pi]}, {
           25 + 10 2^Rational[1, 2] Cos[Rational[1, 9] Pi] - 10 
            Cos[Rational[5, 36] Pi], 45 + 
            10 2^Rational[1, 2] Cos[Rational[1, 9] Pi] - 10 
            Sin[Rational[5, 36] Pi]}, {
           25 - 10 Cos[Rational[5, 36] Pi], 45 - 10 
            Sin[Rational[5, 36] Pi]}}, {{34.0630778703665, 
          49.22618261740699}, {29.226182617406998`, 54.0630778703665}, {
          15.936922129633501`, 40.77381738259301}}]]}}, {
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[
        NCache[{{45 + 5 2^Rational[1, 2], 45 + 5 2^Rational[1, 2]}, {
          45 + 6 2^Rational[1, 2], 45 + 4 2^Rational[1, 2]}, {
          45 - 4 2^Rational[1, 2], 45 - 6 2^Rational[1, 2]}, {
          45 - 5 2^Rational[1, 2], 45 - 5 2^Rational[1, 2]}}, {{
         52.071067811865476`, 52.071067811865476`}, {53.48528137423857, 
         50.65685424949238}, {39.34314575050762, 36.51471862576143}, {
         37.928932188134524`, 37.928932188134524`}}]], 
       EdgeForm[{
         RGBColor[0.560181, 0.691569, 0.194885]}], 
       RGBColor[0.560181, 0.691569, 0.194885], 
       LineBox[
        NCache[{{45 + 5 2^Rational[1, 2], 45 + 5 2^Rational[1, 2]}, {
          45 - 5 2^Rational[1, 2], 45 - 5 2^Rational[1, 2]}}, {{
         52.071067811865476`, 52.071067811865476`}, {37.928932188134524`, 
         37.928932188134524`}}]]}}, {{
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[
        NCache[{{-45 + 5 2^Rational[1, 2], 60 - 5 2^Rational[1, 2]}, {-45 + 
           4 2^Rational[1, 2], 60 - 6 2^Rational[1, 2]}, {-45 - 6 
           2^Rational[1, 2], 60 + 4 2^Rational[1, 2]}, {-45 - 5 
           2^Rational[1, 2], 60 + 
           5 2^Rational[1, 2]}}, {{-37.928932188134524`, 
         52.928932188134524`}, {-39.34314575050762, 
         51.51471862576143}, {-53.48528137423857, 
         65.65685424949238}, {-52.071067811865476`, 67.07106781186548}}]], 
       EdgeForm[{
         RGBColor[0.922526, 0.385626, 0.209179]}], 
       RGBColor[0.922526, 0.385626, 0.209179], {
        PolygonBox[
         NCache[{{-45 + 5 2^Rational[1, 2], 60 - 5 2^Rational[1, 2]}, {-45 - 
            5 2^Rational[1, 2] + 
            5 Rational[2, 3]^Rational[1, 2] (-1 + 3^Rational[1, 2]), 60 + 
            5 2^Rational[1, 2] + 
            5 2^Rational[1, 2] (-1 + 3^Rational[1, 2])}, {-45 - 5 
            2^Rational[1, 2], 60 + 
            5 2^Rational[1, 2]}}, {{-37.928932188134524`, 
          52.928932188134524`}, {-49.08248290463863, 
          72.24744871391589}, {-52.071067811865476`, 67.07106781186548}}]]}}, {
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[
        NCache[{{-25 + 10 Cos[Rational[5, 36] Pi], 60 - 10 
           Sin[Rational[5, 36] Pi]}, {-25 + 10 Cos[Rational[5, 36] Pi] - 2 
           Sin[Rational[5, 36] Pi], 60 - 2 Cos[Rational[5, 36] Pi] - 10 
           Sin[Rational[5, 36] Pi]}, {-25 - 10 Cos[Rational[5, 36] Pi] - 2 
           Sin[Rational[5, 36] Pi], 60 - 2 Cos[Rational[5, 36] Pi] + 
           10 Sin[Rational[5, 36] Pi]}, {-25 - 10 Cos[Rational[5, 36] Pi], 60 + 
           10 Sin[Rational[5, 36] Pi]}}, {{-15.936922129633501`, 
         55.77381738259301}, {-16.7821586531149, 
         53.961201808519704`}, {-34.908314393847895`, 
         62.4135670433337}, {-34.0630778703665, 64.22618261740699}}]], 
       EdgeForm[{
         RGBColor[0.922526, 0.385626, 0.209179]}], 
       RGBColor[0.922526, 0.385626, 0.209179], {
        PolygonBox[
         NCache[{{-25 + 10 Cos[Rational[5, 36] Pi], 60 - 10 
            Sin[Rational[5, 36] Pi]}, {-25 - 10 Cos[Rational[5, 36] Pi] + 
            20 3^Rational[-1, 2] Sin[Rational[7, 36] Pi], 60 + 
            10 Sin[Rational[5, 36] Pi] + 20 Sin[Rational[7, 36] Pi]}, {-25 - 
            10 Cos[Rational[5, 36] Pi], 60 + 
            10 Sin[Rational[5, 36] Pi]}}, {{-15.936922129633501`, 
          55.77381738259301}, {-27.439987671804445`, 
          75.69771134442792}, {-34.0630778703665, 64.22618261740699}}]]}}, {
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[{{10, 60}, {10, 58}, {-10, 58}, {-10, 60}}], 
       EdgeForm[{
         RGBColor[0.922526, 0.385626, 0.209179]}], 
       RGBColor[0.922526, 0.385626, 0.209179], {
        PolygonBox[
         NCache[{{10, 60}, {0, 60 + 10 3^Rational[1, 2]}, {-10, 60}}, {{10, 
           60}, {0, 77.32050807568876}, {-10, 60}}]]}}, {
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[
        NCache[{{
          25 + 10 Cos[Rational[5, 36] Pi], 60 + 10 Sin[Rational[5, 36] Pi]}, {
          25 + 10 Cos[Rational[5, 36] Pi] + 2 Sin[Rational[5, 36] Pi], 60 - 2 
           Cos[Rational[5, 36] Pi] + 10 Sin[Rational[5, 36] Pi]}, {
          25 - 10 Cos[Rational[5, 36] Pi] + 2 Sin[Rational[5, 36] Pi], 60 - 2 
           Cos[Rational[5, 36] Pi] - 10 Sin[Rational[5, 36] Pi]}, {
          25 - 10 Cos[Rational[5, 36] Pi], 60 - 10 
           Sin[Rational[5, 36] Pi]}}, {{34.0630778703665, 
         64.22618261740699}, {34.908314393847895`, 62.4135670433337}, {
         16.7821586531149, 53.961201808519704`}, {15.936922129633501`, 
         55.77381738259301}}]], 
       EdgeForm[{
         RGBColor[0.922526, 0.385626, 0.209179]}], 
       RGBColor[0.922526, 0.385626, 0.209179], {
        PolygonBox[
         NCache[{{
           25 + 10 Cos[Rational[5, 36] Pi], 60 + 
            10 Sin[Rational[5, 36] Pi]}, {
           25 + 20 3^Rational[-1, 2] Cos[Rational[1, 36] Pi] - 10 
            Cos[Rational[5, 36] Pi], 60 + 20 Cos[Rational[1, 36] Pi] - 10 
            Sin[Rational[5, 36] Pi]}, {
           25 - 10 Cos[Rational[5, 36] Pi], 60 - 10 
            Sin[Rational[5, 36] Pi]}}, {{34.0630778703665, 
          64.22618261740699}, {27.439987671804445`, 75.69771134442792}, {
          15.936922129633501`, 55.77381738259301}}]]}}, {
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[
        NCache[{{45 + 5 2^Rational[1, 2], 60 + 5 2^Rational[1, 2]}, {
          45 + 6 2^Rational[1, 2], 60 + 4 2^Rational[1, 2]}, {
          45 - 4 2^Rational[1, 2], 60 - 6 2^Rational[1, 2]}, {
          45 - 5 2^Rational[1, 2], 60 - 5 2^Rational[1, 2]}}, {{
         52.071067811865476`, 67.07106781186548}, {53.48528137423857, 
         65.65685424949238}, {39.34314575050762, 51.51471862576143}, {
         37.928932188134524`, 52.928932188134524`}}]], 
       EdgeForm[{
         RGBColor[0.922526, 0.385626, 0.209179]}], 
       RGBColor[0.922526, 0.385626, 0.209179], {
        PolygonBox[
         NCache[{{45 + 5 2^Rational[1, 2], 60 + 5 2^Rational[1, 2]}, {
           45 - 5 2^Rational[1, 2] + 
            5 Rational[2, 3]^Rational[1, 2] (1 + 3^Rational[1, 2]), 60 - 5 
            2^Rational[1, 2] + 5 2^Rational[1, 2] (1 + 3^Rational[1, 2])}, {
           45 - 5 2^Rational[1, 2], 60 - 5 2^Rational[1, 2]}}, {{
          52.071067811865476`, 67.07106781186548}, {49.08248290463863, 
          72.24744871391589}, {37.928932188134524`, 
          52.928932188134524`}}]]}}}}},
  Ticks->{{{-60, 
      FormBox[
       RowBox[{"-", "60"}], TraditionalForm]}, {-45, 
      FormBox[
       RowBox[{"-", "45"}], TraditionalForm]}, {-30, 
      FormBox[
       RowBox[{"-", "30"}], TraditionalForm]}, {-15, 
      FormBox[
       RowBox[{"-", "15"}], TraditionalForm]}, {15, 
      FormBox["15", TraditionalForm]}, {30, 
      FormBox["30", TraditionalForm]}, {45, 
      FormBox["45", TraditionalForm]}, {60, 
      FormBox["60", TraditionalForm]}}, {{15, 
      FormBox["15", TraditionalForm]}, {30, 
      FormBox["30", TraditionalForm]}, {45, 
      FormBox["45", TraditionalForm]}, {60, 
      FormBox["60", TraditionalForm]}}}]], "Output",
 CellChangeTimes->{
  3.687605837775404*^9, {3.687605874792824*^9, 3.687605886496085*^9}, {
   3.687605917515604*^9, 3.6876059674275103`*^9}, 3.687606019020296*^9, {
   3.687606049177376*^9, 3.687606053644273*^9}, {3.687606109723209*^9, 
   3.6876061576467113`*^9}, {3.687606230149214*^9, 3.687606267486062*^9}, 
   3.6876067552018623`*^9, {3.687606809537541*^9, 3.687606867311702*^9}, {
   3.6876068982662697`*^9, 3.687607046845057*^9}, {3.687607083947885*^9, 
   3.687607142974106*^9}, 3.687607186849019*^9, 3.687607288796714*^9, {
   3.687607349424101*^9, 3.687607372887609*^9}, 3.687608314659729*^9, 
   3.6876085441057253`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.687606453992988*^9, 3.687606459246826*^9}, {
  3.687606503222312*^9, 3.687606518905656*^9}}]
}, Closed]]
}, Open  ]]
},
WindowSize->{976, 714},
WindowMargins->{{Automatic, -5}, {Automatic, 0}},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September 9, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1233, 21, 252, "Subchapter"],
Cell[CellGroupData[{
Cell[1838, 47, 14083, 351, 872, "Input"],
Cell[15924, 400, 6318, 127, 398, "Output"]
}, {2}]],
Cell[CellGroupData[{
Cell[22276, 532, 137, 1, 44, "Subsection"],
Cell[22416, 535, 3112, 91, 128, "Input"],
Cell[25531, 628, 208, 7, 87, "Text"],
Cell[CellGroupData[{
Cell[25764, 639, 425, 10, 28, "Input"],
Cell[26192, 651, 1015, 30, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27244, 686, 919, 27, 48, InheritFromParent],
Cell[28166, 715, 856, 26, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29059, 746, 1346, 38, 63, "Input"],
Cell[30408, 786, 2531, 48, 356, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32976, 839, 2420, 72, 155, "Input"],
Cell[35399, 913, 431, 11, 47, "Output"]
}, Open  ]],
Cell[35845, 927, 1036, 32, 46, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[36918, 964, 114518, 2130, 497, "Subsection"],
Cell[151439, 3096, 4784, 129, 215, "Input"],
Cell[CellGroupData[{
Cell[156248, 3229, 2740, 72, 199, "Input"],
Cell[158991, 3303, 83578, 1488, 251, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[242606, 4796, 2450, 67, 182, "Input"],
Cell[245059, 4865, 67645, 1228, 240, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[312741, 6098, 2161, 60, 101, "Input"],
Cell[314905, 6160, 2127, 60, 110, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[317069, 6225, 7136, 177, 557, "Input"],
Cell[324208, 6404, 22148, 431, 243, "Output"]
}, Open  ]],
Cell[346371, 6838, 141, 2, 28, "Input"]
}, Closed]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
