(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1003684,      19737]
NotebookOptionsPosition[    996745,      19534]
NotebookOutlinePosition[    997122,      19551]
CellTagsIndexPosition[    997079,      19548]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 "Problems: Torque Control With a Swarm of Norm,Triangularly,Uniform \
distributed Particles Under Global Control\n\n",
 StyleBox["Given a swarm of particles, whose positions are normally \
distributed, and a pivoted object, where should the swarm hit to generate the \
maximum torque?",
  FontSize->16],
 "\n",
 StyleBox["related problem:  shooting a railroad track switch with a shotgun. \
\nF = force provided by entire swarm\nN = number of particles\nF/N = force \
per particle\n",
  FontSize->16],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"]}], "/", 
     RowBox[{"(", 
      RowBox[{"2", 
       SuperscriptBox["\[Sigma]", "2"]}], ")"}]}]], TraditionalForm]], 
  "InlineMath"]
}], "Section",
 CellChangeTimes->{{3.676456729376965*^9, 3.676456792954073*^9}, {
  3.676462023205823*^9, 3.676462123761077*^9}, {3.676462183093297*^9, 
  3.676462186933276*^9}, {3.6764622615292883`*^9, 3.676462261794133*^9}, {
  3.6767079936854773`*^9, 3.676707994070787*^9}, {3.678013488380001*^9, 
  3.678013506864674*^9}, {3.678013813226904*^9, 3.6780138627633266`*^9}, {
  3.6780154731946793`*^9, 3.678015503683338*^9}, {3.684533968985187*^9, 
  3.684533971087208*^9}, {3.684542163365937*^9, 3.684542167980525*^9}}],

Cell[CellGroupData[{

Cell["\<\
Problem 1:  marginalizing to 1 dimension, not thinking about distributed time \
of impact
this is only a one-pass of the swarm at the object.  The kilobots are pushing \
continuously.  (math is for one step, real world is an iterative process)\
\>", "Subsection",
 CellChangeTimes->{{3.676456729376965*^9, 3.676456792954073*^9}, {
  3.676462023205823*^9, 3.676462123761077*^9}, {3.676462183093297*^9, 
  3.676462186933276*^9}, {3.6764622615292883`*^9, 3.676462261794133*^9}, {
  3.6767079936854773`*^9, 3.676707994070787*^9}, {3.678013488380001*^9, 
  3.678013506864674*^9}, {3.678013813226904*^9, 3.6780138627633266`*^9}, {
  3.6780154731946793`*^9, 3.678015502323708*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"pdfUniform", "[", 
    RowBox[{"x_", ",", "\[Mu]_", ",", "\[Sigma]_"}], "]"}], ":=", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          FractionBox["1", 
           RowBox[{"2", " ", 
            SqrtBox["3"], " ", "\[Sigma]"}]], 
          RowBox[{
           RowBox[{"\[Mu]", "-", 
            RowBox[{
             SqrtBox["3"], " ", "\[Sigma]"}]}], "\[LessEqual]", "x", 
           "\[LessEqual]", 
           RowBox[{"\[Mu]", "+", 
            RowBox[{
             SqrtBox["3"], " ", "\[Sigma]"}]}]}]},
         {"0", 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], " "}]}]], "Input",
 CellChangeTimes->{{3.686492286767367*^9, 3.686492287565995*^9}, {
  3.686492317989504*^9, 3.6864923190318537`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sigs", " ", "=", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0.1", ",", "0.5", ",", "1", ",", "2", ",", 
      RowBox[{"5", "/", 
       RowBox[{"\[Sqrt]", "3"}]}], ",", "5"}], "}"}], "/", "10"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"pdfUniform", "[", 
       RowBox[{"x", ",", "1", ",", "\[Sigma]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", "1", ",", "2", ",", "5", ",", "10"}], 
         "}"}]}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "4"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{"sigs", ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", "Bold", ",", "8"}], "}"}]}], ",", 
        RowBox[{"LegendLabel", "\[Rule]", "\"\<\[Sigma]=\>\""}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.85", ",", "0.55"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Uniform distribution\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<../abecker/SwarmPublications/JournalTorqueControl/pictures/pdf/\
Uniform.pdf\>\"", ",", "%"}], "]"}], ";"}]}], "Input"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
5Z3zG6RnFGblYzYX4XlNj1y48eZWPC/zqoSdx8xx/bRnvNzjZwePxvO6O3Vt
WUYxro/2jKf78girCDwfi04L5a2+d94v6ZlW/QUTmtbjftIqvONsGnA87Rm/
SAPjOobP73c0HH7knfOhPWO7cH5E8FKcf1eZwmnfUbz/lr3Dep8qfB7tmc/D
Eoo7duD4t32C4+n9dD/0+4G+T5g/+M+/MZfD/MDQP2/Hczn0DzD0D/D7/cNJ
/3DSP5z0Dyf9w0n/cNI/nPQPJ/3DSf9w0j+c9A8n/cNJ/3DSP5z0Dyf9w0n/
cNI/nPQPJ/3DSf9w0j+c9A8n/cNJ/3DSP5z0Dyf9w0n/cNI/nPQPJ/3DSf9w
0T/A0D/ivAb6Bxj6R8w30D/A0D/A0D/ifQ30DzD0DzD0DzD0DzD0DzD0DzD0
DzD0CTD4Y5bSpL739E3hDzD4Awz+AIM/wOAPMPgDDP4Agz/A4A8w+AMM/ojn
D/gDDP4Agz/A4A8w+AMM/oj9DPgDDP4Agz/A4A8w+AMM/gCDP8DgDzD4Awz+
AIM/wOAPMPgDDP4Agz/A4A8w+AMM/gCDP8DgDzD4I85rwB9g8EfMN+APMPgD
DP6I9zXgDzD4Awz+AIM/wOAPMPgDDP4Agz/A7/vDiD+M+MOIP4z4w4g/jPjD
iD+M+MOIP4z4w4g/jPjDiD+M+MOIP4z4w4g/jPjDiD+M+MOIP4z4w4g/jPjD
iD+M+MOIP4z4w4g/jPjDiD+M+MOIP4z4w4g/jPjDiD+M+MOIP4z4w4g/jPjD
iD+M+MOIP4z4w4g/jPjDiD+M+MOIP+w/fr+if7//r9ehN2lfAsPvb8Dw+xzw
vwFGRH/G
     "], {{{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[
         PolygonBox[{{109, 450, 451, 85, 100, 29, 55, 28, 27, 26, 25, 24, 23, 
          22, 21, 20, 19, 18, 17, 16, 15, 14, 54, 13, 66, 53, 78, 61, 114, 94,
           133}}]]}, {}, 
       {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[
         PolygonBox[{{268, 448, 449, 254, 272, 230, 245, 197, 203, 178, 196, 
          177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 
          164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 
          151, 150, 149, 148, 147, 146, 195, 145, 220, 207, 255, 235, 274, 
          250}}]]}, {}, 
       {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[
         PolygonBox[{{286, 446, 447, 335, 337, 334, 333, 332, 331, 330, 329, 
          328, 327, 326, 325, 324, 323, 322, 321, 320, 319, 318, 317, 316, 
          315, 314, 313, 312, 311, 310, 309, 308, 307, 306, 305, 304, 303, 
          302, 301, 300, 299, 298, 297, 296, 295, 294, 293, 292, 291, 290, 
          289, 288, 287, 336}}]]}, {}, 
       {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[
         PolygonBox[{{338, 444, 445, 387, 389, 386, 385, 384, 383, 382, 381, 
          380, 379, 378, 377, 376, 375, 374, 373, 372, 371, 370, 369, 368, 
          367, 366, 365, 364, 363, 362, 361, 360, 359, 358, 357, 356, 355, 
          354, 353, 352, 351, 350, 349, 348, 347, 346, 345, 344, 343, 342, 
          341, 340, 339, 388}}]]}, {}, 
       {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[
         PolygonBox[{{390, 442, 443, 439, 441, 438, 437, 436, 435, 434, 433, 
          432, 431, 430, 429, 428, 427, 426, 425, 424, 423, 422, 421, 420, 
          419, 418, 417, 416, 415, 414, 413, 412, 411, 410, 409, 408, 407, 
          406, 405, 404, 403, 402, 401, 400, 399, 398, 397, 396, 395, 394, 
          393, 392, 391, 
          440}}]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{1, 116, 97, 82, 69, 59, 51, 2, 3, 278, 4, 5, 6, 7, 8, 9, 10, 
         11, 117, 98, 83, 70, 60, 52, 121, 103, 88, 75, 65, 125, 107, 92, 80, 
         12, 118, 99, 84, 130, 112, 134, 71}], 
        LineBox[{109, 133, 94, 114, 61, 78, 53, 66, 13, 54, 14, 15, 16, 17, 
         18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 55, 29, 100, 85}], 
        LineBox[{131, 113, 135, 72, 128, 110, 95, 62, 124, 106, 91, 79, 56, 
         122, 104, 89, 76, 67, 30, 119, 101, 86, 73, 63, 57, 31, 32, 33, 34, 
         35, 36, 37, 279, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 120,
          102, 87, 74, 64, 58, 123, 105, 90, 77, 68, 126, 108, 93, 81, 129, 
         111, 96, 132, 115, 136, 50}]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{142, 257, 238, 223, 210, 200, 192, 143, 258, 239, 224, 211, 
         201, 193, 262, 243, 228, 215, 206, 144, 259, 240, 225, 212, 202, 265,
          247, 232, 219, 194, 263, 244, 229, 271, 253, 275, 216}], 
        LineBox[{268, 250, 274, 235, 255, 207, 220, 145, 195, 146, 147, 148, 
         149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
          163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 
         176, 177, 196, 178, 203, 197, 245, 230, 272, 254}], 
        LineBox[{276, 217, 269, 251, 236, 208, 266, 248, 233, 221, 179, 260, 
         241, 226, 213, 204, 198, 180, 181, 182, 183, 184, 185, 186, 187, 188,
          189, 190, 261, 242, 227, 214, 205, 199, 264, 246, 231, 218, 209, 
         267, 249, 234, 222, 270, 252, 237, 273, 256, 277, 191}]}, 
       {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{286, 336, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 
         297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310,
          311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 
         324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 337, 335}]}, 
       {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{338, 388, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 
         349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362,
          363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 
         376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 389, 387}]}, 
       {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{390, 440, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 
         401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414,
          415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 
         428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 441, 439}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], 
        LineBox[{139, 140, 138}], LineBox[{137, 141, 127}], 
        LineBox[{282, 284, 281}], 
        LineBox[{283, 285, 280}]}}, {{}, {}, {}, {}, {}, {}, {}}}], InsetBox[
     TemplateBox[{
      "0.010000000000000002`","0.05`",FractionBox["1", "10"],FractionBox[
       "1", "5"],FractionBox["1", 
        RowBox[{"2", " ", 
          SqrtBox["3"]}]],FractionBox["1", "2"]},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox["\"\[Sigma]=\"", {
                 GrayLevel[0], FontWeight -> Bold, FontSize -> 8, FontFamily -> 
                 "Arial"}, Background -> Automatic, StripOnInput -> False]}, {
              
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontWeight -> Bold, FontSize -> 8, FontFamily -> 
          "Arial"}, Background -> Automatic, StripOnInput -> False], 
        TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold", ",", "8"}], "}"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"\[Sigma]=\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.85, 0.55}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0., 0.},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
     "AxesInFront" -> True},
   PlotLabel->FormBox["\"Uniform distribution\"", TraditionalForm],
   PlotRange->{All, All},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[
     GraphicsComplex[CompressedData["
1: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
5Z3zG6RnFGblYzYX4XlNj1y48eZWPC/zqoSdx8xx/bRnvNzjZwePxvO6O3Vt
WUYxro/2jKf78girCDwfi04L5a2+d94v6ZlW/QUTmtbjftIqvONsGnA87Rm/
SAPjOobP73c0HH7knfOhPWO7cH5E8FKcf1eZwmnfUbz/lr3Dep8qfB7tmc/D
Eoo7duD4t32C4+n9dD/0+4G+T5g/+M+/MZfD/MDQP2/Hczn0DzD0D/D7/cNJ
/3DSP5z0Dyf9w0n/cNI/nPQPJ/3DSf9w0j+c9A8n/cNJ/3DSP5z0Dyf9w0n/
cNI/nPQPJ/3DSf9w0j+c9A8n/cNJ/3DSP5z0Dyf9w0n/cNI/nPQPJ/3DSf9w
0T/A0D/ivAb6Bxj6R8w30D/A0D/A0D/ifQ30DzD0DzD0DzD0DzD0DzD0DzD0
DzD0CTD4Y5bSpL739E3hDzD4Awz+AIM/wOAPMPgDDP4Agz/A4A8w+AMM/ojn
D/gDDP4Agz/A4A8w+AMM/oj9DPgDDP4Agz/A4A8w+AMM/gCDP8DgDzD4Awz+
AIM/wOAPMPgDDP4Agz/A4A8w+AMM/gCDP8DgDzD4I85rwB9g8EfMN+APMPgD
DP6I9zXgDzD4Awz+AIM/wOAPMPgDDP4Agz/A7/vDiD+M+MOIP4z4w4g/jPjD
iD+M+MOIP4z4w4g/jPjDiD+M+MOIP4z4w4g/jPjDiD+M+MOIP4z4w4g/jPjD
iD+M+MOIP4z4w4g/jPjDiD+M+MOIP4z4w4g/jPjDiD+M+MOIP4z4w4g/jPjD
iD+M+MOIP4z4w4g/jPjDiD+M+MOIP+w/fr+if7//r9ehN2lfAsPvb8Dw+xzw
vwFGRH/G
      "], {{{}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroup[{
           
           Polygon[{{109, 450, 451, 85, 100, 29, 55, 28, 27, 26, 25, 24, 23, 
            22, 21, 20, 19, 18, 17, 16, 15, 14, 54, 13, 66, 53, 78, 61, 114, 
            94, 133}}]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroup[{
           
           Polygon[{{268, 448, 449, 254, 272, 230, 245, 197, 203, 178, 196, 
            177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 
            164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 
            151, 150, 149, 148, 147, 146, 195, 145, 220, 207, 255, 235, 274, 
            250}}]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          Opacity[0.2]], 
         GraphicsGroup[{
           
           Polygon[{{286, 446, 447, 335, 337, 334, 333, 332, 331, 330, 329, 
            328, 327, 326, 325, 324, 323, 322, 321, 320, 319, 318, 317, 316, 
            315, 314, 313, 312, 311, 310, 309, 308, 307, 306, 305, 304, 303, 
            302, 301, 300, 299, 298, 297, 296, 295, 294, 293, 292, 291, 290, 
            289, 288, 287, 336}}]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          Opacity[0.2]], 
         GraphicsGroup[{
           
           Polygon[{{338, 444, 445, 387, 389, 386, 385, 384, 383, 382, 381, 
            380, 379, 378, 377, 376, 375, 374, 373, 372, 371, 370, 369, 368, 
            367, 366, 365, 364, 363, 362, 361, 360, 359, 358, 357, 356, 355, 
            354, 353, 352, 351, 350, 349, 348, 347, 346, 345, 344, 343, 342, 
            341, 340, 339, 388}}]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          Opacity[0.2]], 
         GraphicsGroup[{
           
           Polygon[{{390, 442, 443, 439, 441, 438, 437, 436, 435, 434, 433, 
            432, 431, 430, 429, 428, 427, 426, 425, 424, 423, 422, 421, 420, 
            419, 418, 417, 416, 415, 414, 413, 412, 411, 410, 409, 408, 407, 
            406, 405, 404, 403, 402, 401, 400, 399, 398, 397, 396, 395, 394, 
            393, 392, 391, 
            440}}]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Line[{1, 116, 97, 82, 69, 59, 51, 2, 3, 278, 4, 5, 6, 7, 8, 9, 10, 
          11, 117, 98, 83, 70, 60, 52, 121, 103, 88, 75, 65, 125, 107, 92, 80,
           12, 118, 99, 84, 130, 112, 134, 71}], 
         Line[{109, 133, 94, 114, 61, 78, 53, 66, 13, 54, 14, 15, 16, 17, 18, 
          19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 55, 29, 100, 85}], 
         Line[{131, 113, 135, 72, 128, 110, 95, 62, 124, 106, 91, 79, 56, 122,
           104, 89, 76, 67, 30, 119, 101, 86, 73, 63, 57, 31, 32, 33, 34, 35, 
          36, 37, 279, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 120, 
          102, 87, 74, 64, 58, 123, 105, 90, 77, 68, 126, 108, 93, 81, 129, 
          111, 96, 132, 115, 136, 50}]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Line[{142, 257, 238, 223, 210, 200, 192, 143, 258, 239, 224, 211, 
          201, 193, 262, 243, 228, 215, 206, 144, 259, 240, 225, 212, 202, 
          265, 247, 232, 219, 194, 263, 244, 229, 271, 253, 275, 216}], 
         Line[{268, 250, 274, 235, 255, 207, 220, 145, 195, 146, 147, 148, 
          149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 
          162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 
          175, 176, 177, 196, 178, 203, 197, 245, 230, 272, 254}], 
         Line[{276, 217, 269, 251, 236, 208, 266, 248, 233, 221, 179, 260, 
          241, 226, 213, 204, 198, 180, 181, 182, 183, 184, 185, 186, 187, 
          188, 189, 190, 261, 242, 227, 214, 205, 199, 264, 246, 231, 218, 
          209, 267, 249, 234, 222, 270, 252, 237, 273, 256, 277, 191}]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Line[{286, 336, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 
          297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 
          310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 
          323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 337, 
          335}]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Line[{338, 388, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 
          349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 
          362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 
          375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 389, 
          387}]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Line[{390, 440, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 
          401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 
          414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 
          427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 441, 
          439}]}, {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         Line[{139, 140, 138}], 
         Line[{137, 141, 127}], 
         Line[{282, 284, 281}], 
         Line[{283, 285, 280}]}}, {{}, {}, {}, {}, {}, {}, {}}}], {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0., 0.},
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
       FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
        "AxesInFront" -> True}, PlotLabel -> "Uniform distribution", 
      PlotRange -> {All, All}, PlotRangeClipping -> True, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]]}, {0.010000000000000002`, 0.05, 
        Rational[1, 10], 
        Rational[1, 5], Rational[1, 2] 3^Rational[-1, 2], 
        Rational[1, 2]}, LabelStyle -> {
         GrayLevel[0], Bold, 8}, LegendLabel -> "\[Sigma]=", LegendLayout -> 
       "Column"]], {0.85, 0.55}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{3.68649232907792*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"pdfTriangle", "[", 
    RowBox[{"x_", ",", "\[Mu]_", ",", "\[Sigma]_"}], "]"}], ":=", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          FractionBox[
           RowBox[{"x", "-", "\[Mu]", "+", 
            RowBox[{
             SqrtBox["6"], " ", "\[Sigma]"}]}], 
           RowBox[{"6", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]], 
          RowBox[{
           RowBox[{"\[Mu]", "-", 
            RowBox[{
             SqrtBox["6"], " ", "\[Sigma]"}]}], "\[LessEqual]", "x", 
           "\[LessEqual]", "\[Mu]"}]},
         {
          FractionBox[
           RowBox[{
            RowBox[{"-", "x"}], "+", "\[Mu]", "+", 
            RowBox[{
             SqrtBox["6"], " ", "\[Sigma]"}]}], 
           RowBox[{"6", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]], 
          RowBox[{"\[Mu]", "<", "x", "\[LessEqual]", 
           RowBox[{"\[Mu]", "+", 
            RowBox[{
             SqrtBox["6"], " ", "\[Sigma]"}]}]}]},
         {"0", 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}]}]], "Input",
 CellChangeTimes->{{3.686492359735998*^9, 3.6864923605916567`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"pdfTriangle", "[", 
       RowBox[{"x", ",", "1", ",", "\[Sigma]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", "1", ",", "2", ",", "5", ",", "10"}], 
         "}"}]}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "4"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{"sigs", ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", "Bold", ",", "8"}], "}"}]}], ",", 
        RowBox[{"LegendLabel", "\[Rule]", "\"\<\[Sigma]=\>\""}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.75", ",", "0.55"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Triangular distribution\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<../abecker/SwarmPublications/JournalTorqueControl/pictures/pdf/\
Triangular.pdf\>\"", ",", "%"}], "]"}], ";"}]}], "Input"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJzFmnk0VW3bwE9FRFSkolSGJlIUTdR9FGlAZUgqSqkkGYqeIhlCFJkzho6j
QcMxbJkdM+cYkpAj85SjMpQhRb79rufZ135XrXe93z/f+vqnda299+267mH/
rt85R+qMjd65mRQKRWYWhfKv/0tMpdqmp6eZlH/+LfILXBUl+QviXcqFHTSR
SYhbrj+m6cn9gDhP94vfg4PfIXZ4ODKwV2MMYroPwyD21AjEzwbkFM31vkI8
1M2/JVd3COKTw8puNz98hthTgONmVN4HcbRp9z33H90Qb63H+utRB8RTjnMt
eSyaIL5U4LxgqqkW4rMNHSsOGZUwXVtyn7+qikdjb64wxcQSmNSyntDtBkxk
zLtYhd8mFeWm+N38/oSFEr4OjnG/s9BsA4tNy1Etssv+0HAnqA5JuBra1Ou8
RyqROz/0sZvRPuaDsvzyZjQRIRB107oT3d8p6j5frANx5ecxlTf1og0j+Rr3
wrqQQmXQuKhWPzqOLRFbebgXuSsxVscvGkC7dBp8XJr6kNyO2xRP7hDiVTax
MeP2oZwzA+MHh76i3frVji9VetH7Lwn9lnUjiBXB6diQ1IWWUR5ekOwYQ4UN
O1QfjLSjFW5KWard31FtIlfD614zem4uwp9S/AOljAWyD9x9j06/2dSeXTWJ
HDf2Kn9YVotiomNTJbFfKPFyy4sXi9lI57PBK4d9FKrY7SNrMtfmo/aqCa3V
B2dQ5VgOLxw8E1B6u0abu9pMKjGfMukM1XW7Z0H8Li8/1GkLD8RdznFNs1bz
QnyHEtddv242xLaY5mf9ZXwQD8gLZi6V4Ye44nisrfiqORB/zuKsKhITgJjW
ujnutYQgxNGblZccFZ4L8Sia5SQ/RcZd877SDlCEIRZbcKdc7CsZn2UEDE5P
zyPzcTB2rxImz0f0C+tHdK8qiE/fzfMPic5iUk50Ong/xFDjr5X+HzZ8RlWu
f705FPoRfaptCm4YGURNGfuctcX70dXqbTf7Pg8jepGYwx3/j2iRyZqfVSwK
1XLUOmjR3TSkbRQbXFc0g2ooOSAU6HUefTnoKHSUSc63Wrtgs8ANMr/jlrlJ
5++Q+TXfk0he86YGYrZfe2qlXgEzf39BxSmPV8i9x7hofMcnFCKx72v61160
ZaZmSw7vIJp7239W7w0u0uUxzdtyaRjVO22/Yq/Wh1Jk8+qkfCjU/Clv2+Iv
WehBUOVl5zszqJTnBrmtXx4gvQenrn12JvN7en2/XoAKmZ+r+tP2CWsWk1L/
6ml1WSBSWNJ3nCn9BfF+fPzi49Y+VHNk26rvdkOo9uIibpk3FzmFBkg5CuDj
fzHALFYnoZnLrmTKU8jxa7Sqz3nmkOMHmA9qpRaR9dNXa5uJ1L8l32ebOrhC
hkXM0GCmKt+6Z6jx2LUW3oJ+dP1C0iyrR72oWfzHDMX7A2hVX0rpJjkuUou1
bTORG0ZfjCqG+oP6kKu3T0GFBYXaP+PBqajYXKSq2NV05CK+PvMCPDfdikMe
qrWJW03I/Fo1LITeiZL5Cf8lqP7GsYJJ8ZbSlLzuhNzv8ThUPf2MuJvn5UX1
fkTxLUHpSluGUCbPt1VOjVy0b+KEsGw/hUodNotHjSnoSab3akrnDBhv9sIv
K8sj/63+fv+M/c6D6KukFTWCxUXDI2mUZwkzqInWIm1JeT7oq6Cmq+zZMiZl
nxjlQXI0OnnrhLbRcjLfSCdG4u5WcrxEM+9gTgc5n/wj5pl8x8j3p5pHh8eG
o8VM14y8b8edHiP3II/+uR79iOtnPrf0ei9iJBiEXNQbQCmRGmuNZ3JR6ucJ
m+E5w2hCc6Hi6rw+dH7HYHrcMfz94rHsvdf3PCTsYr1A7Tj+fvk8U7xuRjxa
fl9Qs0WbzO9H4rjlyEwyv/oFO4czXSvx+dQz3hF0FCmUiLjXXfqMjh8vKh3N
/Yh8ZfJddZcMIQU9s2IDSj/a+LyAZ4JDoRpe7ZOQV8KQI/9Ck/5acj6lHG/e
4vqQ45+91n/gtvogcq2ZesR8xEXFe9S3Bj/A7x+2fhDVG4gyH19TnHexnOkq
fMYgRS0MbazqdVefR+ab1rGL37yKHE+rmRPQbc9mUraOT9QneKOssHMDCw2G
kGa6x51HSVxUZzk1KDZM5pNnqrJ6fuYgOn+pqfXKMBctfyzHzsPw9RzzkzY8
7YJuia3UkRokx9/WbpD5eYhcr6zjdufcI8j1OvzSrDavoZhJOZj3xkM2AR1j
CNoFnOtH0o/y5l8170Xhn9xMvJQH0PerQsZWA33IOnjXtuyJIUTJzXhT9K4P
HReV3nzvML5eJW1Bk3Qm+ms1tj5ZD8/neE4nfQ8dWW5dK5KkQdbPb8oU9/xB
vk+3tRnuZ8wi35czOyP4j+l8RiGXJStozz4it9KjPSfnDKHe6+HB6gvxvDxG
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

     "], {{{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[{
          PolygonBox[{{137, 802, 803, 139, 172, 58, 156, 189, 123, 150, 183, 
           94, 115, 142, 175, 68, 84, 105, 132, 165, 35, 74, 90, 111, 138, 
           171, 57, 67, 83, 104, 131, 164, 34, 33, 32, 31, 30, 29, 28, 27, 56,
            66, 82, 103, 130, 163, 26, 73, 120, 147, 180, 89, 153, 186, 110, 
           192}}], PolygonBox[{{108, 800, 801, 170, 55, 194, 155, 188, 122, 
           149, 182, 93, 114, 141, 174, 65, 81, 102, 129, 162, 25, 72, 88, 
           109, 136, 169, 54, 64, 80, 101, 128, 161, 24, 23, 22, 21, 20, 19, 
           18, 17, 53, 63, 79, 100, 127, 160, 16, 95, 116, 143, 176, 71, 119, 
           146, 179, 87, 152, 185}}]}]}, {}, 
       {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[{
          PolygonBox[{{341, 798, 799, 376, 262, 399, 360, 393, 327, 354, 387, 
           298, 319, 346, 379, 272, 288, 309, 336, 369, 249, 278, 294, 315, 
           342, 375, 261, 271, 287, 308, 335, 368, 248, 247, 246, 245, 244, 
           243, 242, 241, 240, 239, 238, 237, 236, 235, 234, 233, 232, 231, 
           260, 270, 286, 307, 334, 367, 230, 277, 324, 351, 384, 293, 357, 
           390, 314, 396}}], 
          PolygonBox[{{312, 796, 797, 374, 259, 398, 359, 392, 326, 353, 386, 
           297, 318, 345, 378, 269, 285, 306, 333, 366, 229, 276, 292, 313, 
           340, 373, 258, 268, 284, 305, 332, 365, 228, 227, 226, 225, 224, 
           223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 213, 212, 211, 
           257, 267, 283, 304, 331, 364, 210, 299, 320, 347, 380, 275, 323, 
           350, 383, 291, 356, 389}}]}]}, {}, 
       {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[{
          PolygonBox[{{412, 792, 793, 520, 464, 531, 512, 528, 496, 509, 525, 
           483, 493, 506, 522, 469, 477, 487, 500, 516, 436, 472, 480, 490, 
           503, 519, 463, 468, 476, 486, 499, 515, 435, 434, 433, 432, 431, 
           430, 429, 428, 427, 426, 425, 424, 423, 422, 421, 420, 419, 418, 
           417, 416, 415, 414, 413, 462, 467, 475, 485, 498, 514}}], 
          PolygonBox[{{504, 794, 795, 461, 532, 513, 529, 497, 510, 526, 484, 
           494, 507, 523, 474, 482, 492, 505, 521, 466, 471, 479, 489, 502, 
           518, 460, 459, 458, 457, 456, 455, 454, 453, 452, 451, 450, 449, 
           448, 447, 446, 445, 444, 443, 442, 441, 440, 439, 438, 465, 470, 
           478, 488, 501, 517, 437, 473, 495, 508, 524, 481, 511, 527, 491, 
           530}}]}]}, {}, 
       {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[{
          PolygonBox[{{536, 788, 789, 644, 588, 655, 636, 652, 620, 633, 649, 
           607, 617, 630, 646, 593, 601, 611, 624, 640, 560, 596, 604, 614, 
           627, 643, 587, 592, 600, 610, 623, 639, 559, 558, 557, 556, 555, 
           554, 553, 552, 551, 550, 549, 548, 547, 546, 545, 544, 543, 542, 
           541, 540, 539, 538, 537, 586, 591, 599, 609, 622, 638}}], 
          PolygonBox[{{628, 790, 791, 585, 656, 637, 653, 621, 634, 650, 608, 
           618, 631, 647, 598, 606, 616, 629, 645, 590, 595, 603, 613, 626, 
           642, 584, 583, 582, 581, 580, 579, 578, 577, 576, 575, 574, 573, 
           572, 571, 570, 569, 568, 567, 566, 565, 564, 563, 562, 589, 594, 
           602, 612, 625, 641, 561, 597, 619, 632, 648, 605, 635, 651, 615, 
           654}}]}]}, {}, 
       {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[{
          PolygonBox[{{660, 784, 785, 768, 712, 779, 760, 776, 744, 757, 773, 
           731, 741, 754, 770, 717, 725, 735, 748, 764, 684, 720, 728, 738, 
           751, 767, 711, 716, 724, 734, 747, 763, 683, 682, 681, 680, 679, 
           678, 677, 676, 675, 674, 673, 672, 671, 670, 669, 668, 667, 666, 
           665, 664, 663, 662, 661, 710, 715, 723, 733, 746, 762}}], 
          PolygonBox[{{752, 786, 787, 709, 780, 761, 777, 745, 758, 774, 732, 
           742, 755, 771, 722, 730, 740, 753, 769, 714, 719, 727, 737, 750, 
           766, 708, 707, 706, 705, 704, 703, 702, 701, 700, 699, 698, 697, 
           696, 695, 694, 693, 692, 691, 690, 689, 688, 687, 686, 713, 718, 
           726, 736, 749, 765, 685, 721, 743, 756, 772, 729, 759, 775, 739, 
           778}}]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{1, 158, 125, 98, 77, 61, 51, 2, 3, 4, 5, 406, 6, 7, 8, 9, 10,
          11, 12, 13, 14, 15, 159, 126, 99, 78, 62, 52, 168, 135, 191}], 
        LineBox[{108, 185, 152, 87, 179, 146, 119, 71, 176, 143, 116, 95, 16, 
         160, 127, 100, 79, 63, 53, 17, 18, 19, 20, 21, 22, 23, 24, 161, 128, 
         101, 80, 64, 54, 169, 136, 109, 88, 72, 25, 162, 129, 102, 81, 65, 
         174, 141, 114, 93, 182, 149, 122, 188, 155, 194, 55, 170}], 
        LineBox[{137, 192, 110, 186, 153, 89, 180, 147, 120, 73, 26, 163, 130,
          103, 82, 66, 56, 27, 28, 29, 30, 31, 32, 33, 34, 164, 131, 104, 83, 
         67, 57, 171, 138, 111, 90, 74, 35, 165, 132, 105, 84, 68, 175, 142, 
         115, 94, 183, 150, 123, 189, 156, 58, 172, 139}], 
        LineBox[{193, 112, 187, 154, 91, 181, 148, 121, 75, 177, 144, 117, 96,
          36, 166, 133, 106, 85, 69, 59, 37, 38, 39, 40, 41, 42, 43, 44, 45, 
         401, 46, 47, 48, 49, 167, 134, 107, 86, 70, 60, 173, 140, 113, 92, 
         76, 178, 145, 118, 97, 184, 151, 124, 190, 157, 195, 50}]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{205, 362, 329, 302, 281, 265, 255, 206, 207, 208, 209, 363, 
         330, 303, 282, 266, 256, 372, 339, 395}], 
        LineBox[{312, 389, 356, 291, 383, 350, 323, 275, 380, 347, 320, 299, 
         210, 364, 331, 304, 283, 267, 257, 211, 212, 213, 214, 215, 216, 217,
          218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 365, 332, 
         305, 284, 268, 258, 373, 340, 313, 292, 276, 229, 366, 333, 306, 285,
          269, 378, 345, 318, 297, 386, 353, 326, 392, 359, 398, 259, 374}], 
        LineBox[{341, 396, 314, 390, 357, 293, 384, 351, 324, 277, 230, 367, 
         334, 307, 286, 270, 260, 231, 232, 233, 234, 235, 236, 237, 238, 239,
          240, 241, 242, 243, 244, 245, 246, 247, 248, 368, 335, 308, 287, 
         271, 261, 375, 342, 315, 294, 278, 249, 369, 336, 309, 288, 272, 379,
          346, 319, 298, 387, 354, 327, 393, 360, 399, 262, 376}], 
        LineBox[{343, 397, 316, 391, 358, 295, 385, 352, 325, 279, 381, 348, 
         321, 300, 250, 370, 337, 310, 289, 273, 263, 251, 252, 253, 371, 338,
          311, 290, 274, 264, 377, 344, 317, 296, 280, 382, 349, 322, 301, 
         388, 355, 328, 394, 361, 400, 254}]}, 
       {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{412, 514, 498, 485, 475, 467, 462, 413, 414, 415, 416, 417, 
         418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
          432, 433, 434, 435, 515, 499, 486, 476, 468, 463, 519, 503, 490, 
         480, 472, 436, 516, 500, 487, 477, 469, 522, 506, 493, 483, 525, 509,
          496, 528, 512, 531, 464, 520}], 
        LineBox[{504, 530, 491, 527, 511, 481, 524, 508, 495, 473, 437, 517, 
         501, 488, 478, 470, 465, 438, 439, 440, 441, 442, 443, 444, 445, 446,
          447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 
         460, 518, 502, 489, 479, 471, 466, 521, 505, 492, 482, 474, 523, 507,
          494, 484, 526, 510, 497, 529, 513, 532, 461}]}, 
       {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{536, 638, 622, 609, 599, 591, 586, 537, 538, 539, 540, 541, 
         542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
          556, 557, 558, 559, 639, 623, 610, 600, 592, 587, 643, 627, 614, 
         604, 596, 560, 640, 624, 611, 601, 593, 646, 630, 617, 607, 649, 633,
          620, 652, 636, 655, 588, 644}], 
        LineBox[{628, 654, 615, 651, 635, 605, 648, 632, 619, 597, 561, 641, 
         625, 612, 602, 594, 589, 562, 563, 564, 565, 566, 567, 568, 569, 570,
          571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 
         584, 642, 626, 613, 603, 595, 590, 645, 629, 616, 606, 598, 647, 631,
          618, 608, 650, 634, 621, 653, 637, 656, 585}]}, 
       {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{660, 762, 746, 733, 723, 715, 710, 661, 662, 663, 664, 665, 
         666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679,
          680, 681, 682, 683, 763, 747, 734, 724, 716, 711, 767, 751, 738, 
         728, 720, 684, 764, 748, 735, 725, 717, 770, 754, 741, 731, 773, 757,
          744, 776, 760, 779, 712, 768}], 
        LineBox[{752, 778, 739, 775, 759, 729, 772, 756, 743, 721, 685, 765, 
         749, 736, 726, 718, 713, 686, 687, 688, 689, 690, 691, 692, 693, 694,
          695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 
         708, 766, 750, 737, 727, 719, 714, 769, 753, 740, 730, 722, 771, 755,
          742, 732, 774, 758, 745, 777, 761, 780, 709}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], 
        LineBox[{197, 203, 196}], LineBox[{199, 200, 198}], 
        LineBox[{202, 204, 201}], LineBox[{403, 407, 402}], 
        LineBox[{405, 410, 404}], LineBox[{409, 411, 408}], 
        LineBox[{534, 535, 533}], LineBox[{658, 659, 657}], 
        LineBox[{782, 783, 781}]}}, {{}, {}, {}, {}, {}, {}, {}}}], InsetBox[
     TemplateBox[{
      "0.010000000000000002`","0.05`",FractionBox["1", "10"],FractionBox[
       "1", "5"],FractionBox["1", 
        RowBox[{"2", " ", 
          SqrtBox["3"]}]],FractionBox["1", "2"]},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox["\"\[Sigma]=\"", {
                 GrayLevel[0], FontWeight -> Bold, FontSize -> 8, FontFamily -> 
                 "Arial"}, Background -> Automatic, StripOnInput -> False]}, {
              
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontWeight -> Bold, FontSize -> 8, FontFamily -> 
          "Arial"}, Background -> Automatic, StripOnInput -> False], 
        TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold", ",", "8"}], "}"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"\[Sigma]=\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.75, 0.55}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0., 0.},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
     "AxesInFront" -> True},
   PlotLabel->FormBox["\"Triangular distribution\"", TraditionalForm],
   PlotRange->{All, All},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[
     GraphicsComplex[CompressedData["
1:eJzFmnk0VW3bwE9FRFSkolSGJlIUTdR9FGlAZUgqSqkkGYqeIhlCFJkzho6j
QcMxbJkdM+cYkpAj85SjMpQhRb79rufZ135XrXe93z/f+vqnda299+267mH/
rt85R+qMjd65mRQKRWYWhfKv/0tMpdqmp6eZlH/+LfILXBUl+QviXcqFHTSR
SYhbrj+m6cn9gDhP94vfg4PfIXZ4ODKwV2MMYroPwyD21AjEzwbkFM31vkI8
1M2/JVd3COKTw8puNz98hthTgONmVN4HcbRp9z33H90Qb63H+utRB8RTjnMt
eSyaIL5U4LxgqqkW4rMNHSsOGZUwXVtyn7+qikdjb64wxcQSmNSyntDtBkxk
zLtYhd8mFeWm+N38/oSFEr4OjnG/s9BsA4tNy1Etssv+0HAnqA5JuBra1Ou8
RyqROz/0sZvRPuaDsvzyZjQRIRB107oT3d8p6j5frANx5ecxlTf1og0j+Rr3
wrqQQmXQuKhWPzqOLRFbebgXuSsxVscvGkC7dBp8XJr6kNyO2xRP7hDiVTax
MeP2oZwzA+MHh76i3frVji9VetH7Lwn9lnUjiBXB6diQ1IWWUR5ekOwYQ4UN
O1QfjLSjFW5KWard31FtIlfD614zem4uwp9S/AOljAWyD9x9j06/2dSeXTWJ
HDf2Kn9YVotiomNTJbFfKPFyy4sXi9lI57PBK4d9FKrY7SNrMtfmo/aqCa3V
B2dQ5VgOLxw8E1B6u0abu9pMKjGfMukM1XW7Z0H8Li8/1GkLD8RdznFNs1bz
QnyHEtddv242xLaY5mf9ZXwQD8gLZi6V4Ye44nisrfiqORB/zuKsKhITgJjW
ujnutYQgxNGblZccFZ4L8Sia5SQ/RcZd877SDlCEIRZbcKdc7CsZn2UEDE5P
zyPzcTB2rxImz0f0C+tHdK8qiE/fzfMPic5iUk50Ong/xFDjr5X+HzZ8RlWu
f705FPoRfaptCm4YGURNGfuctcX70dXqbTf7Pg8jepGYwx3/j2iRyZqfVSwK
1XLUOmjR3TSkbRQbXFc0g2ooOSAU6HUefTnoKHSUSc63Wrtgs8ANMr/jlrlJ
5++Q+TXfk0he86YGYrZfe2qlXgEzf39BxSmPV8i9x7hofMcnFCKx72v61160
ZaZmSw7vIJp7239W7w0u0uUxzdtyaRjVO22/Yq/Wh1Jk8+qkfCjU/Clv2+Iv
WehBUOVl5zszqJTnBrmtXx4gvQenrn12JvN7en2/XoAKmZ+r+tP2CWsWk1L/
6ml1WSBSWNJ3nCn9BfF+fPzi49Y+VHNk26rvdkOo9uIibpk3FzmFBkg5CuDj
fzHALFYnoZnLrmTKU8jxa7Sqz3nmkOMHmA9qpRaR9dNXa5uJ1L8l32ebOrhC
hkXM0GCmKt+6Z6jx2LUW3oJ+dP1C0iyrR72oWfzHDMX7A2hVX0rpJjkuUou1
bTORG0ZfjCqG+oP6kKu3T0GFBYXaP+PBqajYXKSq2NV05CK+PvMCPDfdikMe
qrWJW03I/Fo1LITeiZL5Cf8lqP7GsYJJ8ZbSlLzuhNzv8ThUPf2MuJvn5UX1
fkTxLUHpSluGUCbPt1VOjVy0b+KEsGw/hUodNotHjSnoSab3akrnDBhv9sIv
K8sj/63+fv+M/c6D6KukFTWCxUXDI2mUZwkzqInWIm1JeT7oq6Cmq+zZMiZl
nxjlQXI0OnnrhLbRcjLfSCdG4u5WcrxEM+9gTgc5n/wj5pl8x8j3p5pHh8eG
o8VM14y8b8edHiP3II/+uR79iOtnPrf0ei9iJBiEXNQbQCmRGmuNZ3JR6ucJ
m+E5w2hCc6Hi6rw+dH7HYHrcMfz94rHsvdf3PCTsYr1A7Tj+fvk8U7xuRjxa
fl9Qs0WbzO9H4rjlyEwyv/oFO4czXSvx+dQz3hF0FCmUiLjXXfqMjh8vKh3N
/Yh8ZfJddZcMIQU9s2IDSj/a+LyAZ4JDoRpe7ZOQV8KQI/9Ck/5acj6lHG/e
4vqQ45+91n/gtvogcq2ZesR8xEXFe9S3Bj/A7x+2fhDVG4gyH19TnHexnOkq
fMYgRS0MbazqdVefR+ab1rGL37yKHE+rmRPQbc9mUraOT9QneKOssHMDCw2G
kGa6x51HSVxUZzk1KDZM5pNnqrJ6fuYgOn+pqfXKMBctfyzHzsPw9RzzkzY8
7YJuia3UkRokx9/WbpD5eYhcr6zjdufcI8j1OvzSrDavoZhJOZj3xkM2AR1j
CNoFnOtH0o/y5l8170Xhn9xMvJQH0PerQsZWA33IOnjXtuyJIUTJzXhT9K4P
HReV3nzvML5eJW1Bk3Qm+ms1tj5ZD8/neE4nfQ8dWW5dK5KkQdbPb8oU9/xB
vk+3tRnuZ8wi35czOyP4j+l8RiGXJStozz4it9KjPSfnDKHe6+HB6gvxvDxG
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

      "], {{{}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroup[{
           
           Polygon[{{137, 802, 803, 139, 172, 58, 156, 189, 123, 150, 183, 94,
             115, 142, 175, 68, 84, 105, 132, 165, 35, 74, 90, 111, 138, 171, 
            57, 67, 83, 104, 131, 164, 34, 33, 32, 31, 30, 29, 28, 27, 56, 66,
             82, 103, 130, 163, 26, 73, 120, 147, 180, 89, 153, 186, 110, 
            192}}], 
           
           Polygon[{{108, 800, 801, 170, 55, 194, 155, 188, 122, 149, 182, 93,
             114, 141, 174, 65, 81, 102, 129, 162, 25, 72, 88, 109, 136, 169, 
            54, 64, 80, 101, 128, 161, 24, 23, 22, 21, 20, 19, 18, 17, 53, 63,
             79, 100, 127, 160, 16, 95, 116, 143, 176, 71, 119, 146, 179, 87, 
            152, 185}}]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroup[{
           
           Polygon[{{341, 798, 799, 376, 262, 399, 360, 393, 327, 354, 387, 
            298, 319, 346, 379, 272, 288, 309, 336, 369, 249, 278, 294, 315, 
            342, 375, 261, 271, 287, 308, 335, 368, 248, 247, 246, 245, 244, 
            243, 242, 241, 240, 239, 238, 237, 236, 235, 234, 233, 232, 231, 
            260, 270, 286, 307, 334, 367, 230, 277, 324, 351, 384, 293, 357, 
            390, 314, 396}}], 
           
           Polygon[{{312, 796, 797, 374, 259, 398, 359, 392, 326, 353, 386, 
            297, 318, 345, 378, 269, 285, 306, 333, 366, 229, 276, 292, 313, 
            340, 373, 258, 268, 284, 305, 332, 365, 228, 227, 226, 225, 224, 
            223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 213, 212, 211, 
            257, 267, 283, 304, 331, 364, 210, 299, 320, 347, 380, 275, 323, 
            350, 383, 291, 356, 389}}]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          Opacity[0.2]], 
         GraphicsGroup[{
           
           Polygon[{{412, 792, 793, 520, 464, 531, 512, 528, 496, 509, 525, 
            483, 493, 506, 522, 469, 477, 487, 500, 516, 436, 472, 480, 490, 
            503, 519, 463, 468, 476, 486, 499, 515, 435, 434, 433, 432, 431, 
            430, 429, 428, 427, 426, 425, 424, 423, 422, 421, 420, 419, 418, 
            417, 416, 415, 414, 413, 462, 467, 475, 485, 498, 514}}], 
           
           Polygon[{{504, 794, 795, 461, 532, 513, 529, 497, 510, 526, 484, 
            494, 507, 523, 474, 482, 492, 505, 521, 466, 471, 479, 489, 502, 
            518, 460, 459, 458, 457, 456, 455, 454, 453, 452, 451, 450, 449, 
            448, 447, 446, 445, 444, 443, 442, 441, 440, 439, 438, 465, 470, 
            478, 488, 501, 517, 437, 473, 495, 508, 524, 481, 511, 527, 491, 
            530}}]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          Opacity[0.2]], 
         GraphicsGroup[{
           
           Polygon[{{536, 788, 789, 644, 588, 655, 636, 652, 620, 633, 649, 
            607, 617, 630, 646, 593, 601, 611, 624, 640, 560, 596, 604, 614, 
            627, 643, 587, 592, 600, 610, 623, 639, 559, 558, 557, 556, 555, 
            554, 553, 552, 551, 550, 549, 548, 547, 546, 545, 544, 543, 542, 
            541, 540, 539, 538, 537, 586, 591, 599, 609, 622, 638}}], 
           
           Polygon[{{628, 790, 791, 585, 656, 637, 653, 621, 634, 650, 608, 
            618, 631, 647, 598, 606, 616, 629, 645, 590, 595, 603, 613, 626, 
            642, 584, 583, 582, 581, 580, 579, 578, 577, 576, 575, 574, 573, 
            572, 571, 570, 569, 568, 567, 566, 565, 564, 563, 562, 589, 594, 
            602, 612, 625, 641, 561, 597, 619, 632, 648, 605, 635, 651, 615, 
            654}}]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          Opacity[0.2]], 
         GraphicsGroup[{
           
           Polygon[{{660, 784, 785, 768, 712, 779, 760, 776, 744, 757, 773, 
            731, 741, 754, 770, 717, 725, 735, 748, 764, 684, 720, 728, 738, 
            751, 767, 711, 716, 724, 734, 747, 763, 683, 682, 681, 680, 679, 
            678, 677, 676, 675, 674, 673, 672, 671, 670, 669, 668, 667, 666, 
            665, 664, 663, 662, 661, 710, 715, 723, 733, 746, 762}}], 
           Polygon[{{752, 786, 787, 709, 780, 761, 777, 745, 758, 774, 732, 
            742, 755, 771, 722, 730, 740, 753, 769, 714, 719, 727, 737, 750, 
            766, 708, 707, 706, 705, 704, 703, 702, 701, 700, 699, 698, 697, 
            696, 695, 694, 693, 692, 691, 690, 689, 688, 687, 686, 713, 718, 
            726, 736, 749, 765, 685, 721, 743, 756, 772, 729, 759, 775, 739, 
            778}}]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Line[{1, 158, 125, 98, 77, 61, 51, 2, 3, 4, 5, 406, 6, 7, 8, 9, 10, 
          11, 12, 13, 14, 15, 159, 126, 99, 78, 62, 52, 168, 135, 191}], 
         Line[{108, 185, 152, 87, 179, 146, 119, 71, 176, 143, 116, 95, 16, 
          160, 127, 100, 79, 63, 53, 17, 18, 19, 20, 21, 22, 23, 24, 161, 128,
           101, 80, 64, 54, 169, 136, 109, 88, 72, 25, 162, 129, 102, 81, 65, 
          174, 141, 114, 93, 182, 149, 122, 188, 155, 194, 55, 170}], 
         Line[{137, 192, 110, 186, 153, 89, 180, 147, 120, 73, 26, 163, 130, 
          103, 82, 66, 56, 27, 28, 29, 30, 31, 32, 33, 34, 164, 131, 104, 83, 
          67, 57, 171, 138, 111, 90, 74, 35, 165, 132, 105, 84, 68, 175, 142, 
          115, 94, 183, 150, 123, 189, 156, 58, 172, 139}], 
         Line[{193, 112, 187, 154, 91, 181, 148, 121, 75, 177, 144, 117, 96, 
          36, 166, 133, 106, 85, 69, 59, 37, 38, 39, 40, 41, 42, 43, 44, 45, 
          401, 46, 47, 48, 49, 167, 134, 107, 86, 70, 60, 173, 140, 113, 92, 
          76, 178, 145, 118, 97, 184, 151, 124, 190, 157, 195, 50}]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Line[{205, 362, 329, 302, 281, 265, 255, 206, 207, 208, 209, 363, 
          330, 303, 282, 266, 256, 372, 339, 395}], 
         Line[{312, 389, 356, 291, 383, 350, 323, 275, 380, 347, 320, 299, 
          210, 364, 331, 304, 283, 267, 257, 211, 212, 213, 214, 215, 216, 
          217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 365, 
          332, 305, 284, 268, 258, 373, 340, 313, 292, 276, 229, 366, 333, 
          306, 285, 269, 378, 345, 318, 297, 386, 353, 326, 392, 359, 398, 
          259, 374}], 
         Line[{341, 396, 314, 390, 357, 293, 384, 351, 324, 277, 230, 367, 
          334, 307, 286, 270, 260, 231, 232, 233, 234, 235, 236, 237, 238, 
          239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 368, 335, 308, 
          287, 271, 261, 375, 342, 315, 294, 278, 249, 369, 336, 309, 288, 
          272, 379, 346, 319, 298, 387, 354, 327, 393, 360, 399, 262, 376}], 
         Line[{343, 397, 316, 391, 358, 295, 385, 352, 325, 279, 381, 348, 
          321, 300, 250, 370, 337, 310, 289, 273, 263, 251, 252, 253, 371, 
          338, 311, 290, 274, 264, 377, 344, 317, 296, 280, 382, 349, 322, 
          301, 388, 355, 328, 394, 361, 400, 254}]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Line[{412, 514, 498, 485, 475, 467, 462, 413, 414, 415, 416, 417, 
          418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 
          431, 432, 433, 434, 435, 515, 499, 486, 476, 468, 463, 519, 503, 
          490, 480, 472, 436, 516, 500, 487, 477, 469, 522, 506, 493, 483, 
          525, 509, 496, 528, 512, 531, 464, 520}], 
         Line[{504, 530, 491, 527, 511, 481, 524, 508, 495, 473, 437, 517, 
          501, 488, 478, 470, 465, 438, 439, 440, 441, 442, 443, 444, 445, 
          446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 
          459, 460, 518, 502, 489, 479, 471, 466, 521, 505, 492, 482, 474, 
          523, 507, 494, 484, 526, 510, 497, 529, 513, 532, 461}]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Line[{536, 638, 622, 609, 599, 591, 586, 537, 538, 539, 540, 541, 
          542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 
          555, 556, 557, 558, 559, 639, 623, 610, 600, 592, 587, 643, 627, 
          614, 604, 596, 560, 640, 624, 611, 601, 593, 646, 630, 617, 607, 
          649, 633, 620, 652, 636, 655, 588, 644}], 
         Line[{628, 654, 615, 651, 635, 605, 648, 632, 619, 597, 561, 641, 
          625, 612, 602, 594, 589, 562, 563, 564, 565, 566, 567, 568, 569, 
          570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 
          583, 584, 642, 626, 613, 603, 595, 590, 645, 629, 616, 606, 598, 
          647, 631, 618, 608, 650, 634, 621, 653, 637, 656, 585}]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Line[{660, 762, 746, 733, 723, 715, 710, 661, 662, 663, 664, 665, 
          666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 
          679, 680, 681, 682, 683, 763, 747, 734, 724, 716, 711, 767, 751, 
          738, 728, 720, 684, 764, 748, 735, 725, 717, 770, 754, 741, 731, 
          773, 757, 744, 776, 760, 779, 712, 768}], 
         Line[{752, 778, 739, 775, 759, 729, 772, 756, 743, 721, 685, 765, 
          749, 736, 726, 718, 713, 686, 687, 688, 689, 690, 691, 692, 693, 
          694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 
          707, 708, 766, 750, 737, 727, 719, 714, 769, 753, 740, 730, 722, 
          771, 755, 742, 732, 774, 758, 745, 777, 761, 780, 709}]}, {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         Line[{197, 203, 196}], 
         Line[{199, 200, 198}], 
         Line[{202, 204, 201}], 
         Line[{403, 407, 402}], 
         Line[{405, 410, 404}], 
         Line[{409, 411, 408}], 
         Line[{534, 535, 533}], 
         Line[{658, 659, 657}], 
         Line[{782, 783, 781}]}}, {{}, {}, {}, {}, {}, {}, {}}}], {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0., 0.},
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
       FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
        "AxesInFront" -> True}, PlotLabel -> "Triangular distribution", 
      PlotRange -> {All, All}, PlotRangeClipping -> True, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]]}, {0.010000000000000002`, 0.05, 
        Rational[1, 10], 
        Rational[1, 5], Rational[1, 2] 3^Rational[-1, 2], 
        Rational[1, 2]}, LabelStyle -> {
         GrayLevel[0], Bold, 8}, LegendLabel -> "\[Sigma]=", LegendLayout -> 
       "Column"]], {0.75, 0.55}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{3.686492376901516*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"pdfNormal", "[", 
    RowBox[{"x_", ",", "\[Mu]_", ",", "\[Sigma]_"}], "]"}], ":=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{
      SqrtBox[
       RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Sigma]"}]], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"]}], "/", 
      RowBox[{"(", 
       RowBox[{"2", 
        SuperscriptBox["\[Sigma]", "2"]}], ")"}]}]], " "}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.6764622317264*^9, {3.676462275865959*^9, 3.676462333498724*^9}, {
   3.676462386203244*^9, 3.676462388994298*^9}, {3.6764661175139837`*^9, 
   3.676466119114414*^9}, {3.6858783952263327`*^9, 3.685878395869927*^9}, {
   3.686489487397819*^9, 3.686489487780006*^9}, {3.6864923906765003`*^9, 
   3.686492391356058*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"pdfNormal", "[", 
      RowBox[{"x", ",", "1", ",", "\[Sigma]"}], "]"}], "/.", 
     RowBox[{"\[Sigma]", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "/", "2"}], ",", "1", ",", "2", ",", "5", ",", "10"}], 
       "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "4"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{"sigs", ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", "Bold", ",", "8"}], "}"}]}], ",", 
        RowBox[{"LegendLabel", "\[Rule]", "\"\<\[Sigma]=\>\""}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.85", ",", "0.55"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Normal distribution\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<../abecker/SwarmPublications/JournalTorqueControl/pictures/pdf/Normal.\
pdf\>\"", ",", "%"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6764623486045923`*^9, 3.676462394184904*^9}, {
   3.67646603305241*^9, 3.676466039085231*^9}, {3.676467095974711*^9, 
   3.676467144451521*^9}, {3.684635469667963*^9, 3.68463547031621*^9}, {
   3.6846355483145647`*^9, 3.684635568532795*^9}, {3.6858783357458363`*^9, 
   3.6858783419697123`*^9}, 3.685878376107827*^9, 3.685878440305669*^9, 
   3.685878497813159*^9, {3.68589091816007*^9, 3.685890965741509*^9}, {
   3.6864894614618263`*^9, 3.6864894618034267`*^9}, 3.6864895181740313`*^9, 
   3.686492336846787*^9}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
NJBTa/q0VoM40aX7eZS8jj1PX9NaOq1OnOdwuqLEuoZtLu6ZND5nTVzRqzY1
o17BnattdjvTQoiQdxRlRjuX8CA6L5L4J4OQCZzdZnRqAc8PnepKiaggmpz3
5AgdncPd3DNWmak9RM3V4LtHz89g05GuI+zCK4RRp8GCiuIUzo85sfz1OxeE
OhgTH4CM61Lt2sPmJECYQ9agt2AUC6blCXI5K4HINdHWoYwhPN6g/bflgz5o
97SKvGnvw9ubuNh4O6zB3Yz+3O3d3bjJ4MTIvkv3QIpWVTJerBVTtSjxpjWF
QsFlh2s+z+px2h4tEzaZBNB6Y15f0vQVr14rr8B6r0GoWjjU42gKFhenb7T5
/An0NToeCzjlAU1NlEF2VRl8k0jbp+74HdiurN8TpKiFgJKDRrEhPcB+rUIh
dLwbRlX/5LddGIBXpJ+aPUr9oP+O2SH82jB0XC96dZ96CGJGvI39ZcZhnKZA
XcV0Y36PJE4ULpLB8GLTwbZLJODa7Ttxa30KJrNitPhrB8Eq7ZFnXd8MKHX8
Vh081A8UN/7oLTUsAVOnIJ+wdQN8P/pzfLx9BQpYPlxmZKoBz/FBQZryNaBr
I41/jC+Dy5x7pIO1KBAWr2kaDf4Et0XyDmVfoETRT4JZLKhfg9XxAxzvlanQ
woMkvbiziWAGXj9/nKVGkWfaTb7cCYWaosG/8/I0yNtLfjfjSU9YcCNb7ZGg
RV2MGX01726BiERHw83DdOitTfjeit36cKjr9cGgffTIIMWJz1xaGa7VVqaJ
iTEgW7nq9IJ4cagRP1uSeIgRXbU49qb/6w5gCskqHeZnQq0zVScbzFYJte7p
OJ09zOjedMzTzqVuYv21WnkNFwvq+ClUf8n6G+H8UdFZmZYVZa3zFjyZzyRG
PwmsNNOzocMTV5XhUzDBYIJ5/ZbY0GwO55jGSRvCbD7EqGB9DVMYvGwvszEk
eq8FK1TSr+LPLfuovsp5ELl3TqET7Mv4FdP5t22WccQ9vtRPa2KLWMRyeIi5
4BMRLuWmkHd8Hg9e+ffNTb6BGB9e76tVnMX/GXfrfT9LJjT/O0t6qjqNC2X1
iAtLDODZonrXCU3idsYl34SAPdDqqvHQOnEcWwnc+Tr19gR8Fghp0coexnK6
9onfzp6Hw+ySpmtlA1ialF7x+b0FJPErNemt9+DfKnF6u/ScQVbUrI9PuhNb
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
6S3PtdfNODQkwqa3tNUct3jsmrrlLXPmvt8MiMnc8pYmB50CIorfb3lLsfHM
I1/3f9jyllKDf2J9yJ+3vKXtiWQTEcBb3tI2qzh9Z0PZ/7zlU2tSOfe3LW8Z
pj309Hlr9Za3bKr8cjkmp3bLW74YfLGj7lXdlrcMOJZFpR9dv+UtdbkvPxNW
/Z+3fNL01dNuqnHLWxZofr2rp/d3y1vyDjOZPjNq3vKWCwMpY08FW7a85b21
ad1Ej5Ytbxklocv66l7LlrdMteOWmuZr2fKWZqBzS/Ra85a31Ev53Sp55u+W
t1QSCDVn6W7c8pbRR1BrrOH/vGWBP2WtfWD9lrfcn9M4NFNUt+UtLx89EXm3
q3bLW3IX+oT4UX7f8pb84kTwA79vW96SlsxdeXyhbMtb1pdHqOxtwVveMqHA
0+q2S8GWt7QZ+f3yseaHLW/JkLzuLHwge8tbMmbfWZL4kLnlLZmF+Si4H6Vu
eUvKnIow3cIk2PSWCR1O42zPnsKmtxQMDdPlT4mATW8Z7OVyx3R/EGx6S216
2ojKBB/Y9JZFcmK/eD67w6a3rPi/62HTW+KjN6ldklxg01v2hl0U2vHdEza9
pbjgvrEXL/xg01s+dq2/oxXwCDa9pXnSJW3ubVGw6S13MQsXig3Gwqa3zFM7
HLKtJnnLW15t0eOhN0vf8pYNCjNR+n1vIChX13fhZhfc0Nj/XOJN05ZvzBui
oEzu+bvlG+NOjakUfm/e8o0zcqmkCYOWLd/YZnA0TSmgZcs3Un4jRPk3Pt/0
jQMONatuG7/f9I0PlfSt6Lr/QiIaDM/qmYe9kpEfv8U3bXlCqwnWlu8X3255
QkWqxm2ebulbnvAt5dObSdwvtjxhbLlKo7t1HGx6wtDylsv9dlGw6QnjJXs8
um+FwqYnnHjYr/zfLn/Y9IQ8uxRXdz+7D5ueMEJSizWNwxU2PaFA4em5HfVO
sOkJ0/mTGlUFPWDTE1pp19r3zzyATU8Yejq3d84sGDY9IcPEuoHko8ew6Qmp
ngfmSvA+g01PWBE4Emn6+PmWJ2whFci97X655Ql3oKTtp45mQarX9OStX52w
L+qmWY9205bfa+so7Hif+HfL7505mpOe9KR5y+/Rar/+uw21bPm9kKT48BN+
LVt+z1s+UD/JtmXL7wln27GYzTZv+T1Kms4/Q8LNYCyouNJnPg8u3vTXlWea
trxc1pOOjtq977e8nKhCA80h1owtL8cbyvN57GzKlpdjsayk5nmQAJteLlzt
etGthWjY9HJUukOP/rsSDpte7k7kDi1u9gDY9HJpckUJGge8YdPL9d1INKvX
uAObXi5DylHsUcRt2PRyvlbFj+sbvWDTyxnIv7h92O4hbHq5u3vJ5pwNYbDp
5X5FsXqNZ0VDWdq7MNlb3UBbsttlB83fLX8Wamc4syzUvOXPoi6LuX1daN7y
Zw35u1P3bpzPTX+mS6MWU7xxvjf9GZHybPWwfMv//JmN62nj2OYtr7V66uPx
k07PYNNrqekyxLisPYZNr6WrSCXz8EQIbHqtS64OnBc0fGHTa30T2ZZ7kuMe
bHot7Wsb0ym9M2x6re209cYOC46w6bXoLh0SlfnnDpteK0ufYZpd9AFsei0m
5fCz1y4HwabXusT5XyJXYwRseq0XdXP8Q6diYNNr3bfjUlFbSIJNr3U1+cjV
UtGXW15L+o8PTezV13DrUczAwdoOMD6pm52xp2nLR/FHfzvEdvfvlo/iXpI8
fMm9ectHWXhLmdEdbtnyUQprOpwJ3i1bPspt52D+tGvLlo+CQebERoaWLR9l
dE/ZGak0g1z4xGFvoXmwuCm/T0vg75ZHYrA2GQtIfb/lkQgnNc64zowtj6S8
h/3AfVLKlkfaeeasJFtcImx6pNI5F4nMiiew6ZF0aBzYn1NEwKZHumezfc6O
OxA2PZJW4iWngn/esOmRHhMLjO4ebrDpkZZtKtS/RrrCpkfKmoyTb+T1gk2P
5M3DQTXr6w+bHomvjcksICMUNj1SCL1JpVRbFIiIUwXxjnSBaJed/JGWpi3f
8/z3uY+9VM1bvuel9/w9357mLd9D83Z+75erLVu+J61gN8552LLle+xLJN2n
1Vu2fA+ejozYltu85WFG/oS2+FjHwqaH0TNiir+cFwmbHoZ3p9fxI5qPYNPD
nEEsNWOSfrDpYTS66Vcqz3vCpodpPmDNdobeBagCkDNDwSDsHWi0sMlu3vIi
1Kdkv+eda9nyIiyKzUftN/Z304ssvS/zy9o4nk2PwP3nRj3PxnrZ9AjB4ukP
rvq0bHmEAz6+fm2HWmCz3x+VKDtO2u4Em/3+C5mHrpeHOsJmv3+O30vbVskd
Nvv9LzJHi+oqfGCz3+95v05IvTUQNvv9zxoCHTTvRsBmv19eUul56q+nsNnv
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
J38Za5zK4PqpRuGcl9OtExhcP907bZ97jFEcg+unu5ulVKcMRDC4ftoT+Khp
g2cIg+unHaNy+852+DKB0yZIlRm2Mkb2j9XHQr2K64sPNTv6BXpCWl+UM4np
Pw33B1xffFWzIO2gh5DWr9T8JtpqeQpp/Spmg8sXZ9gf16/u9+evXqkjZHA9
6NZPLZ+2Vh9aj2FVL+6eDvcTXI8ZOaLpwz+4n+B6xKLRyieGuAhpPSI44WJC
JMxv9H77f6NVLkCMvm9vGM3uh/d/9P1YQd72JrifoO+HGupYDun2ZtD3Y+ak
Tm+F92P0faWimhcT4Pqg7y99uXVCNdwf0PfV+zKS6+B+gr6/+aLCtxFwP0Hf
P7nYSZ8F+6Pvt7SXTFWC8dD326eN+dgb5M2g7xttr5VeCtvR97MaZ6gthc+j
79cc/RirAr8Pfb9Jw1TvM8To++yKY9YCiNH3i9tLi1dAjL5v+qqGuwLGR9//
PnpC4FcDbwZ9//m8bV6SCbnk+9Hvvzu0T8wj369UbMg4eT+ffP/fxIqOMZ4F
5Pt/MkY+VVO8Sb7fU5ul+rWviHx/3NvzYSWVxeT76+5FDT1TXEq+37347pbc
a3fI92unJ3n/XFVGvl/o5qCWqF1Ovv93dOtNNZUK8n29TKX/FvdXkO9fvK54
0e5DJfk+d7L+vXpuFfn+yln3f8dFV5Pv2/4oWdVtfI98P3Dph9CIH/fI9y/v
t1FdlXiffH+mj05EnjyPfD/Kdll9RiKPfP9a0XL9Yb945PtZn/qcR6zgk+87
ifeM0tjLJ9/nTtj61zaCT75f9XBJ6HmI0fer/Ex2VLnzyfdzLE6UrVrFJ9//
4r7w788fPPJ9yRu+jeUneeT72XdSff1UeOT7x2eHBRw4dZ98n7W3e67373vk
+7ITN2jEbr5Hvh/V6TOafaqafD/m+a6apEdV5PsqKksFjd8qyfcP9Z+L9phU
Sb5/PC7rqNbSCvL9pE7Z77565eT7HWpjxydYl5Hvd7dfffmde4d8v69n43X/
ilLyfYvCqI0mP4vJ97/eTlvAl7xFvp9wqiLw3dqb5PsW4n2dfskF5PtWjqqN
nQ355PtXY2ZsqNPPI9+vH5wP6Pue5+Nn3TXnMPXZo22KrguYJ+tKV02045G3
e9Qkaa7n88jbw50zspYo8snbhz2vi9pqzSdv77vd23PlEJ+8/fsh98ero/jk
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
FmeTZ1Qs031nMo5NnuEuf+CYpQKbPOPc1HPVL2awyTOuzpPv9lnIJs8wM7/f
IK/NJs8Ym2yk4qjHJs/wdFk1OnYdmzzjV0uzXJkZmzwjuu5Kfaklmzxj1NVQ
p71b2eQZyVJpbf3b2eQZeVv15io6s8kzDjpO2WbuyibPmKt+VPrkbjZ5Rl9N
yowF7mzyjOs3Zhi2QYyeYfdV3/UbxOgZbycYuEyDGD1j3kM1j4swHnrGWKHb
roXwfegZO1703v7hxCbPiLva8W6hI5s8Y8uExz0b4PegZ0yYx7D+wO9Fzxho
q1023pxNnsH5+aBLCOcLPUOt/OmFHfps8oynk7IrguB8o2eYF+5b6qXOJs+4
bNYY92Ymmzyj+n1NOheuJ3rG3WlnX50czybPkJ769lkB5AN6xmKdIF0TyBf0
jLOFrRenfGaRZ0zzDWwa/pJFnnH3BxPL1LDIM265GyYqlrLIM7YnCA1+QT6j
Z8Tk7nA1TmGRZ+B8QM/YtsI9K+cEizzj2jS1gIf2bPKMUZKXgtV2sskzFr1L
M3ziwibPUFAqqo90Y5NntCybahqwh02e8bn243c2XF/0jImrjGYO82CTZyht
11zJgu3oGSOX7K/yh8+jZ2wbu8U8HMZHzzCKaPa6Ct+PnqFodVJTdHzoGecn
xRkK4fjRM3zPXr5VcJJFnvFPP9lvUwyLPENuf2kFaxubPONLr660/A42ecbp
osM2/ZD/6BmPm4c7/IB8RM+YLSX1dxQcL3pGplePnyf8HvSMgqk2X/ohRs84
1OUSVQcx9TNMsmurh8+jZ7B3nNOWh/xHz9BZ4D9s/y42ecZ4c83FEyH/0TOM
G25vGAXzFT1jYfD2H0cTWUz4tBkpj0tfMvPuXtGYDfujbwgmDHQlwXjoG2XD
FxVLi+bboG+4Ms0Sr+B40DfqCsceewTHi77xMO1T3wDE6BvVIWKRbhCjbyxZ
NPv7RPg8+kZOT2hBE5wv9I1t/hq8F3D+0TeGWrya+F80i3xjTrFVlBRcD/QN
1X3cguMwv9E3jv5YvzsOrgf6Rt3HSxtZMD76xiy7+7fq4Pegb8i61K03g+ND
37A9djmiB2L0DaOFVZeaIEbf+PtUNu0vHD/6RljlKKntMB76Rmvg1K31cP7Q
NxadmLMrHM4v+kZSTeCaNLge6Bs8D6t7X5JYzLWPZ/2rCoTMZE7XiWzIV/SO
8qfKa7VgPPQOruDBskeQ7+gdm5MLt10T5degd8g9O7usBI4XvaNhQVi/GMwn
9A6N1/vHRcF29I7USq+NRvB59I5kNk9bE8ZH77AfutPKKI5F3lH8n7pgtej6
D3rHAUux3BgYD71D33y5r+j70DuGXVk8XnQ86B0LTJRMM0Xzf9A74qV0Wxph
O3rHs1VBSr0Qo3f4WLaxDCFG75h7zHqME+QDesdydu3eEVEs8o6rZmfqS+H+
jt7xzaph1VrID/SOBeNuc7dAfqB37L5RkRcA+YHe4XfRaVMuXE/0jtIWmSQG
vh+940BmWnknxOgdefUOP1ohRu+4mqPSNA5i9I4m7tqswzAeeseyIPOaofB9
6B0FF7W/lUB+oHecazH41wr5gd4x0vh6kEIyiynjbXJbpSFkus4p/HSD/ED/
mDS8U30Y5Af6R92Sgh1X4fqhf9j3FVTEi67XoH8cKp/pkwvHh/5hV6DcLg7X
C/1jj/Cq9BnR8Q/6h7/d1l2O8Hn0j5FP1fK3wvjoH2sStPaGwPMB/SPN/32D
muj6DvrHqYTtXUEwHvrH2JHDYobA96F/vDl45WY1bEf/eHT8asAdUT4P+scG
9/GTX4jyZ9A/ysXaW/9AjP7h1/xgiA3E6B83XWaaXTjGIv9gPdeO74Pt6B+b
W7zCBBCjf+wR6OiKvh/940ylp9VQOD70jyGVfzJF5wf9Q6LoXPcH2B/94/Ct
5AtdEKN/rDnd+U8N8hH9o2DKZYeASBb5R0HwlvxEyE/0j1FrZyyaBvmJ/qEU
ekhKG/IT/cNvhoSyC+QL+kd+uqpJOuQT+oeDx/geLdH9dtA/NCUWKXwX5eOg
f/gHqxl9hRj9Y1ld3HI5iNE/XimxZp6G8dA/hvqX50+B70P/+JYo7vEC8hP9
44Ze8KjRcLzoHwtWp8XmQ34+uLXQMbBDwHAvWGxZB/mJHjLVrrbhCzyP0UPi
t1rkJUP+oIdw95ybHgnXGz2k0VOXnw3Hhx5ikBKmInofQA+ZI7G24pzo/jbo
IRZf9HM84PPoIc/vXDrvBeOjh4jFbsuRh+c7esh9xyvh8rA/eojygZaHB2A8
9JCn04PM/0GMHrLh2ZviB6Lnw6CHnJ7/dj0fPo8eMuoev/UpbEcPKbXTjhI9
z9FDPuaW2DtCjB6iszhyhg4839BDxmavYonud+ghmp6d11+L7s+DHjJ0verm
MojRQ4LiDfVE91f0EJcrn2eI8hM9ZHGtWvh72B89RK/d5udP0Xwf9JB7l36m
3YP8JA8J37e8W5Q/gx7CPakcKxoPPWRJdfsZ0XxADylPE5cXzSf0EKUhZ7f8
Fc2vQQ/Rq+5jRPMbPYSd7jUgGg89xNjNfH4MzAf0kC/n23iLIUYPWRh+WzoM
5gd6iGZJqcx4yDf0kA8awRlzYH6gh3xzfF5pB/mKHrJkwX9aZyGf0UOULlTG
a8DxoYds6mgsbIcYPWRF8NdGUf2BHnJXXbdhquj3DXpI4fMysxQYDz0k7sqC
Sarwfegh+wTLFD6I7t+DHiI46tU/FY4XPeRR38fQfzA/TDWU3iTXCRiBjLBj
GcwP9JGCUS9kGmF+oI/sfV/LOwn5iz6yLzTrbijkG/qIlETY+ytwfOgj1pPk
ZovmB/pIUa63RDpsRx/ZszLvjg98Hn1kuapVcACMjz4ipdKo7QrzA32kqEfV
UPR+hj4in2M32wfGQx8xr7rAEr3foY90jbFWewgx+kiG4v6MR/B59JEc/ss7
j2E7+siwjNWGos+jj2htTfB3hhh9RE+wOCga5gf6yOulM1N+wXb0kcRj4zmi
9wX0kZqRJrW3IUYfkY6ackk0P9BHdrDW1Iti9JGTw6YXi97n0EeYxWnjROOT
j5z4s1UG3i/QR5zVS8VF93f0kbfrLSpE+Yw+UhJ7bbJofqCP3O+8KiF6PqGP
3I9RDBDF6CO1n12fiOYH+kip0E0oGg995OH1bsWXMB/QR1rqwkeLri/6yGSd
7i7R/Ql9pNx83FPR96OPVG6d6SEaD31kaWT4elGMPnKRc3+U6HygjwTIjp8i
Gh99ZKGz5KIV8P3oI0MG/8P6EOP/7+3/B3Z66Xg=
     "], {{{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1: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
Ag==
          "]]]}, {}, 
       {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV1He8T3UYB/Bzl5FxRVRoXKIkNEVaIk0jmVFJtG0qWhpKqSgNu+y99y6S
kTKLzJK9y969nz/e9/N8P8/v3PO6v3NeN6tpq9otU5MkSaGzH73SkqRCjiSp
yFJzwYwkWZKeJHnk+/IHMszV5BvM4BwXczftmMAxtrv+AjeYn2EA/7BEl0/e
RVvGczR2+vOUNjehP9tYrMuUd9KGcRyJnf4c15ufph9/87Mur6xEa8byX+z0
Zyllfoq+/MUiXR55B60Yw7+x05/hOvOT9GErP+lyy4q0ZDSHY6c/zbXmxvRm
Cwt1WzhFSedG9GIzC3SbOUkJ5yf4lk38qNvECa5xbsg3bIznoJvPPOYyh9nM
YiYzmM40prKR4xR3bQO+ZgNTdBs4RjHn+nzFn0zW5ZIVaMEoDsVOf5Qscz16
sp5JuvtlJ6Zzlou4nVcYycH4rM/dJ1+L+3MqnqfuLTmLC1xNXb5kHRPt35Pz
Sff+VY3nQE5zRzmNM3GO508u/Tsyn5wjU2R5mV8ukNnlyzKvHCEPxH3c4xLn
xebcsnO813KuTJWVZQG5UOaQr8pMOVmejHfM9Yvib9a9KWdynqviWZJNX0d+
wR9M8Pl35TzS7KrI15nK6bgHbzObxP42+RLD2R+/w/X3yg7x3XMi3lvdlfJx
evA743XZ5a28yDD2xU5/j2wf3y/H4z3WXSFr0521jNNlk7fwAkPZGzv9IYqa
H+Nz1jBWlyFv5nmGsCd2+oMUMdfiM1YzRjeaUYxkBMMZxlCGMJhBDGQ1Byjs
2pp8yiq+161iP5c716AbK/lOt5J9XOZcnU9YwQDdCvZyqfOjfMxv9Nely5t4
jsHsjp1+D4XMj9CVX+mnS5M30pxB7Iqdfnf8PzU/zEcsp68uVZajGQPZGTv9
rngfzQ/xIb/QR5ciy/Js/M3siJ1+JwXMD9KFZfTWJbIMTeN7YHvs9DvIb36A
D1jK/1Zc23E=
          "]]]}, {}, 
       {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0VWUUGUUgNE7AwMDUvJASYdSSjN0SCMIDKXSQwvMSCMd0t0l3SmoSCvd
oSCtSHdJ97B52Os759yXu9afKSomMjo0CIIQYkkRFgSFw4Mggkrm5PGC4B9N
qKv1b0LNw3Qxh3jJt/RnNrt4SB2a0Z3JbOYmFalAecrxOWUpQ2lKUZISFKcY
RSlCxPv/oxAFqU1TujGJTdygAJE0oSsT2ch18tOWfsxiJ/9Ti8Z0YQIbuEY+
2tCXH9nBA2rSiM6MZz1XyctQFnGQF7SmDzPZzn1q8APz2cdTGrKUI7ymE+P4
jSvkYRXHCfEOQ/Q08cwL9QDPacVZwt2Xa2L9U9/Sm6T2kxpXZ+gHuk3v8SUf
2s9pAl2hSfQvjWUQyeynNEznaSLdq09owBniuy3Rw7yiIyeI4z5W13GZz1jJ
MQLfBusC9vOMlizjKG/oxXT+4C7VGchc9vCYb/iOMfzKJT6lBT2Zxu/coRoD
mMNuHvE1MYzmFy6Sm+Z8z1S2cpsv+IpoRvEzF8hFFD2YwhZuUZX6dGAka/mP
nFShHu0ZwRrOk4PsfMLHZCMrWchMJjKSgfSkIy0fkYbUpCIllalLO4bzE//y
DgRph3o=
          "]]]}, {}, 
       {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0mUUFVUUgNGhQ7pBuksapKS7OxWkQaS7u7u7u7uRkEZBQFFRSVFROhWk
9vzY7zt3zf0x651J17JLnc4RgyCIQFw/CaMGQYHoQVCQcuY00YLgT02qu/Qa
cc0TdRM/Es25o45gJed4S11a0p8FHOc5ZSlDaUpRkhJ8QnGKUZQiFOZjClEw
fDfyk486tKAf8znGM/JSm8/pyzy+5il5qEVz+jCXozwhN18wnBV8yxtq0oze
zOEIj8lFB4axnG94TQ3Gso5LRPL/fKa9mM1hHvERE9jIZaK6116Hsoyz/E91
xrCWi0R071Pdws/EcO6pszjEQ3Kyk6vE8Xy83iKheYP+QBRzO71NYvM2TaG/
6Ac6RFPqDY2vSzWZntFXVCO18x+aRLfrh/qrxtLRmkpvagJdo8n1gkbQpvo7
icyb9Seim3vodeKZZ+pXPCAHO/iN2J6N0/V8T2TntrqVK8R0HqxLOM1LqjKK
1XxH4E4T7c4MDnKf7LRhEIs5xX9UYSSrOM87GtON6RzgHtlozUAWcZJ/qUwj
ujKN/dwlK60YwEJO8IJKNKQLU9nHP2ShIg3ozBT28jeZqUB9OjGZPdwhExnJ
QHrSkZY04R7DXYX7DncYfgfhrsJ9kzTcb/iNhLuiPPX4kkns5i/eA04PiXI=

          "]]]}, {}, 
       {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0mXYFVUUgNEL0iAhISHx0Y2EtHR3SYPS3Q0SBt0o3Z3S3Up3p5TSoXTn
mh/rvufsmef+2RPWuEO19uFDoVA44vlJETkUyhElFMpJVefs+lIz6B59SJjz
VN3GbRK599JxrOUKsc1+0A4MYQmniWReRStTiYpUoDzlKEsZSlOKkpSgOMUo
ShEK8z3tGcxiThHR/xfShrRjEIs4SQTPvtUGtGUgCznBZ54V1J6MZQ2XiWVe
X9vwKws4TnjzAtqDMazmEjHN6+lENnGd+Gat9Rfmc4xwZvl1Clu5RUKz7jqa
VfzN52Z1dQIb+Zd4Zq10B3dJ4v6zzuMoIfd8upv/SeE+WZ+SxnmL3uRL5276
nHTOf2pmva9JdZRm1ceaSldqRr2oMbSOfq0vNL3+pVn0gSbT8ZpNn2hq3aCZ
9B+Nqy31GWmdt+sdEjv/pI9I6TxXj/CRvOziP5J7Nkk3c4ME7l11J/f4yn2k
ruAC0d1r6++s5xpfmLXQAczhMB/IQxdGsJzzRPNuLf2NdVwljllz7c9sDvGe
3HRmOH9wjqjeranN6McsDvKOb+jEMJZxlije/06b0peZHOAtuejIUJZyhsje
r6FN+JEZ7OcNOalOY/ownX28JgfZgz0Guwr2Heww+A6CXQX7JkOw3+AbCXYV
fEPBPoNvItgRYVSjEb2Zxl5e8QmW5IxJ
          
          "]]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1: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
         "]]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJwV1He4znUYBvCfnNOSlBKVspM0jIaUiChKSSpFEcomGiIUKipFGdl77wrH
PPZWRpkhyt57VOjz/PE59/O9n/O73vO+7/c6eeo0r9osQ5Ik7f3okzFJVqQk
yWc8TVb26Fay2zyYOtxHQt/Yyc95hpvYq1vFHvMQ6nI/GegXO/kFFbmZfbrV
7DUPpR4PcAX9Yyc7U4ls7Nf9wj7zMN6mCBkZEDvZhWe5hQO6X9lvHs47FCWF
gbGTX/Ic2TmoW8OgSOevqEwODunWMjjS+Wue51YO69YxJNK5Ky9wG0d06xnK
MIYzgpGMYjRjGMs4xjMhnvHsN1Thdo7qfuOAeQT1KUYqE2Mnv+VFcnJM9zsH
zSNpQHGuZFLsZDeqcgfHdWflj7xPaTboDslRNORBrmKyfoPszkvcyQndOfkT
H1CGjbrDcjSNeCjuTmqSzJbtuZp/mMZHlIvv0j5ddmCK5zfK76gWf7vdApmL
S8ykLdfql8iTfv+8/Jksug/jNeSiuJ/yybhbcq68UX4qr5PL4j7KTZ4/Yh7D
9c6N4/3KhTKrfDjuspwjb5CfyExyqbyGf5lO6zjrF8un4r6Z58mO8fl6jU3y
e14mN5eZRTtO2V+QU2lFWTbrjsqxNOGReM/8RxptKB+fvd/bLHvwCnk4rdvC
MfM4mlIi/u74nGIne/IqeTmj28rUSOdeVCcfZ3V/MI3ppDGDmcxiNnOYSzrz
mB/PeLY3r5Gfc7ptLIh0/oHXKcB53XYWRjr3oQZ3cUG3g0WRzn2pScG4R7o/
OW4eTzMeje+XxbGT/XiDu+O70u3khHkCzSlJZpbETvbnTQrFZ63bxUnzRN7l
sbgnLI2dHEAt7uGi7i9OmSfRgsfjXrIsdnIgtSkc91n3N6fNk2lJqbhnLI+d
HMRb3Bt3Jv4vc8Y8hfd4Iu51vDYz+JgKpLp/82WneH/m5TKbXOH5/wG61trs

         "]]}, 
       {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJwN0WO8FmYYwOE3nJNr9SEtndqy27K1jJPttpZt27Zt27ZWy7Ztner6cP3+
930/H5+Qhq1DW4ULBAJhxA0KBK6zmqE0pwoliEd8EpCQX0lEYpKQlGSEkJwU
/MbvpCQVqUnDDdYwjBZUpSRpuclahtOSapTiCTuYRBcako5brGMErahOaZ6y
k8l0pRHpuc16RtKaGrzlILPpSxmesYspdKMxGbjDBkbRhpq84xBz6EdZnrOb
qXQnjNMspQkfOcp8BhIIDgTO6goycpeNjCaCt/Palq+cZDGR3C9rLd5zmOhu
czVIL+ov2l9/cIaY9uUaRa9qbC2nL9hDNPs0jagXNJb20O/8Rwz7Mo2sV7Qp
nzjGAoLdL+kgwpn/15Vk4h6bGEM7vnGKJdTmA0eYxwDK85K9TKcnf/OZ4yxk
MJm5z2bG0p46VOAV+5hBL/4hCw/Ywjg6UJeKvGY/M+lNM7LykK2MpyP1CCUb
j9jGBDpRn0r8wZ9kJwc5yUVu8pCXfOSnAAUpRGGKUJRiFOcx25lIZxpQmTcc
YBZ9+JcvnGARQwjvH87pKqKar2kc/Ut/Avjjhvk=
         "]]}, 
       {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJwV0mW4FlUUgNGPuuQlRLiE0ghKIyBId7d0CJdupESku7u7QelukO6UblBS
CcGilDU/1rz7PHN+zZ60kZ1qdIwSCoXCPRKHhUIP2MwY2vMVpfmQJCQlgmQk
JwUp+YiPSUVq0pCWdKQnAxl5yBbG0oFalOETHrGVcXSkNmXJxGO2MZ5O1KEc
f3OQ2XxPMzLzG9uZQGfqUp5/OMQcetOcT/mdHUzkG+rxP6dYwmAq8C+HmUsf
WvAZT9jJJLpQn1DMUOi0LmUIFXnFEebRlzjuXNG1tCS688/6IyMId76uG8jC
U3YxmYTe3dKuxDJf0tXBrsy/aAOimM8Eu9Jl+oHeCXalQzWeXgt2qOuD/eq9
YI9aSV9zNNi383xNpLeDfWs/jatXg/9A1wX/iP6qrYhhPq8rSGy+qyOJb76h
G8nKM3YzhW7E9v6yrqEhUZ3P6nKGUZk3HGMB/WlNmHsXdCWjyMZz9jCV7jQi
mnvn9AeGU4W3HGchA2hDdv7gJ6bRg8ZU5R0nWMRA2pKDF+xlOt/yNdXIyUv2
MYOeNKE6ufiT/czkO5pSg9x8Th7yko8vyE8BvqQghShMEYpSjOKUoCR/cYBZ
9CKSmvzHSRYziHbE9H0u6ipGk8D5pm4iwnxfU2spfQ+ClIj1
         "]]}, 
       {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJwV0lW4VVUUgNED0iFw6VDuJaQ7BBSRUhq9dHd3CyIhXYKAgtIi3d3d3d1I
K52CgGM/jPOvNff+zsvcEY07RLaPEgqFwvyExwyFXrGbyfSiEZFEkI70ZCAj
n5CJzGQhK9nITg5ykovc5CEv/7KHKXxPY6qQj9fsZSq9aUJVYsYKhU7pAobR
kfy8YR/T+IGmVCOW90/rQobTiQL8x36m04dmVCe298/oIkbQmYK85QAz6Etz
Enn3iq5iHDWIY3ZWFzOSLnzKOw7yB/1oQZh3r+pqxlOTuGbndAmjSON+T7fS
lWTuN3Q9E0nrfl93UIj3HGJmsCPPHml/Ujnf0c3BrpyfaUsSO18LdqVrgn3q
k2BX+ot+rP8EO9TtwX71RbBHraXx9Hywb10afBP6ONi3/qQf6d/Bd6Dbgm9E
n2s3kjvf1A3BN+T8VH8j3PmB7qQwIffD+ic/ktr9rm6hFUncr+tafqU28c0u
6DJG050UZrd0I79ThChmR3QWA2hNUrO/dB0TqMOHZhd1OWPowWdENT+qsxlI
G+qSwPySruBnvuNzPjA/pnMYRFvqUZRonh3XuQymHfX5guiendB5DKE9DSjG
lxSnBCUpRWm+4mvKUJZylKcCFalEZb4hhv8/qfMZSgcaktD8sq5kLD1JaXZb
NzGJCPeHuosszi81j36r/wOVIIvQ
         "]]}}}], InsetBox[
     TemplateBox[{
      "0.010000000000000002`","0.05`",FractionBox["1", "10"],FractionBox[
       "1", "5"],FractionBox["1", 
        RowBox[{"2", " ", 
          SqrtBox["3"]}]],FractionBox["1", "2"]},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox["\"\[Sigma]=\"", {
                 GrayLevel[0], FontWeight -> Bold, FontSize -> 8, FontFamily -> 
                 "Arial"}, Background -> Automatic, StripOnInput -> False]}, {
              
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontWeight -> Bold, FontSize -> 8, FontFamily -> 
          "Arial"}, Background -> Automatic, StripOnInput -> False], 
        TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold", ",", "8"}], "}"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"\[Sigma]=\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.85, 0.55}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
     "AxesInFront" -> True},
   PlotLabel->FormBox["\"Normal distribution\"", TraditionalForm],
   PlotRange->{All, All},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[
     GraphicsComplex[CompressedData["
1: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
NJBTa/q0VoM40aX7eZS8jj1PX9NaOq1OnOdwuqLEuoZtLu6ZND5nTVzRqzY1
o17BnattdjvTQoiQdxRlRjuX8CA6L5L4J4OQCZzdZnRqAc8PnepKiaggmpz3
5AgdncPd3DNWmak9RM3V4LtHz89g05GuI+zCK4RRp8GCiuIUzo85sfz1OxeE
OhgTH4CM61Lt2sPmJECYQ9agt2AUC6blCXI5K4HINdHWoYwhPN6g/bflgz5o
97SKvGnvw9ubuNh4O6zB3Yz+3O3d3bjJ4MTIvkv3QIpWVTJerBVTtSjxpjWF
QsFlh2s+z+px2h4tEzaZBNB6Y15f0vQVr14rr8B6r0GoWjjU42gKFhenb7T5
/An0NToeCzjlAU1NlEF2VRl8k0jbp+74HdiurN8TpKiFgJKDRrEhPcB+rUIh
dLwbRlX/5LddGIBXpJ+aPUr9oP+O2SH82jB0XC96dZ96CGJGvI39ZcZhnKZA
XcV0Y36PJE4ULpLB8GLTwbZLJODa7Ttxa30KJrNitPhrB8Eq7ZFnXd8MKHX8
Vh081A8UN/7oLTUsAVOnIJ+wdQN8P/pzfLx9BQpYPlxmZKoBz/FBQZryNaBr
I41/jC+Dy5x7pIO1KBAWr2kaDf4Et0XyDmVfoETRT4JZLKhfg9XxAxzvlanQ
woMkvbiziWAGXj9/nKVGkWfaTb7cCYWaosG/8/I0yNtLfjfjSU9YcCNb7ZGg
RV2MGX01726BiERHw83DdOitTfjeit36cKjr9cGgffTIIMWJz1xaGa7VVqaJ
iTEgW7nq9IJ4cagRP1uSeIgRXbU49qb/6w5gCskqHeZnQq0zVScbzFYJte7p
OJ09zOjedMzTzqVuYv21WnkNFwvq+ClUf8n6G+H8UdFZmZYVZa3zFjyZzyRG
PwmsNNOzocMTV5XhUzDBYIJ5/ZbY0GwO55jGSRvCbD7EqGB9DVMYvGwvszEk
eq8FK1TSr+LPLfuovsp5ELl3TqET7Mv4FdP5t22WccQ9vtRPa2KLWMRyeIi5
4BMRLuWmkHd8Hg9e+ffNTb6BGB9e76tVnMX/GXfrfT9LJjT/O0t6qjqNC2X1
iAtLDODZonrXCU3idsYl34SAPdDqqvHQOnEcWwnc+Tr19gR8Fghp0coexnK6
9onfzp6Hw+ySpmtlA1ialF7x+b0FJPErNemt9+DfKnF6u/ScQVbUrI9PuhNb
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
6S3PtdfNODQkwqa3tNUct3jsmrrlLXPmvt8MiMnc8pYmB50CIorfb3lLsfHM
I1/3f9jyllKDf2J9yJ+3vKXtiWQTEcBb3tI2qzh9Z0PZ/7zlU2tSOfe3LW8Z
pj309Hlr9Za3bKr8cjkmp3bLW74YfLGj7lXdlrcMOJZFpR9dv+UtdbkvPxNW
/Z+3fNL01dNuqnHLWxZofr2rp/d3y1vyDjOZPjNq3vKWCwMpY08FW7a85b21
ad1Ej5Ytbxklocv66l7LlrdMteOWmuZr2fKWZqBzS/Ra85a31Ev53Sp55u+W
t1QSCDVn6W7c8pbRR1BrrOH/vGWBP2WtfWD9lrfcn9M4NFNUt+UtLx89EXm3
q3bLW3IX+oT4UX7f8pb84kTwA79vW96SlsxdeXyhbMtb1pdHqOxtwVveMqHA
0+q2S8GWt7QZ+f3yseaHLW/JkLzuLHwge8tbMmbfWZL4kLnlLZmF+Si4H6Vu
eUvKnIow3cIk2PSWCR1O42zPnsKmtxQMDdPlT4mATW8Z7OVyx3R/EGx6S216
2ojKBB/Y9JZFcmK/eD67w6a3rPi/62HTW+KjN6ldklxg01v2hl0U2vHdEza9
pbjgvrEXL/xg01s+dq2/oxXwCDa9pXnSJW3ubVGw6S13MQsXig3Gwqa3zFM7
HLKtJnnLW15t0eOhN0vf8pYNCjNR+n1vIChX13fhZhfc0Nj/XOJN05ZvzBui
oEzu+bvlG+NOjakUfm/e8o0zcqmkCYOWLd/YZnA0TSmgZcs3Un4jRPk3Pt/0
jQMONatuG7/f9I0PlfSt6Lr/QiIaDM/qmYe9kpEfv8U3bXlCqwnWlu8X3255
QkWqxm2ebulbnvAt5dObSdwvtjxhbLlKo7t1HGx6wtDylsv9dlGw6QnjJXs8
um+FwqYnnHjYr/zfLn/Y9IQ8uxRXdz+7D5ueMEJSizWNwxU2PaFA4em5HfVO
sOkJ0/mTGlUFPWDTE1pp19r3zzyATU8Yejq3d84sGDY9IcPEuoHko8ew6Qmp
ngfmSvA+g01PWBE4Emn6+PmWJ2whFci97X655Ql3oKTtp45mQarX9OStX52w
L+qmWY9205bfa+so7Hif+HfL7505mpOe9KR5y+/Rar/+uw21bPm9kKT48BN+
LVt+z1s+UD/JtmXL7wln27GYzTZv+T1Kms4/Q8LNYCyouNJnPg8u3vTXlWea
trxc1pOOjtq977e8nKhCA80h1owtL8cbyvN57GzKlpdjsayk5nmQAJteLlzt
etGthWjY9HJUukOP/rsSDpte7k7kDi1u9gDY9HJpckUJGge8YdPL9d1INKvX
uAObXi5DylHsUcRt2PRyvlbFj+sbvWDTyxnIv7h92O4hbHq5u3vJ5pwNYbDp
5X5FsXqNZ0VDWdq7MNlb3UBbsttlB83fLX8Wamc4syzUvOXPoi6LuX1daN7y
Zw35u1P3bpzPTX+mS6MWU7xxvjf9GZHybPWwfMv//JmN62nj2OYtr7V66uPx
k07PYNNrqekyxLisPYZNr6WrSCXz8EQIbHqtS64OnBc0fGHTa30T2ZZ7kuMe
bHot7Wsb0ym9M2x6re209cYOC46w6bXoLh0SlfnnDpteK0ufYZpd9AFsei0m
5fCz1y4HwabXusT5XyJXYwRseq0XdXP8Q6diYNNr3bfjUlFbSIJNr3U1+cjV
UtGXW15L+o8PTezV13DrUczAwdoOMD6pm52xp2nLR/FHfzvEdvfvlo/iXpI8
fMm9ectHWXhLmdEdbtnyUQprOpwJ3i1bPspt52D+tGvLlo+CQebERoaWLR9l
dE/ZGak0g1z4xGFvoXmwuCm/T0vg75ZHYrA2GQtIfb/lkQgnNc64zowtj6S8
h/3AfVLKlkfaeeasJFtcImx6pNI5F4nMiiew6ZF0aBzYn1NEwKZHumezfc6O
OxA2PZJW4iWngn/esOmRHhMLjO4ebrDpkZZtKtS/RrrCpkfKmoyTb+T1gk2P
5M3DQTXr6w+bHomvjcksICMUNj1SCL1JpVRbFIiIUwXxjnSBaJed/JGWpi3f
8/z3uY+9VM1bvuel9/w9357mLd9D83Z+75erLVu+J61gN8552LLle+xLJN2n
1Vu2fA+ejozYltu85WFG/oS2+FjHwqaH0TNiir+cFwmbHoZ3p9fxI5qPYNPD
nEEsNWOSfrDpYTS66Vcqz3vCpodpPmDNdobeBagCkDNDwSDsHWi0sMlu3vIi
1Kdkv+eda9nyIiyKzUftN/Z304ssvS/zy9o4nk2PwP3nRj3PxnrZ9AjB4ukP
rvq0bHmEAz6+fm2HWmCz3x+VKDtO2u4Em/3+C5mHrpeHOsJmv3+O30vbVskd
Nvv9LzJHi+oqfGCz3+95v05IvTUQNvv9zxoCHTTvRsBmv19eUul56q+nsNnv
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
J38Za5zK4PqpRuGcl9OtExhcP907bZ97jFEcg+unu5ulVKcMRDC4ftoT+Khp
g2cIg+unHaNy+852+DKB0yZIlRm2Mkb2j9XHQr2K64sPNTv6BXpCWl+UM4np
Pw33B1xffFWzIO2gh5DWr9T8JtpqeQpp/Spmg8sXZ9gf16/u9+evXqkjZHA9
6NZPLZ+2Vh9aj2FVL+6eDvcTXI8ZOaLpwz+4n+B6xKLRyieGuAhpPSI44WJC
JMxv9H77f6NVLkCMvm9vGM3uh/d/9P1YQd72JrifoO+HGupYDun2ZtD3Y+ak
Tm+F92P0faWimhcT4Pqg7y99uXVCNdwf0PfV+zKS6+B+gr6/+aLCtxFwP0Hf
P7nYSZ8F+6Pvt7SXTFWC8dD326eN+dgb5M2g7xttr5VeCtvR97MaZ6gthc+j
79cc/RirAr8Pfb9Jw1TvM8To++yKY9YCiNH3i9tLi1dAjL5v+qqGuwLGR9//
PnpC4FcDbwZ9//m8bV6SCbnk+9Hvvzu0T8wj369UbMg4eT+ffP/fxIqOMZ4F
5Pt/MkY+VVO8Sb7fU5ul+rWviHx/3NvzYSWVxeT76+5FDT1TXEq+37347pbc
a3fI92unJ3n/XFVGvl/o5qCWqF1Ovv93dOtNNZUK8n29TKX/FvdXkO9fvK54
0e5DJfk+d7L+vXpuFfn+yln3f8dFV5Pv2/4oWdVtfI98P3Dph9CIH/fI9y/v
t1FdlXiffH+mj05EnjyPfD/Kdll9RiKPfP9a0XL9Yb945PtZn/qcR6zgk+87
ifeM0tjLJ9/nTtj61zaCT75f9XBJ6HmI0fer/Ex2VLnzyfdzLE6UrVrFJ9//
4r7w788fPPJ9yRu+jeUneeT72XdSff1UeOT7x2eHBRw4dZ98n7W3e67373vk
+7ITN2jEbr5Hvh/V6TOafaqafD/m+a6apEdV5PsqKksFjd8qyfcP9Z+L9phU
Sb5/PC7rqNbSCvL9pE7Z77565eT7HWpjxydYl5Hvd7dfffmde4d8v69n43X/
ilLyfYvCqI0mP4vJ97/eTlvAl7xFvp9wqiLw3dqb5PsW4n2dfskF5PtWjqqN
nQ355PtXY2ZsqNPPI9+vH5wP6Pue5+Nn3TXnMPXZo22KrguYJ+tKV02045G3
e9Qkaa7n88jbw50zspYo8snbhz2vi9pqzSdv77vd23PlEJ+8/fsh98ero/jk
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
FmeTZ1Qs031nMo5NnuEuf+CYpQKbPOPc1HPVL2awyTOuzpPv9lnIJs8wM7/f
IK/NJs8Ym2yk4qjHJs/wdFk1OnYdmzzjV0uzXJkZmzwjuu5Kfaklmzxj1NVQ
p71b2eQZyVJpbf3b2eQZeVv15io6s8kzDjpO2WbuyibPmKt+VPrkbjZ5Rl9N
yowF7mzyjOs3Zhi2QYyeYfdV3/UbxOgZbycYuEyDGD1j3kM1j4swHnrGWKHb
roXwfegZO1703v7hxCbPiLva8W6hI5s8Y8uExz0b4PegZ0yYx7D+wO9Fzxho
q1023pxNnsH5+aBLCOcLPUOt/OmFHfps8oynk7IrguB8o2eYF+5b6qXOJs+4
bNYY92Ymmzyj+n1NOheuJ3rG3WlnX50czybPkJ769lkB5AN6xmKdIF0TyBf0
jLOFrRenfGaRZ0zzDWwa/pJFnnH3BxPL1LDIM265GyYqlrLIM7YnCA1+QT6j
Z8Tk7nA1TmGRZ+B8QM/YtsI9K+cEizzj2jS1gIf2bPKMUZKXgtV2sskzFr1L
M3ziwibPUFAqqo90Y5NntCybahqwh02e8bn243c2XF/0jImrjGYO82CTZyht
11zJgu3oGSOX7K/yh8+jZ2wbu8U8HMZHzzCKaPa6Ct+PnqFodVJTdHzoGecn
xRkK4fjRM3zPXr5VcJJFnvFPP9lvUwyLPENuf2kFaxubPONLr660/A42ecbp
osM2/ZD/6BmPm4c7/IB8RM+YLSX1dxQcL3pGplePnyf8HvSMgqk2X/ohRs84
1OUSVQcx9TNMsmurh8+jZ7B3nNOWh/xHz9BZ4D9s/y42ecZ4c83FEyH/0TOM
G25vGAXzFT1jYfD2H0cTWUz4tBkpj0tfMvPuXtGYDfujbwgmDHQlwXjoG2XD
FxVLi+bboG+4Ms0Sr+B40DfqCsceewTHi77xMO1T3wDE6BvVIWKRbhCjbyxZ
NPv7RPg8+kZOT2hBE5wv9I1t/hq8F3D+0TeGWrya+F80i3xjTrFVlBRcD/QN
1X3cguMwv9E3jv5YvzsOrgf6Rt3HSxtZMD76xiy7+7fq4Pegb8i61K03g+ND
37A9djmiB2L0DaOFVZeaIEbf+PtUNu0vHD/6RljlKKntMB76Rmvg1K31cP7Q
NxadmLMrHM4v+kZSTeCaNLge6Bs8D6t7X5JYzLWPZ/2rCoTMZE7XiWzIV/SO
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
Gh99ZKGz5KIV8P3oI0MG/8P6EOP/7+3/B3Z66Xg=
      "], {{{}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroup[{
           Polygon[CompressedData["
1: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
Ag==
            "]]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroup[{
           Polygon[CompressedData["
1:eJwV1He8T3UYB/Bzl5FxRVRoXKIkNEVaIk0jmVFJtG0qWhpKqSgNu+y99y6S
kTKLzJK9y969nz/e9/N8P8/v3PO6v3NeN6tpq9otU5MkSaGzH73SkqRCjiSp
yFJzwYwkWZKeJHnk+/IHMszV5BvM4BwXczftmMAxtrv+AjeYn2EA/7BEl0/e
RVvGczR2+vOUNjehP9tYrMuUd9KGcRyJnf4c15ufph9/87Mur6xEa8byX+z0
Zyllfoq+/MUiXR55B60Yw7+x05/hOvOT9GErP+lyy4q0ZDSHY6c/zbXmxvRm
Cwt1WzhFSedG9GIzC3SbOUkJ5yf4lk38qNvECa5xbsg3bIznoJvPPOYyh9nM
YiYzmM40prKR4xR3bQO+ZgNTdBs4RjHn+nzFn0zW5ZIVaMEoDsVOf5Qscz16
sp5JuvtlJ6Zzlou4nVcYycH4rM/dJ1+L+3MqnqfuLTmLC1xNXb5kHRPt35Pz
Sff+VY3nQE5zRzmNM3GO508u/Tsyn5wjU2R5mV8ukNnlyzKvHCEPxH3c4xLn
xebcsnO813KuTJWVZQG5UOaQr8pMOVmejHfM9Yvib9a9KWdynqviWZJNX0d+
wR9M8Pl35TzS7KrI15nK6bgHbzObxP42+RLD2R+/w/X3yg7x3XMi3lvdlfJx
evA743XZ5a28yDD2xU5/j2wf3y/H4z3WXSFr0521jNNlk7fwAkPZGzv9IYqa
H+Nz1jBWlyFv5nmGsCd2+oMUMdfiM1YzRjeaUYxkBMMZxlCGMJhBDGQ1Byjs
2pp8yiq+161iP5c716AbK/lOt5J9XOZcnU9YwQDdCvZyqfOjfMxv9Nely5t4
jsHsjp1+D4XMj9CVX+mnS5M30pxB7Iqdfnf8PzU/zEcsp68uVZajGQPZGTv9
rngfzQ/xIb/QR5ciy/Js/M3siJ1+JwXMD9KFZfTWJbIMTeN7YHvs9DvIb36A
D1jK/1Zc23E=
            "]]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          Opacity[0.2]], 
         GraphicsGroup[{
           Polygon[CompressedData["
1:eJwV0VWUUGUUgNE7AwMDUvJASYdSSjN0SCMIDKXSQwvMSCMd0t0l3SmoSCvd
oSCtSHdJ97B52Os759yXu9afKSomMjo0CIIQYkkRFgSFw4Mggkrm5PGC4B9N
qKv1b0LNw3Qxh3jJt/RnNrt4SB2a0Z3JbOYmFalAecrxOWUpQ2lKUZISFKcY
RSlCxPv/oxAFqU1TujGJTdygAJE0oSsT2ch18tOWfsxiJ/9Ti8Z0YQIbuEY+
2tCXH9nBA2rSiM6MZz1XyctQFnGQF7SmDzPZzn1q8APz2cdTGrKUI7ymE+P4
jSvkYRXHCfEOQ/Q08cwL9QDPacVZwt2Xa2L9U9/Sm6T2kxpXZ+gHuk3v8SUf
2s9pAl2hSfQvjWUQyeynNEznaSLdq09owBniuy3Rw7yiIyeI4z5W13GZz1jJ
MQLfBusC9vOMlizjKG/oxXT+4C7VGchc9vCYb/iOMfzKJT6lBT2Zxu/coRoD
mMNuHvE1MYzmFy6Sm+Z8z1S2cpsv+IpoRvEzF8hFFD2YwhZuUZX6dGAka/mP
nFShHu0ZwRrOk4PsfMLHZCMrWchMJjKSgfSkIy0fkYbUpCIllalLO4bzE//y
DgRph3o=
            "]]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          Opacity[0.2]], 
         GraphicsGroup[{
           Polygon[CompressedData["
1:eJwV0mUUFVUUgNGhQ7pBuksapKS7OxWkQaS7u7u7u7uRkEZBQFFRSVFROhWk
9vzY7zt3zf0x651J17JLnc4RgyCIQFw/CaMGQYHoQVCQcuY00YLgT02qu/Qa
cc0TdRM/Es25o45gJed4S11a0p8FHOc5ZSlDaUpRkhJ8QnGKUZQiFOZjClEw
fDfyk486tKAf8znGM/JSm8/pyzy+5il5qEVz+jCXozwhN18wnBV8yxtq0oze
zOEIj8lFB4axnG94TQ3Gso5LRPL/fKa9mM1hHvERE9jIZaK6116Hsoyz/E91
xrCWi0R071Pdws/EcO6pszjEQ3Kyk6vE8Xy83iKheYP+QBRzO71NYvM2TaG/
6Ac6RFPqDY2vSzWZntFXVCO18x+aRLfrh/qrxtLRmkpvagJdo8n1gkbQpvo7
icyb9Seim3vodeKZZ+pXPCAHO/iN2J6N0/V8T2TntrqVK8R0HqxLOM1LqjKK
1XxH4E4T7c4MDnKf7LRhEIs5xX9UYSSrOM87GtON6RzgHtlozUAWcZJ/qUwj
ujKN/dwlK60YwEJO8IJKNKQLU9nHP2ShIg3ozBT28jeZqUB9OjGZPdwhExnJ
QHrSkZY04R7DXYX7DncYfgfhrsJ9kzTcb/iNhLuiPPX4kkns5i/eA04PiXI=

            "]]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          Opacity[0.2]], 
         GraphicsGroup[{
           Polygon[CompressedData["
1:eJwV0mXYFVUUgNEL0iAhISHx0Y2EtHR3SYPS3Q0SBt0o3Z3S3Up3p5TSoXTn
mh/rvufsmef+2RPWuEO19uFDoVA44vlJETkUyhElFMpJVefs+lIz6B59SJjz
VN3GbRK599JxrOUKsc1+0A4MYQmniWReRStTiYpUoDzlKEsZSlOKkpSgOMUo
ShEK8z3tGcxiThHR/xfShrRjEIs4SQTPvtUGtGUgCznBZ54V1J6MZQ2XiWVe
X9vwKws4TnjzAtqDMazmEjHN6+lENnGd+Gat9Rfmc4xwZvl1Clu5RUKz7jqa
VfzN52Z1dQIb+Zd4Zq10B3dJ4v6zzuMoIfd8upv/SeE+WZ+SxnmL3uRL5276
nHTOf2pmva9JdZRm1ceaSldqRr2oMbSOfq0vNL3+pVn0gSbT8ZpNn2hq3aCZ
9B+Nqy31GWmdt+sdEjv/pI9I6TxXj/CRvOziP5J7Nkk3c4ME7l11J/f4yn2k
ruAC0d1r6++s5xpfmLXQAczhMB/IQxdGsJzzRPNuLf2NdVwljllz7c9sDvGe
3HRmOH9wjqjeranN6McsDvKOb+jEMJZxlije/06b0peZHOAtuejIUJZyhsje
r6FN+JEZ7OcNOalOY/ownX28JgfZgz0Guwr2Heww+A6CXQX7JkOw3+AbCXYV
fEPBPoNvItgRYVSjEb2Zxl5e8QmW5IxJ
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Line[CompressedData["
1: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
          "]]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Line[CompressedData["
1:eJwV1He4znUYBvCfnNOSlBKVspM0jIaUiChKSSpFEcomGiIUKipFGdl77wrH
PPZWRpkhyt57VOjz/PE59/O9n/O73vO+7/c6eeo0r9osQ5Ik7f3okzFJVqQk
yWc8TVb26Fay2zyYOtxHQt/Yyc95hpvYq1vFHvMQ6nI/GegXO/kFFbmZfbrV
7DUPpR4PcAX9Yyc7U4ls7Nf9wj7zMN6mCBkZEDvZhWe5hQO6X9lvHs47FCWF
gbGTX/Ic2TmoW8OgSOevqEwODunWMjjS+Wue51YO69YxJNK5Ky9wG0d06xnK
MIYzgpGMYjRjGMs4xjMhnvHsN1Thdo7qfuOAeQT1KUYqE2Mnv+VFcnJM9zsH
zSNpQHGuZFLsZDeqcgfHdWflj7xPaTboDslRNORBrmKyfoPszkvcyQndOfkT
H1CGjbrDcjSNeCjuTmqSzJbtuZp/mMZHlIvv0j5ddmCK5zfK76gWf7vdApmL
S8ykLdfql8iTfv+8/Jksug/jNeSiuJ/yybhbcq68UX4qr5PL4j7KTZ4/Yh7D
9c6N4/3KhTKrfDjuspwjb5CfyExyqbyGf5lO6zjrF8un4r6Z58mO8fl6jU3y
e14mN5eZRTtO2V+QU2lFWTbrjsqxNOGReM/8RxptKB+fvd/bLHvwCnk4rdvC
MfM4mlIi/u74nGIne/IqeTmj28rUSOdeVCcfZ3V/MI3ppDGDmcxiNnOYSzrz
mB/PeLY3r5Gfc7ptLIh0/oHXKcB53XYWRjr3oQZ3cUG3g0WRzn2pScG4R7o/
OW4eTzMeje+XxbGT/XiDu+O70u3khHkCzSlJZpbETvbnTQrFZ63bxUnzRN7l
sbgnLI2dHEAt7uGi7i9OmSfRgsfjXrIsdnIgtSkc91n3N6fNk2lJqbhnLI+d
HMRb3Bt3Jv4vc8Y8hfd4Iu51vDYz+JgKpLp/82WneH/m5TKbXOH5/wG61trs

          "]]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Line[CompressedData["
1:eJwN0WO8FmYYwOE3nJNr9SEtndqy27K1jJPttpZt27Zt27ZWy7Ztner6cP3+
930/H5+Qhq1DW4ULBAJhxA0KBK6zmqE0pwoliEd8EpCQX0lEYpKQlGSEkJwU
/MbvpCQVqUnDDdYwjBZUpSRpuclahtOSapTiCTuYRBcako5brGMErahOaZ6y
k8l0pRHpuc16RtKaGrzlILPpSxmesYspdKMxGbjDBkbRhpq84xBz6EdZnrOb
qXQnjNMspQkfOcp8BhIIDgTO6goycpeNjCaCt/Palq+cZDGR3C9rLd5zmOhu
czVIL+ov2l9/cIaY9uUaRa9qbC2nL9hDNPs0jagXNJb20O/8Rwz7Mo2sV7Qp
nzjGAoLdL+kgwpn/15Vk4h6bGEM7vnGKJdTmA0eYxwDK85K9TKcnf/OZ4yxk
MJm5z2bG0p46VOAV+5hBL/4hCw/Ywjg6UJeKvGY/M+lNM7LykK2MpyP1CCUb
j9jGBDpRn0r8wZ9kJwc5yUVu8pCXfOSnAAUpRGGKUJRiFOcx25lIZxpQmTcc
YBZ9+JcvnGARQwjvH87pKqKar2kc/Ut/Avjjhvk=
          "]]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Line[CompressedData["
1:eJwV0mW4FlUUgNGPuuQlRLiE0ghKIyBId7d0CJdupESku7u7QelukO6UblBS
CcGilDU/1rz7PHN+zZ60kZ1qdIwSCoXCPRKHhUIP2MwY2vMVpfmQJCQlgmQk
JwUp+YiPSUVq0pCWdKQnAxl5yBbG0oFalOETHrGVcXSkNmXJxGO2MZ5O1KEc
f3OQ2XxPMzLzG9uZQGfqUp5/OMQcetOcT/mdHUzkG+rxP6dYwmAq8C+HmUsf
WvAZT9jJJLpQn1DMUOi0LmUIFXnFEebRlzjuXNG1tCS688/6IyMId76uG8jC
U3YxmYTe3dKuxDJf0tXBrsy/aAOimM8Eu9Jl+oHeCXalQzWeXgt2qOuD/eq9
YI9aSV9zNNi383xNpLeDfWs/jatXg/9A1wX/iP6qrYhhPq8rSGy+qyOJb76h
G8nKM3YzhW7E9v6yrqEhUZ3P6nKGUZk3HGMB/WlNmHsXdCWjyMZz9jCV7jQi
mnvn9AeGU4W3HGchA2hDdv7gJ6bRg8ZU5R0nWMRA2pKDF+xlOt/yNdXIyUv2
MYOeNKE6ufiT/czkO5pSg9x8Th7yko8vyE8BvqQghShMEYpSjOKUoCR/cYBZ
9CKSmvzHSRYziHbE9H0u6ipGk8D5pm4iwnxfU2spfQ+ClIj1
          "]]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Line[CompressedData["
1:eJwV0lW4VVUUgNED0iFw6VDuJaQ7BBSRUhq9dHd3CyIhXYKAgtIi3d3d3d1I
K52CgGM/jPOvNff+zsvcEY07RLaPEgqFwvyExwyFXrGbyfSiEZFEkI70ZCAj
n5CJzGQhK9nITg5ykovc5CEv/7KHKXxPY6qQj9fsZSq9aUJVYsYKhU7pAobR
kfy8YR/T+IGmVCOW90/rQobTiQL8x36m04dmVCe298/oIkbQmYK85QAz6Etz
Enn3iq5iHDWIY3ZWFzOSLnzKOw7yB/1oQZh3r+pqxlOTuGbndAmjSON+T7fS
lWTuN3Q9E0nrfl93UIj3HGJmsCPPHml/Ujnf0c3BrpyfaUsSO18LdqVrgn3q
k2BX+ot+rP8EO9TtwX71RbBHraXx9Hywb10afBP6ONi3/qQf6d/Bd6Dbgm9E
n2s3kjvf1A3BN+T8VH8j3PmB7qQwIffD+ic/ktr9rm6hFUncr+tafqU28c0u
6DJG050UZrd0I79ThChmR3QWA2hNUrO/dB0TqMOHZhd1OWPowWdENT+qsxlI
G+qSwPySruBnvuNzPjA/pnMYRFvqUZRonh3XuQymHfX5guiendB5DKE9DSjG
lxSnBCUpRWm+4mvKUJZylKcCFalEZb4hhv8/qfMZSgcaktD8sq5kLD1JaXZb
NzGJCPeHuosszi81j36r/wOVIIvQ
          "]]}}}], {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
        "AxesInFront" -> True}, PlotLabel -> "Normal distribution", PlotRange -> {\
All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]]}, {0.010000000000000002`, 0.05, 
        Rational[1, 10], 
        Rational[1, 5], Rational[1, 2] 3^Rational[-1, 2], 
        Rational[1, 2]}, LabelStyle -> {
         GrayLevel[0], Bold, 8}, LegendLabel -> "\[Sigma]=", LegendLayout -> 
       "Column"]], {0.85, 0.55}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{3.686492386565249*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TorquePivotUni", "[", 
    RowBox[{"\[Mu]_", ",", "\[Sigma]_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"lowlim", " ", "=", 
        RowBox[{"Max", "[", 
         RowBox[{"0", ",", 
          RowBox[{"\[Mu]", "-", 
           RowBox[{
            SqrtBox["3"], " ", "\[Sigma]"}]}]}], "]"}]}], ",", 
       RowBox[{"uplim", " ", "=", "  ", 
        RowBox[{"Min", "[", 
         RowBox[{"1", ",", 
          RowBox[{"\[Mu]", "+", 
           RowBox[{
            SqrtBox["3"], " ", "\[Sigma]"}]}]}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"uplim", ">", "lowlim"}], ",", 
       RowBox[{
        RowBox[{"-", 
         FractionBox[
          SuperscriptBox["lowlim", "2"], 
          RowBox[{"4", " ", 
           SqrtBox["3"], " ", "\[Sigma]"}]]}], "+", 
        FractionBox[
         SuperscriptBox["uplim", "2"], 
         RowBox[{"4", " ", 
          SqrtBox["3"], " ", "\[Sigma]"}]]}], ",", "0"}], "]"}]}], "]"}]}], 
  ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TorquePivotTriATB", "[", 
    RowBox[{"\[Mu]_", ",", "\[Sigma]_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"lowlim1", " ", "=", 
        RowBox[{"Max", "[", 
         RowBox[{"0", ",", 
          RowBox[{"\[Mu]", "-", 
           RowBox[{
            SqrtBox["6"], " ", "\[Sigma]"}]}]}], "]"}]}], ",", 
       RowBox[{"uplim1", " ", "=", "  ", 
        RowBox[{"Min", "[", 
         RowBox[{"1", ",", "\[Mu]"}], "]"}]}], ",", 
       RowBox[{"lowlim2", " ", "=", 
        RowBox[{"Max", "[", 
         RowBox[{"0", ",", "\[Mu]"}], "]"}]}], ",", 
       RowBox[{"uplim2", " ", "=", "  ", 
        RowBox[{"Min", "[", 
         RowBox[{"1", ",", 
          RowBox[{"\[Mu]", "+", 
           RowBox[{
            SqrtBox["6"], " ", "\[Sigma]"}]}]}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"uplim1", ">", "lowlim1"}], ",", 
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           SuperscriptBox["lowlim1", "3"]}], "+", 
          RowBox[{"3", " ", 
           SuperscriptBox["lowlim1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Mu]", "-", 
             RowBox[{
              SqrtBox["6"], " ", "\[Sigma]"}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["uplim1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", "uplim1"}], "-", 
             RowBox[{"3", " ", "\[Mu]"}], "+", 
             RowBox[{"3", " ", 
              SqrtBox["6"], " ", "\[Sigma]"}]}], ")"}]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], ",", "0"}], "]"}], "+", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"uplim2", ">", "lowlim2"}], ",", 
        FractionBox[
         RowBox[{
          RowBox[{"2", " ", 
           SuperscriptBox["lowlim2", "3"]}], "-", 
          RowBox[{"3", " ", 
           SuperscriptBox["lowlim2", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"\[Mu]", "+", 
             RowBox[{
              SqrtBox["6"], " ", "\[Sigma]"}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["uplim2", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", "uplim2"}], "+", 
             RowBox[{"3", " ", 
              RowBox[{"(", 
               RowBox[{"\[Mu]", "+", 
                RowBox[{
                 SqrtBox["6"], " ", "\[Sigma]"}]}], ")"}]}]}], ")"}]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], ",", "0"}], "]"}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.676467577391876*^9, 3.676467583150907*^9}, {
   3.676467620923286*^9, 3.676467642689784*^9}, 3.684533184729178*^9, {
   3.684533596596053*^9, 3.684533598039216*^9}, {3.6845379966929417`*^9, 
   3.684538068930195*^9}, {3.684538106530834*^9, 3.6845382708752737`*^9}, {
   3.6845383147084846`*^9, 3.684538356260854*^9}, 3.684538387403821*^9, {
   3.684538484572762*^9, 3.684538521073769*^9}, {3.6845388666282597`*^9, 
   3.6845388668906527`*^9}, 3.686492434941237*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"TorquePivotNorm", "[", 
   RowBox[{"\[Mu]_", ",", "\[Sigma]_"}], "]"}], ":=", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]]}]]}], "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox[
          SuperscriptBox["\[Mu]", "2"], 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]]}]]}], ")"}], " ", "\[Sigma]"}], 
    
    SqrtBox[
     RowBox[{"2", " ", "\[Pi]"}]]], "+", 
   RowBox[{
    FractionBox["1", "2"], " ", "\[Mu]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Erf", "[", 
       FractionBox[
        RowBox[{"1", "-", "\[Mu]"}], 
        RowBox[{
         SqrtBox["2"], " ", "\[Sigma]"}]], "]"}], "+", 
      RowBox[{"Erf", "[", 
       FractionBox["\[Mu]", 
        RowBox[{
         SqrtBox["2"], " ", "\[Sigma]"}]], "]"}]}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.676467577391876*^9, 3.676467583150907*^9}, {
  3.676467620923286*^9, 3.676467642689784*^9}, {3.684540628942993*^9, 
  3.684540631070787*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"sigs", " ", "=", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.1", ",", "0.5", ",", "1", ",", "2", ",", 
        RowBox[{"5", "/", 
         RowBox[{"\[Sqrt]", "3"}]}], ",", "5"}], "}"}], "/", "10"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"TODO", ":", " ", 
     RowBox[{
     "place", " ", "legend", " ", "inside", " ", "the", " ", "plot"}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"TorquePivotUni", "[", 
         RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Sigma]", ",", "sigs"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Mu]", ",", 
       RowBox[{"-", "1"}], ",", "4"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"LineLegend", "[", 
         RowBox[{"sigs", ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Black", ",", "Bold", ",", "8"}], "}"}]}], ",", 
          RowBox[{"LegendLabel", "\[Rule]", "\"\<\[Sigma]=\>\""}]}], "]"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"0.75", ",", "0.55"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Mu]\>\"", ",", "\"\<Torque\>\""}], "}"}]}], ",", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "2"}], ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "2"}], ",", "1"}], "}"}]}], "}"}], "]"}], 
       "}"}]}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<../abecker/SwarmPublications/JournalTorqueControl/pictures/pdf/\
TorqueUni.pdf\>\"", ",", "%"}], "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.686492491792839*^9, 3.686492493188386*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sigs", " ", "=", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.1", ",", "0.5", ",", "1", ",", "2", ",", 
       RowBox[{"5", "/", 
        RowBox[{"\[Sqrt]", "3"}]}], ",", "5"}], "}"}], "/", "10"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"TODO", ":", " ", 
    RowBox[{
    "place", " ", "legend", " ", "inside", " ", "the", " ", "plot"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"TorquePivotTriATB", "[", 
       RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "sigs"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", 
     RowBox[{"-", "2"}], ",", "4"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{"sigs", ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", "Bold", ",", "8"}], "}"}]}], ",", 
        RowBox[{"LegendLabel", "\[Rule]", "\"\<\[Sigma]=\>\""}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.75", ",", "0.55"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Mu]\>\"", ",", "\"\<Torque\>\""}], "}"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Sqrt]", "2"}], "/", "2"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Sqrt]", "2"}], "/", "2"}], ",", "1"}], "}"}]}], "}"}], 
      "]"}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<../abecker/SwarmPublications/JournalTorqueControl/pictures/pdf/\
TorqueTri.pdf\>\"", ",", "%"}], "]"}], ";"}]}], "Input"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sigs", " ", "=", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.1", ",", "0.5", ",", "1", ",", "2", ",", 
       RowBox[{"5", "/", 
        RowBox[{"\[Sqrt]", "3"}]}], ",", "5"}], "}"}], "/", "10"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"TODO", ":", " ", 
    RowBox[{
    "place", " ", "legend", " ", "inside", " ", "the", " ", "plot"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"TorquePivotNorm", "[", 
      RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{"\[Sigma]", "\[Rule]", "sigs"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", 
     RowBox[{"-", "2"}], ",", "4"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{"sigs", ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", "Bold", ",", "8"}], "}"}]}], ",", 
        RowBox[{"LegendLabel", "\[Rule]", "\"\<\[Sigma]=\>\""}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.75", ",", "0.55"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Mu]\>\"", ",", "\"\<Torque\>\""}], "}"}]}], ",", " ", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"2", "/", "3"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"2", "/", "3"}], ",", "1"}], "}"}]}], "}"}], "]"}], 
     "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<../abecker/SwarmPublications/JournalTorqueControl/pictures/pdf/\
TorqueNormal.pdf\>\"", ",", "%"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.683656192718853*^9, 3.68365650959415*^9}, {
   3.684540635146593*^9, 3.684540677064104*^9}, 3.68463443016495*^9, {
   3.684634642808958*^9, 3.684634652898061*^9}, {3.684634891389399*^9, 
   3.684635015089489*^9}, {3.68463505265368*^9, 3.6846350533908997`*^9}, {
   3.684635268251931*^9, 3.684635287362721*^9}, 3.685878483097558*^9, {
   3.685878640893025*^9, 3.685878662111373*^9}, {3.686489566073936*^9, 
   3.686489568143175*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Comparison Plots", "Subsection",
 CellChangeTimes->{{3.684538773093625*^9, 3.6845387789630013`*^9}, {
  3.684542352618402*^9, 3.6845423568740664`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"bestPushNorm", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ans", "=", 
        RowBox[{"FindMaximum", "[", 
         RowBox[{
          RowBox[{
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"-", 
                  FractionBox[
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], 
                   RowBox[{"2", " ", 
                    SuperscriptBox["\[Sigma]", "2"]}]]}]]}], "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"-", 
                 FractionBox[
                  SuperscriptBox["\[Mu]", "2"], 
                  RowBox[{"2", " ", 
                   SuperscriptBox["\[Sigma]", "2"]}]]}]]}], ")"}], " ", 
             "\[Sigma]"}], 
            SqrtBox[
             RowBox[{"2", " ", "\[Pi]"}]]], "+", 
           RowBox[{
            FractionBox["1", "2"], " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Erf", "[", 
               FractionBox[
                RowBox[{"1", "-", "\[Mu]"}], 
                RowBox[{
                 SqrtBox["2"], " ", "\[Sigma]"}]], "]"}], "+", 
              RowBox[{"Erf", "[", 
               FractionBox["\[Mu]", 
                RowBox[{
                 SqrtBox["2"], " ", "\[Sigma]"}]], "]"}]}], ")"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Mu]", ",", "1"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", 
         RowBox[{"First", "@", "ans"}], ",", 
         RowBox[{"ans", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
        "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "0.01", ",", "1", ",", "0.01"}], "}"}]}], 
     "]"}]}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.684539759369796*^9, 3.684539766770606*^9}, {
  3.68454237504427*^9, 3.684542375371945*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634463899085*^9, 3.684635682930705*^9, 
  3.684668010384075*^9, 3.684688640112808*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.12743099999999998872546314032661030069`5.1258750044753905", ",", 
   "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.6845397674626293`*^9, 3.684542384795682*^9, 
  3.684634463979389*^9, 3.684635683010354*^9, 3.6846680104677887`*^9, 
  3.684688640184984*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"bestPushUni", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ans", "=", 
        RowBox[{"FindMaximum", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"TorquePivotUni", "[", 
            RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Mu]", ",", 
            RowBox[{"Max", "[", 
             RowBox[{
              RowBox[{"1", "-", 
               RowBox[{"\[Sigma]", 
                RowBox[{"\[Sqrt]", "3"}]}]}], ",", 
              RowBox[{"\[Sigma]", 
               RowBox[{"\[Sqrt]", "3"}]}]}], "]"}]}], "}"}]}], "]"}]}], ";", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", 
         RowBox[{"First", "@", "ans"}], ",", 
         RowBox[{"ans", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
        "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "0.01", ",", "1", ",", "0.01"}], "}"}]}], 
     "]"}]}], ";"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"bestPushUniBot", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ans", "=", 
        RowBox[{"FindMaximum", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"TorquePivotUni", "[", 
            RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Mu]", ",", 
            RowBox[{"1", "-", 
             RowBox[{"\[Sigma]", 
              RowBox[{"\[Sqrt]", "3"}]}]}]}], "}"}]}], "]"}]}], ";", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", 
         RowBox[{"First", "@", "ans"}], ",", 
         RowBox[{"ans", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
        "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "0.01", ",", "1", ",", "0.01"}], "}"}]}], 
     "]"}]}], ";"}], "]"}]}], "Input",
 CellChangeTimes->{{3.684539481796115*^9, 3.6845394881208687`*^9}, {
  3.68454136885922*^9, 3.684541404523679*^9}, {3.684541477889475*^9, 
  3.684541492077577*^9}, {3.684542377163807*^9, 3.68454237733956*^9}, {
  3.684542512842882*^9, 3.684542561507465*^9}, {3.6845426182605047`*^9, 
  3.684542634353174*^9}, {3.684543372905573*^9, 3.6845433798502083`*^9}, {
  3.6845434102664003`*^9, 3.68454342476092*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846344640481052`*^9, 3.684635683070904*^9, 
  3.6846680105347633`*^9, 3.684688640251176*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846344640481052`*^9, 3.684635683070904*^9, 
  3.6846680105347633`*^9, 3.6846886403056087`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846344640481052`*^9, 3.684635683070904*^9, 
  3.6846680105347633`*^9, 3.6846886403627*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(FindMaximum :: \
lstol\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.6846344640481052`*^9, 3.684635683070904*^9, 
  3.6846680105347633`*^9, 3.6846886403810987`*^9, 3.684839589634404*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.22257299999999999307043196949962293729`5.3680723928550815", ",", 
   "Null"}], "}"}]], "Output",
 CellChangeTimes->{
  3.684539491999902*^9, {3.684541372176519*^9, 3.684541405262801*^9}, {
   3.68454148008794*^9, 3.684541492595182*^9}, 3.684542386864703*^9, {
   3.684542514601239*^9, 3.6845425621064043`*^9}, 3.6845426349628696`*^9, {
   3.68454341768991*^9, 3.684543425461896*^9}, 3.684634464230507*^9, 
   3.684635683260054*^9, 3.684668010717383*^9, 3.6846886404236803`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846344640481052`*^9, 3.684635683070904*^9, 
  3.6846680105347633`*^9, 3.6846886404874372`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846344640481052`*^9, 3.684635683070904*^9, 
  3.6846680105347633`*^9, 3.684688640538663*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846344640481052`*^9, 3.684635683070904*^9, 
  3.6846680105347633`*^9, 3.68468864059182*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(FindMaximum :: lstol\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846344640481052`*^9, 3.684635683070904*^9, 
  3.6846680105347633`*^9, 3.684688640610427*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "fmgz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered a gradient that is effectively zero. The \
result returned may not be a maximum; it may be a minimum or a saddle point. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FindMaximum/fmgz\\\", \
ButtonNote -> \\\"FindMaximum::fmgz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846344640481052`*^9, 3.684635683070904*^9, 
  3.6846680105347633`*^9, 3.684688640657858*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "fmgz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered a gradient that is effectively zero. The \
result returned may not be a maximum; it may be a minimum or a saddle point. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FindMaximum/fmgz\\\", \
ButtonNote -> \\\"FindMaximum::fmgz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846344640481052`*^9, 3.684635683070904*^9, 
  3.6846680105347633`*^9, 3.68468864067673*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "fmgz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered a gradient that is effectively zero. The \
result returned may not be a maximum; it may be a minimum or a saddle point. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FindMaximum/fmgz\\\", \
ButtonNote -> \\\"FindMaximum::fmgz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846344640481052`*^9, 3.684635683070904*^9, 
  3.6846680105347633`*^9, 3.684688640714922*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(FindMaximum :: fmgz\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846344640481052`*^9, 3.684635683070904*^9, 
  3.6846680105347633`*^9, 3.68468864071859*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.31402999999999997582378341576259117573`5.517571052474177", ",", "Null"}],
   "}"}]], "Output",
 CellChangeTimes->{
  3.684539491999902*^9, {3.684541372176519*^9, 3.684541405262801*^9}, {
   3.68454148008794*^9, 3.684541492595182*^9}, 3.684542386864703*^9, {
   3.684542514601239*^9, 3.6845425621064043`*^9}, 3.6845426349628696`*^9, {
   3.68454341768991*^9, 3.684543425461896*^9}, 3.684634464230507*^9, 
   3.684635683260054*^9, 3.684668010717383*^9, 3.684688640753598*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Last", "[", 
  RowBox[{"{", 
   RowBox[{
   "0.13768099999999999782929194225289393216`5.15947392496363", ",", "Null"}],
    "}"}], "]"}]], "Input",
 NumberMarks->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"bestPushTriATB", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ans", "=", 
        RowBox[{"FindMaximum", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"TorquePivotTriATB", "[", 
            RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Mu]", ",", "1"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", 
         RowBox[{"First", "@", "ans"}], ",", 
         RowBox[{"ans", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
        "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "0.01", ",", "1", ",", "0.01"}], "}"}]}], 
     "]"}]}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.684533733790844*^9, 3.68453373380893*^9}, {
   3.684538649827408*^9, 3.684538714949552*^9}, 3.68453892285102*^9, {
   3.684542378699654*^9, 3.68454237881138*^9}, {3.6845436590584784`*^9, 
   3.684543659444222*^9}, 3.684543720984222*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634464778311*^9, 3.684635683686736*^9, 
  3.684668011271706*^9, 3.684688640858337*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634464778311*^9, 3.684635683686736*^9, 
  3.684668011271706*^9, 3.684688640911736*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "sdprec"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Line search unable to find a sufficient increase in the \
function value with \[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digit \
precision. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/FindMaximum\\\", \
ButtonNote -> \\\"FindMaximum::sdprec\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634464778311*^9, 3.684635683686736*^9, 
  3.684668011271706*^9, 3.684688640973918*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634464778311*^9, 3.684635683686736*^9, 
  3.684668011271706*^9, 3.6846886410335207`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(FindMaximum :: lstol\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634464778311*^9, 3.684635683686736*^9, 
  3.684668011271706*^9, 3.684688641064848*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.32592399999999999149480345295160077512`5.533716254977648", ",", "Null"}],
   "}"}]], "Output",
 CellChangeTimes->{
  3.684538715723082*^9, {3.68453892449374*^9, 3.6845389296288853`*^9}, 
   3.6845423903632307`*^9, 3.684543660180376*^9, 3.684634465051095*^9, 
   3.684635683948936*^9, 3.684668011570998*^9, 3.684688641136376*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"bestPushTri", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ans", "=", 
        RowBox[{"FindMaximum", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"TorquePivot", "[", 
             RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], "&&", 
            RowBox[{"\[Mu]", ">", "0"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Mu]", ",", "1"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", 
         RowBox[{"First", "@", "ans"}], ",", 
         RowBox[{"ans", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
        "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "0.01", ",", "1", ",", "0.01"}], "}"}]}], 
     "]"}]}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.676466416448494*^9, 3.676466470673649*^9}, {
   3.6764665929400253`*^9, 3.6764667320443153`*^9}, {3.6764667913415413`*^9, 
   3.676466813481152*^9}, {3.6764670024882803`*^9, 3.676467011715851*^9}, {
   3.684533315639995*^9, 3.6845333574782143`*^9}, {3.684533424740246*^9, 
   3.684533427664321*^9}, 3.684533609947345*^9, {3.6845386232823772`*^9, 
   3.6845386237138233`*^9}, {3.684538695860608*^9, 3.684538724948888*^9}, {
   3.684542380459647*^9, 3.6845423806275063`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634465183243*^9, 3.684635684230503*^9, 
  3.684668011698328*^9, 3.6846886414162188`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634465183243*^9, 3.684635684230503*^9, 
  3.684668011698328*^9, 3.684688641642754*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634465183243*^9, 3.684635684230503*^9, 
  3.684668011698328*^9, 3.684688641758387*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(FindMaximum :: lstol\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634465183243*^9, 3.684635684230503*^9, 
  3.684668011698328*^9, 3.684688641799696*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "6.05866599999999966286168273654766380787`6.802976924803199", ",", "Null"}],
   "}"}]], "Output",
 CellChangeTimes->{3.6845387358336267`*^9, 3.6846344708471212`*^9, 
  3.6846356912122307`*^9, 3.684668017922505*^9, 3.6846886473573627`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plotBestLocationPivotObject", " ", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"bestPushNorm", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
          RowBox[{"bestPushNorm", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"bestPushTriATB", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
          RowBox[{"bestPushTriATB", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"bestPushUni", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
          RowBox[{"bestPushUni", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"bestPushUniBot", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
          RowBox[{"bestPushUniBot", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}], 
        "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Sigma] of swarm\>\"", ",", 
        "\"\<Optimal push location (\[Mu])\>\""}], "}"}]}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Filling", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"3", "\[Rule]", 
        RowBox[{"{", "4", "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "Automatic", ",", "Automatic", ",", 
        RowBox[{"ColorData", "[", 
         RowBox[{"97", ",", "3"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"LineLegend", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<Normal\>\"", ",", "\"\<Triangle\>\"", ",", 
            "\"\<Uniform\>\""}], "}"}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Black", ",", "Bold", ",", "8"}], "}"}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.77", ",", "0.75"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Dashed", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"2", "/", "3"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"100", ",", 
             RowBox[{"2", "/", "3"}]}], "}"}]}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{
              RowBox[{"\[Sqrt]", "2"}], "/", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"100", ",", 
             RowBox[{
              RowBox[{"\[Sqrt]", "2"}], "/", "2"}]}], "}"}]}], "}"}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"1", "/", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"100", ",", 
             RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}], "]"}]}], 
       "\[IndentingNewLine]", "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", 
        RowBox[{"{", 
         RowBox[{"0.4", ",", "1.0"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Prolog", "\[Rule]", " ", 
      RowBox[{"Inset", "[", 
       RowBox[{"pivotDrawing", "[", 
        RowBox[{"1", "/", "10"}], "]"}], "]"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", "\[IndentingNewLine]", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<Where to push object pivoted at 0, length 1, to maximize \
torque\>\""}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<../abecker/SwarmPublications/JournalTorqueControl/pictures/pdf/\
BestLocationPivot.pdf\>\"", ",", "%"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotMaxTorquePivotObject", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"bestPushNorm", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
          RowBox[{"bestPushNorm", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], 
        "]"}], ",", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"bestPushTriATB", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
          RowBox[{"bestPushTriATB", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"bestPushUni", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
          RowBox[{"bestPushUni", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], 
        "]"}]}], "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Sigma] of swarm\>\"", ",", "\"\<Max Torque\>\""}], 
       "}"}]}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<Normal\>\"", ",", "\"\<Triangle\>\"", ",", "\"\<Uniform\>\""}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Right", ",", "Top"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<Maximum possible torque on object pivoted at 0, length 1\>\""}], 
     ",", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<../abecker/SwarmPublications/JournalTorqueControl/pictures/pdf/\
MaxTorquePivot.pdf\>\"", ",", "%"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GraphicsRow", "[", 
   RowBox[{"{", 
    RowBox[{"plotBestLocationPivotObject", ",", "plotMaxTorquePivotObject"}], 
    "}"}], "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.676466820390336*^9, 3.676466989524275*^9}, {
   3.676467176427374*^9, 3.676467178092044*^9}, {3.676467921880308*^9, 
   3.676467966912457*^9}, {3.676468003785376*^9, 3.6764681638781776`*^9}, {
   3.676468384380714*^9, 3.6764684153499928`*^9}, {3.676707813843314*^9, 
   3.6767079846388817`*^9}, {3.676708047904991*^9, 3.6767081476060266`*^9}, {
   3.6767082139474154`*^9, 3.6767082727058077`*^9}, {3.6767083111956387`*^9, 
   3.67670831472095*^9}, {3.6845337620296717`*^9, 3.684533764907995*^9}, {
   3.684538635321357*^9, 3.684538643391612*^9}, {3.684538747385893*^9, 
   3.6845387563731527`*^9}, {3.684539513008461*^9, 3.684539632658648*^9}, {
   3.6845396872828693`*^9, 3.684539701923581*^9}, {3.684539783126017*^9, 
   3.684539794917314*^9}, {3.684539829955718*^9, 3.684539929322253*^9}, {
   3.684539974204549*^9, 3.684539998544354*^9}, {3.684540045281748*^9, 
   3.68454009313211*^9}, {3.68454017096564*^9, 3.6845401888859377`*^9}, {
   3.6845414193238163`*^9, 3.684541433577652*^9}, 3.684541519396113*^9, 
   3.6845424131349707`*^9, {3.684542653280794*^9, 3.684542657339637*^9}, {
   3.684543360939043*^9, 3.684543366906088*^9}, {3.6845434300387774`*^9, 
   3.684543458328472*^9}, {3.684543604949129*^9, 3.684543617696163*^9}, 
   3.684543728731419*^9, {3.684635845492674*^9, 3.684635897530367*^9}, {
   3.684688586852866*^9, 3.684688591831575*^9}, {3.684688803380711*^9, 
   3.684688883682922*^9}, {3.684688922675078*^9, 3.684689121375661*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     FormBox[
      TagBox[
       FormBox[
        GraphicsBox[{{{}, GraphicsComplexBox[CompressedData["
1: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
/l9QclZ2
            
            "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, 
              {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.2], EdgeForm[
               None], GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwlzkdOQgEARdH/wV4Q7IigIMp+3IAJC9B12ruiYu8dOxbQkzg4uW/4ssWZ
yelIEAQhU0SNBhppopkWWmmjnQ46idFFnATd9NBLH/0MMEiSIVIMkybDCKNk
yTFGngLjRJggDP9P/kqdGj9888UnVT54541XXnjmiQqPPHDPHbfccM0Vl1xw
zhmnnHDMEYccsE+ZPXbZocQ2W2yywTprrLLCMkssssA8c8zyBxBkNkU=
                 
                 "]]]}, {}, {}}, {{}, {}, {}, 
              {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
               0.011111111111111112`], AbsoluteThickness[1.6], 
               LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
                 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 
                32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 
                47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 
                62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 
                77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 
                92, 93, 94, 95, 96, 97, 98, 99, 100}]}, 
              {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
               0.011111111111111112`], AbsoluteThickness[1.6], 
               LineBox[{101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
                 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 
                124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 
                136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 
                148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 
                160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 
                172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 
                184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 
                196, 197, 198, 199, 200}]}, 
              {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
               0.011111111111111112`], AbsoluteThickness[1.6], 
               LineBox[{201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
                 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 
                224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 
                236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 
                248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 294}]}, 
              {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
               0.011111111111111112`], AbsoluteThickness[1.6], 
               LineBox[{259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
                 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 
                282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 
                295}]}}}], {}}, InsetBox[
           TemplateBox[{"\"Normal\"","\"Triangle\"","\"Uniform\""},
            "LineLegend",
            DisplayFunction->(FormBox[
              StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                GrayLevel[0], FontWeight -> Bold, FontSize -> 8, FontFamily -> 
                "Arial"}, Background -> Automatic, StripOnInput -> False], 
              TraditionalForm]& ),
            Editable->True,
            InterpretationFunction:>(RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                    "}"}], "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", "Bold", ",", "8"}], "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
               "]"}]& )], Scaled[{0.77, 0.75}], ImageScaled[{0.5, 0.5}],
           BaseStyle->{FontSize -> Larger},
           FormatType->StandardForm]},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{
           FormBox["\"\[Sigma] of swarm\"", TraditionalForm], 
           FormBox["\"Optimal push location (\[Mu])\"", TraditionalForm]},
         AxesOrigin->{0, 0.403},
         DisplayFunction->Identity,
         Epilog->{
           Dashing[{Small, Small}], 
           LineBox[
            NCache[{{0, 
               Rational[2, 3]}, {100, 
               Rational[2, 3]}}, {{0, 0.6666666666666666}, {
              100, 0.6666666666666666}}]], 
           LineBox[
            
            NCache[{{0, 2^Rational[-1, 2]}, {100, 2^Rational[-1, 2]}}, {{
              0, 0.7071067811865475}, {100, 0.7071067811865475}}]], 
           LineBox[
            NCache[{{0, 
               Rational[1, 2]}, {100, 
               Rational[1, 2]}}, {{0, 0.5}, {100, 0.5}}]]},
         Frame->{{False, False}, {False, False}},
         FrameLabel->{{None, None}, {None, None}},
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImageSize->Medium,
         Method->{},
         PlotLabel->FormBox[
          "\"Where to push object pivoted at 0, length 1, to maximize \
torque\"", TraditionalForm],
         PlotRange->{{0, 1.}, {0.4, 1.}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}},
         Prolog->InsetBox[
           GraphicsBox[{
             RGBColor[0.6, 0.4, 0.2], 
             RectangleBox[
              NCache[{0, 
                Rational[-1, 10]}, {0, -0.1}], 
              NCache[{1, 
                Rational[1, 10]}, {1, 0.1}]], 
             RGBColor[0, 0, 1], 
             PointBox[{0, 0}], 
             RGBColor[1, 0, 0], 
             PolygonBox[
              
              NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2},
                 {
                 Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
                1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]], 
             GrayLevel[0], 
             PointSize[Tiny], 
             PointBox[CompressedData["
1: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
WA==
              "]]}, PlotRange -> {{-1, 3}, {-8, 2}}, 
            AxesOrigin -> {0, 0}]],
         Ticks->{Automatic, Automatic}],
        TraditionalForm],
       InterpretTemplate[Legended[
         Graphics[{{}, 
           GraphicsComplex[CompressedData["
1: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
/l9QclZ2
            
            "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
               EdgeForm[], 
               Directive[
                RGBColor[0.560181, 0.691569, 0.194885], 
                Opacity[0.2]], 
               GraphicsGroup[{
                 Polygon[CompressedData["
1:eJwlzkdOQgEARdH/wV4Q7IigIMp+3IAJC9B12ruiYu8dOxbQkzg4uW/4ssWZ
yelIEAQhU0SNBhppopkWWmmjnQ46idFFnATd9NBLH/0MMEiSIVIMkybDCKNk
yTFGngLjRJggDP9P/kqdGj9888UnVT54541XXnjmiQqPPHDPHbfccM0Vl1xw
zhmnnHDMEYccsE+ZPXbZocQ2W2yywTprrLLCMkssssA8c8zyBxBkNkU=
                  
                  "]]}]}, {}, {}}, {{}, {}, {}, {
               Hue[0.67, 0.6, 0.6], 
               Directive[
                PointSize[0.011111111111111112`], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[1.6]], 
               
               Line[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
                17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 
                32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 
                47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 
                62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 
                77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 
                92, 93, 94, 95, 96, 97, 98, 99, 100}]}, {
               Hue[0.9060679774997897, 0.6, 0.6], 
               Directive[
                PointSize[0.011111111111111112`], 
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[1.6]], 
               
               Line[{101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 
                112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 
                124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 
                136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 
                148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 
                160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 
                172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 
                184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 
                196, 197, 198, 199, 200}]}, {
               Hue[0.1421359549995791, 0.6, 0.6], 
               Directive[
                PointSize[0.011111111111111112`], 
                RGBColor[0.560181, 0.691569, 0.194885], 
                AbsoluteThickness[1.6]], 
               
               Line[{201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 
                212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 
                224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 
                236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 
                248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 294}]}, {
               Hue[0.37820393249936934`, 0.6, 0.6], 
               Directive[
                PointSize[0.011111111111111112`], 
                AbsoluteThickness[1.6], 
                RGBColor[0.560181, 0.691569, 0.194885]], 
               
               Line[{259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 
                270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 
                282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 
                295}]}}}], {}}, {
          DisplayFunction -> Identity, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0.403}, 
           PlotRange -> {{0, 1.}, {0.4, 1.}}, DisplayFunction -> Identity, 
           AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {
            "\[Sigma] of swarm", "Optimal push location (\[Mu])"}, 
           AxesOrigin -> {0, 0.403}, DisplayFunction :> Identity, Epilog -> {
             Dashing[{Small, Small}], 
             Line[{{0, 
                Rational[2, 3]}, {100, 
                Rational[2, 3]}}], 
             Line[{{0, 2^Rational[-1, 2]}, {100, 2^Rational[-1, 2]}}], 
             Line[{{0, 
                Rational[1, 2]}, {100, 
                Rational[1, 2]}}]}, Frame -> {{False, False}, {False, False}},
            FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
           PlotLabel -> 
           "Where to push object pivoted at 0, length 1, to maximize torque", 
           PlotRange -> {{0, 1.}, {0.4, 1.}}, PlotRangeClipping -> True, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {0, 0}}, Prolog -> Inset[
             Graphics[{
               RGBColor[0.6, 0.4, 0.2], 
               Rectangle[{0, 
                 Rational[-1, 10]}, {1, 
                 Rational[1, 10]}], 
               RGBColor[0, 0, 1], 
               Point[{0, 0}], 
               RGBColor[1, 0, 0], 
               
               Polygon[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {
                 1, -2}, {
                  Rational[1, 4], -3}, {0.75, -3}}], 
               GrayLevel[0], 
               PointSize[Tiny], 
               Point[CompressedData["
1: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
WA==
                "]]}, PlotRange -> {{-1, 3}, {-8, 2}}, 
              AxesOrigin -> {0, 0}]], Ticks -> {Automatic, Automatic}}], 
         Placed[
          Unevaluated[
           LineLegend[{
             Directive[
              PointSize[0.011111111111111112`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              PointSize[0.011111111111111112`], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              PointSize[0.011111111111111112`], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              PointSize[0.011111111111111112`], 
              AbsoluteThickness[1.6], 
              RGBColor[0.560181, 0.691569, 0.194885]]}, {
            "Normal", "Triangle", "Uniform"}, 
            Joined -> {{True, True, True, True}}, LabelStyle -> {
              GrayLevel[0], Bold, 8}, LegendLayout -> "Column", 
            LegendMarkers -> {{False, Automatic}, {False, Automatic}, {
              False, Automatic}, {False, Automatic}}]], {0.77, 0.75}, 
          Identity]]& ],
       AutoDelete->True,
       Editable->True,
       SelectWithContents->False,
       Selectable->True],
      TraditionalForm], {192., -189.}, {Center, Center}, {360., 360.}], 
    InsetBox[
     FormBox[
      TagBox[
       FormBox[
        GraphicsBox[{{{}, {{}, {}, 
            {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
             0.011111111111111112`], AbsoluteThickness[1.6], 
             LineBox[CompressedData["
1:eJwtlAtMU2cUxxERC4gukzp1DMTNFXUmG6CbMPgTVxDsRASHm+BwDHW+Ikhm
AAfIhjEs2zTI3NrxEGGLyAABgxARBoJQaGsf0JZ3X1BKeQUpkYljbT0nubn5
7r3fOef//53vesSdjzhua2NjE2++LPdLLhV71alZeFgyVh1tP41X61yYOG2m
Ku8p1LldMR6sK4C48kqN64VJel+C/L0/eR5vmACPa4lS2O04xX62ZgL11u8r
UGb7bKPXGSPMC/OTKix+JD68WjhO++/D61Dol00+43BUFCf4Oz5AF+ulqKzI
AGs6bj3+zdyz/chaA7bGXGsxeTYgOOjNH09mj1E/jdjqcfdW5vIxlJh3K4r/
AdMhqzEuU48Ja71mJK1ULols9fDxtsRjZGyZC8m5Okr1W2E/XSdIXzOKxyZP
c4U2+Po4/XeGNwInaz/tkIU6q3Z6jiDCWrAD4XkHyhvqdKSXj/EgbouOo4Mm
1ZKwE/xrN0pvqrXUrwCaT3dvaErRItHSXoIQnJ2uXWEuWvJHhOx26Ru+VRrY
WEMMPS/mWHK4hvSIwetfilo+q0aI2lJAAt6pwAD5r2rSJ8EzH4bXpJ8a11ss
AqQ467Q5m61TwSrXWwan69lRyl9UsMpRyDBfnbyqxE9F+ruxLeRwOrtnGO6W
dtx6UOu+3p774TD50YNu1mLzroIhnDxhCTmM2abaVQ5D5I8C9g3+SyuTB2HJ
5lKhQOuCx+Ja4wD5pUS1h+76xrgBzFvSmZRIY936ym6wn/zrxYrey6/XR/cj
wDoAfVjYU5HlPtRHfvZhqIC9xi2+D9b2rvTDjhFRw5vsJX8HkBAQve9Sai+E
AksM4LMZduWfjr3k9yBu+DSpl/KVYFobHMILbeo7CT5K8n8IqvnsdYNCBazp
Yobh9N0XHTtOK4iHCl5ldYJQBwXpUUFYERu8oUxOfFRwYMTPZh2Qkz4VPGOX
vX9xvod4qfHJLqa9orCH9KoR6Vz8bg6nh/ipwcgtn8lZ6Cb9GuwfvpPQVtpN
PDVgJzbHrovpxqt0Giw78t7mpNe6ia8Wrn3lrfwnMvJHi0ctaQuMDBnx1sKJ
U+ayabeM/NIh5IO3GEtzUuKvQ3J1cOzNain5p8PIpr98FYlSmocRGP9w49R4
ScnPEQTm+gldTRKajxH8Hnk6y75eQv6Ooq/Iu/brdAnNyygM4rQtnkES8nsU
5cZB5xBnCZ138zlNeOlWJxeT/3qEa9cnnysS0zzpMfA9r/joOTHxGMM3tbKc
dF8x8RjDby/l3CcMMfEYw8fH9fLP7z0lHub/guzOtrCDT4mHAdLKy8+j50TE
w4DBu0v3Erki4mFAw+32+IxAEfEYBytv+NG3BiHxGEd6BWchKFdI8zmOoBS9
Sh0oJB5GPPwhs81vWkA8jGA17kwJLhQQDyP8/VfsM4ULiMcEfvYuXfSzExCP
CSS5Fbavru8iHhOIYZ4NizvfRTwmcZvFzN/O6iIek5h/0Pn2MVUn8ZjEBX5r
tYnXSTymcMIv7KImqpN4TOHQi8VZV5dO4jGFrkCmbZ6UTzymsdHEFEXl8InH
NP6+ePYpO5JPPKax6vl+/lEmn3jMmOvdf8JVduB/Gv0hXg==
              "]]}, 
            {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
             0.011111111111111112`], AbsoluteThickness[1.6], 
             LineBox[CompressedData["
1:eJwtkw001XcYx6+xKDozahbSMpOkk7cts+obZx2bmrfSTpjhiKJGQzOVckov
LFnrnIpixaZykhWSiuUlL9d9d7uXq+u+eblvaCXVUc29Pc85//M/v//v/3ue
5/v9PL+lCWkR299jMBiJs4/hvW9BTZA85wh6CpcdZH45gXfrMwjRdx49mD2O
Rqd8bXhjGQIWmZ21u6en/UpYfeYe8JuZHiXnDXEVQqem9YJwHe4Y/69B0/Xg
i0MVWswuZr/8A9MP1/RdeqWh83VgrH1hYbFVg3miivS1827j2t1Y/zf1ahjT
nb+Dc7t1+36yV2N5zKnWKbd7mHvdyyvg8Bj104ythf7BP0yOonL2tKjiX/i7
XTt4JX4UOmO9B2gJSj9pLhqBr48h2mD3gUdqbNgI1W9HuuOBvGLWMNqm3GYr
dOD49zclh0KGYWnspxPpd/dE2ghUiDAW7AIjxrF9WbSK9HYjbq7QoXJECUWO
IWEPjv+5sjglS0n99uLi6rO1seZK7DG0l87C5YXthxIvKMgfNvo9/U7G+SrA
MAYXM1tDZlZz5KSHi9L216XcXXJ8IzcU4KE5o0ZnPV9O+nhYk5qyXHZDhuJW
gwA+OgM7NrtGymCU6yOAdYFp2q2XQzDKEQmw/KpdhFPIEOnvQ/Wmw75Xq6RY
YmjHSYgoW5MV0XOk5IcQFpEHzD1SHiM5yRCP8H7iw2MWgkHyR4QQ5t1c4fpB
GLItqBFhU22L38+3JOSXGKclOzY2uUvw3JBuSowz3wY+O/r3APnXj/3MrKW1
rgNYZxyAAXiGVPnNr+4nPwcwNy+uOsunH8b28iX4L7kt8UGLmPwdRKX810Xd
oWKweg0xiPkNbYeSlCLy+zH+2jK5LzNHhIXGBqWo48R4chaIyH8p/D51ttty
8xGM6WKGEK9UmykiHhEPGQ484a/Y9lxIemRIYCg/Lr0gJD4y9DivrCnYICR9
Mlg0/2Fv9aSPeMnhyhJzzMr7SK8cH7kc+yU6tI/4yVEiWTI6bdJH+hU4vVlq
29YgIJ4KPGGHz6naLcC7dAqId82wilwFxFeJ4GCHrCQ5n/xR4rH3zWf2ZXzi
rUS5Vu9WEsMnv1QYSNB08B35xF+FzDPDm+qkPPJPhYxslcmqyzyah2F4VPTK
fZJ55Ocw3L2enqtbyaP5mN23/CSnYopL/o5g/3bTvU+buTQvI/jqiL3tuRNc
8nsE096MpPxILt33UUw/dZlX68wl/0exI1T4ub2CQ/M0ig1F66Jc8jjEYwzH
syt/T3HmEI8xBLLfPuzvYBOPMVgNLK7/MZVNPMbgbfvFoMaGTTzUcMm0yU65
xyIeasTnte5lJ7OIhxrJobw084Us4qGBn8d06Zz2XuKhwRU1WPcze2k+NVAt
Lk9esqyXeGghNtdtc5IwiYcWdg6wqylmEg8tHAqri1uDmMRDh4jc0FVhDCbx
0OHWUD17Y1MP8dDByjr/9rWsHuKhR8zbrJIE7x7ioYdZzqnCnZPdxEMP94ZL
r+tvdBOPcZTsfHN/XXo38RhHsWbn5CuvbuIxjjDbQEvFsy7iMYEygUigbewi
HhOQF7yIss7tIh4TWJxR+TLo6y7iMQlp0cR3hZZd+B9XFRhO
              "]]}, 
            {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
             0.011111111111111112`], AbsoluteThickness[1.6], 
             LineBox[CompressedData["
1:eJwtkwtQVGUYhsGBkcGmkQYDCTGMHFQ05ZZDwmuJQjMocommcStCwEpQwSIB
yyYlGskJIgtxIgQTUILoujTk4F5Y2BvsLsvCsqx732WvTomNpTtxjt8/c2bn
nLPn+7/vfZ4/tuR4ftmKgICA0uWL+a0PH8gy1p3DwdqQPdHVPjy6/wqdf63+
dKfFC25MgyuP24HVFWsnCou89P4qSq2xj1WNe9B+iVl94L6xOfdCmgfD7P8H
EDmb+GVfvxvLN8tPhnAs7wW1MMZN3/+CMfGeSFOzC6Ga7hPpob9jfWbOIf8K
F9hyl4ZR82dhR9T7TmzifMFbih+BIvV1Y6p9kfq5ic0/lsUVvLaIq8tfa7pH
8cmmY0eOSxxws/vdgq6r5npTugPJScziIyn6jKdn0E77C/D5xcbtglg7+Evx
yzsIYX28+aSh1YZVbD8iZHzW9tuDYBvy2Q3H8U3glfuRp6w07wR8dX27UpwW
mOqYgmJk3R06k8exUL9SdFb+wauUm1HFtHdChvs2XvD53WbKR478Ykn2tZ9M
CGDXFG7MqZp4cSaaZwpBBTq5/msjso3MBgpwpJaw/0KMNJ8Cv+71FEbUG9DM
YwZQ4kbIh/Gt2ttgx01SYfsrd07eEuvBjqNRoSrf8GytdIHmn4Yud4izRq/D
eqadGDUe1mvT4vzzlIcaZY055W9umceRcmbNoCouQvF9qZby0eDhvuyme71z
YKqFD2gQ9J3maMU/s5TXLNRRge+k5c7iHlNuaRbtp1s+7h3UUH5zMOPuk2GR
GmSwAmhx4NURrr5xhvLU4ue/07ed96vBttcwj8MvLqja6tWUrw4Pdc8kXPZP
QyZllg7inZ1dWxqnKe8FKPZvOOUJn8YatkE9Rj5IUDb1qCh/PdJTahzcDBXY
cpzbCIlKydmqVRIPA9YlNe/tqVXSPAb4gpIyndFK4mPAe+sqi2/yFTSfAfIf
Bpy+SgXxMqL3XMPK3KcUNK8ROyLOFg1KpoifEaKagS77R1M0vwnmsKLLiuQp
4mkinpN4VM6E8s5v2zgHJ4mvmfjKKR8z+m1vDTe+LCfeZuIto7ws2Nee7ygp
kBF/C/GXUn4WFJbUyw5XSMkHK/kgoTytqFvQb3yuVUJ+WMkPCeVrQ8UTZ5da
xsTki418EVPeNjzIGlXUB4vpvNvhZ/2ZoPztCETitn8PTJBPdvJpnHg4sDFz
lJPcNU48HOTXOPFwYENsdeLbfhHxcJBvIuKxiP4Oz1Z7iYh4LJJ/IuKxiKZD
K0PDJ8eIh5N8HCMeTmTsSLhe/NIY+ekkP4XEwwWuciYvZ0RIPFzkq5B4uDAR
7I8q2SUkHm7yV0A83Jjvbr3yPE9APNzks4B4eCB71zl/dL+AeHjIbwHx8GAp
dffaawt84uEl3/nEw4uwQdnTF6v5xMNL/vOJhw9zwr4K7yo+8fDReeARDx/8
PS2nK/t4xOMOnQ8e/gdEkiPL
              "]]}}, {}}, InsetBox[
           TemplateBox[{"\"Normal\"","\"Triangle\"","\"Uniform\""},
            "PointLegend",
            DisplayFunction->(FormBox[
              StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False], TraditionalForm]& ),
            Editable->True,
            InterpretationFunction:>(RowBox[{"PointLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "True", ",", "True"}], "}"}], 
                    "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
               "]"}]& )], Scaled[{0.99, 0.99}], ImageScaled[{1, 1}],
           BaseStyle->{FontSize -> Larger},
           FormatType->StandardForm]},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{
           FormBox["\"\[Sigma] of swarm\"", TraditionalForm], 
           FormBox["\"Max Torque\"", TraditionalForm]},
         AxesOrigin->{0, 0},
         DisplayFunction->Identity,
         Frame->{{False, False}, {False, False}},
         FrameLabel->{{None, None}, {None, None}},
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImageSize->Medium,
         Method->{},
         PlotLabel->FormBox[
          "\"Maximum possible torque on object pivoted at 0, length 1\"", 
           TraditionalForm],
         PlotRange->{{0, 1.}, {0, 0.9826794919243103}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}},
         Ticks->{Automatic, Automatic}],
        TraditionalForm],
       InterpretTemplate[Legended[
         Graphics[{{}, {{{}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              Line[CompressedData["
1:eJwtlAtMU2cUxxERC4gukzp1DMTNFXUmG6CbMPgTVxDsRASHm+BwDHW+Ikhm
AAfIhjEs2zTI3NrxEGGLyAABgxARBoJQaGsf0JZ3X1BKeQUpkYljbT0nubn5
7r3fOef//53vesSdjzhua2NjE2++LPdLLhV71alZeFgyVh1tP41X61yYOG2m
Ku8p1LldMR6sK4C48kqN64VJel+C/L0/eR5vmACPa4lS2O04xX62ZgL11u8r
UGb7bKPXGSPMC/OTKix+JD68WjhO++/D61Dol00+43BUFCf4Oz5AF+ulqKzI
AGs6bj3+zdyz/chaA7bGXGsxeTYgOOjNH09mj1E/jdjqcfdW5vIxlJh3K4r/
AdMhqzEuU48Ja71mJK1ULols9fDxtsRjZGyZC8m5Okr1W2E/XSdIXzOKxyZP
c4U2+Po4/XeGNwInaz/tkIU6q3Z6jiDCWrAD4XkHyhvqdKSXj/EgbouOo4Mm
1ZKwE/xrN0pvqrXUrwCaT3dvaErRItHSXoIQnJ2uXWEuWvJHhOx26Ru+VRrY
WEMMPS/mWHK4hvSIwetfilo+q0aI2lJAAt6pwAD5r2rSJ8EzH4bXpJ8a11ss
AqQ467Q5m61TwSrXWwan69lRyl9UsMpRyDBfnbyqxE9F+ruxLeRwOrtnGO6W
dtx6UOu+3p774TD50YNu1mLzroIhnDxhCTmM2abaVQ5D5I8C9g3+SyuTB2HJ
5lKhQOuCx+Ja4wD5pUS1h+76xrgBzFvSmZRIY936ym6wn/zrxYrey6/XR/cj
wDoAfVjYU5HlPtRHfvZhqIC9xi2+D9b2rvTDjhFRw5vsJX8HkBAQve9Sai+E
AksM4LMZduWfjr3k9yBu+DSpl/KVYFobHMILbeo7CT5K8n8IqvnsdYNCBazp
Yobh9N0XHTtOK4iHCl5ldYJQBwXpUUFYERu8oUxOfFRwYMTPZh2Qkz4VPGOX
vX9xvod4qfHJLqa9orCH9KoR6Vz8bg6nh/ipwcgtn8lZ6Cb9GuwfvpPQVtpN
PDVgJzbHrovpxqt0Giw78t7mpNe6ia8Wrn3lrfwnMvJHi0ctaQuMDBnx1sKJ
U+ayabeM/NIh5IO3GEtzUuKvQ3J1cOzNain5p8PIpr98FYlSmocRGP9w49R4
ScnPEQTm+gldTRKajxH8Hnk6y75eQv6Ooq/Iu/brdAnNyygM4rQtnkES8nsU
5cZB5xBnCZ138zlNeOlWJxeT/3qEa9cnnysS0zzpMfA9r/joOTHxGMM3tbKc
dF8x8RjDby/l3CcMMfEYw8fH9fLP7z0lHub/guzOtrCDT4mHAdLKy8+j50TE
w4DBu0v3Erki4mFAw+32+IxAEfEYBytv+NG3BiHxGEd6BWchKFdI8zmOoBS9
Sh0oJB5GPPwhs81vWkA8jGA17kwJLhQQDyP8/VfsM4ULiMcEfvYuXfSzExCP
CSS5Fbavru8iHhOIYZ4NizvfRTwmcZvFzN/O6iIek5h/0Pn2MVUn8ZjEBX5r
tYnXSTymcMIv7KImqpN4TOHQi8VZV5dO4jGFrkCmbZ6UTzymsdHEFEXl8InH
NP6+ePYpO5JPPKax6vl+/lEmn3jMmOvdf8JVduB/Gv0hXg==
               "]]}, {
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              Line[CompressedData["
1:eJwtkw001XcYx6+xKDozahbSMpOkk7cts+obZx2bmrfSTpjhiKJGQzOVckov
LFnrnIpixaZykhWSiuUlL9d9d7uXq+u+eblvaCXVUc29Pc85//M/v//v/3ue
5/v9PL+lCWkR299jMBiJs4/hvW9BTZA85wh6CpcdZH45gXfrMwjRdx49mD2O
Rqd8bXhjGQIWmZ21u6en/UpYfeYe8JuZHiXnDXEVQqem9YJwHe4Y/69B0/Xg
i0MVWswuZr/8A9MP1/RdeqWh83VgrH1hYbFVg3miivS1827j2t1Y/zf1ahjT
nb+Dc7t1+36yV2N5zKnWKbd7mHvdyyvg8Bj104ythf7BP0yOonL2tKjiX/i7
XTt4JX4UOmO9B2gJSj9pLhqBr48h2mD3gUdqbNgI1W9HuuOBvGLWMNqm3GYr
dOD49zclh0KGYWnspxPpd/dE2ghUiDAW7AIjxrF9WbSK9HYjbq7QoXJECUWO
IWEPjv+5sjglS0n99uLi6rO1seZK7DG0l87C5YXthxIvKMgfNvo9/U7G+SrA
MAYXM1tDZlZz5KSHi9L216XcXXJ8IzcU4KE5o0ZnPV9O+nhYk5qyXHZDhuJW
gwA+OgM7NrtGymCU6yOAdYFp2q2XQzDKEQmw/KpdhFPIEOnvQ/Wmw75Xq6RY
YmjHSYgoW5MV0XOk5IcQFpEHzD1SHiM5yRCP8H7iw2MWgkHyR4QQ5t1c4fpB
GLItqBFhU22L38+3JOSXGKclOzY2uUvw3JBuSowz3wY+O/r3APnXj/3MrKW1
rgNYZxyAAXiGVPnNr+4nPwcwNy+uOsunH8b28iX4L7kt8UGLmPwdRKX810Xd
oWKweg0xiPkNbYeSlCLy+zH+2jK5LzNHhIXGBqWo48R4chaIyH8p/D51ttty
8xGM6WKGEK9UmykiHhEPGQ484a/Y9lxIemRIYCg/Lr0gJD4y9DivrCnYICR9
Mlg0/2Fv9aSPeMnhyhJzzMr7SK8cH7kc+yU6tI/4yVEiWTI6bdJH+hU4vVlq
29YgIJ4KPGGHz6naLcC7dAqId82wilwFxFeJ4GCHrCQ5n/xR4rH3zWf2ZXzi
rUS5Vu9WEsMnv1QYSNB08B35xF+FzDPDm+qkPPJPhYxslcmqyzyah2F4VPTK
fZJ55Ocw3L2enqtbyaP5mN23/CSnYopL/o5g/3bTvU+buTQvI/jqiL3tuRNc
8nsE096MpPxILt33UUw/dZlX68wl/0exI1T4ub2CQ/M0ig1F66Jc8jjEYwzH
syt/T3HmEI8xBLLfPuzvYBOPMVgNLK7/MZVNPMbgbfvFoMaGTTzUcMm0yU65
xyIeasTnte5lJ7OIhxrJobw084Us4qGBn8d06Zz2XuKhwRU1WPcze2k+NVAt
Lk9esqyXeGghNtdtc5IwiYcWdg6wqylmEg8tHAqri1uDmMRDh4jc0FVhDCbx
0OHWUD17Y1MP8dDByjr/9rWsHuKhR8zbrJIE7x7ioYdZzqnCnZPdxEMP94ZL
r+tvdBOPcZTsfHN/XXo38RhHsWbn5CuvbuIxjjDbQEvFsy7iMYEygUigbewi
HhOQF7yIss7tIh4TWJxR+TLo6y7iMQlp0cR3hZZd+B9XFRhO
               "]]}, {
              Hue[0.1421359549995791, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              Line[CompressedData["
1:eJwtkwtQVGUYhsGBkcGmkQYDCTGMHFQ05ZZDwmuJQjMocommcStCwEpQwSIB
yyYlGskJIgtxIgQTUILoujTk4F5Y2BvsLsvCsqx732WvTomNpTtxjt8/c2bn
nLPn+7/vfZ4/tuR4ftmKgICA0uWL+a0PH8gy1p3DwdqQPdHVPjy6/wqdf63+
dKfFC25MgyuP24HVFWsnCou89P4qSq2xj1WNe9B+iVl94L6xOfdCmgfD7P8H
EDmb+GVfvxvLN8tPhnAs7wW1MMZN3/+CMfGeSFOzC6Ga7hPpob9jfWbOIf8K
F9hyl4ZR82dhR9T7TmzifMFbih+BIvV1Y6p9kfq5ic0/lsUVvLaIq8tfa7pH
8cmmY0eOSxxws/vdgq6r5npTugPJScziIyn6jKdn0E77C/D5xcbtglg7+Evx
yzsIYX28+aSh1YZVbD8iZHzW9tuDYBvy2Q3H8U3glfuRp6w07wR8dX27UpwW
mOqYgmJk3R06k8exUL9SdFb+wauUm1HFtHdChvs2XvD53WbKR478Ykn2tZ9M
CGDXFG7MqZp4cSaaZwpBBTq5/msjso3MBgpwpJaw/0KMNJ8Cv+71FEbUG9DM
YwZQ4kbIh/Gt2ttgx01SYfsrd07eEuvBjqNRoSrf8GytdIHmn4Yud4izRq/D
eqadGDUe1mvT4vzzlIcaZY055W9umceRcmbNoCouQvF9qZby0eDhvuyme71z
YKqFD2gQ9J3maMU/s5TXLNRRge+k5c7iHlNuaRbtp1s+7h3UUH5zMOPuk2GR
GmSwAmhx4NURrr5xhvLU4ue/07ed96vBttcwj8MvLqja6tWUrw4Pdc8kXPZP
QyZllg7inZ1dWxqnKe8FKPZvOOUJn8YatkE9Rj5IUDb1qCh/PdJTahzcDBXY
cpzbCIlKydmqVRIPA9YlNe/tqVXSPAb4gpIyndFK4mPAe+sqi2/yFTSfAfIf
Bpy+SgXxMqL3XMPK3KcUNK8ROyLOFg1KpoifEaKagS77R1M0vwnmsKLLiuQp
4mkinpN4VM6E8s5v2zgHJ4mvmfjKKR8z+m1vDTe+LCfeZuIto7ws2Nee7ygp
kBF/C/GXUn4WFJbUyw5XSMkHK/kgoTytqFvQb3yuVUJ+WMkPCeVrQ8UTZ5da
xsTki418EVPeNjzIGlXUB4vpvNvhZ/2ZoPztCETitn8PTJBPdvJpnHg4sDFz
lJPcNU48HOTXOPFwYENsdeLbfhHxcJBvIuKxiP4Oz1Z7iYh4LJJ/IuKxiKZD
K0PDJ8eIh5N8HCMeTmTsSLhe/NIY+ekkP4XEwwWuciYvZ0RIPFzkq5B4uDAR
7I8q2SUkHm7yV0A83Jjvbr3yPE9APNzks4B4eCB71zl/dL+AeHjIbwHx8GAp
dffaawt84uEl3/nEw4uwQdnTF6v5xMNL/vOJhw9zwr4K7yo+8fDReeARDx/8
PS2nK/t4xOMOnQ8e/gdEkiPL
               "]]}}}, {}}, {
          DisplayFunction -> Identity, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
           PlotRange -> {{0, 1.}, {0, 0.9826794919243103}}, DisplayFunction -> 
           Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {"\[Sigma] of swarm", "Max Torque"}, 
           AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
           Frame -> {{False, False}, {False, False}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
           PlotLabel -> 
           "Maximum possible torque on object pivoted at 0, length 1", 
           PlotRange -> {{0, 1.}, {0, 0.9826794919243103}}, PlotRangeClipping -> 
           True, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
         Placed[
          Unevaluated[
           PointLegend[{
             Directive[
              PointSize[0.011111111111111112`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              PointSize[0.011111111111111112`], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              PointSize[0.011111111111111112`], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]]}, {"Normal", "Triangle", "Uniform"}, 
            Joined -> {{True, True, True}}, LabelStyle -> {}, LegendLayout -> 
            "Column", 
            LegendMarkers -> {{False, Automatic}, {False, Automatic}, {
              False, Automatic}}]], {Right, Top}, Identity]]& ],
       AutoDelete->True,
       Editable->True,
       SelectWithContents->False,
       Selectable->True],
      TraditionalForm], {576., -189.}, {Center, Center}, {360., 360.}]}, {}},
  ContentSelectable->True,
  ImageSize->{780., 245.61684774746024`},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{
  3.684634471318781*^9, 3.6846356917367353`*^9, 3.684635909148432*^9, 
   3.684668018890717*^9, 3.684688599466317*^9, 3.684688648128553*^9, 
   3.684688776472468*^9, {3.684688809283383*^9, 3.6846888868485117`*^9}, {
   3.684688982243389*^9, 3.684689124419998*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1: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
3649XSc=
        
        "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwlzkdOQgEARdH/wV4Q7IigIMp+3IAJC9B12ruiYu8dOxbQkzg4uW/4ssWZ
yelIEAQhU0SNBhppopkWWmmjnQ46idFFnATd9NBLH/0MMEiSIVIMkybDCKNk
yTFGngLjRJggDP9P/kqdGj9888UnVT54541XXnjmiQqPPHDPHbfccM0Vl1xw
zhmnnHDMEYccsE+ZPXbZocQ2W2yywTprrLLCMkssssA8c8zyBxBkNkU=
             
             "]]]}, {}, {}}, {{}, {}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
             18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
            34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 
            50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 
            66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 
            82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 
            98, 99, 100}]}, 
          {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[{101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 
            112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 
            125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 
            138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 
            151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 
            164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 
            177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 
            190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200}]}, 
          {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[{201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 
            212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 
            225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 
            238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 
            251, 252, 253, 254, 255, 256, 257, 294}]}, 
          {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[{259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 
            270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 
            283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 295}]}}}], {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"\[Sigma] of swarm\"", TraditionalForm], 
        FormBox["\"Optimal push location (\[Mu])\"", TraditionalForm]},
      AxesOrigin->{0, 0.403},
      DisplayFunction->Identity,
      Epilog->{
        Dashing[{Small, Small}], 
        LineBox[
         NCache[{{0, 
            Rational[2, 3]}, {100, 
            Rational[2, 3]}}, {{0, 0.6666666666666666}, {
           100, 0.6666666666666666}}]], 
        LineBox[
         NCache[{{0, 2^Rational[-1, 2]}, {100, 2^Rational[-1, 2]}}, {{
           0, 0.7071067811865475}, {100, 0.7071067811865475}}]], 
        LineBox[
         NCache[{{0, 
            Rational[1, 2]}, {100, 
            Rational[1, 2]}}, {{0, 0.5}, {100, 0.5}}]]},
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->Medium,
      Method->{},
      PlotLabel->FormBox[
       "\"Where to push object pivoted at 0, length 1, to maximize torque\"", 
        TraditionalForm],
      PlotRange->{{0, 1.}, {0.4, 1.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Prolog->InsetBox[
        GraphicsBox[{
          RGBColor[0.6, 0.4, 0.2], 
          RectangleBox[
           NCache[{0, 
             Rational[-1, 10]}, {0, -0.1}], 
           NCache[{1, 
             Rational[1, 10]}, {1, 0.1}]], 
          RGBColor[0, 0, 1], 
          PointBox[{0, 0}], 
          RGBColor[1, 0, 0], 
          PolygonBox[
           NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
              Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
             1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]], 
          GrayLevel[0], 
          PointSize[Tiny], 
          PointBox[CompressedData["
1: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
9cjpHigyX3FcxZPC1IUPHjLvDUHb/qu713+ncFG+VUi/UCvMMFrLdJZTWHhY
b8qZ6ge+9kLby5ZkXgdGiv+pdAK7ODXF7Sbh4XvyJwI+jcKVte/+JEcy0L4s
Sd5NfwJeZH4wvHqIiZFl/vzizzrgjUvjorUPmBhQo1y5gDsMK3z/bXAbpDHz
2/3xk5L9kJrEWCHcRqNrkFV42cVu8GyXlW6MEsexrf5Dkqn98ODmtyVptQzc
qiCzpPTrFLjar8s49JzCV2U+GmEdo7BmjvquyRYafy68InoLSf6YD7axWUyU
WyMSDleGQEiy9dJYOoWXjv8yuPGIB7yDE/n5osSPtBeY39HqgUFF2PNNn4lj
2V8k9UifV849mvn9I+FDZaMTf3U64fY6I2eTUQp1lorMlzDtg9WnvlTNI/vj
mTIj1jzYC+8GDWpCyH6q5Y3Ee36bgHKBqt0idkycP5QIZ3+1g2q92LrSr0z0
ly2ZtSL6FwQU/yrYGsrES04XHfK3cWF1c0maM/F5dvb5te4LeWAdk3ozaFQc
Py045VYgwwPn+otfI55ReMw7eS0ruA0uPc8JnRphYLHl+asNF3ig3C5beEKG
xq6mXWFizT0g1FuvM4cmfHXlpKbt6lbwcS1sMrhDo9U6xVedeziQLFljknyb
wmvHVl7MuzsD973iXNx+MVHFJZ8HHp3At8H1c5EyhS8XPM431uOB6tcAgbE+
MTy/ofa68JleaJBaxTW+S+Ob1guPFlqRfNwd7zroycCLEHgqU34MzJtlfRc8
pvF+6oDs8wYe3JblBpw8yMAsCROF0sdjkGqn0+WtSvjosa6huWI3CNnp9j29
SKOKv8OizZkTMG14+pj8FvL8DZzyfZwOCFAQiYuoZ+DGjIKfZXe4sKqt1GCK
8HtwU93C721c0NX+VzZ9m4kPlD79bkoegUdfqJfuBxh4aZ2zz+Ov9fC1TW/i
LcmbO24jEguIz7/je9nlaMvE3/sOjJ70God4d881TbuZuMDWQ0w7YhherC1o
/07yx4sRXRtUzgbjSL70p+qEb+vzE0tr26DG4ejbPDPCM2aFGZI1HNAVKRX8
p8tAz5Zh7a6PbDBKOFccNEbhXdODjFVWo8SvbZQPhovjVZ+T7I6QJrCX33DK
n/DC1a1Z+63Se+GKlDo1SvhI9RN9ZWn4MOgYbfCWuUf6I1ZIdzKuGvrKXXxC
+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
NDYM+Z/PVuVAmkzIdCnp/2nj7UMOzCE4ozFAL1Ci0WX4ouV0KA+yfq62ySFf
T/M32n680Q3v106f9/FkICPg2IqOom54sMf9ykfSF47jCxvMDnDh+29nDeH/
KFTQKE9xVeiCu98WszZliuGtbqPHtN4IqL9nGUWL0ejr+7Io5D3Ju/C6uB4F
wrPfWYvl2jogNdhwmu8YhZzlq1+WARekZLe/4WtiovR5u+465Q44ecnneLco
Ey2Evu3lruoG3+sXH8bvofDRWce884XtMNv3oWPF//NzSOHC3WIeRMtH+zwz
oTFh3u9bUovZsKbWen5Mlhiq91UNTs7qAXsB/bcOYTSqBxTNJNez4aDeskvC
9kws4woNzgoYgWylxBAl0u8aP/U0D6Rwwbn3xpOJqxL4xJ5vqbABG8LGn+2Z
rKYwYMMjw5sbOXCm6DVv/mEmDsecyq7ObAb32lV/jb8xsSm0o/7yxX6wSz9+
/cMWcTxSPbpdQpwNO8z/iW0m/ea1wCVXv3gARsNWBWqfoVGxLiS/+thf+D5r
1u1/f2h8VCQUzLneB/szpbUv2VLY5CHzXlKzCzZ4ha0KKafwUv/S4lWby6Hw
s+63WrJfFZVfvSyiRsHLp2Dvho00zqfEqqu3jsM47+e810fFkaXBt69PrA/e
9t4Xjf9MI99Gu/7VhMdXjTwvKrvOxEufRy4GJE7ApcvW8vP2MrHFyGR8epjk
VWrcUMQ94ost0UfjXQfAOHYqbrYL4eMNwS/9CC+9mfqjo2XNRJd8NZdLDSOQ
t+THyWoTCus2q+RTPQNQnnTwhZcwjfrxLGkpdTYIxqxKoybIvDXxjUo4s8FE
+ais0SIK334XrVwt2gd7+7PSYib///sSUiKPk7tA8I1b8nMrJr6wmYkdaO+D
+S/SfPado/GSgeGaUtFBGH/2yuNeD8kvrS8lrPdDULhQKEvEg8Yef6s2810t
oFB8Mmn1/f//fwmj/JZvf8B6j1rH927C60I/hq7OdAPLmE/tM5m/W8t7dTcR
f/0UqDVSSZ73Cb4THRBkg51+8BLFPHL+XZ3S6lYs+LxfcX0R4Y+d9kXGa0KG
QTmjdNZZPgk851aR2bKIB1v3CWnrMpi4+03r+ZM+PCiudn/73y4ab93KN8r4
2QtbZh9NSiP+AmBuOd3KhYDPbaP10xQWWJVgR94wHNtfNi7fJo6nx0znz6rp
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
bhHX
           "]]}, PlotRange -> {{-1, 3}, {-8, 2}}, AxesOrigin -> {0, 0}]],
      
      Ticks->{Automatic, Automatic}], {191.00408802586253`, -116.80842387373012`},
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212`}], InsetBox[
     FormBox[
      TagBox[
       FormBox[
        GraphicsBox[{{{}, {{}, {}, 
            {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
             0.011111111111111112`], AbsoluteThickness[1.6], 
             LineBox[CompressedData["
1:eJwtlAtMU2cUxxERC4gukzp1DMTNFXUmG6CbMPgTVxDsRASHm+BwDHW+Ikhm
AAfIhjEs2zTI3NrxEGGLyAABgxARBoJQaGsf0JZ3X1BKeQUpkYljbT0nubn5
7r3fOef//53vesSdjzhua2NjE2++LPdLLhV71alZeFgyVh1tP41X61yYOG2m
Ku8p1LldMR6sK4C48kqN64VJel+C/L0/eR5vmACPa4lS2O04xX62ZgL11u8r
UGb7bKPXGSPMC/OTKix+JD68WjhO++/D61Dol00+43BUFCf4Oz5AF+ulqKzI
AGs6bj3+zdyz/chaA7bGXGsxeTYgOOjNH09mj1E/jdjqcfdW5vIxlJh3K4r/
AdMhqzEuU48Ja71mJK1ULols9fDxtsRjZGyZC8m5Okr1W2E/XSdIXzOKxyZP
c4U2+Po4/XeGNwInaz/tkIU6q3Z6jiDCWrAD4XkHyhvqdKSXj/EgbouOo4Mm
1ZKwE/xrN0pvqrXUrwCaT3dvaErRItHSXoIQnJ2uXWEuWvJHhOx26Ru+VRrY
WEMMPS/mWHK4hvSIwetfilo+q0aI2lJAAt6pwAD5r2rSJ8EzH4bXpJ8a11ss
AqQ467Q5m61TwSrXWwan69lRyl9UsMpRyDBfnbyqxE9F+ruxLeRwOrtnGO6W
dtx6UOu+3p774TD50YNu1mLzroIhnDxhCTmM2abaVQ5D5I8C9g3+SyuTB2HJ
5lKhQOuCx+Ja4wD5pUS1h+76xrgBzFvSmZRIY936ym6wn/zrxYrey6/XR/cj
wDoAfVjYU5HlPtRHfvZhqIC9xi2+D9b2rvTDjhFRw5vsJX8HkBAQve9Sai+E
AksM4LMZduWfjr3k9yBu+DSpl/KVYFobHMILbeo7CT5K8n8IqvnsdYNCBazp
Yobh9N0XHTtOK4iHCl5ldYJQBwXpUUFYERu8oUxOfFRwYMTPZh2Qkz4VPGOX
vX9xvod4qfHJLqa9orCH9KoR6Vz8bg6nh/ipwcgtn8lZ6Cb9GuwfvpPQVtpN
PDVgJzbHrovpxqt0Giw78t7mpNe6ia8Wrn3lrfwnMvJHi0ctaQuMDBnx1sKJ
U+ayabeM/NIh5IO3GEtzUuKvQ3J1cOzNain5p8PIpr98FYlSmocRGP9w49R4
ScnPEQTm+gldTRKajxH8Hnk6y75eQv6Ooq/Iu/brdAnNyygM4rQtnkES8nsU
5cZB5xBnCZ138zlNeOlWJxeT/3qEa9cnnysS0zzpMfA9r/joOTHxGMM3tbKc
dF8x8RjDby/l3CcMMfEYw8fH9fLP7z0lHub/guzOtrCDT4mHAdLKy8+j50TE
w4DBu0v3Erki4mFAw+32+IxAEfEYBytv+NG3BiHxGEd6BWchKFdI8zmOoBS9
Sh0oJB5GPPwhs81vWkA8jGA17kwJLhQQDyP8/VfsM4ULiMcEfvYuXfSzExCP
CSS5Fbavru8iHhOIYZ4NizvfRTwmcZvFzN/O6iIek5h/0Pn2MVUn8ZjEBX5r
tYnXSTymcMIv7KImqpN4TOHQi8VZV5dO4jGFrkCmbZ6UTzymsdHEFEXl8InH
NP6+ePYpO5JPPKax6vl+/lEmn3jMmOvdf8JVduB/Gv0hXg==
              "]]}, 
            {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
             0.011111111111111112`], AbsoluteThickness[1.6], 
             LineBox[CompressedData["
1:eJwtkwtMk2cUhuskwEAzAjIUESZjgihRLlNn0FedCxs6boILlzlHKijqRKWO
YRSJohOmsmkioqIMAgIRGQIiKk4u2lJ6pxQoll4o0AsXp4gSxLX1nOTPn+/7
/++c877P+RYnHoja9RGDwWCaHvP76LyqEFXGKYRke2dyvxrDh/UllI8+O52Z
PooG92xDZEMhphZYXXZ5OELfS7DhC9+Nf1iNoOCKOcpxy71xgyTSiPuW/6tQ
czv0en+xAaaFaecfzDgEdxZN6el8LUaD39jabtfDTlacus7uHkof7Fg7U6eD
Jd2V+yjabzz6i6sOSxMuNE/4PITNbX//jSeHqZ8mxOauDf1xfAglptOy4n+x
zqci89bPQzBa6j1BY0jqORvZIIICzdEC10+W790RMUj1W8FyO5aVx9OiZcLH
VKENOT/UyE+EaWFv6ecZDj04GOMoGUCUpSAbM/Furd7xA6SXA+bH0oUlgxqo
M8wJ25F70y8vhaWhfjtwffXl6h02Ghw0t5fKw03n1hPMa2ryh4/ulWvO7QxS
g2EJIaa3h02vFqhIjxDXWt9dFe5T4VuVuYAITYerjA5zVaRPhOC9KUuVd5TI
azYLEIO9qW3bkhglLHIDJfg0Z/aBu2/7YZEjk8Cv3CXKPayf9HeicuvJoPIy
BTzM7bhLEec0a1m8tYL8kMIu5pjN8pTnSE4yRxesmU/P2Er6yB8ZIrgPjks3
9MGcbV6VaV39eM2hu3LyqxsX5bu3NPrK8dqcbqIbl77b9Op0aS/514NjXNbi
6iW9WG8ZgF4EhZWtmVvZQ372wjZrZyUrsAeW9rLl+C+5hfnkcTf524di1W8L
OOHd4HWYow929S0nkjQy8vs5SqPHj6ZlyOBsaVCBekHCSsE8GfmvwKrPPV2i
a7pgSZfQD6ZGZ6WO6iIeSmS8EC+LfS0lPUokMjTzr16TEh8lOJ5+VTnfSEmf
EtZNF13nvOgkXir48LoFVjc6Sa8Kzl5nfo0P7yR+KuTLPYYmZ3WSfjX+2qZw
aqmXEE81xvmR1mX7JfiQTg3Zvmne+SUS4qtBaOhCVpJKTP5o8Dyg5pVroZh4
a1BoGPEpSBCTXwPoTdS3id3ExH8Ahy9pt9YqROTfANLSB2at+FtE86CFX3GH
KjBZRH5q4ev/Mr/WT0TzocUy+88yiieE5K/pXu2afeRlk5DmZRDBp1yd8s8K
ye9BvAlgJGXHCOm+D2HypZddtaeQ/B/C7nDpl65qAc3TEDafXx/nlSUgHsP4
Pb3kzxRPAfEYxtf890972vjEYxhzehfV/bSXTzyGEeC0qk/vyCceOnilOaan
POQRDx2YWc1H+Mk84qFDUrjogI0zj3josXb55FXr1g7ioUeFDrxHaR00n3po
F91I9vDuIB4GdNkYY93lXOJhwPyFcKnK4xIPA9xyK/OaQ7jEw4jo4+ErIhhc
4mFEbX8df0tjO/Ewwt4h+14Fq514jCDuPasgMaCdeIzAOuNC7p5xDvEYgW99
0bu6OxziMYr8PTOP1qdyiMco8vR7xqf8OcRjFJFOm+zVr9jEYwyFEpnE0MAm
HmNQ5ryJczjOJh5jcDtc8jZkM5t4jENxfuz7XHs2/gd7WRvo
              "]]}, 
            {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
             0.011111111111111112`], AbsoluteThickness[1.6], 
             LineBox[CompressedData["
1:eJwtkwtQVGUYhsGBkcGmkQYDCTGMHFQ05ZZDwmuJQjMocommcStCwEpQwSIB
yyYlGskJIgtxIgQTUILoujTk4F5Y2BvsLsvCsqx732WvTomNpTtxjt8/c2bn
nLPn+7/vfZ4/tuR4ftmKgICA0uWL+a0PH8gy1p3DwdqQPdHVPjy6/wqdf63+
dKfFC25MgyuP24HVFWsnCou89P4qSq2xj1WNe9B+iVl94L6xOfdCmgfD7P8H
EDmb+GVfvxvLN8tPhnAs7wW1MMZN3/+CMfGeSFOzC6Ga7hPpob9jfWbOIf8K
F9hyl4ZR82dhR9T7TmzifMFbih+BIvV1Y6p9kfq5ic0/lsUVvLaIq8tfa7pH
8cmmY0eOSxxws/vdgq6r5npTugPJScziIyn6jKdn0E77C/D5xcbtglg7+Evx
yzsIYX28+aSh1YZVbD8iZHzW9tuDYBvy2Q3H8U3glfuRp6w07wR8dX27UpwW
mOqYgmJk3R06k8exUL9SdFb+wauUm1HFtHdChvs2XvD53WbKR478Ykn2tZ9M
CGDXFG7MqZp4cSaaZwpBBTq5/msjso3MBgpwpJaw/0KMNJ8Cv+71FEbUG9DM
YwZQ4kbIh/Gt2ttgx01SYfsrd07eEuvBjqNRoSrf8GytdIHmn4Yud4izRq/D
eqadGDUe1mvT4vzzlIcaZY055W9umceRcmbNoCouQvF9qZby0eDhvuyme71z
YKqFD2gQ9J3maMU/s5TXLNRRge+k5c7iHlNuaRbtp1s+7h3UUH5zMOPuk2GR
GmSwAmhx4NURrr5xhvLU4ue/07ed96vBttcwj8MvLqja6tWUrw4Pdc8kXPZP
QyZllg7inZ1dWxqnKe8FKPZvOOUJn8YatkE9Rj5IUDb1qCh/PdJTahzcDBXY
cpzbCIlKydmqVRIPA9YlNe/tqVXSPAb4gpIyndFK4mPAe+sqi2/yFTSfAfIf
Bpy+SgXxMqL3XMPK3KcUNK8ROyLOFg1KpoifEaKagS77R1M0vwnmsKLLiuQp
4mkinpN4VM6E8s5v2zgHJ4mvmfjKKR8z+m1vDTe+LCfeZuIto7ws2Nee7ygp
kBF/C/GXUn4WFJbUyw5XSMkHK/kgoTytqFvQb3yuVUJ+WMkPCeVrQ8UTZ5da
xsTki418EVPeNjzIGlXUB4vpvNvhZ/2ZoPztCETitn8PTJBPdvJpnHg4sDFz
lJPcNU48HOTXOPFwYENsdeLbfhHxcJBvIuKxiP4Oz1Z7iYh4LJJ/IuKxiKZD
K0PDJ8eIh5N8HCMeTmTsSLhe/NIY+ekkP4XEwwWuciYvZ0RIPFzkq5B4uDAR
7I8q2SUkHm7yV0A83Jjvbr3yPE9APNzks4B4eCB71zl/dL+AeHjIbwHx8GAp
dffaawt84uEl3/nEw4uwQdnTF6v5xMNL/vOJhw9zwr4K7yo+8fDReeARDx/8
PS2nK/t4xOMOnQ8e/gdEkiPL
              "]]}}, {}}, InsetBox[
           TemplateBox[{"\"Normal\"","\"Triangle\"","\"Uniform\""},
            "PointLegend",
            DisplayFunction->(FormBox[
              StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False], TraditionalForm]& ),
            Editable->True,
            InterpretationFunction:>(RowBox[{"PointLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "True", ",", "True"}], "}"}], 
                    "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
               "]"}]& )], Scaled[{0.99, 0.99}], ImageScaled[{1, 1}],
           BaseStyle->{FontSize -> Larger},
           FormatType->StandardForm]},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{
           FormBox["\"\[Sigma] of swarm\"", TraditionalForm], 
           FormBox["\"Max Torque\"", TraditionalForm]},
         AxesOrigin->{0, 0},
         DisplayFunction->Identity,
         Frame->{{False, False}, {False, False}},
         FrameLabel->{{None, None}, {None, None}},
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImageSize->Medium,
         Method->{},
         PlotLabel->FormBox[
          "\"Maximum possible torque on object pivoted at 0, length 1\"", 
           TraditionalForm],
         PlotRange->{{0, 1.}, {0, 0.9826794919243103}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}},
         Ticks->{Automatic, Automatic}],
        TraditionalForm],
       InterpretTemplate[Legended[
         Graphics[{{}, {{{}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              Line[CompressedData["
1:eJwtlAtMU2cUxxERC4gukzp1DMTNFXUmG6CbMPgTVxDsRASHm+BwDHW+Ikhm
AAfIhjEs2zTI3NrxEGGLyAABgxARBoJQaGsf0JZ3X1BKeQUpkYljbT0nubn5
7r3fOef//53vesSdjzhua2NjE2++LPdLLhV71alZeFgyVh1tP41X61yYOG2m
Ku8p1LldMR6sK4C48kqN64VJel+C/L0/eR5vmACPa4lS2O04xX62ZgL11u8r
UGb7bKPXGSPMC/OTKix+JD68WjhO++/D61Dol00+43BUFCf4Oz5AF+ulqKzI
AGs6bj3+zdyz/chaA7bGXGsxeTYgOOjNH09mj1E/jdjqcfdW5vIxlJh3K4r/
AdMhqzEuU48Ja71mJK1ULols9fDxtsRjZGyZC8m5Okr1W2E/XSdIXzOKxyZP
c4U2+Po4/XeGNwInaz/tkIU6q3Z6jiDCWrAD4XkHyhvqdKSXj/EgbouOo4Mm
1ZKwE/xrN0pvqrXUrwCaT3dvaErRItHSXoIQnJ2uXWEuWvJHhOx26Ru+VRrY
WEMMPS/mWHK4hvSIwetfilo+q0aI2lJAAt6pwAD5r2rSJ8EzH4bXpJ8a11ss
AqQ467Q5m61TwSrXWwan69lRyl9UsMpRyDBfnbyqxE9F+ruxLeRwOrtnGO6W
dtx6UOu+3p774TD50YNu1mLzroIhnDxhCTmM2abaVQ5D5I8C9g3+SyuTB2HJ
5lKhQOuCx+Ja4wD5pUS1h+76xrgBzFvSmZRIY936ym6wn/zrxYrey6/XR/cj
wDoAfVjYU5HlPtRHfvZhqIC9xi2+D9b2rvTDjhFRw5vsJX8HkBAQve9Sai+E
AksM4LMZduWfjr3k9yBu+DSpl/KVYFobHMILbeo7CT5K8n8IqvnsdYNCBazp
Yobh9N0XHTtOK4iHCl5ldYJQBwXpUUFYERu8oUxOfFRwYMTPZh2Qkz4VPGOX
vX9xvod4qfHJLqa9orCH9KoR6Vz8bg6nh/ipwcgtn8lZ6Cb9GuwfvpPQVtpN
PDVgJzbHrovpxqt0Giw78t7mpNe6ia8Wrn3lrfwnMvJHi0ctaQuMDBnx1sKJ
U+ayabeM/NIh5IO3GEtzUuKvQ3J1cOzNain5p8PIpr98FYlSmocRGP9w49R4
ScnPEQTm+gldTRKajxH8Hnk6y75eQv6Ooq/Iu/brdAnNyygM4rQtnkES8nsU
5cZB5xBnCZ138zlNeOlWJxeT/3qEa9cnnysS0zzpMfA9r/joOTHxGMM3tbKc
dF8x8RjDby/l3CcMMfEYw8fH9fLP7z0lHub/guzOtrCDT4mHAdLKy8+j50TE
w4DBu0v3Erki4mFAw+32+IxAEfEYBytv+NG3BiHxGEd6BWchKFdI8zmOoBS9
Sh0oJB5GPPwhs81vWkA8jGA17kwJLhQQDyP8/VfsM4ULiMcEfvYuXfSzExCP
CSS5Fbavru8iHhOIYZ4NizvfRTwmcZvFzN/O6iIek5h/0Pn2MVUn8ZjEBX5r
tYnXSTymcMIv7KImqpN4TOHQi8VZV5dO4jGFrkCmbZ6UTzymsdHEFEXl8InH
NP6+ePYpO5JPPKax6vl+/lEmn3jMmOvdf8JVduB/Gv0hXg==
               "]]}, {
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              Line[CompressedData["
1:eJwtkwtMk2cUhuskwEAzAjIUESZjgihRLlNn0FedCxs6boILlzlHKijqRKWO
YRSJohOmsmkioqIMAgIRGQIiKk4u2lJ6pxQoll4o0AsXp4gSxLX1nOTPn+/7
/++c877P+RYnHoja9RGDwWCaHvP76LyqEFXGKYRke2dyvxrDh/UllI8+O52Z
PooG92xDZEMhphZYXXZ5OELfS7DhC9+Nf1iNoOCKOcpxy71xgyTSiPuW/6tQ
czv0en+xAaaFaecfzDgEdxZN6el8LUaD39jabtfDTlacus7uHkof7Fg7U6eD
Jd2V+yjabzz6i6sOSxMuNE/4PITNbX//jSeHqZ8mxOauDf1xfAglptOy4n+x
zqci89bPQzBa6j1BY0jqORvZIIICzdEC10+W790RMUj1W8FyO5aVx9OiZcLH
VKENOT/UyE+EaWFv6ecZDj04GOMoGUCUpSAbM/Furd7xA6SXA+bH0oUlgxqo
M8wJ25F70y8vhaWhfjtwffXl6h02Ghw0t5fKw03n1hPMa2ryh4/ulWvO7QxS
g2EJIaa3h02vFqhIjxDXWt9dFe5T4VuVuYAITYerjA5zVaRPhOC9KUuVd5TI
azYLEIO9qW3bkhglLHIDJfg0Z/aBu2/7YZEjk8Cv3CXKPayf9HeicuvJoPIy
BTzM7bhLEec0a1m8tYL8kMIu5pjN8pTnSE4yRxesmU/P2Er6yB8ZIrgPjks3
9MGcbV6VaV39eM2hu3LyqxsX5bu3NPrK8dqcbqIbl77b9Op0aS/514NjXNbi
6iW9WG8ZgF4EhZWtmVvZQ372wjZrZyUrsAeW9rLl+C+5hfnkcTf524di1W8L
OOHd4HWYow929S0nkjQy8vs5SqPHj6ZlyOBsaVCBekHCSsE8GfmvwKrPPV2i
a7pgSZfQD6ZGZ6WO6iIeSmS8EC+LfS0lPUokMjTzr16TEh8lOJ5+VTnfSEmf
EtZNF13nvOgkXir48LoFVjc6Sa8Kzl5nfo0P7yR+KuTLPYYmZ3WSfjX+2qZw
aqmXEE81xvmR1mX7JfiQTg3Zvmne+SUS4qtBaOhCVpJKTP5o8Dyg5pVroZh4
a1BoGPEpSBCTXwPoTdS3id3ExH8Ahy9pt9YqROTfANLSB2at+FtE86CFX3GH
KjBZRH5q4ev/Mr/WT0TzocUy+88yiieE5K/pXu2afeRlk5DmZRDBp1yd8s8K
ye9BvAlgJGXHCOm+D2HypZddtaeQ/B/C7nDpl65qAc3TEDafXx/nlSUgHsP4
Pb3kzxRPAfEYxtf890972vjEYxhzehfV/bSXTzyGEeC0qk/vyCceOnilOaan
POQRDx2YWc1H+Mk84qFDUrjogI0zj3josXb55FXr1g7ioUeFDrxHaR00n3po
F91I9vDuIB4GdNkYY93lXOJhwPyFcKnK4xIPA9xyK/OaQ7jEw4jo4+ErIhhc
4mFEbX8df0tjO/Ewwt4h+14Fq514jCDuPasgMaCdeIzAOuNC7p5xDvEYgW99
0bu6OxziMYr8PTOP1qdyiMco8vR7xqf8OcRjFJFOm+zVr9jEYwyFEpnE0MAm
HmNQ5ryJczjOJh5jcDtc8jZkM5t4jENxfuz7XHs2/gd7WRvo
               "]]}, {
              Hue[0.1421359549995791, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              Line[CompressedData["
1:eJwtkwtQVGUYhsGBkcGmkQYDCTGMHFQ05ZZDwmuJQjMocommcStCwEpQwSIB
yyYlGskJIgtxIgQTUILoujTk4F5Y2BvsLsvCsqx732WvTomNpTtxjt8/c2bn
nLPn+7/vfZ4/tuR4ftmKgICA0uWL+a0PH8gy1p3DwdqQPdHVPjy6/wqdf63+
dKfFC25MgyuP24HVFWsnCou89P4qSq2xj1WNe9B+iVl94L6xOfdCmgfD7P8H
EDmb+GVfvxvLN8tPhnAs7wW1MMZN3/+CMfGeSFOzC6Ga7hPpob9jfWbOIf8K
F9hyl4ZR82dhR9T7TmzifMFbih+BIvV1Y6p9kfq5ic0/lsUVvLaIq8tfa7pH
8cmmY0eOSxxws/vdgq6r5npTugPJScziIyn6jKdn0E77C/D5xcbtglg7+Evx
yzsIYX28+aSh1YZVbD8iZHzW9tuDYBvy2Q3H8U3glfuRp6w07wR8dX27UpwW
mOqYgmJk3R06k8exUL9SdFb+wauUm1HFtHdChvs2XvD53WbKR478Ykn2tZ9M
CGDXFG7MqZp4cSaaZwpBBTq5/msjso3MBgpwpJaw/0KMNJ8Cv+71FEbUG9DM
YwZQ4kbIh/Gt2ttgx01SYfsrd07eEuvBjqNRoSrf8GytdIHmn4Yud4izRq/D
eqadGDUe1mvT4vzzlIcaZY055W9umceRcmbNoCouQvF9qZby0eDhvuyme71z
YKqFD2gQ9J3maMU/s5TXLNRRge+k5c7iHlNuaRbtp1s+7h3UUH5zMOPuk2GR
GmSwAmhx4NURrr5xhvLU4ue/07ed96vBttcwj8MvLqja6tWUrw4Pdc8kXPZP
QyZllg7inZ1dWxqnKe8FKPZvOOUJn8YatkE9Rj5IUDb1qCh/PdJTahzcDBXY
cpzbCIlKydmqVRIPA9YlNe/tqVXSPAb4gpIyndFK4mPAe+sqi2/yFTSfAfIf
Bpy+SgXxMqL3XMPK3KcUNK8ROyLOFg1KpoifEaKagS77R1M0vwnmsKLLiuQp
4mkinpN4VM6E8s5v2zgHJ4mvmfjKKR8z+m1vDTe+LCfeZuIto7ws2Nee7ygp
kBF/C/GXUn4WFJbUyw5XSMkHK/kgoTytqFvQb3yuVUJ+WMkPCeVrQ8UTZ5da
xsTki418EVPeNjzIGlXUB4vpvNvhZ/2ZoPztCETitn8PTJBPdvJpnHg4sDFz
lJPcNU48HOTXOPFwYENsdeLbfhHxcJBvIuKxiP4Oz1Z7iYh4LJJ/IuKxiKZD
K0PDJ8eIh5N8HCMeTmTsSLhe/NIY+ekkP4XEwwWuciYvZ0RIPFzkq5B4uDAR
7I8q2SUkHm7yV0A83Jjvbr3yPE9APNzks4B4eCB71zl/dL+AeHjIbwHx8GAp
dffaawt84uEl3/nEw4uwQdnTF6v5xMNL/vOJhw9zwr4K7yo+8fDReeARDx/8
PS2nK/t4xOMOnQ8e/gdEkiPL
               "]]}}}, {}}, {
          DisplayFunction -> Identity, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
           PlotRange -> {{0, 1.}, {0, 0.9826794919243103}}, DisplayFunction -> 
           Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {"\[Sigma] of swarm", "Max Torque"}, 
           AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
           Frame -> {{False, False}, {False, False}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
           PlotLabel -> 
           "Maximum possible torque on object pivoted at 0, length 1", 
           PlotRange -> {{0, 1.}, {0, 0.9826794919243103}}, PlotRangeClipping -> 
           True, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
         Placed[
          Unevaluated[
           PointLegend[{
             Directive[
              PointSize[0.011111111111111112`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              PointSize[0.011111111111111112`], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              PointSize[0.011111111111111112`], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]]}, {"Normal", "Triangle", "Uniform"}, 
            Joined -> {{True, True, True}}, LabelStyle -> {}, LegendLayout -> 
            "Column", 
            LegendMarkers -> {{False, Automatic}, {False, Automatic}, {
              False, Automatic}}]], {Right, Top}, Identity]]& ],
       AutoDelete->True,
       Editable->True,
       SelectWithContents->False,
       Selectable->True],
      TraditionalForm], {576., -116.80842387373012`}, {
     Center, Center}, {360., 222.49223594996212`}]}, {}},
  ContentSelectable->True,
  ImagePadding->{{174.714236, 175.714236}, {1., 0.}},
  ImageSize->{780., 245.61684774746024`},
  PlotRange->{{186., 582.}, {-238.61684774746024`, 5.}},
  PlotRangePadding->Automatic]], "Input",
 CellChangeTimes->{3.684575004980954*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJztl/lXFFcWgMGIGjWgkSgYZDG4m9FAMGgIF2NUgsqmgyJIgIaGYDASkT0i
Cm4IElEWBxGRiQMKLggCQhwxQXABWmUVsbeq6r2JINEgMXRZ7z3+hjlTv/S5
XfXq3Xu/d8/XbRX4vWfwGD09vXn6enq6z3jjsrWiuGTI3RJkEGOlhbfxCbCc
PCfhPzs0UGWeovSoyoe5K8qzLreouftFcMTK9eMHjmo4lau7iqF7R5XlrGoV
VLPPl8HlzSVDTx1UMBKMfHMF+OvblzxtVHLrr8HeLQH8z32VMLHj3M4vJl6H
pBXvjHcdVAD7utxqKOBlWadnKWCB77H6F/Nrgf/Z7NnpDgoun19guUH0pH5G
DkUjqzvO/RfKorun78yRg4rd7xZc+HLxvtsb5PCpre66Deutw9ZdGy/n9v8V
tEPuEVMaZHD7xfyRHX6DWfpmERcOyWASm88dMHIvve7rJgNPdsNG6HK8JBo2
lXH1NoFg+Gh3qIwBcZzuhXdh6c5a86gahsv3PrRfXJU8dIyBCF16Ox+A17XO
snuhDNefZnh+iYHKrxjQY69WyLeLTT/0EcPV0wpG5pU3DA0YcBbpNhDAEws/
gbGc5uoTgOmW/kchLTRk1OsKeAiaB4WF7ddpYMu1fQQ24XvzbAppYMvpeASx
IZGG7uk0V/9j+NMu9/txCTRY6NIxb4OOx9W7lm6nuX60gaDQW/+iDw0hfN3V
Dm+Wit7fuoHm+tMBawPhiLkTDbq3GZd1wIUWEz2hLc31qxM8D/8z4eB8GgZ1
r3vRCarsMD89c5rrXxccrzAab29MgyN7ALqhzkR5bdYkmutnN5TcP+xROIYG
Nr2UJwAvw1dX/Ulx/e0B+21T3Df2U/Dgvu7qgaKLtbxQFcX1+yk8ffVBipqi
4AM2wV5IFOqXdT2juP73Quf8q+XW3RSwr/N9Bu4L9y+585jieAhBM8APq2mh
uHqEYDwj1+XlXYrjI4TlN3xWxTdQXH1CGAPJaxzrKY6XCIyowusOv1BcvSJo
zMvy/6GG4viJwFAeGPKkkuLqF0NE3uzVkeUUx1MMd4IG65ZfpuDt68QQ+UrQ
Nb+U4vhKIGapYa9jCcX1RwJFrsVrY89THG8JmJ+2amgrQv2SAr+8c5lnIcXx
l0LjG22B6gzqnxRSn2d8cu40xZ0HCspaTthH/gv1k4J1OUlz/HIp7nxQwNx4
mPxNNuovDdN9UoajTlLceaEhv0voei4T9ZuGmZt3u0p+orh5Hznn/i60XQbq
PwPebfbTTqVT3HlioOLQdolhGuIhg3FlY3ZnpiIeMjA83D4w9wjiIYPQVV6n
Gw8hHjLwn7W3Ivog4iGHlj19x2wPIB5ycLlscGQoGfGQQ9rK6ZNa9iMeCti0
uWp/6T7EQwFrXEzCs5Io7nwqoHLhNufDexEPJSSJTPNTEhEPJfQ3Ng0f2YN4
KCHo2ubhnB8RDxXUxpTZX0pAPFSw1cLT40E84qGCDj19zfM4xEMN+0x9ayzi
EA819Luc5G+MRTzUMHXBvPNpMYiHBm5NTf20ORrx0EBez9Bd42jEQwPvrVu+
MCAK8dCCd4b7B+W7EQ8tLG4K9Zy4G/HQgvXUzBJ+JOLRB4z6tPzOLpR/MhyN
tvR1ciD+eHw1bKb7PuIP2rLwrNVD4o9pluMF+YuIP57N/MimOJ34o/KhN3/m
kBL7o+94yYtfdxJ/DPa8pCO1CuyPfreiS31RxB8Wx1Wtr8YRfwx8ze/YcEaO
/WGq7J97Hog/jH70qqtjZNgflb0Jw2uzZdgfwu9Ctw9tkGF/lGesdEibRPxR
2dxAX21hsD+qOhYLZp9isD/mHFzy44kwBvvjutGtSbeciD/mFh9N5pkRf/xU
fbPffpjG/ljh3HBbT0Jjf3S5fdKQ8IDG/gjx+WhFRC2N/WExOG+w6BKN/RHs
kucl+pn444VnyprnZ4k/XrxO5eUXEH80xieG6GLkD9uwnGBdjPwhE2xln0f+
UE8p99fFyB9gsS5QFyN/PJZmBuhi5I+h9m/Z9cgfA3b72Rj5o/r39WyM/GF6
r5hdj/zxR1sNex/5Q7BhMZsv8kfQmYogXYz8QZ9rYPND/oDpXmyM/OF55xD7
PPJHUbnQTxcjf7Qu62WfR/74Y6ia3R/5g/epmL2P/BFupgkg9QghTd+Yr4uR
Pw67rvAj9QlhEZ3Lrkf+UHyoDCT1iuAH+1h2PfLHguGDo+oXQ/rYUjZG/iiN
TmTXI39cT/INIXwlwNgVjOqPBN5Ea4MJbwmsNFg0ql9SOOBl7k/4S+FmiIhP
+icFX48+f3IeKGg9djWM9JOCPQN5geR8UGDC6PFJf2nosbsRTM7LSJ4RUTzS
bxrkTjns88gfiYLtfqT/DDRt3xhIzhMD627RgYSHDAp3OfoTHjKALk0Q4TEy
x1ee+RMeMtC0zg0iPOSw5bX/KB5ysGy7FkB4yGGB9dEgwkMB29YwQYSHAv5y
fdsv5I9dNi6j5k0Jv5duDSA8lHDa8otAwkMJzfcpHuGhAt6wK4/wUEHNm34e
4aGCsfpxIYSHGj6cYhhIeKhh4GFCMOGhBsGYNB7hoYGzuTGjeGhgc0HVN4SH
Bmz6y3iEhxbmZHuNmgct+PjUBBEeWhj0GN5GePRB+kvfAJJ/MnjHTlhl9gPx
R+bzKQfspcQfE78zbdrkpcH+4FFWkyMaiT9q/Ra6pa1QY38Yd9ocL75I/n+E
e3ze9pu5Cvuj4e4qE3EG+f9h8dV6n7/GKLE/Yuo25c/cTfzRumybaBlD/LHg
crD1Rm/ij30LdoR8f4/4o7swqiT1C+IPW7NE9fmR3/zIH0dPHlz6qxWD/SE1
zNglzKSxPxwP5VS+NqCxP7L0z74yiaGwP7RxxQ52Cin2h/PAlUQPXyn2R0F4
TX14swT740+63uCIkwT7w9P/nvPPV8XYHxe6HqXWW4uxP8Zu7GnuzRJhf/je
l04dmiDC/qhYrd40I16I/dHvNDH0/vtC7I/cO/pzLhcIsT+cXF+JMv8hIv54
3JcfXSvC/jjmI/PxcRFjf3wmfmYCnWLsj97QjrbZfAn2R4q2+fi4AQn2x+Ko
BjdFkhT749HrusnNRhT2R/z+iqYrpynsj9kTSw+cXET80ZRRtCq2mvgjYkae
3ra1DPbHjPzMOqc2BvvjpnVqnDVPhv3Bv7Dvswm/y7A/3rOJG1DukWN/VFRF
XGmZrMD+8IVvd5SfUmB/vNPgvyh7vhL7o2T9FllcpRL7w+OR27/9vlJhf7zy
Xhv45UMV9keB0NFirr8a+8M5ZFnPuxo19odW/XGuOl6D/ZEVOcdL8K4W+8Nx
yGxaRbYWzyf6/P98/m/M58w9yiUh3c/wfDbvfF1x5pdePJ97ee85dBY+xfO5
1Mu8fsrBHjyfYuclzl9vf4Ln8/jnTs1Jbt34nKC5MrPNWH0+Voy/fztn7fj+
3649XSc=
        
        "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwlzkdOQgEARdH/wV4Q7IigIMp+3IAJC9B12ruiYu8dOxbQkzg4uW/4ssWZ
yelIEAQhU0SNBhppopkWWmmjnQ46idFFnATd9NBLH/0MMEiSIVIMkybDCKNk
yTFGngLjRJggDP9P/kqdGj9888UnVT54541XXnjmiQqPPHDPHbfccM0Vl1xw
zhmnnHDMEYccsE+ZPXbZocQ2W2yywTprrLLCMkssssA8c8zyBxBkNkU=
             
             "]]]}, {}, {}}, {{}, {}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
             18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
            34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 
            50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 
            66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 
            82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 
            98, 99, 100}]}, 
          {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[{101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 
            112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 
            125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 
            138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 
            151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 
            164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 
            177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 
            190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200}]}, 
          {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[{201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 
            212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 
            225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 
            238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 
            251, 252, 253, 254, 255, 256, 257, 294}]}, 
          {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[{259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 
            270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 
            283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 295}]}}}], {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"\[Sigma] of swarm\"", TraditionalForm], 
        FormBox["\"Optimal push location (\[Mu])\"", TraditionalForm]},
      AxesOrigin->{0, 0.403},
      DisplayFunction->Identity,
      Epilog->{
        Dashing[{Small, Small}], 
        LineBox[
         NCache[{{0, 
            Rational[2, 3]}, {100, 
            Rational[2, 3]}}, {{0, 0.6666666666666666}, {
           100, 0.6666666666666666}}]], 
        LineBox[
         NCache[{{0, 2^Rational[-1, 2]}, {100, 2^Rational[-1, 2]}}, {{
           0, 0.7071067811865475}, {100, 0.7071067811865475}}]], 
        LineBox[
         NCache[{{0, 
            Rational[1, 2]}, {100, 
            Rational[1, 2]}}, {{0, 0.5}, {100, 0.5}}]]},
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->Medium,
      Method->{},
      PlotLabel->FormBox[
       "\"Where to push object pivoted at 0, length 1, to maximize torque\"", 
        TraditionalForm],
      PlotRange->{{0, 1.}, {0.4, 1.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Prolog->InsetBox[
        GraphicsBox[{
          RGBColor[0.6, 0.4, 0.2], 
          RectangleBox[
           NCache[{0, 
             Rational[-1, 10]}, {0, -0.1}], 
           NCache[{1, 
             Rational[1, 10]}, {1, 0.1}]], 
          RGBColor[0, 0, 1], 
          PointBox[{0, 0}], 
          RGBColor[1, 0, 0], 
          PolygonBox[
           NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
              Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
             1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]], 
          GrayLevel[0], 
          PointSize[Tiny], 
          PointBox[CompressedData["
1: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
9cjpHigyX3FcxZPC1IUPHjLvDUHb/qu713+ncFG+VUi/UCvMMFrLdJZTWHhY
b8qZ6ge+9kLby5ZkXgdGiv+pdAK7ODXF7Sbh4XvyJwI+jcKVte/+JEcy0L4s
Sd5NfwJeZH4wvHqIiZFl/vzizzrgjUvjorUPmBhQo1y5gDsMK3z/bXAbpDHz
2/3xk5L9kJrEWCHcRqNrkFV42cVu8GyXlW6MEsexrf5Dkqn98ODmtyVptQzc
qiCzpPTrFLjar8s49JzCV2U+GmEdo7BmjvquyRYafy68InoLSf6YD7axWUyU
WyMSDleGQEiy9dJYOoWXjv8yuPGIB7yDE/n5osSPtBeY39HqgUFF2PNNn4lj
2V8k9UifV849mvn9I+FDZaMTf3U64fY6I2eTUQp1lorMlzDtg9WnvlTNI/vj
mTIj1jzYC+8GDWpCyH6q5Y3Ee36bgHKBqt0idkycP5QIZ3+1g2q92LrSr0z0
ly2ZtSL6FwQU/yrYGsrES04XHfK3cWF1c0maM/F5dvb5te4LeWAdk3ozaFQc
Py045VYgwwPn+otfI55ReMw7eS0ruA0uPc8JnRphYLHl+asNF3ig3C5beEKG
xq6mXWFizT0g1FuvM4cmfHXlpKbt6lbwcS1sMrhDo9U6xVedeziQLFljknyb
wmvHVl7MuzsD973iXNx+MVHFJZ8HHp3At8H1c5EyhS8XPM431uOB6tcAgbE+
MTy/ofa68JleaJBaxTW+S+Ob1guPFlqRfNwd7zroycCLEHgqU34MzJtlfRc8
pvF+6oDs8wYe3JblBpw8yMAsCROF0sdjkGqn0+WtSvjosa6huWI3CNnp9j29
SKOKv8OizZkTMG14+pj8FvL8DZzyfZwOCFAQiYuoZ+DGjIKfZXe4sKqt1GCK
8HtwU93C721c0NX+VzZ9m4kPlD79bkoegUdfqJfuBxh4aZ2zz+Ov9fC1TW/i
LcmbO24jEguIz7/je9nlaMvE3/sOjJ70God4d881TbuZuMDWQ0w7YhherC1o
/07yx4sRXRtUzgbjSL70p+qEb+vzE0tr26DG4ejbPDPCM2aFGZI1HNAVKRX8
p8tAz5Zh7a6PbDBKOFccNEbhXdODjFVWo8SvbZQPhovjVZ+T7I6QJrCX33DK
n/DC1a1Z+63Se+GKlDo1SvhI9RN9ZWn4MOgYbfCWuUf6I1ZIdzKuGvrKXXxC
+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
NDYM+Z/PVuVAmkzIdCnp/2nj7UMOzCE4ozFAL1Ci0WX4ouV0KA+yfq62ySFf
T/M32n680Q3v106f9/FkICPg2IqOom54sMf9ykfSF47jCxvMDnDh+29nDeH/
KFTQKE9xVeiCu98WszZliuGtbqPHtN4IqL9nGUWL0ejr+7Io5D3Ju/C6uB4F
wrPfWYvl2jogNdhwmu8YhZzlq1+WARekZLe/4WtiovR5u+465Q44ecnneLco
Ey2Evu3lruoG3+sXH8bvofDRWce884XtMNv3oWPF//NzSOHC3WIeRMtH+zwz
oTFh3u9bUovZsKbWen5Mlhiq91UNTs7qAXsB/bcOYTSqBxTNJNez4aDeskvC
9kws4woNzgoYgWylxBAl0u8aP/U0D6Rwwbn3xpOJqxL4xJ5vqbABG8LGn+2Z
rKYwYMMjw5sbOXCm6DVv/mEmDsecyq7ObAb32lV/jb8xsSm0o/7yxX6wSz9+
/cMWcTxSPbpdQpwNO8z/iW0m/ea1wCVXv3gARsNWBWqfoVGxLiS/+thf+D5r
1u1/f2h8VCQUzLneB/szpbUv2VLY5CHzXlKzCzZ4ha0KKafwUv/S4lWby6Hw
s+63WrJfFZVfvSyiRsHLp2Dvho00zqfEqqu3jsM47+e810fFkaXBt69PrA/e
9t4Xjf9MI99Gu/7VhMdXjTwvKrvOxEufRy4GJE7ApcvW8vP2MrHFyGR8epjk
VWrcUMQ94ost0UfjXQfAOHYqbrYL4eMNwS/9CC+9mfqjo2XNRJd8NZdLDSOQ
t+THyWoTCus2q+RTPQNQnnTwhZcwjfrxLGkpdTYIxqxKoybIvDXxjUo4s8FE
+ais0SIK334XrVwt2gd7+7PSYib///sSUiKPk7tA8I1b8nMrJr6wmYkdaO+D
+S/SfPado/GSgeGaUtFBGH/2yuNeD8kvrS8lrPdDULhQKEvEg8Yef6s2810t
oFB8Mmn1/f//fwmj/JZvf8B6j1rH927C60I/hq7OdAPLmE/tM5m/W8t7dTcR
f/0UqDVSSZ73Cb4THRBkg51+8BLFPHL+XZ3S6lYs+LxfcX0R4Y+d9kXGa0KG
QTmjdNZZPgk851aR2bKIB1v3CWnrMpi4+03r+ZM+PCiudn/73y4ab93KN8r4
2QtbZh9NSiP+AmBuOd3KhYDPbaP10xQWWJVgR94wHNtfNi7fJo6nx0znz6rp
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
bhHX
           "]]}, PlotRange -> {{-1, 3}, {-8, 2}}, AxesOrigin -> {0, 0}]],
      
      Ticks->{Automatic, Automatic}], {191.00408802586253`, -116.80842387373012`},
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212`}], InsetBox[
     FormBox[
      TagBox[
       FormBox[
        GraphicsBox[{{{}, {{}, {}, 
            {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
             0.011111111111111112`], AbsoluteThickness[1.6], 
             LineBox[CompressedData["
1:eJwtlAtMU2cUxxERC4gukzp1DMTNFXUmG6CbMPgTVxDsRASHm+BwDHW+Ikhm
AAfIhjEs2zTI3NrxEGGLyAABgxARBoJQaGsf0JZ3X1BKeQUpkYljbT0nubn5
7r3fOef//53vesSdjzhua2NjE2++LPdLLhV71alZeFgyVh1tP41X61yYOG2m
Ku8p1LldMR6sK4C48kqN64VJel+C/L0/eR5vmACPa4lS2O04xX62ZgL11u8r
UGb7bKPXGSPMC/OTKix+JD68WjhO++/D61Dol00+43BUFCf4Oz5AF+ulqKzI
AGs6bj3+zdyz/chaA7bGXGsxeTYgOOjNH09mj1E/jdjqcfdW5vIxlJh3K4r/
AdMhqzEuU48Ja71mJK1ULols9fDxtsRjZGyZC8m5Okr1W2E/XSdIXzOKxyZP
c4U2+Po4/XeGNwInaz/tkIU6q3Z6jiDCWrAD4XkHyhvqdKSXj/EgbouOo4Mm
1ZKwE/xrN0pvqrXUrwCaT3dvaErRItHSXoIQnJ2uXWEuWvJHhOx26Ru+VRrY
WEMMPS/mWHK4hvSIwetfilo+q0aI2lJAAt6pwAD5r2rSJ8EzH4bXpJ8a11ss
AqQ467Q5m61TwSrXWwan69lRyl9UsMpRyDBfnbyqxE9F+ruxLeRwOrtnGO6W
dtx6UOu+3p774TD50YNu1mLzroIhnDxhCTmM2abaVQ5D5I8C9g3+SyuTB2HJ
5lKhQOuCx+Ja4wD5pUS1h+76xrgBzFvSmZRIY936ym6wn/zrxYrey6/XR/cj
wDoAfVjYU5HlPtRHfvZhqIC9xi2+D9b2rvTDjhFRw5vsJX8HkBAQve9Sai+E
AksM4LMZduWfjr3k9yBu+DSpl/KVYFobHMILbeo7CT5K8n8IqvnsdYNCBazp
Yobh9N0XHTtOK4iHCl5ldYJQBwXpUUFYERu8oUxOfFRwYMTPZh2Qkz4VPGOX
vX9xvod4qfHJLqa9orCH9KoR6Vz8bg6nh/ipwcgtn8lZ6Cb9GuwfvpPQVtpN
PDVgJzbHrovpxqt0Giw78t7mpNe6ia8Wrn3lrfwnMvJHi0ctaQuMDBnx1sKJ
U+ayabeM/NIh5IO3GEtzUuKvQ3J1cOzNain5p8PIpr98FYlSmocRGP9w49R4
ScnPEQTm+gldTRKajxH8Hnk6y75eQv6Ooq/Iu/brdAnNyygM4rQtnkES8nsU
5cZB5xBnCZ138zlNeOlWJxeT/3qEa9cnnysS0zzpMfA9r/joOTHxGMM3tbKc
dF8x8RjDby/l3CcMMfEYw8fH9fLP7z0lHub/guzOtrCDT4mHAdLKy8+j50TE
w4DBu0v3Erki4mFAw+32+IxAEfEYBytv+NG3BiHxGEd6BWchKFdI8zmOoBS9
Sh0oJB5GPPwhs81vWkA8jGA17kwJLhQQDyP8/VfsM4ULiMcEfvYuXfSzExCP
CSS5Fbavru8iHhOIYZ4NizvfRTwmcZvFzN/O6iIek5h/0Pn2MVUn8ZjEBX5r
tYnXSTymcMIv7KImqpN4TOHQi8VZV5dO4jGFrkCmbZ6UTzymsdHEFEXl8InH
NP6+ePYpO5JPPKax6vl+/lEmn3jMmOvdf8JVduB/Gv0hXg==
              "]]}, 
            {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
             0.011111111111111112`], AbsoluteThickness[1.6], 
             LineBox[CompressedData["
1:eJwtkwtMk2cUhuskwEAzAjIUESZjgihRLlNn0FedCxs6boILlzlHKijqRKWO
YRSJohOmsmkioqIMAgIRGQIiKk4u2lJ6pxQoll4o0AsXp4gSxLX1nOTPn+/7
/++c877P+RYnHoja9RGDwWCaHvP76LyqEFXGKYRke2dyvxrDh/UllI8+O52Z
PooG92xDZEMhphZYXXZ5OELfS7DhC9+Nf1iNoOCKOcpxy71xgyTSiPuW/6tQ
czv0en+xAaaFaecfzDgEdxZN6el8LUaD39jabtfDTlacus7uHkof7Fg7U6eD
Jd2V+yjabzz6i6sOSxMuNE/4PITNbX//jSeHqZ8mxOauDf1xfAglptOy4n+x
zqci89bPQzBa6j1BY0jqORvZIIICzdEC10+W790RMUj1W8FyO5aVx9OiZcLH
VKENOT/UyE+EaWFv6ecZDj04GOMoGUCUpSAbM/Furd7xA6SXA+bH0oUlgxqo
M8wJ25F70y8vhaWhfjtwffXl6h02Ghw0t5fKw03n1hPMa2ryh4/ulWvO7QxS
g2EJIaa3h02vFqhIjxDXWt9dFe5T4VuVuYAITYerjA5zVaRPhOC9KUuVd5TI
azYLEIO9qW3bkhglLHIDJfg0Z/aBu2/7YZEjk8Cv3CXKPayf9HeicuvJoPIy
BTzM7bhLEec0a1m8tYL8kMIu5pjN8pTnSE4yRxesmU/P2Er6yB8ZIrgPjks3
9MGcbV6VaV39eM2hu3LyqxsX5bu3NPrK8dqcbqIbl77b9Op0aS/514NjXNbi
6iW9WG8ZgF4EhZWtmVvZQ372wjZrZyUrsAeW9rLl+C+5hfnkcTf524di1W8L
OOHd4HWYow929S0nkjQy8vs5SqPHj6ZlyOBsaVCBekHCSsE8GfmvwKrPPV2i
a7pgSZfQD6ZGZ6WO6iIeSmS8EC+LfS0lPUokMjTzr16TEh8lOJ5+VTnfSEmf
EtZNF13nvOgkXir48LoFVjc6Sa8Kzl5nfo0P7yR+KuTLPYYmZ3WSfjX+2qZw
aqmXEE81xvmR1mX7JfiQTg3Zvmne+SUS4qtBaOhCVpJKTP5o8Dyg5pVroZh4
a1BoGPEpSBCTXwPoTdS3id3ExH8Ahy9pt9YqROTfANLSB2at+FtE86CFX3GH
KjBZRH5q4ev/Mr/WT0TzocUy+88yiieE5K/pXu2afeRlk5DmZRDBp1yd8s8K
ye9BvAlgJGXHCOm+D2HypZddtaeQ/B/C7nDpl65qAc3TEDafXx/nlSUgHsP4
Pb3kzxRPAfEYxtf890972vjEYxhzehfV/bSXTzyGEeC0qk/vyCceOnilOaan
POQRDx2YWc1H+Mk84qFDUrjogI0zj3josXb55FXr1g7ioUeFDrxHaR00n3po
F91I9vDuIB4GdNkYY93lXOJhwPyFcKnK4xIPA9xyK/OaQ7jEw4jo4+ErIhhc
4mFEbX8df0tjO/Ewwt4h+14Fq514jCDuPasgMaCdeIzAOuNC7p5xDvEYgW99
0bu6OxziMYr8PTOP1qdyiMco8vR7xqf8OcRjFJFOm+zVr9jEYwyFEpnE0MAm
HmNQ5ryJczjOJh5jcDtc8jZkM5t4jENxfuz7XHs2/gd7WRvo
              "]]}, 
            {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
             0.011111111111111112`], AbsoluteThickness[1.6], 
             LineBox[CompressedData["
1:eJwtkwtQVGUYhsGBkcGmkQYDCTGMHFQ05ZZDwmuJQjMocommcStCwEpQwSIB
yyYlGskJIgtxIgQTUILoujTk4F5Y2BvsLsvCsqx732WvTomNpTtxjt8/c2bn
nLPn+7/vfZ4/tuR4ftmKgICA0uWL+a0PH8gy1p3DwdqQPdHVPjy6/wqdf63+
dKfFC25MgyuP24HVFWsnCou89P4qSq2xj1WNe9B+iVl94L6xOfdCmgfD7P8H
EDmb+GVfvxvLN8tPhnAs7wW1MMZN3/+CMfGeSFOzC6Ga7hPpob9jfWbOIf8K
F9hyl4ZR82dhR9T7TmzifMFbih+BIvV1Y6p9kfq5ic0/lsUVvLaIq8tfa7pH
8cmmY0eOSxxws/vdgq6r5npTugPJScziIyn6jKdn0E77C/D5xcbtglg7+Evx
yzsIYX28+aSh1YZVbD8iZHzW9tuDYBvy2Q3H8U3glfuRp6w07wR8dX27UpwW
mOqYgmJk3R06k8exUL9SdFb+wauUm1HFtHdChvs2XvD53WbKR478Ykn2tZ9M
CGDXFG7MqZp4cSaaZwpBBTq5/msjso3MBgpwpJaw/0KMNJ8Cv+71FEbUG9DM
YwZQ4kbIh/Gt2ttgx01SYfsrd07eEuvBjqNRoSrf8GytdIHmn4Yud4izRq/D
eqadGDUe1mvT4vzzlIcaZY055W9umceRcmbNoCouQvF9qZby0eDhvuyme71z
YKqFD2gQ9J3maMU/s5TXLNRRge+k5c7iHlNuaRbtp1s+7h3UUH5zMOPuk2GR
GmSwAmhx4NURrr5xhvLU4ue/07ed96vBttcwj8MvLqja6tWUrw4Pdc8kXPZP
QyZllg7inZ1dWxqnKe8FKPZvOOUJn8YatkE9Rj5IUDb1qCh/PdJTahzcDBXY
cpzbCIlKydmqVRIPA9YlNe/tqVXSPAb4gpIyndFK4mPAe+sqi2/yFTSfAfIf
Bpy+SgXxMqL3XMPK3KcUNK8ROyLOFg1KpoifEaKagS77R1M0vwnmsKLLiuQp
4mkinpN4VM6E8s5v2zgHJ4mvmfjKKR8z+m1vDTe+LCfeZuIto7ws2Nee7ygp
kBF/C/GXUn4WFJbUyw5XSMkHK/kgoTytqFvQb3yuVUJ+WMkPCeVrQ8UTZ5da
xsTki418EVPeNjzIGlXUB4vpvNvhZ/2ZoPztCETitn8PTJBPdvJpnHg4sDFz
lJPcNU48HOTXOPFwYENsdeLbfhHxcJBvIuKxiP4Oz1Z7iYh4LJJ/IuKxiKZD
K0PDJ8eIh5N8HCMeTmTsSLhe/NIY+ekkP4XEwwWuciYvZ0RIPFzkq5B4uDAR
7I8q2SUkHm7yV0A83Jjvbr3yPE9APNzks4B4eCB71zl/dL+AeHjIbwHx8GAp
dffaawt84uEl3/nEw4uwQdnTF6v5xMNL/vOJhw9zwr4K7yo+8fDReeARDx/8
PS2nK/t4xOMOnQ8e/gdEkiPL
              "]]}}, {}}, InsetBox[
           RowBox[{"Unevaluated", "[", 
            TemplateBox[{"\"Normal\"","\"Triangle\"","\"Uniform\""},
             "PointLegend",
             DisplayFunction->(FormBox[
               StyleBox[
                StyleBox[
                 PaneBox[
                  TagBox[
                   GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                  ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                  "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
                False], TraditionalForm]& ),
             Editable->True,
             InterpretationFunction:>(RowBox[{"PointLegend", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                  RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "True", ",", "True"}], "}"}], 
                    "}"}]}], ",", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                  RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
                "]"}]& )], "]"}], Scaled[{0.99, 0.99}], ImageScaled[{1, 1}],
           BaseStyle->{FontSize -> Larger},
           FormatType->StandardForm]},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{
           FormBox["\"\[Sigma] of swarm\"", TraditionalForm], 
           FormBox["\"Max Torque\"", TraditionalForm]},
         AxesOrigin->{0, 0},
         DisplayFunction->Identity,
         Frame->{{False, False}, {False, False}},
         FrameLabel->{{None, None}, {None, None}},
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImageSize->Medium,
         Method->{},
         PlotLabel->FormBox[
          "\"Maximum possible torque on object pivoted at 0, length 1\"", 
           TraditionalForm],
         PlotRange->{{0, 1.}, {0, 0.9826794919243103}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}},
         Ticks->{Automatic, Automatic}],
        TraditionalForm],
       InterpretTemplate[Legended[
         Graphics[{{}, {{{}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              Line[CompressedData["
1:eJwtlAtMU2cUxxERC4gukzp1DMTNFXUmG6CbMPgTVxDsRASHm+BwDHW+Ikhm
AAfIhjEs2zTI3NrxEGGLyAABgxARBoJQaGsf0JZ3X1BKeQUpkYljbT0nubn5
7r3fOef//53vesSdjzhua2NjE2++LPdLLhV71alZeFgyVh1tP41X61yYOG2m
Ku8p1LldMR6sK4C48kqN64VJel+C/L0/eR5vmACPa4lS2O04xX62ZgL11u8r
UGb7bKPXGSPMC/OTKix+JD68WjhO++/D61Dol00+43BUFCf4Oz5AF+ulqKzI
AGs6bj3+zdyz/chaA7bGXGsxeTYgOOjNH09mj1E/jdjqcfdW5vIxlJh3K4r/
AdMhqzEuU48Ja71mJK1ULols9fDxtsRjZGyZC8m5Okr1W2E/XSdIXzOKxyZP
c4U2+Po4/XeGNwInaz/tkIU6q3Z6jiDCWrAD4XkHyhvqdKSXj/EgbouOo4Mm
1ZKwE/xrN0pvqrXUrwCaT3dvaErRItHSXoIQnJ2uXWEuWvJHhOx26Ru+VRrY
WEMMPS/mWHK4hvSIwetfilo+q0aI2lJAAt6pwAD5r2rSJ8EzH4bXpJ8a11ss
AqQ467Q5m61TwSrXWwan69lRyl9UsMpRyDBfnbyqxE9F+ruxLeRwOrtnGO6W
dtx6UOu+3p774TD50YNu1mLzroIhnDxhCTmM2abaVQ5D5I8C9g3+SyuTB2HJ
5lKhQOuCx+Ja4wD5pUS1h+76xrgBzFvSmZRIY936ym6wn/zrxYrey6/XR/cj
wDoAfVjYU5HlPtRHfvZhqIC9xi2+D9b2rvTDjhFRw5vsJX8HkBAQve9Sai+E
AksM4LMZduWfjr3k9yBu+DSpl/KVYFobHMILbeo7CT5K8n8IqvnsdYNCBazp
Yobh9N0XHTtOK4iHCl5ldYJQBwXpUUFYERu8oUxOfFRwYMTPZh2Qkz4VPGOX
vX9xvod4qfHJLqa9orCH9KoR6Vz8bg6nh/ipwcgtn8lZ6Cb9GuwfvpPQVtpN
PDVgJzbHrovpxqt0Giw78t7mpNe6ia8Wrn3lrfwnMvJHi0ctaQuMDBnx1sKJ
U+ayabeM/NIh5IO3GEtzUuKvQ3J1cOzNain5p8PIpr98FYlSmocRGP9w49R4
ScnPEQTm+gldTRKajxH8Hnk6y75eQv6Ooq/Iu/brdAnNyygM4rQtnkES8nsU
5cZB5xBnCZ138zlNeOlWJxeT/3qEa9cnnysS0zzpMfA9r/joOTHxGMM3tbKc
dF8x8RjDby/l3CcMMfEYw8fH9fLP7z0lHub/guzOtrCDT4mHAdLKy8+j50TE
w4DBu0v3Erki4mFAw+32+IxAEfEYBytv+NG3BiHxGEd6BWchKFdI8zmOoBS9
Sh0oJB5GPPwhs81vWkA8jGA17kwJLhQQDyP8/VfsM4ULiMcEfvYuXfSzExCP
CSS5Fbavru8iHhOIYZ4NizvfRTwmcZvFzN/O6iIek5h/0Pn2MVUn8ZjEBX5r
tYnXSTymcMIv7KImqpN4TOHQi8VZV5dO4jGFrkCmbZ6UTzymsdHEFEXl8InH
NP6+ePYpO5JPPKax6vl+/lEmn3jMmOvdf8JVduB/Gv0hXg==
               "]]}, {
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              Line[CompressedData["
1:eJwtkwtMk2cUhuskwEAzAjIUESZjgihRLlNn0FedCxs6boILlzlHKijqRKWO
YRSJohOmsmkioqIMAgIRGQIiKk4u2lJ6pxQoll4o0AsXp4gSxLX1nOTPn+/7
/++c877P+RYnHoja9RGDwWCaHvP76LyqEFXGKYRke2dyvxrDh/UllI8+O52Z
PooG92xDZEMhphZYXXZ5OELfS7DhC9+Nf1iNoOCKOcpxy71xgyTSiPuW/6tQ
czv0en+xAaaFaecfzDgEdxZN6el8LUaD39jabtfDTlacus7uHkof7Fg7U6eD
Jd2V+yjabzz6i6sOSxMuNE/4PITNbX//jSeHqZ8mxOauDf1xfAglptOy4n+x
zqci89bPQzBa6j1BY0jqORvZIIICzdEC10+W790RMUj1W8FyO5aVx9OiZcLH
VKENOT/UyE+EaWFv6ecZDj04GOMoGUCUpSAbM/Furd7xA6SXA+bH0oUlgxqo
M8wJ25F70y8vhaWhfjtwffXl6h02Ghw0t5fKw03n1hPMa2ryh4/ulWvO7QxS
g2EJIaa3h02vFqhIjxDXWt9dFe5T4VuVuYAITYerjA5zVaRPhOC9KUuVd5TI
azYLEIO9qW3bkhglLHIDJfg0Z/aBu2/7YZEjk8Cv3CXKPayf9HeicuvJoPIy
BTzM7bhLEec0a1m8tYL8kMIu5pjN8pTnSE4yRxesmU/P2Er6yB8ZIrgPjks3
9MGcbV6VaV39eM2hu3LyqxsX5bu3NPrK8dqcbqIbl77b9Op0aS/514NjXNbi
6iW9WG8ZgF4EhZWtmVvZQ372wjZrZyUrsAeW9rLl+C+5hfnkcTf524di1W8L
OOHd4HWYow929S0nkjQy8vs5SqPHj6ZlyOBsaVCBekHCSsE8GfmvwKrPPV2i
a7pgSZfQD6ZGZ6WO6iIeSmS8EC+LfS0lPUokMjTzr16TEh8lOJ5+VTnfSEmf
EtZNF13nvOgkXir48LoFVjc6Sa8Kzl5nfo0P7yR+KuTLPYYmZ3WSfjX+2qZw
aqmXEE81xvmR1mX7JfiQTg3Zvmne+SUS4qtBaOhCVpJKTP5o8Dyg5pVroZh4
a1BoGPEpSBCTXwPoTdS3id3ExH8Ahy9pt9YqROTfANLSB2at+FtE86CFX3GH
KjBZRH5q4ev/Mr/WT0TzocUy+88yiieE5K/pXu2afeRlk5DmZRDBp1yd8s8K
ye9BvAlgJGXHCOm+D2HypZddtaeQ/B/C7nDpl65qAc3TEDafXx/nlSUgHsP4
Pb3kzxRPAfEYxtf890972vjEYxhzehfV/bSXTzyGEeC0qk/vyCceOnilOaan
POQRDx2YWc1H+Mk84qFDUrjogI0zj3josXb55FXr1g7ioUeFDrxHaR00n3po
F91I9vDuIB4GdNkYY93lXOJhwPyFcKnK4xIPA9xyK/OaQ7jEw4jo4+ErIhhc
4mFEbX8df0tjO/Ewwt4h+14Fq514jCDuPasgMaCdeIzAOuNC7p5xDvEYgW99
0bu6OxziMYr8PTOP1qdyiMco8vR7xqf8OcRjFJFOm+zVr9jEYwyFEpnE0MAm
HmNQ5ryJczjOJh5jcDtc8jZkM5t4jENxfuz7XHs2/gd7WRvo
               "]]}, {
              Hue[0.1421359549995791, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              Line[CompressedData["
1:eJwtkwtQVGUYhsGBkcGmkQYDCTGMHFQ05ZZDwmuJQjMocommcStCwEpQwSIB
yyYlGskJIgtxIgQTUILoujTk4F5Y2BvsLsvCsqx732WvTomNpTtxjt8/c2bn
nLPn+7/vfZ4/tuR4ftmKgICA0uWL+a0PH8gy1p3DwdqQPdHVPjy6/wqdf63+
dKfFC25MgyuP24HVFWsnCou89P4qSq2xj1WNe9B+iVl94L6xOfdCmgfD7P8H
EDmb+GVfvxvLN8tPhnAs7wW1MMZN3/+CMfGeSFOzC6Ga7hPpob9jfWbOIf8K
F9hyl4ZR82dhR9T7TmzifMFbih+BIvV1Y6p9kfq5ic0/lsUVvLaIq8tfa7pH
8cmmY0eOSxxws/vdgq6r5npTugPJScziIyn6jKdn0E77C/D5xcbtglg7+Evx
yzsIYX28+aSh1YZVbD8iZHzW9tuDYBvy2Q3H8U3glfuRp6w07wR8dX27UpwW
mOqYgmJk3R06k8exUL9SdFb+wauUm1HFtHdChvs2XvD53WbKR478Ykn2tZ9M
CGDXFG7MqZp4cSaaZwpBBTq5/msjso3MBgpwpJaw/0KMNJ8Cv+71FEbUG9DM
YwZQ4kbIh/Gt2ttgx01SYfsrd07eEuvBjqNRoSrf8GytdIHmn4Yud4izRq/D
eqadGDUe1mvT4vzzlIcaZY055W9umceRcmbNoCouQvF9qZby0eDhvuyme71z
YKqFD2gQ9J3maMU/s5TXLNRRge+k5c7iHlNuaRbtp1s+7h3UUH5zMOPuk2GR
GmSwAmhx4NURrr5xhvLU4ue/07ed96vBttcwj8MvLqja6tWUrw4Pdc8kXPZP
QyZllg7inZ1dWxqnKe8FKPZvOOUJn8YatkE9Rj5IUDb1qCh/PdJTahzcDBXY
cpzbCIlKydmqVRIPA9YlNe/tqVXSPAb4gpIyndFK4mPAe+sqi2/yFTSfAfIf
Bpy+SgXxMqL3XMPK3KcUNK8ROyLOFg1KpoifEaKagS77R1M0vwnmsKLLiuQp
4mkinpN4VM6E8s5v2zgHJ4mvmfjKKR8z+m1vDTe+LCfeZuIto7ws2Nee7ygp
kBF/C/GXUn4WFJbUyw5XSMkHK/kgoTytqFvQb3yuVUJ+WMkPCeVrQ8UTZ5da
xsTki418EVPeNjzIGlXUB4vpvNvhZ/2ZoPztCETitn8PTJBPdvJpnHg4sDFz
lJPcNU48HOTXOPFwYENsdeLbfhHxcJBvIuKxiP4Oz1Z7iYh4LJJ/IuKxiKZD
K0PDJ8eIh5N8HCMeTmTsSLhe/NIY+ekkP4XEwwWuciYvZ0RIPFzkq5B4uDAR
7I8q2SUkHm7yV0A83Jjvbr3yPE9APNzks4B4eCB71zl/dL+AeHjIbwHx8GAp
dffaawt84uEl3/nEw4uwQdnTF6v5xMNL/vOJhw9zwr4K7yo+8fDReeARDx/8
PS2nK/t4xOMOnQ8e/gdEkiPL
               "]]}}}, {}}, {
          DisplayFunction -> Identity, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
           PlotRange -> {{0, 1.}, {0, 0.9826794919243103}}, DisplayFunction -> 
           Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {"\[Sigma] of swarm", "Max Torque"}, 
           AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
           Frame -> {{False, False}, {False, False}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
           PlotLabel -> 
           "Maximum possible torque on object pivoted at 0, length 1", 
           PlotRange -> {{0, 1.}, {0, 0.9826794919243103}}, PlotRangeClipping -> 
           True, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
         Placed[
          Unevaluated[
           Unevaluated[
            PointLegend[{
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]]}, {"Normal", "Triangle", "Uniform"}, 
             Joined -> {{True, True, True}}, LabelStyle -> {}, LegendLayout -> 
             "Column", 
             LegendMarkers -> {{False, Automatic}, {False, Automatic}, {
               False, Automatic}}]]], {Right, Top}, Identity]]& ],
       AutoDelete->True,
       Editable->True,
       SelectWithContents->False,
       Selectable->True],
      TraditionalForm], {576., -116.80842387373012`}, {
     Center, Center}, {360., 222.49223594996212`}]}, {}},
  ContentSelectable->True,
  ImagePadding->{{174.714236, 175.714236}, {1., 0.}},
  ImageSize->{780., 245.61684774746024`},
  PlotRange->{{186., 582.}, {-238.61684774746024`, 5.}},
  PlotRangePadding->Automatic]], "Output",
 CellChangeTimes->{3.684634471408965*^9, 3.6846356918113127`*^9, 
  3.684668018966415*^9, 3.684688648201022*^9}]
}, Open  ]],

Cell["\<\
Note :  the optimal \[Mu] for uniform distribution is any value between 1 - \
\[Sigma] \[Sqrt]3 and \[Sigma] \[Sqrt]3\
\>", "Text",
 CellChangeTimes->{{3.684542993377308*^9, 3.684543075369314*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pivotDrawing", "[", "\[Sigma]_", "]"}], ":=", 
  RowBox[{"Graphics", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"Brown", ",", "\[IndentingNewLine]", 
      RowBox[{"Rectangle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{
           RowBox[{"-", "1"}], "/", "10"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", "Blue", ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
      "Red", ",", 
      RowBox[{"Polygon", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{".75", ",", 
           RowBox[{"-", "4"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.25", ",", 
           RowBox[{"-", "4"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.25", ",", 
           RowBox[{"-", "3"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.75", ",", 
           RowBox[{"-", "3"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "/", "4"}], ",", 
           RowBox[{"-", "3"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{".75", ",", 
           RowBox[{"-", "3"}]}], "}"}]}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", "Black", ",", 
      RowBox[{"PointSize", "[", "Tiny", "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{
         RowBox[{"MultinormalDistribution", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"-", "5"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\[Sigma]", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "\[Sigma]"}], "}"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"10", "^", "3"}]}], "]"}], "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "8"}], ",", "2"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"AxesOrigin", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.676708174556182*^9, 3.676708189614781*^9}, {
  3.6767082290168657`*^9, 3.676708238918744*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"Brown", ",", "\[IndentingNewLine]", 
        RowBox[{"Rectangle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{
             RowBox[{"-", "1"}], "/", "10"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", "Blue", ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
        "Red", ",", 
        RowBox[{"Polygon", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{".75", ",", 
             RowBox[{"-", "4"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.25", ",", 
             RowBox[{"-", "4"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.25", ",", 
             RowBox[{"-", "3"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.75", ",", 
             RowBox[{"-", "3"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"-", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "/", "4"}], ",", 
             RowBox[{"-", "3"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{".75", ",", 
             RowBox[{"-", "3"}]}], "}"}]}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", "Black", ",", 
        RowBox[{"PointSize", "[", "Tiny", "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{
           RowBox[{"MultinormalDistribution", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"-", "5"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\[Sigma]", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "\[Sigma]"}], "}"}]}], "}"}]}], "]"}], ",", 
           
           RowBox[{"10", "^", "3"}]}], "]"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "8"}], ",", "2"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Sigma]", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "/", "10"}], ",", 
        RowBox[{"1", "/", "2"}], ",", "1", ",", "2"}], "}"}]}], "}"}]}], 
   "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.676470766623321*^9, 3.676471003872978*^9}, {
   3.676471085936934*^9, 3.67647111513273*^9}, 3.676471326988613*^9, 
   3.67647197537925*^9, {3.676708033904203*^9, 3.6767080386069403`*^9}, 
   3.67670816978053*^9},
 CellID->70294289],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{
     {RGBColor[0.6, 0.4, 0.2], 
      RectangleBox[NCache[{0, Rational[-1, 10]}, {0, -0.1}], 
       NCache[{1, Rational[1, 10]}, {1, 0.1}]]}, 
     {RGBColor[0, 0, 1], PointBox[{0, 0}]}, 
     {RGBColor[1, 0, 0], 
      PolygonBox[
       NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
         Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
         1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]]}, 
     {GrayLevel[0], PointSize[Tiny], PointBox[CompressedData["
1:eJwVmnc8lf8bxkWUUjjPc06SrJYkpSgUtyKlQQkVaShFScoIJTSsItEwSiQy
kuiLhnQnIcnKStl7nmUr/T6/v7zO6/Uc53k+93Vf1/tyKNicN7UVFBAQ6BES
EPj/T2OZzH+Hg7rhgYbNmy2VND4zyN13P4oPoqxtLBtNBg4Ih8x8UTEACU+f
uP4Mo9B135auRzmjUHo02qVDiIWLd+hYzA8dg0D+X22XzRQGtcaG6dj3wE/7
K3m6jjRmp7paHrbhg8a8NMteHRoxfHHI2q4RmLxVVKYnwsSmB7982172g+iw
QspvYQZu95dNZFADMPYilTPrMwOzfVxnB7T1wIJ8y4KAu5JoYxr4Qt5uAvp8
75RdWUPj1JqiqWe/J6HgtfxvhXM0umXaBU3u6odRhT2PDvFobAko9S6rGobq
OR/h2Uwad1EzlKX29MLcetXP138w8Nh5FS3Nfz1AXTqteyqBRqc/m9dGnBqE
0rIs/5ZmGrukZLmbSjnAj3kf5TFE45Cn7KOyvVVglbpa32gXherN71vFyfMp
NH0cnjzOROpx/KPV73nwcPGijV6Xafzv+d7AsNJO+BprrvTDl4kP3ohsMo/i
wIkkjziZNRQOtLy6kenMhZXwtWGDPRMLA7+HGr/lgpSOgHu5IY166homwQf5
UO2wbtHQLCYK1OTVv77KgTdjl1PVsmjc1xG74+hzDmi9+yKX2UTh+N4Lgt9/
cOH5tqhryXJMLPm+dlYYvwMsVoS+yaXIfKqHM+b+4kK34a6VBs9ofJGz3LXu
QR+8LBnd+/E3je5mEqF/kQuHjK72SORQ+HpMeV2MNQdEWFvBXJCJnpZ9c02U
h2AXY06SWiIT5ff9Somih2AwZ86rYhkGXot8/0FqwyhsuyCTtNaRwvXclx41
13hQGzE35W85CxnitOjAjwH4/KJC6PJbCewwvCMaJDAE1hcmX16IphDFb2pc
7uCC5+9/KyzeMdBuldidwdNsCOpYr39XnMbXHVb5ttI8SHKc6uL7kfmYLu7P
+8OG8VWO1wUlmZhcstpb5PUAXN26+qjsNIXaVL2reDAbvEu2i6K1JC7e/iSx
a9YQ+DXe/BZHnu+0qa/ui+Yh4HtdzywoY6CQa4dpmTAPDv36Hn75M4W6gcuv
VSm2QtpWx5QbzgxcXqy1Q6qHB4OFr8Kip2iMSzL+I1PYAzq3RVqqnJn45ceA
jkTbAKRcfr4m3p6BN/4tFLusxwGNh2MOM5QozJSaqfT+Gh/C7pgvPBZH436R
Tf312Ry44cFQuHGWhcb83gO9e7tho05MSsRuJsY23rBz+VcH6RqeqzsGyX7K
XTez7+VC+1HX5+0VTPRdoHpvy/N+WHrQ8X2FKxN3pKRusOloAd+7cYrHwynM
2HBz9/2JVuBOCZn12tCock/U4eb7n3BCn1UxFcFCPY+uHke9Bliz3fKaHrl+
3ufRq/uGOFCSPyDxpofCxXsKAioedMN/y67OrDGjsO+ARNnV4lEI92lv+7SO
wl0fhaI/ZXDh7bLnq71HKbwQ3M/YWsOFogPl8zK6KOSuvhIj5zYGb/cr1uAk
A4OSoi2Lz7fC7dpr90zI+RZlmLq7zOuCnU0i6568ZOIP87OsY+S8rO+eqE76
sQCle0SeJ8zog7sp1frzJRmocHL9vMBUHuwUzrWzGZBER8P+KFmxUUi0ENt6
VJvGsrp/n1l2bLBI9xgdL2NigFHkerXUHgjwczb5TDOx/oClgnrvJCgzh8Ks
hhko2BssTP33B+Qof7bcAxYqLepPOBk0CrtOi9RlkfPye/pMSdCxCUwOaKTW
z6Mw/5nAr8c3x4HeM6WyupvGHRmKt0ICuMCcsSt5zRMGHupa52TBGgY9/0/c
+cEURtmU5Z5XHITnppcKNW/TqKxW1Rc6NgwymS9nmU9Q2FXgvLD7QSesiQiP
T8tkYJKKXtmpznFYO2TWY5NG/OH11lTXyEHo667TLJxPo4CMkVnGIS68FO05
Vp5NoX/H15IDp4YgKMnPpHIfEzMV9v+99aoVYnx2pETWEz+8zVvrc28crgzt
yGd30ngsPaBlt1wjqEgWXP5UwsDb+2/I7vvVDT/e3usYz6UwNm3h0z/FPSDo
NrP6nBMLTW1njKdXjEJtx6YiZV0K0y//clP5yIYFxc8CLv2SxHebnjlOvRuG
Jp63ycF4CiO/KNzaUsaBxLqAVUfcmfhw08l6g6IesD/korlimPiTye+k3N0t
4PM2+/iepQz8vsHgoPMlDjT55f1TcWZhLe+wdnbEJER/u7M315qFLkpzFb8u
nYSXQh0390RI4ssEryWpb4Zh4erC6Is9NNbP6rzo/F8JKE+u2d2ZI4lSRZ+N
+YEj0HI5Zd6/SzTa+W8VDSH763rxuPEhVQoTlepnsAx5oJjcmpxuQKHzWjrH
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
+Mj5pp7igkre2Y3n1SiMfGoTfpT0T59P8slGkf//f6CpoMVF3aBU3b7mcDSN
3/aHjWayuiCcO2+WljeNKnt83qcuaAWF3I2WEmmEpwf3dx/aNwzD/0SfbzrM
xM2XniWdeT4G/qmrOOXk/ReuHM0pY43C7tDHEys2snC7xbafio5s6G9g/Fqh
QaOnde73hjvjIMtSyonfRWFFheNrfaKXvm+DX28Sfq5fe3jZj3ldsPTNGl/Z
3YQnlaYN38zkwz2/VmYGme/igh3XvM63gURAp9wPwjdRMg6TzfOHYVRa/II9
6ZN37ykkxP4aAr5vS0EY0Wti8uOV3YpsWJ7tMl1yk4UOo7IS4aMT0PJJp8PA
h4FJSfO+3qquBc3LlWezHWlUUqk0FpBvhYJ79kvsjtCou+72/kyfLhC42uL8
XIeJluPZn6Rfd4Ot0GZVX8InJuoRV5cu7IO74wmq4e8YaPFBwrDSiA8xXcN3
iki/M2oxMx9XGoIqox3nvTyZaGdT/bvbfAzWaByqzX1A8jB3Oqd1dh+kLbrd
9rybxoo1ByX5hd2QWti95Mk34o9nx/ae3jcA56RbO97EU7h8ba7m59IuSBGc
sXmUz8J3+o/Vs0S64ZTyolUhhNeL/Pbz2iSHQNSj7LO3JtHr30RaN4H0dakY
1qYu4j8tyaJf//XBiUWVahtIfmoLLRIa/K8dDMIUB+eQPqIaOW+Hav8wzF4U
JO6/mcbY+vYDO0o6QDsoSPsp8aeL3zmeYiUcCNfvVjhSRvzdiT+a8fUBFM4M
WbLxKLlfxdrQ6s9sUNjqP7gwk4Hzvluuf5PTCwmBwRGfV1KosqtlgV7uJFQ+
llUt72diSYKM8Ir1XHD97F0tRPI0NmY0vn8VH7bVm3r6mjDxQI1FwiN7Lizc
vLMxk/S/7No+TCH9nKFrQNXNYeGJ3pZrV59xwEUtTvPRXgrtnP9kaUjwwedj
wYm/GwnfOQvrzJPrgWatI6/ftpB5z1jaKi3eB98urbiW5ETh5JaWJoGoTmhc
ef1II+F5lxOZG9YyOqChqefTjK8Uzgg2il801gOfvBocx32ZOHvnXpWup6MQ
DXEWpz5J4iJug+07kofTP4292YSvgjLY0rP7ZugdGarRzDKisJBh9OIguxPk
PGONd+9lYuvH/WN1SzmQXXS1okGMQs3gjdMbnvNh99VnawLVmehSub00+s8A
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
y0ft
       "]]}},
    AxesOrigin->{0, 0},
    PlotRange->{{-1, 3}, {-8, 2}}], ",", 
   GraphicsBox[{
     {RGBColor[0.6, 0.4, 0.2], 
      RectangleBox[NCache[{0, Rational[-1, 10]}, {0, -0.1}], 
       NCache[{1, Rational[1, 10]}, {1, 0.1}]]}, 
     {RGBColor[0, 0, 1], PointBox[{0, 0}]}, 
     {RGBColor[1, 0, 0], 
      PolygonBox[
       NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
         Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
         1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]]}, 
     {GrayLevel[0], PointSize[Tiny], PointBox[CompressedData["
1:eJwVl2cglf8bxs2y4uxjhSRJQipUuE9CQmmKUCgj+SGplKaGkiKJosjIqBSS
iDo3iYjIysrI3vPY4//8X50XzvGM+3tf1+ezysHjgCMPFxdXDy8X1/8/Vxbc
Mj/XOADhkdMdRjIMPGxz7/iQfw98woIrpZZUvJqyn874NgAJJ17vd/Wi4JXn
6Zac8EEo2sA12dhFxYZH7tzU8TlIYtw+ebyJhps/eCw4begDu0uG1vzXqXha
sbcp8cQciFHllpmXkJGLVLmvS4ADEpJ6ArpnqCjx9d2tS0d5WMXKAj605zTc
lv7h5+3FAego3zGx55QwRqtec4rxGIHbyzTal4bJ6DFjG3bwey8oy1kdNtxL
RaqR2TzHcwgk9p5YJqwljlxmhXlPIr+xc2NDOr22knDCXvpUiH8LpPwd5I+R
I6HlBTHNL2pTAGMjG4Rj6WhiJWH8SJ+LlXslP9/DjY4y05XWje5crIGREfPV
TSRsOn/X8f7TamjQEc1+aERGva+766yt6qBhS6truhQFL9WqZ6iULkKKxOl3
FHsSlhx+2XZvzxAsaSU+lW8h4bHNlM76X6PQ7C/jOeVDwxL12isN49VgUmfQ
vHqchvvm1j7yu9QECVYSg4+LaWh24pykkEUnW2CsaGOoJx3Vjz8/8qCKmxW4
R/2Q7RM63o3zH9C4sAhM+5DsuHNUZL8IfTRdOgoWZ4+OCyhL4Gdqw2/n1+OQ
clOr/JYyMY9iY4fcTTPw3v/f8elTZJxPc1nU1qpkX3PKiL9cRMeOrW2bh9jD
YHaKOhGnLIoflnxjDeuGoMrkTLiGDAWL29PLXY0nQbBHZF/aYRG8PBlRsjul
hq3le91Q9SAZf7RXtbC0CtlVU5paf1fTUbsnmfPNLB/e7RTlurCDgXnHveJU
bEbAqyS2QvQKDYNzJo2PKhax6xzTNxY9kUC6jOhPd+8peD1kvzSpRUPaw1DR
9vU/IfHry/0Z4SQM0hLx/Xp5DJRUXc2VpemYMC0SfsenG7JOLmDicQlMFwkU
qz8xA3nh1LrKPXQ0e8YJXSO/CCRrLY1CLSbKudjlvm6dg+Pb1FdY5jEwdOjS
We+CaXgrNPtqeRIdOdMsfc+wcXjvu/364HJx1JtVOhvaxstK++D1fcGegdNO
mSVr/XhZVTvPr9y4QxTLLKaTb0otY1Vtd6mvWE/BpFcLZaynE/D64LnR3+4M
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
r4KtJY7Pgoj++B/MLOhy
       "]]}},
    AxesOrigin->{0, 0},
    PlotRange->{{-1, 3}, {-8, 2}}], ",", 
   GraphicsBox[{
     {RGBColor[0.6, 0.4, 0.2], 
      RectangleBox[NCache[{0, Rational[-1, 10]}, {0, -0.1}], 
       NCache[{1, Rational[1, 10]}, {1, 0.1}]]}, 
     {RGBColor[0, 0, 1], PointBox[{0, 0}]}, 
     {RGBColor[1, 0, 0], 
      PolygonBox[
       NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
         Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
         1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]]}, 
     {GrayLevel[0], PointSize[Tiny], PointBox[CompressedData["
1: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
       "]]}},
    AxesOrigin->{0, 0},
    PlotRange->{{-1, 3}, {-8, 2}}], ",", 
   GraphicsBox[{
     {RGBColor[0.6, 0.4, 0.2], 
      RectangleBox[NCache[{0, Rational[-1, 10]}, {0, -0.1}], 
       NCache[{1, Rational[1, 10]}, {1, 0.1}]]}, 
     {RGBColor[0, 0, 1], PointBox[{0, 0}]}, 
     {RGBColor[1, 0, 0], 
      PolygonBox[
       NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
         Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
         1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]]}, 
     {GrayLevel[0], PointSize[Tiny], PointBox[CompressedData["
1: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
AT4e7Owb819BrxggRq47q+IxjW778mqFBRDh34L42yAKK9z3O9jqt0ABavZW
QfHLS0hVpK10fpofjn864XXCbwnJbFcM0hcnAbb5wtADwioSkJvkTk2QBv1t
Oi+v+rFjwsuvcvY5ssPkjyWLi+IrqFtw+G2wrBisrh2ImqV1IPe13Cvnslbw
6oWjN0JvVKOpkhe7PUACnh4XHiNU8WAtGpa/WlQJ4CBjpphqy4NRsCs13zYo
UJBy99BVL1YsxZK/tmEfHbKtWeotxFmw4HBPniMVTD3O3P734GFWbDDV79RU
EBVWOUMYqfgGLp5RdyryoDio6vY+984BnL1YIGtTCR8Q7FokngWtoWRaCDny
rRQEqCbfXT9Tj3/aNUNYPEuFJZ/5PWcxNkxxRPRRijIdyBa27F3xnNiOd6F+
888FIDnpzMszrBlIZrk7+HIPO/hv4Y5w7hhBv6VlV6yfi8CjWuPv1VQ2LKHb
+cS0uwRkRdlT/y5MoD+JT0z3UshwwZJXzJptFhdZrrvyR4P5f5f+M/v8VvC+
beO0/mUK5Gq9ydMsIWBhe8t93sdJA/vXA2MX+IjYsk5ZR+p7FtC+W8G//JEV
4OZcF9sBGpDjZAPfVLNjat/ll3yvCMKhO2enSS8I2D6raVnGFAWmNl/siS5a
R8uPyIns9cLQ4jTb7V/bjH8mdCBCFhFYx+mSb0YIGM3naAPgRIgfsF8t7F7F
R+6kFBDkqDB/daFV+8sKHqz+ZmQ5mwhOfx78bJddxclVYQ9Nj9Bgw923iGA9
gWwqmj5mB4uAvPMlpdNSo7hvRAlxKEwEVPVuEYhHxxGvQO2N+NeC0KT4LIL2
m4jttLAq3l1OgZTSi3Re10UkedtX6UgrL+zep7BlKewv8pZ/pfZUlenP246q
fZJ6g27ciDllF8Lcf9GvskF0IlZ1tLawLoHpv8ut4u8//8QrFIhaa4s0SGdX
ONu1XQi7kMjJZjvBA6deXe3RoK6iUMuI257bheG6xuPbWuJTaO+RuzVySSIQ
Ecb17KZmPX61pMFD6Rk3yOVPKFYFbSBds9z5g+ZkCE4MT2ya+4FG2f4TPKwt
BnZPRs2UnTvRE4v7gTPRQvBjkqDNd3wVOWXsjk3UpILzeMAgt8QEylqXt3TV
YOpx/cvdMYcWkcLxPl2ucTIUWug6UVbncX7VXdtTJklQFe1M/bd7Cd0ZV/Y3
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
       "]]}},
    AxesOrigin->{0, 0},
    PlotRange->{{-1, 3}, {-8, 2}}]}], "}"}]], "Output",
 CellChangeTimes->{{3.676470783775257*^9, 3.6764707939130287`*^9}, {
   3.676470829920199*^9, 3.6764708640944843`*^9}, {3.676470903722499*^9, 
   3.67647093557904*^9}, {3.6764709802999067`*^9, 3.676471004411406*^9}, {
   3.676471098371408*^9, 3.676471115749959*^9}, 3.676471327689361*^9, 
   3.676471975896736*^9, 3.6767080397143373`*^9, 3.684634471477928*^9, 
   3.684635691859378*^9, 3.684668019205863*^9, 3.68468864825976*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Problem 2:  a free object (no pivot point).  Where should swarm fit to \
generate the most torque?\
\>", "Subsection",
 CellChangeTimes->{{3.6764621771486588`*^9, 3.6764622264149523`*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"TorqueFreeNorm", "[", 
    RowBox[{"\[Mu]_", ",", "\[Sigma]_"}], "]"}], " ", ":=", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           FractionBox[
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], 
            RowBox[{"2", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]]}]]}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", "\[Mu]"}], ")"}], "2"], 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]]}]]}], ")"}], " ", "\[Sigma]"}], 
     SqrtBox[
      RowBox[{"2", " ", "\[Pi]"}]]], "+", 
    RowBox[{
     FractionBox["1", "2"], " ", "\[Mu]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"1", "-", "\[Mu]"}], 
         RowBox[{
          SqrtBox["2"], " ", "\[Sigma]"}]], "]"}], "+", 
       RowBox[{"Erf", "[", 
        FractionBox[
         RowBox[{"1", "+", "\[Mu]"}], 
         RowBox[{
          SqrtBox["2"], " ", "\[Sigma]"}]], "]"}]}], ")"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.684673826522071*^9, 3.684673850270439*^9}, {
  3.686492618700103*^9, 3.686492619121489*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{"-", "1"}], "1"], 
    RowBox[{"x", " ", 
     RowBox[{"pdfTriangle", "[", 
      RowBox[{"x", ",", "\[Mu]", ",", "\[Sigma]"}], "]"}], " ", 
     RowBox[{"\[DifferentialD]", "x"}]}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "assume", " ", "the", " ", "object", " ", "COM", " ", "is", " ", "at", 
     " ", "0"}], ",", " ", 
    RowBox[{
     RowBox[{"and", " ", "the", " ", "object", " ", "extends", " ", "from"}], 
     " ", "-", 
     RowBox[{"1", " ", "to", " ", "1"}]}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.676465933957417*^9, 3.676465936137473*^9}, {
  3.676466161477537*^9, 3.6764661745402927`*^9}, {3.676468233532557*^9, 
  3.676468252757174*^9}, {3.684533543640164*^9, 3.684533573457127*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {"\[Mu]", 
        RowBox[{
         RowBox[{
          RowBox[{
           SqrtBox["6"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", "\[Mu]"}], ")"}]}], "\[GreaterEqual]", 
          RowBox[{"6", " ", "\[Sigma]"}]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}], "&&", 
         RowBox[{"\[Sigma]", ">", "0"}]}]},
       {
        RowBox[{"-", 
         FractionBox["1", 
          RowBox[{"9", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Mu]", "\[Equal]", 
            RowBox[{"-", "1"}]}], "&&", 
           RowBox[{
            RowBox[{"3", " ", "\[Sigma]"}], "\[GreaterEqual]", 
            SqrtBox["6"]}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Mu]", "<", 
            RowBox[{"-", "1"}]}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "+", 
             RowBox[{"6", " ", "\[Sigma]"}]}], ">", 
            SqrtBox["6"]}]}], ")"}]}]},
       {
        FractionBox["1", 
         RowBox[{"9", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Mu]", ">", "1"}], "&&", 
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", "\[Mu]"}], ")"}]}], "\[LessEqual]", 
            RowBox[{"6", " ", "\[Sigma]"}]}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
           RowBox[{
            RowBox[{"3", " ", "\[Sigma]"}], "\[GreaterEqual]", 
            SqrtBox["6"]}]}], ")"}]}]},
       {
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", 
             SuperscriptBox["\[Mu]", "2"]}], ")"}]}], 
          RowBox[{"18", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], "<", "\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           SqrtBox["6"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", "\[Mu]"}], ")"}]}], "<", 
          RowBox[{"6", " ", "\[Sigma]"}]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
          SqrtBox["6"]}]}]},
       {
        RowBox[{
         FractionBox["1", "2"], "-", 
         FractionBox["\[Sigma]", 
          SqrtBox["6"]]}], 
        RowBox[{
         RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
         RowBox[{"0", "<", "\[Sigma]", "<", 
          SqrtBox[
           FractionBox["2", "3"]]}]}]},
       {
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], "+", 
         FractionBox["\[Sigma]", 
          SqrtBox["6"]]}], 
        RowBox[{
         RowBox[{"\[Mu]", "\[Equal]", 
          RowBox[{"-", "1"}]}], "&&", 
         RowBox[{"0", "<", "\[Sigma]", "<", 
          SqrtBox[
           FractionBox["2", "3"]]}]}]},
       {
        RowBox[{"-", 
         FractionBox[
          RowBox[{"2", "+", 
           SuperscriptBox["\[Mu]", "3"], "+", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", 
            SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", "\[Sigma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "-", 
           RowBox[{"3", " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"6", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
          RowBox[{"36", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]]}], 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
          SqrtBox["6"]}], "&&", 
         RowBox[{"\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           SqrtBox["6"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", "\[Mu]"}], ")"}]}], "\[GreaterEqual]", 
          RowBox[{"6", " ", "\[Sigma]"}]}]}]},
       {
        FractionBox[
         RowBox[{"2", "+", 
          SuperscriptBox["\[Mu]", "3"], "-", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "+", 
          RowBox[{"3", " ", "\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"6", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", ">", "1"}], "&&", 
         RowBox[{
          RowBox[{"-", 
           SqrtBox["6"]}], "<", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}]}]},
       {
        FractionBox[
         RowBox[{"2", "-", 
          SuperscriptBox["\[Mu]", "3"], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "+", 
          RowBox[{"3", " ", "\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"6", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", ">", 
          RowBox[{"-", "1"}]}], "&&", 
         RowBox[{
          RowBox[{
           SqrtBox["6"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", "\[Mu]"}], ")"}]}], "<", 
          RowBox[{"6", " ", "\[Sigma]"}]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          SuperscriptBox["\[Mu]", "3"], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "+", 
          RowBox[{"3", " ", "\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"6", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", "<", 
          RowBox[{"-", "1"}]}], "&&", 
         RowBox[{
          RowBox[{"-", 
           SqrtBox["6"]}], "<", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", 
          SqrtBox["6"]}]}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.684634498240581*^9, 3.684635722168562*^9, 
  3.684668046372229*^9, 3.684688675589512*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"TorqueFreeTri", "[", 
   RowBox[{"\[Mu]_", ",", "\[Sigma]_"}], "]"}], ":=", 
  TagBox[GridBox[{
     {"\[Piecewise]", GridBox[{
        {"\[Mu]", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "\[Mu]"}], ")"}]}], "\[GreaterEqual]", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "&&", 
          RowBox[{
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "+", 
            RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
           SqrtBox["6"]}], "&&", 
          RowBox[{"\[Sigma]", ">", "0"}]}]},
        {
         RowBox[{"-", 
          FractionBox["1", 
           RowBox[{"9", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]]}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Mu]", "\[Equal]", 
             RowBox[{"-", "1"}]}], "&&", 
            RowBox[{
             RowBox[{"3", " ", "\[Sigma]"}], "\[GreaterEqual]", 
             SqrtBox["6"]}]}], ")"}], "||", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Mu]", "<", 
             RowBox[{"-", "1"}]}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "+", 
              RowBox[{"6", " ", "\[Sigma]"}]}], ">", 
             SqrtBox["6"]}]}], ")"}]}]},
        {
         FractionBox["1", 
          RowBox[{"9", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Mu]", ">", "1"}], "&&", 
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", "\[Mu]"}], ")"}]}], "\[LessEqual]", 
             RowBox[{"6", " ", "\[Sigma]"}]}]}], ")"}], "||", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
            RowBox[{
             RowBox[{"3", " ", "\[Sigma]"}], "\[GreaterEqual]", 
             SqrtBox["6"]}]}], ")"}]}]},
        {
         RowBox[{"-", 
          FractionBox[
           RowBox[{"\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", 
              SuperscriptBox["\[Mu]", "2"]}], ")"}]}], 
           RowBox[{"18", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]]}], 
         RowBox[{
          RowBox[{
           RowBox[{"-", "1"}], "<", "\[Mu]", "<", "1"}], "&&", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "\[Mu]"}], ")"}]}], "<", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "&&", 
          RowBox[{
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "+", 
            RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
           SqrtBox["6"]}]}]},
        {
         RowBox[{
          FractionBox["1", "2"], "-", 
          FractionBox["\[Sigma]", 
           SqrtBox["6"]]}], 
         RowBox[{
          RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
          RowBox[{"0", "<", "\[Sigma]", "<", 
           SqrtBox[
            FractionBox["2", "3"]]}]}]},
        {
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], "+", 
          FractionBox["\[Sigma]", 
           SqrtBox["6"]]}], 
         RowBox[{
          RowBox[{"\[Mu]", "\[Equal]", 
           RowBox[{"-", "1"}]}], "&&", 
          RowBox[{"0", "<", "\[Sigma]", "<", 
           SqrtBox[
            FractionBox["2", "3"]]}]}]},
        {
         RowBox[{"-", 
          FractionBox[
           RowBox[{"2", "+", 
            SuperscriptBox["\[Mu]", "3"], "+", 
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", 
             SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", "\[Sigma]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "-", 
            RowBox[{"3", " ", "\[Mu]", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"6", " ", 
                SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
           RowBox[{"36", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]]}], 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "+", 
            RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
           SqrtBox["6"]}], "&&", 
          RowBox[{"\[Mu]", "<", "1"}], "&&", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "\[Mu]"}], ")"}]}], "\[GreaterEqual]", 
           RowBox[{"6", " ", "\[Sigma]"}]}]}]},
        {
         FractionBox[
          RowBox[{"2", "+", 
           SuperscriptBox["\[Mu]", "3"], "-", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", 
            SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", "\[Sigma]", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "+", 
           RowBox[{"3", " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
          RowBox[{"36", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]], 
         RowBox[{
          RowBox[{"\[Mu]", ">", "1"}], "&&", 
          RowBox[{
           RowBox[{"-", 
            SqrtBox["6"]}], "<", 
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "-", 
            RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
           SqrtBox["6"]}]}]},
        {
         FractionBox[
          RowBox[{"2", "-", 
           SuperscriptBox["\[Mu]", "3"], "+", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", 
            SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", "\[Sigma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "+", 
           RowBox[{"3", " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"6", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
          RowBox[{"36", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]], 
         RowBox[{
          RowBox[{"\[Mu]", ">", 
           RowBox[{"-", "1"}]}], "&&", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "\[Mu]"}], ")"}]}], "<", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "&&", 
          RowBox[{
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "+", 
            RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
           SqrtBox["6"]}]}]},
        {
         FractionBox[
          RowBox[{
           RowBox[{"-", "2"}], "+", 
           SuperscriptBox["\[Mu]", "3"], "+", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", 
            SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", "\[Sigma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "+", 
           RowBox[{"3", " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
          RowBox[{"36", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]], 
         RowBox[{
          RowBox[{"\[Mu]", "<", 
           RowBox[{"-", "1"}]}], "&&", 
          RowBox[{
           RowBox[{"-", 
            SqrtBox["6"]}], "<", 
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "+", 
            RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", 
           SqrtBox["6"]}]}]},
        {"0", 
         TagBox["True",
          "PiecewiseDefault",
          AutoDelete->True]}
       },
       AllowedDimensions->{2, Automatic},
       Editable->True,
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.84]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}},
       Selectable->True]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxItemSize->{
     "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.35]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   "Piecewise",
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True,
   Selectable->False]}]], "Input",
 CellChangeTimes->{{3.684533818682495*^9, 3.684533823449733*^9}, {
  3.684540933564073*^9, 3.684540934072744*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"TorquePivotTriFree", "[", 
   RowBox[{"\[Mu]_", ",", "\[Sigma]_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"lowlim1", " ", "=", 
       RowBox[{"Max", "[", 
        RowBox[{
         RowBox[{"-", "1"}], ",", 
         RowBox[{"\[Mu]", "-", 
          RowBox[{
           SqrtBox["6"], " ", "\[Sigma]"}]}]}], "]"}]}], ",", 
      RowBox[{"uplim1", " ", "=", "  ", 
       RowBox[{"Min", "[", 
        RowBox[{"1", ",", "\[Mu]"}], "]"}]}], ",", 
      RowBox[{"lowlim2", " ", "=", 
       RowBox[{"Max", "[", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "\[Mu]"}], "]"}]}], ",", 
      RowBox[{"uplim2", " ", "=", "  ", 
       RowBox[{"Min", "[", 
        RowBox[{"1", ",", 
         RowBox[{"\[Mu]", "+", 
          RowBox[{
           SqrtBox["6"], " ", "\[Sigma]"}]}]}], "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"uplim1", ">", "lowlim1"}], ",", 
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          SuperscriptBox["lowlim1", "3"]}], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["lowlim1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Mu]", "-", 
            RowBox[{
             SqrtBox["6"], " ", "\[Sigma]"}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["uplim1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "uplim1"}], "-", 
            RowBox[{"3", " ", "\[Mu]"}], "+", 
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", "\[Sigma]"}]}], ")"}]}]}], 
        RowBox[{"36", " ", 
         SuperscriptBox["\[Sigma]", "2"]}]], ",", "0"}], "]"}], "+", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"uplim2", ">", "lowlim2"}], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox["lowlim2", "3"]}], "-", 
         RowBox[{"3", " ", 
          SuperscriptBox["lowlim2", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Mu]", "+", 
            RowBox[{
             SqrtBox["6"], " ", "\[Sigma]"}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["uplim2", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "uplim2"}], "+", 
            RowBox[{"3", " ", 
             RowBox[{"(", 
              RowBox[{"\[Mu]", "+", 
               RowBox[{
                SqrtBox["6"], " ", "\[Sigma]"}]}], ")"}]}]}], ")"}]}]}], 
        RowBox[{"36", " ", 
         SuperscriptBox["\[Sigma]", "2"]}]], ",", "0"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"lowlim1", " ", "=", 
        RowBox[{"Max", "[", 
         RowBox[{"0", ",", 
          RowBox[{"\[Mu]", "-", 
           RowBox[{
            SqrtBox["6"], " ", "\[Sigma]"}]}]}], "]"}]}], ";", 
       RowBox[{"uplim1", " ", "=", "  ", 
        RowBox[{"Min", "[", 
         RowBox[{"1", ",", "\[Mu]"}], "]"}]}], ";", 
       RowBox[{"lowlim2", " ", "=", 
        RowBox[{"Max", "[", 
         RowBox[{"0", ",", "\[Mu]"}], "]"}]}], ";", 
       RowBox[{"uplim2", " ", "=", "  ", 
        RowBox[{"Min", "[", 
         RowBox[{"1", ",", 
          RowBox[{"\[Mu]", "+", 
           RowBox[{
            SqrtBox["6"], " ", "\[Sigma]"}]}]}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"uplim1", ">", "lowlim1"}], ",", 
        RowBox[{
         SubsuperscriptBox["\[Integral]", "lowlim1", "uplim1"], 
         RowBox[{"x", " ", 
          FractionBox[
           RowBox[{"x", "-", "\[Mu]", "+", 
            RowBox[{
             SqrtBox["6"], " ", "\[Sigma]"}]}], 
           RowBox[{"6", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]], 
          RowBox[{"\[DifferentialD]", "x"}]}]}], ",", "0"}], "]"}], "+", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"uplim2", ">", "lowlim2"}], ",", 
        RowBox[{
         SubsuperscriptBox["\[Integral]", "lowlim2", "uplim2"], 
         RowBox[{"x", " ", 
          FractionBox[
           RowBox[{
            RowBox[{"-", "x"}], "+", "\[Mu]", "+", 
            RowBox[{
             SqrtBox["6"], " ", "\[Sigma]"}]}], 
           RowBox[{"6", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]], 
          RowBox[{"\[DifferentialD]", "x"}]}]}], ",", "0"}], "]"}]}]}], "]"}],
    "*)"}]}]}], "Input",
 CellChangeTimes->{{3.676467577391876*^9, 3.676467583150907*^9}, {
   3.676467620923286*^9, 3.676467642689784*^9}, 3.684533184729178*^9, {
   3.684533596596053*^9, 3.684533598039216*^9}, {3.6845379966929417`*^9, 
   3.684538068930195*^9}, {3.684538106530834*^9, 3.6845382708752737`*^9}, {
   3.6845383147084846`*^9, 3.684538356260854*^9}, 3.684538387403821*^9, {
   3.684538484572762*^9, 3.684538521073769*^9}, {3.6845388666282597`*^9, 
   3.6845388668906527`*^9}, {3.684540347995214*^9, 3.6845403592671824`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "lowlim", "uplim"], 
  RowBox[{"x", " ", 
   FractionBox["1", 
    RowBox[{"2", 
     SqrtBox["3"], " ", "\[Sigma]"}]], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.684539156942346*^9, 3.684539164426305*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    SuperscriptBox["lowlim", "2"], 
    RowBox[{"4", " ", 
     SqrtBox["3"], " ", "\[Sigma]"}]]}], "+", 
  FractionBox[
   SuperscriptBox["uplim", "2"], 
   RowBox[{"4", " ", 
    SqrtBox["3"], " ", "\[Sigma]"}]]}]], "Output",
 CellChangeTimes->{3.6845391647952223`*^9, 3.6845408854065228`*^9, 
  3.68454102996239*^9, 3.684634498514007*^9, 3.684635722399192*^9, 
  3.684668046506063*^9, 3.68468867572051*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TorquePivotFreeUni", "[", 
  RowBox[{
   RowBox[{"1", "/", "2"}], ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.684541082575522*^9, 3.684541100235766*^9}}],

Cell[BoxData[
 RowBox[{"TorquePivotFreeUni", "[", 
  RowBox[{
   FractionBox["1", "2"], ",", "2"}], "]"}]], "Output",
 CellChangeTimes->{{3.684541093148327*^9, 3.684541100708908*^9}, 
   3.684634498540916*^9, 3.684635722435773*^9, 3.684668046532552*^9, 
   3.684688675745014*^9, 3.68483274175124*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sigs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1.1", ",", "1.2", ",", "1.3", ",", "1.4"}], "}"}]}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"TODO", ":", " ", 
    RowBox[{
    "place", " ", "legend", " ", "inside", " ", "the", " ", "plot"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"TorquePivotFreeUni", "[", 
       RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "sigs"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", 
     RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "sigs"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Mu] (pushing location)\>\"", ",", "\"\<Torque\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Uniform distribution\>\""}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", "1"}], "}"}]}], "}"}], "]"}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.683656192718853*^9, 3.68365650959415*^9}, {
   3.684533201990088*^9, 3.684533227629901*^9}, 3.6845336018509903`*^9, {
   3.684538398449457*^9, 3.684538398934102*^9}, {3.684538872647613*^9, 
   3.6845388887736807`*^9}, 3.684539050089514*^9, {3.6845392360343122`*^9, 
   3.68453924661322*^9}, {3.684539278578122*^9, 3.684539281301207*^9}, {
   3.684539347834256*^9, 3.684539370928897*^9}, {3.684539413266988*^9, 
   3.6845394260116*^9}, {3.684541137633313*^9, 3.684541223576767*^9}}],

Cell[BoxData[
 TemplateBox[{
  GraphicsBox[{}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[Mu] (pushing location)\"", TraditionalForm], 
       FormBox["\"Torque\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Epilog -> {
       LineBox[
        NCache[{{
           Rational[1, 2], 0}, {
           Rational[1, 2], 1}}, {{0.5, 0}, {0.5, 1}}]]}, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotLabel -> FormBox["\"Uniform distribution\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"1", "1.1`", "1.2`", "1.3`", "1.4`"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.684541180427577*^9, 3.6845412241660624`*^9}, 
   3.6846344986272697`*^9, 3.684635722521311*^9, 3.684668046624586*^9, 
   3.684670335762723*^9, 3.68468867583906*^9, 3.684832745763913*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sigs", " ", "=", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.1", ",", "0.5", ",", "1", ",", "2", ",", 
       RowBox[{"5", "/", 
        RowBox[{"\[Sqrt]", "3"}]}], ",", "5", ",", "10"}], "}"}], "/", 
     "10"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"TODO", ":", " ", 
    RowBox[{
    "place", " ", "legend", " ", "inside", " ", "the", " ", "plot"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"TorquePivotFreeUni", "[", 
       RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "sigs"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{"sigs", ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", "Bold", ",", "8"}], "}"}]}], ",", 
        RowBox[{"LegendLabel", "\[Rule]", "\"\<\[Sigma]=\>\""}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0.55"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Mu]\>\"", ",", "\"\<Torque\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Uniform distribution\>\""}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", "1"}], "}"}]}], "}"}], "]"}], 
     "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<../abecker/SwarmPublications/JournalTorqueControl/pictures/pdf/\
TorqueUniFree.pdf\>\"", ",", "%"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.683656192718853*^9, 3.68365650959415*^9}, {
   3.684533201990088*^9, 3.684533227629901*^9}, 3.6845336018509903`*^9, {
   3.684538398449457*^9, 3.684538398934102*^9}, {3.684538872647613*^9, 
   3.6845388887736807`*^9}, 3.684539050089514*^9, {3.6845392360343122`*^9, 
   3.68453924661322*^9}, {3.684539278578122*^9, 3.684539281301207*^9}, {
   3.684539347834256*^9, 3.684539370928897*^9}, {3.684539413266988*^9, 
   3.6845394260116*^9}, {3.684541137633313*^9, 3.68454116084551*^9}, 
   3.6846743914643393`*^9, {3.684674425838735*^9, 3.684674489560034*^9}, {
   3.684674521984548*^9, 3.68467453713513*^9}, {3.685113771526085*^9, 
   3.685113773324877*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{InsetBox[
     GraphicsBox[{{}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"\[Mu]\"", TraditionalForm], 
        FormBox["\"Torque\"", TraditionalForm]},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Epilog->{
        LineBox[
         NCache[{{
            Rational[1, 2], 0}, {
            Rational[1, 2], 1}}, {{0.5, 0}, {0.5, 1}}]]},
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
      PlotLabel->None,
      PlotRange->{All, All},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], Scaled[{0.5, 0.5}], Center, 
     Scaled[{1, 1}]], InsetBox[
     TemplateBox[{
      "0.010000000000000002`","0.05`",FractionBox["1", "10"],FractionBox[
       "1", "5"],FractionBox["1", 
        RowBox[{"2", " ", 
          SqrtBox["3"]}]],FractionBox["1", "2"],"1"},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox["\"\[Sigma]=\"", {
                 GrayLevel[0], FontWeight -> Bold, FontSize -> 8, FontFamily -> 
                 "Arial"}, Background -> Automatic, StripOnInput -> False]}, {
              
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #6}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #7}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontWeight -> Bold, FontSize -> 8, FontFamily -> 
          "Arial"}, Background -> Automatic, StripOnInput -> False], 
        TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> A\
utomatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold", ",", "8"}], "}"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"\[Sigma]=\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{1, 0.55}], ImageScaled[{0, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->False,
   AxesLabel->{
     FormBox["\"\[Mu]\"", TraditionalForm], 
     FormBox["\"Torque\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->False,
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   ImagePadding->All,
   Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
   PlotLabel->FormBox["\"Uniform distribution\"", TraditionalForm],
   PlotRange->Automatic,
   PlotRangeClipping->False,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{}, {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {"\[Mu]", "Torque"}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, Epilog -> {
        Line[{{
           Rational[1, 2], 0}, {
           Rational[1, 2], 1}}]}, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
      PlotLabel -> "Uniform distribution", PlotRange -> {All, All}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]]}, {0.010000000000000002`, 0.05, 
        Rational[1, 10], 
        Rational[1, 5], Rational[1, 2] 3^Rational[-1, 2], 
        Rational[1, 2], 1}, LabelStyle -> {
         GrayLevel[0], Bold, 8}, LegendLabel -> "\[Sigma]=", LegendLayout -> 
       "Column"]], {1, 0.55}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.6845411384377728`*^9, 3.684541161355607*^9}, 
   3.684634498736293*^9, 3.684635722626712*^9, 3.6846680467359457`*^9, 
   3.6846703388968477`*^9, 3.684674397238345*^9, {3.684674428141814*^9, 
   3.6846744939879932`*^9}, 3.684674541001401*^9, 3.684688675957349*^9, 
   3.6848327763136806`*^9, 3.684832806455092*^9, 3.6851137745546303`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"TorquePivotFreeUni", "[", 
   RowBox[{"\[Mu]_", ",", "\[Sigma]_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"lowlim", " ", "=", 
       RowBox[{"Max", "[", 
        RowBox[{
         RowBox[{"-", "1"}], ",", 
         RowBox[{"\[Mu]", "-", 
          RowBox[{
           SqrtBox["3"], " ", "\[Sigma]"}]}]}], "]"}]}], ",", 
      RowBox[{"uplim", " ", "=", "  ", 
       RowBox[{"Min", "[", 
        RowBox[{"1", ",", 
         RowBox[{"\[Mu]", "+", 
          RowBox[{
           SqrtBox["3"], " ", "\[Sigma]"}]}]}], "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"uplim", ">", "lowlim"}], ",", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         SuperscriptBox["lowlim", "2"], 
         RowBox[{"4", " ", 
          SqrtBox["3"], " ", "\[Sigma]"}]]}], "+", 
       FractionBox[
        SuperscriptBox["uplim", "2"], 
        RowBox[{"4", " ", 
         SqrtBox["3"], " ", "\[Sigma]"}]]}], ",", "0"}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.684538961696658*^9, 3.684539033841741*^9}, {
   3.68453908776854*^9, 3.6845390935628242`*^9}, 3.684539169612364*^9, {
   3.684540437551422*^9, 3.68454045745277*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"bestPushFreeNorm", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ans", "=", 
        RowBox[{"FindMaximum", "[", 
         RowBox[{
          RowBox[{
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"-", 
                  FractionBox[
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], 
                   RowBox[{"2", " ", 
                    SuperscriptBox["\[Sigma]", "2"]}]]}]]}], "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"-", 
                 FractionBox[
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Mu]"}], ")"}], "2"], 
                  RowBox[{"2", " ", 
                   SuperscriptBox["\[Sigma]", "2"]}]]}]]}], ")"}], " ", 
             "\[Sigma]"}], 
            SqrtBox[
             RowBox[{"2", " ", "\[Pi]"}]]], "+", 
           RowBox[{
            FractionBox["1", "2"], " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Erf", "[", 
               FractionBox[
                RowBox[{"1", "-", "\[Mu]"}], 
                RowBox[{
                 SqrtBox["2"], " ", "\[Sigma]"}]], "]"}], "+", 
              RowBox[{"Erf", "[", 
               FractionBox[
                RowBox[{"1", "+", "\[Mu]"}], 
                RowBox[{
                 SqrtBox["2"], " ", "\[Sigma]"}]], "]"}]}], ")"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Mu]", ",", "1"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", 
         RowBox[{"First", "@", "ans"}], ",", 
         RowBox[{"ans", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
        "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "0.01", ",", "2", ",", "0.01"}], "}"}]}], 
     "]"}]}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.684540302969158*^9, 3.684540310153585*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634498857087*^9, 3.684635722743629*^9, 
  3.684668046842411*^9, 3.684688676206601*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634498857087*^9, 3.684635722743629*^9, 
  3.684668046842411*^9, 3.684688676282116*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "sdprec"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Line search unable to find a sufficient increase in the \
function value with \[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digit \
precision. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/FindMaximum\\\", \
ButtonNote -> \\\"FindMaximum::sdprec\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634498857087*^9, 3.684635722743629*^9, 
  3.684668046842411*^9, 3.684688676375663*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634498857087*^9, 3.684635722743629*^9, 
  3.684668046842411*^9, 3.684688676519597*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(FindMaximum :: lstol\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634498857087*^9, 3.684635722743629*^9, 
  3.684668046842411*^9, 3.6846886765502787`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.40952399999999999913313786237267777324`5.632879271786659", ",", "Null"}],
   "}"}]], "Output",
 CellChangeTimes->{3.6845403113243923`*^9, 3.684634499216339*^9, 
  3.684635723100963*^9, 3.6846680472643347`*^9, 3.6846886765683537`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"bestPushFreeTri", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ans", "=", 
        RowBox[{"FindMaximum", "[", 
         RowBox[{
          RowBox[{"TorquePivotTriFree", "[", 
           RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Mu]", ",", 
            RowBox[{"Max", "[", 
             RowBox[{"1", ",", 
              RowBox[{
               RowBox[{
                SqrtBox["6"], "/", "2"}], "\[Sigma]"}]}], "]"}]}], "}"}]}], 
         "]"}]}], ";", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", 
         RowBox[{"First", "@", "ans"}], ",", 
         RowBox[{"ans", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
        "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "0.01", ",", "2", ",", "0.01"}], "}"}]}], 
     "]"}]}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.676466416448494*^9, 3.676466470673649*^9}, {
   3.6764665929400253`*^9, 3.6764667320443153`*^9}, {3.6764667913415413`*^9, 
   3.676466813481152*^9}, {3.6764670024882803`*^9, 3.676467011715851*^9}, {
   3.676468270631659*^9, 3.6764682776512947`*^9}, {3.684533837881112*^9, 
   3.6845338508256598`*^9}, {3.684540245279271*^9, 3.684540256086082*^9}, {
   3.684540289572055*^9, 3.68454029856402*^9}, 3.684540367414665*^9, {
   3.684541591262807*^9, 3.684541606783594*^9}, {3.684541640840365*^9, 
   3.684541686358395*^9}, {3.684541752098618*^9, 3.6845417951403437`*^9}, {
   3.684541849077037*^9, 3.684541877464965*^9}, 3.684542026268549*^9, {
   3.684542820490223*^9, 3.684542852974832*^9}, 3.6845435407925043`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499279896*^9, 3.684635723168494*^9, 
  3.684668047331626*^9, 3.684688676632853*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499279896*^9, 3.684635723168494*^9, 
  3.684668047331626*^9, 3.6846886766901817`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "sdprec"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Line search unable to find a sufficient increase in the \
function value with \[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digit \
precision. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/FindMaximum\\\", \
ButtonNote -> \\\"FindMaximum::sdprec\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499279896*^9, 3.684635723168494*^9, 
  3.684668047331626*^9, 3.684688676752748*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499279896*^9, 3.684635723168494*^9, 
  3.684668047331626*^9, 3.684688676812852*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(FindMaximum :: lstol\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499279896*^9, 3.684635723168494*^9, 
  3.684668047331626*^9, 3.684688676849736*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "fmgz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered a gradient that is effectively zero. The \
result returned may not be a maximum; it may be a minimum or a saddle point. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FindMaximum/fmgz\\\", \
ButtonNote -> \\\"FindMaximum::fmgz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499279896*^9, 3.684635723168494*^9, 
  3.684668047331626*^9, 3.684688676927682*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "fmgz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered a gradient that is effectively zero. The \
result returned may not be a maximum; it may be a minimum or a saddle point. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FindMaximum/fmgz\\\", \
ButtonNote -> \\\"FindMaximum::fmgz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499279896*^9, 3.684635723168494*^9, 
  3.684668047331626*^9, 3.684688676966372*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "fmgz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered a gradient that is effectively zero. The \
result returned may not be a maximum; it may be a minimum or a saddle point. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FindMaximum/fmgz\\\", \
ButtonNote -> \\\"FindMaximum::fmgz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499279896*^9, 3.684635723168494*^9, 
  3.684668047331626*^9, 3.684688676969781*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(FindMaximum :: fmgz\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499279896*^9, 3.684635723168494*^9, 
  3.684668047331626*^9, 3.684688677002331*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.50404300000000001880096078821225091815`5.7230675010468355", ",", 
   "Null"}], "}"}]], "Output",
 CellChangeTimes->{
  3.684540334625102*^9, 3.684540369361082*^9, {3.684541593635766*^9, 
   3.684541608197021*^9}, {3.684541642372292*^9, 3.684541657004161*^9}, 
   3.684541687640533*^9, 3.684541769109294*^9, 3.684541812340002*^9, {
   3.684541853702668*^9, 3.684541881268992*^9}, 3.684542027637506*^9, {
   3.684542834015074*^9, 3.684542854457673*^9}, 3.6845435463866653`*^9, 
   3.684634499714438*^9, 3.6846357236951437`*^9, 3.684668047759831*^9, 
   3.684688677084365*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"bestPushFreeTriBottom", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ans", "=", 
        RowBox[{"FindMaximum", "[", 
         RowBox[{
          RowBox[{"TorquePivotTriFree", "[", 
           RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Mu]", ",", "1"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", 
         RowBox[{"First", "@", "ans"}], ",", 
         RowBox[{"ans", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
        "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "0.01", ",", "2", ",", "0.01"}], "}"}]}], 
     "]"}]}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.684542894304944*^9, 3.684542899036315*^9}, 
   3.684543543966049*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499937738*^9, 3.684635723891653*^9, 
  3.684668048101269*^9, 3.684688677309507*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499937738*^9, 3.684635723891653*^9, 
  3.684668048101269*^9, 3.68468867736403*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "sdprec"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Line search unable to find a sufficient increase in the \
function value with \[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digit \
precision. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/FindMaximum\\\", \
ButtonNote -> \\\"FindMaximum::sdprec\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499937738*^9, 3.684635723891653*^9, 
  3.684668048101269*^9, 3.684688677423997*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499937738*^9, 3.684635723891653*^9, 
  3.684668048101269*^9, 3.684688677480736*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(FindMaximum :: lstol\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499937738*^9, 3.684635723891653*^9, 
  3.684668048101269*^9, 3.684688677516666*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "fmgz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered a gradient that is effectively zero. The \
result returned may not be a maximum; it may be a minimum or a saddle point. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FindMaximum/fmgz\\\", \
ButtonNote -> \\\"FindMaximum::fmgz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499937738*^9, 3.684635723891653*^9, 
  3.684668048101269*^9, 3.684688677592092*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "fmgz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered a gradient that is effectively zero. The \
result returned may not be a maximum; it may be a minimum or a saddle point. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FindMaximum/fmgz\\\", \
ButtonNote -> \\\"FindMaximum::fmgz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499937738*^9, 3.684635723891653*^9, 
  3.684668048101269*^9, 3.684688677633211*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "fmgz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered a gradient that is effectively zero. The \
result returned may not be a maximum; it may be a minimum or a saddle point. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FindMaximum/fmgz\\\", \
ButtonNote -> \\\"FindMaximum::fmgz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499937738*^9, 3.684635723891653*^9, 
  3.684668048101269*^9, 3.684688677636487*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(FindMaximum :: fmgz\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499937738*^9, 3.684635723891653*^9, 
  3.684668048101269*^9, 3.684688677666147*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.48775899999999999812061446391453500837`5.708805204906971", ",", "Null"}],
   "}"}]], "Output",
 CellChangeTimes->{3.6845428997410173`*^9, 3.684543548713526*^9, 
  3.684634500377095*^9, 3.684635724313336*^9, 3.684668048581306*^9, 
  3.684688677741507*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"bestPushFreeUni", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ans", "=", 
        RowBox[{"FindMaximum", "[", 
         RowBox[{
          RowBox[{"TorquePivotFreeUni", "[", 
           RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Mu]", ",", 
            RowBox[{"1", "+", 
             RowBox[{
              RowBox[{
               SqrtBox["3"], "/", "2"}], "\[Sigma]"}]}]}], "}"}]}], "]"}]}], 
       ";", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", 
         RowBox[{"First", "@", "ans"}], ",", 
         RowBox[{"ans", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
        "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "0.01", ",", "2", ",", "0.01"}], "}"}]}], 
     "]"}]}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.684540465185493*^9, 3.684540465468801*^9}, {
   3.684540516819571*^9, 3.684540517184272*^9}, 3.684540977979784*^9, 
   3.684541012876995*^9, {3.6845412684218693`*^9, 3.684541268771349*^9}, {
   3.684541310836534*^9, 3.684541326926167*^9}, {3.684541558220834*^9, 
   3.6845415595286617`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634500440503*^9, 3.684635724384885*^9, 
  3.6846680486559772`*^9, 3.68468867780759*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634500440503*^9, 3.684635724384885*^9, 
  3.6846680486559772`*^9, 3.684688677862729*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634500440503*^9, 3.684635724384885*^9, 
  3.6846680486559772`*^9, 3.6846886779203787`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(FindMaximum :: lstol\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634500440503*^9, 3.684635724384885*^9, 
  3.6846680486559772`*^9, 3.684688677953452*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "fmdig"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Working precision \[NoBreak]\\!\\(MachinePrecision\\)\
\[NoBreak] is insufficient to achieve the requested accuracy or precision. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FindMaximum/fmdig\\\", \
ButtonNote -> \\\"FindMaximum::fmdig\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634500440503*^9, 3.684635724384885*^9, 
  3.6846680486559772`*^9, 3.684688677972294*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.3237559999999999882369650094915414229`5.530817738995173", ",", "Null"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.684540466599551*^9, 3.68454051817599*^9, 3.684540979097865*^9, 
   3.684541014482897*^9, 3.684541269464591*^9, {3.684541311972795*^9, 
   3.684541327816001*^9}, 3.684541560253099*^9, 3.6846345007000237`*^9, 
   3.6846357249512463`*^9, 3.684668048943243*^9, 3.684688678073703*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"bestPushFreeNorm", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"bestPushFreeNorm", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"bestPushFreeTri", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"bestPushFreeTri", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"bestPushFreeUni", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"bestPushFreeUni", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], 
      "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Sigma] of swarm\>\"", ",", "\"\<Max Torque\>\""}], 
     "}"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Max possible torque on  a free object (-1 to 1)\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<Normal\>\"", ",", "\"\<Triangle\>\"", ",", "\"\<Uniform\>\""}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Right", ",", "Top"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<../abecker/SwarmPublications/JournalTorqueControl/pictures/pdf/\
TorqueFreeComparison.pdf\>\"", ",", "%"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"bestPushFreeNorm", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"bestPushFreeNorm", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"bestPushFreeTri", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"bestPushFreeTri", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"bestPushFreeUni", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"bestPushFreeUni", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"bestPushFreeTriBottom", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"bestPushFreeTriBottom", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}], 
      "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[Sigma] of swarm\>\"", ",", 
      "\"\<Optimal push location (\[Mu])\>\""}], "}"}]}], ",", 
   RowBox[{"Filling", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", "\[Rule]", 
      RowBox[{"{", "4", "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", "Automatic", ",", "Automatic", ",", 
      RowBox[{"ColorData", "[", 
       RowBox[{"97", ",", "2"}], "]"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<Normal\>\"", ",", "\"\<Triangle\>\"", ",", "\"\<Uniform\>\""}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Left", ",", "Top"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "2"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"2", "/", "3"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"100", ",", 
           RowBox[{"2", "/", "3"}]}], "}"}]}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{"\[Sqrt]", "2"}], "/", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"100", ",", 
           RowBox[{
            RowBox[{"\[Sqrt]", "2"}], "/", "2"}]}], "}"}]}], "}"}], "]"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"1", "/", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"100", ",", 
           RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}], "]"}]}], 
     "\[IndentingNewLine]", "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Where to push a free object (-1 to 1) to maximize torque\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<../abecker/SwarmPublications/JournalTorqueControl/pictures/pdf/\
TorqueFreeBestPush.pdf\>\"", ",", "%"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.676466820390336*^9, 3.676466989524275*^9}, {
  3.676467176427374*^9, 3.676467178092044*^9}, {3.676467921880308*^9, 
  3.676467966912457*^9}, {3.676468003785376*^9, 3.6764681638781776`*^9}, {
  3.676468291519845*^9, 3.67646830329661*^9}, {3.6764683388165216`*^9, 
  3.676468372623979*^9}, {3.684533929234049*^9, 3.684533939348472*^9}, {
  3.684540376345602*^9, 3.6845403861440163`*^9}, {3.684540478831476*^9, 
  3.684540504167663*^9}, {3.684540558946384*^9, 3.684540561457901*^9}, {
  3.684540710649729*^9, 3.684540739068645*^9}, {3.684540801207048*^9, 
  3.684540810028236*^9}, {3.6845422568892612`*^9, 3.6845423290434504`*^9}, {
  3.6845429179330807`*^9, 3.684542953671657*^9}, {3.6845430966267433`*^9, 
  3.684543119304673*^9}, {3.684543323600518*^9, 3.684543327384514*^9}, {
  3.684674617451166*^9, 3.68467463543652*^9}, {3.6846747228371563`*^9, 
  3.6846747443712683`*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.008333333333333333], AbsoluteThickness[1.6], LineBox[CompressedData["

1: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
GHmoWeuP+ssyosLwf1XPWsI=
        "]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.008333333333333333], AbsoluteThickness[1.6], LineBox[CompressedData["

1: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

        "]]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
       0.008333333333333333], AbsoluteThickness[1.6], LineBox[CompressedData["

1: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

        "]]}}, {}}, InsetBox[
     TemplateBox[{"\"Normal\"","\"Triangle\"","\"Uniform\""},
      "PointLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}], "}"}]}], 
           ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
         "]"}]& )], Scaled[{0.99, 0.99}], ImageScaled[{1, 1}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"\[Sigma] of swarm\"", TraditionalForm], 
     FormBox["\"Max Torque\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->Medium,
   Method->{},
   PlotLabel->FormBox[
    "\"Max possible torque on  a free object (-1 to 1)\"", TraditionalForm],
   PlotRange->{{0, 2.}, {0, 0.9826794882812013}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.008333333333333333], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Line[CompressedData["
1:eJwt1QlQk9caBmCk6EAvI1JFqXCpexG0g1uLcuGlWBVFiyLVW6o27qLSIiq1
iAoFilVBXC6KK8oaCPu+hcWAKFswQKIETFjDTiBhDXAT/M5MJvPn5D/nfO/z
/cniI787HFdXU1MrVb5U75fnxW8Te/giJ1yS/MusPny6vg+5XbE8aV0vMo38
uvZkPgM3wS/F0K2H5sPxdNst4+O53XgUohpMaKx2/mFQpxtZ09+PR6z64MK1
Z7qgvFB+kgSFOXf/7IpOuj8Vax23H8pf34nP+WGulp9noOzricrYFx2YXi4k
C2PeNqZOczuw8sDtIrlxLqy3GNw4+Y+EzsPGY8OYUO/PJAhX3s0PK8De8b/Y
R7zb0T29XyE2deZNVaq3Y/061XgFy4/Ptt31b6P9ObCrkBZe1WnDK7mxcodi
3LNPKDzzqBX/mj7Pa/jVDYjXG7fCYXrDUuzVWbU/K7OF6n2D2ab6x+rtWtDk
oVrwLRjX2B3XxM103nIo6pZqB/7ZjHOq47lWIEig3947t5nyqUR5Qbp9QGIT
1KYHF/OPyJ//ZN9E9XChLj18Y0O/GLZi1QbVaEtykxncE1N91Vg878e6ke/E
CCpSFfAO1g9WfJXXKMJ0uet46Lke+NTJX4Tpcvg8BD1gdL1aI6L6a9C4e062
IOcjvlIdx6gWGax/S24v+Eh51IJjHcMMdm/EyROqUQdOge9VvqCB8uEjvXXe
PCurBqhWmxfPx6yyVmRECikvARzzmQqzL4QYUi0nFyDaYMapR171lN971Pzq
kN8s/QCr6Qb4ANsoC6fJ4x8ozw8Yl15/IRS+x/Tx/OoRE6yn7rbvPeUrRHDT
lfrkdwJUlKuGEHp3hk/fV+77Ke8G8JLVUrR5fOhNH7ARC3WrGF/s51P+jRAy
/RKfNNRherkDH5H+5bd7wpR1fvIQoffus+1GA7VUjwjJS881zvSqJR8RchcU
ezjMqaX6RDArWfZY8bKGvMTQP3olR/FdDdUrxrKDs23tqnjkJ0brQsc7olM8
qr8JXRurilI1eOTZBEHqRWH+y3f4tFwTzo4FxI/avCPfZghWsfg/t1ZTPs1Y
6/k3h/9PNXk3o1P4U9Jps2rKqwWWDpdZWu+55N+CC7UrHsX6cCm/FtwTF5lv
M+NSP7TieYjQLjKvivJsRbSY+fqmURX1Ryv+KvbMM/WppHzbYMZjtLp1VVC/
tIGRqtu0a38F5d2GFYI+O2ZJOT3v7bBuupNzbmM55d8O4zV83r2EMuqndpgs
O2mnMC4jDwlKtG/LH0S8JQ8JDo1efLt3+VvyUF63vOg1jH5DHhIkMyqyRKvf
kEcHejN08m6ll5JHBzxZv5TOtikljw5ceOvU58h9TR6d0P6TFbDr8Gvy6MST
1qAd7bIS6s9OmHtoGureLCGPLhh1uG7PXlpCHl0wH4t2eccuJo8uHLPmXNp+
oJg8uhGUtj9JR8Ehj27sGz+ZpveMQx7dqIyZcXmnDYc8evBNrs/uCMkr8uiB
W0SYUPfOK/LowdlDa418LV6RRy84M5lnetuLyKMXD3/3cdscXEQevZh9/rdv
3bcWkUcfug/az/EYKSSPPgj9V8bZsArJow+aIW3anMOF5NEPq5SZ3gP6hVRP
P6z3bIgtqi4gn3547qu/vPJWAdXXj9A/As0MbQvIqx+BfB+HoJkFVG8/1gva
nIev55NfP46NdLZFa+VT/VLYBqeLFgewyVMK4xCtSPu5bMpDCn3d09qLnuSR
rxT9uyrOen+dR/lI4dq4OfRIWi55SxHNjlEkb8mlvAbgmX50zxFBDvkPwDBi
fgvDJYfyG0CpxRWX5xo51A8DcDy/ab7Os2z6PxrAzjr2+Rcbs+l5HUBQ4CY/
W34W5TsIjuJp4pB7FvXLICQezPxn+lmU9yCWVWo3rMvNpP4ZhBor+A7zcCbl
Pwiz0AuFg5qZ1E+DOOXvw5yVnEEeMlwqSBTWHcggDxkUS85+/7NWBnnI8CTb
RMcnI508ZMg1HyvbfjKdPGTgqC3fEaafTh4yeMW2RfiVpZGHDIxqs83t19LI
Q47/tF0rY29IIw85bDvyTT/rSSUPORwjre/GRqSShxzd1llnE35NJQ85yvOc
TswySCUPOcItpMej+SnkMYTrN+beCvhfCnkMoaaCsSbeMYU8hqBRW9airpdC
HkMorRl09q1LJo8huJrcyDANSSaPISTyOHLpgWTyGMacHxo8uYuTyWMYQd8/
5hW0J5HHMHZf6IrLjU8ij2Hk7vXuynNPIo9hhBr5BrORRB7DML65tSlTK4k8
RqDRqGkSVZNIHiNI/bK4zyc0kTxGoDasUb/dJZE8RiBzKswY3JRIHsr5qR0X
PbUSyWMEXI1LO9hJCeShnLdoka12SCCPUYgOLwmyksWTxyiM6w1mtD+IJ49R
CMK8nI0s48ljFNzL48uFzXHkMYqC7AvlC27FkYfy+05HTd5siCOPMagVmm6W
iFjkMYb+6ps/ugSwyGMMoqa5GbstWOQxhlADlv7Nzlj6vRlD9Mfl0HscSx5j
8PogWCbZGUse45DssJMqpmLIYxwPzVqHd6bGkMc4Fk3EpVc7x5DHOPpd59X6
Loohj3EY7ypYwhAwyWMc5v4uwQfvMMlDgTlx3J1/2DHJQwFrU1//qFlM8lDg
lOlkrKQomjwUGGEH2mzwiiYPBUS6J+T+VtHkoQCD8fJ2/UQUeSiw6LfjChN2
FHlMQM1SuuXctSjymAD3Tdl95vdR5DEB49sd31RpRJHHBKwfNro3lEaSh3K+
U6+rKiCSPCZwXUdn+cu9keQxCdegFwL7hZHkMYk5xlt5NeII8phEtM/x8VUx
EeShnGew7B3PR5DHJBJrj7VttYwgj0nYMmu61TQjyGMKI+6hkVd54eQxhUuB
61xyn4eTxxT0nVYlpJ8NJ48pBJlU9DlvCiePKVjbnCt5pxlOHlP47+TMxh5+
GHmoWeuP+ssyosLwf1XPWsI=
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.008333333333333333], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Line[CompressedData["
1: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

          "]]}, {
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[0.008333333333333333], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Line[CompressedData["
1:eJwt1QdUVHcWBnBMYll1d62rMWqEoDEn1ohJloCfRIzGLirqCXFdxMQoKBLX
iGRJNuiy6LpqiB6EE2MhlKigTAVGmBl6lQEp0qT3ofcZhmX++d45HA5l3vvf
+7v3e5aup5yOvmJhYZE+9mX+7jMralP1+QvIS57pMN+rA7///BM6vwz1/bCu
HcqFF1t3K2/Dbotv0l7ndv49FHMPjZ9wOl2P4FvmKxK70r0/vWKrR6z4/yg4
+pVfjnzYhrEfxn7zBMcWncpLWdjGz0tx8PB3M2qutWJy8X1P+8kKxO4w7Te9
0gpxu1uxyPKT3Zr3jxa843JV27dUhXqrjyreb2zmeRIQNCH2zT0HmxE69uni
+2qEWJS7ncpqQpt4ngaP79eEX7Zvgs0a85WEQZsD+vDoRj4/GccvPViRbNmI
pL6lY09IgdM1b6+qwAZMEedJQ3XADYlxfAOcxAPT4XwhcXDuuXrWm4Fdh21s
17bUoea8+YaZ6LHb4LvbpY7nzcbm9X4aj9xanDYfzzMHA3etXru0vpb9ycWj
zYpNYTE1sBBXHgpPll3SWtewnjyM21OeW3mzGpurzQ/QocSpcrphUjXr00G2
Ub93jk8VrmnNBeTjwaR/Lg0sfQlR7poCrNzX+bUmsxKinOICeDpVLfbOrmD9
z1G+84nL7MpyvGk+zsJCjPiU2lqbytiPQhz13/bF394tw5dfmK8ieFrP0f3q
Vsr+FGPkk82X+yNewHy3WVHFePWX4hPuAyXsVwkK5437ynZnCfrNt+srQfC3
17+PiC5m/16gFr1/mT63GOvEAJRix36VstK/iP0shaTHfsUlUyHE8S6W4YhD
RUGQTyH7W46R8reWhZieIyfbfJUj88M79971f85+V0C33eqcftZzzBYHrET8
N8vyL4cXsP+VsF97tkm5rgDidi4vMXHe2m3LS/PpUYUFa65tDPfOZz1V6Hht
jWPL/Hz6VOHMAo/DCUk61leF3EdRLR0eOnpVI+LCxYk739Cx3mqsnuPnHJ2V
R79qpJ2Nutfom8f6a1A73TlEZ5NHzxp6PsPvt6vB0Ts/B7nsekbfWqwSvrns
Ty0eNvw91v/TXHrX0juH/arDxmCnJtc9OfSvo382+1eHva4+OUfcszkP9TCK
echiP+txrqJyycrALM5HPdzEfGSxvw1wn+HXdz01k/PSgNNiXjLZ7wYMb1Lr
fMZnct8bYRTzk8H+N2Ic3lsxvCOD89TIeUqnRxMWO6pdbO6l06OJ85VOjyZY
Wnq9d8yURo8m3BLzlkaPZjy4rV/e6JpGj2ZUi/lLo0czAj6bOHnWs1R6tHAe
U+nRAvvVy347/HEq57MFMWI+U+jRCnl+0e5tqhR6tHJeU+jRiozxpnmudin0
aINRzG8yPdpQdj/w7gfaZHq0cZ6T6aFHzvGWshPbk+mh53wn00OP3vfXvx5W
kUSPdqjEvCfRox3TonMW3fBKokc77MT8J9GjAyUpke7tU5Lo0cF90NKjA6bw
6996RGrp0Yn5Yj+0rKcT+x032hds0dKnk/uiZX2d8Nr58F/1HRp6dXJ/NKy3
E/1at8sngzT060SO2CcN6+9Cwc/yO3aOGnp2IVzsl4b96EKYp02UZY+avl1Y
JfZNzf50YV/i1e7uUDW9u7h/avarGyl3Ppf856Ca/t2oEfuoZv+6MXWKbOjp
NDXnoRsRYj8T+T7qhnWY+4OqnxK5r904IvY1kf3twbKz+3eNTk3kvPRghdjf
BPa7Bwfr5teGBCRwfnoQKfY5gf3vgSrj162+kxM4Tz04Kfb7KT16sVzZMMnr
6lN69HLfn9KjF357f2jaOPcpPXpRJvZfRY9eFI57OyUrVEWPXuwReaCiRy8e
P+nYUmKjokcf8yGeHn34oXCx5uP0eHr04RuRF/H06MPku4UldYfi6dHH/Iin
Rx9W+si/Cx6Mo0c/vhJ5EkePflSMDsgdbsTRox8nRb7E0aMf93655hFnE0eP
fuZNHD36sdUo+7yhKJYeAzCI/ImlxwBUBav0ET6x9Bj7+zpzHsXSYwAuOZ9M
a7SKpccARm+b80lJjwEYBw0r/LOV9BiEpcgrJT0GEXT0zNTT55T0GIRO5JeS
HoMInOD4+MoSJT0GYSXyTEGPQXQ5fL87rUhBj7H7iXxT0GMIV/50YsMfAhT0
GEKkyDsFPYbg9mNgLewV9Bhi/inoMYT7qVsDDvTI6TGEiyIP5fQYxh+L9511
eCCnxzC2i3yU02MYNzOi0pvd5PQYhq3ISznzZhgKv0MeDovk9BiGVOSnjB4G
SP79way/VsjoYYBC5KmMHgZc1HpZa0Nk9DDgsMhXGT0MMETPjsn9TEYPA9JF
3sroYcT//Gac2b1ARg8j81dKDyOgnhlvXyWlhxGlIo+l9DBCl1R/zD9USg8j
0kQ+S+lhRMxMryar41J6jCBT5LWUHiPwdHRYMn61lB4jyBX5LaXHCF7d5h3w
1pCEHiPoEnkuoccI5rTv0H+tldDDBKXIdwk9THhHVR3c9l8JPUz4s8h7CT1M
mPji/IYLByT0MOEjkf8SepjwhvPbhtWLJfQYxXPxPpDQYxQvb4av0XfH0GOU
74cYeozCOfqR4pEmhh6jMIj3RQw9RuG38mjYiesx9LBY/7p4f8Tg/8X5UJM=

          "]]}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
      PlotRange -> {{0, 2.}, {0, 0.9826794882812013}}, DisplayFunction -> 
      Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
      AxesLabel -> {"\[Sigma] of swarm", "Max Torque"}, AxesOrigin -> {0, 0}, 
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, PlotLabel -> 
      "Max possible torque on  a free object (-1 to 1)", 
      PlotRange -> {{0, 2.}, {0, 0.9826794882812013}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      PointLegend[{
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {"Normal", "Triangle", "Uniform"}, 
       Joined -> {{True, True, True}}, LabelStyle -> {}, LegendLayout -> 
       "Column", 
       LegendMarkers -> {{False, Automatic}, {False, Automatic}, {
         False, Automatic}}]], {Right, Top}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.68453389843923*^9, 3.6845339398526583`*^9, 3.684540265088787*^9, 
   3.684540386692976*^9, {3.684540505027707*^9, 3.6845405206929827`*^9}, 
   3.684540562129772*^9, 3.68454073991187*^9, 3.6845408107933702`*^9, 
   3.684540981636374*^9, 3.6845410168946857`*^9, {3.684541272726653*^9, 
   3.684541275069581*^9}, {3.6845413149953117`*^9, 3.684541330390424*^9}, 
   3.684541564380101*^9, {3.6845415972458344`*^9, 3.684541611404339*^9}, {
   3.68454164531647*^9, 3.684541659352977*^9}, 3.6845416903810062`*^9, 
   3.6845417731341143`*^9, 3.684541815751561*^9, {3.684541858016691*^9, 
   3.684541884938489*^9}, 3.684542038494244*^9, {3.684542261702969*^9, 
   3.684542329744802*^9}, {3.684542837108465*^9, 3.684542857215396*^9}, 
   3.684542954771956*^9, 3.684543120000651*^9, 3.684543327850935*^9, 
   3.684543551271291*^9, 3.684634500796878*^9, 3.684635725419922*^9, 
   3.6846680491599283`*^9, 3.684674755019947*^9, 3.6846886781670933`*^9}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, GraphicsComplexBox[CompressedData["
1:eJztmflbzXnYx1Ok7MraoCTUZNdoIm5KsksSkmwp2UoMFZNdWUoGKWMJTQiJ
bJksRSKtUpLSfpZOnX1fn3g+3/tcvtf1XM8/MOeHznW3fM/3c78+59zv16eh
64I9NxgaGBiktH/5/rynT5p7fcRhSFzu3ylsKA/+tz4LVt2G7725jQtPhxzh
LH56GUZMzohPL24jP0+G40MXji6c1gYXEr8/bkHVtqdWgzNbIfPH76dB+rJU
VY1zK7QX7d+5DwHzK8bWvOOQv38I+5evDZjiy4Eun6+HTO3yBA5MNuq8UNoC
Py6XmAlJ6+NtYuNbwM73VI7ENgvcRg+zjnVuIffzAkJYu7qKmGxIbv/rz9df
QfyLb/1CEtjQ+uP1suFi49mDrxewwWHi98dr8B0Q5PGwM5u8/ht489Uyoddb
FryW2La/Qi7AjQKXO9Es6PrjfvIg9FNjjzWLWOD54wXfQcOVqAITCxZZ73uY
xA7MPspiQkPE9wvmg/CU/cjnz5jkfgtgTtmqd6fjmLD9++2FFMKUHWdutwYx
SX+K4E7oildPZjHB4MejBFxHpD//NoJJ1lMCxswRnxd2YcLs+u8vUAq8MKu/
pXwGWV8pFCydWJFbxYC4nO8L+AjnVP1W381jwI/lTiyDmJWpXa48YcCP5Xwu
A4bqYXRMKoOs/xO4GoyatSWJAZbfb2dIORwyzps/NpFB+lEOtgZpQz6cZUBg
wPdHBfCZZjEOZxikP5/Bdqwwek37z79frU/aZ9hudEzsmsAg/aoEQdanHWWX
GSD9fjlJJZgVFdoZ3WSQ/n2Bjp82/Ps2gwHTfmyAKoip2m7UO4dB+lkFwXPt
zD99ZMCP2zvyFZpHbBvWgcEg/a0GK68356JVDCgs+P6oBp9uV3UrzKl+10De
scPT/Eczoe+PG/wGJzpz/jo3h+r/NxA8rHj7NZAJPy7nWwussu2ONtEUjzro
ap8w0DeVSdZTB1G9/KJDiig+dXD+wfLUhWImWV8d7Bt+rrjxFxbhVQ8Z76ad
HOxG7Zd6GDfuZjE7mEX41cM256uySRdZZP0N4HVubJ3oPYvwbIAgtxpeTwUL
/vdyDVDv0Wy1x45N+DbCxozTnUesZJP+NIJb92EVHWLZhHcjvLW/4GeQwyb9
aoIJqidmfWTU/m+CzPBY9djRLaR/TTBspHG5u38L2Q/NcHb46MpFF1tIP5th
crxZjXN5C9kfzZBwKHZOx54c0l8GmPSs6HZxDofsFwYMZLITlYc5pN8M6KCt
re+XTb3fmbDukuVCloZD+s+EUZuvPQuY0kr2ExMkveeEHA9vJTxYECtdaDn/
aSvhwYLM681fkmWthAcLls/T9oh1bCM8WDDni9uRDmFthAcbio95eyueUp9X
7Z8bj6xagpVthAcb6qqqlKuduYRHC9jWJ215E8klPFrgYHTroYRsLtmf7Z9L
W2uffe7IIzw4kGTzMufP2TzCgwNPKxMOHz3JIzw4cHyPaDC3hEd4tILpOrNt
lV34hEcrPOxwPWnDaD7h0QrnOzfLB3nwCY822Mgrr1OH8gmPNogIHVRuFM8n
PNogNOCp/7hMPuHBBZcd6rEHqvmEBxfcJrq1inV8woMLs0xMvY4PExAePEj6
u/n36e4CwoMHKkP57r6bBYQHD3Zd3KcyOSUgPPjwNdnu2cAMAVkPH9wvBT6e
9VlA+PAh7GOxJlYlIOvjg3Zt1E2BpZDw4oOzzaPKrTOFZL18eNSizjQMEhJ+
fEjabnrgXoyQrF8AogOaTTseCAlPAazgj3y+4LOQ9EMAb58feTNVLSR8BbD8
kX+5y1AR6Y8AKm8bz/OdJSK8BXC609yoY5tFpF9CaB6zTPg+TkT4C+HrE0/l
oMci0j8hpLw3Nz/4VUT2gxBy0r89khuIyTwSgt+UYWv3jxCT96sQJqVPSxgw
X0z6K4Jlw2c0vtouJvtFBA8MHxeFnReTfotgxr5gDjwXk/0jgsIWr6K+jWLS
fxG8T5zYS2kiIftJBOq5fy1oHSMhPMSwt/7oiFYvCeEhhv4esdMUERLCQww2
5wKcza9KCA8xuDbL3zvlSQgPMcT0tD67pU1CeIhBu+Hw3NvmUsJDDANaT1yR
OEkJDwmkXnOZPW+NlPCQwKsrDurbR6WEhwT2H1n6R/+7UsJDAn6uzOCYMinh
IYGcnutSuyulhIcEbI6taj5vJSM8pODAjWi0d5cRHlLo5ucR9H6rjPCQArv3
0qkhZ2WEhxTOHioaafWvjPCQQuiOF8LKehnhIYVlOaVBF0zkhIcMVvfx8PEf
Kyc8ZFA1vtuZSd5ywkMGrwYtber1p5zwkMH8Uqal6Lqc8JDB1Zv1A2ry5YSH
DD4szbheJJATHnKQ7ewTnzdAQXjIYdg/srd5oCA85HBgxL4exQEKwkMOOyUC
t5oYBeEhh6hV992FDxWEhxx46jG87tUKwkMOPYLtBowzUhIeChimc722/Fcl
4aGAVSOzgqIWKwkPBRjWXluYFaYkPBRQf3vieNkVJeGhgNu3jgod85SEhwK2
DD62M5KrJDyUMMBLmpjfV0V4KGHPB49Zg6aqCA8lZCV9XbXDX0V4KKFl+tnc
4hMq8nmjBBufUevHZ6gIDyUkm3QcnFClIjxU4DPNpsrIUE14qIC/1ungTjs1
4aECZ+tYDdtDTXioYH9I7Xj/MDXhoYICE1OzxitqwkMF2ww+RQbkqQkPNfQ4
mruBy1UTHmpg9rmcGtFPQ3ioIWWg26yu0zSER3vdiTc8aYOG8FCDf9mu0U4x
GsJDDW5DhsyueKghPNRwf4Lh0t3VGsJDA3+46dYN6qglPDTg9dh2ca69lvDQ
gN2aGT1Cl2gJDw0M3hV6zHqPlvDQwC9/znlQcU1LeGhg4eGMsNh8LeGhhTvu
6oI5Qi3hoYVLMflXTCx0hIcWRmYPbsifoSM8tOASOu9IXJCO8NCCgqOOWHFa
R3hogVcz6tHwTB3hoYMvvwwfIanTkf4ZTKeeKV8YU/LSf7qz3hf6zTTu53FQ
7wtphUmXhn7U+8KEB16ll+31vmA1r+f4W7F6X2gbtDTAQsVBX2gs3Ch+E6L3
hXvsS5ydvBb0hfgdJ+/xd+l94UOobZnCWO8LDOXFLwuusNEX2NEz7G6A3hdW
JVv9+5zJQl8I6j1R436ehb7AeijcpFrAQl9oHR4+Kaar3hcsbvVhPChmoi8s
ehlYan2Bib4w7+OLvWc3MdEXStLDTbOn631BvSA3cv0gvS9MertP8LuGgb6w
SW2Wa9DIQF/YXirO21vIQF/oe4kxZXsWA31h17Ee0uR7DPSFi/v3+tSn6H3h
rFe+q/Cq3heerR1kn5Kk94WO4UPYhdf0vrCrWJbjfFPvCxHmD+a9S9f7Avvq
Lc/ZWXpf8PMpLIzP1/vCqtuLs0991ftC+tW64b15el+Idq8tUnZkoi+EuAau
HTOYib5w1Hi69SlHJvpCFLNQ1sGLib5Qxe01a2soE31hXFvPxqd/MdEXlnvV
SgofMtEXurt8+xpfyURfuOcZu0Cn0fuC94B1apENC31hWnVp5rp2/pQvyBf+
sWDybhb6Qj+vxN2brrHQF166faxsLGKhL/j7BH48r2ahLwTAqLth9mz0hd2Z
y1aFt+d3yhdy0iIiYk6y0RcuTzq5/NYLNvrCAa1jQ7aAjb4Q/sozumB4i94X
fLd5vvRpQV/ICDT8EBfXgr6gqvkidsxrQV8Y6lc04Y62BX3BP804rHkSB30h
y7XStDqYg75w4DeX6OhbHL0veBrKGhs56Asvu/IeM4e0oi9cMvsYHOPTir6w
s/ShRXF8K/rCqvQJwpSyVvQF+5ORf/bs3Ya+4J3f6ZDRojb0hf6fucaRMW3o
C5eaX82IKGhDX1A1bUoSdeWiL3x8GFPRPI+LvuAwaMq9+Se56AupH3s42xRy
0RdWrxTe3NiDh76QPD5hST8PHvrCKK+ml3Z/8dAXoESScOUTD31hxz/rnc70
5qMvWFz+duG5Kx99ITt+hZr5Bx99IfDUp1VmN/noCz2iF710ruKjLzzan28V
2E2AvuAb7nbw9DQB+oJR6KvGf9tzL+ULqZumuDGuCdAXPNY/TulVLkBfkK0c
bzKlsxB94bLXnaANTkL0BbcFIz+c2ixEX2h1uzbq2SUh+sKZaYNjm4qF6AtO
jgm8HoYi9IW6seaLnRxE6AtRtrEP1geI0BfGDDXtE5sgQl8oH3j4j6f5IvSF
vWa6iga1CH1hWNeI37uPFaMv5BtJEh3XitEXtquDVWvPiNEX+ktafE/mitEX
XrRtePFYJkZf2MCos6y3k6AvdKtdeaCrrwR9IeNzRcNvsRL0BZ+SxTPXvJKg
L3R4X/DPcaEEfeFmtnvnRzZS9IVFz3I21npL0RekD6bmmx6Toi9cuv3U3uFf
KfqCS/LEGL82KfoC+2IaN9pShr4Qd87OI2OxDH3BMTb5fs0hGfrCt6OW5iaP
ZegLR/Zd2DmBJUNfGBXWt8LXQo6+UBYS5xg1X46+EBHUNfF+pBx9wWrdUeXX
dDn6Qp5PB1/jRjn6wrYle5+P66tAX+g7XzZkpbsCfSFrZuj+I+EK9IX1U9vq
791WoC90mbTRtapGgb5wf0xjcsdeSvSF5SP9jMe6KNEXdJZfAlfsVKIv/DPA
6/2hFCX6wvzexb+mVSrRF0Smc09WdlGhL1wwzG0zxHwqhRkqWDQ6WIW+wBI9
S192VYW+ENv6m9nBMhX6wm/N6TvudFKjL1TX2JdXOKrRFw5WpEzqsEmNvmBX
PDTB/qIafaEk76JiaZEafWH3q/4r9xto0BeGZP6VlTpBg76Qe7/7kHJ/DfrC
ltTofbp4DfqC+XWjerv3GvSFZ39HunipNOgLa88qrkeO1qIvmMTs7HRrtRZ9
Ie0IL6DstBZ9YWnkpnea11r0BfWuZjtbqRZ94XrwmhOetjr0hbkbv7bu9dGh
LwjWeC+8cVKHvpCwovRe6Qsd+gJ4zu+t5v/f+bHpjfmMQaH6/PglMDny9yZ9
fnSaG/nay5uL+dHCr5Px9nf6/Oj5LnxOzOQ2zI/zDlWfuHVHf97sbxVckts+
j6j86LNmn1lDnP68OXOhdpnWkIP5seDQo0SLP/T5sdF6Ss0kpj4/njfOtFyy
Qp8fLxpU+wd/0OfHtOsNN05M1edHucPythv3mJgfNx+/PebNUCbmxyVx4aF1
eJ6aBw3HzmWoOzEwP3offikfENaM+dFjjcPk31qaMD+KnF0jF/s2YX6cPf1Q
9taiRsyP8qvWHY9Pb8T8eHf2E/eUBw2YH8u3fT2eY9OA+dFiSXXRt/h6zI+V
nt96q0zqMT++dGvz6r+nDvOjdO4W/wKzOsyPViE1lulJdZgfm7rH1pwZU4/5
cadTr4u7s+oxP3rwdq9YObcB82POIXFfqGzA/Lj11Ppi64BGzI/vuu2INRY3
Yn58Opo7u+VAE+bHX6uduhX1bMb8OCtuZ+79S82YH4ec/OXIOXv9ebPB7Reu
4Zn682aBKkrj667Pj8dfjnk+vVyfHxVMzh6b9SzMj4+8gxxMBCzMj9qjLnxO
JBvzY9ad3anF3VowPx62023NuNCC+bF85f3h5205mB/vX6ptjnjMwfzISgu9
6jezFfNjauavq1w+tmJ+XDbDyWLEmjbMj5yF9p9NuW2YHz+deJ3YtoeL+XEB
965HqSkP8+PzKX49Hp3nYX48cPdxYIEZH/Nj+YBRM1+s4GN+bLrTdVh6Eh/z
41RBnNE1Jh/zo/dV29ozYwSYHzVnOVlH/hBgfuwlX3t5d5YA82PcxFN7g4yE
mB/DFie27wch5kf+jqBJC04LMT+mWMja94cQ86NLY6pknKUI8+Osur0V1u15
g8qPbk5h9/rcFWF+nHwyrn3/iDA/fig5FSyfLMb8eNj82vyWA2LMj5OPPLOv
fifG/Li+s1X3op4SzI9Ds4uYL70lmB9rhqS9vX9JgvlxbzUv+XqTBPPj6E0p
B87ZSzE/Wp+qXx0VKsX8OBe+zQjPlGJ+XFDhZ7nZQIb58d0Sfvv+lGF+DIWS
qoWxMsyP40YdzZpeLsP8+Ljv9QsTBskxP36auXy3zXo55scqpfmyfqlyzI+B
64IcTQRyzI8Gm5f3UzoqMD8WDfsi4UQqMD/mu9qW1OQqMD+uCOlzr7ibEvPj
pj39Y7KXKDE/hll03pxxQYn5cci4/XP+qVdifvxbJh5x3laF+XHPOd/Ox9rn
NZUf06w3NEU8VmF+vLC9LHuLRoX50Xt0zTW/mWrMj2ZPufs9TqgxP771DFjj
8lGN+dHOvcNUh4EazI9uA0f9MmKNBvOjjU+Uuv8NDebHqNo9laZcDebH4xZX
n6gctJgfu+ztEN+G5zcCsF4p2F6bo8X8CBNXLy011WF+NA03cXjtodOfN//5
qf39qMP8eL7EiJvy7b/zl//OX/47f/nv/OW/85f/7/yFmhPU/KRqan5SNTU/
qZqan1RNzU+qpuYnVVPzk6qp+UnVOD9JTc1PqqbmJ1VT85OqqflJ1dT8pGpq
flI1NT9xTpL5SdX0Z2p+UjU1P39en76m5ufP69XX1Pz8ef36/xNT8/Pnfuhr
an7+3B99Tc3Pn/slxJqanz/3T19T5y9UTZ2/UDV1/vJzf/XnVtT5y8/91tfU
+cvP/dfX1PnLzxzENB5iGg8xjYeYxkNM4yGm8RDTeEhoPCQ0HhIaDwmNh4TG
Q0LjIaXxkNJ4SGk8pDQeUhoPKY2HjMZDRuMho/GQ0XjIaDxkNB5yGg85jYec
xkNO4yGn8ZDTeMhpPBQ0HgoaDwWNh4LGQ0HjoaDxUNJ4KGk8lDQe+pr6f+3P
PJQ0HioaDxWNh4rGQ0XjoaLxUNF4qGk81DQeahoPNY2HmsZDTeOhpvHQ0Hho
aDw0NB4aGg8NjYeGxkNL46Gl8dDSeGhpPLQ0HloaDx2Nh47GQ0fjoaPx0NF4
6Gg8KP9on6f9rk23/1XvJdNGdQt5bqXE+sVxo9k3woVY/w+o/Ucb
      
      "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, 
        {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[None],
          GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1NVSEAAQBVDAVsBuUcHA7gTFRlAs7MAg7O7u7u52/BO7uxtU7E6sw/hw
9r7uztzZ8OQJieODAgICAhln3OM+D3jIIx7zhHQyeMoznpPJC17yite84S3v
eM8HPvKJz3zhK9/4zg9+ksUvfvOHv9lLWS6QIHKQk1zkJg95yUd+ChBMCKEU
pBCFKUJRilGcEpSkFKUpQ1nKEUZ5KlCRcCKoRGWqUJVIqlGdGtSkFrWpQ13q
UZ8GNKQRjWlCU5rRnCiiaUFLYmhFa9rQlna0pwOxdCSOeDrRmQS60JVudKcH
ifSkF73pQ1/60Z8BDGQQSQxmCEMZRjIppJLGcEYwklGMZgxjGUd2qSYwkUlM
ZgpTmcZ0ZjCTWcxmDnOZx3wWsJBFLGYJS1nGclawklWsZg1rWcd6NrCRTWxm
C1vZxnZ2sJNd7GYPe9nHfg5wkEMc5kj2zTp5NPt+mUYqKSQzjKEMYTBJDGIg
A+hPP/rSh970oieJ9KA73ehKFxLoTCfiiaMjsXSgPe1oSxta04oYWtKCaKJo
TjOa0oTGNKIhDahPPepSh9rUoiY1qE41IqlKFSpTiQjCqUgFyhNGOcpShtKU
oiQlKE4xilKEwhSiIKGEEEwB8pOPvOQhN7nISQ6CCAz8/8j+ij/85hdZ/OQH
3/nGV77wmU985APvecdb3vCaV7zkBZk85xlPySCdJzzmEQ95wH3ucZc73OYW
N7nBda5xlStc5hIXucB5znGWM5zmFCc5wXGO8Q/iDaQB
           
           "]]]}, {}, {}, {}, {}, {}, {}}, {{}, {}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.008333333333333333], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJwV01c7FgAAhuGPor2ntBRpKElDU4OGNGgXKU0qGmjRUtIgLW2kqUGivaQ/
1u3gvp7D9+iNyM5PzwsKBAL/6GgwnehMCKF0oSvd6E4PetKL3vShL/3ozwAG
MojBDGEoYQwjnOGMYCSjGE0EYxhLJFGMI5rxTGAik4hhMlOIZSpxTCOe6cxg
JrNIYDZzmMs85rOARBayiMUsIYlklrKM5awghZWksorVrGEtaaSzjvVsYCOb
2MwWtrKNDDLZThY72Ek2u9jNHvayj/3kkMsBDnKIPPI5zBGOcowCCiniOCc4
ySlOU0wJZzjLOc5zgVIucokyLlPOFa5yjetUUMkNqrjJLW5zh7tUc4/7POAh
j3jME2qopY6n1POM57zgJa94TQNveMs73tNIEx9o5iMttPKJz3zhK9/4zg9+
8ovf/KGNv7R3bDvBfzPvTQA=
          "]]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
         0.008333333333333333], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJwNz9dCSAEAANBbiDSMQkUloRSyykoDJQotDavJIz9Vf2JUymopEVFCWRkt
1Xk4H3BSmu9X3gsJgqCNBzzkEY/poJMuntBND095xnNe8JJe+uhngEFeMcQw
rxnhDW8Z5R3vGeMDHxlngk9M8pkvfGWKab7xnR/85Bcz/OYPf/nHLHPMs8Ai
/1limUA8hFBWsZo1hLGWdYSznggiiSKaDWxkE5uJIZYtbGUbccSTwHZ2kEgS
yewkhV2ksps97CWNdPaRQSb7OcBBsjjEYY5wlGNkk8NxTnCSU5wmlzPkkU8B
hZzlHOcpopgLlHCRS5RSxmWucJVyKqikimquUUMtddRznRvc5Ba3aaCRJppp
oZU73KU9NAhWAN2dTMU=
          "]]}, 
        {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
         0.008333333333333333], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJwVz0NyRAEARdGf7CRbyhIyijvo2LZt27ZtczU5GZyqO3iTFxUTik6OCIIg
TKyII54EEknifxAihVTSSCdMBplkkU0OueSRTwGFFFFMCaWUUU4FlVRRTQ21
1FFPA4000UwLrbTRTgeddNFND7300c8AgwwxzAijjDHOBJNMMc0Ms8wxzwKL
LLHMCqussc4Gm2yxzQ677LHPAYccccwJp5xxzgWXXHHNDbfccc8DjzzxzAuv
vPHOB5988c0Pv/+fIoPgD1y9S5Y=
          "]]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
         0.008333333333333333], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJwVzldbiAEAQOGvSGZlhpQys7eMhlH2DGWPkq2ySQjZe1Nk/Rk/QjYVsldl
9Lp4n+dcnoScgsz8kCAIHvFYVPKEpzzjOS94ySte84YqqqnhLe94Ty0f+Mgn
PvOFr3zjOz/4yS/qqKeB3/zhL//+T4UGQQihNKEpYTQjnOa0oCWtaE0bIogk
ira0oz0d6EgnoulMF7oSQzdiiaM78STQg570ojd96Esi/ejPAAYyiMEMYSjD
GM4IRjKK0SQxhrGMYzzJpJBKGhOYyCQmk04GU5jKNKYzg5nMYjZzmMs85pPJ
AhayiCyyWcwSlrKM5axgJatYzRpyyGUteaxjPRvYyCY2s4Wt5FNAIdvYzg52
sovd7GEv+yhiP8Uc4CCHKOEwRzhKKcc4zglOcorTnOEs5zjPBS5yictc4SrX
uM4NbnKLMsq5zR0quMs97vOAhzQCzChZhA==
          "]]}}}], {}}, InsetBox[
     TemplateBox[{"\"Normal\"","\"Triangle\"","\"Uniform\""},
      "PointLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                 "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
         "]"}]& )], Scaled[{0.01, 0.99}], ImageScaled[{0, 1}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"\[Sigma] of swarm\"", TraditionalForm], 
     FormBox["\"Optimal push location (\[Mu])\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Epilog->{
     Dashing[{Small, Small}], 
     LineBox[
      NCache[{{0, 
         Rational[2, 3]}, {100, 
         Rational[2, 3]}}, {{0, 0.6666666666666666}, {
        100, 0.6666666666666666}}]], 
     LineBox[
      NCache[{{0, 2^Rational[-1, 2]}, {100, 2^Rational[-1, 2]}}, {{
        0, 0.7071067811865475}, {100, 0.7071067811865475}}]], 
     LineBox[
      NCache[{{0, 
         Rational[1, 2]}, {100, 
         Rational[1, 2]}}, {{0, 0.5}, {100, 0.5}}]]},
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->Medium,
   Method->{},
   PlotLabel->FormBox[
    "\"Where to push a free object (-1 to 1) to maximize torque\"", 
     TraditionalForm],
   PlotRange->{{0, 2.}, {0, 2}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, 
      GraphicsComplex[CompressedData["
1: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
ltTofbp4DfqC+XWjerv3GvSFZ39HunipNOgLa88qrkeO1qIvmMTs7HRrtRZ9
Ie0IL6DstBZ9YWnkpnea11r0BfWuZjtbqRZ94XrwmhOetjr0hbkbv7bu9dGh
LwjWeC+8cVKHvpCwovRe6Qsd+gJ4zu+t5v/f+bHpjfmMQaH6/PglMDny9yZ9
fnSaG/nay5uL+dHCr5Px9nf6/Oj5LnxOzOQ2zI/zDlWfuHVHf97sbxVckts+
j6j86LNmn1lDnP68OXOhdpnWkIP5seDQo0SLP/T5sdF6Ss0kpj4/njfOtFyy
Qp8fLxpU+wd/0OfHtOsNN05M1edHucPythv3mJgfNx+/PebNUCbmxyVx4aF1
eJ6aBw3HzmWoOzEwP3offikfENaM+dFjjcPk31qaMD+KnF0jF/s2YX6cPf1Q
9taiRsyP8qvWHY9Pb8T8eHf2E/eUBw2YH8u3fT2eY9OA+dFiSXXRt/h6zI+V
nt96q0zqMT++dGvz6r+nDvOjdO4W/wKzOsyPViE1lulJdZgfm7rH1pwZU4/5
cadTr4u7s+oxP3rwdq9YObcB82POIXFfqGzA/Lj11Ppi64BGzI/vuu2INRY3
Yn58Opo7u+VAE+bHX6uduhX1bMb8OCtuZ+79S82YH4ec/OXIOXv9ebPB7Reu
4Zn682aBKkrj667Pj8dfjnk+vVyfHxVMzh6b9SzMj4+8gxxMBCzMj9qjLnxO
JBvzY9ad3anF3VowPx62023NuNCC+bF85f3h5205mB/vX6ptjnjMwfzISgu9
6jezFfNjauavq1w+tmJ+XDbDyWLEmjbMj5yF9p9NuW2YHz+deJ3YtoeL+XEB
965HqSkP8+PzKX49Hp3nYX48cPdxYIEZH/Nj+YBRM1+s4GN+bLrTdVh6Eh/z
41RBnNE1Jh/zo/dV29ozYwSYHzVnOVlH/hBgfuwlX3t5d5YA82PcxFN7g4yE
mB/DFie27wch5kf+jqBJC04LMT+mWMja94cQ86NLY6pknKUI8+Osur0V1u15
g8qPbk5h9/rcFWF+nHwyrn3/iDA/fig5FSyfLMb8eNj82vyWA2LMj5OPPLOv
fifG/Li+s1X3op4SzI9Ds4uYL70lmB9rhqS9vX9JgvlxbzUv+XqTBPPj6E0p
B87ZSzE/Wp+qXx0VKsX8OBe+zQjPlGJ+XFDhZ7nZQIb58d0Sfvv+lGF+DIWS
qoWxMsyP40YdzZpeLsP8+Ljv9QsTBskxP36auXy3zXo55scqpfmyfqlyzI+B
64IcTQRyzI8Gm5f3UzoqMD8WDfsi4UQqMD/mu9qW1OQqMD+uCOlzr7ibEvPj
pj39Y7KXKDE/hll03pxxQYn5cci4/XP+qVdifvxbJh5x3laF+XHPOd/Ox9rn
NZUf06w3NEU8VmF+vLC9LHuLRoX50Xt0zTW/mWrMj2ZPufs9TqgxP771DFjj
8lGN+dHOvcNUh4EazI9uA0f9MmKNBvOjjU+Uuv8NDebHqNo9laZcDebH4xZX
n6gctJgfu+ztEN+G5zcCsF4p2F6bo8X8CBNXLy011WF+NA03cXjtodOfN//5
qf39qMP8eL7EiJvy7b/zl//OX/47f/nv/OW/85f/7/yFmhPU/KRqan5SNTU/
qZqan1RNzU+qpuYnVVPzk6qp+UnVOD9JTc1PqqbmJ1VT85OqqflJ1dT8pGpq
flI1NT9xTpL5SdX0Z2p+UjU1P39en76m5ufP69XX1Pz8ef36/xNT8/Pnfuhr
an7+3B99Tc3Pn/slxJqanz/3T19T5y9UTZ2/UDV1/vJzf/XnVtT5y8/91tfU
+cvP/dfX1PnLzxzENB5iGg8xjYeYxkNM4yGm8RDTeEhoPCQ0HhIaDwmNh4TG
Q0LjIaXxkNJ4SGk8pDQeUhoPKY2HjMZDRuMho/GQ0XjIaDxkNB5yGg85jYec
xkNO4yGn8ZDTeMhpPBQ0HgoaDwWNh4LGQ0HjoaDxUNJ4KGk8lDQe+pr6f+3P
PJQ0HioaDxWNh4rGQ0XjoaLxUNF4qGk81DQeahoPNY2HmsZDTeOhpvHQ0Hho
aDw0NB4aGg8NjYeGxkNL46Gl8dDSeGhpPLQ0HloaDx2Nh47GQ0fjoaPx0NF4
6Gg8KP9on6f9rk23/1XvJdNGdQt5bqXE+sVxo9k3woVY/w+o/Ucb
       
       "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {
          EdgeForm[], 
          Directive[
           RGBColor[0.880722, 0.611041, 0.142051], 
           Opacity[0.2]], 
          GraphicsGroup[{
            Polygon[CompressedData["
1:eJwl1NVSEAAQBVDAVsBuUcHA7gTFRlAs7MAg7O7u7u52/BO7uxtU7E6sw/hw
9r7uztzZ8OQJieODAgICAhln3OM+D3jIIx7zhHQyeMoznpPJC17yite84S3v
eM8HPvKJz3zhK9/4zg9+ksUvfvOHv9lLWS6QIHKQk1zkJg95yUd+ChBMCKEU
pBCFKUJRilGcEpSkFKUpQ1nKEUZ5KlCRcCKoRGWqUJVIqlGdGtSkFrWpQ13q
UZ8GNKQRjWlCU5rRnCiiaUFLYmhFa9rQlna0pwOxdCSOeDrRmQS60JVudKcH
ifSkF73pQ1/60Z8BDGQQSQxmCEMZRjIppJLGcEYwklGMZgxjGUd2qSYwkUlM
ZgpTmcZ0ZjCTWcxmDnOZx3wWsJBFLGYJS1nGclawklWsZg1rWcd6NrCRTWxm
C1vZxnZ2sJNd7GYPe9nHfg5wkEMc5kj2zTp5NPt+mUYqKSQzjKEMYTBJDGIg
A+hPP/rSh970oieJ9KA73ehKFxLoTCfiiaMjsXSgPe1oSxta04oYWtKCaKJo
TjOa0oTGNKIhDahPPepSh9rUoiY1qE41IqlKFSpTiQjCqUgFyhNGOcpShtKU
oiQlKE4xilKEwhSiIKGEEEwB8pOPvOQhN7nISQ6CCAz8/8j+ij/85hdZ/OQH
3/nGV77wmU985APvecdb3vCaV7zkBZk85xlPySCdJzzmEQ95wH3ucZc73OYW
N7nBda5xlStc5hIXucB5znGWM5zmFCc5wXGO8Q/iDaQB
             
             "]]}]}, {}, {}, {}, {}, {}, {}}, {{}, {}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1:eJwV01c7FgAAhuGPor2ntBRpKElDU4OGNGgXKU0qGmjRUtIgLW2kqUGivaQ/
1u3gvp7D9+iNyM5PzwsKBAL/6GgwnehMCKF0oSvd6E4PetKL3vShL/3ozwAG
MojBDGEoYQwjnOGMYCSjGE0EYxhLJFGMI5rxTGAik4hhMlOIZSpxTCOe6cxg
JrNIYDZzmMs85rOARBayiMUsIYlklrKM5awghZWksorVrGEtaaSzjvVsYCOb
2MwWtrKNDDLZThY72Ek2u9jNHvayj/3kkMsBDnKIPPI5zBGOcowCCiniOCc4
ySlOU0wJZzjLOc5zgVIucokyLlPOFa5yjetUUMkNqrjJLW5zh7tUc4/7POAh
j3jME2qopY6n1POM57zgJa94TQNveMs73tNIEx9o5iMttPKJz3zhK9/4zg9+
8ovf/KGNv7R3bDvBfzPvTQA=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1:eJwNz9dCSAEAANBbiDSMQkUloRSyykoDJQotDavJIz9Vf2JUymopEVFCWRkt
1Xk4H3BSmu9X3gsJgqCNBzzkEY/poJMuntBND095xnNe8JJe+uhngEFeMcQw
rxnhDW8Z5R3vGeMDHxlngk9M8pkvfGWKab7xnR/85Bcz/OYPf/nHLHPMs8Ai
/1limUA8hFBWsZo1hLGWdYSznggiiSKaDWxkE5uJIZYtbGUbccSTwHZ2kEgS
yewkhV2ksps97CWNdPaRQSb7OcBBsjjEYY5wlGNkk8NxTnCSU5wmlzPkkU8B
hZzlHOcpopgLlHCRS5RSxmWucJVyKqikimquUUMtddRznRvc5Ba3aaCRJppp
oZU73KU9NAhWAN2dTMU=
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1:eJwVz0NyRAEARdGf7CRbyhIyijvo2LZt27ZtczU5GZyqO3iTFxUTik6OCIIg
TKyII54EEknifxAihVTSSCdMBplkkU0OueSRTwGFFFFMCaWUUU4FlVRRTQ21
1FFPA4000UwLrbTRTgeddNFND7300c8AgwwxzAijjDHOBJNMMc0Ms8wxzwKL
LLHMCqussc4Gm2yxzQ677LHPAYccccwJp5xxzgWXXHHNDbfccc8DjzzxzAuv
vPHOB5988c0Pv/+fIoPgD1y9S5Y=
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           AbsoluteThickness[1.6], 
           RGBColor[0.880722, 0.611041, 0.142051]], 
          Line[CompressedData["
1:eJwVzldbiAEAQOGvSGZlhpQys7eMhlH2DGWPkq2ySQjZe1Nk/Rk/QjYVsldl
9Lp4n+dcnoScgsz8kCAIHvFYVPKEpzzjOS94ySte84YqqqnhLe94Ty0f+Mgn
PvOFr3zjOz/4yS/qqKeB3/zhL//+T4UGQQihNKEpYTQjnOa0oCWtaE0bIogk
ira0oz0d6EgnoulMF7oSQzdiiaM78STQg570ojd96Esi/ejPAAYyiMEMYSjD
GM4IRjKK0SQxhrGMYzzJpJBKGhOYyCQmk04GU5jKNKYzg5nMYjZzmMs85pPJ
AhayiCyyWcwSlrKM5axgJatYzRpyyGUteaxjPRvYyCY2s4Wt5FNAIdvYzg52
sovd7GEv+yhiP8Uc4CCHKOEwRzhKKcc4zglOcorTnOEs5zjPBS5yictc4SrX
uM4NbnKLMsq5zR0quMs97vOAhzQCzChZhA==
           "]]}}}], {}}, {
     DisplayFunction -> Identity, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
      PlotRange -> {{0, 2.}, {0, 2}}, DisplayFunction -> Identity, 
      AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
      AxesLabel -> {"\[Sigma] of swarm", "Optimal push location (\[Mu])"}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, Epilog -> {
        Dashing[{Small, Small}], 
        Line[{{0, 
           Rational[2, 3]}, {100, 
           Rational[2, 3]}}], 
        Line[{{0, 2^Rational[-1, 2]}, {100, 2^Rational[-1, 2]}}], 
        Line[{{0, 
           Rational[1, 2]}, {100, 
           Rational[1, 2]}}]}, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], Method -> {}, PlotLabel -> 
      "Where to push a free object (-1 to 1) to maximize torque", 
      PlotRange -> {{0, 2.}, {0, 2}}, PlotRangeClipping -> True, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      PointLegend[{
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Directive[
         PointSize[0.008333333333333333], 
         AbsoluteThickness[1.6], 
         RGBColor[0.880722, 0.611041, 0.142051]]}, {
       "Normal", "Triangle", "Uniform"}, Joined -> {{True, True, True, True}},
        LabelStyle -> {}, LegendLayout -> "Column", 
       LegendMarkers -> {{False, Automatic}, {False, Automatic}, {
         False, Automatic}, {False, Automatic}}]], {Left, Top}, Identity]]& ],
  
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.68453389843923*^9, 3.6845339398526583`*^9, 3.684540265088787*^9, 
   3.684540386692976*^9, {3.684540505027707*^9, 3.6845405206929827`*^9}, 
   3.684540562129772*^9, 3.68454073991187*^9, 3.6845408107933702`*^9, 
   3.684540981636374*^9, 3.6845410168946857`*^9, {3.684541272726653*^9, 
   3.684541275069581*^9}, {3.6845413149953117`*^9, 3.684541330390424*^9}, 
   3.684541564380101*^9, {3.6845415972458344`*^9, 3.684541611404339*^9}, {
   3.68454164531647*^9, 3.684541659352977*^9}, 3.6845416903810062`*^9, 
   3.6845417731341143`*^9, 3.684541815751561*^9, {3.684541858016691*^9, 
   3.684541884938489*^9}, 3.684542038494244*^9, {3.684542261702969*^9, 
   3.684542329744802*^9}, {3.684542837108465*^9, 3.684542857215396*^9}, 
   3.684542954771956*^9, 3.684543120000651*^9, 3.684543327850935*^9, 
   3.684543551271291*^9, 3.684634500796878*^9, 3.684635725419922*^9, 
   3.6846680491599283`*^9, 3.684674755019947*^9, 3.684688678433922*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"sigs", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "1.1", ",", "1.2", ",", "1.3", ",", "1.4", ",", "1.5", ",", 
       "1.6", ",", "2"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"TODO", ":", " ", 
     RowBox[{
     "place", " ", "legend", " ", "inside", " ", "the", " ", "plot"}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"TorqueFreeNorm", "[", 
         RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Sigma]", ",", "sigs"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Mu]", ",", 
       RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "sigs"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Mu] (pushing location)\>\"", ",", "\"\<Torque\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Triangular distribution\>\""}], ",", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "]"}], "}"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6846738840081873`*^9, 3.6846738957255077`*^9}}],

Cell[BoxData[
 TemplateBox[{
  GraphicsBox[{}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[Mu] (pushing location)\"", TraditionalForm], 
       FormBox["\"Torque\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Epilog -> {
       LineBox[{{1, 0}, {1, 1}}]}, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotLabel -> FormBox["\"Triangular distribution\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"1", "1.1`", "1.2`", "1.3`", "1.4`", "1.5`", "1.6`", "2"}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 0.75, 0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.684673899353324*^9, 3.684688678883442*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sigs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
     ".3", ",", "1", ",", "1.1", ",", "1.2", ",", "1.3", ",", "1.4", ",", 
      "1.5", ",", "1.6", ",", "2"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"TODO", ":", " ", 
    RowBox[{
    "place", " ", "legend", " ", "inside", " ", "the", " ", "plot"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"TorquePivotTriFree", "[", 
       RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "sigs"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", 
     RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{"sigs", ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", "Bold", ",", "8"}], "}"}]}], ",", 
        RowBox[{"LegendLabel", "\[Rule]", "\"\<\[Sigma]=\>\""}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0.55"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Mu]\>\"", ",", "\"\<Torque\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Triangular distribution\>\""}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "]"}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<../abecker/SwarmPublications/JournalTorqueControl/pictures/pdf/\
TorqueTriFree.pdf\>\"", ",", "%"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.683656192718853*^9, 3.68365650959415*^9}, {
   3.684533201990088*^9, 3.684533227629901*^9}, 3.6845336018509903`*^9, {
   3.684538398449457*^9, 3.684538398934102*^9}, {3.684538872647613*^9, 
   3.6845388887736807`*^9}, 3.684539050089514*^9, {3.6845392360343122`*^9, 
   3.68453924661322*^9}, {3.684539278578122*^9, 3.684539281301207*^9}, {
   3.684539347834256*^9, 3.684539370928897*^9}, {3.684539413266988*^9, 
   3.6845394260116*^9}, {3.684541137633313*^9, 3.684541223576767*^9}, {
   3.6845419473452797`*^9, 3.6845420170348797`*^9}, {3.684542119211987*^9, 
   3.684542121724435*^9}, {3.6846745539692287`*^9, 3.6846745924173307`*^9}, {
   3.685113803041*^9, 3.685113804551968*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{InsetBox[
     GraphicsBox[{{}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"\[Mu]\"", TraditionalForm], 
        FormBox["\"Torque\"", TraditionalForm]},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Epilog->{
        LineBox[{{1, 0}, {1, 1}}]},
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
      PlotLabel->None,
      PlotRange->{All, All},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], Scaled[{0.5, 0.5}], Center, 
     Scaled[{1, 1}]], InsetBox[
     TemplateBox[{"0.3`","1","1.1`","1.2`","1.3`","1.4`","1.5`","1.6`","2"},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox["\"\[Sigma]=\"", {
                 GrayLevel[0], FontWeight -> Bold, FontSize -> 8, FontFamily -> 
                 "Arial"}, Background -> Automatic, StripOnInput -> False]}, {
              
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #6}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #7}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #8}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #9}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontWeight -> Bold, FontSize -> 8, FontFamily -> 
          "Arial"}, Background -> Automatic, StripOnInput -> False], 
        TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 0.75, 0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.647624, 0.37816, 0.614037], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.4317493333333333, 0.2521066666666667, 
                    0.40935800000000006`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.647624, 0.37816, 0.614037]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.647624, 0.37816, 0.614037]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.647624, 0.37816, 0.614037], Editable -> False, 
                    Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold", ",", "8"}], "}"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"\[Sigma]=\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{1, 0.55}], ImageScaled[{0, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->False,
   AxesLabel->{
     FormBox["\"\[Mu]\"", TraditionalForm], 
     FormBox["\"Torque\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->False,
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   ImagePadding->All,
   Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
   PlotLabel->FormBox["\"Triangular distribution\"", TraditionalForm],
   PlotRange->Automatic,
   PlotRangeClipping->False,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{}, {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {"\[Mu]", "Torque"}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, Epilog -> {
        Line[{{1, 0}, {1, 1}}]}, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
      PlotLabel -> "Triangular distribution", PlotRange -> {All, All}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.647624, 0.37816, 0.614037], 
         AbsoluteThickness[1.6]]}, {0.3, 1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 2}, 
       LabelStyle -> {
         GrayLevel[0], Bold, 8}, LegendLabel -> "\[Sigma]=", LegendLayout -> 
       "Column"]], {1, 0.55}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.684541948297085*^9, {3.684541979631719*^9, 3.6845420339731903`*^9}, 
   3.6845421227183447`*^9, 3.684634501280901*^9, 3.684635726015329*^9, 
   3.6846680494755287`*^9, 3.684674595005321*^9, 3.684688679135581*^9, 
   3.6851138073187723`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"Brown", ",", "\[IndentingNewLine]", 
        RowBox[{"Rectangle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{
             RowBox[{"-", "1"}], "/", "10"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", "Blue", ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
        "Red", ",", 
        RowBox[{"Polygon", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{".75", ",", 
             RowBox[{"-", "4"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.25", ",", 
             RowBox[{"-", "4"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.25", ",", 
             RowBox[{"-", "3"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.75", ",", 
             RowBox[{"-", "3"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"-", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "/", "4"}], ",", 
             RowBox[{"-", "3"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{".75", ",", 
             RowBox[{"-", "3"}]}], "}"}]}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", "Black", ",", 
        RowBox[{"PointSize", "[", "Tiny", "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{
           RowBox[{"MultinormalDistribution", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"-", "5"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\[Sigma]", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "\[Sigma]"}], "}"}]}], "}"}]}], "]"}], ",", 
           
           RowBox[{"10", "^", "3"}]}], "]"}], "]"}]}], "\[IndentingNewLine]", 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "8"}], ",", "2"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Sigma]", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "/", "50"}], ",", 
        RowBox[{"1", "/", "10"}], ",", 
        RowBox[{"1", "/", "2"}], ",", "1", ",", "2"}], "}"}]}], "}"}]}], 
   "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.676470766623321*^9, 3.676471003872978*^9}, {
   3.676471049882092*^9, 3.676471065234427*^9}, {3.676471129297615*^9, 
   3.676471149504457*^9}, {3.6764711932820797`*^9, 3.6764713150200872`*^9}, 
   3.676471922923559*^9, 3.676471966073427*^9},
 CellID->54126742],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{
     {RGBColor[0.6, 0.4, 0.2], 
      RectangleBox[NCache[{-1, Rational[-1, 10]}, {-1, -0.1}], 
       NCache[{1, Rational[1, 10]}, {1, 0.1}]]}, 
     {RGBColor[0, 0, 1], PointBox[{0, 0}]}, 
     {RGBColor[1, 0, 0], 
      PolygonBox[
       NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
         Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
         1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]]}, 
     {GrayLevel[0], PointSize[Tiny], PointBox[CompressedData["
1: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
BQ7StLbrOF/2BR1RMH3MhPVr8peiMP/tuj5g42TMhENp9pXZQdi3vjHyjc/T
QeNG5O8CzMMvo6mz+/+w4Jrz2XUfOQTaqf34iNc9BtzcR4iXe5Cop79qrFh4
Fvb9d9TyJu6zmBtCyzxOssF5m9WVradw/13m5356jQJ9s5BnbIR9ob/yrE49
DdKD3tuuxvuSbHkcxVyhgyFN2HQR++QB/2PB2/PmYMvGYe59N0k08jSjp+Ao
ngdaLWOkWRz13Lzz6tdRBiyR/OtssD9aBd6J8u7iANfpyRdVQ9hv9x2iaN8Y
hxS2bw+XKon+dF/T33uYCT++3eu82S6OCvRsmTnDmHe8gqucTAnkbXSi4+wS
DcZv9xr/68P5wlqdvTthBnp0Iu/n5RIopUgsvVBrBqaNoodTcD6FrS9cpjsw
Aw9dD+4RSBVHA/9lLTZsngG1sHzlQjwv1G3/msdpDEhZr6j2Z0kcTVUlSu7t
oUJpvdU9z+94v7o/3OZZmoHV/Plq0c9wf7F5RyjrKWCry/VV8jzO00Z1lb3m
bHA39i+zviyBSLVzxUu4H9kFuWKu8iTypZ2wy8f5w9/GNCt7TSJF/0Ftpy9s
0L74u1wF9z/c61TPaZsA6Qpv9xZdcfT2VaUw1y0GOPm8FTy+SKD19N3tV+8z
wKPq8MZbPAQSfth4PdkI+22ghHDLSQIptvLKOs5QIMYotSUMn8f7DD+LLTif
juwJf4ECSZSd98gjYSsD+AUCFrKXcP5kPTnUto8Dw6GPjY12Eijfw1l4GPPN
jQ/njbdlE8g2rJDuyaaCs8KOEDcjCdSUwdN2q5oG+W76Zwswr7H5MpzabNiQ
+FJcv/genvedLr+pUyyQ0Q4yTsF9cYhof1YaTINTc5RdLvjfk3+/LXLfOB0U
e7dov8L7mGK15uq5b0wwsJbPvojzUGmjMrfmLAPC+QIuzxiSKPe31M2Cd0wI
ZyP5q5jnVfe/9vg8SIM13nSJNLy/mlN+/adrmMBtduBEA87fyw6as25tVHgS
dMys8RyBHs5wt3K+UED8T1YsxwU/r/tg1erEWdg6ZBnThXla6q78XlvPSeiR
2rQbML8vWHU+E3lKA/t7i9V5BiSycHPO31mIeX/vOc9o7J/uRhM6Gaaz8Gx+
ZLZiCPPCiJNz1n4ahDUY8qzGfXGmsoa3SZ0K7p/tXLevI5HxNnON7SUU+GET
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
6vNklNMhSuy/fUy8X/8DNfQyyg==
       "]]}},
    AxesOrigin->{0, 0},
    PlotRange->{{-2, 3}, {-8, 2}}], ",", 
   GraphicsBox[{
     {RGBColor[0.6, 0.4, 0.2], 
      RectangleBox[NCache[{-1, Rational[-1, 10]}, {-1, -0.1}], 
       NCache[{1, Rational[1, 10]}, {1, 0.1}]]}, 
     {RGBColor[0, 0, 1], PointBox[{0, 0}]}, 
     {RGBColor[1, 0, 0], 
      PolygonBox[
       NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
         Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
         1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]]}, 
     {GrayLevel[0], PointSize[Tiny], PointBox[CompressedData["
1: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
       "]]}},
    AxesOrigin->{0, 0},
    PlotRange->{{-2, 3}, {-8, 2}}], ",", 
   GraphicsBox[{
     {RGBColor[0.6, 0.4, 0.2], 
      RectangleBox[NCache[{-1, Rational[-1, 10]}, {-1, -0.1}], 
       NCache[{1, Rational[1, 10]}, {1, 0.1}]]}, 
     {RGBColor[0, 0, 1], PointBox[{0, 0}]}, 
     {RGBColor[1, 0, 0], 
      PolygonBox[
       NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
         Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
         1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]]}, 
     {GrayLevel[0], PointSize[Tiny], PointBox[CompressedData["
1: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
/wMjW+Be
       "]]}},
    AxesOrigin->{0, 0},
    PlotRange->{{-2, 3}, {-8, 2}}], ",", 
   GraphicsBox[{
     {RGBColor[0.6, 0.4, 0.2], 
      RectangleBox[NCache[{-1, Rational[-1, 10]}, {-1, -0.1}], 
       NCache[{1, Rational[1, 10]}, {1, 0.1}]]}, 
     {RGBColor[0, 0, 1], PointBox[{0, 0}]}, 
     {RGBColor[1, 0, 0], 
      PolygonBox[
       NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
         Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
         1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]]}, 
     {GrayLevel[0], PointSize[Tiny], PointBox[CompressedData["
1:eJwVmnc4lf8bx+09zj7HTJJklEpC8XmKhCSRUSIpiiIJSYqGkSQhJLIqfSuJ
pEGe2x5ZCSF7773n7/z+crku53iez3Pf7/frda6z2e6qiT0bCwvLIDsLy/9/
VuYeqZ9OZMe6XL2nR3rpIPph5PiV/EmcUHBdJuAfAXikjtxMuMCOkSq/HMHD
SRDQtzLNGTGBlg9cFovdSwRjzrNZXsK9+L+pRaPo1yLwqFVpW5jGAioq2bQq
a88NTp/HpKq21SOe30F3C76KgJXlmTshLDPIq61+0KuTDJNy4tyciSwY6d9i
YkaCKBRoSd/M5mTDPk/PnvZfoMLtoFR914IpdOeGWQh2jwy7bPj2tAqPI+2D
fb/YNxHBKrkqrMWHFTsl/sSzhIMObu+ynSXd59B0Lt/FCSEa2Ha2OYWWj6GH
fL3plwzokLt+29hpdhLtU1sSUBwjQWHMBe1KPl4sedtG0kkQApkbdy1GrvzD
311Nbl97SQYJnxqHSyXzyPajXr5LLBWKO1+1ybpwYvO6WNNwMhnUVblWRzr7
kU3b58S3rxgQe07BagSbRAY+Ow9yeREBUg95nNrZjX5waGsk8ZAhsnp5LrNl
EB8S+biHtpt5/6kjLGz87BjNz3kKfyoM16aJ3PoOc+jv388XFQzIUJBY5Ggq
349K+MWu63hToN/3Nq6rM4gM67TbIohkONCxNZbbfB2tN5dknxVigOjjaSua
aC2KDdflbM8Xh803mh4NfJxHVRksxMF4Coh+5Fma3ceOEe+fkrCNEgXZg4W8
iZKDuGXNHOlsLxVC1TQlMnjYMad+PuXd88Jwxm+6+/LQGO6eszyW/0oYfD4a
VmbZt6CXUQFp+2VEQdzPtTQrhxtTOR9i+vQFGXrb/DYJFUzjee1p/hFpVKhO
rD9afKIBSdzmbWc4UYEQ7inkGMyNsXbEdskeI0Kzts4pKalV5K1a4WP0SghW
D5PlLo9zYK7fT6SnnhGFe6RydyTNisVQtyonqdFgdOiOHUfEOErle1L5zooG
sW33gnSyWDHp0yZLciuCoMl3T5xdfQU17r7422SOAbnqgaMuBqwYXacmcLs1
FeazTrhfmebEvGSN17tPiABB/3bW3s19qGc88fOsIhGCBsJOf6tYQGOWbwus
vBhQWyNSbxrThtR39DV/fs6cJ7TtrZLlO9x1ZcAR56VC5/FOaEtrR6kfKSZr
2nRAw5WMM7QRZHn305fP6bxw6tthDyuzSURmmDUcfk4HQtNChvqRH7jsPU6N
1B4B4LvS0L9jaAPVu7HQtq/TgFViOdV6fgSl+ev4XihggH4c/Sr9xCJiP11a
wfqYBk6+TRvTav+QwgA9o8FaGHQ9khNLvy8hDo/g9UeneSBqg3hCVXwYmauJ
1/2+IQpqnTGPFzJ/458CGGtNv4lQK6D03/TVd8hmU5mhC6KCp9rdrfLtf9E1
GHXlCqACnSJ80fe/efRYa5FhUEiDydrXOxJX/yDTH5mpumwkIJ8cKmJIsmOx
45piIbncsCC/1O6cPIt4L6gXCMvSQLHD+GFqcjceHjsVXXmRCO5mITt9vgwg
t5aV+2ZXheHrM+5naYqsmKrFqOcWHmH45KC4aKwygP6ctPQXM6FDTL2Af8vB
RTS0rUuqAdHhzK3Dm5AWD5bXy3kl+RIDPsxkW/DWDCOR+8EP1WXpsLgr43xF
SBHusbzEYzFGgOTuy7fWlliwW98qNFnCCWBp9mrx84lm9Fyivv1mNxmq6hqd
XyvPIR+lBzHDR/mg87b07pzuVnQ2i6/4X5I4XHGrFqXsZ8UeGy9G6dFoUCDV
Rjuq0IZSvyulHH5JhfPCj//YP51DnW/jrzWakMHzznnXyLts2E3OeVQ0S4Xs
h4SbBvPDyF6q57SqGhn4vapY+1unUADGkFzvE4KIn6sVh7TmkcqY5nPjLzTg
f0gmhAqMoBjh7xFxZ/jAajwywB0bQcmdawy4SYXF3Uf2X536g1fb6ch8mWBA
9eE4ucbWAVyv8fi1rEN8cGn7ZUWto2X4cYlT3DUjJLhi/Ckxe7ENZTVo3TjS
QYKI77/tOCRZsICBuMskIyqYk3Q9tx+fRGNqfg/eshJgs1nzcXYJFuzmNklW
WxMhOPHhg0l+cR/6PfDpaUoeAQgyJ7OVBkZwwlF7s10JVJDTfX7CmFaEW+ok
ru5xEINEC6XTJa/f4yUeDxXzbpGhyaiOt11+EflJCqxm3RYBnk9u77n5fqNS
pbsL3rMMePNo3wLNbx0xOAbvuYyRoScmsL1XYgxN/ZgL96URof3OSZJvErMf
zLMunVGkwcXNma2buhYRq6GXZeMCA7yTK6i/bFiw/Bg/U9FAKlAf3NXc4zuL
Hty+1vHnHgECLt1Uvye5jPiUTt+vluaB3ONrBG3HX0hKOUu+dxs/yMeFt3yv
H0O6M45LKaeoEN06VpDuIoBJLZmKGLzkhzNN1zEWqRG0d/c5aw1dQSiy3VC9
JbiKlie0mrhKCOCn4y5T4xuIfxpW1EtP4oP2Ed7ZGaN1dKRc/x53JBWkf8xs
l3rEiu39dLLZ5Rgdhrdk1N/9O4xCvSa/l2IUkLkSuod+gAVTtFmkKj4SAdkt
19tS8tmwi17v7uN+JJjU0y6Q+DKHPKqpwQRBEnDFnveb+ruOJn5UlXyyJoNf
fKM1Lv8FbyK6X3b+y3yeLFWPRLWmUE/TTHZfPnPe8V2Liq9H0AGNze/On6DC
u0tYic7SAnK5TnY4vUCD3D1N3kv4Mqp7XpEtOUQAFieyR/SKD87Hb5XSfYkA
xY5jtUHtg6hrWfHml24aDMUcpWcgFkygibydS0UI3ibbWs2ID+JJe7gMV10E
QODlww8+f6fQ6X5tM+U6IrQc6KqyFBtAki034LmLCFi4FJ0OzptCdo2VnNKd
JGii+sSFjeYg9+6SzHFm/3mN8XU9cxtHP6q2ft+bRICD/twROWcH0Zbb2X19
8WToHLoYHO2O471vqGM6aTR4dbu/N/nbGgoY3KcSocwN2a08N761tCLzCfG4
e3xE6A83dXrp1YMko4/tTjbhgrwrDTVJjBk0GbVNVVGNDrNG4VqX7nTjvbbC
Hw85EOC6Bi+FpMuKDV+bDiwOpECicLfO3NVs/KKmc5T6K0HwShHzfjHEivW/
NC/2eCsAiU+relK2dqCPm1Vs9j0gw7KCmNGLE1PoFJcfI/0JBbgOH08Pru1H
J8UWyP8l0YAoW9E0ENCH2pZvVdu8IYL2NUU9IrEbCSo6bFkSp0OJRPWNQVtO
zEX4jpniVlF448WfOnZuFYVXGHvkfWa+v1OljGl8M3o5Z/subpACUoF/L1yb
K8TrldUe+SBR0LvGaTHW8A1d8r3WPU+kQmvJr3d7F1rwnD+4kbkyBQo2H9/N
3TSPvF6/m+hDrODwu0yypZMF47mvVnTnNwWWR08LnzrZgAhKNfUuumTgGftN
t7m5gNR9TCw+pIhAIlvCi5/X63BPIfI2syYqvDFysvLNnUY+aTdrJgwJ8Fyl
ePOO9HVUY/pg5xMqDcLXeDQVfg2hrJovGec9qfB068C3wfRJpBpJWGOt4YXF
Imcl58QanPOZWx12gwDBVZfYtZcWUeSFameFTBK4xVZ9E4rpQR+OyQcUbhOD
ONsnQewuvehDz8rn8sMUaOrl8ml7P4oWNGx21F9lzvOTA5rPjs8iC/f7GtnP
RSAY3TMxvDKJxs3uHJZ1pUD3huD7734s2ItNj3W4A0Qg5uqlqJXDQ/jlNbF8
S0kySBvHlIzysWPG0z1k3WfMfpcrTpT0mMFD9rEkci2LQehj7Dr33BJqSyXv
pr0lg/JPWcrn8/Mo3yi7QziFAeFyV1+e2TSC2oMCS19EU4Autsn05t8FZFs3
oZMvJwqS5+pXg6R6ET2JZLijnQqq2yS9gvMXkAXtukz6dn7w6em+XWE+jg5l
Hx0SjBQAytUEYZevo+jlyO/zBlclwVz70G8oWMDrFZvdmouFwOzVDZnu0FXU
RLe2tHlKBhlSvYD1SAH6Yp9QsYufBnVzmxMOMJZQ8UUO1k2uNJg+NjuB5Uyh
hn8WVw8E88OF8Iz8qyEN+KL8Sa+mOhLI3sVUORJq0fiBrgbGMz7IdLnDvnfP
JMod9vy2LY8CV+77XzxnO4cK3L5feRjDC4bVzVTWwyMobjSzTX1DAN7fb5fY
+LSCfBTPJkQy8+7TU5amKpN19N/vMsNccWbevf+B/nStoICpxF+fpKlQtLZV
PJZ9BJUcnDZR3UKG2ld64aNyeWhnfuIZyWUSTCVOakzSuLGtjzvkLDP4wZb1
TNmSaSEeCb25fUxfKBlYS94Ss442JapEGm0ig271HsFSqTnk1GRMyJSgg055
Z3oisR7PVT7bZ2ZDB1k9w9C65Tk0lPvdRF6ZBvPsX/KfU/vRgN+o6fxBUdAe
vXaF/wEr9plWtYMjigCnD4ZcQ6KziChtdM3pBQP2yz1LVusdRmeUtdr8r9Hh
W8dW13XubOTnufNXSRkB0rq83iZMz6FyFYuwE0oEEFoRijQs7sRLVpyespwh
w45/BtrtE3xYm3X1cvtDEszbivf/0GtEzb+uH7x6jgxXa50OH8AW0afRx153
mPuwqVmIZSqUAxuz8FiPeEeC8Y/lWv/t60cLD+qjD19kzrvw/WZfwXJkqL1p
LVqeBtuLq4lSeauIrfi1gMJxElj+q1Cfk2TFRmnpxhXcAlDLckdrX9YCarib
cd9xggKMQ313bgj3IcueE4NpTN4nXVjTCPOdRN6DLit9Y0RgJFvZ9m+dRpOl
77sl2gmwK/OnktGzKWT73m5LcrIgYHY2ogVbo3FOLr64N5+IsEhmX11tq0Xk
9EXOrEoifBhYt9GXrkRH17ZGTlIo4Ks+7RGovIIkPb6XObQSoSN6MUwrj9n/
lv2b6pj9c+iHrnTI8zG8OeDrN40qOgRUBJeU7htFrfeMH/Fvp4Hym5/1EyFp
yJqvS2PnYzpoZBasSVNZMRZDiLQWIIPh2Qex53lZscr3MljMIzLcvKpQIm85
iqYfiYcZDJHhh+vgia4sFixzs6r8aQcGQBadPTz3O+5Ll0lha6eA52maiVEr
G5YRlaD8WYMCq33h33LXWLHifWyK2TvFgGZ/2uyM9BR6fz9T8sY8HU6XZYVl
WPXgJ2cYeT8OUYHF4+VgMLPfA6Pw1zoyJOgaWagwtZ5DY8dlc4PSmdcnulw0
p8OBXXpFpPyMo4H2TGGjwdlhZKLkxHP8GRleJKaFi7KPoogD52ZdnflhtnG+
qquWHeP6qhQ4l0QBh4u6X0x65pCW2Iqh8Sof6O3rCIifGkPmn98rBIXzgXSh
9J/KVx1oce/pyunnFLAUWFR+KFGLKi59+F5iQQA7h9xss+I1pPnn6riYLRe8
w55LChW2o4HkIc8CshjYGo+68zP68fnSv9cv7mMAClRMTwvjxmpUE5T3ypHg
/PwvdjbVSSS6O7q7dJ4E32yDOv08CtAr2h+lExmCIBT1H/moWCfiYHM5NpnA
PH+i3v5g+jLSrLe9xsk8X+3LN+r0mfl/fq1n9+NBKkR9FGHd5f8PfaP8fcGp
ToML8gJaGhR2bM57d/WBQSIU/ZIbnXT5y/Qnp+naHCEwvGW460tcDTLBk/b9
jRSG2oajcZZ3q3ElKOIoIdKBcYGg4Z0B+PRBO9PTL4XALyWm5knLU1y0aXvC
NW4KRNnUa4/uWUJPpOJC20JoIMcq8fr6Ujd6xpFRijaJwqLNuy1r5ZxY7sJz
Czumf1quu9026OLAjOUIdm47BEHq9VFnlfVhFMen3WR9mwjdWdH35GicWHf5
uNOmQEGoFmJPuRXegMyv4jdOrkrAtIbjFcIIC1bRXKRFS6TA17HVQZOzk0j4
1U/9y1U0CCPdOztl14XMuJW5bjeQQduPwf7JfgGxjBddeVZFAvZTZ5TFymYR
uW8jwSaJmT97nUZWl1eRLtqtIp1LAC4J10gDsiD2O+g2BzcH0weyKRcU7oyg
4OLIoX+jJNDdnx8RMcWHxRW12Xx5RgWV52UNpXtWkPu1pNZ5E+Y8sWar/9Bi
wSDpuwHiJcPL/oPCbfZ9SOaHj7vaERH4pFEm7XmeFzM+cQy9rhSFsw4Pj1bL
TSGHW5btxf6iEDXg/KL+4SryoeeQbjP788dhI8cd+zbQbObWC25MvxQXyuOx
u9eDQt4SSXYmDFi9SUB3o8rRnQqPGb3LDPB6S9TVvDyDn5fPbL/1hwJFPitl
vpsn8Uz7DBaRaDKYXGUvvO89h/y2eXgb7yCDSq2C85vBftwzyNDU9hYR3lly
jUfEz6H0B0ocXwYooGXS3Xzv/Rw+uXPCr5KZ9x/HBFmipVtRZtblM2EKVNDb
VXXrzeki3Jpl9w/PMAqQIqZ+vj7PjV0bUWSvfcgLlM2FRxf+LKG5CpaYKRUy
OKXZz7eLjyEuCyX5qN8EeCnOyaN4YRjJyuZ3XfASgYQohwc6R7qQ6Su+VwcG
CGDg3Cs7if9GNe4nI5xEqeCarGkr3buM+AWHDjyIFQLlTWosUbkD+IjTXpvh
F2SQtNKz149bQQfn45SXD5FhdedTLvYXfUjk0sVY1wQSHHoQf0f08wgqlTq3
6sFJgx6bymyLKytoG5eaY5QL07/m8P71fwUoSbll4BJGBNnIWzzTBlxY9N6X
vXO7mX2xtVYv/gELti22z/jyDir4vY86gdrT8OfFz7JGKpn80mZgl1LWjw7H
7DMz8GfAJgUbS6vDPFjlQhAlo0EAPg9KvCvKY8cObHIsXognglbrddv6f3Wo
Lb0i9pwPM387HLfoq3bjK4LA88uJClpf1UO+7fqDqtM/5ImaU2C9Rqhtr/Ao
qg9cuZJ3WhBC8SCLzUPLaNRbbXXxNi/460c/HAsaQY5hgR/dI4iwd/9+h+eB
M8jgVrPqMpUKX6m7+O5PD6PejCTnnFkeiLySohxo3o9iN0osy8OY85woRbO9
O4H8gwWNx31IcEPX9US44yxqUT3tf+QQAzoxPVN6fDsKOXI+9vUjEnh92Eyv
s15Biu9rVjjpBHhQWf8mk9CIV+RtE61SFQQN/l+V6z5d6JapfXBZBxE0vLt+
G2jN4YJaHvJDrMy8qAwW1D4yhPioCqyDTD9xyFP/bfBuGT1DmnU676kwKu3Y
nP+1Afffue0SkdmHDto8SaUXV/DHu/Yc+l5Hhmnf3P2+QzNoV3aNutcrMuwK
dxWPt5hFO6bDsyx/UcDFac90hdUUOql04CItlAGylDRbbvEW5OapyzVeLwT6
E3YbW+u60Mkw+R7VDQJEGpT/9HAqR7H1OUEhTH7fPR/3vcBmBlmUyTvJTwnD
eOMKN1VwCi1czstor6VCk1XYqTe5G6g0x+ShdRUD7vjQbSQPsGMqjarGWYMM
iLm4n8dffRp1x33rhD4CvFoaIo78qUKv1Af8b+0XAy+S6e/Z/0rwxWPtW0cP
kpn8EtXxz3AZbT1ih4x76RCr+s7SJHUOfZB66VZqTgW2nJw2+X9z6Cpl+3zM
NgZI+tKeSvGtILlXEqS/glSYvEm9wdvbgJbdgr5WCxLBeb9aqLbEPIoxqdO8
IMycn2yd63L1c+hJFOs3YBGEOqlU2wHHGaT1pnAkvIN5v85W1yRrB5B+AyWn
O48BZ/4beSz4ngMzm3e2bzenwXJaoNHxjF40bizCd9CPCi/LEoQ01VqQj75W
6i2SCFRGKqKtsIw+b7/a3PKRCJPaj9u9LL8i6bcfnlL1aZBndTTvjdoc2uxs
l+7G9GsCCWKto0dRanLU0Z2eZFh8d1L4knA9Hteu/8lKlQhB+qVSxyVx5BjU
7IK9Zv79Z5MIo6QqlKHwk+tYEQmuVJ9XObuzHQ/Q9ixNQESIOsyfdFiMBxtW
iJHhY86ruqLy8g6WNbRF1cX/vQcNXv61KDqZ1o9aPKZivnRvgrcVzxoE39Ti
urdOdsiaC4H1+EU27zJW7Ga60NXbzlRQNo4vvaq7hPSOcMxHKjH3//aRUhWB
esQXaV2VyCIAQQv5hg5JlbhY85LAdLow+E00+7QJt6Lo3bs0b7bRQNT0QxEH
5xhK5v1vlMrO5AdKikSDchuem2XtkfNaGK5nWzNSfo+hFwbiZfwqNOhV+RPp
FrWARuXKWZ4skmF0v0Ba0esepHmjTfSZJAXeBA519LtM4tl2oUlFykS40rHp
rGP+Cjr581dDUiUJbGMyb3GyFuHvVHt+8NWJwLh5ZWSt3jSOhLu7dNmZfCGb
e0VfsgIvO8g+5NguDJF/T4rsDJtm8ov7oz27xYAlI4Lrr2M1euBzyGQrDwEy
t+Jpjc5MHhSxCZA6RwCnq7ffzehzYmTr2vHxnxRwd9mF69eXoSX75DHNCCYP
CUhqPRdbQgO3x52qhSiw6DWSPhgwgYS1XyvI7aeCu6lm3G7BBVx+0F+y3Fsc
FsXrzZ4KFuPivNuz4yapUK9WNIiZ1qLQc6KZr1rJoE7VOtm2eQkRdy4uXdHi
hDDF4lw9vAzPvrVLIrmJHUae7XQYWFlAGtPO4fI+ZHBVsoator3Ij7X+aOsm
bjDc+ZD7wqlVdGxHRdcy01etDEblXaJ4sAvkUIPVRgJ0jks3CcbOoXgWyWGB
LkFw9mwXM5ToQ/IHJgrb4ilwtUTR+epjdky4cFWw/RfTz5FMu8beJVTVxBPw
nZsAyVu2tq+1zqNIq8tX/P8/H08iFGN+dSKrfwu1snJkEL2lfrtRZRL3uaP1
/uBHKnB8dvv716MThThOlpeMUcCYflNRXmwOtbBfeVxvIQBwoDww/cUkuj9k
fr3jIgV+ZWvHNcrPoyBxNqu2IGHI+Jp0hCaxgZpEdl78+IgP3jj/GFJ1Y8GS
ELWeizk/bPHhXo/k+vC2ZfKFASoN9tUrn+s+1oeEQ9iKkyfIUD2T1PgmfBkp
XI7inJ1n9teepmdaC3fxqp0fXUoXqFDt3lsVJtGPtgoNXLAkkcFtWaaay3gZ
tey4fdPIjQjGdluJB0/j+MOm+hXBq1QwFhbbbcrNhvkUHz7VL0wAb/OBX3qS
XShMU/aQxjki7A95NGqzbR5ls4X7KpUSIIhV4lStKOACabiPZwQPnEh8Y1J/
gguznFcPmiXSQH5vgKFC2zria9N8ndElAGf7TnY6sk8hN01+HQxJgGXIsv1N
zXX0R45mtJNEgQ9lNmZ0wgBS8zzc5MfMo6nUyT6GqiB2hSXAYJI5f7Xy3fto
RBz/ss+7RcqCBokc51ydr8+j0KJh13VJGiQbfONwn5nA9ZR1x1WZ58Mgqey9
f6kVFRA8Zz/9EYLdfjcSQ7jmUYj7XWdzDSFwFU7rvU8qRe9GxO3UTtFhm0ol
54zKGDodo1jyKo8MZnrs3CmnR9Bz/b+Gz7aTAPOcV9o+8Ad/MxJbzz9OhkcV
MXdc/s0gdT3xPfa+ZJgV1C1R+N6ElKlHGwM6xEHKPG7/54qvSO2pycK+ATJE
q30+YjU3gK7E8uaXevDByyQKV4PxODIyaWqLDRAEPav4J17vC/EJ/NDGgzIK
vIz2bqlvWkZSFctVPR3MebxgV1Hr34t/u2AjGsXks8SX7vo77apx6/xphcEU
USgiSkzcf9WHXy9+KTJTKwKdnXe6VM5X4Y0Mi7mIGSJ846ktPebBgknuyxTd
OE0EwqHJju7HTegCy9nlBC0RmPaeevLj1QgKcBbeztnBC6em2AqSVZaQy56O
px9k+OCTsnx5vuZfxN93ILhGigJnAy9FEYK4sFeveKLCmPv6R9t/It5iETme
L6EttRLAraJBYu1YF6qd8NK69ZoGUPFlRG3TJK5cfvX28R1C4CB85NbNF43I
4aXaHuO9VNC47JrWrzyDDD96/9wdSAQeOfu2K29YsUCZiL1LlynAci8gkm3k
LOr973Pi6SckCCscni7OGkM1H1Yy+1Tp0HfolzRJdgZpU/2f6jL3obAp2Ghx
cR4Zhk7W1MfQ4W1NQ0DPIj+mshba8+UrFRK53/OLvRhADWMStzzGGHD3nMxR
j03riPNHzCuxNGbfl/6S4t2xjKQ3ftv4GxFAIfXYtobyZVRlYUZ0HKeDzdFr
rqXF7JgYq165ehEZKgI7LxQEbSCtPDGjSx+IoP3t5rWUyHl0k5TvtLmHDqKt
b6VSJXtw3kdxTn6TFJhLfzcSvLGONOYGGyrzBUHZ3b3rSHESGrK30d9TTYXg
SWH+8Z1sGEfC158ikSRg+ClPF9pN4UbvhTOdkpj8KxXwbZ1vFm/3/KayIEeD
uLSrmpa1vegSMXLBep8w6PpWbUv5vIjc7PS8BcKFYcJy2HmZvRfdviXGE/Af
AaI55EMj2hZQgs7rUgk3LtD6OCv8iTqHNLYfMpATZp5v1beF7svpiEDXDrWc
F4efcNtDbc8M4jq00+SkGgWAm3Xw109WbP3Mc2Mddhok+e69pZS7hGp0pwoL
/pJATGTq74nrvJguf99FwwF+eHf+whvFnQPIO8j61jELBnx7tGxHeluKJ42t
H04dZcBg7cOJ+XcFeE7qZr6NFm4I+NiXRNnNjgWg9J07GaIQl6PZlFfZinOq
pJimp5Ih4F+hi9WpTlSfxNci81cUTEdzvjn/m0bCc4/S0qaJsJtm3L5LZwXv
9WpvC4unQeiNCOWJtVo0UTohUrSJyXsjH38aagPe/Uf9jj0nCRyKFL5+v8eF
bQn780iFyZ8pgnWjyf+xY0oEdlajR6Lgk/aAfs7tN943JdUZdJO5TyOTTo4f
KtAOQXGB29GCkC5utMUocRIFN/SVSaVQgNB346FcXyHKvpQW/MKQBn4DfKI1
kr4oPPlpUeFOCWDtfd4qcbkfOedheO5LbsDv8wBPbh+aS+80WWD6XfD73qLQ
JC7sqX5XhVMFCQwbYrSPonb0oLm/qFRJGNa3+5r3755A5nrh26adyRD34yfH
dOMcskxtTvr+kwEQeXRxkOnXjNujd0tf0IDn3f01rf0jyO3Kdbd3unRw+mL9
1CxiCV05OFAj2EwEtScWKd+XmP215d6pzStUCHnYVlL0eBUpd+o+fZYsAl9k
73za/5QVu281/C5IlA4+7fvb191m0bmlWomwU0SoetKQce3kLFo4eufxlD0R
XLnNT1CTWTADgeID80cIoFtvr2f1jxUzf7dtjNWZD2K8TUwlvacR8fjOqAwd
Ckh5fEiW5p1HH/+NHVsQFoS0Ch4G7xd2zOcFl7KfNwkudPC9HSspR53AZ/40
hgKp575rfg9bQjcv5KtStxCg+KQQ2nN8CW1QPNsH1oiwnG3+Y3VpHT0MuZa9
j7lPtVMatFjWctxpK9sa2wMCFH0QHzR/WIxoDUKXjLPJoGh/bjV1zzTayvnx
zEEVEuhEhZzbE96P2vax4dp1FLCwWK1eaRpFaY5/mi8GMfdvU5GtCYPpG6qh
uxVPiUBceBfZQ6UXjeVEP/DcRIHjNkt2n8K60ObR6+J7Kpl9PEjf8v/PJ/hd
k3/JPKMCy7Kirn35Y/xT7MftLWZk4O+g+724PItO7xX/rhAqBvmxpvtCGNNo
avub+loxCnwqP3xGdOELzqfzaHAoXggad1DGRLznUeehEycCj4gAkxJ5559P
It9wK17vL1QAnRk+6eBInF0hQT3XkQJvRyHd89QcclQ0KyHJMcBw+HWy8N1J
hOwyP93OF4F7ifXNjmfaUH/Oxy99UzQI9Irf+35iCIkfdN07GkYDK9n5jp87
WbFGn1/7274w+XXNOfWFIDs2c8LvzUcyEaS4OdzK8U8ovPFT1x4tAbDxsfRQ
SppFF02uFm8+SYa+pnWxm6KdaI7VcanZgAA3b7xtureFF2vfPL6UyeQrqXTr
krs7GlBikaLf+SYqfJi7XFn4tx7xVmjzGNYT4KdOsPGvdk6M8i1N/XSbEHx4
J7/nGz6KXJ0J6X8u0uGBsMS1u0x/XjHyb5k6RACbJ0vCMTfmmD5ak/YrXQBa
7y49MQ4cQ7umDmVpyhEh9VjLpwNtG8js6UDaXQFR+Nazmat8hQvL2ntcHXtF
gfts9K6ED8MoO+rm4/M6BFAhc+r4R06joRbVP4rVJDCvf+XJyi+I6aDxRx68
dMhkJ9w7WvwHnVK/+S88nQYsnioCb2wWUZ9meN3p5yIQVG+pXzFbgb4Vhfil
pxOhRdu9/ZPPBjqYYR66Y4kGw8dbT+Z//Ye4XxuILMTzw23CGzXL3hk0MmIR
mTpCAQeWJ4HDMT2I4+LX7WNMvyubzuUL/ViAGu20/7ERRSGn1JpHjZ8XqwfF
mp3rZHh+qJfyxG0BXeweXZyI4YYrxCTzJ5fYMYG2Zf0nVClQzpv12iE7ic4E
TSiX/yNDYwBHd3xlPxLUODpzOZMOvYOVvYEtSyj4VNbAMSbfdO9R8L4qtoys
K0KFjaIpIM5Q0pM2GEIf+Nb0HvjTwPKizdeB1kn06d+Nzt5ECvw9w91i82cW
eR3Eb/36TILnrgf0ZuOnkREBK11s5IO2/W/tGiIG0G7ffaspC3Tgsz9fwdg7
gxTpnxwePKfCfkvf82+Ps2HXP6vZLjXRIdLfM2vUiQMTUD569NFmCuy4QEjP
ezuJjtZsSQj9SgJdz7pQysgAerNv1u02Dx1OnH6yPuzKje02unNDgosAx/e/
oVyeWkXOFO3y3gIycD2K5t82zIPF2CqkHBFigNKmEvfsKW7MXQRaE04Iw9WR
vUr3nk+hFIdyTfduOqjKzcdhoWyY5pu1whNRNFB+VLknRL4B5bxhPIZ+MiT/
Tc1T5phF8Dr06oEQGhCv+8ov06ZRAk5IvTxGAypPh8/4Eiv2Lp79fmAeDfzH
ikYKtvNhl7+cL9TIIYO+1gOXTeIz6O2OboFbInQQGEt6WbG0iv4OSSnxlpNA
9L+bQQ/KGlC1gH/Uq+tEoMx3+Ni8G0BOpJ8DsXcFQedIPOeM4jqKV3lzR9+N
Ct8EewV9a4eRyonL+ncHCfADU84uLV1CIWOumRQ5AoivkF8pi7BibEoBtnE7
CXCPfvRsqOAk6vz3tuixGRXmMxmbPhzsRTwSmqOWbMz+klHjNFJ+iGfErs06
JgqDVP6jlgfDubhpiLbDs0USSF/5pSp2gBNj23zs7AOmH2i+aK/VsZhBcekX
SlSzmT66GxvferMV/SFobNOKpYNsn9py1d9mJPXDbuJGjAiIfY7S6fw4hdpK
L5iqbiKA3++ck11m7FjB47NuSRkC8CdMtoF8jA1bVeHdsmZLhjrj6Ycy8ezY
3Ii8BXaODoWPYyy+H5tDF7aFqB4XE4Lb/Lt6sttm0FiBRRnniBgYi+ub2cex
Y1ZOK2RbQQJA9CJr0SE2TPY0Z3/3ihhMhrIJL277jr+N3zHqHkMFGySe/vwa
O/Yj4vwlZWZervzWkfKlsWHDh6siBjE63K1xPSpvv4De1lfr1jH58LGWVOql
5Tl0VtBWODCIAO4Omqce/x7Gvx11bFDmZ+5nVqZHrPokUou6/rPtEzfQCnfc
PRjIhdn/FTZfHWbmXe/Z8xusM6grLVrrNA8NTlJCWbMVGlGVmZSXI7Of9ii8
YrP25sEoAXd6kglisOpy07PQlR2L+SG3CV+hQfyfYjnDsyso8FvI0MQ0CWKO
9oQ881tH2XxPLG4x+0atObN99CgblkvUazxpRYQ8MqeQPMcAKj+ll1BmyvTp
G5/jZq1Gkf6w6PzX66Lw1TVppNN2DCWlnT8odVgQMiPSb8+ZdqMnQv+Zph5n
g8L6Tt/Yh9No54+ic9eqyVBfkXI44O0AcrO4IzOlRAPjelnemN9cWMKrcN9Y
pm9HWbfcezOxgMgXjxGv8TF5VTr3mr46J2ZC2mImvocGYZsEqkW3V+Ez5Xzy
9poC0NXz6jLNaQW99xlzf0+ig6TUlprmkj78TI9CamUYFfpdqkRxxQWUkbcc
5N0sDt43uVJ4A2qRZoKaUYIsEZzGkk69Eu1HyoJKyX+lGOCtUZ6i/IoVk7yo
/S0nkAyxM7Pbc4Ka0RlrQwmPRT6QO7fZ06m5B+d01vjl6SIKi685WfVKBtDL
v96ynjVikEbMW7yZ0o+Mz2ztMTlAB+Mc5Hr+1RxSzlYLTnnOgK2Gz+v4o4YR
9o+16Ug5AXrrmjrDr1Uh4t5D+ilMX/FzZ8G1n5fjSVXvKWMDVPj9BLcPutCJ
hjTLP/IX8YGH1ymeBIdx9PDN37vYcT6Q+W4k+1W6Ft8R6bIpul0A8rwDvBQv
TiHdMsfOAjY6LK7m36LY1+AfkT1rQj83LBbqnRy0a0fd+pEealcZILDl5mQl
Pouk1rZsXH9Eh4Iu84y4BS5MQ3xt7f1XInxuNItw9J9FvgGPO130yDA4Qhfe
adyK0u56VP8bIwHF5Hjz16+lyNSn58/HLWRYvgH/PQybRZVDj5cOG4kBz7a+
SrFrHWhjnJ/Dj5l/TQ/OJlQxn69PSlTZpUUR+BCU6LGa+Qf93v470nmKAlr3
ssf8Cpn+Sf2Q/CWDCNsQpuPo148eCrbzHHRi8sYFs+D/uBaQTa3czBVzOiT6
2yahIyuI65Zr4eRvCnBJqJ39L7YLMRS/xMtk8YJCVK5y3/1hxHqJ1WJ9gJlf
tdLt5g9YMNoXw2SeNCLYfP898aG1C00s7xI5kUcHb/KusGY1bmwbx9pUv4og
jArGU3y7unGZzTcg8pAIYF0XLgQsMl+fVx66+QMJwvEjT7FCNuyCqVuSrzoV
XgWwPJBZacTVbhXbrlUIg0CaBHxVZMPEaiV/aLQRYUl0m8K+ykUkJfdmLvMz
GVrfuXH3YnV42d9W8mshMpg2Sm4V3T6H7tG/BOaOkED51cHwlnc4znifMqtu
QwJXuy8Xr9Xl4LLRctEJV6hwenNRs8vPcdT1Z/zGlWgixHJiDqNPB/CHXz8+
XL5NAsCCS+OOzaOQ/R46VScJkBxw5FPR5nX0++l4pfEPAlyZwjklNhrw0abr
UqXfKRARc/NBzvc59OjlOXbf/3+/KfHpRaONbnS9wDP4NXOePfbVLR/WZ8cI
l/7aZN8jgOgz2WtJZ5n+GLPjUflhAngfXWt9Sx1EjgkBIhE+FDgJK1x/Pq6g
73lNFx7H0eGcm4dxVAo7dgUrqbWUpUDID8WtGTFTKEpRPKIkggL/pnmOsb6e
RvX1blU+3UQQkgkzbxpeRT39ZU9DymlgEnqLJfp0O/ohXfgtkpcKulk2jWs/
ZtHr6cxzwkdoQFn+ejSZzoq1NIRPaDoQgS35ZS8ntKM9RncOB5fQwHnC5iJ1
ZBqt7PfKYNFhwPLjKLnkjxvI5vqv8ABWKix6iVgyVgCVR5AO9rcxQJzsSgmN
4cQiH19Pj3zPgLLFGjuefbPI/gT1SH48FYyliXm54p3451nvFK5qYSit3x/y
4dEEOtB0RO1KLBmmm+6zc3pzY5sV3R5SBpjPo/68v54yK/bDNHlppwINDMvN
lX6ZsWHeUdyjhCAKJDo/mpZ3SEUZR02dvIABOTOBA43D6yi35p9mpSFzHwtI
HifiJ5Hlfvs7whFMf1qswNXfduA7R/JZrszQIJZ6rN7sRRv60XZCmKRAgfY9
sbWfFmuRjtKemhaqMGgQ2ySyjo+hnIc+1u6hTL4xmpaXmuDBCu/vWecRpIPb
z+O8yvUsmEQQ8aeuHgEsWDaUpbm4sIg/XuH+TP9jufP35zXbEFwjq9S6/Q0Z
7h88+yT33Siy+vQiP/ABGXh5ZeT7d6wgjcUXLaesGaB48x9VjMkPN35+DStj
kCFtuvnmkuw4uhAzL/z1MhncG7NelB+bQXK1ruRj41SIPGn5OP5WL2qJ1K8/
U0iA+Eu15jTeKaQh92JpszEVxPtWsw70D6BfJSnrOo50aNz7+NhgEg82QP/k
pVpLAZtdKjcmejbQoelHounholAX26Zi3baAdM+9b5vKEYPR/l0cW3VWUYx9
9J+QDiq4+L+2z21dxncpOfr/ZfIaT19swM7wChTouORHPUIHB5V8r1L3LkT/
6GGj3EIDiS0bsYf/TqOYgoq4f8z80ikSHb+/swsdeLRU4TBBhO7/5qTvGLBg
j7cKa2efJUPZxFmRW2OA7L1z9w2zMOBDboT2QdM2vEeQvssNF4KAGtlxWY1l
5IMP3RkSZgDlpkSp9cov1DxB4BdipcB80Py7xKFFxHPwib+eIj+oiKTrvns+
i3iPXxmVu0OE1vEXO+47riDpYZ7mLX1kyK3f0ikbsIbG6RKa131o8EkmOVFx
9xuklP+E460DCTrnWG7M8Jfi5nsi/iNG0CDq2dXWHTZ9OB+ylvEZZvrozMeZ
A8lj6MD9ZVs/XARsK00G+9vmUOjBsH1ckjR4Hzp03v7+EHqgzv/S3U0Y7mx9
eHHXyio66d9FNFalQZ2B/lOe6hnk++lby2umX9mKL5QH/mXHZnc1PpYMIEF7
xirXd44FpGRBGxWhSYBPAUiKDo6jzNElq+kvNIAwxV5q4xNUGH+kjIvJW97E
OrLCBTbsw6bVcKovBYx2mOs9uSGMVRveHECBm0BM7OS/fB0ObFP5jwdRakTA
Ar0VKtQW0Rb79ncHH5MgjMCbbk7PQbRXG9d5Z0jwalC7X66rGc/7nPrnlC4D
YDNeHsxeh59lfyhVM02D29lyczI1fYjW3YcL+dHBhWPucfCJQfxON6lr5DwZ
+FIezrvc6UHGlzr+2SqRwUaicJv0x0FkYbD1ZG0zCfj9FoY67i4jnXy/TD0m
n/smcWtdaulBWfqbWNc0RaD6+s/SLW6T6IGNUxmHDzMPyaIzlX2TqLilNyCQ
xNxHxVaXqtVFxGfaw7K+LgguyR8bbjPvxyWale9EiSiwxHvp3a8cRrH6mv2+
GA2eG0gJtME0og4ECY/kUcD72Cg1hukjDpqRu0Q5GCBn0qov/GANqRRPveGS
pgHWl4U3bK7G41R1SpqNKcC4F7iuZ86BZfxuLNkTIwiE8MqZ7YRefMR/iptd
VxhOBrGbysgy532nRD+J6cOjDrv/CJxeQAVh5qWYDwN6H7reajGbRQabXuTu
PCcA6v2sIUVN06jDr9vOfIIBuWxK8X0ZHFjepaIcqRf88Oo+JHk8+4PzWKj4
X1Cgw6V3wbYCqsMo7aGR3580UfALuWRftb8aZdve8R1k+qtzW/bEMbNFRCsp
SO1lzs+6wgDPjP0iiq6eVBXbzQdU39qSrIFx5P6xOtY6gQptRnNflJY3UMBW
7sbz3vwQ7fRdN3ZiFFlP9hsUyIhCUI621oFyTsyS0/rgaisZVvt8HCtDavGo
KIeD32UY0OK/L13wXh8uKbtyrXBNEvwebzd46ZKKXLJTem+UUsEtquvH4OoS
kqxSZ7nmQIGZTZF+FyIWUebHweicVBJUkK+UbyJN4qk5g5/LlimgwHrF4Vrt
DHKvszrPJinKvJ5tp3qMFlDkfyrFtnKCYDvhX7ha9h8eHzYfoltIBfP47IUi
zQXUYTddSaynQQC/eGqYQQ8ey1gmq3wiQtD9LA2fDTbMnifNO1SYBGU8+gLn
z1bgeyqeOgnOkwHb11Zj1PgDP6CQrRAWwYAHGVPcfvc4sBN9tU9ma0hwLGtG
pMONH7Nq3lV78ygFng4/PXdstR+RDqQJW9HpEKDVgOFoEVWOzG+zZr6flNT8
5bLF9/gWrXk91hNEWOfW+MxdM4Ee1n66Ur6HApj/4X12+l2o8LWtv90XEly/
qN1x32IRxRQ7SyRFUmE49exgtMYSMsnaq3nNiQrxm4MGlKQ7kcFRS4NyZl/U
S4V/rGgtQKMcuBhvBREWmyY21/l0oxfpfh0uzOf/7Xjwlo2AfvzQN1aCqxcZ
PL/+K6192I3ntbn+tk8nwNvPB6U6kpuR8g63Vce7IhD0PLwtXpIbO2Z/Pk1N
igiqyXGks3FTKKRb/VPLEyK8oDlHRZpwYfO4Bv7Rjgz3jnkU/Fvqwxe4xHSs
tWnw0sN1Y65yEpH2+fVpbqVDsYrZmgzz9dL69+xe1QhAfTHPoTvyy0g06560
kQcJPrzr6xOa6sUdQye/39CiQpjLgW5nbcALeZ+4PVrjhcMu3NoOaizYyCxd
uIeZX00vEvvb3HEUsHnJhuUGEWaKddaMf3BhP7c8CeVkYfr2vZpw7s5GtHJb
tEeyjQIHbhvt4nAtRgmj3k3kSRok7nURtc9iw2oiwtIitpDAodcmUEGvDuER
hzgvbmfmX5TZ5F7WT3hJDf/+oDs0yO+906Zjz4mVuyd+aD5Ngd5fLbEXg7pR
uVHr6P3zzOtv8TwXML2A1o4nXX8eS4MWywhCo8cicoy/rezyTBjCsu69ftG4
jJ6H/VQqt6JDywtrpRtvODDp1EZjOybvxjqnETqWp1BMxpdQ3ltCgN3w/h2/
MwLfty7xYPYkBQZ3P5LZMl2ILmxuOfpmnMk3xQkcZ/CfuMWWVzPfrlKAEl5z
Y26gHj9W80h7htn/BRbjN9kRFyb3O/Xwm4tkyA7ubj83UIvE7I6/X91KheAT
+9N99JeQTJUM/ZsQCdwXZoYn9VmwQWHH/deY++/NI5Pr6LeK7nNeemadRoCg
d3cNaPtnkJFM5/FcDQpcUkgf5bStww/XVh/n9ydD/+6AnIPaU3hSx1fthjgy
RLJ4/0u7uoIm5ZzUVZuZ/N6aVRi4nwX7m06e4L3LzLOMr78+f2tFIgyjqkVv
KnDs6/DqsRpAo1e6JHcFcADXAdKEAfcQfpNz+aY+SRQM3NO0tsfWofkW61vb
aUy+xPQAu96NlyRXj7RVEeH7Xe5+8ZOzKED02tmaNho4JIjPyq1yYLEJr6WW
mf0oPmKwf3l0BkkofW9bvE2FrGfi1A7POWR39Ped0QzmeW63+eZl8g9df+X/
ISVXEL7KncrnzJlDdXFFb42WCCC/TS/FJm8GTyszc6kcpENwpumzGB52jMJR
+CI0kwpWext8Jwis2OPFPWc4fjCA5UndRencaSSZZdp0+iwR3nLyp5D8RtCv
HqHz0ntFYNf778++sHNjxZ5EXY0PzP//cEn1VPEfVGhz5s6onAiIft/+9MPp
WmQlJ3Mk8hRzHz65pOf8l43LGvqMYT8EQVwxT306tQthT8t7GA8ZYHjc7tAm
CVbsS3vsOV3gA9cWvhnG1To8+XDA9RlZDnj5e2Q2/wvT/5dFbpnqkOH055Ft
/VNj+C5WeoEGCxH0/ElDIz9+4SKX3660WFPAVnvQ66B+B16gzarWGUIGNk4X
1NM4iJx3r2aqqDFgUsKo4E3jV6TdKPCn3pcIxmGSb2bXy/Do1PfKDOZ5PJit
PmY4UI6O6wexYdJEyOT4G2E5uYLbsnJO53Uw/XXPz4dnFNeQaq/XCd3DdFD7
qQ6jbwuQlFe9Yw87c54HHY32fJhHAu8JG4c+08Gv9MVHMPBBy17EhVFtpt+r
dJ6Rzg1A2oK/L5zUoYDqHmn54P19qHLAc+uJBSKcYZGfy8hnx9yTO4bv0qlg
HfSvnXp4DpHU3C5V/SEC7ynvEB/LNWQ5dlgH0xSG05N3aNIZPfhYNEv/hDUR
pvv63yYV8WA9mpVHSlIEwTh1V7Wb/iySUeZP1r8rBoND/w3obSyiD9WZ9WUf
qXCeWqZ19MYKGn27/XbCJWHgiH1b8OTYKPolxjnKTSaCTHObmaE6N+a2ceae
KJsQrPJlVjr+ZMWuf+xOpEaRQMdmU/SZ3a141QeZR8cihKGO5M/P/24ID8iR
4K1r4YfDo0P/tp6bQw/PjCwlx1Ogzjy4KgPrRydpSWom/vzg0mgpllGwiLQ1
n8dc/I8O1/QyLEqP9KKjVhO8D3aTYN7seZ9V5ijiMlql81iTIe5tYtkRWzas
T2kbRUeZCgcMvKpvzgziX8yel3gME8H93+jhgY1y1GsczTfULg4Gh2tJxNYZ
1GMmXi1sTQKr9H8zFuQRFKHf/PnY/79f5GZGbvndgApFf6bN2hKga2au9u79
ZRTvPTHm95UEpC2WOYJO3Ngmy9+1uwSY51V5ZlTrxzxaeoCaEpg8/DZUkk9T
Ix832tOxJ5XpO8Z6MVMmB5sQNf661X/PSSD33VrXgLUDV8Kjtp85LQ7Sh//Y
+4WuoIWywR/x2mKQWRGV51Qwgg9lV1sTFQjwaIBTm7VyA+kWf5ZWcaJDVlrw
4tLVKWR/8oC4a6QAtOkf915w5MeGdp3NMpTnARd6XqiDei0qkPv7r+wccx4P
jpXav99AO0UCcxOOkqDN6eXri25MHpvQdTlUQwPbpz/LT57gwB7ffpMbfIQA
M+KsZoLu08jgvXJhuScPxKodq3dwXECK3U++P1pnQNFPOTFf7nZkevxQIp8M
GaTXk7myHwwjpddvr3IkkyDv2H3ip81rSEuhJGK0jAIqxDfZOcH5SEbjzENf
Tw6Y2Cp7IiubD3tmpaH7+isNgorvH3n8tQS/Pefe96eWACb7y4U2B66j7uit
pXeUCMD2ao+j7CgHRhCSTLi1i8nvj/PktHBO7MZG/ujRNebvMkv5nl9+4Xt9
brXFpHBCIl/dPzGpDTRwxt5uNIgGGm6G1w2WZlDvxRz1S5oEKBERz5lxmkTZ
LycfdX3jA6nK1bypqG+ogdQZ3+5NhOSuaI1M/Qk0uiW5S+MGD2C2jj0ZXtX4
uOmx6ZCP/CDbmHneS3oO7Y3R0Lp0kAKkCWRuqLiMvxOK//Y6QxjE3bOzOfrG
cCNTmdPUC0w/DaX8DJZix6IHZOpKmPvFp5cZx3g8jXbtHQyNCCXCPSN9VvLQ
KMpxswou/UuHzvW/B3LWR9Enk2y+UGafij2Qafc8z4Itkha1Ve8yeZJ9W/Is
xo6xX7OWaxMiAEY932O49ze6dIv8S1aZDqlvfdayK1iwmvHXLy//R4L/AeqM
tP0=
       "]]}},
    AxesOrigin->{0, 0},
    PlotRange->{{-2, 3}, {-8, 2}}], ",", 
   GraphicsBox[{
     {RGBColor[0.6, 0.4, 0.2], 
      RectangleBox[NCache[{-1, Rational[-1, 10]}, {-1, -0.1}], 
       NCache[{1, Rational[1, 10]}, {1, 0.1}]]}, 
     {RGBColor[0, 0, 1], PointBox[{0, 0}]}, 
     {RGBColor[1, 0, 0], 
      PolygonBox[
       NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
         Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
         1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]]}, 
     {GrayLevel[0], PointSize[Tiny], PointBox[CompressedData["
1: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
qQ==
       "]]}},
    AxesOrigin->{0, 0},
    PlotRange->{{-2, 3}, {-8, 2}}]}], "}"}]], "Output",
 CellChangeTimes->{{3.676470783775257*^9, 3.6764707939130287`*^9}, {
   3.676470829920199*^9, 3.6764708640944843`*^9}, {3.676470903722499*^9, 
   3.67647093557904*^9}, {3.6764709802999067`*^9, 3.676471004411406*^9}, {
   3.676471050842946*^9, 3.6764710656836853`*^9}, {3.676471131653288*^9, 
   3.6764711501049232`*^9}, {3.676471297459279*^9, 3.6764713164277487`*^9}, 
   3.676471923491651*^9, 3.6764719665285807`*^9, 3.684634501349966*^9, 
   3.684635726265483*^9, 3.684668049526926*^9, 3.684688679376834*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{".75", ",", 
     RowBox[{"-", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.25", ",", 
     RowBox[{"-", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.25", ",", 
     RowBox[{"-", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.75", ",", 
     RowBox[{"-", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "/", "4"}], ",", 
     RowBox[{"-", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{".75", ",", 
     RowBox[{"-", "3"}]}], "}"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.6764713623800364`*^9, 3.676471367359054*^9}, {
  3.6764714279189*^9, 3.676471434549323*^9}, {3.676471483974584*^9, 
  3.676471491130146*^9}, {3.6764715213396587`*^9, 3.6764715220939903`*^9}, {
  3.676471886330518*^9, 3.676471958465077*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.75`", ",", 
     RowBox[{"-", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.25`", ",", 
     RowBox[{"-", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.25`", ",", 
     RowBox[{"-", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.75`", ",", 
     RowBox[{"-", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "4"], ",", 
     RowBox[{"-", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.75`", ",", 
     RowBox[{"-", "3"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6764713678019037`*^9, 3.676471434956658*^9, 
  3.676471491934902*^9, 3.676471522490788*^9, 3.6764719147354183`*^9, 
  3.6764719588293467`*^9, 3.684634501401786*^9, 3.684635726302536*^9, 
  3.684668049579864*^9, 3.684688679418186*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Problem 3:  given a variance \[Sigma] if you push at location \[Mu], with \
velocity ",
 StyleBox["v",
  FontSlant->"Italic"],
 " (everyone not in contact with the object moves at velocity ",
 StyleBox["v",
  FontSlant->"Italic"],
 ") , and variance bound ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Sigma]", "max"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", how long before you need to switch to variance control mode?"
}], "Subsection",
 CellChangeTimes->{{3.676456729376965*^9, 3.676456792954073*^9}, {
  3.676462023205823*^9, 3.676462123761077*^9}, {3.676462183093297*^9, 
  3.676462186933276*^9}, {3.6764622615292883`*^9, 3.676462261794133*^9}, {
  3.6767079936854773`*^9, 3.676707994070787*^9}, {3.678013488380001*^9, 
  3.678013506864674*^9}, {3.678013813226904*^9, 3.6780138627633266`*^9}, {
  3.6780151844238043`*^9, 3.6780152766910753`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"D", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], 
         RowBox[{"\[Mu]", "^", "3"}]}], " ", "+", " ", 
        RowBox[{"3", "\[Mu]"}], "+", " ", 
        RowBox[{"3", " ", 
         RowBox[{"6", "^", "0.5"}]}], " ", "-", " ", "2"}], ")"}]}], 
     "\[Equal]", "0"}], ",", " ", 
    RowBox[{"{", "\[Mu]", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.685107059048863*^9, 3.6851071753404093`*^9}, 
   3.6851072546152163`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Solve", "::", "ratnz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Solve was unable to solve the system with inexact \
coefficients. The answer was obtained by solving a corresponding exact system \
and numericizing the result. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/Solve\\\", ButtonNote -> \
\\\"Solve::ratnz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.685107160451255*^9, 3.685107177450925*^9}, 
   3.685107257029443*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "0.8710673377739216`"}], "-", 
      RowBox[{"0.8810646518897703`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", 
     RowBox[{
      RowBox[{"-", "0.8710673377739216`"}], "+", 
      RowBox[{"0.8810646518897703`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", "1.7421346755478433`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.685107257035821*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"110.58862657687108`", "\[VeryThinSpace]", "-", 
           RowBox[{"191.54511997040254`", " ", "\[ImaginaryI]"}]}], ")"}], 
         "/", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "4.3279414`*^7"}], "+", 
            RowBox[{"1.59018721`*^8", " ", "\[Sigma]"}], "+", 
            SqrtBox[
             RowBox[{"9.36553838091698`*^14", "-", 
              RowBox[{"1.3764474119818988`*^16", " ", "\[Sigma]"}], "+", 
              RowBox[{"2.528695362847584`*^16", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}]]}], ")"}], 
          RowBox[{"1", "/", "3"}]]}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"0.0011303151496606342`", "\[VeryThinSpace]", "+", 
         RowBox[{"0.0019577632677770375`", " ", "\[ImaginaryI]"}]}], ")"}], 
       " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4.3279414`*^7"}], "+", 
          RowBox[{"1.59018721`*^8", " ", "\[Sigma]"}], "+", 
          SqrtBox[
           RowBox[{"9.36553838091698`*^14", "-", 
            RowBox[{"1.3764474119818988`*^16", " ", "\[Sigma]"}], "+", 
            RowBox[{"2.528695362847584`*^16", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]}]]}], ")"}], 
        RowBox[{"1", "/", "3"}]]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"110.58862657687108`", "\[VeryThinSpace]", "+", 
           RowBox[{"191.54511997040254`", " ", "\[ImaginaryI]"}]}], ")"}], 
         "/", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "4.3279414`*^7"}], "+", 
            RowBox[{"1.59018721`*^8", " ", "\[Sigma]"}], "+", 
            SqrtBox[
             RowBox[{"9.36553838091698`*^14", "-", 
              RowBox[{"1.3764474119818988`*^16", " ", "\[Sigma]"}], "+", 
              RowBox[{"2.528695362847584`*^16", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}]]}], ")"}], 
          RowBox[{"1", "/", "3"}]]}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"0.0011303151496606342`", "\[VeryThinSpace]", "-", 
         RowBox[{"0.0019577632677770375`", " ", "\[ImaginaryI]"}]}], ")"}], 
       " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4.3279414`*^7"}], "+", 
          RowBox[{"1.59018721`*^8", " ", "\[Sigma]"}], "+", 
          SqrtBox[
           RowBox[{"9.36553838091698`*^14", "-", 
            RowBox[{"1.3764474119818988`*^16", " ", "\[Sigma]"}], "+", 
            RowBox[{"2.528695362847584`*^16", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]}]]}], ")"}], 
        RowBox[{"1", "/", "3"}]]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", "\[Rule]", 
     RowBox[{
      RowBox[{"221.17725315374216`", "/", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4.3279414`*^7"}], "+", 
          RowBox[{"1.59018721`*^8", " ", "\[Sigma]"}], "+", 
          SqrtBox[
           RowBox[{"9.36553838091698`*^14", "-", 
            RowBox[{"1.3764474119818988`*^16", " ", "\[Sigma]"}], "+", 
            RowBox[{"2.528695362847584`*^16", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]}]]}], ")"}], 
        RowBox[{"1", "/", "3"}]]}], "+", 
      RowBox[{"0.0022606302993212683`", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4.3279414`*^7"}], "+", 
          RowBox[{"1.59018721`*^8", " ", "\[Sigma]"}], "+", 
          SqrtBox[
           RowBox[{"9.36553838091698`*^14", "-", 
            RowBox[{"1.3764474119818988`*^16", " ", "\[Sigma]"}], "+", 
            RowBox[{"2.528695362847584`*^16", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]}]]}], ")"}], 
        RowBox[{
        "1", "/", "\[IndentingNewLine]", "\[IndentingNewLine]", "3"}]]}]}]}], 
    "}"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.685107209707864*^9, 3.685107209922433*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1280, 687},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification->1.5,
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September 9, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1363, 31, 498, "Section"],
Cell[CellGroupData[{
Cell[1968, 57, 684, 11, 138, "Subsection"],
Cell[2655, 70, 2200, 61, 118, "Input"],
Cell[CellGroupData[{
Cell[4880, 135, 1700, 47, 176, "Input"],
Cell[6583, 184, 43062, 842, 385, "Output"]
}, Open  ]],
Cell[49660, 1029, 2578, 72, 170, "Input"],
Cell[CellGroupData[{
Cell[52263, 1105, 1447, 39, 144, "Input"],
Cell[53713, 1146, 66751, 1208, 383, "Output"]
}, Open  ]],
Cell[120479, 2357, 940, 25, 106, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[121444, 2386, 1807, 42, 144, "Input"],
Cell[123254, 2430, 120510, 2146, 382, "Output"]
}, Open  ]],
Cell[243779, 4579, 1118, 35, 128, "Input"],
Cell[244900, 4616, 3277, 87, 312, "Input"],
Cell[248180, 4705, 1381, 43, 126, "Input"],
Cell[249564, 4750, 2213, 61, 201, "Input"],
Cell[251780, 4813, 2075, 60, 191, "Input"],
Cell[253858, 4875, 2437, 64, 176, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[256332, 4944, 157, 2, 65, "Subsection"],
Cell[CellGroupData[{
Cell[256514, 4950, 2196, 59, 251, "Input"],
Cell[258713, 5011, 750, 14, 84, "Message"],
Cell[259466, 5027, 303, 7, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[259806, 5039, 2426, 62, 147, "Input"],
Cell[262235, 5103, 754, 14, 84, "Message"],
Cell[262992, 5119, 756, 14, 84, "Message"],
Cell[263751, 5135, 752, 14, 84, "Message"],
Cell[264506, 5151, 669, 13, 34, "Message"],
Cell[265178, 5166, 522, 10, 43, "Output"],
Cell[265703, 5178, 756, 14, 84, "Message"],
Cell[266462, 5194, 754, 14, 84, "Message"],
Cell[267219, 5210, 753, 14, 84, "Message"],
Cell[267975, 5226, 608, 12, 34, "Message"],
Cell[268586, 5240, 596, 11, 59, "Message"],
Cell[269185, 5253, 595, 11, 59, "Message"],
Cell[269783, 5266, 596, 11, 59, "Message"],
Cell[270382, 5279, 606, 12, 34, "Message"],
Cell[270991, 5293, 518, 10, 43, "Output"]
}, Open  ]],
Cell[271524, 5306, 192, 6, 43, "Input"],
Cell[CellGroupData[{
Cell[271741, 5316, 1089, 27, 69, "Input"],
Cell[272833, 5345, 750, 14, 84, "Message"],
Cell[273586, 5361, 750, 14, 84, "Message"],
Cell[274339, 5377, 592, 11, 34, "Message"],
Cell[274934, 5390, 752, 14, 84, "Message"],
Cell[275689, 5406, 604, 12, 34, "Message"],
Cell[276296, 5420, 373, 8, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[276706, 5433, 1389, 32, 69, "Input"],
Cell[278098, 5467, 752, 14, 84, "Message"],
Cell[278853, 5483, 750, 14, 84, "Message"],
Cell[279606, 5499, 750, 14, 84, "Message"],
Cell[280359, 5515, 604, 12, 34, "Message"],
Cell[280966, 5529, 280, 6, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[281283, 5540, 8815, 203, 779, "Input"],
Cell[290101, 5745, 105990, 1927, 390, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[396128, 7677, 56852, 1034, 390, "Input"],
Cell[452983, 8713, 57038, 1037, 390, "Output"]
}, Open  ]],
Cell[510036, 9753, 207, 4, 55, "Text"],
Cell[510246, 9759, 2716, 78, 219, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[512987, 9841, 3201, 89, 244, "Input",
 CellID->70294289],
Cell[516191, 9932, 86247, 1432, 348, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[602487, 11370, 198, 4, 102, "Subsection"],
Cell[602688, 11376, 1502, 45, 194, "Input"],
Cell[CellGroupData[{
Cell[604215, 11425, 842, 21, 98, "Input"],
Cell[605060, 11448, 9619, 286, 521, "Output"]
}, Open  ]],
Cell[614694, 11737, 10006, 289, 588, "Input"],
Cell[624703, 12028, 5152, 143, 511, "Input"],
Cell[CellGroupData[{
Cell[629880, 12175, 297, 8, 79, "Input"],
Cell[630180, 12185, 465, 13, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[630682, 12203, 184, 4, 43, "Input"],
Cell[630869, 12209, 300, 6, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[631206, 12220, 1947, 49, 144, "Input"],
Cell[633156, 12271, 21009, 431, 312, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[654202, 12707, 2775, 69, 676, "Input"],
Cell[656980, 12778, 33632, 713, 1113, "Output"]
}, Open  ]],
Cell[690627, 13494, 1286, 38, 432, "Input"],
Cell[CellGroupData[{
Cell[691938, 13536, 2270, 61, 846, "Input"],
Cell[694211, 13599, 750, 14, 283, "Message"],
Cell[694964, 13615, 750, 14, 283, "Message"],
Cell[695717, 13631, 592, 11, 114, "Message"],
Cell[696312, 13644, 750, 14, 283, "Message"],
Cell[697065, 13660, 606, 12, 114, "Message"],
Cell[697674, 13674, 278, 6, 144, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[697989, 13685, 1717, 38, 337, "Input"],
Cell[699709, 13725, 750, 14, 283, "Message"],
Cell[700462, 13741, 752, 14, 283, "Message"],
Cell[701217, 13757, 592, 11, 114, "Message"],
Cell[701812, 13770, 750, 14, 283, "Message"],
Cell[702565, 13786, 604, 12, 114, "Message"],
Cell[703172, 13800, 592, 11, 198, "Message"],
Cell[703767, 13813, 592, 11, 198, "Message"],
Cell[704362, 13826, 592, 11, 198, "Message"],
Cell[704957, 13839, 603, 12, 114, "Message"],
Cell[705563, 13853, 618, 12, 144, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[706218, 13870, 897, 24, 231, "Input"],
Cell[707118, 13896, 750, 14, 283, "Message"],
Cell[707871, 13912, 749, 14, 283, "Message"],
Cell[708623, 13928, 592, 11, 114, "Message"],
Cell[709218, 13941, 750, 14, 283, "Message"],
Cell[709971, 13957, 604, 12, 114, "Message"],
Cell[710578, 13971, 592, 11, 198, "Message"],
Cell[711173, 13984, 592, 11, 198, "Message"],
Cell[711768, 13997, 592, 11, 198, "Message"],
Cell[712363, 14010, 603, 12, 114, "Message"],
Cell[712969, 14024, 299, 7, 144, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[713305, 14036, 1250, 32, 337, "Input"],
Cell[714558, 14070, 751, 14, 283, "Message"],
Cell[715312, 14086, 752, 14, 283, "Message"],
Cell[716067, 14102, 754, 14, 283, "Message"],
Cell[716824, 14118, 606, 12, 114, "Message"],
Cell[717433, 14132, 595, 11, 114, "Message"],
Cell[718031, 14145, 442, 9, 144, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[718510, 14159, 7123, 175, 2182, "Input"],
Cell[725636, 14336, 34949, 666, 1170, "Output"],
Cell[760588, 15004, 41144, 793, 1093, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[801769, 15802, 1593, 43, 568, "Input"],
Cell[803365, 15847, 30917, 631, 1054, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[834319, 16483, 2691, 65, 654, "Input"],
Cell[837013, 16550, 40197, 848, 1129, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[877247, 17403, 3322, 91, 906, "Input",
 CellID->54126742],
Cell[880572, 17496, 107347, 1783, 1174, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[987956, 19284, 914, 28, 144, "Input"],
Cell[988873, 19314, 912, 28, 217, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[989834, 19348, 888, 20, 468, "Subsection"],
Cell[CellGroupData[{
Cell[990747, 19372, 579, 17, 231, "Input"],
Cell[991329, 19391, 573, 12, 198, "Message"],
Cell[991905, 19405, 569, 16, 144, "Output"]
}, Open  ]],
Cell[992489, 19424, 4228, 106, 3618, "Input"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
