(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1719699,      32719]
NotebookOptionsPosition[   1711215,      32468]
NotebookOutlinePosition[   1711599,      32485]
CellTagsIndexPosition[   1711556,      32482]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 "Problems: Torque Control With a Swarm of Norm,Triangularly,Uniform \
distributed Particles Under Global Control\n\n",
 StyleBox["Given a swarm of particles, whose positions are normally \
distributed, and a pivoted object, where should the swarm hit to generate the \
maximum torque?",
  FontSize->16],
 "\n",
 StyleBox["related problem:  shooting a railroad track switch with a shotgun. \
\nF = force provided by entire swarm\nN = number of particles\nF/N = force \
per particle\n",
  FontSize->16],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"]}], "/", 
     RowBox[{"(", 
      RowBox[{"2", 
       SuperscriptBox["\[Sigma]", "2"]}], ")"}]}]], TraditionalForm]], 
  "InlineMath"]
}], "Section",
 CellChangeTimes->{{3.676456729376965*^9, 3.676456792954073*^9}, {
  3.676462023205823*^9, 3.676462123761077*^9}, {3.676462183093297*^9, 
  3.676462186933276*^9}, {3.6764622615292883`*^9, 3.676462261794133*^9}, {
  3.6767079936854773`*^9, 3.676707994070787*^9}, {3.678013488380001*^9, 
  3.678013506864674*^9}, {3.678013813226904*^9, 3.6780138627633266`*^9}, {
  3.6780154731946793`*^9, 3.678015503683338*^9}, {3.684533968985187*^9, 
  3.684533971087208*^9}, {3.684542163365937*^9, 3.684542167980525*^9}}],

Cell[CellGroupData[{

Cell["\<\
Problem 1:  marginalizing to 1 dimension, not thinking about distributed time \
of impact
this is only a one-pass of the swarm at the object.  The kilobots are pushing \
continuously.  (math is for one step, real world is an iterative process)\
\>", "Subsection",
 CellChangeTimes->{{3.676456729376965*^9, 3.676456792954073*^9}, {
  3.676462023205823*^9, 3.676462123761077*^9}, {3.676462183093297*^9, 
  3.676462186933276*^9}, {3.6764622615292883`*^9, 3.676462261794133*^9}, {
  3.6767079936854773`*^9, 3.676707994070787*^9}, {3.678013488380001*^9, 
  3.678013506864674*^9}, {3.678013813226904*^9, 3.6780138627633266`*^9}, {
  3.6780154731946793`*^9, 3.678015502323708*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StandardDeviation", "[", 
  RowBox[{"TriangularDistribution", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Mu]", "-", "b"}], ",", 
     RowBox[{"\[Mu]", "+", "b"}]}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.684532736145203*^9, 3.684532744580744*^9}}],

Cell[BoxData[
 FractionBox["b", 
  SqrtBox["6"]]], "Output",
 CellChangeTimes->{{3.684532738975494*^9, 3.684532745205942*^9}, 
   3.68463443986845*^9, 3.684635658683772*^9, 3.684667984476264*^9, 
   3.6846886148210907`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"PDF", "[", 
   RowBox[{
    RowBox[{"TriangularDistribution", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Mu]", "-", 
        RowBox[{
         SqrtBox["6"], "\[Sigma]"}]}], ",", 
       RowBox[{"\[Mu]", "+", 
        RowBox[{
         SqrtBox["6"], "\[Sigma]"}]}]}], "}"}], "]"}], ",", "x"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.684532574058216*^9, 3.684532603591757*^9}, {
  3.68453271452549*^9, 3.6845327153553267`*^9}, {3.684532754129568*^9, 
  3.684532765505777*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        FractionBox[
         RowBox[{"x", "-", "\[Mu]", "+", 
          RowBox[{
           SqrtBox["6"], " ", "\[Sigma]"}]}], 
         RowBox[{"6", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", "-", 
          RowBox[{
           SqrtBox["6"], " ", "\[Sigma]"}]}], "\[LessEqual]", "x", 
         "\[LessEqual]", "\[Mu]"}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"-", "x"}], "+", "\[Mu]", "+", 
          RowBox[{
           SqrtBox["6"], " ", "\[Sigma]"}]}], 
         RowBox[{"6", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{"\[Mu]", "<", "x", "\[LessEqual]", 
         RowBox[{"\[Mu]", "+", 
          RowBox[{
           SqrtBox["6"], " ", "\[Sigma]"}]}]}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.684532570795553*^9, 3.684532603974053*^9}, 
   3.684532715804618*^9, 3.68453276621266*^9, 3.684634440145928*^9, 
   3.684635658925296*^9, 3.684667984588026*^9, 3.684688615081164*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"pdfNormal", "[", 
    RowBox[{"x_", ",", "\[Mu]_", ",", "\[Sigma]_"}], "]"}], ":=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{
      SqrtBox[
       RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Sigma]"}]], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"]}], "/", 
      RowBox[{"(", 
       RowBox[{"2", 
        SuperscriptBox["\[Sigma]", "2"]}], ")"}]}]], " "}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.6764622317264*^9, {3.676462275865959*^9, 3.676462333498724*^9}, {
   3.676462386203244*^9, 3.676462388994298*^9}, {3.6764661175139837`*^9, 
   3.676466119114414*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"pdfNormal", "[", 
      RowBox[{"x", ",", "1", ",", "\[Sigma]"}], "]"}], "/.", 
     RowBox[{"\[Sigma]", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "/", "2"}], ",", "1", ",", "2", ",", "5", ",", "10"}], 
       "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "4"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{"sigs", ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", "Bold", ",", "8"}], "}"}]}], ",", 
        RowBox[{"LegendLabel", "\[Rule]", "\"\<\[Sigma]=\>\""}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.75", ",", "0.55"}], "}"}]}], "]"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<../abecker/SwarmPublications/JournalTorqueControl/pictures/pdf/Normal.\
pdf\>\"", ",", "%"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6764623486045923`*^9, 3.676462394184904*^9}, {
  3.67646603305241*^9, 3.676466039085231*^9}, {3.676467095974711*^9, 
  3.676467144451521*^9}, {3.684635469667963*^9, 3.68463547031621*^9}, {
  3.6846355483145647`*^9, 3.684635568532795*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxE23k0Ve/7N3DzPBTxQREVJRmKJrGv25CERCQya1BkHookhEwZQsmYiEiD
oZLpDglFScicmWM85pnHs9aP719nnXXO2Wvvfe699/Ve6/0SsrC7cI2KgoLi
FAMFxf9/rTAR+re+vo7VKPfcf8CjRnA/ihCO41/Dkdr/2V/mtCIImbLuFxwr
eP9H/uRL94OJjjtpLy4cXMIm+qsC21tfESWaY4+eqC/gjhh+3fLPXwmXhJlx
FeU5TKt0WWJ4rZtIDXynm2Q6gxeJ8UzXvctExvhBqasXpvC1C613yrZzAbmP
4VixJhk7dfwyVmGXAKNJGW+PtlE8IRM+XfxPEfyYWrwvVQ3hx8+pzC2360O8
SV+wz1Ifduds9D8vbQ3HG/OGG6Ebdw8x93W88IBVdxYrmhut+JhMR+V/MqFg
XXpv+2prPZYzlmM5EBcPV5q6d5+/VIGvGEzwLv3NhLlfjpiL6yV+Kp66u9j4
ExjQ/neUwS4XslNhsc6nDF5OTcyRFqoh9dXJINGMGnAobGt6+LgBsqj2t3Jd
bICjsfJtQ9/bgWtVKvVrVxssPmOK87DtASkjq73C9d1AEmPHMkcGYKHD9elD
0X4Qr3k8z3lmGI64hzjpTA+Cz+F3Iinc48C8fd+TagMSHJR9QOFHIoMr62vm
EWMSFFmMz6uTp6BwMvVKU8cg/B17OWzVMAPj2n5Tl870wy6KBEv+7jkwodXu
Zkrtht3ehwtO9S1AzMeLzo0BbfD6KgdDztclEBX24XqU0gBmv450FdaugPNs
tCGlWQ0kxifl8uetgSPfUPlyexmcG9V966JKgXhdqfbfmfgEXbWLZ0TUKdGp
VD9Lsvtr+NSl/M9HjgoZbE+/OkZKhL2f3p0SVaRGYYKirTcEwuBPyZfou8do
0Par6nGdg57Qe+95K7UILdJS7JGac7CBhxTP+xpF6ZBUsJX7ULk+2OedHtXZ
RY8o7HVX4+uVYVyM+fPOvQxo6s+hh0kREvDjcpI9rzAjErh70ojLjgtGC1qE
y7mY0M0aR9pa5zXiRaf08498zAg+lX41T+4h4qVlePTYWJC49IyioEIlMQvU
d8VWWZDVQXkqjV1ZRC/71As1Cja0nFT85FJHCMG1/WEV1xQb6n9hujs0xZa4
8i58Yn2dHXH93/Uw7mLgU8u2jk0pWGYtlS8TmV0Z1Lt5VvGjtaEvDOvuRKie
TJm7wDJuu9eu1qkTS/zsPRszI7uIB17rnKxs+UjwzdmXjJ+ZxyZq1lSDt/8Q
IZz1QtPas3h+P/sRCrcJQkTOpozSYBorv2pcZNnFADUk3txwrUn8NXdfXN2E
ECQap7jeLRrHeJyxs235OJBX/SmHfw/jlMmise1XNCE8r5POpnsAf3hZkely
wgKGn2mcOsTfi9uUGT56dzrBR47C3c1OnTiMb27X9TlfkBGoKPZKbsIDnvfM
GMajID7LNjnVvxaveBTIXy1NAbOgkrCo+AIs6z4gbdeSDUWyhZlLVRFQ6rk3
ARKKIaOgmOF4cykklLYgzROVYNEqetOzsg46P/vsTJL6DZM9LG/0tfpgjIj/
uPaoF5hXtAxT5YZgoPTIR5ecAWheEwxrkxgFaf/twgN1QzBS3xrZNDMBTy8a
rBIBJHD6ecJjaHQSqGye8bypHQK1A2oOhj3TQOcmmOafPQBLrkKiX1tn4eVO
qYySgF6gi90zc6x6GY4WfKI4hn7D+lFS9eiXVVDjS9J4pFEJ8QX7AnxfrIMx
Vb7bDoUS4Dbev1xbTYEkOW1SPp/JAY1LSZEN5ZSo682ER/OXVBhTd2fVw1Qo
W7rrvP+uJ7Asm3/jQhE10jiD9Lq4/MEwUSof3tIgg1zrruPuLnAUnv8bTadF
WZqXTmC4Ah6tjkM7UuiQ5aA2R7yYFkjav6r/lESPls3JFkL2J8FIqTGKL5UB
fRzo6XMj9kB7kJy6bQIjSteRyeAuYITKGrpeuRgmdOrN6g/eZTKxm1HGyD+K
Gan/clPRnmsgqj7HVX/xY0FKd0f/jBR/JkbTl9gKPVmRx80Zx6qP8YRHeNFR
KTc2tP1r5g3NqXuEXBdzO5MbO5qsOtvU6mdEXLYqfn/94Tomboy8fxR8gej6
mLCjI3YVF99+dulJjSNx/fTy79CYZfw+pEj7CHskoSdxJyElZxFf6z1jvqv7
PXFrj2RaWfU8vjvq7TTrWkN46V9h4P8xi40Hd7kI/B0k+i1Cg7Xap/EFV7eR
jt1UIHvrhYP770m8Lv/DmCZkJ+DIy5NLWRO4UyKCaKSRhrR5Y4XcphF8z/Hk
4PH1MxD0z1C5p2EQq1mPcZIyjUHJI+bKX+Y+LBVcoHXztj2clTy72iXXhS1b
+huXDL0hpmYossy3GdO9VRs89SsC2oP5svf/qsMzg6V4W/Nz+P6oK7fmQin+
l1ymcYPmHUhdO9ggZR6AHb5Le+UbFICe/Nm9hWGFsL/+75/9375C3p/kq9Pl
tTDcM7HA6vgLXEqYU61Me2HFe2fx4dweWOKUenTr+CCol9rzLc32g0+/Qfm8
7AgwKnwflr41BMeoTncU0U7A5xmJph0eJNCkMSk5Zj0JN5/lzJzZQ4IHp+Pz
dG5OA0NQUaO01iDcyOkNfHppFv4LveK5YtMH+vf5PGdUlmFYuP/LqaF6eE/F
dlH3zCo8Yab/NVBaDQliPfzaYutwMHcnbeHIF8jZV9IgFEiBYi32SkbP5sGT
xzU29x5Sov+MSuzFR9PhwhNT19F7VKhBbcz285FYYF+Urpe/T43Ghj9dPK4U
BE/fLqQZO9KgmhLxpw0/3SDERNB44TotEnaLEJxttQQfm8DrLtfpkJvm/vwp
Zl3Q4rj9j9aEHkGg9a4iTQQvj5NF4q4woJ8uZ0fiM/ZDw9RYh5I5I+KMJ1Pu
ebENWpXsaSguMSGb1EcSKdVzRNe0tGfiJWZEQZp0hPU2Imdu0J5ZjQW5lB3Z
6axbSpCn15Sn5VnR7zceGhJCqYSU1qVbxXJs6O5oIZ/hH1/i1Z2zF8KPsiO5
d1RPh6euEj7eszoyT9bwt/kfUvmBFoQz08cps+gVXGNXN8uq+YD4aGmTcz11
CcuZSLsGCbwgVJ7tjDxdvoCP927bJd9QQlRV5zTxfZvD0r8CmgT8W4mYn+hU
dfMMbnmLjiXlzhA3uDQWcxqncDhTgf8DMjuYWEbMpP0i413U8gN7lPfDvf2j
y8s/xjC1SOUB5n0EyNK8LxWsJeHlVzfu6YnqwJNA8+r5sX5seEE5X+bcdQj/
RMHpLdGDbXi6nH/23YbWb73K4zbteDKR6bTtsUCos0seJEoasHEE9eKQTwx4
KbzqWrStxu7vyhUvcaaDxGLhp7DIHNxTqP70lmseMDRU/FPpTgfBneJ6odFf
wIae7aOKQj9k+LlLfDLrg119DqLtCiQo3UW7r9doEMR5hi7jPWPQbqe9ZiJI
gjrtE8ILDmS46hyqcsCTBDExnLKxtlOgYGxUwmc+BNuYF8SvGM7AxCFp9cvU
A5Cbd9DKTX0FlPr3Wey5/As0b34l/GTXgHOnXZMqRQX8TJVebGOhQO5c1aMv
ZgrgbnS4kDsTJSKtqJ6PKnsHVLscP4tRUKGK3/uHaSeTIYAyOhVTUKNb0TrZ
2588hkEPufXri9QIigOGC7x9YHfojWqhYRr0KHNwkrLOATp3C1p0D9Eiw68a
9wLIJuB6xsgq7x8d+lta4TG5dhbYfrZU3OymR1UftzkTZdKw43wBVWwfAzo5
YSXlSLsL+vYE58e0MKK0ieJjf/5QQ97FhFK3FiZ0zPzbnnsyJMJEQEbW9jcz
ejK7/bXDmV9Ep8f5Pa6lLOhEtc21QtZcYshwrtkHs6IpFaWov9eiiKo6ofUX
H9hQ/szT5K/OLkTdmZ/X/IrY0VJXtJXxRR0i/OrEmdzydbyWwP61Z/d5Yjn5
P3659lVc/YC2oErHjqgv6myJaVzGx7jdEvoOhxOxOuyCd8cXMWPL0E3xpSwi
+gRbbBbTAnYcqrvNca6KWFp6vZxNP4eraGy3/cnvI5TnBMjz/DN4p/vyXQ/z
dcLxzYDWxPYpXML+o8WFjwdu/Gd4KYGDjFvIc6bcw1Lg7Xy2+z+DUfy27W7j
iNppYHDh643XHMKn/SROFRZeBnubkvlDD/ow/eW2LqVJG0BU606GJV14NXeQ
djX4PnxPWfK84tqC9/yMU5O8EQ6pIhrmHI2/sc41ERoh9iTgPtJNYr1Yji3L
M04FdWaB4s17M+bicdjbo5plqT4f9IWksszvfwKNANeEzMRyONRb9ca28weI
htS05jP8hOOHgpOmB3rgn/zRY3pKPTCVtDutLm8A7N2NpuIj+qFZ37WDtnQY
Ppm//3rsyBC08y5RSoWOw2OeWt53NiSQS7L/Z3xwEuTGDVNOK5FAUPd0069D
08CzI+W3/LNBEKxTlqXknoWQyp896u19QOXIrfSHdhne/bp5PKb8DzDcfM4X
wLQKclatk/3MP0Cg78uNTxNr0LhfJDLoXyl4BQSW/rhBgb7vN/tacuMjnJLq
bdW+SYnGZw20ktMywPdUfeZxYyp0QT+hZIdbPPA2T/rnmlEjxxWapk/PQuDD
R6PEW7o0KLZ5uxSbggecsO3a6alCi7o/HeVEvlZA8ynqpbAqHZr3VVULUtMD
syud/Yfk6dHZFI6fDXaK8D171c5QiQFNfI6pfjB0EOrSVNIllBiRmVzX6R+9
HHBlfV+0+TEmdOeJrlW04RKhQJIOO3iSGe1wszvBeKCL2M8V+lXqEAv6RXNB
SYfrKzHFS2kWxs+KLlAF7sypSSeY3qfS+wqwIdGGuxHqDwOITuUbrH842ZHr
v5+HTxrcJPLv7h/xql/Dw4Jzpm4nTImwWcll3LSCA3j1aqNEvIg9/7QK7LuX
8APV3qHOgUQiqCSHi399AVd/c117+qiAmPwX8Z2Gfh6fd1HiQEVNBIdDoIQJ
18b8IHusIJJtiqh81W58+b9pvF2lwjG6nBmiXzX+2bltEjMIMlgp2e+D0LIz
n08pj+NSUXfXqX5Z4PKOM/c7P4yHHF3vneDQBs7dgjdyLAdw4fr2xOKDV6H4
lUh608senCjRf+lsjQtU3Tp/pNe+A3cLZ+5RpngIVGdy6/+9a8Tfa06dG3j1
BNhuMyv8cv+Bg7RddmYavYRKheK9HDEfsauOj9SIQC7k5kfw9Vg8h7W31BKF
lzFIujzK/lXVBzEV8n/dF3phh725IsJD0FH7VoqNaSPfBdO41L4aBf3TJcb6
y0OQ0vH40+FjZJi6n+O87EcCf2kRw1LxKSjKObhdK3YI3vAmn/8nMAPmIq9v
qhgNgFG6iKQ+0wrwcVVSTznVQdovPZrPq6vg+9ex7IzQN9hFpSIv0LkOdkek
sysiikB10ZBt3zAFkrphYtnFnA3pnwNEKHoo0fU9lXtWzqVAQRp9C1MXFRI3
PPjAWDUKJg2XcttbqZGc7a7cfyd9Qf5JzRepGhokaMjcpBPhBEGSXYKWVbRI
9Fzhs3olc1gMt8y4WkqH0pZakhipzoHAboWa8C/0KL8j9spZ22NworpS/fJX
BvQmQcW0YXU3dDX1ej8oZERVep9tDWLogNh+4UJbPhMKFNHSKTk9RpRwyqgv
5TCjZJeJaGX+ekInbtYlLoUF5WUxWs7v/0gMey9MCySxomUDUY4Xx2KIF1J2
sTefsqHjd44krRq6EXQ7xgSrYtlRxCXBtG7PS8Q++2BePvV1bDFzqTdphx5R
8WMvi6fBKvYg5ZzlCnIllmr/++5ruIyjORYK+G4+ITgYu/lqXBfxZc/l5fqX
uYQSi1ZOc8A8trHxn3NMryPoPvJxBYTO4sYJdmlLyxHC/9eqSEbsxvr8fL5W
ZJgGqMVMHtNGTGKdOSG5IKfd8HZhTbpQZgK33Lno2md8FH64OyZr6o7gy6fv
pNrQqAOrWsLL/YaDONLmZW6IoxlwBzv+8o7qxepDP6958DhCar4Ia63rP7yn
6JDkANcDuD7b9Eoo8i8+fnVVPEsrEg72/KZ0f/wLK5f5Cp5GL0DcUT6DlDcC
Gq+fF+xLHoLw4bD8s/cmgEsh4NqkLwnMbqonsGdNgsbg6kHmjfU3OfOBIuMl
JdK6s1IQpZYGgpOjCsmJVGj4l4J67I4YoOVz5a9KoEahM7rcIjwB4JYW9U4z
nAaNateaZj66DV2aZomOD2nR65nySF/7a7C+13N/hS8dopepvilGfQFQKXtL
pyc9qpymz3jyWw68ins6Wh8woF/tda/Sq/dBMxG9w+A+I5J5X1p+V5kVtAIK
nRJvMyG9CAtVk7fThNeatA2HKzOKcnlQ4CnXTMg3K/APWLKgm7rBY+PdxcR4
7YroJRNWVH9ylUWSKpnQIzP+nrvMhup1+FijMr0Jx6yDT89dYke7evtHzqqb
ExoPy4sGDdawM3nwQ/faNcJgt9wwpe4K5vbNyj7K+pBQIwdmGlkuYY3XqbTf
ZV8SVM6+22wfLuAVI2nz192lRGLunx4pvzn8jU+aM53USQgcWjgjEz+D+Zgl
mX0/zhMMPoVRzFFTmDr0h/bpyxywX+Qc15EwMv5nIHrNweUg3AoJJ4p0xrDH
84595v8QmD38KlSkRsK7zL3eXve4CLwzLw7KO/fjuzm3gskpN6A59QfKjh+D
P+9FRLqBBKsVHY9L3pDhounR8O/2JMhcpeB1ejcF2xKuTBzfMwSU/jT1HAy0
KOHkor6DtD0c2WaWYshIhxhX6kZbsg1helVLjGaNDkUekfPKVjkDax6OWJGK
AbG/kS3ju3IYyA1Zn1toGJGvd5H5gi8PDNkemXgzz4gc73/5RVhQgljskBTP
EhNyHlLlUX3bT6wekBHtmWBGy4qOowbL3wkrk4yfWv9Y0O3oaW4R0/fEwNGZ
4oF/rEh7aD408mAEMW7fcKX9Dxu6eflkiPpeRyL27rtMxU52VBOWqGtcdZ7I
NA+IbOlex4s7znmneWkQAU91k0dWVnGn23rKu+hbRMCdug7+mWWsO+no8L35
ESE3cLn7OssSzoKEI0+bMonM8tVIIbEFnF1nkUR2+Eac0NByWRGew6xl//23
S6uXmAHLFz+IGXz9J5A/S64SbD8DvogemcJapz/Hfw3khkNr2SpvpMhYjL/Z
wKhPEsaPwGG12FHc4nF9Lo1FGb5htyPuwUP4zQC1kK6JAdBd/136t6QP913P
PZQSdAuKRgze8ax34WaZikZTdk+4GvZgRnqiBR8xKuCR9AgDhpmrn+n16/Gd
y5r8Gb8SQM6321dC7yt+nGhdbf33NWiUNRv1XkzG9FU3ag5zb8xHkSlkmdsf
YLcvy0819nIYsjK6kDXyHSrpmio+XKoFnl41/vzMHhjlMSrpY+qB8WtPc3yc
BoAzVaeVxmQjjz72HWbxHYYDtfVmppxD8O6lbtTNC+NAFfnhifVVEuSOLtpN
Mk5CdP/j8qvaJLBt4x18xDYNM4xLHDuLBmHFxIXj2OwMULTazRAc/aBnHfVS
sX8JOpjbn1FLN4BM/M1VodEVEC2pqMnO+wEmSCp0+PcaMKdJm7Aal8F12YlP
z/Up0Nu0ocHnop+A7b7tdrnLlCjIQ+bWvUeZIBDKfLpDgwrRfiz9zJKVAImV
Wua22tSIz5Wbhb/pEXwtYONzPk2DCpl1xDMe3QM2V7SMjtEi0+SGEqkpa/hm
yFexeoIOyetP6jy6fwmGmDlufjlEj6LuympGxShBu61v1ClpBpRZnL2f+d0h
+EkxzbxPhhHNxF/e+3H3DjhgfN+YQ4QJ8TAsnzuot0JM9eY+JYsyo+jvT7+P
GnQTFvvMbZX4WZCzbYbHZHwFMXPIx8aYlRUlPY/XMe3MIOZM1S9asrMhunw3
J4/4IGIpc95qhoodJVxnaVP7Z038ufPlWDp5DdOoVBCdKUbErpFb9+3mVzDv
pcCgpIB7RHOsYsns+hIWYx13LPGPJw5przUx8C/iRYnT/pEv8gk6a++vbvvn
sY9dKnUwUyNxvkz81SvpWex3Jri4po1MuE7t2yZxYhrfYdAvFutiBKnq20p6
UpNYoVLK+ojIXuAOn31q6DWOecmxyqTrJ8EHIrI/hQ/jb5H/oq7v1IL6m/c/
haUOYDqVi/r1YldAN/mkg3d3D1Y+yRlB1DkDBtoM46kOrLx9QX951g/ijsip
vj/QhIXar8q/qYyGxu3yk5+9anBT+fGrb4NTYcdAsYFObD4W14nKnXXLge16
E3amZ57Bf+d7zV+6lcC2Q+cko0L6wL11jtu7vBe2HWvRnLo3BBpZZZ5NnQMg
XsHh02A9CulRtVQ/BoYgZO8XL00eMnxqkTP89ZAEK17vRnRZp6Axy3xPUd4Q
rDx3MUugmAHJe290TR8OQPbz1IhK0jIkRNSwWbXUQT2V4OCFf6ugu3DjQfKH
b2Bk8sFC+8s6vJd1UN9jWQySr0tpFlso0K7d2xji0rPBnWGH8XA9Jep8ZE2V
SJMKuovI6f0vKuRsfP8Pl0Q0uKobhD79QY2yvRhSiL1+oBHrKXeimAa5yf9q
TfVyBrPjiOJgPi16/v6D++1TFlBwdKxKLocO0XBFyPcla0JapfP5fe/pUWF8
ze2+3uOg5q9pL5vHgHI4HNwruYSgUyp84E4WIzqv8MWjexcDUNll8YW8YkIS
O12LPwRMELZseTpfUphR0C8VQeZ7f4jQzKrdb6NY0JcHii+u9HwiRqLcKMdC
WdHRJ5P/qE1jibAuriGNADY0WXhM3z/sLiHk7uFJCmRHaOXlK94+AwJs9l1D
N9cx660D20bldIkLpWbh4u6r2PXc3u/nnjgT7wMZfzK6L2Men7NZZq+jiLy4
Q+2fohYxldvXW77Hcgj9p5B1LmMef0g6cinyx09CiR6H1mfN4tzHCR084STi
GK9Ki0fhNHZ8dbKl8w41JKpvhP3sSaxK+Vr4gD0/HPuWxdFmP4G9Hs8OHhKV
gRMnb0x6RY9gw6+F5Ydvn4WaqJUZmphBPB1U8PckYQpZD/yeHarrxQGfWSfv
KzlAXHD7gzML/zBrSbHAWRkfWO8yFZhibsYvBuyuhIU8hjsllAZHNOowq+hh
YaHAZGh+rf6RfHsEHHPDhbQeDsEV12G1BwoT0MDQ9UHGmwR/PzaIpwRPQi1t
VLYdOwm+Kikcj3xCifK/n067yJMOn5VE2lVCqVBH29MfFQLPIIixcd4nlBod
+/29wPpAIARkqojpedMg+ln/fbqv7sBHvS/3jt6mRXE5CYXHEq/DlyrqMwku
dEi93uW9IKUOVN1UMnK0pUcre+ptfDIIeOx+k6rQiQHFiD2htpEQgaYYBTdN
e0ZkftRrtUWGHbgGuOTOWzIh0boTxYISs4TUYq5L83VmFPc2qlSBtZW4M7ij
ckGfBZVWHJD8/d8XYqLr3nFhTVa0RjOv6uL9glB6/l6gVZ0N/bzyvKNL4gHx
iKNgxlaFHb3UGak1ZLxCWPoaMbDdWcPnomdYpg9fJQZ2uNlmO69gPYv3p7fz
+hEUWXffdvstYVupe/6uCSlEKl3db4OXC/jC30KZF7FfiFyivP3lyzkcZf7h
oFZKO2F4L77Us2AGm0sGhMQdmCPyf1Cf+Zc3hQ2+yE+f3L0dylQmfG+9I+Nj
E2YxDnUHYMaA4G8PG8OftWT8FPoBak8XOIwHk3Aic6MFtbruxrxI5c6X3Y/j
3K72VjhYgk9ny7l80zH4aGDIXC9FggFmZqO2MDLo8hqrHLxDAiH1oAy6sCl4
SLI8bKQ4BNuCPp7jW6RBt4JnuzVW7YGB54uPwCItwrnJXC9UjCHvRZNa+zgd
uhAYG973TBX8hdMUmybpUbn4C/vowCNA9Vi68/MMA7LeLr/MdZwPBqo6dVKG
GJE/D+9h5QgqIM8rLlaRmFBD/Znog+aDxNu9eYdfdTGjP9FqYkOstUSqjced
K3UsqCWxTGEoI5sYVHX5kfeLFfl5mP9Z/viYaBO8m42/sqFVR5voLwVOxIdu
guFq7cb/k9JcW/tQm3Cx1FsJebmOt63uW7q3qkXYZrXGhBSuYnKoYquXqAOx
i3KskfPTMo6c3v1l9+MIYuFLuUlY3SKOWb4WlnPmHeH1RuD58eF53GnMLFN7
7jtRnEHvY0maxSQubr942QEiKqtJft/qNJZ14nub3EEBTSHK3XmTk5jJ6u9t
/QpeYAxNspurHgfxLzXxj11IUKE9qPldbRI8wM4kXJoE+TOu6nd1GJBWg1qT
r5wo1GvEKp68wIh8pKwkThdsh8Tk7zXvVZjQkYQk9WqfBSJ8PNf/qiozKuAg
++Xv6CRGaQv5BE6xILslq503X5URk3ReF0rFWdGHfF7X5d6XBD/F2ufn4myI
crJJPDLWnyjvbH6XvY8dWZ2/f5SVxZJI8AxNupy3hp+Xs50xpDYnqCimXbd9
XME2wbPEwCtv4tZe048jZUs4pr1FtLPwOTEkZql7uHsBh6PdZJWEIqJd90Vd
2MAc3vsd+WuENRONu/vzOOdn8Ck3rlFOvWmCxzTqtf/cFK6oaK3TqmKFpYfS
V7snyNhyTSJZ7JcwNGvPWX7rHwWnvrCvQWwkKHh6bXyHLhn60+WflPuQ4Ikr
69nVOnrUcNtmmJ/tKIiwKOx3b2BAwn+5HMsm+aHH4zh/6HdGREs/6MQnRgtu
ufOBB6uZUAv/J87AgyMEG2+eokwZM/rvo/yvS411BE/InpqAHBZ08VX2CfuQ
PIJke3tA6x0rYiwePE8n+4T44FWl4Z/GhvRMvT0P6t4mRt4Yl6e9Zkf5nHc0
hrUuEieaBh7+PLGKT3Ep5L18fYcoMTkqsu3zBBw8/E1VbeN5e0kl7uShGxvf
H+bfPXzTlBC3LpbObBmDsss7vgaeI8EOr/fVyT/IgByO6DPdIIEnl+A5oQl2
NJBTa/q0VoM40aX7eZS8jj1PX9NaOq1OnOdwuqLEuoZtLu6ZND5nTVzRqzY1
o17BnattdjvTQoiQdxRlRjuX8CA6L5L4J4OQCZzdZnRqAc8PnepKiaggmpz3
5AgdncPd3DNWmak9RM3V4LtHz89g05GuI+zCK4RRp8GCiuIUzo85sfz1OxeE
OhgTH4CM61Lt2sPmJECYQ9agt2AUC6blCXI5K4HINdHWoYwhPN6g/bflgz5o
97SKvGnvw9ubuNh4O6zB3Yz+3O3d3bjJ4MTIvkv3QIpWVTJerBVTtSjxpjWF
QsFlh2s+z+px2h4tEzaZBNB6Y15f0vQVr14rr8B6r0GoWjjU42gKFhenb7T5
/An0NToeCzjlAU1NlEF2VRl8k0jbp+74HdiurN8TpKiFgJKDRrEhPcB+rUIh
dLwbRlX/5LddGIBXpJ+aPUr9oP+O2SH82jB0XC96dZ96CGJGvI39ZcZhnKZA
XcV0Y36PJE4ULpLB8GLTwbZLJODa7Ttxa30KJrNitPhrB8Eq7ZFnXd8MKHX8
Vh081A8UN/7oLTUsAVOnIJ+wdQN8P/pzfLx9BQpYPlxmZKoBz/FBQZryNaBr
I41/jC+Dy5x7pIO1KBAWr2kaDf4Et0XyDmVfoETRT4JZLKhfg9XxAxzvlanQ
woMkvbiziWAGXj9/nKVGkWfaTb7cCYWaosG/8/I0yNtLfjfjSU9YcCNb7ZGg
RV2MGX01726BiERHw83DdOitTfjeit36cKjr9cGgffTIIMWJz1xaGa7VVqaJ
iTEgW7nq9IJ4cagRP1uSeIgRXbU49qb/6w5gCskqHeZnQq0zVScbzFYJte7p
OJ09zOjedMzTzqVuYv21WnkNFwvq+ClUf8n6G+H8UdFZmZYVZa3zFjyZzyRG
PwmsNNOzocMTV5XhUzDBYIJ5/ZbY0GwO55jGSRvCbD7EqGB9DVMYvGwvszEk
eq8FK1TSr+LPLfuovsp5ELl3TqET7Mv4FdP5t22WccQ9vtRPa2KLWMRyeIi5
4BMRLuWmkHd8Hg9e+ffNTb6BGB9e76tVnMX/GXfrfT9LJjT/O0t6qjqNC2X1
iAtLDODZonrXCU3idsYl34SAPdDqqvHQOnEcWwnc+Tr19gR8Fghp0coexnK6
9onfzp6Hw+ySpmtlA1ialF7x+b0FJPErNemt9+DfKnF6u/ScQVbUrI9PuhNb
3Y4T7HL2gxuvKB7wXGvCMeWcj0YMouHEv4tn31HX4iDNjKQPwqkge6Jkxinu
M06cGCoSFs2B66oXWcUDouGOe8euDqYS8KIXt3W17YOgeUe/ule9wMbLdVHd
eAiEymVKvlcNAFXPMwb9c6NQ6kOnTt0+BN7f9PqNGMlAFX/5k3TAxvNi/0yu
wOokhHnlnrtaOgQpff9ueExOwz3OQ88i4gfAKKFX8X7LMjwet+58yfIbbsT7
Nu+uW4WAwTGRCopK8GCxmbXKXgfzu9tYA/4Uwx7fmfu9vymQSdp46q75bOh9
Z3DH9AclOnlY+QSdRSo8f2GMHlRSofkwi7EjqRvHWx6wPFNOjfRjD2paxPmB
bvylpcIPNEhTKGe34IozqJ0i2zG/p0UHvlxYXy20gJ0M75tfZdKhzOgIxV9u
52E4jm37eDo9mj5DucCXfgL+9EX4HMxiQA9/B7g0pgtBh/FAzHQqIzrh/e/W
+SEG6Eto8bz6nAm5euwYXjIiE9+YZy7tjWdGlJLvGyyONRBiR3Kcjz9iQXwc
7jr/fuQTtwRkGRr8WZFEipJ8sW8c4X+CFFrixYYayOuilQUehIS4sri7NzuK
YrZrZBc3JGpGyEE6d9bxzUNr7KmmOgSv3P0LfkGr+Gv7eNKNLCci2JJKSyNw
GaOydC7UEknQXqsvepOyiBkY9199H5BN9BgdFw34PI+nQ3bvSImrJXokI37M
F85iNdYrIRPvhgg2wipn4Mc0Rv7ah22rqWDU8PdJ49JJnC3P7aDuvguWsqip
RkInMKVcpBRVtDTY8Vzh5fs4giOfJz9IyFcFMdmseKePg3jl3Vj1IUcTWFgP
XaMc78W/KKfFjdvtIbggztRnVxeOe9tlufrNG2r09hlcVm3GlzKsg9jFH8NB
YTbaN4/qcEms+WizZDK8qaqXczYYATefS7nDbhs5sui/Hc/3TsC86tru354k
eGzMO3fr7iSk+WY9YeUlgfiI/wWGMErEwd+Y7eGdDnRjihm8/lSokSpaxif9
GWh401zr8qdGtG/PeN7NC4TwrN2kFjcadO6m9B8OWTdIvmw/xm1Hi15Hy6xm
yFqCUNw3PUZbOrRLwKq7z1cHWIgOfrnr9OhSQvihviSAXS1ZO15bMyAh66tH
95JEoLHiqVj1DUbkrP04QHXXNljYofR8vykTkl3ns9VYmCUC5qbdTpkyI8sP
WexzlG0El93aTh9tFrTmLBSonfuFsLciCBYVVnTtWFEA37kUQnbhQYW6MhvS
VyLfJK88IGIrvFPW5dmRYlufivPCFWKGSlRC6OEaNnl8v8HG4ArxJuypFKPf
CmbhUrNIlvAl2gKdpfZFL+Foo6xpvdYXxOwvl5zzeQs4xbD/gNY6JgiaQoOu
D3NY4NHa+S9hbcTSS9u1lOoZXENlu43HepYIJ+8XPFsxhbXXBvadD9wG2y59
KQrEZBzZQiOkRn8A8lE0y+ibMayaNJD3jhKARvjDs4dZJNxVeYFNMV8Hjvdl
CwX+6sd06ut19R3XQX/ZrOGUwhj4ze5r/nqABG1vk7+QvMhQEnw89OJdErRP
/nSo85yCMJro4CHtIeAJCWNOnKRBOM5kwP+aA0zvtJ9aJ9Oi6yy32Hp4TIDL
5dll1UE69G6HqcUetbPwfRFonpPo0bnKHzORe6UhmOxKzhhlQHPSY3eS+XZC
/6wMnUA3IxoyM1ykl6KGehF74+RuJiTFGSD8QmWIoBOaOcrcwoyG5a4vvxD+
SSjMXqsdrWJB7IE/LSL1c4gb9Ufr4ypZkZDmTOJ4YCRRf0dT/3AxGzq4MtWo
HOlMlEXRfZr5yo7UQ0WHeW5eIKgG9ux5nreOBS+7//6tqEXI7F+83PdjFcuZ
93k4XbMn5jv7L+l9W8bOT8MGAzvDibNBN8Hv3yKmLvoh67PzLcHkxM3vuDSP
nXYkxYarVhNG9S0lIQuz+K3TfM5d137i1u8l7lDWGaxy9UlZrDIF7Evg4q2n
nMI2D8WoA0Z5YOpPzQnOrHGwnYbJGgcSeC2I/RclOwlGAipPE06RQEGnwNha
fWM+vWhdrcZ+EH67kWdy1RjRO8YA9hoNDvCqm5cKJJhQ/r+EY7zWi8TQyHRQ
JWJGRWyPgrzF/xFBj1Lt0qVZkKt//5lUw3LCMRwZvBJmRWYGsMfqTxqxQ/+3
GYcIG7IBRcHtIQ+JuojnJoq72BGF9bmKJrEbxMHVyxU25Wv4uu3bAywaZkSV
+/aTN76tYL7cuznhvV7EGUr9ExL1S3gX2Lbc2/GcODnLcnQ/eQGflnllkR1e
SFzniz33fW4O/5diae+S/JdwVv00eYJuFgcK+1C/ejdFkB/k+5LppvHvBB+t
9FIWUI2hiV9bJ2NpMSkfRn5heGN7b/xs5SjMCYTt46clwVvZlQt7T5PhB6fl
arAvCVrV0pkqq+hR2tN9SjGFR+Gdle9JqxoG9LpNxfTDtAB0Zzz6xVDOiBY4
K7QHOmnBqGffOFUpE6oUaVq4KD1KXOeeUXlawIwibyho3XL9TXzkZBHieM2C
DN9NiLnpfSCsFo6PHU9nRbEGAQ85pJ8SWc1x0/OJbKjM9Jnhnwt3iAUzYcfj
KeyIlZ9oPmeuR6xp0aqJnN2Y582US/qjbhPpqRYTh+ImYDb3qL6aPwmuLloM
FZmyI9MFszSzu2YEVYBygXjhGDBRbrfuUSEBw94zEu+LyFB6mGz75BYJQqoG
l7MH2JH5lK1+m4Im8c10/w8N+3HQ6rBTOHmTBDFeorvQfjKERvCNbd/IC+5S
xd7XTScg/v1fT3hAgqkbzvM1iWT4Wy0QnuZMAkFVx7SWwXH4YsYyu76Rzytm
fgbSXSHDgkeH9gsvEjTwMBhPN01ADU35ocmN7dlb6CeGz7OjrLyxmGIrdcJz
9ykN14V1LEkvsvT8jRqRc95H2Y5rDWvtUj8Z/9aK0KqoeE7JvIKdSXQWSttD
CJkonZy/e5awdmHjnXcXM4hFa4fzbkoLOEO9azlzXwUhEhislSc3h8UfTdH/
p91DnLjNf8Pq0gzueyxmLpyyTPhcV4y6qDaF6Ypqx/1tuADEpGVPniFjydu9
N/h9JOCL9/ExyR+j2KdznXxFVAmajlNKCH4ewkckaRmEruiD63PTlqcjfdh0
p4xJ8UNraObrjEuT7MZS4wrcvisewI0yNerOtuKKUxznKfxCgSP0diEU1GPc
feXU6cF4aC0VWqT7rwJHvXVyFPzvNYRo1IicFU7F7BJBh5w25u/mA0tXOCdz
YeXJLGvmyzL4uO3Ho9ij3yE37KhUREMNoKzYu8H3esCM7+aCYVc3WMlOngpQ
HAD5nLiBwmP9UCZ/XuaC3jCca1DndFoehEehPGVRwuMgFfW19bERCWoGzHY9
nySD8M7f5InLJBhCn53a56eAIkWa6UHjIAh+f5aX0D4Dv25pvBSR7Qe9AUfJ
ppol+NPuZqD1sAGifbwsLzauwN7PbbqTMjUQWqE0HF64BqrTGiMVRWXQcL/Q
3kuDAs39tnMIKv4Eh5b0CkY0KRHz8MOyaeI1bAv5eOcZokLuQuaXrZ8lguLy
f35Lp6kR/p4lL/0jFOrkGz6elKVBAkXXZWnCPWH8btUezoO06JfTkJnmNhvQ
e1rSniROhyZUrSn0HfRB8/sdZjtBesQowaVj56MMmR6kd3v3MyD2A93Hlbgl
QEPZ+b/2A4woN8RJ0ZCXC+7uLZ9u4mVC19x+jCaTVom5f5wCfgLMKDT5loD1
uR7ipx222c7Bgvi/F/1Qb/xGyCy/mD9OyYqcQtID3ANeE0NXAn5tp2FD0v5X
/7aohhChx/c6nJtjQ48NHJkuj9oQ6cecJpTo13F6+1Cs39/LhEpK7J5p9lWc
/vp7tVj8XeL54HHvFu5lzLXe9c2/PZYQWZ9Ld5NexLS72sv6VT8RFzln7/+G
eTzJ8vf315Y/hPz6jQdmarOYfE0gKJyKTBSItjXWaE1jlb2BvSiIAV6aH/7P
R3USR7LYoOen9oDc8Lyn05txHPRh8myt7gnQDQ20SSgdxuXjtx6kNmpCVzdd
7tH6AczU7sRDOFvA17bKAAW2XmxFX/5zjdcZFhJYfdx0OvEJy53Z54/6gWav
xXONB034n8LB0JK90TB82mJW9HQt5gmWu6A/nQLnzAlFml0FWChvwW4/ZQ5E
KDC0R76KhORrITykjfn9xGz8I0vTPlhIovlkHdcLIUzSzfMaG3mClk8no3gA
bOw7fvASo7D/oJvJ/aYhWP7vxX99lGS4xXXqnvJGnuC+yx1DPTsJtKOPX0VV
DoErHdfYCGkabqyE/+FMH4DsnQ92Gv5eBgoPKvsrIr9BhnRM279qFc6MdmVE
iVRCSG9VyXzGOuxTYbwsupFv4smPiptrKRDd66mIM7tzIObBCm1sJSWibONo
VYhIBZX5kbRb5VRoTTRfi6srGvjuC+bs/UKNeDMJq4vNfqDPr9yymk2DwOLW
27+yLoDkq/avvKZFPS7Fgq6rFqDhENHVmUaHBG47zP0ePA8s/m2T9Sn0qDnl
wutuppPAE5UbvOcVA+oKDcePp4TAyHn7lFQy48b9/8/EVS1G0DtKfq8Vz4T0
lxWDL70mE45MO1p1Y5hRw/697x9ENxBLsyK7PQJZ0B8vl4KfSp+JQ1digyt9
WFHL+p9qqV3xhHffBYt5DzbEwFCgs6R7j/hA98pX8R472q6RudfuryHBKfaX
v+P+Og6hOpx9Z+YC4eEWKp39eGN9pntPKp1yIu40rYWPhS/jWI6enFNOkcTb
s8JvDrxexF62c11CMtlEOuRaviydx618xdeG6WuJw8pLN4PKZ/E1rZCsJMUh
wl1rJXFnwzT+ti2desyJCjj7PjdaV09ils/1RSeodoGR4LvFqYQJvDus7ZmN
hjQwBZi9uf5tBO+dtJhRMVSFVhZfcmbFIJ4Xp78yzWoCAiWc2aMrvZj92UXG
xAx7GHZ2fJt9qAt3nhBOlo7whpwIf9fQ681Yd/5kJHk1Ah7o7zC0eluHT+6t
FaqgTgaeS9wUx9RGYKeVsQOv0xAomL6983bHBLgadLF73iMB+f2pVm2nSXia
kyf/iZ8EPSWiXYrBlCjOjC0u5WM6ZCn8Zqf2oUKnMvcN144+Awn5+J3sD6hR
1eH7cg+WAyFKnKVqpysNUv6s48bh6wZPjFRf0lvTots/TyOdIEu4QPPKBKzo
kEPJe2vKKh2QOJC5JmhBj+6GS9r2sCEwC/jJn2LJgGYax6hequ4H3fYyX7pr
jEhA4OqHXJNtcDPLoJ7TkAldV8lIZjObI2RmOVduGTKjH04nnj2430b0HXH6
9u0cC3pcG+YqRl1KSL1LLF1XYEXcBj3a2z+mEEdTx2J8ERvq0Xt1nMvSlxBK
6l+qPMmOtJl9PU45XyVOKbKXZoauYVrhulxPsgWxrTZt+9FHK/itx7fEPcUP
iKoFe4eK+CU8b30kPujuCyIxr+rF98IF3Ppm7Yb9DUxQDx6LWS2ew+6vSs99
Ymwjzhb8jT/2ewYrnDBUTGCbJVaoClg8a6cwpXfDIUm0DY7/e6UfU0nGc8F0
4oup+4EvD9HMFI1hIQ3XbXseE5AUlSPeUETC2wJHqHXsdWDgY6DLl85+PCv1
6Thf9HUoC0x9unp4DDQ1PJbi95FAj2Jsyt6NDEzmCmvVHiSQPT158YPrFNz3
0Z4NMRiCXawew//GaNCKU1ri3VgHGOJXzSSP0iLBFlUvOl8TUOl0t/DspUNu
55K3z6WchdFeln7ffnp0/8/ZFG1HaahLillMHmJA/CYdmD9sJ1xlMTM17NjI
E3dN1dS8qUGpxD/sUQcTknn+LsmzaIjI2b0jX66RGRnTDpkqfvhJbPvcevtw
BQui3cm6Vzcnhzjw35OLYeWsyO+OQljJXCRRuy9fzOozG3K8UJf4j8qFOGtr
xVb8hR15MN1u/dNxgTgrzPhBtGgdr662BbTWnSdirjLIbWtYxV/2pY4n09kT
fed6YuZrl3FoxxML44fhxJRtkSTF4CJmEv7m6RP4hqi7+NgwjGoB27TlGiVV
VxGvBxSNd1PM4SWqs6lt3P1Ec28IdTnXDM5hKyzknFkn1IXX8roYN+aj5E7t
TB8eGHS9kiCUMA516zcYqu1I0KmuuXznyCSsp/9T9QQS+FO1X79yhgEZBE1S
cd89CFrhOzUnVRiR+HpNbMFTDpiyZLviIsuEXlryep7rWSSihjlZF+WY0f1P
p/qCi/8R+tq8fKOSLOia8YfvGZ/KiSONz9vjhFiRI0NJQ41mOsFOc0pGfQ8b
ys4Or7dnCCAuWdN8ZOJhR691hnb++HKDcJBT0J//voZVLIqeOA6YEofyBfmi
fq7gIt1YblZfL0LGXtftV8sS1nVfO23mn0T0tJgKv5hfwHw0LSZLrIXEoVWu
kMG1OfxLPcL8h/hfotxIMPwH6yxW3s8W4mIyRRg9UXMQZp/GikH6eWEKLGAr
OHaclWES3xsvtlit2Ac8q1+ymfNHod33YdJpChIcCDnjlylPBtW3bM2afiRY
kXEeef11Yz5pDc0+s+MYzPCmKVpUMaD1I4vBhbd3g9mX/AMqmBGxFcfpDMnS
Qa3bKcGJIiZ0dGXWS7twlODg2lFd9ZEZXayu+Ler+jfh+9frh146C2pIOHr7
dMkH4qB8jL1YCivyHTkv+iD3KZHuS1spFceGzgUzfN7edIe4LxtYvZ7IjsyW
+tYsx/UIi9AdYhe0V/HFac04erbbRPyZRZ1TIROw/kNv7dXG/o7UfwM/Q3b0
bsHntUCPGWHDHXBv4vUYjHE6UdookcDH+bHZ8Q9kuOTB5V1oSwLOF+o67j3s
6F76rsVvVOeJAqoSSUPzcTg7rH2l4zoJOOqdNSt3k+H1Ebpvdzfmf9s/OgPO
Whv33+yrR0/7kOBWARbVfUoGS/sGVydXEuwYYWAeah6H7ZWvLureJgFS4St6
ZEgG/PoaW4k3CaoLE0spqybgCXdr+6uN7c2fKprVn2ZHiueYuZj4NAg6F+bc
xm1kOP2z9zXLxvygz+v9LuLIBKwYclCzbeQRGdJ7wXgNMrxy+DyQs5Fncihr
ggQyJ+DXb0+Hxo08JSDZScqXIMPBidDfERvv/R6J8OvbTsDItcywvRv5sMvF
YaGvfwL6v5Qf37ux/eGAGZWq5Y28JubaF4PViE1v+ZMi/53QfkfY9JZ9w0cu
f810g01vaSvp+E7rqg9sektdMbSqYhQIm97StTmnmGZvBGx6y5TOjEny1aew
6S3PtdfNODQkwqa3tNUct3jsmrrlLXPmvt8MiMnc8pYmB50CIorfb3lLsfHM
I1/3f9jyllKDf2J9yJ+3vKXtiWQTEcBb3tI2qzh9Z0PZ/7zlU2tSOfe3LW8Z
pj309Hlr9Za3bKr8cjkmp3bLW74YfLGj7lXdlrcMOJZFpR9dv+UtdbkvPxNW
/Z+3fNL01dNuqnHLWxZofr2rp/d3y1vyDjOZPjNq3vKWCwMpY08FW7a85b21
ad1Ej5Ytbxklocv66l7LlrdMteOWmuZr2fKWZqBzS/Ra85a31Ev53Sp55u+W
t1QSCDVn6W7c8pbRR1BrrOH/vGWBP2WtfWD9lrfcn9M4NFNUt+UtLx89EXm3
q3bLW3IX+oT4UX7f8pb84kTwA79vW96SlsxdeXyhbMtb1pdHqOxtwVveMqHA
0+q2S8GWt7QZ+f3yseaHLW/JkLzuLHwge8tbMmbfWZL4kLnlLZmF+Si4H6Vu
eUvKnIow3cIk2PSWCR1O42zPnsKmtxQMDdPlT4mATW8Z7OVyx3R/EGx6S216
2ojKBB/Y9JZFcmK/eD67w6a3rPi/62HTW+KjN6ldklxg01v2hl0U2vHdEza9
pbjgvrEXL/xg01s+dq2/oxXwCDa9pXnSJW3ubVGw6S13MQsXig3Gwqa3zFM7
HLKtJnnLW15t0eOhN0vf8pYNCjNR+n1vIChX13fhZhfc0Nj/XOJN05ZvzBui
oEzu+bvlG+NOjakUfm/e8o0zcqmkCYOWLd/YZnA0TSmgZcs3Un4jRPk3Pt/0
jQMONatuG7/f9I0PlfSt6Lr/QiIaDM/qmYe9kpEfv8U3bXlCqwnWlu8X3255
QkWqxm2ebulbnvAt5dObSdwvtjxhbLlKo7t1HGx6wtDylsv9dlGw6QnjJXs8
um+FwqYnnHjYr/zfLn/Y9IQ8uxRXdz+7D5ueMEJSizWNwxU2PaFA4em5HfVO
sOkJ0/mTGlUFPWDTE1pp19r3zzyATU8Yejq3d84sGDY9IcPEuoHko8ew6Qmp
ngfmSvA+g01PWBE4Emn6+PmWJ2whFci97X655Ql3oKTtp45mQarX9OStX52w
L+qmWY9205bfa+so7Hif+HfL7505mpOe9KR5y+/Rar/+uw21bPm9kKT48BN+
LVt+z1s+UD/JtmXL7wln27GYzTZv+T1Kms4/Q8LNYCyouNJnPg8u3vTXlWea
trxc1pOOjtq977e8nKhCA80h1owtL8cbyvN57GzKlpdjsayk5nmQAJteLlzt
etGthWjY9HJUukOP/rsSDpte7k7kDi1u9gDY9HJpckUJGge8YdPL9d1INKvX
uAObXi5DylHsUcRt2PRyvlbFj+sbvWDTyxnIv7h92O4hbHq5u3vJ5pwNYbDp
5X5FsXqNZ0VDWdq7MNlb3UBbsttlB83fLX8Wamc4syzUvOXPoi6LuX1daN7y
Zw35u1P3bpzPTX+mS6MWU7xxvjf9GZHybPWwfMv//JmN62nj2OYtr7V66uPx
k07PYNNrqekyxLisPYZNr6WrSCXz8EQIbHqtS64OnBc0fGHTa30T2ZZ7kuMe
bHot7Wsb0ym9M2x6re209cYOC46w6bXoLh0SlfnnDpteK0ufYZpd9AFsei0m
5fCz1y4HwabXusT5XyJXYwRseq0XdXP8Q6diYNNr3bfjUlFbSIJNr3U1+cjV
UtGXW15L+o8PTezV13DrUczAwdoOMD6pm52xp2nLR/FHfzvEdvfvlo/iXpI8
fMm9ectHWXhLmdEdbtnyUQprOpwJ3i1bPspt52D+tGvLlo+CQebERoaWLR9l
dE/ZGak0g1z4xGFvoXmwuCm/T0vg75ZHYrA2GQtIfb/lkQgnNc64zowtj6S8
h/3AfVLKlkfaeeasJFtcImx6pNI5F4nMiiew6ZF0aBzYn1NEwKZHumezfc6O
OxA2PZJW4iWngn/esOmRHhMLjO4ebrDpkZZtKtS/RrrCpkfKmoyTb+T1gk2P
5M3DQTXr6w+bHomvjcksICMUNj1SCL1JpVRbFIiIUwXxjnSBaJed/JGWpi3f
8/z3uY+9VM1bvuel9/w9357mLd9D83Z+75erLVu+J61gN8552LLle+xLJN2n
1Vu2fA+ejozYltu85WFG/oS2+FjHwqaH0TNiir+cFwmbHoZ3p9fxI5qPYNPD
nEEsNWOSfrDpYTS66Vcqz3vCpodpPmDNdobeBagCkDNDwSDsHWi0sMlu3vIi
1Kdkv+eda9nyIiyKzUftN/Z304ssvS/zy9o4nk2PwP3nRj3PxnrZ9AjB4ukP
rvq0bHmEAz6+fm2HWmCz3x+VKDtO2u4Em/3+C5mHrpeHOsJmv3+O30vbVskd
Nvv9LzJHi+oqfGCz3+95v05IvTUQNvv9zxoCHTTvRsBmv19eUul56q+nsNnv
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
J38Za5zK4PqpRuGcl9OtExhcP907bZ97jFEcg+unu5ulVKcMRDC4ftoT+Khp
g2cIg+unHaNy+852+DKB0yZIlRm2Mkb2j9XHQr2K64sPNTv6BXpCWl+UM4np
Pw33B1xffFWzIO2gh5DWr9T8JtpqeQpp/Spmg8sXZ9gf16/u9+evXqkjZHA9
6NZPLZ+2Vh9aj2FVL+6eDvcTXI8ZOaLpwz+4n+B6xKLRyieGuAhpPSI44WJC
JMxv9H77f6NVLkCMvm9vGM3uh/d/9P1YQd72JrifoO+HGupYDun2ZtD3Y+ak
Tm+F92P0faWimhcT4Pqg7y99uXVCNdwf0PfV+zKS6+B+gr6/+aLCtxFwP0Hf
P7nYSZ8F+6Pvt7SXTFWC8dD326eN+dgb5M2g7xttr5VeCtvR97MaZ6gthc+j
79cc/RirAr8Pfb9Jw1TvM8To++yKY9YCiNH3i9tLi1dAjL5v+qqGuwLGR9//
PnpC4FcDbwZ9//m8bV6SCbnk+9Hvvzu0T8wj369UbMg4eT+ffP/fxIqOMZ4F
5Pt/MkY+VVO8Sb7fU5ul+rWviHx/3NvzYSWVxeT76+5FDT1TXEq+37347pbc
a3fI92unJ3n/XFVGvl/o5qCWqF1Ovv93dOtNNZUK8n29TKX/FvdXkO9fvK54
0e5DJfk+d7L+vXpuFfn+yln3f8dFV5Pv2/4oWdVtfI98P3Dph9CIH/fI9y/v
t1FdlXiffH+mj05EnjyPfD/Kdll9RiKPfP9a0XL9Yb945PtZn/qcR6zgk+87
ifeM0tjLJ9/nTtj61zaCT75f9XBJ6HmI0fer/Ex2VLnzyfdzLE6UrVrFJ9//
4r7w788fPPJ9yRu+jeUneeT72XdSff1UeOT7x2eHBRw4dZ98n7W3e67373vk
+7ITN2jEbr5Hvh/V6TOafaqafD/m+a6apEdV5PsqKksFjd8qyfcP9Z+L9phU
Sb5/PC7rqNbSCvL9pE7Z77565eT7HWpjxydYl5Hvd7dfffmde4d8v69n43X/
ilLyfYvCqI0mP4vJ97/eTlvAl7xFvp9wqiLw3dqb5PsW4n2dfskF5PtWjqqN
nQ355PtXY2ZsqNPPI9+vH5wP6Pue5+Nn3TXnMPXZo22KrguYJ+tKV02045G3
e9Qkaa7n88jbw50zspYo8snbhz2vi9pqzSdv77vd23PlEJ+8/fsh98ero/jk
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
FmeTZ1Qs031nMo5NnuEuf+CYpQKbPOPc1HPVL2awyTOuzpPv9lnIJs8wM7/f
IK/NJs8Ym2yk4qjHJs/wdFk1OnYdmzzjV0uzXJkZmzwjuu5Kfaklmzxj1NVQ
p71b2eQZyVJpbf3b2eQZeVv15io6s8kzDjpO2WbuyibPmKt+VPrkbjZ5Rl9N
yowF7mzyjOs3Zhi2QYyeYfdV3/UbxOgZbycYuEyDGD1j3kM1j4swHnrGWKHb
roXwfegZO1703v7hxCbPiLva8W6hI5s8Y8uExz0b4PegZ0yYx7D+wO9Fzxho
q1023pxNnsH5+aBLCOcLPUOt/OmFHfps8oynk7IrguB8o2eYF+5b6qXOJs+4
bNYY92Ymmzyj+n1NOheuJ3rG3WlnX50czybPkJ769lkB5AN6xmKdIF0TyBf0
jLOFrRenfGaRZ0zzDWwa/pJFnnH3BxPL1LDIM265GyYqlrLIM7YnCA1+QT6j
Z8Tk7nA1TmGRZ+B8QM/YtsI9K+cEizzj2jS1gIf2bPKMUZKXgtV2sskzFr1L
M3ziwibPUFAqqo90Y5NntCybahqwh02e8bn243c2XF/0jImrjGYO82CTZyht
11zJgu3oGSOX7K/yh8+jZ2wbu8U8HMZHzzCKaPa6Ct+PnqFodVJTdHzoGecn
xRkK4fjRM3zPXr5VcJJFnvFPP9lvUwyLPENuf2kFaxubPONLr660/A42ecbp
osM2/ZD/6BmPm4c7/IB8RM+YLSX1dxQcL3pGplePnyf8HvSMgqk2X/ohRs84
1OUSVQcx9TNMsmurh8+jZ7B3nNOWh/xHz9BZ4D9s/y42ecZ4c83FEyH/0TOM
G25vGAXzFT1jYfD2H0cTWUz4tBkpj0tfMvPuXtGYDfujbwgmDHQlwXjoG2XD
FxVLi+bboG+4Ms0Sr+B40DfqCsceewTHi77xMO1T3wDE6BvVIWKRbhCjbyxZ
NPv7RPg8+kZOT2hBE5wv9I1t/hq8F3D+0TeGWrya+F80i3xjTrFVlBRcD/QN
1X3cguMwv9E3jv5YvzsOrgf6Rt3HSxtZMD76xiy7+7fq4Pegb8i61K03g+ND
37A9djmiB2L0DaOFVZeaIEbf+PtUNu0vHD/6RljlKKntMB76Rmvg1K31cP7Q
NxadmLMrHM4v+kZSTeCaNLge6Bs8D6t7X5JYzLWPZ/2rCoTMZE7XiWzIV/SO
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
Gh99ZKGz5KIV8P3oI0MG/8P6EOP/7+3/B3Z66Xg=
   "], {{{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1: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
Ag==
        "]]]}, {}, 
     {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV1He8T3UYB/Bzl5FxRVRoXKIkNEVaIk0jmVFJtG0qWhpKqSgNu+y99y6S
kTKLzJK9y969nz/e9/N8P8/v3PO6v3NeN6tpq9otU5MkSaGzH73SkqRCjiSp
yFJzwYwkWZKeJHnk+/IHMszV5BvM4BwXczftmMAxtrv+AjeYn2EA/7BEl0/e
RVvGczR2+vOUNjehP9tYrMuUd9KGcRyJnf4c15ufph9/87Mur6xEa8byX+z0
Zyllfoq+/MUiXR55B60Yw7+x05/hOvOT9GErP+lyy4q0ZDSHY6c/zbXmxvRm
Cwt1WzhFSedG9GIzC3SbOUkJ5yf4lk38qNvECa5xbsg3bIznoJvPPOYyh9nM
YiYzmM40prKR4xR3bQO+ZgNTdBs4RjHn+nzFn0zW5ZIVaMEoDsVOf5Qscz16
sp5JuvtlJ6Zzlou4nVcYycH4rM/dJ1+L+3MqnqfuLTmLC1xNXb5kHRPt35Pz
Sff+VY3nQE5zRzmNM3GO508u/Tsyn5wjU2R5mV8ukNnlyzKvHCEPxH3c4xLn
xebcsnO813KuTJWVZQG5UOaQr8pMOVmejHfM9Yvib9a9KWdynqviWZJNX0d+
wR9M8Pl35TzS7KrI15nK6bgHbzObxP42+RLD2R+/w/X3yg7x3XMi3lvdlfJx
evA743XZ5a28yDD2xU5/j2wf3y/H4z3WXSFr0521jNNlk7fwAkPZGzv9IYqa
H+Nz1jBWlyFv5nmGsCd2+oMUMdfiM1YzRjeaUYxkBMMZxlCGMJhBDGQ1Byjs
2pp8yiq+161iP5c716AbK/lOt5J9XOZcnU9YwQDdCvZyqfOjfMxv9Nely5t4
jsHsjp1+D4XMj9CVX+mnS5M30pxB7Iqdfnf8PzU/zEcsp68uVZajGQPZGTv9
rngfzQ/xIb/QR5ciy/Js/M3siJ1+JwXMD9KFZfTWJbIMTeN7YHvs9DvIb36A
D1jK/1Zc23E=
        "]]]}, {}, 
     {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0VWUUGUUgNE7AwMDUvJASYdSSjN0SCMIDKXSQwvMSCMd0t0l3SmoSCvd
oSCtSHdJ97B52Os759yXu9afKSomMjo0CIIQYkkRFgSFw4Mggkrm5PGC4B9N
qKv1b0LNw3Qxh3jJt/RnNrt4SB2a0Z3JbOYmFalAecrxOWUpQ2lKUZISFKcY
RSlCxPv/oxAFqU1TujGJTdygAJE0oSsT2ch18tOWfsxiJ/9Ti8Z0YQIbuEY+
2tCXH9nBA2rSiM6MZz1XyctQFnGQF7SmDzPZzn1q8APz2cdTGrKUI7ymE+P4
jSvkYRXHCfEOQ/Q08cwL9QDPacVZwt2Xa2L9U9/Sm6T2kxpXZ+gHuk3v8SUf
2s9pAl2hSfQvjWUQyeynNEznaSLdq09owBniuy3Rw7yiIyeI4z5W13GZz1jJ
MQLfBusC9vOMlizjKG/oxXT+4C7VGchc9vCYb/iOMfzKJT6lBT2Zxu/coRoD
mMNuHvE1MYzmFy6Sm+Z8z1S2cpsv+IpoRvEzF8hFFD2YwhZuUZX6dGAka/mP
nFShHu0ZwRrOk4PsfMLHZCMrWchMJjKSgfSkIy0fkYbUpCIllalLO4bzE//y
DgRph3o=
        "]]]}, {}, 
     {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0mUUFVUUgNGhQ7pBuksapKS7OxWkQaS7u7u7u7uRkEZBQFFRSVFROhWk
9vzY7zt3zf0x651J17JLnc4RgyCIQFw/CaMGQYHoQVCQcuY00YLgT02qu/Qa
cc0TdRM/Es25o45gJed4S11a0p8FHOc5ZSlDaUpRkhJ8QnGKUZQiFOZjClEw
fDfyk486tKAf8znGM/JSm8/pyzy+5il5qEVz+jCXozwhN18wnBV8yxtq0oze
zOEIj8lFB4axnG94TQ3Gso5LRPL/fKa9mM1hHvERE9jIZaK6116Hsoyz/E91
xrCWi0R071Pdws/EcO6pszjEQ3Kyk6vE8Xy83iKheYP+QBRzO71NYvM2TaG/
6Ac6RFPqDY2vSzWZntFXVCO18x+aRLfrh/qrxtLRmkpvagJdo8n1gkbQpvo7
icyb9Seim3vodeKZZ+pXPCAHO/iN2J6N0/V8T2TntrqVK8R0HqxLOM1LqjKK
1XxH4E4T7c4MDnKf7LRhEIs5xX9UYSSrOM87GtON6RzgHtlozUAWcZJ/qUwj
ujKN/dwlK60YwEJO8IJKNKQLU9nHP2ShIg3ozBT28jeZqUB9OjGZPdwhExnJ
QHrSkZY04R7DXYX7DncYfgfhrsJ9kzTcb/iNhLuiPPX4kkns5i/eA04PiXI=

        "]]]}, {}, 
     {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0mXYFVUUgNEL0iAhISHx0Y2EtHR3SYPS3Q0SBt0o3Z3S3Up3p5TSoXTn
mh/rvufsmef+2RPWuEO19uFDoVA44vlJETkUyhElFMpJVefs+lIz6B59SJjz
VN3GbRK599JxrOUKsc1+0A4MYQmniWReRStTiYpUoDzlKEsZSlOKkpSgOMUo
ShEK8z3tGcxiThHR/xfShrRjEIs4SQTPvtUGtGUgCznBZ54V1J6MZQ2XiWVe
X9vwKws4TnjzAtqDMazmEjHN6+lENnGd+Gat9Rfmc4xwZvl1Clu5RUKz7jqa
VfzN52Z1dQIb+Zd4Zq10B3dJ4v6zzuMoIfd8upv/SeE+WZ+SxnmL3uRL5276
nHTOf2pmva9JdZRm1ceaSldqRr2oMbSOfq0vNL3+pVn0gSbT8ZpNn2hq3aCZ
9B+Nqy31GWmdt+sdEjv/pI9I6TxXj/CRvOziP5J7Nkk3c4ME7l11J/f4yn2k
ruAC0d1r6++s5xpfmLXQAczhMB/IQxdGsJzzRPNuLf2NdVwljllz7c9sDvGe
3HRmOH9wjqjeranN6McsDvKOb+jEMJZxlije/06b0peZHOAtuejIUJZyhsje
r6FN+JEZ7OcNOalOY/ownX28JgfZgz0Guwr2Heww+A6CXQX7JkOw3+AbCXYV
fEPBPoNvItgRYVSjEb2Zxl5e8QmW5IxJ
        
        "]]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV1He4znUYBvCfnNOSlBKVspM0jIaUiChKSSpFEcomGiIUKipFGdl77wrH
PPZWRpkhyt57VOjz/PE59/O9n/O73vO+7/c6eeo0r9osQ5Ik7f3okzFJVqQk
yWc8TVb26Fay2zyYOtxHQt/Yyc95hpvYq1vFHvMQ6nI/GegXO/kFFbmZfbrV
7DUPpR4PcAX9Yyc7U4ls7Nf9wj7zMN6mCBkZEDvZhWe5hQO6X9lvHs47FCWF
gbGTX/Ic2TmoW8OgSOevqEwODunWMjjS+Wue51YO69YxJNK5Ky9wG0d06xnK
MIYzgpGMYjRjGMs4xjMhnvHsN1Thdo7qfuOAeQT1KUYqE2Mnv+VFcnJM9zsH
zSNpQHGuZFLsZDeqcgfHdWflj7xPaTboDslRNORBrmKyfoPszkvcyQndOfkT
H1CGjbrDcjSNeCjuTmqSzJbtuZp/mMZHlIvv0j5ddmCK5zfK76gWf7vdApmL
S8ykLdfql8iTfv+8/Jksug/jNeSiuJ/yybhbcq68UX4qr5PL4j7KTZ4/Yh7D
9c6N4/3KhTKrfDjuspwjb5CfyExyqbyGf5lO6zjrF8un4r6Z58mO8fl6jU3y
e14mN5eZRTtO2V+QU2lFWTbrjsqxNOGReM/8RxptKB+fvd/bLHvwCnk4rdvC
MfM4mlIi/u74nGIne/IqeTmj28rUSOdeVCcfZ3V/MI3ppDGDmcxiNnOYSzrz
mB/PeLY3r5Gfc7ptLIh0/oHXKcB53XYWRjr3oQZ3cUG3g0WRzn2pScG4R7o/
OW4eTzMeje+XxbGT/XiDu+O70u3khHkCzSlJZpbETvbnTQrFZ63bxUnzRN7l
sbgnLI2dHEAt7uGi7i9OmSfRgsfjXrIsdnIgtSkc91n3N6fNk2lJqbhnLI+d
HMRb3Bt3Jv4vc8Y8hfd4Iu51vDYz+JgKpLp/82WneH/m5TKbXOH5/wG61trs

       "]]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwN0WO8FmYYwOE3nJNr9SEtndqy27K1jJPttpZt27Zt27ZWy7Ztner6cP3+
930/H5+Qhq1DW4ULBAJhxA0KBK6zmqE0pwoliEd8EpCQX0lEYpKQlGSEkJwU
/MbvpCQVqUnDDdYwjBZUpSRpuclahtOSapTiCTuYRBcako5brGMErahOaZ6y
k8l0pRHpuc16RtKaGrzlILPpSxmesYspdKMxGbjDBkbRhpq84xBz6EdZnrOb
qXQnjNMspQkfOcp8BhIIDgTO6goycpeNjCaCt/Palq+cZDGR3C9rLd5zmOhu
czVIL+ov2l9/cIaY9uUaRa9qbC2nL9hDNPs0jagXNJb20O/8Rwz7Mo2sV7Qp
nzjGAoLdL+kgwpn/15Vk4h6bGEM7vnGKJdTmA0eYxwDK85K9TKcnf/OZ4yxk
MJm5z2bG0p46VOAV+5hBL/4hCw/Ywjg6UJeKvGY/M+lNM7LykK2MpyP1CCUb
j9jGBDpRn0r8wZ9kJwc5yUVu8pCXfOSnAAUpRGGKUJRiFOcx25lIZxpQmTcc
YBZ9+JcvnGARQwjvH87pKqKar2kc/Ut/Avjjhvk=
       "]]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV0mW4FlUUgNGPuuQlRLiE0ghKIyBId7d0CJdupESku7u7QelukO6UblBS
CcGilDU/1rz7PHN+zZ60kZ1qdIwSCoXCPRKHhUIP2MwY2vMVpfmQJCQlgmQk
JwUp+YiPSUVq0pCWdKQnAxl5yBbG0oFalOETHrGVcXSkNmXJxGO2MZ5O1KEc
f3OQ2XxPMzLzG9uZQGfqUp5/OMQcetOcT/mdHUzkG+rxP6dYwmAq8C+HmUsf
WvAZT9jJJLpQn1DMUOi0LmUIFXnFEebRlzjuXNG1tCS688/6IyMId76uG8jC
U3YxmYTe3dKuxDJf0tXBrsy/aAOimM8Eu9Jl+oHeCXalQzWeXgt2qOuD/eq9
YI9aSV9zNNi383xNpLeDfWs/jatXg/9A1wX/iP6qrYhhPq8rSGy+qyOJb76h
G8nKM3YzhW7E9v6yrqEhUZ3P6nKGUZk3HGMB/WlNmHsXdCWjyMZz9jCV7jQi
mnvn9AeGU4W3HGchA2hDdv7gJ6bRg8ZU5R0nWMRA2pKDF+xlOt/yNdXIyUv2
MYOeNKE6ufiT/czkO5pSg9x8Th7yko8vyE8BvqQghShMEYpSjOKUoCR/cYBZ
9CKSmvzHSRYziHbE9H0u6ipGk8D5pm4iwnxfU2spfQ+ClIj1
       "]]}, 
     {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV0lW4VVUUgNED0iFw6VDuJaQ7BBSRUhq9dHd3CyIhXYKAgtIi3d3d3d1I
K52CgGM/jPOvNff+zsvcEY07RLaPEgqFwvyExwyFXrGbyfSiEZFEkI70ZCAj
n5CJzGQhK9nITg5ykovc5CEv/7KHKXxPY6qQj9fsZSq9aUJVYsYKhU7pAobR
kfy8YR/T+IGmVCOW90/rQobTiQL8x36m04dmVCe298/oIkbQmYK85QAz6Etz
Enn3iq5iHDWIY3ZWFzOSLnzKOw7yB/1oQZh3r+pqxlOTuGbndAmjSON+T7fS
lWTuN3Q9E0nrfl93UIj3HGJmsCPPHml/Ujnf0c3BrpyfaUsSO18LdqVrgn3q
k2BX+ot+rP8EO9TtwX71RbBHraXx9Hywb10afBP6ONi3/qQf6d/Bd6Dbgm9E
n2s3kjvf1A3BN+T8VH8j3PmB7qQwIffD+ic/ktr9rm6hFUncr+tafqU28c0u
6DJG050UZrd0I79ThChmR3QWA2hNUrO/dB0TqMOHZhd1OWPowWdENT+qsxlI
G+qSwPySruBnvuNzPjA/pnMYRFvqUZRonh3XuQymHfX5guiendB5DKE9DSjG
lxSnBCUpRWm+4mvKUJZylKcCFalEZb4hhv8/qfMZSgcaktD8sq5kLD1JaXZb
NzGJCPeHuosszi81j36r/wOVIIvQ
       "]]}}}],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
    "AxesInFront" -> True},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.684634440244519*^9, 3.684635494330558*^9, 
  3.684635570788806*^9, 3.684635659066648*^9, 3.684667984797278*^9, 
  3.684688615200675*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
NJBTa/q0VoM40aX7eZS8jj1PX9NaOq1OnOdwuqLEuoZtLu6ZND5nTVzRqzY1
o17BnattdjvTQoiQdxRlRjuX8CA6L5L4J4OQCZzdZnRqAc8PnepKiaggmpz3
5AgdncPd3DNWmak9RM3V4LtHz89g05GuI+zCK4RRp8GCiuIUzo85sfz1OxeE
OhgTH4CM61Lt2sPmJECYQ9agt2AUC6blCXI5K4HINdHWoYwhPN6g/bflgz5o
97SKvGnvw9ubuNh4O6zB3Yz+3O3d3bjJ4MTIvkv3QIpWVTJerBVTtSjxpjWF
QsFlh2s+z+px2h4tEzaZBNB6Y15f0vQVr14rr8B6r0GoWjjU42gKFhenb7T5
/An0NToeCzjlAU1NlEF2VRl8k0jbp+74HdiurN8TpKiFgJKDRrEhPcB+rUIh
dLwbRlX/5LddGIBXpJ+aPUr9oP+O2SH82jB0XC96dZ96CGJGvI39ZcZhnKZA
XcV0Y36PJE4ULpLB8GLTwbZLJODa7Ttxa30KJrNitPhrB8Eq7ZFnXd8MKHX8
Vh081A8UN/7oLTUsAVOnIJ+wdQN8P/pzfLx9BQpYPlxmZKoBz/FBQZryNaBr
I41/jC+Dy5x7pIO1KBAWr2kaDf4Et0XyDmVfoETRT4JZLKhfg9XxAxzvlanQ
woMkvbiziWAGXj9/nKVGkWfaTb7cCYWaosG/8/I0yNtLfjfjSU9YcCNb7ZGg
RV2MGX01726BiERHw83DdOitTfjeit36cKjr9cGgffTIIMWJz1xaGa7VVqaJ
iTEgW7nq9IJ4cagRP1uSeIgRXbU49qb/6w5gCskqHeZnQq0zVScbzFYJte7p
OJ09zOjedMzTzqVuYv21WnkNFwvq+ClUf8n6G+H8UdFZmZYVZa3zFjyZzyRG
PwmsNNOzocMTV5XhUzDBYIJ5/ZbY0GwO55jGSRvCbD7EqGB9DVMYvGwvszEk
eq8FK1TSr+LPLfuovsp5ELl3TqET7Mv4FdP5t22WccQ9vtRPa2KLWMRyeIi5
4BMRLuWmkHd8Hg9e+ffNTb6BGB9e76tVnMX/GXfrfT9LJjT/O0t6qjqNC2X1
iAtLDODZonrXCU3idsYl34SAPdDqqvHQOnEcWwnc+Tr19gR8Fghp0coexnK6
9onfzp6Hw+ySpmtlA1ialF7x+b0FJPErNemt9+DfKnF6u/ScQVbUrI9PuhNb
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
6S3PtdfNODQkwqa3tNUct3jsmrrlLXPmvt8MiMnc8pYmB50CIorfb3lLsfHM
I1/3f9jyllKDf2J9yJ+3vKXtiWQTEcBb3tI2qzh9Z0PZ/7zlU2tSOfe3LW8Z
pj309Hlr9Za3bKr8cjkmp3bLW74YfLGj7lXdlrcMOJZFpR9dv+UtdbkvPxNW
/Z+3fNL01dNuqnHLWxZofr2rp/d3y1vyDjOZPjNq3vKWCwMpY08FW7a85b21
ad1Ej5Ytbxklocv66l7LlrdMteOWmuZr2fKWZqBzS/Ra85a31Ev53Sp55u+W
t1QSCDVn6W7c8pbRR1BrrOH/vGWBP2WtfWD9lrfcn9M4NFNUt+UtLx89EXm3
q3bLW3IX+oT4UX7f8pb84kTwA79vW96SlsxdeXyhbMtb1pdHqOxtwVveMqHA
0+q2S8GWt7QZ+f3yseaHLW/JkLzuLHwge8tbMmbfWZL4kLnlLZmF+Si4H6Vu
eUvKnIow3cIk2PSWCR1O42zPnsKmtxQMDdPlT4mATW8Z7OVyx3R/EGx6S216
2ojKBB/Y9JZFcmK/eD67w6a3rPi/62HTW+KjN6ldklxg01v2hl0U2vHdEza9
pbjgvrEXL/xg01s+dq2/oxXwCDa9pXnSJW3ubVGw6S13MQsXig3Gwqa3zFM7
HLKtJnnLW15t0eOhN0vf8pYNCjNR+n1vIChX13fhZhfc0Nj/XOJN05ZvzBui
oEzu+bvlG+NOjakUfm/e8o0zcqmkCYOWLd/YZnA0TSmgZcs3Un4jRPk3Pt/0
jQMONatuG7/f9I0PlfSt6Lr/QiIaDM/qmYe9kpEfv8U3bXlCqwnWlu8X3255
QkWqxm2ebulbnvAt5dObSdwvtjxhbLlKo7t1HGx6wtDylsv9dlGw6QnjJXs8
um+FwqYnnHjYr/zfLn/Y9IQ8uxRXdz+7D5ueMEJSizWNwxU2PaFA4em5HfVO
sOkJ0/mTGlUFPWDTE1pp19r3zzyATU8Yejq3d84sGDY9IcPEuoHko8ew6Qmp
ngfmSvA+g01PWBE4Emn6+PmWJ2whFci97X655Ql3oKTtp45mQarX9OStX52w
L+qmWY9205bfa+so7Hif+HfL7505mpOe9KR5y+/Rar/+uw21bPm9kKT48BN+
LVt+z1s+UD/JtmXL7wln27GYzTZv+T1Kms4/Q8LNYCyouNJnPg8u3vTXlWea
trxc1pOOjtq977e8nKhCA80h1owtL8cbyvN57GzKlpdjsayk5nmQAJteLlzt
etGthWjY9HJUukOP/rsSDpte7k7kDi1u9gDY9HJpckUJGge8YdPL9d1INKvX
uAObXi5DylHsUcRt2PRyvlbFj+sbvWDTyxnIv7h92O4hbHq5u3vJ5pwNYbDp
5X5FsXqNZ0VDWdq7MNlb3UBbsttlB83fLX8Wamc4syzUvOXPoi6LuX1daN7y
Zw35u1P3bpzPTX+mS6MWU7xxvjf9GZHybPWwfMv//JmN62nj2OYtr7V66uPx
k07PYNNrqekyxLisPYZNr6WrSCXz8EQIbHqtS64OnBc0fGHTa30T2ZZ7kuMe
bHot7Wsb0ym9M2x6re209cYOC46w6bXoLh0SlfnnDpteK0ufYZpd9AFsei0m
5fCz1y4HwabXusT5XyJXYwRseq0XdXP8Q6diYNNr3bfjUlFbSIJNr3U1+cjV
UtGXW15L+o8PTezV13DrUczAwdoOMD6pm52xp2nLR/FHfzvEdvfvlo/iXpI8
fMm9ectHWXhLmdEdbtnyUQprOpwJ3i1bPspt52D+tGvLlo+CQebERoaWLR9l
dE/ZGak0g1z4xGFvoXmwuCm/T0vg75ZHYrA2GQtIfb/lkQgnNc64zowtj6S8
h/3AfVLKlkfaeeasJFtcImx6pNI5F4nMiiew6ZF0aBzYn1NEwKZHumezfc6O
OxA2PZJW4iWngn/esOmRHhMLjO4ebrDpkZZtKtS/RrrCpkfKmoyTb+T1gk2P
5M3DQTXr6w+bHomvjcksICMUNj1SCL1JpVRbFIiIUwXxjnSBaJed/JGWpi3f
8/z3uY+9VM1bvuel9/w9357mLd9D83Z+75erLVu+J61gN8552LLle+xLJN2n
1Vu2fA+ejozYltu85WFG/oS2+FjHwqaH0TNiir+cFwmbHoZ3p9fxI5qPYNPD
nEEsNWOSfrDpYTS66Vcqz3vCpodpPmDNdobeBagCkDNDwSDsHWi0sMlu3vIi
1Kdkv+eda9nyIiyKzUftN/Z304ssvS/zy9o4nk2PwP3nRj3PxnrZ9AjB4ukP
rvq0bHmEAz6+fm2HWmCz3x+VKDtO2u4Em/3+C5mHrpeHOsJmv3+O30vbVskd
Nvv9LzJHi+oqfGCz3+95v05IvTUQNvv9zxoCHTTvRsBmv19eUul56q+nsNnv
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
J38Za5zK4PqpRuGcl9OtExhcP907bZ97jFEcg+unu5ulVKcMRDC4ftoT+Khp
g2cIg+unHaNy+852+DKB0yZIlRm2Mkb2j9XHQr2K64sPNTv6BXpCWl+UM4np
Pw33B1xffFWzIO2gh5DWr9T8JtpqeQpp/Spmg8sXZ9gf16/u9+evXqkjZHA9
6NZPLZ+2Vh9aj2FVL+6eDvcTXI8ZOaLpwz+4n+B6xKLRyieGuAhpPSI44WJC
JMxv9H77f6NVLkCMvm9vGM3uh/d/9P1YQd72JrifoO+HGupYDun2ZtD3Y+ak
Tm+F92P0faWimhcT4Pqg7y99uXVCNdwf0PfV+zKS6+B+gr6/+aLCtxFwP0Hf
P7nYSZ8F+6Pvt7SXTFWC8dD326eN+dgb5M2g7xttr5VeCtvR97MaZ6gthc+j
79cc/RirAr8Pfb9Jw1TvM8To++yKY9YCiNH3i9tLi1dAjL5v+qqGuwLGR9//
PnpC4FcDbwZ9//m8bV6SCbnk+9Hvvzu0T8wj369UbMg4eT+ffP/fxIqOMZ4F
5Pt/MkY+VVO8Sb7fU5ul+rWviHx/3NvzYSWVxeT76+5FDT1TXEq+37347pbc
a3fI92unJ3n/XFVGvl/o5qCWqF1Ovv93dOtNNZUK8n29TKX/FvdXkO9fvK54
0e5DJfk+d7L+vXpuFfn+yln3f8dFV5Pv2/4oWdVtfI98P3Dph9CIH/fI9y/v
t1FdlXiffH+mj05EnjyPfD/Kdll9RiKPfP9a0XL9Yb945PtZn/qcR6zgk+87
ifeM0tjLJ9/nTtj61zaCT75f9XBJ6HmI0fer/Ex2VLnzyfdzLE6UrVrFJ9//
4r7w788fPPJ9yRu+jeUneeT72XdSff1UeOT7x2eHBRw4dZ98n7W3e67373vk
+7ITN2jEbr5Hvh/V6TOafaqafD/m+a6apEdV5PsqKksFjd8qyfcP9Z+L9phU
Sb5/PC7rqNbSCvL9pE7Z77565eT7HWpjxydYl5Hvd7dfffmde4d8v69n43X/
ilLyfYvCqI0mP4vJ97/eTlvAl7xFvp9wqiLw3dqb5PsW4n2dfskF5PtWjqqN
nQ355PtXY2ZsqNPPI9+vH5wP6Pue5+Nn3TXnMPXZo22KrguYJ+tKV02045G3
e9Qkaa7n88jbw50zspYo8snbhz2vi9pqzSdv77vd23PlEJ+8/fsh98ero/jk
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
FmeTZ1Qs031nMo5NnuEuf+CYpQKbPOPc1HPVL2awyTOuzpPv9lnIJs8wM7/f
IK/NJs8Ym2yk4qjHJs/wdFk1OnYdmzzjV0uzXJkZmzwjuu5Kfaklmzxj1NVQ
p71b2eQZyVJpbf3b2eQZeVv15io6s8kzDjpO2WbuyibPmKt+VPrkbjZ5Rl9N
yowF7mzyjOs3Zhi2QYyeYfdV3/UbxOgZbycYuEyDGD1j3kM1j4swHnrGWKHb
roXwfegZO1703v7hxCbPiLva8W6hI5s8Y8uExz0b4PegZ0yYx7D+wO9Fzxho
q1023pxNnsH5+aBLCOcLPUOt/OmFHfps8oynk7IrguB8o2eYF+5b6qXOJs+4
bNYY92Ymmzyj+n1NOheuJ3rG3WlnX50czybPkJ769lkB5AN6xmKdIF0TyBf0
jLOFrRenfGaRZ0zzDWwa/pJFnnH3BxPL1LDIM265GyYqlrLIM7YnCA1+QT6j
Z8Tk7nA1TmGRZ+B8QM/YtsI9K+cEizzj2jS1gIf2bPKMUZKXgtV2sskzFr1L
M3ziwibPUFAqqo90Y5NntCybahqwh02e8bn243c2XF/0jImrjGYO82CTZyht
11zJgu3oGSOX7K/yh8+jZ2wbu8U8HMZHzzCKaPa6Ct+PnqFodVJTdHzoGecn
xRkK4fjRM3zPXr5VcJJFnvFPP9lvUwyLPENuf2kFaxubPONLr660/A42ecbp
osM2/ZD/6BmPm4c7/IB8RM+YLSX1dxQcL3pGplePnyf8HvSMgqk2X/ohRs84
1OUSVQcx9TNMsmurh8+jZ7B3nNOWh/xHz9BZ4D9s/y42ecZ4c83FEyH/0TOM
G25vGAXzFT1jYfD2H0cTWUz4tBkpj0tfMvPuXtGYDfujbwgmDHQlwXjoG2XD
FxVLi+bboG+4Ms0Sr+B40DfqCsceewTHi77xMO1T3wDE6BvVIWKRbhCjbyxZ
NPv7RPg8+kZOT2hBE5wv9I1t/hq8F3D+0TeGWrya+F80i3xjTrFVlBRcD/QN
1X3cguMwv9E3jv5YvzsOrgf6Rt3HSxtZMD76xiy7+7fq4Pegb8i61K03g+ND
37A9djmiB2L0DaOFVZeaIEbf+PtUNu0vHD/6RljlKKntMB76Rmvg1K31cP7Q
NxadmLMrHM4v+kZSTeCaNLge6Bs8D6t7X5JYzLWPZ/2rCoTMZE7XiWzIV/SO
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
Gh99ZKGz5KIV8P3oI0MG/8P6EOP/7+3/B3Z66Xg=
   "], {{{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1: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
Ag==
        "]]]}, {}, 
     {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV1He8T3UYB/Bzl5FxRVRoXKIkNEVaIk0jmVFJtG0qWhpKqSgNu+y99y6S
kTKLzJK9y969nz/e9/N8P8/v3PO6v3NeN6tpq9otU5MkSaGzH73SkqRCjiSp
yFJzwYwkWZKeJHnk+/IHMszV5BvM4BwXczftmMAxtrv+AjeYn2EA/7BEl0/e
RVvGczR2+vOUNjehP9tYrMuUd9KGcRyJnf4c15ufph9/87Mur6xEa8byX+z0
Zyllfoq+/MUiXR55B60Yw7+x05/hOvOT9GErP+lyy4q0ZDSHY6c/zbXmxvRm
Cwt1WzhFSedG9GIzC3SbOUkJ5yf4lk38qNvECa5xbsg3bIznoJvPPOYyh9nM
YiYzmM40prKR4xR3bQO+ZgNTdBs4RjHn+nzFn0zW5ZIVaMEoDsVOf5Qscz16
sp5JuvtlJ6Zzlou4nVcYycH4rM/dJ1+L+3MqnqfuLTmLC1xNXb5kHRPt35Pz
Sff+VY3nQE5zRzmNM3GO508u/Tsyn5wjU2R5mV8ukNnlyzKvHCEPxH3c4xLn
xebcsnO813KuTJWVZQG5UOaQr8pMOVmejHfM9Yvib9a9KWdynqviWZJNX0d+
wR9M8Pl35TzS7KrI15nK6bgHbzObxP42+RLD2R+/w/X3yg7x3XMi3lvdlfJx
evA743XZ5a28yDD2xU5/j2wf3y/H4z3WXSFr0521jNNlk7fwAkPZGzv9IYqa
H+Nz1jBWlyFv5nmGsCd2+oMUMdfiM1YzRjeaUYxkBMMZxlCGMJhBDGQ1Byjs
2pp8yiq+161iP5c716AbK/lOt5J9XOZcnU9YwQDdCvZyqfOjfMxv9Nely5t4
jsHsjp1+D4XMj9CVX+mnS5M30pxB7Iqdfnf8PzU/zEcsp68uVZajGQPZGTv9
rngfzQ/xIb/QR5ciy/Js/M3siJ1+JwXMD9KFZfTWJbIMTeN7YHvs9DvIb36A
D1jK/1Zc23E=
        "]]]}, {}, 
     {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0VWUUGUUgNE7AwMDUvJASYdSSjN0SCMIDKXSQwvMSCMd0t0l3SmoSCvd
oSCtSHdJ97B52Os759yXu9afKSomMjo0CIIQYkkRFgSFw4Mggkrm5PGC4B9N
qKv1b0LNw3Qxh3jJt/RnNrt4SB2a0Z3JbOYmFalAecrxOWUpQ2lKUZISFKcY
RSlCxPv/oxAFqU1TujGJTdygAJE0oSsT2ch18tOWfsxiJ/9Ti8Z0YQIbuEY+
2tCXH9nBA2rSiM6MZz1XyctQFnGQF7SmDzPZzn1q8APz2cdTGrKUI7ymE+P4
jSvkYRXHCfEOQ/Q08cwL9QDPacVZwt2Xa2L9U9/Sm6T2kxpXZ+gHuk3v8SUf
2s9pAl2hSfQvjWUQyeynNEznaSLdq09owBniuy3Rw7yiIyeI4z5W13GZz1jJ
MQLfBusC9vOMlizjKG/oxXT+4C7VGchc9vCYb/iOMfzKJT6lBT2Zxu/coRoD
mMNuHvE1MYzmFy6Sm+Z8z1S2cpsv+IpoRvEzF8hFFD2YwhZuUZX6dGAka/mP
nFShHu0ZwRrOk4PsfMLHZCMrWchMJjKSgfSkIy0fkYbUpCIllalLO4bzE//y
DgRph3o=
        "]]]}, {}, 
     {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0mUUFVUUgNGhQ7pBuksapKS7OxWkQaS7u7u7u7uRkEZBQFFRSVFROhWk
9vzY7zt3zf0x651J17JLnc4RgyCIQFw/CaMGQYHoQVCQcuY00YLgT02qu/Qa
cc0TdRM/Es25o45gJed4S11a0p8FHOc5ZSlDaUpRkhJ8QnGKUZQiFOZjClEw
fDfyk486tKAf8znGM/JSm8/pyzy+5il5qEVz+jCXozwhN18wnBV8yxtq0oze
zOEIj8lFB4axnG94TQ3Gso5LRPL/fKa9mM1hHvERE9jIZaK6116Hsoyz/E91
xrCWi0R071Pdws/EcO6pszjEQ3Kyk6vE8Xy83iKheYP+QBRzO71NYvM2TaG/
6Ac6RFPqDY2vSzWZntFXVCO18x+aRLfrh/qrxtLRmkpvagJdo8n1gkbQpvo7
icyb9Seim3vodeKZZ+pXPCAHO/iN2J6N0/V8T2TntrqVK8R0HqxLOM1LqjKK
1XxH4E4T7c4MDnKf7LRhEIs5xX9UYSSrOM87GtON6RzgHtlozUAWcZJ/qUwj
ujKN/dwlK60YwEJO8IJKNKQLU9nHP2ShIg3ozBT28jeZqUB9OjGZPdwhExnJ
QHrSkZY04R7DXYX7DncYfgfhrsJ9kzTcb/iNhLuiPPX4kkns5i/eA04PiXI=

        "]]]}, {}, 
     {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0mXYFVUUgNEL0iAhISHx0Y2EtHR3SYPS3Q0SBt0o3Z3S3Up3p5TSoXTn
mh/rvufsmef+2RPWuEO19uFDoVA44vlJETkUyhElFMpJVefs+lIz6B59SJjz
VN3GbRK599JxrOUKsc1+0A4MYQmniWReRStTiYpUoDzlKEsZSlOKkpSgOMUo
ShEK8z3tGcxiThHR/xfShrRjEIs4SQTPvtUGtGUgCznBZ54V1J6MZQ2XiWVe
X9vwKws4TnjzAtqDMazmEjHN6+lENnGd+Gat9Rfmc4xwZvl1Clu5RUKz7jqa
VfzN52Z1dQIb+Zd4Zq10B3dJ4v6zzuMoIfd8upv/SeE+WZ+SxnmL3uRL5276
nHTOf2pmva9JdZRm1ceaSldqRr2oMbSOfq0vNL3+pVn0gSbT8ZpNn2hq3aCZ
9B+Nqy31GWmdt+sdEjv/pI9I6TxXj/CRvOziP5J7Nkk3c4ME7l11J/f4yn2k
ruAC0d1r6++s5xpfmLXQAczhMB/IQxdGsJzzRPNuLf2NdVwljllz7c9sDvGe
3HRmOH9wjqjeranN6McsDvKOb+jEMJZxlije/06b0peZHOAtuejIUJZyhsje
r6FN+JEZ7OcNOalOY/ownX28JgfZgz0Guwr2Heww+A6CXQX7JkOw3+AbCXYV
fEPBPoNvItgRYVSjEb2Zxl5e8QmW5IxJ
        
        "]]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV1He4znUYBvCfnNOSlBKVspM0jIaUiChKSSpFEcomGiIUKipFGdl77wrH
PPZWRpkhyt57VOjz/PE59/O9n/O73vO+7/c6eeo0r9osQ5Ik7f3okzFJVqQk
yWc8TVb26Fay2zyYOtxHQt/Yyc95hpvYq1vFHvMQ6nI/GegXO/kFFbmZfbrV
7DUPpR4PcAX9Yyc7U4ls7Nf9wj7zMN6mCBkZEDvZhWe5hQO6X9lvHs47FCWF
gbGTX/Ic2TmoW8OgSOevqEwODunWMjjS+Wue51YO69YxJNK5Ky9wG0d06xnK
MIYzgpGMYjRjGMs4xjMhnvHsN1Thdo7qfuOAeQT1KUYqE2Mnv+VFcnJM9zsH
zSNpQHGuZFLsZDeqcgfHdWflj7xPaTboDslRNORBrmKyfoPszkvcyQndOfkT
H1CGjbrDcjSNeCjuTmqSzJbtuZp/mMZHlIvv0j5ddmCK5zfK76gWf7vdApmL
S8ykLdfql8iTfv+8/Jksug/jNeSiuJ/yybhbcq68UX4qr5PL4j7KTZ4/Yh7D
9c6N4/3KhTKrfDjuspwjb5CfyExyqbyGf5lO6zjrF8un4r6Z58mO8fl6jU3y
e14mN5eZRTtO2V+QU2lFWTbrjsqxNOGReM/8RxptKB+fvd/bLHvwCnk4rdvC
MfM4mlIi/u74nGIne/IqeTmj28rUSOdeVCcfZ3V/MI3ppDGDmcxiNnOYSzrz
mB/PeLY3r5Gfc7ptLIh0/oHXKcB53XYWRjr3oQZ3cUG3g0WRzn2pScG4R7o/
OW4eTzMeje+XxbGT/XiDu+O70u3khHkCzSlJZpbETvbnTQrFZ63bxUnzRN7l
sbgnLI2dHEAt7uGi7i9OmSfRgsfjXrIsdnIgtSkc91n3N6fNk2lJqbhnLI+d
HMRb3Bt3Jv4vc8Y8hfd4Iu51vDYz+JgKpLp/82WneH/m5TKbXOH5/wG61trs

       "]]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwN0WO8FmYYwOE3nJNr9SEtndqy27K1jJPttpZt27Zt27ZWy7Ztner6cP3+
930/H5+Qhq1DW4ULBAJhxA0KBK6zmqE0pwoliEd8EpCQX0lEYpKQlGSEkJwU
/MbvpCQVqUnDDdYwjBZUpSRpuclahtOSapTiCTuYRBcako5brGMErahOaZ6y
k8l0pRHpuc16RtKaGrzlILPpSxmesYspdKMxGbjDBkbRhpq84xBz6EdZnrOb
qXQnjNMspQkfOcp8BhIIDgTO6goycpeNjCaCt/Palq+cZDGR3C9rLd5zmOhu
czVIL+ov2l9/cIaY9uUaRa9qbC2nL9hDNPs0jagXNJb20O/8Rwz7Mo2sV7Qp
nzjGAoLdL+kgwpn/15Vk4h6bGEM7vnGKJdTmA0eYxwDK85K9TKcnf/OZ4yxk
MJm5z2bG0p46VOAV+5hBL/4hCw/Ywjg6UJeKvGY/M+lNM7LykK2MpyP1CCUb
j9jGBDpRn0r8wZ9kJwc5yUVu8pCXfOSnAAUpRGGKUJRiFOcx25lIZxpQmTcc
YBZ9+JcvnGARQwjvH87pKqKar2kc/Ut/Avjjhvk=
       "]]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV0mW4FlUUgNGPuuQlRLiE0ghKIyBId7d0CJdupESku7u7QelukO6UblBS
CcGilDU/1rz7PHN+zZ60kZ1qdIwSCoXCPRKHhUIP2MwY2vMVpfmQJCQlgmQk
JwUp+YiPSUVq0pCWdKQnAxl5yBbG0oFalOETHrGVcXSkNmXJxGO2MZ5O1KEc
f3OQ2XxPMzLzG9uZQGfqUp5/OMQcetOcT/mdHUzkG+rxP6dYwmAq8C+HmUsf
WvAZT9jJJLpQn1DMUOi0LmUIFXnFEebRlzjuXNG1tCS688/6IyMId76uG8jC
U3YxmYTe3dKuxDJf0tXBrsy/aAOimM8Eu9Jl+oHeCXalQzWeXgt2qOuD/eq9
YI9aSV9zNNi383xNpLeDfWs/jatXg/9A1wX/iP6qrYhhPq8rSGy+qyOJb76h
G8nKM3YzhW7E9v6yrqEhUZ3P6nKGUZk3HGMB/WlNmHsXdCWjyMZz9jCV7jQi
mnvn9AeGU4W3HGchA2hDdv7gJ6bRg8ZU5R0nWMRA2pKDF+xlOt/yNdXIyUv2
MYOeNKE6ufiT/czkO5pSg9x8Th7yko8vyE8BvqQghShMEYpSjOKUoCR/cYBZ
9CKSmvzHSRYziHbE9H0u6ipGk8D5pm4iwnxfU2spfQ+ClIj1
       "]]}, 
     {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV0lW4VVUUgNED0iFw6VDuJaQ7BBSRUhq9dHd3CyIhXYKAgtIi3d3d3d1I
K52CgGM/jPOvNff+zsvcEY07RLaPEgqFwvyExwyFXrGbyfSiEZFEkI70ZCAj
n5CJzGQhK9nITg5ykovc5CEv/7KHKXxPY6qQj9fsZSq9aUJVYsYKhU7pAobR
kfy8YR/T+IGmVCOW90/rQobTiQL8x36m04dmVCe298/oIkbQmYK85QAz6Etz
Enn3iq5iHDWIY3ZWFzOSLnzKOw7yB/1oQZh3r+pqxlOTuGbndAmjSON+T7fS
lWTuN3Q9E0nrfl93UIj3HGJmsCPPHml/Ujnf0c3BrpyfaUsSO18LdqVrgn3q
k2BX+ot+rP8EO9TtwX71RbBHraXx9Hywb10afBP6ONi3/qQf6d/Bd6Dbgm9E
n2s3kjvf1A3BN+T8VH8j3PmB7qQwIffD+ic/ktr9rm6hFUncr+tafqU28c0u
6DJG050UZrd0I79ThChmR3QWA2hNUrO/dB0TqMOHZhd1OWPowWdENT+qsxlI
G+qSwPySruBnvuNzPjA/pnMYRFvqUZRonh3XuQymHfX5guiendB5DKE9DSjG
lxSnBCUpRWm+4mvKUJZylKcCFalEZb4hhv8/qfMZSgcaktD8sq5kLD1JaXZb
NzGJCPeHuosszi81j36r/wOVIIvQ
       "]]}}}],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
    "AxesInFront" -> True},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Input",
 CellChangeTimes->{3.684631755048916*^9}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
NJBTa/q0VoM40aX7eZS8jj1PX9NaOq1OnOdwuqLEuoZtLu6ZND5nTVzRqzY1
o17BnattdjvTQoiQdxRlRjuX8CA6L5L4J4OQCZzdZnRqAc8PnepKiaggmpz3
5AgdncPd3DNWmak9RM3V4LtHz89g05GuI+zCK4RRp8GCiuIUzo85sfz1OxeE
OhgTH4CM61Lt2sPmJECYQ9agt2AUC6blCXI5K4HINdHWoYwhPN6g/bflgz5o
97SKvGnvw9ubuNh4O6zB3Yz+3O3d3bjJ4MTIvkv3QIpWVTJerBVTtSjxpjWF
QsFlh2s+z+px2h4tEzaZBNB6Y15f0vQVr14rr8B6r0GoWjjU42gKFhenb7T5
/An0NToeCzjlAU1NlEF2VRl8k0jbp+74HdiurN8TpKiFgJKDRrEhPcB+rUIh
dLwbRlX/5LddGIBXpJ+aPUr9oP+O2SH82jB0XC96dZ96CGJGvI39ZcZhnKZA
XcV0Y36PJE4ULpLB8GLTwbZLJODa7Ttxa30KJrNitPhrB8Eq7ZFnXd8MKHX8
Vh081A8UN/7oLTUsAVOnIJ+wdQN8P/pzfLx9BQpYPlxmZKoBz/FBQZryNaBr
I41/jC+Dy5x7pIO1KBAWr2kaDf4Et0XyDmVfoETRT4JZLKhfg9XxAxzvlanQ
woMkvbiziWAGXj9/nKVGkWfaTb7cCYWaosG/8/I0yNtLfjfjSU9YcCNb7ZGg
RV2MGX01726BiERHw83DdOitTfjeit36cKjr9cGgffTIIMWJz1xaGa7VVqaJ
iTEgW7nq9IJ4cagRP1uSeIgRXbU49qb/6w5gCskqHeZnQq0zVScbzFYJte7p
OJ09zOjedMzTzqVuYv21WnkNFwvq+ClUf8n6G+H8UdFZmZYVZa3zFjyZzyRG
PwmsNNOzocMTV5XhUzDBYIJ5/ZbY0GwO55jGSRvCbD7EqGB9DVMYvGwvszEk
eq8FK1TSr+LPLfuovsp5ELl3TqET7Mv4FdP5t22WccQ9vtRPa2KLWMRyeIi5
4BMRLuWmkHd8Hg9e+ffNTb6BGB9e76tVnMX/GXfrfT9LJjT/O0t6qjqNC2X1
iAtLDODZonrXCU3idsYl34SAPdDqqvHQOnEcWwnc+Tr19gR8Fghp0coexnK6
9onfzp6Hw+ySpmtlA1ialF7x+b0FJPErNemt9+DfKnF6u/ScQVbUrI9PuhNb
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
6S3PtdfNODQkwqa3tNUct3jsmrrlLXPmvt8MiMnc8pYmB50CIorfb3lLsfHM
I1/3f9jyllKDf2J9yJ+3vKXtiWQTEcBb3tI2qzh9Z0PZ/7zlU2tSOfe3LW8Z
pj309Hlr9Za3bKr8cjkmp3bLW74YfLGj7lXdlrcMOJZFpR9dv+UtdbkvPxNW
/Z+3fNL01dNuqnHLWxZofr2rp/d3y1vyDjOZPjNq3vKWCwMpY08FW7a85b21
ad1Ej5Ytbxklocv66l7LlrdMteOWmuZr2fKWZqBzS/Ra85a31Ev53Sp55u+W
t1QSCDVn6W7c8pbRR1BrrOH/vGWBP2WtfWD9lrfcn9M4NFNUt+UtLx89EXm3
q3bLW3IX+oT4UX7f8pb84kTwA79vW96SlsxdeXyhbMtb1pdHqOxtwVveMqHA
0+q2S8GWt7QZ+f3yseaHLW/JkLzuLHwge8tbMmbfWZL4kLnlLZmF+Si4H6Vu
eUvKnIow3cIk2PSWCR1O42zPnsKmtxQMDdPlT4mATW8Z7OVyx3R/EGx6S216
2ojKBB/Y9JZFcmK/eD67w6a3rPi/62HTW+KjN6ldklxg01v2hl0U2vHdEza9
pbjgvrEXL/xg01s+dq2/oxXwCDa9pXnSJW3ubVGw6S13MQsXig3Gwqa3zFM7
HLKtJnnLW15t0eOhN0vf8pYNCjNR+n1vIChX13fhZhfc0Nj/XOJN05ZvzBui
oEzu+bvlG+NOjakUfm/e8o0zcqmkCYOWLd/YZnA0TSmgZcs3Un4jRPk3Pt/0
jQMONatuG7/f9I0PlfSt6Lr/QiIaDM/qmYe9kpEfv8U3bXlCqwnWlu8X3255
QkWqxm2ebulbnvAt5dObSdwvtjxhbLlKo7t1HGx6wtDylsv9dlGw6QnjJXs8
um+FwqYnnHjYr/zfLn/Y9IQ8uxRXdz+7D5ueMEJSizWNwxU2PaFA4em5HfVO
sOkJ0/mTGlUFPWDTE1pp19r3zzyATU8Yejq3d84sGDY9IcPEuoHko8ew6Qmp
ngfmSvA+g01PWBE4Emn6+PmWJ2whFci97X655Ql3oKTtp45mQarX9OStX52w
L+qmWY9205bfa+so7Hif+HfL7505mpOe9KR5y+/Rar/+uw21bPm9kKT48BN+
LVt+z1s+UD/JtmXL7wln27GYzTZv+T1Kms4/Q8LNYCyouNJnPg8u3vTXlWea
trxc1pOOjtq977e8nKhCA80h1owtL8cbyvN57GzKlpdjsayk5nmQAJteLlzt
etGthWjY9HJUukOP/rsSDpte7k7kDi1u9gDY9HJpckUJGge8YdPL9d1INKvX
uAObXi5DylHsUcRt2PRyvlbFj+sbvWDTyxnIv7h92O4hbHq5u3vJ5pwNYbDp
5X5FsXqNZ0VDWdq7MNlb3UBbsttlB83fLX8Wamc4syzUvOXPoi6LuX1daN7y
Zw35u1P3bpzPTX+mS6MWU7xxvjf9GZHybPWwfMv//JmN62nj2OYtr7V66uPx
k07PYNNrqekyxLisPYZNr6WrSCXz8EQIbHqtS64OnBc0fGHTa30T2ZZ7kuMe
bHot7Wsb0ym9M2x6re209cYOC46w6bXoLh0SlfnnDpteK0ufYZpd9AFsei0m
5fCz1y4HwabXusT5XyJXYwRseq0XdXP8Q6diYNNr3bfjUlFbSIJNr3U1+cjV
UtGXW15L+o8PTezV13DrUczAwdoOMD6pm52xp2nLR/FHfzvEdvfvlo/iXpI8
fMm9ectHWXhLmdEdbtnyUQprOpwJ3i1bPspt52D+tGvLlo+CQebERoaWLR9l
dE/ZGak0g1z4xGFvoXmwuCm/T0vg75ZHYrA2GQtIfb/lkQgnNc64zowtj6S8
h/3AfVLKlkfaeeasJFtcImx6pNI5F4nMiiew6ZF0aBzYn1NEwKZHumezfc6O
OxA2PZJW4iWngn/esOmRHhMLjO4ebrDpkZZtKtS/RrrCpkfKmoyTb+T1gk2P
5M3DQTXr6w+bHomvjcksICMUNj1SCL1JpVRbFIiIUwXxjnSBaJed/JGWpi3f
8/z3uY+9VM1bvuel9/w9357mLd9D83Z+75erLVu+J61gN8552LLle+xLJN2n
1Vu2fA+ejozYltu85WFG/oS2+FjHwqaH0TNiir+cFwmbHoZ3p9fxI5qPYNPD
nEEsNWOSfrDpYTS66Vcqz3vCpodpPmDNdobeBagCkDNDwSDsHWi0sMlu3vIi
1Kdkv+eda9nyIiyKzUftN/Z304ssvS/zy9o4nk2PwP3nRj3PxnrZ9AjB4ukP
rvq0bHmEAz6+fm2HWmCz3x+VKDtO2u4Em/3+C5mHrpeHOsJmv3+O30vbVskd
Nvv9LzJHi+oqfGCz3+95v05IvTUQNvv9zxoCHTTvRsBmv19eUul56q+nsNnv
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
J38Za5zK4PqpRuGcl9OtExhcP907bZ97jFEcg+unu5ulVKcMRDC4ftoT+Khp
g2cIg+unHaNy+852+DKB0yZIlRm2Mkb2j9XHQr2K64sPNTv6BXpCWl+UM4np
Pw33B1xffFWzIO2gh5DWr9T8JtpqeQpp/Spmg8sXZ9gf16/u9+evXqkjZHA9
6NZPLZ+2Vh9aj2FVL+6eDvcTXI8ZOaLpwz+4n+B6xKLRyieGuAhpPSI44WJC
JMxv9H77f6NVLkCMvm9vGM3uh/d/9P1YQd72JrifoO+HGupYDun2ZtD3Y+ak
Tm+F92P0faWimhcT4Pqg7y99uXVCNdwf0PfV+zKS6+B+gr6/+aLCtxFwP0Hf
P7nYSZ8F+6Pvt7SXTFWC8dD326eN+dgb5M2g7xttr5VeCtvR97MaZ6gthc+j
79cc/RirAr8Pfb9Jw1TvM8To++yKY9YCiNH3i9tLi1dAjL5v+qqGuwLGR9//
PnpC4FcDbwZ9//m8bV6SCbnk+9Hvvzu0T8wj369UbMg4eT+ffP/fxIqOMZ4F
5Pt/MkY+VVO8Sb7fU5ul+rWviHx/3NvzYSWVxeT76+5FDT1TXEq+37347pbc
a3fI92unJ3n/XFVGvl/o5qCWqF1Ovv93dOtNNZUK8n29TKX/FvdXkO9fvK54
0e5DJfk+d7L+vXpuFfn+yln3f8dFV5Pv2/4oWdVtfI98P3Dph9CIH/fI9y/v
t1FdlXiffH+mj05EnjyPfD/Kdll9RiKPfP9a0XL9Yb945PtZn/qcR6zgk+87
ifeM0tjLJ9/nTtj61zaCT75f9XBJ6HmI0fer/Ex2VLnzyfdzLE6UrVrFJ9//
4r7w788fPPJ9yRu+jeUneeT72XdSff1UeOT7x2eHBRw4dZ98n7W3e67373vk
+7ITN2jEbr5Hvh/V6TOafaqafD/m+a6apEdV5PsqKksFjd8qyfcP9Z+L9phU
Sb5/PC7rqNbSCvL9pE7Z77565eT7HWpjxydYl5Hvd7dfffmde4d8v69n43X/
ilLyfYvCqI0mP4vJ97/eTlvAl7xFvp9wqiLw3dqb5PsW4n2dfskF5PtWjqqN
nQ355PtXY2ZsqNPPI9+vH5wP6Pue5+Nn3TXnMPXZo22KrguYJ+tKV02045G3
e9Qkaa7n88jbw50zspYo8snbhz2vi9pqzSdv77vd23PlEJ+8/fsh98ero/jk
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
FmeTZ1Qs031nMo5NnuEuf+CYpQKbPOPc1HPVL2awyTOuzpPv9lnIJs8wM7/f
IK/NJs8Ym2yk4qjHJs/wdFk1OnYdmzzjV0uzXJkZmzwjuu5Kfaklmzxj1NVQ
p71b2eQZyVJpbf3b2eQZeVv15io6s8kzDjpO2WbuyibPmKt+VPrkbjZ5Rl9N
yowF7mzyjOs3Zhi2QYyeYfdV3/UbxOgZbycYuEyDGD1j3kM1j4swHnrGWKHb
roXwfegZO1703v7hxCbPiLva8W6hI5s8Y8uExz0b4PegZ0yYx7D+wO9Fzxho
q1023pxNnsH5+aBLCOcLPUOt/OmFHfps8oynk7IrguB8o2eYF+5b6qXOJs+4
bNYY92Ymmzyj+n1NOheuJ3rG3WlnX50czybPkJ769lkB5AN6xmKdIF0TyBf0
jLOFrRenfGaRZ0zzDWwa/pJFnnH3BxPL1LDIM265GyYqlrLIM7YnCA1+QT6j
Z8Tk7nA1TmGRZ+B8QM/YtsI9K+cEizzj2jS1gIf2bPKMUZKXgtV2sskzFr1L
M3ziwibPUFAqqo90Y5NntCybahqwh02e8bn243c2XF/0jImrjGYO82CTZyht
11zJgu3oGSOX7K/yh8+jZ2wbu8U8HMZHzzCKaPa6Ct+PnqFodVJTdHzoGecn
xRkK4fjRM3zPXr5VcJJFnvFPP9lvUwyLPENuf2kFaxubPONLr660/A42ecbp
osM2/ZD/6BmPm4c7/IB8RM+YLSX1dxQcL3pGplePnyf8HvSMgqk2X/ohRs84
1OUSVQcx9TNMsmurh8+jZ7B3nNOWh/xHz9BZ4D9s/y42ecZ4c83FEyH/0TOM
G25vGAXzFT1jYfD2H0cTWUz4tBkpj0tfMvPuXtGYDfujbwgmDHQlwXjoG2XD
FxVLi+bboG+4Ms0Sr+B40DfqCsceewTHi77xMO1T3wDE6BvVIWKRbhCjbyxZ
NPv7RPg8+kZOT2hBE5wv9I1t/hq8F3D+0TeGWrya+F80i3xjTrFVlBRcD/QN
1X3cguMwv9E3jv5YvzsOrgf6Rt3HSxtZMD76xiy7+7fq4Pegb8i61K03g+ND
37A9djmiB2L0DaOFVZeaIEbf+PtUNu0vHD/6RljlKKntMB76Rmvg1K31cP7Q
NxadmLMrHM4v+kZSTeCaNLge6Bs8D6t7X5JYzLWPZ/2rCoTMZE7XiWzIV/SO
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
Gh99ZKGz5KIV8P3oI0MG/8P6EOP/7+3/B3Z66Xg=
   "], {{{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1: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
Ag==
        "]]]}, {}, 
     {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV1He8T3UYB/Bzl5FxRVRoXKIkNEVaIk0jmVFJtG0qWhpKqSgNu+y99y6S
kTKLzJK9y969nz/e9/N8P8/v3PO6v3NeN6tpq9otU5MkSaGzH73SkqRCjiSp
yFJzwYwkWZKeJHnk+/IHMszV5BvM4BwXczftmMAxtrv+AjeYn2EA/7BEl0/e
RVvGczR2+vOUNjehP9tYrMuUd9KGcRyJnf4c15ufph9/87Mur6xEa8byX+z0
Zyllfoq+/MUiXR55B60Yw7+x05/hOvOT9GErP+lyy4q0ZDSHY6c/zbXmxvRm
Cwt1WzhFSedG9GIzC3SbOUkJ5yf4lk38qNvECa5xbsg3bIznoJvPPOYyh9nM
YiYzmM40prKR4xR3bQO+ZgNTdBs4RjHn+nzFn0zW5ZIVaMEoDsVOf5Qscz16
sp5JuvtlJ6Zzlou4nVcYycH4rM/dJ1+L+3MqnqfuLTmLC1xNXb5kHRPt35Pz
Sff+VY3nQE5zRzmNM3GO508u/Tsyn5wjU2R5mV8ukNnlyzKvHCEPxH3c4xLn
xebcsnO813KuTJWVZQG5UOaQr8pMOVmejHfM9Yvib9a9KWdynqviWZJNX0d+
wR9M8Pl35TzS7KrI15nK6bgHbzObxP42+RLD2R+/w/X3yg7x3XMi3lvdlfJx
evA743XZ5a28yDD2xU5/j2wf3y/H4z3WXSFr0521jNNlk7fwAkPZGzv9IYqa
H+Nz1jBWlyFv5nmGsCd2+oMUMdfiM1YzRjeaUYxkBMMZxlCGMJhBDGQ1Byjs
2pp8yiq+161iP5c716AbK/lOt5J9XOZcnU9YwQDdCvZyqfOjfMxv9Nely5t4
jsHsjp1+D4XMj9CVX+mnS5M30pxB7Iqdfnf8PzU/zEcsp68uVZajGQPZGTv9
rngfzQ/xIb/QR5ciy/Js/M3siJ1+JwXMD9KFZfTWJbIMTeN7YHvs9DvIb36A
D1jK/1Zc23E=
        "]]]}, {}, 
     {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0VWUUGUUgNE7AwMDUvJASYdSSjN0SCMIDKXSQwvMSCMd0t0l3SmoSCvd
oSCtSHdJ97B52Os759yXu9afKSomMjo0CIIQYkkRFgSFw4Mggkrm5PGC4B9N
qKv1b0LNw3Qxh3jJt/RnNrt4SB2a0Z3JbOYmFalAecrxOWUpQ2lKUZISFKcY
RSlCxPv/oxAFqU1TujGJTdygAJE0oSsT2ch18tOWfsxiJ/9Ti8Z0YQIbuEY+
2tCXH9nBA2rSiM6MZz1XyctQFnGQF7SmDzPZzn1q8APz2cdTGrKUI7ymE+P4
jSvkYRXHCfEOQ/Q08cwL9QDPacVZwt2Xa2L9U9/Sm6T2kxpXZ+gHuk3v8SUf
2s9pAl2hSfQvjWUQyeynNEznaSLdq09owBniuy3Rw7yiIyeI4z5W13GZz1jJ
MQLfBusC9vOMlizjKG/oxXT+4C7VGchc9vCYb/iOMfzKJT6lBT2Zxu/coRoD
mMNuHvE1MYzmFy6Sm+Z8z1S2cpsv+IpoRvEzF8hFFD2YwhZuUZX6dGAka/mP
nFShHu0ZwRrOk4PsfMLHZCMrWchMJjKSgfSkIy0fkYbUpCIllalLO4bzE//y
DgRph3o=
        "]]]}, {}, 
     {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0mUUFVUUgNGhQ7pBuksapKS7OxWkQaS7u7u7u7uRkEZBQFFRSVFROhWk
9vzY7zt3zf0x651J17JLnc4RgyCIQFw/CaMGQYHoQVCQcuY00YLgT02qu/Qa
cc0TdRM/Es25o45gJed4S11a0p8FHOc5ZSlDaUpRkhJ8QnGKUZQiFOZjClEw
fDfyk486tKAf8znGM/JSm8/pyzy+5il5qEVz+jCXozwhN18wnBV8yxtq0oze
zOEIj8lFB4axnG94TQ3Gso5LRPL/fKa9mM1hHvERE9jIZaK6116Hsoyz/E91
xrCWi0R071Pdws/EcO6pszjEQ3Kyk6vE8Xy83iKheYP+QBRzO71NYvM2TaG/
6Ac6RFPqDY2vSzWZntFXVCO18x+aRLfrh/qrxtLRmkpvagJdo8n1gkbQpvo7
icyb9Seim3vodeKZZ+pXPCAHO/iN2J6N0/V8T2TntrqVK8R0HqxLOM1LqjKK
1XxH4E4T7c4MDnKf7LRhEIs5xX9UYSSrOM87GtON6RzgHtlozUAWcZJ/qUwj
ujKN/dwlK60YwEJO8IJKNKQLU9nHP2ShIg3ozBT28jeZqUB9OjGZPdwhExnJ
QHrSkZY04R7DXYX7DncYfgfhrsJ9kzTcb/iNhLuiPPX4kkns5i/eA04PiXI=

        "]]]}, {}, 
     {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0mXYFVUUgNEL0iAhISHx0Y2EtHR3SYPS3Q0SBt0o3Z3S3Up3p5TSoXTn
mh/rvufsmef+2RPWuEO19uFDoVA44vlJETkUyhElFMpJVefs+lIz6B59SJjz
VN3GbRK599JxrOUKsc1+0A4MYQmniWReRStTiYpUoDzlKEsZSlOKkpSgOMUo
ShEK8z3tGcxiThHR/xfShrRjEIs4SQTPvtUGtGUgCznBZ54V1J6MZQ2XiWVe
X9vwKws4TnjzAtqDMazmEjHN6+lENnGd+Gat9Rfmc4xwZvl1Clu5RUKz7jqa
VfzN52Z1dQIb+Zd4Zq10B3dJ4v6zzuMoIfd8upv/SeE+WZ+SxnmL3uRL5276
nHTOf2pmva9JdZRm1ceaSldqRr2oMbSOfq0vNL3+pVn0gSbT8ZpNn2hq3aCZ
9B+Nqy31GWmdt+sdEjv/pI9I6TxXj/CRvOziP5J7Nkk3c4ME7l11J/f4yn2k
ruAC0d1r6++s5xpfmLXQAczhMB/IQxdGsJzzRPNuLf2NdVwljllz7c9sDvGe
3HRmOH9wjqjeranN6McsDvKOb+jEMJZxlije/06b0peZHOAtuejIUJZyhsje
r6FN+JEZ7OcNOalOY/ownX28JgfZgz0Guwr2Heww+A6CXQX7JkOw3+AbCXYV
fEPBPoNvItgRYVSjEb2Zxl5e8QmW5IxJ
        
        "]]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV1He4znUYBvCfnNOSlBKVspM0jIaUiChKSSpFEcomGiIUKipFGdl77wrH
PPZWRpkhyt57VOjz/PE59/O9n/O73vO+7/c6eeo0r9osQ5Ik7f3okzFJVqQk
yWc8TVb26Fay2zyYOtxHQt/Yyc95hpvYq1vFHvMQ6nI/GegXO/kFFbmZfbrV
7DUPpR4PcAX9Yyc7U4ls7Nf9wj7zMN6mCBkZEDvZhWe5hQO6X9lvHs47FCWF
gbGTX/Ic2TmoW8OgSOevqEwODunWMjjS+Wue51YO69YxJNK5Ky9wG0d06xnK
MIYzgpGMYjRjGMs4xjMhnvHsN1Thdo7qfuOAeQT1KUYqE2Mnv+VFcnJM9zsH
zSNpQHGuZFLsZDeqcgfHdWflj7xPaTboDslRNORBrmKyfoPszkvcyQndOfkT
H1CGjbrDcjSNeCjuTmqSzJbtuZp/mMZHlIvv0j5ddmCK5zfK76gWf7vdApmL
S8ykLdfql8iTfv+8/Jksug/jNeSiuJ/yybhbcq68UX4qr5PL4j7KTZ4/Yh7D
9c6N4/3KhTKrfDjuspwjb5CfyExyqbyGf5lO6zjrF8un4r6Z58mO8fl6jU3y
e14mN5eZRTtO2V+QU2lFWTbrjsqxNOGReM/8RxptKB+fvd/bLHvwCnk4rdvC
MfM4mlIi/u74nGIne/IqeTmj28rUSOdeVCcfZ3V/MI3ppDGDmcxiNnOYSzrz
mB/PeLY3r5Gfc7ptLIh0/oHXKcB53XYWRjr3oQZ3cUG3g0WRzn2pScG4R7o/
OW4eTzMeje+XxbGT/XiDu+O70u3khHkCzSlJZpbETvbnTQrFZ63bxUnzRN7l
sbgnLI2dHEAt7uGi7i9OmSfRgsfjXrIsdnIgtSkc91n3N6fNk2lJqbhnLI+d
HMRb3Bt3Jv4vc8Y8hfd4Iu51vDYz+JgKpLp/82WneH/m5TKbXOH5/wG61trs

       "]]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwN0WO8FmYYwOE3nJNr9SEtndqy27K1jJPttpZt27Zt27ZWy7Ztner6cP3+
930/H5+Qhq1DW4ULBAJhxA0KBK6zmqE0pwoliEd8EpCQX0lEYpKQlGSEkJwU
/MbvpCQVqUnDDdYwjBZUpSRpuclahtOSapTiCTuYRBcako5brGMErahOaZ6y
k8l0pRHpuc16RtKaGrzlILPpSxmesYspdKMxGbjDBkbRhpq84xBz6EdZnrOb
qXQnjNMspQkfOcp8BhIIDgTO6goycpeNjCaCt/Palq+cZDGR3C9rLd5zmOhu
czVIL+ov2l9/cIaY9uUaRa9qbC2nL9hDNPs0jagXNJb20O/8Rwz7Mo2sV7Qp
nzjGAoLdL+kgwpn/15Vk4h6bGEM7vnGKJdTmA0eYxwDK85K9TKcnf/OZ4yxk
MJm5z2bG0p46VOAV+5hBL/4hCw/Ywjg6UJeKvGY/M+lNM7LykK2MpyP1CCUb
j9jGBDpRn0r8wZ9kJwc5yUVu8pCXfOSnAAUpRGGKUJRiFOcx25lIZxpQmTcc
YBZ9+JcvnGARQwjvH87pKqKar2kc/Ut/Avjjhvk=
       "]]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV0mW4FlUUgNGPuuQlRLiE0ghKIyBId7d0CJdupESku7u7QelukO6UblBS
CcGilDU/1rz7PHN+zZ60kZ1qdIwSCoXCPRKHhUIP2MwY2vMVpfmQJCQlgmQk
JwUp+YiPSUVq0pCWdKQnAxl5yBbG0oFalOETHrGVcXSkNmXJxGO2MZ5O1KEc
f3OQ2XxPMzLzG9uZQGfqUp5/OMQcetOcT/mdHUzkG+rxP6dYwmAq8C+HmUsf
WvAZT9jJJLpQn1DMUOi0LmUIFXnFEebRlzjuXNG1tCS688/6IyMId76uG8jC
U3YxmYTe3dKuxDJf0tXBrsy/aAOimM8Eu9Jl+oHeCXalQzWeXgt2qOuD/eq9
YI9aSV9zNNi383xNpLeDfWs/jatXg/9A1wX/iP6qrYhhPq8rSGy+qyOJb76h
G8nKM3YzhW7E9v6yrqEhUZ3P6nKGUZk3HGMB/WlNmHsXdCWjyMZz9jCV7jQi
mnvn9AeGU4W3HGchA2hDdv7gJ6bRg8ZU5R0nWMRA2pKDF+xlOt/yNdXIyUv2
MYOeNKE6ufiT/czkO5pSg9x8Th7yko8vyE8BvqQghShMEYpSjOKUoCR/cYBZ
9CKSmvzHSRYziHbE9H0u6ipGk8D5pm4iwnxfU2spfQ+ClIj1
       "]]}, 
     {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV0lW4VVUUgNED0iFw6VDuJaQ7BBSRUhq9dHd3CyIhXYKAgtIi3d3d3d1I
K52CgGM/jPOvNff+zsvcEY07RLaPEgqFwvyExwyFXrGbyfSiEZFEkI70ZCAj
n5CJzGQhK9nITg5ykovc5CEv/7KHKXxPY6qQj9fsZSq9aUJVYsYKhU7pAobR
kfy8YR/T+IGmVCOW90/rQobTiQL8x36m04dmVCe298/oIkbQmYK85QAz6Etz
Enn3iq5iHDWIY3ZWFzOSLnzKOw7yB/1oQZh3r+pqxlOTuGbndAmjSON+T7fS
lWTuN3Q9E0nrfl93UIj3HGJmsCPPHml/Ujnf0c3BrpyfaUsSO18LdqVrgn3q
k2BX+ot+rP8EO9TtwX71RbBHraXx9Hywb10afBP6ONi3/qQf6d/Bd6Dbgm9E
n2s3kjvf1A3BN+T8VH8j3PmB7qQwIffD+ic/ktr9rm6hFUncr+tafqU28c0u
6DJG050UZrd0I79ThChmR3QWA2hNUrO/dB0TqMOHZhd1OWPowWdENT+qsxlI
G+qSwPySruBnvuNzPjA/pnMYRFvqUZRonh3XuQymHfX5guiendB5DKE9DSjG
lxSnBCUpRWm+4mvKUJZylKcCFalEZb4hhv8/qfMZSgcaktD8sq5kLD1JaXZb
NzGJCPeHuosszi81j36r/wOVIIvQ
       "]]}}}],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
    "AxesInFront" -> True},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.684634440271858*^9, 3.6846356592803373`*^9, 
  3.684667985568658*^9, 3.684688615463297*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"pdfTriangle", "[", 
   RowBox[{"x_", ",", "\[Mu]_", ",", "\[Sigma]_"}], "]"}], ":=", 
  TagBox[GridBox[{
     {"\[Piecewise]", GridBox[{
        {
         FractionBox[
          RowBox[{"x", "-", "\[Mu]", "+", 
           RowBox[{
            SqrtBox["6"], " ", "\[Sigma]"}]}], 
          RowBox[{"6", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]], 
         RowBox[{
          RowBox[{"\[Mu]", "-", 
           RowBox[{
            SqrtBox["6"], " ", "\[Sigma]"}]}], "\[LessEqual]", "x", 
          "\[LessEqual]", "\[Mu]"}]},
        {
         FractionBox[
          RowBox[{
           RowBox[{"-", "x"}], "+", "\[Mu]", "+", 
           RowBox[{
            SqrtBox["6"], " ", "\[Sigma]"}]}], 
          RowBox[{"6", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]], 
         RowBox[{"\[Mu]", "<", "x", "\[LessEqual]", 
          RowBox[{"\[Mu]", "+", 
           RowBox[{
            SqrtBox["6"], " ", "\[Sigma]"}]}]}]},
        {"0", 
         TagBox["True",
          "PiecewiseDefault",
          AutoDelete->True]}
       },
       AllowedDimensions->{2, Automatic},
       Editable->True,
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.84]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}},
       Selectable->True]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxItemSize->{
     "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.35]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   "Piecewise",
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True,
   Selectable->False], " "}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.6764622317264*^9, {3.676462275865959*^9, 3.676462333498724*^9}, {
   3.676462386203244*^9, 3.676462388994298*^9}, {3.6764661175139837`*^9, 
   3.676466119114414*^9}, {3.684532477326845*^9, 3.6845325183824787`*^9}, 
   3.684532784316008*^9, {3.6845328299790363`*^9, 3.6845329325663357`*^9}, {
   3.6845330180277*^9, 3.684533026054028*^9}, 3.684533084708044*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"pdfTriangle", "[", 
       RowBox[{"x", ",", "1", ",", "\[Sigma]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", "1", ",", "2", ",", "5", ",", "10"}], 
         "}"}]}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "4"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{"sigs", ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", "Bold", ",", "8"}], "}"}]}], ",", 
        RowBox[{"LegendLabel", "\[Rule]", "\"\<\[Sigma]=\>\""}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.75", ",", "0.55"}], "}"}]}], "]"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<../abecker/SwarmPublications/JournalTorqueControl/pictures/pdf/\
Triangular.pdf\>\"", ",", "%"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6764623486045923`*^9, 3.676462394184904*^9}, {
   3.67646603305241*^9, 3.676466039085231*^9}, {3.676467095974711*^9, 
   3.676467144451521*^9}, 3.684532791002536*^9, 3.68453283228883*^9, {
   3.684532907047003*^9, 3.6845329632608023`*^9}, {3.684533010619349*^9, 
   3.684533027756667*^9}, {3.684635475603888*^9, 3.684635476052294*^9}, {
   3.6846355747047367`*^9, 3.684635582349329*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJzFmnk0VW3bwE9FRFSkolSGJlIUTdR9FGlAZUgqSqkkGYqeIhlCFJkzho6j
QcMxbJkdM+cYkpAj85SjMpQhRb79rufZ135XrXe93z/f+vqnda299+267mH/
rt85R+qMjd65mRQKRWYWhfKv/0tMpdqmp6eZlH/+LfILXBUl+QviXcqFHTSR
SYhbrj+m6cn9gDhP94vfg4PfIXZ4ODKwV2MMYroPwyD21AjEzwbkFM31vkI8
1M2/JVd3COKTw8puNz98hthTgONmVN4HcbRp9z33H90Qb63H+utRB8RTjnMt
eSyaIL5U4LxgqqkW4rMNHSsOGZUwXVtyn7+qikdjb64wxcQSmNSyntDtBkxk
zLtYhd8mFeWm+N38/oSFEr4OjnG/s9BsA4tNy1Etssv+0HAnqA5JuBra1Ou8
RyqROz/0sZvRPuaDsvzyZjQRIRB107oT3d8p6j5frANx5ecxlTf1og0j+Rr3
wrqQQmXQuKhWPzqOLRFbebgXuSsxVscvGkC7dBp8XJr6kNyO2xRP7hDiVTax
MeP2oZwzA+MHh76i3frVji9VetH7Lwn9lnUjiBXB6diQ1IWWUR5ekOwYQ4UN
O1QfjLSjFW5KWard31FtIlfD614zem4uwp9S/AOljAWyD9x9j06/2dSeXTWJ
HDf2Kn9YVotiomNTJbFfKPFyy4sXi9lI57PBK4d9FKrY7SNrMtfmo/aqCa3V
B2dQ5VgOLxw8E1B6u0abu9pMKjGfMukM1XW7Z0H8Li8/1GkLD8RdznFNs1bz
QnyHEtddv242xLaY5mf9ZXwQD8gLZi6V4Ye44nisrfiqORB/zuKsKhITgJjW
ujnutYQgxNGblZccFZ4L8Sia5SQ/RcZd877SDlCEIRZbcKdc7CsZn2UEDE5P
zyPzcTB2rxImz0f0C+tHdK8qiE/fzfMPic5iUk50Ong/xFDjr5X+HzZ8RlWu
f705FPoRfaptCm4YGURNGfuctcX70dXqbTf7Pg8jepGYwx3/j2iRyZqfVSwK
1XLUOmjR3TSkbRQbXFc0g2ooOSAU6HUefTnoKHSUSc63Wrtgs8ANMr/jlrlJ
5++Q+TXfk0he86YGYrZfe2qlXgEzf39BxSmPV8i9x7hofMcnFCKx72v61160
ZaZmSw7vIJp7239W7w0u0uUxzdtyaRjVO22/Yq/Wh1Jk8+qkfCjU/Clv2+Iv
WehBUOVl5zszqJTnBrmtXx4gvQenrn12JvN7en2/XoAKmZ+r+tP2CWsWk1L/
6ml1WSBSWNJ3nCn9BfF+fPzi49Y+VHNk26rvdkOo9uIibpk3FzmFBkg5CuDj
fzHALFYnoZnLrmTKU8jxa7Sqz3nmkOMHmA9qpRaR9dNXa5uJ1L8l32ebOrhC
hkXM0GCmKt+6Z6jx2LUW3oJ+dP1C0iyrR72oWfzHDMX7A2hVX0rpJjkuUou1
bTORG0ZfjCqG+oP6kKu3T0GFBYXaP+PBqajYXKSq2NV05CK+PvMCPDfdikMe
qrWJW03I/Fo1LITeiZL5Cf8lqP7GsYJJ8ZbSlLzuhNzv8ThUPf2MuJvn5UX1
fkTxLUHpSluGUCbPt1VOjVy0b+KEsGw/hUodNotHjSnoSab3akrnDBhv9sIv
K8sj/63+fv+M/c6D6KukFTWCxUXDI2mUZwkzqInWIm1JeT7oq6Cmq+zZMiZl
nxjlQXI0OnnrhLbRcjLfSCdG4u5WcrxEM+9gTgc5n/wj5pl8x8j3p5pHh8eG
o8VM14y8b8edHiP3II/+uR79iOtnPrf0ei9iJBiEXNQbQCmRGmuNZ3JR6ucJ
m+E5w2hCc6Hi6rw+dH7HYHrcMfz94rHsvdf3PCTsYr1A7Tj+fvk8U7xuRjxa
fl9Qs0WbzO9H4rjlyEwyv/oFO4czXSvx+dQz3hF0FCmUiLjXXfqMjh8vKh3N
/Yh8ZfJddZcMIQU9s2IDSj/a+LyAZ4JDoRpe7ZOQV8KQI/9Ck/5acj6lHG/e
4vqQ45+91n/gtvogcq2ZesR8xEXFe9S3Bj/A7x+2fhDVG4gyH19TnHexnOkq
fMYgRS0MbazqdVefR+ab1rGL37yKHE+rmRPQbc9mUraOT9QneKOssHMDCw2G
kGa6x51HSVxUZzk1KDZM5pNnqrJ6fuYgOn+pqfXKMBctfyzHzsPw9RzzkzY8
7YJuia3UkRokx9/WbpD5eYhcr6zjdufcI8j1OvzSrDavoZhJOZj3xkM2AR1j
CNoFnOtH0o/y5l8170Xhn9xMvJQH0PerQsZWA33IOnjXtuyJIUTJzXhT9K4P
HReV3nzvML5eJW1Bk3Qm+ms1tj5ZD8/neE4nfQ8dWW5dK5KkQdbPb8oU9/xB
vk+3tRnuZ8wi35czOyP4j+l8RiGXJStozz4it9KjPSfnDKHe6+HB6gvxvDxG
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

   "], {{{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[{
        PolygonBox[{{137, 802, 803, 139, 172, 58, 156, 189, 123, 150, 183, 94,
          115, 142, 175, 68, 84, 105, 132, 165, 35, 74, 90, 111, 138, 171, 57,
          67, 83, 104, 131, 164, 34, 33, 32, 31, 30, 29, 28, 27, 56, 66, 82, 
         103, 130, 163, 26, 73, 120, 147, 180, 89, 153, 186, 110, 192}}], 
        PolygonBox[{{108, 800, 801, 170, 55, 194, 155, 188, 122, 149, 182, 93,
          114, 141, 174, 65, 81, 102, 129, 162, 25, 72, 88, 109, 136, 169, 54,
          64, 80, 101, 128, 161, 24, 23, 22, 21, 20, 19, 18, 17, 53, 63, 79, 
         100, 127, 160, 16, 95, 116, 143, 176, 71, 119, 146, 179, 87, 152, 
         185}}]}]}, {}, 
     {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[{
        PolygonBox[{{341, 798, 799, 376, 262, 399, 360, 393, 327, 354, 387, 
         298, 319, 346, 379, 272, 288, 309, 336, 369, 249, 278, 294, 315, 342,
          375, 261, 271, 287, 308, 335, 368, 248, 247, 246, 245, 244, 243, 
         242, 241, 240, 239, 238, 237, 236, 235, 234, 233, 232, 231, 260, 270,
          286, 307, 334, 367, 230, 277, 324, 351, 384, 293, 357, 390, 314, 
         396}}], PolygonBox[{{312, 796, 797, 374, 259, 398, 359, 392, 326, 
         353, 386, 297, 318, 345, 378, 269, 285, 306, 333, 366, 229, 276, 292,
          313, 340, 373, 258, 268, 284, 305, 332, 365, 228, 227, 226, 225, 
         224, 223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 213, 212, 211,
          257, 267, 283, 304, 331, 364, 210, 299, 320, 347, 380, 275, 323, 
         350, 383, 291, 356, 389}}]}]}, {}, 
     {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[{
        PolygonBox[{{412, 792, 793, 520, 464, 531, 512, 528, 496, 509, 525, 
         483, 493, 506, 522, 469, 477, 487, 500, 516, 436, 472, 480, 490, 503,
          519, 463, 468, 476, 486, 499, 515, 435, 434, 433, 432, 431, 430, 
         429, 428, 427, 426, 425, 424, 423, 422, 421, 420, 419, 418, 417, 416,
          415, 414, 413, 462, 467, 475, 485, 498, 514}}], 
        PolygonBox[{{504, 794, 795, 461, 532, 513, 529, 497, 510, 526, 484, 
         494, 507, 523, 474, 482, 492, 505, 521, 466, 471, 479, 489, 502, 518,
          460, 459, 458, 457, 456, 455, 454, 453, 452, 451, 450, 449, 448, 
         447, 446, 445, 444, 443, 442, 441, 440, 439, 438, 465, 470, 478, 488,
          501, 517, 437, 473, 495, 508, 524, 481, 511, 527, 491, 
         530}}]}]}, {}, 
     {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[{
        PolygonBox[{{536, 788, 789, 644, 588, 655, 636, 652, 620, 633, 649, 
         607, 617, 630, 646, 593, 601, 611, 624, 640, 560, 596, 604, 614, 627,
          643, 587, 592, 600, 610, 623, 639, 559, 558, 557, 556, 555, 554, 
         553, 552, 551, 550, 549, 548, 547, 546, 545, 544, 543, 542, 541, 540,
          539, 538, 537, 586, 591, 599, 609, 622, 638}}], 
        PolygonBox[{{628, 790, 791, 585, 656, 637, 653, 621, 634, 650, 608, 
         618, 631, 647, 598, 606, 616, 629, 645, 590, 595, 603, 613, 626, 642,
          584, 583, 582, 581, 580, 579, 578, 577, 576, 575, 574, 573, 572, 
         571, 570, 569, 568, 567, 566, 565, 564, 563, 562, 589, 594, 602, 612,
          625, 641, 561, 597, 619, 632, 648, 605, 635, 651, 615, 
         654}}]}]}, {}, 
     {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[{
        PolygonBox[{{660, 784, 785, 768, 712, 779, 760, 776, 744, 757, 773, 
         731, 741, 754, 770, 717, 725, 735, 748, 764, 684, 720, 728, 738, 751,
          767, 711, 716, 724, 734, 747, 763, 683, 682, 681, 680, 679, 678, 
         677, 676, 675, 674, 673, 672, 671, 670, 669, 668, 667, 666, 665, 664,
          663, 662, 661, 710, 715, 723, 733, 746, 762}}], 
        PolygonBox[{{752, 786, 787, 709, 780, 761, 777, 745, 758, 774, 732, 
         742, 755, 771, 722, 730, 740, 753, 769, 714, 719, 727, 737, 750, 766,
          708, 707, 706, 705, 704, 703, 702, 701, 700, 699, 698, 697, 696, 
         695, 694, 693, 692, 691, 690, 689, 688, 687, 686, 713, 718, 726, 736,
          749, 765, 685, 721, 743, 756, 772, 729, 759, 775, 739, 
         778}}]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[{1, 158, 125, 98, 77, 61, 51, 2, 3, 4, 5, 406, 6, 7, 8, 9, 
       10, 11, 12, 13, 14, 15, 159, 126, 99, 78, 62, 52, 168, 135, 191}], 
      LineBox[{108, 185, 152, 87, 179, 146, 119, 71, 176, 143, 116, 95, 16, 
       160, 127, 100, 79, 63, 53, 17, 18, 19, 20, 21, 22, 23, 24, 161, 128, 
       101, 80, 64, 54, 169, 136, 109, 88, 72, 25, 162, 129, 102, 81, 65, 174,
        141, 114, 93, 182, 149, 122, 188, 155, 194, 55, 170}], 
      LineBox[{137, 192, 110, 186, 153, 89, 180, 147, 120, 73, 26, 163, 130, 
       103, 82, 66, 56, 27, 28, 29, 30, 31, 32, 33, 34, 164, 131, 104, 83, 67,
        57, 171, 138, 111, 90, 74, 35, 165, 132, 105, 84, 68, 175, 142, 115, 
       94, 183, 150, 123, 189, 156, 58, 172, 139}], 
      LineBox[{193, 112, 187, 154, 91, 181, 148, 121, 75, 177, 144, 117, 96, 
       36, 166, 133, 106, 85, 69, 59, 37, 38, 39, 40, 41, 42, 43, 44, 45, 401,
        46, 47, 48, 49, 167, 134, 107, 86, 70, 60, 173, 140, 113, 92, 76, 178,
        145, 118, 97, 184, 151, 124, 190, 157, 195, 50}]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[{205, 362, 329, 302, 281, 265, 255, 206, 207, 208, 209, 
       363, 330, 303, 282, 266, 256, 372, 339, 395}], 
      LineBox[{312, 389, 356, 291, 383, 350, 323, 275, 380, 347, 320, 299, 
       210, 364, 331, 304, 283, 267, 257, 211, 212, 213, 214, 215, 216, 217, 
       218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 365, 332, 305, 
       284, 268, 258, 373, 340, 313, 292, 276, 229, 366, 333, 306, 285, 269, 
       378, 345, 318, 297, 386, 353, 326, 392, 359, 398, 259, 374}], 
      LineBox[{341, 396, 314, 390, 357, 293, 384, 351, 324, 277, 230, 367, 
       334, 307, 286, 270, 260, 231, 232, 233, 234, 235, 236, 237, 238, 239, 
       240, 241, 242, 243, 244, 245, 246, 247, 248, 368, 335, 308, 287, 271, 
       261, 375, 342, 315, 294, 278, 249, 369, 336, 309, 288, 272, 379, 346, 
       319, 298, 387, 354, 327, 393, 360, 399, 262, 376}], 
      LineBox[{343, 397, 316, 391, 358, 295, 385, 352, 325, 279, 381, 348, 
       321, 300, 250, 370, 337, 310, 289, 273, 263, 251, 252, 253, 371, 338, 
       311, 290, 274, 264, 377, 344, 317, 296, 280, 382, 349, 322, 301, 388, 
       355, 328, 394, 361, 400, 254}]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[{412, 514, 498, 485, 475, 467, 462, 413, 414, 415, 416, 
       417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 
       431, 432, 433, 434, 435, 515, 499, 486, 476, 468, 463, 519, 503, 490, 
       480, 472, 436, 516, 500, 487, 477, 469, 522, 506, 493, 483, 525, 509, 
       496, 528, 512, 531, 464, 520}], 
      LineBox[{504, 530, 491, 527, 511, 481, 524, 508, 495, 473, 437, 517, 
       501, 488, 478, 470, 465, 438, 439, 440, 441, 442, 443, 444, 445, 446, 
       447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 
       518, 502, 489, 479, 471, 466, 521, 505, 492, 482, 474, 523, 507, 494, 
       484, 526, 510, 497, 529, 513, 532, 461}]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[{536, 638, 622, 609, 599, 591, 586, 537, 538, 539, 540, 
       541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 
       555, 556, 557, 558, 559, 639, 623, 610, 600, 592, 587, 643, 627, 614, 
       604, 596, 560, 640, 624, 611, 601, 593, 646, 630, 617, 607, 649, 633, 
       620, 652, 636, 655, 588, 644}], 
      LineBox[{628, 654, 615, 651, 635, 605, 648, 632, 619, 597, 561, 641, 
       625, 612, 602, 594, 589, 562, 563, 564, 565, 566, 567, 568, 569, 570, 
       571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 
       642, 626, 613, 603, 595, 590, 645, 629, 616, 606, 598, 647, 631, 618, 
       608, 650, 634, 621, 653, 637, 656, 585}]}, 
     {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[{660, 762, 746, 733, 723, 715, 710, 661, 662, 663, 664, 
       665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 
       679, 680, 681, 682, 683, 763, 747, 734, 724, 716, 711, 767, 751, 738, 
       728, 720, 684, 764, 748, 735, 725, 717, 770, 754, 741, 731, 773, 757, 
       744, 776, 760, 779, 712, 768}], 
      LineBox[{752, 778, 739, 775, 759, 729, 772, 756, 743, 721, 685, 765, 
       749, 736, 726, 718, 713, 686, 687, 688, 689, 690, 691, 692, 693, 694, 
       695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 
       766, 750, 737, 727, 719, 714, 769, 753, 740, 730, 722, 771, 755, 742, 
       732, 774, 758, 745, 777, 761, 780, 709}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], 
      LineBox[{197, 203, 196}], LineBox[{199, 200, 198}], 
      LineBox[{202, 204, 201}], LineBox[{403, 407, 402}], 
      LineBox[{405, 410, 404}], LineBox[{409, 411, 408}], 
      LineBox[{534, 535, 533}], LineBox[{658, 659, 657}], 
      LineBox[{782, 783, 781}]}}, {{}, {}, {}, {}, {}, {}, {}}}],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
    "AxesInFront" -> True},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.676462391501348*^9, 3.6764623944690857`*^9}, 
   3.676466039505086*^9, 3.676466123612932*^9, {3.676467100576798*^9, 
   3.676467145020933*^9}, {3.684532791535241*^9, 3.684532795687173*^9}, {
   3.684532827155634*^9, 3.684532832690959*^9}, 3.684532907676325*^9, {
   3.68453295624757*^9, 3.68453296381356*^9}, {3.684533011222056*^9, 
   3.6845330308864717`*^9}, 3.684634440443005*^9, 3.684635506597316*^9, 
   3.684635584262732*^9, 3.684635659458584*^9, 3.6846679858282948`*^9, 
   3.684674328663357*^9, 3.684688615645124*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"pdfUniform", "[", 
   RowBox[{"x_", ",", "\[Mu]_", ",", "\[Sigma]_"}], "]"}], ":=", 
  TagBox[GridBox[{
     {"\[Piecewise]", GridBox[{
        {
         FractionBox["1", 
          RowBox[{"2", " ", 
           SqrtBox["3"], " ", "\[Sigma]"}]], 
         RowBox[{
          RowBox[{"\[Mu]", "-", 
           RowBox[{
            SqrtBox["3"], " ", "\[Sigma]"}]}], "\[LessEqual]", "x", 
          "\[LessEqual]", 
          RowBox[{"\[Mu]", "+", 
           RowBox[{
            SqrtBox["3"], " ", "\[Sigma]"}]}]}]},
        {"0", 
         TagBox["True",
          "PiecewiseDefault",
          AutoDelete->True]}
       },
       AllowedDimensions->{2, Automatic},
       Editable->True,
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.84]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}},
       Selectable->True]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxItemSize->{
     "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.35]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   "Piecewise",
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True,
   Selectable->False], " "}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.6764622317264*^9, {3.676462275865959*^9, 3.676462333498724*^9}, {
   3.676462386203244*^9, 3.676462388994298*^9}, {3.6764661175139837`*^9, 
   3.676466119114414*^9}, {3.684532477326845*^9, 3.6845325183824787`*^9}, 
   3.684532784316008*^9, {3.6845328299790363`*^9, 3.6845329325663357`*^9}, {
   3.6845330180277*^9, 3.684533026054028*^9}, 3.684533084708044*^9, {
   3.6845340561868877`*^9, 3.6845340618553743`*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"\[Mu]", ",", "\[Sigma]", ",", "x"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", " ", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "1"], 
     RowBox[{"x", " ", 
      RowBox[{"pdfUniform", "[", 
       RowBox[{"x", ",", "\[Mu]", ",", "\[Sigma]"}], "]"}], 
      RowBox[{"\[DifferentialD]", "x"}]}]}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.684839824564198*^9, 3.68483993006216*^9}, {
   3.684839989450144*^9, 3.684840019500421*^9}, {3.6848401249833403`*^9, 
   3.684840127585127*^9}, 3.684840378362897*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sigs", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "/", "2"}], ",", "1", ",", "2", ",", "5", ",", "10"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"pdfUniform", "[", 
       RowBox[{"x", ",", "1", ",", "\[Sigma]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "sigs"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "4"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{"sigs", ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", "Bold", ",", "8"}], "}"}]}], ",", 
        RowBox[{"LegendLabel", "\[Rule]", "\"\<\[Sigma]=\>\""}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.85", ",", "0.55"}], "}"}]}], "]"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<../abecker/SwarmPublications/JournalTorqueControl/pictures/pdf/\
Uniform.pdf\>\"", ",", "%"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6764623486045923`*^9, 3.676462394184904*^9}, {
   3.67646603305241*^9, 3.676466039085231*^9}, {3.676467095974711*^9, 
   3.676467144451521*^9}, 3.684532791002536*^9, 3.68453283228883*^9, {
   3.684532907047003*^9, 3.6845329632608023`*^9}, {3.684533010619349*^9, 
   3.684533027756667*^9}, 3.684534066579653*^9, {3.684575590777972*^9, 
   3.6845756068245077`*^9}, 3.684635481045938*^9, {3.684635522902116*^9, 
   3.684635536438566*^9}, {3.6846355877039013`*^9, 3.6846355931015177`*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJzVmGs4lmkewN9K5u0cMjMdnMYwRQo5zFK9jTEhaiZJyqToJDuda6ekuoiJ
qURqmuQuo7OdHbUdEKKntGzZ9CYVhRcb3nEaCSnZa7f3//9v//3Qh/00fZnr
dz33fT/3fXt+9RsmQWu8l/WVyWQ5fWSyf/83P8Cksre3N1em+fP+3nizIwav
kafaSaoU3VfITzafSvG26Ea+Oqtp7w+eXcibRHvzdNcO5BMxaT7HFrUjn222
sF7q3YbcWit3yJnVivz1b3bhYeWNyFEDH4XPK6hHTgqo3R3RXYvseP+i+r5C
hdwTOjhEK7gM+Y/Xtun0lCmRl5SqjL6cl4/ccWd9rr7+SeT5/T+wl6+5oAA+
2dbS0dBVqDCYFPfF6S3VinVZ5aW79pcg2ydOKa//+2PkF4cHHglbXY3cYDks
1872KbLV7f2dem5q5AibNPPj7zcjWzjtlEU1tCJnBzV3era2IT9oOqkOKWlH
HiMTKwxUHchG4TZXnGu7kP+8VFf+1xvdyIvv2FZlFb1CPpp07ILBxdd43pmN
Pr9scpdNA64qeuFm7tkHOb3KtTJicl9k0/Q053Eu/ZDvXc07uNVBC7lmW3JZ
P/P+yLtkybX3x2kjr734ReOcMe8hN1sOyhxtKke+teDY2pFmA5Abrzwyu64/
EDmlYlLy5VGDkJMm2X3oO3Qw8nNFv62WPcQ1w9pSZsiGIuvr7CrQbyNekhbX
0ts7jPazaX5E0VDyI9spK7W7IB7v6+yVHLnjw2t4n0Fl41Zu/1sxsnbiR+0O
hS+Re+0bChvzepCTrnwcHZnSi+tNrhr0eOAWev+CkJxzy3fR+62XWZRYB0Yj
+07xMM3al4Xzz/UdOtfHjdYXltUGsy1p/TObPbzj7Gl9eUl+5XTVaXx+urR0
R1x9Ps6ftfLG1Cgn+j6K3f6xLCqb5sctbXG7cJ3257JyW3ug1RFkPxPrnwN3
pON8w9q84PQWWq/CNXjIPT1a70JG/KjqoGR8fuqOr1ZmTw+y9ogm44JEGu8z
PyhxRHIuPu/oa7tl9re0fuLWtFSXChqfGhid8EhF+/WSHn5dM/cn2m/C8Va7
by/h/IBp1rHqu7Red2pnSHtfWk/Ht2XNIrfD+LzzQcgZvRrar0lo2PaGGBo/
99b9irpDOfj8I4eX/r/60fqXVFPlS4to/Ly07BWxuzLxeWjSXhOjMTQ+dUNn
qnFJHvJ2feOZJi00/9Mqn8zGVjqvSaFZbJj9cTqv15P9hhsu0vzmOmOt67S+
PCB3ZFQ3+bHcfe4Qq+iD+Dw4KfKhUTF9bxOsXK1Cw+n9vpHDwu8mZOP4jDuL
ZmZ40PrSAe309hs03i+4Y8DmnRn4fLhDm27jYBpv8dWIMH1vOu+egrqX55/S
/Mkrs55HNdP9++gmTX595Crtd8EB2c2l5OvaIL+jcZ00f7uRs9efuui+9njd
NvcwO4H8cGz3Er3f6N+H2PzP1XFZtL9YR9N1MzvovuI/kz9OOJOAz+0aHGZ/
V0D3dUn7TKTLNnp/6eLx3jd16L52jtG9aehC63usDhmak0fjH7rqlX/Th+6r
POLEbu/+ND7kakrtMB26L70Uzzmh1TT/vcurVjc+pfsqac4Y8mwk3Zf7tLPZ
QXU0v9M5+7nfs//ydWOTYsU9Oo9aFaU3OoHGq8d6rbM5RPetjm6fXvCS5nNf
+M+Hv5+/z6/oaMAI82uKkf9hpWKu+fiNU8p7FAdt3vDvtW8MNOeBvgGGvgGG
vgGGvgGGvgGGvgF+u2+UrG+UrG+UrG+UrG+UrG+UrG+UrG+UrG+UrG+UrG+U
rG+UrG+UrG+U2DfA0DfA0DfA0DfA0DfA0DfA0DfAv/e+ae35ro/6rho57mKF
9irVU/x+1Ie9nMcb1CD7H7XOUPxC92GvSK5sPE33EVa2vn7EcbqPd/XNqc6F
n10o/RX5+0p/1+qSOvr7OMB4YddyWj9iVczyTctpfd43TlrnrhkXNeD8H2IC
Czub/on7rzAyDlLVU5++q2/CN3qoPphP/so3japJmkX+aqUfOGnmTvvhfaMf
fiQw6ku63+8nVhmvKKDz8L4ZMkOc/MS/DvdrO3zxcf8BtP67+qbZVmEzI5H2
ezN3i23obtrvTf9R+T2f0nq8byIU8efT42i/ix2nySwyaL+8b24feNWu9SP9
vOQf5kUYvqD75X3jYZGVkKtD+4ksGrzA+wGtP6t3iu8MQzr/u/rGTNdpfs0V
Oq/5snFl9WdpffMJT0pW2tB5ed9kGu559NV5Oi/vGUunn5M2XKbzPRu9tq23
lc7He+bMnRDnCdb0/mOW1uejiul8vF9+fGX1h5QwWr/QtPiuVEXrv6tX8sId
mybeovOXOvaZYJxJ7/c9dPXxMSs6P+8Vn9iYVeIanZ/3SdngyNbUfNpfvYF7
amsj7Y/3iV+Ky75lCno/748x0sc/FUXTeuY7PGPHVtJ6vDfCVpS4Tz5N44c7
TAr2WEjfR4lJ10hlLc3nvTHn8Lni59/Q/De9QOP5enw//PvkPy9Y701/SAof
zfuAoUfezJcU0CPA0CPA0CPA0CPA0CPA0CPA0CPA0CPA0CPA0CPAb/eIxHpE
Yj0isR6RWI9IrEck1iMS6xGJ9YjEekRiPSKxHpFYj0isRyTWIxLrEYn1iMR6
RGI9IrEekViPSKxHJNYjEusRifWIxHpEYj0isR6RsEeAoUeAoUeAoUeAoUeA
oUfw+9D0CDD0CO5H0yPA0CP4fWh6BPej6RFg6AVg8GdixlP5+n1/QX+AwR9g
8AcY/AEGf4DBH2DwBxj8AQZ/gMEfYPAHGPwBBn+AwR9g8AcY/AEGf4DBH2Dw
Bxj8AQZ/gMEfYPAHGPwBBn+AwR9g8AcY/AEGf4DBH2DwBxj8AQZ/gMEfYPAH
GPwBBn+AwR9g8AcY/AEGf4DBH2DwBxj8we9D4w8w+IP70fgDDP7g96HxB/ej
8QcY/AF+2x/B/BHMH8H8EcwfwfwRzB/B/BHMH8H8EcwfwfwRzB/B/BHMH8H8
EcwfwfwRzB/B/BHMH8H8EcwfwfwRzB/B/BHMH8H8EcwfwfwRzB/B/BHMH8H8
EcwfwfwRzB/B/BHMH8H8EcwfwfwRzB/B/BHMH8H8EcwfwfwRzB/B/BHMH8H8
Ef/z+yT+/9P/73PoT96bwPD7MWD4fRjwvwCHSjcO
     "], {{{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[
         PolygonBox[{{112, 444, 445, 133, 101, 120, 56, 62, 32, 55, 31, 30, 
          29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 54, 19, 66, 53, 
          135}}]]}, {}, 
       {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[
         PolygonBox[{{269, 442, 443, 234, 248, 217, 228, 198, 204, 181, 197, 
          180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 
          167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 
          196, 154, 208, 195, 235, 219}}]]}, {}, 
       {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[
         PolygonBox[{{280, 440, 441, 329, 331, 328, 327, 326, 325, 324, 323, 
          322, 321, 320, 319, 318, 317, 316, 315, 314, 313, 312, 311, 310, 
          309, 308, 307, 306, 305, 304, 303, 302, 301, 300, 299, 298, 297, 
          296, 295, 294, 293, 292, 291, 290, 289, 288, 287, 286, 285, 284, 
          283, 282, 281, 330}}]]}, {}, 
       {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[
         PolygonBox[{{332, 438, 439, 381, 383, 380, 379, 378, 377, 376, 375, 
          374, 373, 372, 371, 370, 369, 368, 367, 366, 365, 364, 363, 362, 
          361, 360, 359, 358, 357, 356, 355, 354, 353, 352, 351, 350, 349, 
          348, 347, 346, 345, 344, 343, 342, 341, 340, 339, 338, 337, 336, 
          335, 334, 333, 382}}]]}, {}, 
       {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[
         PolygonBox[{{384, 436, 437, 433, 435, 432, 431, 430, 429, 428, 427, 
          426, 425, 424, 423, 422, 421, 420, 419, 418, 417, 416, 415, 414, 
          413, 412, 411, 410, 409, 408, 407, 406, 405, 404, 403, 402, 401, 
          400, 399, 398, 397, 396, 395, 394, 393, 392, 391, 390, 389, 388, 
          387, 386, 385, 
          434}}]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{1, 114, 95, 80, 69, 59, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
         272, 12, 13, 14, 15, 16, 17, 115, 96, 81, 70, 60, 52, 119, 100, 85, 
         74, 65, 18, 116, 97, 82, 71, 125, 106, 91, 61, 122, 103, 88, 130, 
         111, 77, 127, 108, 134, 93, 131}], 
        LineBox[{112, 135, 53, 66, 19, 54, 20, 21, 22, 23, 24, 25, 26, 27, 28,
          29, 30, 31, 55, 32, 62, 56, 120, 101, 133}], 
        LineBox[{86, 129, 110, 75, 126, 107, 92, 67, 123, 104, 89, 78, 33, 
         117, 98, 83, 72, 63, 57, 34, 35, 36, 37, 38, 39, 273, 40, 41, 42, 43,
          44, 45, 46, 47, 48, 49, 118, 99, 84, 73, 64, 58, 121, 102, 87, 76, 
         68, 124, 105, 90, 79, 128, 109, 94, 132, 113, 136, 50}]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{143, 253, 237, 222, 211, 201, 193, 144, 145, 146, 147, 148, 
         149, 150, 151, 152, 254, 238, 223, 212, 202, 194, 258, 242, 227, 216,
          207, 153, 255, 239, 224, 213, 263, 247, 233, 203, 260, 244, 268, 
         230, 265, 250}], 
        LineBox[{269, 219, 235, 195, 208, 154, 196, 155, 156, 157, 158, 159, 
         160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
          174, 175, 176, 177, 178, 179, 180, 197, 181, 204, 198, 228, 217, 
         248, 234}], 
        LineBox[{266, 251, 270, 209, 261, 245, 231, 220, 182, 256, 240, 225, 
         214, 205, 199, 183, 184, 185, 186, 187, 188, 189, 190, 191, 257, 241,
          226, 215, 206, 200, 259, 243, 229, 218, 210, 262, 246, 232, 221, 
         264, 249, 236, 267, 252, 271, 192}]}, 
       {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{280, 330, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 
         291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304,
          305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 
         318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 331, 329}]}, 
       {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{332, 382, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 
         343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356,
          357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 
         370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 383, 381}]}, 
       {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{384, 434, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 
         395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
          409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 
         422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 433}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], 
        LineBox[{139, 141, 138}], LineBox[{140, 142, 137}], 
        LineBox[{276, 278, 275}], 
        LineBox[{277, 279, 274}]}}, {{}, {}, {}, {}, {}, {}, {}}}], InsetBox[
     TemplateBox[{FractionBox["1", "2"],"1","2","5","10"},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox["\"\[Sigma]=\"", {
                 GrayLevel[0], FontWeight -> Bold, FontSize -> 8, FontFamily -> 
                 "Arial"}, Background -> Automatic, StripOnInput -> False]}, {
              
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontWeight -> Bold, FontSize -> 8, FontFamily -> 
          "Arial"}, Background -> Automatic, StripOnInput -> False], 
        TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold", ",", "8"}], "}"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"\[Sigma]=\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.85, 0.55}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0., 0.},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
     "AxesInFront" -> True},
   PlotRange->{All, All},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[
     GraphicsComplex[CompressedData["
1:eJzVmGs4lmkewN9K5u0cMjMdnMYwRQo5zFK9jTEhaiZJyqToJDuda6ekuoiJ
qURqmuQuo7OdHbUdEKKntGzZ9CYVhRcb3nEaCSnZa7f3//9v//3Qh/00fZnr
dz33fT/3fXt+9RsmQWu8l/WVyWQ5fWSyf/83P8Cksre3N1em+fP+3nizIwav
kafaSaoU3VfITzafSvG26Ea+Oqtp7w+eXcibRHvzdNcO5BMxaT7HFrUjn222
sF7q3YbcWit3yJnVivz1b3bhYeWNyFEDH4XPK6hHTgqo3R3RXYvseP+i+r5C
hdwTOjhEK7gM+Y/Xtun0lCmRl5SqjL6cl4/ccWd9rr7+SeT5/T+wl6+5oAA+
2dbS0dBVqDCYFPfF6S3VinVZ5aW79pcg2ydOKa//+2PkF4cHHglbXY3cYDks
1872KbLV7f2dem5q5AibNPPj7zcjWzjtlEU1tCJnBzV3era2IT9oOqkOKWlH
HiMTKwxUHchG4TZXnGu7kP+8VFf+1xvdyIvv2FZlFb1CPpp07ILBxdd43pmN
Pr9scpdNA64qeuFm7tkHOb3KtTJicl9k0/Q053Eu/ZDvXc07uNVBC7lmW3JZ
P/P+yLtkybX3x2kjr734ReOcMe8hN1sOyhxtKke+teDY2pFmA5Abrzwyu64/
EDmlYlLy5VGDkJMm2X3oO3Qw8nNFv62WPcQ1w9pSZsiGIuvr7CrQbyNekhbX
0ts7jPazaX5E0VDyI9spK7W7IB7v6+yVHLnjw2t4n0Fl41Zu/1sxsnbiR+0O
hS+Re+0bChvzepCTrnwcHZnSi+tNrhr0eOAWev+CkJxzy3fR+62XWZRYB0Yj
+07xMM3al4Xzz/UdOtfHjdYXltUGsy1p/TObPbzj7Gl9eUl+5XTVaXx+urR0
R1x9Ps6ftfLG1Cgn+j6K3f6xLCqb5sctbXG7cJ3257JyW3ug1RFkPxPrnwN3
pON8w9q84PQWWq/CNXjIPT1a70JG/KjqoGR8fuqOr1ZmTw+y9ogm44JEGu8z
PyhxRHIuPu/oa7tl9re0fuLWtFSXChqfGhid8EhF+/WSHn5dM/cn2m/C8Va7
by/h/IBp1rHqu7Red2pnSHtfWk/Ht2XNIrfD+LzzQcgZvRrar0lo2PaGGBo/
99b9irpDOfj8I4eX/r/60fqXVFPlS4to/Ly07BWxuzLxeWjSXhOjMTQ+dUNn
qnFJHvJ2feOZJi00/9Mqn8zGVjqvSaFZbJj9cTqv15P9hhsu0vzmOmOt67S+
PCB3ZFQ3+bHcfe4Qq+iD+Dw4KfKhUTF9bxOsXK1Cw+n9vpHDwu8mZOP4jDuL
ZmZ40PrSAe309hs03i+4Y8DmnRn4fLhDm27jYBpv8dWIMH1vOu+egrqX55/S
/Mkrs55HNdP9++gmTX595Crtd8EB2c2l5OvaIL+jcZ00f7uRs9efuui+9njd
NvcwO4H8cGz3Er3f6N+H2PzP1XFZtL9YR9N1MzvovuI/kz9OOJOAz+0aHGZ/
V0D3dUn7TKTLNnp/6eLx3jd16L52jtG9aehC63usDhmak0fjH7rqlX/Th+6r
POLEbu/+ND7kakrtMB26L70Uzzmh1TT/vcurVjc+pfsqac4Y8mwk3Zf7tLPZ
QXU0v9M5+7nfs//ydWOTYsU9Oo9aFaU3OoHGq8d6rbM5RPetjm6fXvCS5nNf
+M+Hv5+/z6/oaMAI82uKkf9hpWKu+fiNU8p7FAdt3vDvtW8MNOeBvgGGvgGG
vgGGvgGGvgGGvgF+u2+UrG+UrG+UrG+UrG+UrG+UrG+UrG+UrG+UrG+UrG+U
rG+UrG+UrG+U2DfA0DfA0DfA0DfA0DfA0DfA0DfAv/e+ae35ro/6rho57mKF
9irVU/x+1Ie9nMcb1CD7H7XOUPxC92GvSK5sPE33EVa2vn7EcbqPd/XNqc6F
n10o/RX5+0p/1+qSOvr7OMB4YddyWj9iVczyTctpfd43TlrnrhkXNeD8H2IC
Czub/on7rzAyDlLVU5++q2/CN3qoPphP/so3japJmkX+aqUfOGnmTvvhfaMf
fiQw6ku63+8nVhmvKKDz8L4ZMkOc/MS/DvdrO3zxcf8BtP67+qbZVmEzI5H2
ezN3i23obtrvTf9R+T2f0nq8byIU8efT42i/ix2nySwyaL+8b24feNWu9SP9
vOQf5kUYvqD75X3jYZGVkKtD+4ksGrzA+wGtP6t3iu8MQzr/u/rGTNdpfs0V
Oq/5snFl9WdpffMJT0pW2tB5ed9kGu559NV5Oi/vGUunn5M2XKbzPRu9tq23
lc7He+bMnRDnCdb0/mOW1uejiul8vF9+fGX1h5QwWr/QtPiuVEXrv6tX8sId
mybeovOXOvaZYJxJ7/c9dPXxMSs6P+8Vn9iYVeIanZ/3SdngyNbUfNpfvYF7
amsj7Y/3iV+Ky75lCno/748x0sc/FUXTeuY7PGPHVtJ6vDfCVpS4Tz5N44c7
TAr2WEjfR4lJ10hlLc3nvTHn8Lni59/Q/De9QOP5enw//PvkPy9Y701/SAof
zfuAoUfezJcU0CPA0CPA0CPA0CPA0CPA0CPA0CPA0CPA0CPA0CPAb/eIxHpE
Yj0isR6RWI9IrEck1iMS6xGJ9YjEekRiPSKxHpFYj0isRyTWIxLrEYn1iMR6
RGI9IrEekViPSKxHJNYjEusRifWIxHpEYj0isR6RsEeAoUeAoUeAoUeAoUeA
oUfw+9D0CDD0CO5H0yPA0CP4fWh6BPej6RFg6AVg8GdixlP5+n1/QX+AwR9g
8AcY/AEGf4DBH2DwBxj8AQZ/gMEfYPAHGPwBBn+AwR9g8AcY/AEGf4DBH2Dw
Bxj8AQZ/gMEfYPAHGPwBBn+AwR9g8AcY/AEGf4DBH2DwBxj8AQZ/gMEfYPAH
GPwBBn+AwR9g8AcY/AEGf4DBH2DwBxj8we9D4w8w+IP70fgDDP7g96HxB/ej
8QcY/AF+2x/B/BHMH8H8EcwfwfwRzB/B/BHMH8H8EcwfwfwRzB/B/BHMH8H8
EcwfwfwRzB/B/BHMH8H8EcwfwfwRzB/B/BHMH8H8EcwfwfwRzB/B/BHMH8H8
EcwfwfwRzB/B/BHMH8H8EcwfwfwRzB/B/BHMH8H8EcwfwfwRzB/B/BHMH8H8
Ef/z+yT+/9P/73PoT96bwPD7MWD4fRjwvwCHSjcO
      "], {{{}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroup[{
           
           Polygon[{{112, 444, 445, 133, 101, 120, 56, 62, 32, 55, 31, 30, 29,
             28, 27, 26, 25, 24, 23, 22, 21, 20, 54, 19, 66, 53, 
            135}}]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroup[{
           
           Polygon[{{269, 442, 443, 234, 248, 217, 228, 198, 204, 181, 197, 
            180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 
            167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 
            196, 154, 208, 195, 235, 219}}]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          Opacity[0.2]], 
         GraphicsGroup[{
           
           Polygon[{{280, 440, 441, 329, 331, 328, 327, 326, 325, 324, 323, 
            322, 321, 320, 319, 318, 317, 316, 315, 314, 313, 312, 311, 310, 
            309, 308, 307, 306, 305, 304, 303, 302, 301, 300, 299, 298, 297, 
            296, 295, 294, 293, 292, 291, 290, 289, 288, 287, 286, 285, 284, 
            283, 282, 281, 330}}]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          Opacity[0.2]], 
         GraphicsGroup[{
           
           Polygon[{{332, 438, 439, 381, 383, 380, 379, 378, 377, 376, 375, 
            374, 373, 372, 371, 370, 369, 368, 367, 366, 365, 364, 363, 362, 
            361, 360, 359, 358, 357, 356, 355, 354, 353, 352, 351, 350, 349, 
            348, 347, 346, 345, 344, 343, 342, 341, 340, 339, 338, 337, 336, 
            335, 334, 333, 382}}]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          Opacity[0.2]], 
         GraphicsGroup[{
           
           Polygon[{{384, 436, 437, 433, 435, 432, 431, 430, 429, 428, 427, 
            426, 425, 424, 423, 422, 421, 420, 419, 418, 417, 416, 415, 414, 
            413, 412, 411, 410, 409, 408, 407, 406, 405, 404, 403, 402, 401, 
            400, 399, 398, 397, 396, 395, 394, 393, 392, 391, 390, 389, 388, 
            387, 386, 385, 
            434}}]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Line[{1, 114, 95, 80, 69, 59, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
          272, 12, 13, 14, 15, 16, 17, 115, 96, 81, 70, 60, 52, 119, 100, 85, 
          74, 65, 18, 116, 97, 82, 71, 125, 106, 91, 61, 122, 103, 88, 130, 
          111, 77, 127, 108, 134, 93, 131}], 
         Line[{112, 135, 53, 66, 19, 54, 20, 21, 22, 23, 24, 25, 26, 27, 28, 
          29, 30, 31, 55, 32, 62, 56, 120, 101, 133}], 
         Line[{86, 129, 110, 75, 126, 107, 92, 67, 123, 104, 89, 78, 33, 117, 
          98, 83, 72, 63, 57, 34, 35, 36, 37, 38, 39, 273, 40, 41, 42, 43, 44,
           45, 46, 47, 48, 49, 118, 99, 84, 73, 64, 58, 121, 102, 87, 76, 68, 
          124, 105, 90, 79, 128, 109, 94, 132, 113, 136, 50}]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Line[{143, 253, 237, 222, 211, 201, 193, 144, 145, 146, 147, 148, 
          149, 150, 151, 152, 254, 238, 223, 212, 202, 194, 258, 242, 227, 
          216, 207, 153, 255, 239, 224, 213, 263, 247, 233, 203, 260, 244, 
          268, 230, 265, 250}], 
         Line[{269, 219, 235, 195, 208, 154, 196, 155, 156, 157, 158, 159, 
          160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 
          173, 174, 175, 176, 177, 178, 179, 180, 197, 181, 204, 198, 228, 
          217, 248, 234}], 
         Line[{266, 251, 270, 209, 261, 245, 231, 220, 182, 256, 240, 225, 
          214, 205, 199, 183, 184, 185, 186, 187, 188, 189, 190, 191, 257, 
          241, 226, 215, 206, 200, 259, 243, 229, 218, 210, 262, 246, 232, 
          221, 264, 249, 236, 267, 252, 271, 192}]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Line[{280, 330, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 
          291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 
          304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 
          317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 331, 
          329}]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Line[{332, 382, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 
          343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 
          356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 
          369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 383, 
          381}]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Line[{384, 434, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 
          395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 
          408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 
          421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 
          433}]}, {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         Line[{139, 141, 138}], 
         Line[{140, 142, 137}], 
         Line[{276, 278, 275}], 
         Line[{277, 279, 274}]}}, {{}, {}, {}, {}, {}, {}, {}}}], {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0., 0.},
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
       FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
        "AxesInFront" -> True}, PlotRange -> {All, All}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]]}, {
        Rational[1, 2], 1, 2, 5, 10}, LabelStyle -> {
         GrayLevel[0], Bold, 8}, LegendLabel -> "\[Sigma]=", LegendLayout -> 
       "Column"]], {0.85, 0.55}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.684542210063703*^9, 3.684575610164694*^9, 3.6846344406468563`*^9, {
   3.684635512935843*^9, 3.68463553970872*^9}, 3.684635595095673*^9, 
   3.6846356597728367`*^9, 3.684667986219694*^9, 3.684688615935978*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "1"], 
  RowBox[{"x", " ", 
   RowBox[{"pdfTriangle", "[", 
    RowBox[{"x", ",", "\[Mu]", ",", "\[Sigma]"}], "]"}], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {"\[Mu]", 
        RowBox[{
         RowBox[{"0", "<", "\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], ">", "0"}], "&&", 
         RowBox[{"\[Sigma]", ">", "0"}]}]},
       {
        RowBox[{
         FractionBox["1", "6"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"3", " ", "\[Mu]"}], "+", 
           RowBox[{
            SqrtBox["6"], " ", "\[Sigma]"}]}], ")"}]}], 
        RowBox[{
         RowBox[{"\[Mu]", "\[Equal]", "0"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}], "&&", 
         RowBox[{"\[Sigma]", ">", "0"}]}]},
       {
        FractionBox[
         RowBox[{"2", "-", 
          RowBox[{"3", " ", "\[Mu]"}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]"}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Mu]", ">", "1"}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "-", 
             RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}]}], ")"}],
          "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
           RowBox[{"\[Sigma]", "\[GreaterEqual]", 
            FractionBox["1", 
             SqrtBox["6"]]}]}], ")"}]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"3", " ", "\[Mu]"}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]"}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", "<", "0"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], ">", 
          SqrtBox["6"]}]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"3", " ", "\[Mu]"}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Mu]", "3"]}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]"}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"0", "<", "\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"3", " ", "\[Mu]"}], "-", 
          SuperscriptBox["\[Mu]", "3"], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]"}], "-", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Mu]", "\[Equal]", "0"}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "+", 
             RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
            SqrtBox["6"]}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"0", "\[LessEqual]", "\[Mu]", "<", "1"}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "+", 
             RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
            SqrtBox["6"]}], "&&", 
           RowBox[{"\[Sigma]", "\[LessEqual]", "0"}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "-", 
             RowBox[{"6", " ", "\[Sigma]"}]}], ">", "0"}]}], ")"}]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[Mu]", "3"]}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"0", "<", "\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}], "&&", 
         RowBox[{"\[Sigma]", "\[LessEqual]", "0"}]}]},
       {
        FractionBox[
         RowBox[{
          SqrtBox["6"], "-", 
          RowBox[{
           SqrtBox["6"], " ", "\[Mu]"}], "+", 
          RowBox[{"3", " ", "\[Mu]", " ", "\[Sigma]"}], "-", 
          RowBox[{
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Sigma]", "2"]}]}], 
         RowBox[{"6", " ", "\[Sigma]"}]], 
        RowBox[{
         RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
         RowBox[{"0", "<", "\[Sigma]", "<", 
          FractionBox["1", 
           SqrtBox["6"]]}]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"3", " ", "\[Mu]"}], "-", 
          SuperscriptBox["\[Mu]", "3"], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]"}], "-", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
          RowBox[{"18", " ", "\[Mu]", " ", 
           SuperscriptBox["\[Sigma]", "2"]}], "-", 
          RowBox[{"6", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Sigma]", "3"]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"0", "<", "\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], ">", "0"}], "&&", 
         RowBox[{"\[Sigma]", ">", "0"}]}]},
       {
        FractionBox[
         RowBox[{"2", "-", 
          RowBox[{"3", " ", "\[Mu]"}], "+", 
          SuperscriptBox["\[Mu]", "3"], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]"}], "-", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
          RowBox[{"18", " ", "\[Mu]", " ", 
           SuperscriptBox["\[Sigma]", "2"]}], "-", 
          RowBox[{"6", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Sigma]", "3"]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", ">", "1"}], "&&", 
         RowBox[{"0", "<", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[Mu]", "3"]}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
          RowBox[{"18", " ", "\[Mu]", " ", 
           SuperscriptBox["\[Sigma]", "2"]}], "+", 
          RowBox[{"6", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Sigma]", "3"]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"0", "<", "\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}], "&&", 
         RowBox[{"\[Sigma]", ">", "0"}]}]},
       {
        FractionBox[
         RowBox[{
          SuperscriptBox["\[Mu]", "3"], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
          RowBox[{"18", " ", "\[Mu]", " ", 
           SuperscriptBox["\[Sigma]", "2"]}], "+", 
          RowBox[{"6", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Sigma]", "3"]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", "<", "0"}], "&&", 
         RowBox[{"0", "<", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", 
          SqrtBox["6"]}]}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.684634459123765*^9, 3.684635677562282*^9, 
  3.6846680046643047`*^9, 3.684688634563814*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Mu]", ">", "0"}], " ", "&&", 
    RowBox[{"\[Sigma]", ">", "0"}]}], ",", 
   RowBox[{"Refine", "[", 
    TagBox[GridBox[{
       {"\[Piecewise]", GridBox[{
          {"\[Mu]", 
           RowBox[{
            RowBox[{"0", "<", "\[Mu]", "<", "1"}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "+", 
              RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
             SqrtBox["6"]}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "-", 
              RowBox[{"6", " ", "\[Sigma]"}]}], ">", "0"}], "&&", 
            RowBox[{"\[Sigma]", ">", "0"}]}]},
          {
           RowBox[{
            FractionBox["1", "6"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"3", " ", "\[Mu]"}], "+", 
              RowBox[{
               SqrtBox["6"], " ", "\[Sigma]"}]}], ")"}]}], 
           RowBox[{
            RowBox[{"\[Mu]", "\[Equal]", "0"}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "+", 
              RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
             SqrtBox["6"]}], "&&", 
            RowBox[{"\[Sigma]", ">", "0"}]}]},
          {
           FractionBox[
            RowBox[{"2", "-", 
             RowBox[{"3", " ", "\[Mu]"}], "+", 
             RowBox[{"3", " ", 
              SqrtBox["6"], " ", "\[Sigma]"}]}], 
            RowBox[{"36", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Mu]", ">", "1"}], "&&", 
              RowBox[{
               RowBox[{
                RowBox[{
                 SqrtBox["6"], " ", "\[Mu]"}], "-", 
                RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}]}], 
             ")"}], "||", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
              RowBox[{"\[Sigma]", "\[GreaterEqual]", 
               FractionBox["1", 
                SqrtBox["6"]]}]}], ")"}]}]},
          {
           FractionBox[
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"3", " ", "\[Mu]"}], "+", 
             RowBox[{"3", " ", 
              SqrtBox["6"], " ", "\[Sigma]"}]}], 
            RowBox[{"36", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]], 
           RowBox[{
            RowBox[{"\[Mu]", "<", "0"}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "+", 
              RowBox[{"6", " ", "\[Sigma]"}]}], ">", 
             SqrtBox["6"]}]}]},
          {
           FractionBox[
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"3", " ", "\[Mu]"}], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Mu]", "3"]}], "+", 
             RowBox[{"3", " ", 
              SqrtBox["6"], " ", "\[Sigma]"}]}], 
            RowBox[{"36", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]], 
           RowBox[{
            RowBox[{"0", "<", "\[Mu]", "<", "1"}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "+", 
              RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
             SqrtBox["6"]}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "-", 
              RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}]}]},
          {
           FractionBox[
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"3", " ", "\[Mu]"}], "-", 
             SuperscriptBox["\[Mu]", "3"], "+", 
             RowBox[{"3", " ", 
              SqrtBox["6"], " ", "\[Sigma]"}], "-", 
             RowBox[{"3", " ", 
              SqrtBox["6"], " ", 
              SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}]}], 
            RowBox[{"36", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Mu]", "\[Equal]", "0"}], "&&", 
              RowBox[{
               RowBox[{
                RowBox[{
                 SqrtBox["6"], " ", "\[Mu]"}], "+", 
                RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
               SqrtBox["6"]}]}], ")"}], "||", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"0", "\[LessEqual]", "\[Mu]", "<", "1"}], "&&", 
              RowBox[{
               RowBox[{
                RowBox[{
                 SqrtBox["6"], " ", "\[Mu]"}], "+", 
                RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
               SqrtBox["6"]}], "&&", 
              RowBox[{"\[Sigma]", "\[LessEqual]", "0"}], "&&", 
              RowBox[{
               RowBox[{
                RowBox[{
                 SqrtBox["6"], " ", "\[Mu]"}], "-", 
                RowBox[{"6", " ", "\[Sigma]"}]}], ">", "0"}]}], ")"}]}]},
          {
           FractionBox[
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["\[Mu]", "3"]}], "+", 
             RowBox[{"3", " ", 
              SqrtBox["6"], " ", 
              SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}]}], 
            RowBox[{"36", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]], 
           RowBox[{
            RowBox[{"0", "<", "\[Mu]", "<", "1"}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "-", 
              RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "+", 
              RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
             SqrtBox["6"]}], "&&", 
            RowBox[{"\[Sigma]", "\[LessEqual]", "0"}]}]},
          {
           FractionBox[
            RowBox[{
             SqrtBox["6"], "-", 
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "+", 
             RowBox[{"3", " ", "\[Mu]", " ", "\[Sigma]"}], "-", 
             RowBox[{
              SqrtBox["6"], " ", 
              SuperscriptBox["\[Sigma]", "2"]}]}], 
            RowBox[{"6", " ", "\[Sigma]"}]], 
           RowBox[{
            RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
            RowBox[{"0", "<", "\[Sigma]", "<", 
             FractionBox["1", 
              SqrtBox["6"]]}]}]},
          {
           FractionBox[
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"3", " ", "\[Mu]"}], "-", 
             SuperscriptBox["\[Mu]", "3"], "+", 
             RowBox[{"3", " ", 
              SqrtBox["6"], " ", "\[Sigma]"}], "-", 
             RowBox[{"3", " ", 
              SqrtBox["6"], " ", 
              SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
             RowBox[{"18", " ", "\[Mu]", " ", 
              SuperscriptBox["\[Sigma]", "2"]}], "-", 
             RowBox[{"6", " ", 
              SqrtBox["6"], " ", 
              SuperscriptBox["\[Sigma]", "3"]}]}], 
            RowBox[{"36", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]], 
           RowBox[{
            RowBox[{"0", "<", "\[Mu]", "<", "1"}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "+", 
              RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
             SqrtBox["6"]}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "-", 
              RowBox[{"6", " ", "\[Sigma]"}]}], ">", "0"}], "&&", 
            RowBox[{"\[Sigma]", ">", "0"}]}]},
          {
           FractionBox[
            RowBox[{"2", "-", 
             RowBox[{"3", " ", "\[Mu]"}], "+", 
             SuperscriptBox["\[Mu]", "3"], "+", 
             RowBox[{"3", " ", 
              SqrtBox["6"], " ", "\[Sigma]"}], "-", 
             RowBox[{"3", " ", 
              SqrtBox["6"], " ", 
              SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
             RowBox[{"18", " ", "\[Mu]", " ", 
              SuperscriptBox["\[Sigma]", "2"]}], "-", 
             RowBox[{"6", " ", 
              SqrtBox["6"], " ", 
              SuperscriptBox["\[Sigma]", "3"]}]}], 
            RowBox[{"36", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]], 
           RowBox[{
            RowBox[{"\[Mu]", ">", "1"}], "&&", 
            RowBox[{"0", "<", 
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "-", 
              RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
             SqrtBox["6"]}]}]},
          {
           FractionBox[
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["\[Mu]", "3"]}], "+", 
             RowBox[{"3", " ", 
              SqrtBox["6"], " ", 
              SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
             RowBox[{"18", " ", "\[Mu]", " ", 
              SuperscriptBox["\[Sigma]", "2"]}], "+", 
             RowBox[{"6", " ", 
              SqrtBox["6"], " ", 
              SuperscriptBox["\[Sigma]", "3"]}]}], 
            RowBox[{"36", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]], 
           RowBox[{
            RowBox[{"0", "<", "\[Mu]", "<", "1"}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "+", 
              RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
             SqrtBox["6"]}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "-", 
              RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}], "&&", 
            RowBox[{"\[Sigma]", ">", "0"}]}]},
          {
           FractionBox[
            RowBox[{
             SuperscriptBox["\[Mu]", "3"], "+", 
             RowBox[{"3", " ", 
              SqrtBox["6"], " ", 
              SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
             RowBox[{"18", " ", "\[Mu]", " ", 
              SuperscriptBox["\[Sigma]", "2"]}], "+", 
             RowBox[{"6", " ", 
              SqrtBox["6"], " ", 
              SuperscriptBox["\[Sigma]", "3"]}]}], 
            RowBox[{"36", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]], 
           RowBox[{
            RowBox[{"\[Mu]", "<", "0"}], "&&", 
            RowBox[{"0", "<", 
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "+", 
              RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", 
             SqrtBox["6"]}]}]},
          {"0", 
           TagBox["True",
            "PiecewiseDefault",
            AutoDelete->True]}
         },
         AllowedDimensions->{2, Automatic},
         Editable->True,
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{1.}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.84]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}},
         Selectable->True]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.35]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     "Piecewise",
     DeleteWithContents->True,
     Editable->False,
     SelectWithContents->True,
     Selectable->False], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.684533094744566*^9, 3.6845331402863283`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {"\[Mu]", 
        RowBox[{
         RowBox[{"\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], ">", "0"}]}]},
       {
        FractionBox[
         RowBox[{"2", "-", 
          RowBox[{"3", " ", "\[Mu]"}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]"}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Mu]", ">", "1"}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "-", 
             RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}]}], ")"}],
          "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
           RowBox[{"\[Sigma]", "\[GreaterEqual]", 
            FractionBox["1", 
             SqrtBox["6"]]}]}], ")"}]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"3", " ", "\[Mu]"}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Mu]", "3"]}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]"}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}]}]},
       {
        FractionBox[
         RowBox[{
          SqrtBox["6"], "-", 
          RowBox[{
           SqrtBox["6"], " ", "\[Mu]"}], "+", 
          RowBox[{"3", " ", "\[Mu]", " ", "\[Sigma]"}], "-", 
          RowBox[{
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Sigma]", "2"]}]}], 
         RowBox[{"6", " ", "\[Sigma]"}]], 
        RowBox[{
         RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
         RowBox[{"\[Sigma]", "<", 
          FractionBox["1", 
           SqrtBox["6"]]}]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"3", " ", "\[Mu]"}], "-", 
          SuperscriptBox["\[Mu]", "3"], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]"}], "-", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
          RowBox[{"18", " ", "\[Mu]", " ", 
           SuperscriptBox["\[Sigma]", "2"]}], "-", 
          RowBox[{"6", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Sigma]", "3"]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], ">", "0"}]}]},
       {
        FractionBox[
         RowBox[{"2", "-", 
          RowBox[{"3", " ", "\[Mu]"}], "+", 
          SuperscriptBox["\[Mu]", "3"], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]"}], "-", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
          RowBox[{"18", " ", "\[Mu]", " ", 
           SuperscriptBox["\[Sigma]", "2"]}], "-", 
          RowBox[{"6", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Sigma]", "3"]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", ">", "1"}], "&&", 
         RowBox[{"0", "<", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[Mu]", "3"]}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
          RowBox[{"18", " ", "\[Mu]", " ", 
           SuperscriptBox["\[Sigma]", "2"]}], "+", 
          RowBox[{"6", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Sigma]", "3"]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}]}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.68453314145338*^9, 3.6846344595182743`*^9, 
  3.684635677966384*^9, 3.6846680051858797`*^9, 3.684688635018153*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {"\[Mu]", 
          RowBox[{
           RowBox[{"\[Mu]", "<", "1"}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "+", 
             RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
            SqrtBox["6"]}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "-", 
             RowBox[{"6", " ", "\[Sigma]"}]}], ">", "0"}]}]},
         {
          FractionBox[
           RowBox[{"2", "-", 
            RowBox[{"3", " ", "\[Mu]"}], "+", 
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", "\[Sigma]"}]}], 
           RowBox[{"36", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Mu]", ">", "1"}], "&&", 
             RowBox[{
              RowBox[{
               RowBox[{
                SqrtBox["6"], " ", "\[Mu]"}], "-", 
               RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}]}], 
            ")"}], "||", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
             RowBox[{"\[Sigma]", "\[GreaterEqual]", 
              FractionBox["1", 
               SqrtBox["6"]]}]}], ")"}]}]},
         {
          FractionBox[
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            RowBox[{"3", " ", "\[Mu]"}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox["\[Mu]", "3"]}], "+", 
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", "\[Sigma]"}]}], 
           RowBox[{"36", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]], 
          RowBox[{
           RowBox[{"\[Mu]", "<", "1"}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "+", 
             RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
            SqrtBox["6"]}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "-", 
             RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}]}]},
         {
          FractionBox[
           RowBox[{
            SqrtBox["6"], "-", 
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "+", 
            RowBox[{"3", " ", "\[Mu]", " ", "\[Sigma]"}], "-", 
            RowBox[{
             SqrtBox["6"], " ", 
             SuperscriptBox["\[Sigma]", "2"]}]}], 
           RowBox[{"6", " ", "\[Sigma]"}]], 
          RowBox[{
           RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
           RowBox[{"\[Sigma]", "<", 
            FractionBox["1", 
             SqrtBox["6"]]}]}]},
         {
          FractionBox[
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            RowBox[{"3", " ", "\[Mu]"}], "-", 
            SuperscriptBox["\[Mu]", "3"], "+", 
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", "\[Sigma]"}], "-", 
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", 
             SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
            RowBox[{"18", " ", "\[Mu]", " ", 
             SuperscriptBox["\[Sigma]", "2"]}], "-", 
            RowBox[{"6", " ", 
             SqrtBox["6"], " ", 
             SuperscriptBox["\[Sigma]", "3"]}]}], 
           RowBox[{"36", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]], 
          RowBox[{
           RowBox[{"\[Mu]", "<", "1"}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "+", 
             RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
            SqrtBox["6"]}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "-", 
             RowBox[{"6", " ", "\[Sigma]"}]}], ">", "0"}]}]},
         {
          FractionBox[
           RowBox[{"2", "-", 
            RowBox[{"3", " ", "\[Mu]"}], "+", 
            SuperscriptBox["\[Mu]", "3"], "+", 
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", "\[Sigma]"}], "-", 
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", 
             SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
            RowBox[{"18", " ", "\[Mu]", " ", 
             SuperscriptBox["\[Sigma]", "2"]}], "-", 
            RowBox[{"6", " ", 
             SqrtBox["6"], " ", 
             SuperscriptBox["\[Sigma]", "3"]}]}], 
           RowBox[{"36", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]], 
          RowBox[{
           RowBox[{"\[Mu]", ">", "1"}], "&&", 
           RowBox[{"0", "<", 
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "-", 
             RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
            SqrtBox["6"]}]}]},
         {
          FractionBox[
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[Mu]", "3"]}], "+", 
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", 
             SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
            RowBox[{"18", " ", "\[Mu]", " ", 
             SuperscriptBox["\[Sigma]", "2"]}], "+", 
            RowBox[{"6", " ", 
             SqrtBox["6"], " ", 
             SuperscriptBox["\[Sigma]", "3"]}]}], 
           RowBox[{"36", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]], 
          RowBox[{
           RowBox[{"\[Mu]", "<", "1"}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "+", 
             RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
            SqrtBox["6"]}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "-", 
             RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}]}]},
         {"0", 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"x", " ", "is", " ", "the", " ", "moment", " ", "arm"}], ",", " ", 
    RowBox[{
    "we", " ", "integrate", " ", "over", " ", "the", " ", "length", " ", "of",
      " ", "the", " ", "object"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.676465933957417*^9, 3.676465936137473*^9}, {
   3.676466161477537*^9, 3.6764661745402927`*^9}, {3.678013519466964*^9, 
   3.6780135355704927`*^9}, 3.684533036755126*^9, 3.684533154817479*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {"\[Mu]", 
        RowBox[{
         RowBox[{"\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           SqrtBox["6"], " ", "\[Mu]"}], ">", 
          RowBox[{"6", " ", "\[Sigma]"}]}]}]},
       {
        FractionBox[
         RowBox[{"2", "-", 
          RowBox[{"3", " ", "\[Mu]"}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]"}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Mu]", ">", "1"}], "&&", 
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "\[LessEqual]", 
            RowBox[{"6", " ", "\[Sigma]"}]}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
           RowBox[{"\[Sigma]", "\[GreaterEqual]", 
            FractionBox["1", 
             SqrtBox["6"]]}]}], ")"}]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"3", " ", "\[Mu]"}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Mu]", "3"]}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]"}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           SqrtBox["6"], " ", "\[Mu]"}], "\[LessEqual]", 
          RowBox[{"6", " ", "\[Sigma]"}]}]}]},
       {
        RowBox[{
         FractionBox["1", "2"], "-", 
         FractionBox["\[Sigma]", 
          SqrtBox["6"]]}], 
        RowBox[{
         RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
         RowBox[{"\[Sigma]", "<", 
          FractionBox["1", 
           SqrtBox["6"]]}]}]},
       {
        RowBox[{"-", 
         FractionBox[
          RowBox[{"2", "+", 
           SuperscriptBox["\[Mu]", "3"], "+", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", 
            SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", "\[Sigma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "-", 
           RowBox[{"3", " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"6", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
          RowBox[{"36", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]]}], 
        RowBox[{
         RowBox[{"\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           SqrtBox["6"], " ", "\[Mu]"}], ">", 
          RowBox[{"6", " ", "\[Sigma]"}]}]}]},
       {
        FractionBox[
         RowBox[{"2", "+", 
          SuperscriptBox["\[Mu]", "3"], "-", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "+", 
          RowBox[{"3", " ", "\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"6", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", ">", "1"}], "&&", 
         RowBox[{"0", "<", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}]}]},
       {
        RowBox[{
         FractionBox["1", "36"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"18", " ", "\[Mu]"}], "-", 
           FractionBox[
            SuperscriptBox["\[Mu]", "3"], 
            SuperscriptBox["\[Sigma]", "2"]], "+", 
           FractionBox[
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", 
             SuperscriptBox["\[Mu]", "2"]}], "\[Sigma]"], "+", 
           RowBox[{"6", " ", 
            SqrtBox["6"], " ", "\[Sigma]"}]}], ")"}]}], 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           SqrtBox["6"], " ", "\[Mu]"}], "\[LessEqual]", 
          RowBox[{"6", " ", "\[Sigma]"}]}]}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.676465889260406*^9, 3.676465937337885*^9, 3.6764661289750233`*^9, {
   3.6764661652102547`*^9, 3.676466178267062*^9}, 3.684533053449914*^9, 
   3.684533158583465*^9, 3.684634461361347*^9, 3.684635679745891*^9, 
   3.684668007049415*^9, 3.684688636902072*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"TorquePivot", "[", 
   RowBox[{"\[Mu]_", ",", "\[Sigma]_"}], "]"}], ":=", 
  TagBox[GridBox[{
     {"\[Piecewise]", GridBox[{
        {"\[Mu]", 
         RowBox[{
          RowBox[{"\[Mu]", "<", "1"}], "&&", 
          RowBox[{
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "+", 
            RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
           SqrtBox["6"]}], "&&", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], ">", 
           RowBox[{"6", " ", "\[Sigma]"}]}]}]},
        {
         FractionBox[
          RowBox[{"2", "-", 
           RowBox[{"3", " ", "\[Mu]"}], "+", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", "\[Sigma]"}]}], 
          RowBox[{"36", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Mu]", ">", "1"}], "&&", 
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "\[LessEqual]", 
             RowBox[{"6", " ", "\[Sigma]"}]}]}], ")"}], "||", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
            RowBox[{"\[Sigma]", "\[GreaterEqual]", 
             FractionBox["1", 
              SqrtBox["6"]]}]}], ")"}]}]},
        {
         FractionBox[
          RowBox[{
           RowBox[{"-", "2"}], "+", 
           RowBox[{"3", " ", "\[Mu]"}], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Mu]", "3"]}], "+", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", "\[Sigma]"}]}], 
          RowBox[{"36", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]], 
         RowBox[{
          RowBox[{"\[Mu]", "<", "1"}], "&&", 
          RowBox[{
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "+", 
            RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
           SqrtBox["6"]}], "&&", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "\[LessEqual]", 
           RowBox[{"6", " ", "\[Sigma]"}]}]}]},
        {
         RowBox[{
          FractionBox["1", "2"], "-", 
          FractionBox["\[Sigma]", 
           SqrtBox["6"]]}], 
         RowBox[{
          RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
          RowBox[{"\[Sigma]", "<", 
           FractionBox["1", 
            SqrtBox["6"]]}]}]},
        {
         RowBox[{"-", 
          FractionBox[
           RowBox[{"2", "+", 
            SuperscriptBox["\[Mu]", "3"], "+", 
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", 
             SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", "\[Sigma]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "-", 
            RowBox[{"3", " ", "\[Mu]", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"6", " ", 
                SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
           RowBox[{"36", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]]}], 
         RowBox[{
          RowBox[{"\[Mu]", "<", "1"}], "&&", 
          RowBox[{
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "+", 
            RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
           SqrtBox["6"]}], "&&", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], ">", 
           RowBox[{"6", " ", "\[Sigma]"}]}]}]},
        {
         FractionBox[
          RowBox[{"2", "+", 
           SuperscriptBox["\[Mu]", "3"], "-", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", 
            SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", "\[Sigma]", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "+", 
           RowBox[{"3", " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
          RowBox[{"36", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]], 
         RowBox[{
          RowBox[{"\[Mu]", ">", "1"}], "&&", 
          RowBox[{"0", "<", 
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "-", 
            RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
           SqrtBox["6"]}]}]},
        {
         RowBox[{
          FractionBox["1", "36"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"18", " ", "\[Mu]"}], "-", 
            FractionBox[
             SuperscriptBox["\[Mu]", "3"], 
             SuperscriptBox["\[Sigma]", "2"]], "+", 
            FractionBox[
             RowBox[{"3", " ", 
              SqrtBox["6"], " ", 
              SuperscriptBox["\[Mu]", "2"]}], "\[Sigma]"], "+", 
            RowBox[{"6", " ", 
             SqrtBox["6"], " ", "\[Sigma]"}]}], ")"}]}], 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "+", 
            RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
           SqrtBox["6"]}], "&&", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "\[LessEqual]", 
           RowBox[{"6", " ", "\[Sigma]"}]}]}]},
        {"0", 
         TagBox["True",
          "PiecewiseDefault",
          AutoDelete->True]}
       },
       AllowedDimensions->{2, Automatic},
       Editable->True,
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.84]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}},
       Selectable->True]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxItemSize->{
     "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.35]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   "Piecewise",
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True,
   Selectable->False]}]], "Input",
 CellChangeTimes->{{3.676467577391876*^9, 3.676467583150907*^9}, {
   3.676467620923286*^9, 3.676467642689784*^9}, 3.684533184729178*^9, {
   3.684533596596053*^9, 3.684533598039216*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"TorquePivotTriATB", "[", 
   RowBox[{"\[Mu]_", ",", "\[Sigma]_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"lowlim1", " ", "=", 
       RowBox[{"Max", "[", 
        RowBox[{"0", ",", 
         RowBox[{"\[Mu]", "-", 
          RowBox[{
           SqrtBox["6"], " ", "\[Sigma]"}]}]}], "]"}]}], ",", 
      RowBox[{"uplim1", " ", "=", "  ", 
       RowBox[{"Min", "[", 
        RowBox[{"1", ",", "\[Mu]"}], "]"}]}], ",", 
      RowBox[{"lowlim2", " ", "=", 
       RowBox[{"Max", "[", 
        RowBox[{"0", ",", "\[Mu]"}], "]"}]}], ",", 
      RowBox[{"uplim2", " ", "=", "  ", 
       RowBox[{"Min", "[", 
        RowBox[{"1", ",", 
         RowBox[{"\[Mu]", "+", 
          RowBox[{
           SqrtBox["6"], " ", "\[Sigma]"}]}]}], "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"uplim1", ">", "lowlim1"}], ",", 
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          SuperscriptBox["lowlim1", "3"]}], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["lowlim1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Mu]", "-", 
            RowBox[{
             SqrtBox["6"], " ", "\[Sigma]"}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["uplim1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "uplim1"}], "-", 
            RowBox[{"3", " ", "\[Mu]"}], "+", 
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", "\[Sigma]"}]}], ")"}]}]}], 
        RowBox[{"36", " ", 
         SuperscriptBox["\[Sigma]", "2"]}]], ",", "0"}], "]"}], "+", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"uplim2", ">", "lowlim2"}], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox["lowlim2", "3"]}], "-", 
         RowBox[{"3", " ", 
          SuperscriptBox["lowlim2", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Mu]", "+", 
            RowBox[{
             SqrtBox["6"], " ", "\[Sigma]"}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["uplim2", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "uplim2"}], "+", 
            RowBox[{"3", " ", 
             RowBox[{"(", 
              RowBox[{"\[Mu]", "+", 
               RowBox[{
                SqrtBox["6"], " ", "\[Sigma]"}]}], ")"}]}]}], ")"}]}]}], 
        RowBox[{"36", " ", 
         SuperscriptBox["\[Sigma]", "2"]}]], ",", "0"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"lowlim1", " ", "=", 
        RowBox[{"Max", "[", 
         RowBox[{"0", ",", 
          RowBox[{"\[Mu]", "-", 
           RowBox[{
            SqrtBox["6"], " ", "\[Sigma]"}]}]}], "]"}]}], ";", 
       RowBox[{"uplim1", " ", "=", "  ", 
        RowBox[{"Min", "[", 
         RowBox[{"1", ",", "\[Mu]"}], "]"}]}], ";", 
       RowBox[{"lowlim2", " ", "=", 
        RowBox[{"Max", "[", 
         RowBox[{"0", ",", "\[Mu]"}], "]"}]}], ";", 
       RowBox[{"uplim2", " ", "=", "  ", 
        RowBox[{"Min", "[", 
         RowBox[{"1", ",", 
          RowBox[{"\[Mu]", "+", 
           RowBox[{
            SqrtBox["6"], " ", "\[Sigma]"}]}]}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"uplim1", ">", "lowlim1"}], ",", 
        RowBox[{
         SubsuperscriptBox["\[Integral]", "lowlim1", "uplim1"], 
         RowBox[{"x", " ", 
          FractionBox[
           RowBox[{"x", "-", "\[Mu]", "+", 
            RowBox[{
             SqrtBox["6"], " ", "\[Sigma]"}]}], 
           RowBox[{"6", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]], 
          RowBox[{"\[DifferentialD]", "x"}]}]}], ",", "0"}], "]"}], "+", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"uplim2", ">", "lowlim2"}], ",", 
        RowBox[{
         SubsuperscriptBox["\[Integral]", "lowlim2", "uplim2"], 
         RowBox[{"x", " ", 
          FractionBox[
           RowBox[{
            RowBox[{"-", "x"}], "+", "\[Mu]", "+", 
            RowBox[{
             SqrtBox["6"], " ", "\[Sigma]"}]}], 
           RowBox[{"6", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]], 
          RowBox[{"\[DifferentialD]", "x"}]}]}], ",", "0"}], "]"}]}]}], "]"}],
    "*)"}]}]}], "Input",
 CellChangeTimes->{{3.676467577391876*^9, 3.676467583150907*^9}, {
   3.676467620923286*^9, 3.676467642689784*^9}, 3.684533184729178*^9, {
   3.684533596596053*^9, 3.684533598039216*^9}, {3.6845379966929417`*^9, 
   3.684538068930195*^9}, {3.684538106530834*^9, 3.6845382708752737`*^9}, {
   3.6845383147084846`*^9, 3.684538356260854*^9}, 3.684538387403821*^9, {
   3.684538484572762*^9, 3.684538521073769*^9}, {3.6845388666282597`*^9, 
   3.6845388668906527`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "lowlim", "uplim"], 
  RowBox[{"x", " ", 
   FractionBox["1", 
    RowBox[{"2", 
     SqrtBox["3"], " ", "\[Sigma]"}]], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.684539156942346*^9, 3.684539164426305*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    SuperscriptBox["lowlim", "2"], 
    RowBox[{"4", " ", 
     SqrtBox["3"], " ", "\[Sigma]"}]]}], "+", 
  FractionBox[
   SuperscriptBox["uplim", "2"], 
   RowBox[{"4", " ", 
    SqrtBox["3"], " ", "\[Sigma]"}]]}]], "Output",
 CellChangeTimes->{3.6845391647952223`*^9, 3.6845408854065228`*^9, 
  3.6846344615903387`*^9, 3.684635325917111*^9, 3.6846356799605722`*^9, 
  3.684668007241962*^9, 3.684688637136483*^9}]
}, Open  ]],

Cell[BoxData[" "], "Input",
 CellChangeTimes->{{3.684538961696658*^9, 3.684539033841741*^9}, {
   3.68453908776854*^9, 3.6845390935628242`*^9}, 3.684539169612364*^9, 
   3.684840739151273*^9}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{{3.684840418823969*^9, 3.684840426747099*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"TorquePivotNorm", "[", 
   RowBox[{"\[Mu]_", ",", "\[Sigma]_"}], "]"}], ":=", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]]}]]}], "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox[
          SuperscriptBox["\[Mu]", "2"], 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]]}]]}], ")"}], " ", "\[Sigma]"}], 
    
    SqrtBox[
     RowBox[{"2", " ", "\[Pi]"}]]], "+", 
   RowBox[{
    FractionBox["1", "2"], " ", "\[Mu]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Erf", "[", 
       FractionBox[
        RowBox[{"1", "-", "\[Mu]"}], 
        RowBox[{
         SqrtBox["2"], " ", "\[Sigma]"}]], "]"}], "+", 
      RowBox[{"Erf", "[", 
       FractionBox["\[Mu]", 
        RowBox[{
         SqrtBox["2"], " ", "\[Sigma]"}]], "]"}]}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.676467577391876*^9, 3.676467583150907*^9}, {
  3.676467620923286*^9, 3.676467642689784*^9}, {3.684540628942993*^9, 
  3.684540631070787*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sigs", " ", "=", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.1", ",", "0.5", ",", "1", ",", "2", ",", 
       RowBox[{"5", "/", 
        RowBox[{"\[Sqrt]", "3"}]}], ",", "5"}], "}"}], "/", "10"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"TODO", ":", " ", 
    RowBox[{
    "place", " ", "legend", " ", "inside", " ", "the", " ", "plot"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"TorquePivotNorm", "[", 
      RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{"\[Sigma]", "\[Rule]", "sigs"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", 
     RowBox[{"-", "2"}], ",", "4"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{"sigs", ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", "Bold", ",", "8"}], "}"}]}], ",", 
        RowBox[{"LegendLabel", "\[Rule]", "\"\<\[Sigma]=\>\""}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.75", ",", "0.55"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Mu]\>\"", ",", "\"\<Torque\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Normal distribution\>\""}], ",", " ", 
   
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"2", "/", "3"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"2", "/", "3"}], ",", "1"}], "}"}]}], "}"}], "]"}], 
     "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<../abecker/SwarmPublications/JournalTorqueControl/pictures/pdf/\
TorqueNormal.pdf\>\"", ",", "%"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.683656192718853*^9, 3.68365650959415*^9}, {
   3.684540635146593*^9, 3.684540677064104*^9}, 3.68463443016495*^9, {
   3.684634642808958*^9, 3.684634652898061*^9}, {3.684634891389399*^9, 
   3.684635015089489*^9}, {3.68463505265368*^9, 3.6846350533908997`*^9}, {
   3.684635268251931*^9, 3.684635287362721*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxN1nk0lG8bwPERSUhlF4UkIX6yJWbmQiFCZUu0yVYq2ROpIUTZl7JGEqUy
CpHBQ1GUrQjZSWSbeUb2yFvv+b3P897nXOd7Pufc57r/vSXPXjZzXEMgEH79
mb+tPSXZv7q6ihD+PdfFtYx9FnBrDFi8nkRx59mFxX8dxB3jwDAofIvbxqWi
wOkWbrr38aBGHtyCkbHSqVt/YyarvhnM4l3G3Oubk2Umt4S50nQq8u6hBcze
6TN0/QNzmLPDqRYZp2cwP6HLKTmYTWNGhznUK0xRzCeYqoHXuicxh3B+DTxW
9wNz2qnhO0FLw5j3fika/wKDmFf8uF3YznVhvlAdsHml6zMi9PzbtlgBU2H7
9kHxw8dqEa3q1pv6jSPKXdWSi+xCtcinYW7klrOyypHndp8r22sQrQlb1+y7
11SIwYPBilY1SHeYYOjHMh5VQeXBsQ2Wb5Fj3fq/U0/vVPsQOVDYYFaNyAyr
yj2cUNh75nZldEJaGUJgReq2M2I0TezIumxiZYjTbZ7782OIpqZG5Yxn6mvk
4qED3sOMSU3+kYrj5imlCH2iapexsp7We50KKd6kV0iGvZ9hdd6kVpEwqT1Q
6BVS+sXgbnMXHzGTUR7GvFuMhBJHur75aBL90sunWhKLEMLrEyOxG2SIzl7E
TG2BIkSbrWNH2xVDosWhcrOChEKEwipMEQ69QNTZTlwrwV+IZPIXr9AyYomK
i7SS6PiXCEGHZa+8dCFRtEXLZZX3j5O293s5thE5cmlil+NeIAQu0lmrrbPE
mQCt5r7NLxCKR8E6SzYB0qAFLdA0tgDJdLMMmJVTJTXJa6lWbipABj7LCi88
MiP5rPVptJWgIpTDyeFx991IRwq9lbXE8xGKV9HGC5ERJFk773tbtj1Hql7c
TUrNziWt2ei9vCj2DKEMb0xt6H9D6in3svsq+hSR0Gw6zM3TS3rl4vWudEse
or1u1T8uZpYUI+wlnyTyBBkQNKqR6uchu7zzjLki/BhpyVULcTwiTd7v5Tlr
JZSLEErjc/Y5EMli2z1t1AVzEKUq7z1PyGbkuWYPREDgESLxXm1rX6YTOcK4
YaehdDaSWVYhQYu9Spasl466pvYQcRP3/2m5NoL8Su/GLFUvCzniO/DCtT6d
bPym88Q3yweIhH9sS1ppPnmQrFwj6JSJVG1K2ncdqSRP+QgdS5i8jxxRumdm
1d9IFnb7IP2LOx05EtS6lK7QQ9Y9HzBjp5CK7LotlJnbMka+dFbpbZ1JMuK7
/77bpqU5cpLtt9h/XO8hEsCpITrACm8s7p65G5WIsPF5TOwu2QRTJob/rOTH
I24M+o4pa1EQNlhesW+ORTqnfNegNdIQQjmVnNgfjSQ5foyX6leCLo8adXuJ
CORgxfkD9Vf3gZKjXJuSXRhSILeUFYToQuixGPffD4KRd0PtwgfHjaDbcI6n
YYiCaPfMfi7qNgM731JrFQM/xNJwKzWp5ThwnwyOb6rzQHbLPnxzVN8OXG9m
prUmOCH6qccW+jKcYJPK4MFdZ0yRgpRtn83ZL0FSLjKwEmcC6d231l/S8YAY
iaQ14XZO8DSZs77qtg+ky1P0ZakekDPZbplh4w/T+kVcUQp+YLaL0aRsQYEm
Ms9H+cRgoIpHy7fphYKv8WOFUxZhMBKvwtoRGA5SNroxMXwRkP5i5Yf3QASU
a9LylupiQfdwPqFuJhZidTh64h/HQ5BXXaFITTw4HbTcoBCWCObujftZkhNh
sxXj8mmDZEgtfs8la5IMhaWxW4bOZoLXcwFZCftM4Gir7dcfzIW1rTJLf3t8
rZAax+VCsP23nbuW7PmYeK2Ne+O2eRbhjX+Iql4pxiup9MzuRglWK5KhFC2a
hvVJWQXH3s5qrI+mGXNjC/VY3Wnd7bfi2rCqpZC6f3zowbqYzJl6zXUI65j8
RkRVeQSrQkPcPJ/BONY3pMOqZlZ4ralc7jGOeIPigse5g/F2Wvv0rq3GG/T9
+Nt5zQmsnb8lorsVJ7Fecuv9KELGu2YomcPaBK9CLW9Q2wW8QXfYvBsf41UQ
/mGDbJ/CGrSHuvOhIB24Qjf+t5FRwm8SpOmA5u6t+tukicCToap0uEJbZ/23
1EcWCefN6HA4h9flb3tElliUouhQJ2ZpKfunoz726ZLpdAg4+ISf90+nWxs0
+J7R4eWNQRX0KR3WR2Vcnqung8hUdbbFn/JPcHD96KTDVK67fVoHHSQOeuR8
HaWDzITCV/3vdJB/1K3zcY4OztsamO1MOqiv0estX8sAvwr1tdeX6aBzOt83
n58BzC/D5jOsDDAuF+LPlGJAP2f4bQN2BliLBFJjlRmgkpDvmkVggL3PuNFN
HQYYdNK7+Rl0cG01H/E6woCFwfZp5wY6+ClVBDqdZsC15n1Unjg6hETu3Grt
yoDkkEBHPQ06xIxHlxoG/NnX85LN/dUUpBksmmtFMMC56xL9PesU5GafZexO
ZYBlYMo5HeFJeMnScHtbHgNWPg8klUyNQ+UptZ2bXjPA8EGAhGDgGNTT7lez
1P25b2RYb9c6Cm3CHCd/tjNAfP8FB7vx7zDg7b4w/J0BPOGagaUt32Dic1d8
+wwD7EKOaNskDsIvoSyhYRYU+pqfL71M6IPAd1bfT6xH4XtoxKWr7F3A7s1V
+GUTCtvOSjYr5HyBCKkqiqkwCnv6zJWcEz8B72cv0/fiKHQ4+BtTej5CEkVW
TFsGhStJijFiN2th2z99Y6WKKOiqmZt37K6Ch71xJXvUUXifwW8y87QEdkUY
hOSRUPBWckzN6SyAfM1lMyk9FHwstQWbTXNBdaxAIs0YBZqHjzfBMgPK7jnS
+S1QuH21TGbSMwG09beUR9qi4BB70c5rMhxqZ5rC2e1R0M4ksD7/dgOMHt48
dsMFhS1HuevfrvOElqMa0gvuKPzml0sQ5HACK8LUtNtVFIRCpSNVyq2hO/9B
1RgFBWG3HcuTk0Zw5qRV1NkwFIYfPaHknifCCBfXie5oFHinVn0ObFSAi2WI
rMU9FJgvlX/6NIrB9Dmv+Yb7KGQrpSAOT7jAV0i2Vi8HhRedfbSV8kXySm1v
XOVzFKJXsvllVEbJQV5xZ/YWo9BwVZwSrNNG5pAyUCwoR+GSJxebpGQ1OerT
r1+7alCIPao0/JrnGZmfUlD/4CMKy5vElR5r3yWnKDre29KKQsCq18KcYCBZ
vFfEMb4LhXhEKSHd5Tw5+06TMvcQCtvNf1zPNjYjy2neJISMofDjWoItPWgf
uWHkjFgmE4V3ASeMjGzEya7xZA3aIgqXy46/331nDXmTtphFOwsT1kfscCgR
+04qnFy8zFzPBMXuYi3R7e9JVskdd7h5meCsLds+6vCYtKBXnCuzhQkGQ8Gf
9leHkVKm497qbmeCQO85zvjd50jEDLf+k3JMSMw5MGJTqk/qO2T6y1eZCbUm
Krni4TtIlAV5oQRNJqB3LroPfmUhbX+0XoWqywTbIfenV+Z7ibVHR00/GDGh
mFfVeXG2hHjud43LdzMmnBe1i7sXFE3kfJoVSrBlQunA+G+6tEr5s2OULFF7
JnjYH70/KMRdbsp2qlL9AhOmDa/Hyn36RkMLtLqOejLhlWiVge1QGS3upMjc
RX8mXD2woY83PJbW8apN4eEdJhT0plQGhWnSzpw/lL7xGRPylBjqW5aDyjyb
NK79mGRCXdCyURxttFTQXzCJdZYJcydnTTJVX5SWyswUblthwndHiqPSypXS
ZQp1wmLDNEQ/7/O7SGMrDVXZaVutMA1fb+2xOG7LV5KUxKeZ4joN5v5+frPJ
bMXlZ+nzh9BpCP61lF4/ua/gh/Zrz575abh2okjjjtsEVUA8mHFxdRpk3Dsa
czenUV27RUYjeX6C0z8sSzU3l/IlLPTam3f/BI6QDwtyl6jPb+qlFZmf/wmj
xhKzwQrMPKNdRu62Qz/hjlUZv93WvuyOqUfjLm0z0MLqE6dRb3NXjJDuvHVw
Dv73nxcP3FOmNbyA+akDL8fLmiXMZ5qVB2iNy5jvp2UUbi36jdlk0iLf+yBB
+38eaFw02HmIBXPJwIH+IOIazFIlVC1ZXVbMrZVVif7qbJi/BWR2se5ci/kW
IXP4iyw7ZrcivUlzsXWY6fJcr0WlODB/tMlwE5Fej3my7Kv0WwFOzFl9Kpmv
tnBhTlNRFbbi4cY8C6z+8iu4v22czjIi8GAW2HyrTmAad9ReKXeTOdwcpxCR
kCXcS3nzLjNrNmLuO3BuQysf7se+hmYxariJA1w9nFdxF7M/DtYNwK2ocEDB
LxC3pN+162PhuNn5pyTqUnC3GDQ5hpTjNnR14amowv0mgb1kpub/3hskczg0
4k7xp+bp9uHmyzpk7jeEO6Ju9NeLEdzXBSRMJBm457XKZ61/4nY7a30/Zh73
eNiMft0v3PbUGMbqKu7/AKms3JU=
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxN2nk8VO8bP35bZcu+Z60USRRJzDmXlFCSkLTYlyKJsiUJSVSWkKUQoqSE
IllvIcm+b1FkzT6rbPnN5/v7Pt6+88e8Hs+57nPPNdecmTN/jIztdWMHJgYG
BhX63f/yq6XMr/X1dcTwf2/+UpoGXn83rD5kWjyzsOFsm9CYvuENR9nP636s
3vAF5/I8xwcbnvM8H9TEtWGh8CeyzyX+/WdctWo4nW8VtT2O3mkrx8s66PMq
3XjPMrLFLqpK7brAXWE4Gx538i/KuLr9Ka2KQcgzmTJ3/BgN/XEaJtzkeC2e
EZZr+sKKghpdL5/Y32m2/c3cHmV7YxJaGh5NdRma370wyqpWbriAyhklgutu
9e69RFQN9Psxg56x2hswc08p32fvCzxXN4nC0Ljinbhq1STL0UdBy6Oojs1U
c16/89ChroKpLhhGMWoK4dR2M401X05nliv9KOiV8+uGi44EIa1sg1b9fhSg
9HK8OlKjTHmTnlKSQj9ikAws2KxtV2YfeY+iMt+HeMxU5ZhuGZXVv1z2t/Pq
Qwx/JQ93jegSEhonY6qCexHDy4aV/UsRhA9PQrwiHHuRlkEUp6VmIqHRbOf5
C3q9KECC05h/fzJhfchKksTRiyrjtxdaHn5LEHm1xlAx24NSGbmo1yfyCQeu
Ph8Ja+lBWqevGFgkFhEMlA/Xns2nW7hg9UctIjhSu7NkYnpQQFkS+mhcQwgo
8Xg069GDGDRullg9aSA8u8vnWmzWg4bSQifDGNsJBcfyjO6r09crvle+3NVD
aGIzVDkjRt8vzJzt+8FfhPHmaUGJ1W4UMG55rvP5KIEhNuzv5GA3qowte9Aq
P00QO7/7RwGi10mH9cS7iQRVya/lAWndiKFr7jDBfpFgOGKbanCvG2l9azFP
yv5HuJLFcE/EgX68U5mrxRYWLOhaisPocXpdykm9Q4Ude36AoJcn142so0J4
qMK8WMFi3x4/dvr6Z9f26x4VwprLvLfqzXQhrWcivUGr4thkoOACf3MXkrbl
t4zt2o4x6X5s/5VLr2/S43niLoeJc54pfPuE7l3j6fvylDC1trl475tdKOCW
rjx7kCpmFPfY9+hZej0gz/nUPQ3M6eIeC+5DXahyuffoOckjWJB0HfwQ6UJD
1qwefnzHsaQxh+2vlztRZV+/9RcXA+xTNvOmmwOdSHqg0z1A1xhrvZ42gVd0
Igb/cQF333PYlCrUs6d2Ii1tVS9eSUuMZXngXXcg/fjmPZtCTthhksg3Mt2O
vn6gQzry/RXsULDIDVcden09eNg/7DpmpP/JVGN3JwrYUjhxVsoDc+YyPbSZ
je7nB96QM25hwR1E0fapDpQ6SrrceyYAS0mIXE1u7EDW56RiQyuCsc8Wir+c
3ncgLdNDzEFnH2Jt2xu+HIyiW1PVyy8/CpuauJLBeKMDVVaEeMxsf4qx5Gx+
0GRCr3fv+X645BkmeSPDKfEg3S67Rj2GUjH1Q9oGDsL0/S+HXJbRz8SMV3/t
27/UjrQibJUqW7Kxq1/u8K71tyPpvKGpA4N5GF+EdymUtCOG7f45txMKsZIL
7g5Bie1oSC+c2pNUitnsvsr91Ydef99+3Dj1C8ZKsS/eYt6OAhzt/Vh9arHc
Sku7E4fo9dPdtqqJjZhZuPnWcKF2VDl+V2f33nZs7bxxUQu1DTGw3lI6w92D
ZewysOHronskri350CB2kqzDcbagDWnV2CGN278xEoLC+Jg2lKro6edkPoEl
Pj5s1X+jDQ2VfycNu89iWudV2CSM6eunOjt8HpKwCVnFj1b76ft9t7weaLSI
RZB2WaTz0OvWryI7ddawg0h6y9h8K2IID3O1Pc+EDzwSy9/d0oqkj+kx8//d
jN8zF7jo/L4VpXpvPeteyInvkeXalBPeirSiSB38U7x4G3FL7rwLfb3nBdce
YyHcp4Lx/AGDVmR9yF+pqHYbLvVohclToRXxhHI3SR6RwWvPUd8VsbeiADuZ
H8GXZfEfej9zKB0tiOFN7UX83h58z+82Rt/oFqQ1wN2m4aCM+9z+enbdqAUN
FbWlXABVvFag+E0wN91Py6ZjF9Vxgffv1tiam1HqSmrl63Ict9NNPRP5uBnl
WRoefjCmjX8YiskUONmMtO5U2rgd0MUZfB8sJbI1I+mbhRTm6wa4If/tU1J1
Tci65uGEp+MZPOmda1pGSBNK5e3qqz16Fp/SsaXK6zQhBm9azhTpPK7+66x+
LnMTkv5y6uSuFCs8xEc/WbWqEQVYPLcZ0bTDu3gxYnFAI+K5+U3lm8VlfOdb
ZR2ARmR9y6ptn7kLfuPYzsSatQaUV3dcLHSPO145KDyrX9aAKrWvRTBVe+Bc
3hxHWnzpLhtZrue7hV/iWY81PdyAGOrrFy8S/PHsN6TJvsV6xLDmYCajGoT/
1R4nWH2qR0aaL1m5Ru7jugN9UaMe9Shvwrztx/GHeJxn06iTSj0KqB45fCAg
Eh/l+qI+T/yOKnv/+j/vj8YPZBU89sj7jqwztmaphMXhAUeyhpZc6XW5wvRv
Y8/w5v7nqncVv6Oh24pf1Lek4uIekaEsM3XImpR1lZv/Je689d5AWHYdGvpY
GJOe/QovfuWlzO1EN5Phb7OxbJxVyzk4dncdkhbzrFX8mYub9Vn0io5/Q24n
WM/u6P+AZ9w4s/dFxjcU8FtzpUjnE07i0AnYafcNLcymIfvjJbhWpnrnG5lv
qFWnmamcXIFH4HvllIZq0VBq8BVL1Sp8oEfKryCF7v0pSNz2K77Hnb/1sEUt
YlDZcj5X4Dvuw75lJ9pWi7SGea6LWzfhtS+XvY/1f0Wse0XjYxTbcAFsruF7
wlc0dGgbVzt3J27XPSx1+txXZFTEu+zs0IP3f5FZ2iz8FUXxKJESFX7gRjk2
7RXdNSjAUmfP46BfeG1C2luvuBqkbu5yYSv8xgnBw8H7zGpQXa9N03GxMfzD
dRnLccEapOXlW+xqNYnLX7Q5lNJVjVKP3FC9Iz6Dpx5P4zF7Wo3MnwpjIcoL
uNCB4T9bz1ajv9Zh0kdekPDHEjLVXwWqkY+sGp+kPRVnZrNJutNZhfTWuVJ/
hf3FfSmpngdjq1AAX/ZDT/FVfOHXkOGsSRWKSuAjPxJgAMcGablM/ipUR878
u9+KCQY/WTNadHxBekZbTTEaC5imp/YLxHxBlfw/w6J+b4H68KGPjcZfUKqh
lQJRkQO0bkmHB/PRLY1/Fh3hgiJ7a0dCeyVyu/tSYTyEF/YZpQLlSSVS7spU
ujnIDxmaQyLvzlSivAAPEw0/IRDbLU2y461ErEUpuqPOoiAjWxl3KB0hhqdX
BmvzxYFrFfRfyyAUmlsh/HevNCy3oxWhtAqkdax0c6Ladph4A+9DpCvo1wOR
FqHbO6EzAFnTXpSjhdSUp0oMu6HyHPA7SpUj1sVNzIKN8pCzD33tSimjv589
GjfG9sKzTeCjI1mG3gkkjH+WV4aQgYo9hcmlKKrkSeMw1wG4+REf3ClRigRK
DE6c2aUK1g8rImOTStCV3aNq1zzU4JQNrs0iXoL0bBv8xtfUQUO9gnLzeTFi
LazOK/2mCbu58dcjYsVosiM6ULMHB4Hx8vMmzz4jLb94P2bRI8BYjnFWi35G
lY9nqtnmtWEuprziQGIR6k0putK9cAz6nTH3dJEiJPchSqxURhe+HSnfwZfw
CXm4tjOr3deHAhGsO1D4E2LNYiKQJA0gdb4slBhXiC5NZnDUkQwhvJagaSNU
iFpZOv0tmc6Ab3LZbOvTAlRnZT0Y+M4YLnsQUrUEC5BIYHzX2i1TMD1ZZpwX
+xFlMbYrilwzg31LpUWRMR/Q3gr/yuymC7CtVdN5ne8Dkpa8ZyOiZQGsr0vF
r0fnI+s3KW+2/rYCyh3Nlp+8+WhAPKJd7KINDJuWBho+yUNJdfkur37ZQrOC
pmoFTx56PCvByBNgD16bvJouSueixk62s18xR5C38YwXk8xBow6FyVNCzsDE
7bm6JP4OmX6TbzU56AIDZR42fdveojoWvvNLXq7wydmj9rNYNjJ4cjsoz9UN
okQ8FBJE3yBfMyZltkJ3cK69GeUtkoXep6/UnuC+CUc9blLNhF+jGqdU9sP+
HkBruYEEBTNRdCOzmWyyNzw2aNylL5uBhO48i81TvgUy32Uj/A6+RGVqNyK+
9fqCQVXvpZGzaShhT8r92Sv+MIwfqBFyTEUzHPxHueUDYNZL+FzsTAraZhIk
xy0fCNpOdyg2is9RtCPV97TBPbhmq1xddyoRVXAwBXC5BUPCxZEnSq7x6PxD
9Vf7U+/D7Cl9pbX3MUiDLFxzd1coKDvs6VS2CUWNhTcs3FvDIeRclPu/tGDU
8dufJflSJPzQp3E1/g5ALcw5llq3o4DTIjimue4G0rGMkB6Tj4Yo6QSmMBtH
2Ko6FDXV/xSSFQKOy+feAO5UnZNZvXFAOl7AEaHoC+uBgSmWg/HQjHM1KDwN
hlh5BcW4lUQo0yjNXq57Au1DLvy9YSnw5AjrQExWDExsOz7CV/ECHPXOblUM
fQrasEvtsl8q8JrNX7fSTYR6PbGTHyrT4OPnJ2K/bVNhi6y0yOq1DGDt/Prr
+PBr4KOeHm8xyIYb51x8+Nuy4O6pDNYs/rcw2M/HO1T5BpyuCRnlDbyFD8NW
2rdS34LKmk0To2cOWMwvZby1yoVPK/qZYJkH5zcJH2S9/hGSiQeVdzR8hF65
ZTt+4kfgOdl4T0KnAMwNBqMlbxZAzTvx2wWI7piXC6rehcC8reZt9KdCMJdR
fmdztwjWNUu7xLOLwAzT31EaWQrqUglFjOml8KaknPVQ7xd4Ub9d8l7fF8gk
zdP+/P0OtYp9x2fo6V76o/tBdCeIDP7/efAZ9mOyfuC/XEpkf+7n+vu//KPA
jVQPjMPQmbaK/6WzBlEzVHscsK60/5Mzeh2ffxiPw74H1/5PzjnEfwi6OQ4R
m4n5/0vSC6lXrQXj8Innasb/cplfOdzl0ASoWegH/S85Vo0uZhAmYYKJgecl
PR+zq/QuGkzCltcOR2n05BIVPHvSYhJexWpd1qcnj1qfIenOJAzJ6t+cp6eA
m422FpoEfndJMQ16io+6yw8c+QOD+acSvtBTsTF6kV93Cnx/5+ik60xBFXZa
1dhsCkwC76llmU6BeS6He5TDFDAvFKi/spuCoOjgKc7gKbAxHdUOCZyCXnOv
wU1fpkDacrfgh7IpuFZ/QOxY6xS88JftM22YAibCvFnQrylIvJyaNdI3BYpS
V1r/rU2BQmYhWxmNvt/Y+epFjWnwtJ5OYVWaBpFzQgxqJ6bBSUC2r5wwDTl1
7QSP89PQ6TUUqEN/vPftyU8L3tNwd5BiWGw/DdckWMn7HkwDz+Revufu08AU
WaN0LW4aiq3TvTT8p0HxBvbmT8E0LNGa0xLoj1eNLI3trpmG76cnvPXTp8H8
7Kftjh3ToPHMlzkpZxqC1JWSfhOn4X7g0XyWano/2dO90owz8CdRIoe1id7P
tixBK54Z0B84z/awm97PP+nIH/tmQDPXXbF/gt6P22CDKD4Dpx+VCEbP0/v5
nchqfmoGHFZFnyfSpiHBxEwn7tIM9NX+rhxZpff3lS+o8+oMzJk8mrJlmoEq
tZYKvtszcEbGeYB1ywyYZz1aMXo4A8mZV8tr2WdgVlRPPTJxBmYOd4qGb52B
oEcsnk1ZM+A3IjVxknsGRNYq8zk+zwB5jCeMRHeO6505/W8z4Nq52nOdbu2h
wwqh3TPgb+co94F+fO8Z2uXasRmQe7Bg8pq+/7XqDxksVPrx1wqrCZtngOng
9WFtllm4kMPmZ8UwAwmvFCQD+WehzjNffvUvvX+RyQto+yxYTzxUXqe/3qqw
jPi1/bOAZ+WUmo7R57ti3al5ZBb4clabJ3unYdZFgtfXaBYMqndceF1Pn/fP
vlOfrWZh+CfNwK+EPm+juIc011mI9pPNMcmiz/uL8TdV/1mISlLOEY2dBm0V
bpab4bMguhxeU3KHPv+MBq38pFnoJfyq2+FAn79Q6J35t7PQuCLFqk0/X5hC
j5Uols4CT/QbO2ZF+vyXGBav1s8CG9vkVbOt9P6vlqtk983C25p4vz3T9PN/
4Jbb5OQsRGhY912vpZ//hmo5u/7OwtG+pHrhF/TzdX/urpdCc7C7pfH0Bb0p
CI8QqYqVnYOP3U07O0SnIGE60CJEdQ7qSW2iSZN/IDfTNNbJeA4SOVsKGP3/
QAlThdJFmznIvLx9LubYH6i12t1g4DYHFPmKBBvWPzAgusyoHDEHh9m2W+c8
oH/uveySZZLngO/764NKRyeB1NGozv9uDkw9EtkpKxPAFvHiOu37HHA+L6+x
c6B/bzDpDJZtmofb9sXZoqLjcMTqvc97gXk4/cs2YASNgUGZsEDqjnkokpDq
srIfAzuvqRP3jsyD/rL4zuZXoxA1FflZ/848yEdE59wWGIHp9v6Ybso8EB00
fNetfsGKcLrwKOMC1EsLxj0L+AmBtWZjl9gWQOYP12R/6iA83lEZYCiyAE+9
ZYcih3/Ay8Hoov1qC8CemPj2kUsvyD3WvZ+NLcC/L10+XDE98F5j1XiHzgKc
uvIo6nVpN5TEO8wJmC6A17HbqqoCXdB6Rl32r/sCrP6IkKj40wZmDLMkt1sL
kCnYf59Nrg1+vE+r/BOwAB7Z/SsnnFthnIPj0o/IBdBzuPWwhNYELiVI3jR+
AS5nE4qpsY1AuuKx2JiyAM2fjwycJjTA2tfB6IqcBWgvKHur+boOgjyirQ8V
LoD9Ke7wXVe/AesO3X15ZQtwrYE2+1u9FgQC8r6nNdCf/6HCsAKpGvZo3GO4
/2cBBmjTmagYQeO4tXgqcQEWVj0fZBeXg2sMrl66tACE2z/cX7WWwseZpetE
NiIY8VInorQ/g1lizyNOPiIc94gfLE36BH91Cl/vFiOCxyaFlRuchUB44fbL
Yg8Rvly/Qbu95wP8PGm44nOA7hvoVH5PHgT8VRCO1SACF2uJio9yLmzPZFPJ
1SaCfyaH1WL3O/h6ZsKw/gQRfB9m74xNy4Yr/2qcx4yJkM/jK7QckQXsb9ND
GC4SQchjr1Nz8iswZLGsULtKhCmy1bajYi9hIU+z/8xNIgyyGcVI3U+DaAtR
msttIrAJ+QiMc6SCKvsib+g9IjhuVmq8fiEZej51Kr58RIS/j3c882h5Br52
H/QrYojQFpL/UckjAcR5ohz6nhPhyZ40BebjcWDtdDKZ+x0RWLZ9j6tzjAYm
IfniPQVEIDq68rflRUFm1eYunTJ6f1t5qEcJEaB3fXTBuoYIN3Tz7Inmj2Bq
WxWnXyMRMKEv4mc+hsLjuhdy8Z30flhobId0Q2Cf551jHwaIsPOSikMmTzC0
yly0bholghnjwsUmjiC42azuNzlDhOUiYxvugwEgdFsogZlKhLEBBUsa7x34
vJvyUXKNCD5GOcsprL5wobOt5fAmEsTGzi2QdL1hNSB32nQrCZa2W/3dXe8B
KYrhW9wESUAbu3ewKewGHOl33vFIggRyWwlzdYFuMBqiB69kSZDUNTb89sI1
CFHZdfGLIgkqaH5ejDzOIDfE7D1wkAS3Oh706G27DPWPh6MXMRJ8K+YQbPGw
B5fD6D3fcRKsvvln5y5oC9zjSfWKhiQ4phfzcO+sFXyI9h3XMyMBp7blrlM7
L4EpmDPZW5Igxmcb+9av5kCbPih515EE4mwfrkt8PQsJCfwaz1zp/egLRrFv
MwENHeLZQi8SsNwJ5NlXYQQDxGb3Vn8SpImv+hw9dQr8U96FT4eQIOLQZQ2H
Z/ogc/Lhm82RJAj4ObCYZXYcahYvf5WJJ9F/Rx78pOB1FBwzdIYJL0hgVWY8
KDenBaxndqyde02CbTN3neucMMheYxC9mUuC+p2nSfL3DoNB9k/ViCISUCzF
OTNE1GDOrMzoDSLBtN3K6X/bVCCK+ZlLzTcSzFaOs3sHKINKnnforxYSoMSg
xGOee6H70tmM5R4SdJ54ohsXIAc+bCqVgkMkGOTdu5DDIwtin3gGlCdJkPfX
dfas4HYos51bPLlAgmd92WOnGKRgUqv45sAiCUZktF0YWsVAUCp43mWdBDIM
nJwTcsKgvWZ4dW0zGXbahYZELfOD6w/RiXAuMqw+tYNLarzwrHjUVlKIDLdm
38clpGyFb/G5P99LkMHFfCL/0002oHj6XgBZMixMtl1717MJpE11ulv2kkF8
/Y2P+2cmMDjAY2ytSoaTK6n52zYzwC2eH00LmmQ4rhVjeMJhBX81l6kfeJQM
CeXdW6/bLeLtjW5feU+SIW1Jb/fSAhn/l615JN2YDJ7r5YHjywv4nrDN5Qcu
kCFGepP2zuEZ3Oxym3q1DRlSynCnwZBJ/J5OUoGJExnc3rklRTWN4nk7LiuP
upFhfXofLvpiGB9gPPDOw4cMD+8KPLdvHcRZh1Z3bwogQ3pxuZimch+uWvHt
5dMHZIgeOzySpdWFWydFS+2KJMNeVZ3qe5NteLivxfNPcWQYrWb8yr2zGS8x
lxPWTSFDzWFG7g7T7/i4Gjm6J5MMjZyZHhPaX3E+wQquKzlkMJ0Z67Fv/4ID
OfTh3wIyKFJ4Mp93l+MubSabw8rIQLlQRBQkfcYTciWDRGvIoN07PzHTUYDX
hP9Ze9NAhvgHufiMRT5OvFpwS6ODvt6oivPhzDtc8sRdan0/GbL6PctHt2bh
J+ROuF/8TQZm16h79ssvca/NgrPTf8gQhdwYpaNT8Zejv674Eenv11qbxtLN
53hrVfYo5xIZAnJsv68UxuGrqZ7WyQwU0GiKzTlfHY3L3dUaUGSlQPDWPxZG
tAjc1ILDvIKbAp2pem6H74XhAZrdHYbCFFDdZzAR/S8YzxFNO/1LkgKt++RY
prUC8f7Fqw3Xd1HgsYtuqKqxH765W02XYR8FCFFxJs/UvPEDBYzVUQcpEERR
KrZjuIlbRjfiMhgFjAsFh/l4r+MP3eJL8o9RQGCBeXbwkhNeZGirpm1AgYxr
4FWeY4+P7lX80G5CAdn+JwoXu61xHo6/inYXKeDqo5W8bnMRJ/ypekO2pYC9
uPdyDsEMd/oWLhvsTAFOBdLpOlZjPC7TPE3gBgXM7LaF3lc7hVfd2yGReYsC
3S8Ct29J08XnbOYSDgZSQPKtW62e0FF8m1axQG0oBfgWL8U9b8BxPcngKLMo
CricSx4xblHHPVYNOSfiKfAuyALjoangqf2iod4vKKB0Ov7NDJsy3vR5lJn1
NQXk/CdpruXy+HJc7t2E9xTo87ib+SB1J77L03dF7hMFHKeU//wLlMaNTXS8
i8spEBH9p1PcTgz3389D1v9KgcNbxB1KuAXxbO4frv2NFPjFp9T6/TsP3jOb
OeXcSYGaF0PCt0vYcen6xILkAQo4hde//9LDgju/CvdvHaXAgIeFraEGA/4x
KFCPeZYC2t4Jd75rLGGrlp58alQKiEittJBiyZiOptPAlTUKjH5Lt7h4fg6L
ELZ49XwTFbyEK0p0bk9gPWQjt+atVDDLuhhQsuM3Jt16TINRiArew/EPL6z8
wJzeqbOoSlIhZdg41O5xF/YhdG+z4y4q2KgtWLg+acVW7KUTEvdRQdp/EuN2
+44dOyJg26hGBU1lYRb9u9VYuATr3nWcCnNxifMmPeVY99IKdb8uFapk3jMS
Gz9hUt3zyP40FSpfXLNvs8/HrnwYCYs/R4VjCbllMnezsfyIHpN6Kyr9+pfE
6LwrA1t2bpBYu0yF7COGcqcTU7CjumhCyY0KCyfsxS0OxGOPd3zMt/WhgqXY
CY6qiCdY1/qr208DqMDT2LPFPewhJjnwTKculAoZ7x2lyzYFY1c+R3CvRFHB
zvAXJX+PP5YfG9SnmEifD7UlpT7PC1t283ppnUaFyMgT7YfY3bFjp5yvxbyh
glGg8iGJcCcsXN7yUG0+FVi1xyNUZOyw7k3GjEvFVFCfP3LaLeESJvVbp0Gh
igpiR6p3Gp87i12pOPzUsp4KJ1XWcO6G01j+M0WrJ+1UQIscijGvdbFlLxn5
mn4q4HgZ08noI9hRE0Ey7Td9HtRYWwceDeyxElu5/DQVQvJyNKtOqmBdHGsh
l8hU0HvzgMYXtheTnFwwilyhwo2Khgc1nLLY5ZpRsSpmGqyvu3//xCWF5aX2
jlI4aCDp35HxfUAIW/JrfL9bgO6nZ+6dr+HBtM9X+lwQp4FYd+V953hW7NHB
Au3wnTR4IExzT2Ziwjp5szgr99KAyc4FYz+7TJCYe95NUqWB+94JqfvCZIJj
fWSqLEYDvtIdq8ZompD76p6zuQ4N0oMcV3MsRgl/g7xVH52igfSZIa3pkUGC
ttXVf+VnaUD21U+TY+kmPNK0qluwoEH2D2YGOfZWQqewSfQORxrYDyeLJD/7
SpCkHL9k5koD19YnY2n3EeFyq8auMC8a5F0/ZXaV9TMh792+hVJ/er9VjPtv
suQSlkK3l8yF0OCxa+a3tY+vCdoOQsEykTRYzAzUDIlJIXRK/BN+8IIGuKbb
svPBCILEMnG4+DUNTrpHG/zTfkJw7B57O5NLA9uEzlO8HdGEvxFNYFxJg4kk
T2+jx1Zl4gzJlyWGaTC1OALvpbXKpI0nhuT/0CB1wV6ob1WtbGfG/gtqRBq8
ClyfCr2oXLZXr9bgNOMiPO1wz+O9I11GiJrfHyizCIPFZCulGwxlFtLaq6M2
i/TXf0f4qm1FaYrWRNS734tgst2d9ehxlVKpwP0lmqN/oex48+5uElPJW3s+
1g81y0B4GjKSdcipyLrlwFBp0yrYvzpk8oW8pSAl6cVHiYJ/kBVMurQ1/nze
qRnT9556DFpu2NqjD3Za74aalnR3nWTUYg5xWb8iDq+Lho79CiIwaYntPnAR
mrjSdxTlasprM2uJBbBHxHcMPu+oqHx6W41Fa8uml95dTBFPR+6k9jPv2qS1
TP1486jZz4gHDKmjXfKbtYaqB+qjSFwP3Ap0ZkzEt2j9938HBY7ibTtY/3PD
hRduorJs/3mmpE+2WpD9P6f/VEn9JMbxn5NUVEXMuDj/MxWYbyusbXiEm5R+
goHrPwvyPqgTJG044tAO91O0DbNaItH7yxtezl50pjBx/+efx65s7eDfcJaP
vnHUwQ0ThjgG2G9tuHBzVrD2nQ3vUzym6Bu4YRlfP/8/YRveLDArXfdsw626
zQ73yzas7+rMVV654arYzUWUmv/n+YZxVvumDT+7nZut/XPD/OknTXx/b/hx
3cRK/viG/QWlT8nMb3hRs4xqTt6wm615StTihqdCKcfrVjZslxs1v76+4f8P
9fP3hQ==
       "]]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwUl3c8Vf8fx69rhJaIJAlFkUoqfOOc9yFFIrJlK4UiWZGUrJQ9QwghZO99
zJKdJBlZ15a95+/8/rqP5+P1er/e78/nfO69n8Nj/ETFhEwikeJoSKT/f9bp
8/Tv7u7iglVnb1ZFiki8PCGhYL+2i89ZDGl6m1yWEB9QK56e28X1wnd49+qK
SqQaeQX/GdzF/5twOkPXd1Ui4P6sbG7NLv7d60rLZf1rEnfNy7MevNnFHfS3
k7/vV5OYsdN2bT6wiy8UvVFjO20nweYbyPfh+A5+8aPWusf+Agn0cvVgPPMW
Lrm1h7o5SFKyzyEpXkVwA6cf21k5b/267HKIas5v3g08luZyr1GnWZlPJqla
9xjBMS+0ux+aSEqO3h18sG8DNxVp7Hn4wL0sUvUgt9PMOo51K3tSxZuVaZx3
iP6Us467eOA+4/7mZS3DN8OXrq7jhvPkL9ofwiT5d1c+O15ax0kneufXc4wk
nTkSCnfOEv5fjyPO3/aUFLqz00l/nMhrVkV/PQiUfFeRw3p8dw0n+XTFi4cG
Sd6IOBZ8vYZgf1VPoe0oyZi8+viG0jXchc7v5XPuFMnlVrscpbw1vPJOvTWz
RJxkAl3bD+1EggNN1wZ6EyXJtu5Mlm8IFkw2eueaJnnX/yL34iuivu149Pxu
mmR26t8LDg6EPvSmiYY1T9JwUFzJ1Yxg5VKGfKUiyYrb/3zDbhH9UWZ+i+Jy
yfVHT5Ucr63hGBNFo/lfmeTlt8tMuhKEvnJJRMq6UjK1ZjuY5yxRL5f7LJ6n
VnJk4LU6zUmCV1uSzKq+SnLv0B4Z4yD6409wPr9vkqHiByLTGAk+E+qYs9Qo
yWjDdtx6YxWv/OR7IepYm6RLOles2CTBrSL3IrZ/SK6M8Z/c/rOKu4RINaQY
/JJ8zHshqfr7Ko5NbeVo03ZJDumKCXgVr+IkgceN9mW9klrvIU0xhdBPDRRV
ug1ItvyQvcASQfDv6JaS5mHJa/uUc7q8CBb8lDGrMir5UqDDptSF6PdyLco0
dlyy6IbWlRgHgv3Skhw0JyUX7/WuuFgRfg/jrvGqacnzrw2L7pkS8zzKlp6R
mZE0i6E43jBcxQemKrc2X8xJJpSaSghoEfzAQhbPmJfkWLGqmJEl5qtJPnKz
YElSnWX51Q8gOJmUPyO9Ihkg7CiVJ/b//s7itm2rko2K2+T3FwjOIs1y/lmX
pHv0utbxNNHvS93a/e+bklJetJ66J4h5rpcbjLdtS75IfCsLR4g8g2A758Mk
pKB6PwPvQaJe5Oiahy4VMt8f2ECzZxU3bJRu31NCRoS2WX2IrwJeiYZlRQrR
IA84IhUbVlZwklPXsloJLRInxnUwfWYFx/gEptSl9yC9avFt/qME+38oLb7M
gByx5g+y/ksw3u/3bIURUfFPVVXvJPIaCtP79uxHfNPOs4q3ELpqYSWLxEGk
/ntOJ8fXFdzlepvSryYmhHpMNHy7fAXnfnJJNfcYM4LSlGoP5BP6Psm4ElcW
xIEHjtWkE8w5nm1MYkVy0ZrexESCq2x9il3ZkBkd2RivaIJTD3Tfk2ZHzjg2
GjwKJfpxKzn17+dAYnJ/Dgl7EHz3u1kEDxfyp00zgcV5BTd0v+LKdJ4bOTzT
Y7JiS9TLbzvPmvAgSnsNT/95TKxfgL9SO58XeXeGMl56fwUfGNB/84zrFFJ3
3TQ1RpfIG0lcbYjmQ0j3ph+9ViN4LfZ7zZXTiF300swNGWL9e+Vk97YIIvxv
vZXzJIk8NSGOO6lCSKctbw7PFaKf1ST14djzyBvDYhb/c4TfxyPPS18YEVdQ
ttviW8Fjn5cYJ726iIyLjXWacRF+raK63/kiSMTJl+K/2Qi/d3WMwNYlZGPj
y2b2HiL/0xWB462iyJdRab0TJMK/aPAv3lAc0W3/U+Gztoxj7gWiMfuuIvsq
rLg35pbxyhE/tic/JZDylD2uDycItrr78Uw+gliGxgx3DC7jLisNF36WAcL1
+sp16e5lnCQ1zJG5gCEuWvfojzcu44ZW8jL7VK4hF2U2zN7VELpy8/sDsTLI
0IXAxtVSov7ka7UKmhtI0LEz50zyiHy8sULxtSxybQ/u155G+Bf8q1TYbyJL
C+pzkEjwcy27yHp5JOHv9J30aGLelIQK31AFhK6Ag9XLj6jP/h6beF0ZKYzL
tl/2JJhXjZSrewcx9ZXrMn61jMeKcFzU91RB2B37/2t7towPDFtpiNWoIt/v
239ArIh5FrvrdQ6rI8+V92+nmhL9bjxRSXLSQAQlE/TZjQieV6z33tBEfFja
eRbvEMy73yL+ug6C7Jq6GcoT/cxg+hGLHjIzuUtpliZ4z++PziQDJKYz7IaE
BDGvLu+mv6cholR9Ljn5EsEv9c9oRxshpIxaBjah/+9fzeKnr8ZIVoTOI7dT
xHwlqQfVqe8jzE/fntdnJfICVaMsSh4gNbrcAY37CXb5SFcpZorYyhXOi9MR
PMtfTttihpy6fFs1aWcJr1xRrqt1foT8OjGSx7K6hJPqvpGcb1ognntfsL2e
JVjBgm/h4hNEdJXZYWZsCR9oPbNzNtoKCW/BJL53EWzIJrDw2xq5WfI7SvQH
4RdiGm1lskU2Ei13Pn0n9BM3T7/Ts0NSA2kND1Uv4bFfVi31cHtExzmq6mUJ
0Z/3S+JnMQdkn9mlk9M5Szh2y3TI8psjUqbW4K79heBrNrU9Vk4Il9Ca7OUo
guc1KnhYXyGtR/xT4kKIfo43v3e+dUFcqPn3HvQluH/12L6I14jwbNnjFx5E
fsEii32xKzLYrdoy4byEG/qo2SRNuSFBXycvaNoT+ub91QMXPRDpnNeBtZYE
z2bb9L7zRBLeZqp9NCDyPthbiLu8RcSfHTc11yTYRNzzhrQ30nTf2+mKEuFP
1mQt5/VFDFXW/UiyBPuGTL056Y8swcP4RpRYr8f6/MNPAYjXuV/5YaJLOLfJ
w1GVb4EI57Fr343OE/rmcZP2nSBEZoVrbvU4kf8cM4tKD0W6hn2oa1gJ/qTD
WHb6PfL4xwab337Cf+ehPE1pOELCTQW1aYn9kC5z22sWiYSkdSKnthfxyo9r
/CGXopAzkTJ3ZpcWcZcXPbIOnDFI2Zuc+yXTi3isauLdTuZYZMTYz1u5dxHH
xH45tSrHE+d5K+ZYB+Fv+Fhv4vMJOYCa54w2En6hDovC3gQk/mxXXXbNIm4Y
oCN/4loSInr0xp8XpYS+5ee1VfkZaaDLm5bNJThgp61JMwXRX+IhsXwh5rE9
qXKW4Qvi2brNnxK5iJMebiyaVGcgHOWPrtoGEf2pSr5tPchCMlL/KMI7It/H
vhB3zkakw2WNGF2JeTK4pIKScpBOj3zbX46L+EDBhSG/oVzE3OakV+xToj5s
RW5BJB/ZMQz88MiM8L9JGCdFFCD8khbVVNqEv+Tl8/QvxUiJQM+vJmVinlDq
j5hOKXL7yM2J93IE65QG2fKXI0M0hVvGGMEvWmOpD+KI/cIppvPiRF7Zt5N6
3pUI40DQyfULxPxGHfnfPlYhMc0ksdrThG6AStfVVSPfknv17h4h6j+nPJ+Q
r0N0w+Sf8h1cxLlXj+21TPuKzLkVuc/R/X8/YsblT9Uj7k/5w0t3FnCX5FC9
7tzvCLtByBfPlQWcRDrzLUi3EUlTION3ZgjOyNak4m5GsKtW7ZyjBOscVa7e
bUFMWRXWc34t4IaV3x8m+f5Atsgl+142L+CVnLT4o/R2JGDuNPfNOiL/tCb7
yf6fyKm/oZcOlxO6ffLk4MlfSFEjtWx/HlGvPne3+UUnolD89G5q2gLObbcb
wj31GxlI6rewSyD8jIu7PFZ/EHrX0pC9IYQ/NDQLr+lFop4IJHd6E/k2E0pq
oX8RYb33pXFuhH7tUcdXqQGkVp629bETMW/sGAeT3CCiJW4zJGZD5B/73WCh
P4RM8w0ukx8RurWz4S+PYcSFRYmhxZjI2/TllMcpSMqMoPB9FYIl7qdkPR5D
XB9Ih6jLL+AYh8LQXM84ovtXe+2GNDHfglXoQaNJ5ECLV6WACJF/2+4nfc4/
ZOx67KljgoTfdishzmUWqSwv9NrHu4DHNgt/vpU/h1injyrPHiL6v7ZUdGpc
QG7x7eQNMBCcViF0f2YRORXNerSdiqgfyNC7z7uMdPrIDObNz+OVF/lyoqtW
kUwa3etJE/M4d7/R8cXz64jXC5uU94PzuIvl16aI7A3k6uP4p89/EHp6niW+
uY2wUIp/Pfo+j5NOUSd11+0i0zo//tOrIvLeSFtK/SKhMbdIZCx7Ho/9sTJe
RSGjz2qOPLiYMo8bhuc5e1PToMoSFxp444j63zO9nSK0KPVZ/SDaQEKPeKOc
/nUP2htvt7LiNY9jN5SXr5xjQAs4fO+OuxAs/JUXSWZETRnLeButiH5XB/L0
B/ajUq4/PctMiX4ec2PTHw+iHBuTk+mGBMemKz0tY0KbJo7mBigT/RoTl9Qr
mNFEo4tHXOWIfiasyVK/WNCXf+ScbDBCT65dGNk8jAp/f3ZNQ/j/67vz8YfT
EZRByv+z7Bmi38x60UInOzpUlLT3P+55fOCMh83r6xxoaPKvn8eYCF04fFXA
6Dhqyf1PbD89sX89K4FeTCdQuXCaqJ3dOdywm3959hE3uvHm0v3B2Tk89vrG
zm9tXvTnrnx9+9gcjk141T0zOYmmPTMWqu2fwwfM2tJ7Xp1C9R8GLiW1zuEk
w8v9Jyj8qFh/slb4NyKvl/F5zoUzKJNmZdlbnPBnVQ9Y+gqg1Tdm3R9nEnnp
C7tybkLohwq6Cb3Pc8T9k9XN4fh51FaUS1HpI6FTtr6sNF9AT/Mrsor4z+FZ
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
esilXvYRfbHPYtk8exdkwsrM9RVjUF39fOM7lbvQzZu0XRjzAVV4ox1R+41Y
L9OdzSK9SFQya7tVrHUXNlQuG9QLRqCc5BsI199d8JL/cqh0Ogzdd3bSJnBk
F6Rp/ua+HghFt1T9Umn+7YKos9Es50AI2pvYeWRqcxe2Vw8Md5CC0QcPkdOZ
VCSM/3OYFIknCP3r5F9tSkvC3FwreY7fCkRbEi6t9+wjYTQ/06vW7f3RG8Ue
IaFMJEwwqffPKJUfWtH8+4LSYRLWI6Oz5R7tg2asOD2oPkbC4nTS+beo36H8
e1uoXpwgYZ+9B4qdmr3QmBPc0VdOkrDBf9NdawlvUD+52p/JgiQs1nyg2N3J
A6XTY3tifJ6EHVYa+/vE0R19+dSUkVOEhJ16JfqLyc0NtYzcJ+X/HwnLP80e
YlH4Gh3N0O+VQ0gY1b5k30uDLqh+TdYzshQJs60dUag57IIqTqtl2MkReSFi
ONsFZ7TjVamViwIJ+0N5GW2T4YTeZeG95K1MwljllPg3sefog6uzhbFaJGzJ
zLN15MMzdLpZ/fkXXRKmdcXILtDYHrUxKpMsMCRhGVNcw6vidqiL19uqRlMS
tm7i0jJ/yAal45xz63xMwmpsa9aOslijPpkaNwatSNhI3qgdH89TNKLzZOOK
AwlLMPE58LPaEuU2f+dL5UzCNv7FPJs+ZYEmbc8p7XtNwvxC6wqORT1Cc05V
dPC8JWE2se7xcXWmqHjRqfdCviTs+OFtfkb7h2jFLW9tsUASlnzHmOWL2AO0
0Vrrr0IECWM/WjFzZeoeqkKHx2pGk7DJgKn7b3uM0a4IvnvGcSSs+XKd4dgf
I5RSuTD2LIWEvRwSr1jfNEDN1bRTXdNJGH1K5sVmGX10bgx/7JtNwqRjtTde
JOii2wd85+OLSRh+5WM15ZM26h6/mJteTsK6nr5zcpTSQhlF79oXVZGwjhi6
zPh5DZRN7/Rm83cS1sj4q3jNQw2NmvMt72omYUcE+L+YmKqivO5Lr4Z/kDD1
2FaRUW0V9MKXKpr1PySMkblFie2hMlqAnvlG/ZeEdVIv92eSlVDJdr+3B4ZI
WID7QkqskiIqt65z4NQkcR5lM0Taz8mjLT7VbednSJiw4qPJ8jI5VJ1bIPi/
BRL278vppEcGsqix7MoRpQ0SJhV66AapVwYd79bt1t4hYU/WZ3dIeddQS8ua
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
dIh+09b99Wo69X+eKLgN
       "]]}, 
     {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
b3RVC+hj/g9XQvkJ
       "]]}, 
     {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVV3c41u8XtvceJWUmZVQ2Gc95jKxUEkJIyKqQSpQkJMn8JklCVpKSkYzy
ochIGfEaIXtn7/l7f3+9133dZ97nnOe9PiL2HiaXqCgoKAyoKSj+/1ttK/J3
Z2eHsJupuj6w9BP5C6kZea/uEH1tYwUr138hlT7TkqnZHaJiiM2MbvEXyr4Y
+qSzn8xrLX09vN6Ioh1n9Aq+7RABNPEfy9mbkcEBxo8Sn8n862OR/OeaEdWI
qGhK4Q7R9LUi8L/kZnTT2XwzPIOc73TA/VH5FmTl9uWD08MdwnOJ5Jjk9htx
S7UL9NzbIYzvPtU7W/YbNUzOhp312SFmbb6Y6LG2Irgqdgm77hAf1GRidgpb
kZjn4z38J8j2cxocyjwkNH3TMvAnG9n+btaJw7s60Wul6zPa9OR8T2qMD93t
RHYr4dalO9sExzA/y8fhTvTbp0Lp9ew2Yewq/SuhrAsV3zk4GdCyTcjs1t7R
uNONrqlrWqzUbxPCTej9lZluJLllVX312zaRQqN80+ZSD3rpH5lsVbhNNNm0
MyWb96LA+0tnFeK2idlbFwveHexDalrsldmRZPt2uzcSrn1okUriiMjDbSIg
hiny1ds+5BxszcDms0307bb1fCLfj4wefvs8akn272KwHjk9gHZFxBx4IUCu
7+4zk6wvQyj/dKCOB+82YeekSSrYPYxOc1130GbdJj5EsgzKXh9Goc9MX01u
bhEy69psiUdG0Mar3QLq3VtE05FPlvWfRlG8I4M6R+sWQUG7fIJZcAwpHFyz
GvqxRXBYmTb8ezCG3HO64sPLtogP1iFRH6zGUV/RS56ehC0iui+2oJ9vEvn5
Rsrn/UeOV6fEPRg+ifao3zN5EEbGLZaBpVRTyKTSLvrw7S0iQFYwmn5xClX/
2M/ib7lFzJpF/x38N42y+95QC/FtERUPxIdTU+eQblqC6AL7FmFcP/GK698c
Grz0WLOGnhxP7vfptyrzaN/klXseK5tExXOTPpff8yhq6egGQdokZF5cqY/Z
vYiki4X5Y39tEgEJnSnVlxdR7W3OYy7fN4kUgrlEt3IRUVEseHMUkf11I6l1
PJfQDaaiebunm8SHBqWlj73LiONnJqdiBBlHddv0aqygd1HPZBgfkO1tF5z9
klbQCI+ve96NTUJY51fXEcdVZCmkPkFpuklE20X9R0+1jpDC1/5ULnL+v+xa
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
       "]]}}, InsetBox[
     TemplateBox[{
      "0.010000000000000002`","0.05`",FractionBox["1", "10"],FractionBox[
       "1", "5"],FractionBox["1", 
        RowBox[{"2", " ", 
          SqrtBox["3"]}]],FractionBox["1", "2"]},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox["\"\[Sigma]=\"", {
                 GrayLevel[0], FontWeight -> Bold, FontSize -> 8, FontFamily -> 
                 "Arial"}, Background -> Automatic, StripOnInput -> False]}, {
              
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #6}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontWeight -> Bold, FontSize -> 8, FontFamily -> 
          "Arial"}, Background -> Automatic, StripOnInput -> False], 
        TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold", ",", "8"}], "}"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"\[Sigma]=\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.75, 0.55}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"\[Mu]\"", TraditionalForm], 
     FormBox["\"Torque\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Epilog->{
     LineBox[
      NCache[{{
         Rational[2, 3], 0}, {
         Rational[2, 3], 1}}, {{0.6666666666666666, 0}, {
        0.6666666666666666, 1}}]]},
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
   PlotLabel->FormBox["\"Normal distribution\"", TraditionalForm],
   PlotRange->{All, All},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
eNiMft0v3PbUGMbqKu7/AKms3JU=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1:eJxN2nk8VO8bP35bZcu+Z60USRRJzDmXlFCSkLTYlyKJsiUJSVSWkKUQoqSE
IllvIcm+b1FkzT6rbPnN5/v7Pt6+88e8Hs+57nPPNdecmTN/jIztdWMHJgYG
BhX63f/yq6XMr/X1dcTwf2/+UpoGXn83rD5kWjyzsOFsm9CYvuENR9nP636s
3vAF5/I8xwcbnvM8H9TEtWGh8CeyzyX+/WdctWo4nW8VtT2O3mkrx8s66PMq
3XjPMrLFLqpK7brAXWE4Gx538i/KuLr9Ka2KQcgzmTJ3/BgN/XEaJtzkeC2e
EZZr+sKKghpdL5/Y32m2/c3cHmV7YxJaGh5NdRma370wyqpWbriAyhklgutu
9e69RFQN9Psxg56x2hswc08p32fvCzxXN4nC0Ljinbhq1STL0UdBy6Oojs1U
c16/89ChroKpLhhGMWoK4dR2M401X05nliv9KOiV8+uGi44EIa1sg1b9fhSg
9HK8OlKjTHmTnlKSQj9ikAws2KxtV2YfeY+iMt+HeMxU5ZhuGZXVv1z2t/Pq
Qwx/JQ93jegSEhonY6qCexHDy4aV/UsRhA9PQrwiHHuRlkEUp6VmIqHRbOf5
C3q9KECC05h/fzJhfchKksTRiyrjtxdaHn5LEHm1xlAx24NSGbmo1yfyCQeu
Ph8Ja+lBWqevGFgkFhEMlA/Xns2nW7hg9UctIjhSu7NkYnpQQFkS+mhcQwgo
8Xg069GDGDRullg9aSA8u8vnWmzWg4bSQifDGNsJBcfyjO6r09crvle+3NVD
aGIzVDkjRt8vzJzt+8FfhPHmaUGJ1W4UMG55rvP5KIEhNuzv5GA3qowte9Aq
P00QO7/7RwGi10mH9cS7iQRVya/lAWndiKFr7jDBfpFgOGKbanCvG2l9azFP
yv5HuJLFcE/EgX68U5mrxRYWLOhaisPocXpdykm9Q4Ude36AoJcn142so0J4
qMK8WMFi3x4/dvr6Z9f26x4VwprLvLfqzXQhrWcivUGr4thkoOACf3MXkrbl
t4zt2o4x6X5s/5VLr2/S43niLoeJc54pfPuE7l3j6fvylDC1trl475tdKOCW
rjx7kCpmFPfY9+hZej0gz/nUPQ3M6eIeC+5DXahyuffoOckjWJB0HfwQ6UJD
1qwefnzHsaQxh+2vlztRZV+/9RcXA+xTNvOmmwOdSHqg0z1A1xhrvZ42gVd0
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
9fP3hQ==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1:eJwVV3c8Vf8fNsue2REVZYUUlXvO+1oRUkkiWVEZ1VdIUslKygzZIjubJPsg
KzshKyvZ27Wu9Tu/v96v5z7P+3k/n/e595xzRe78p3eXioKCwoSaguL/tc5U
ZHh/fx+ruEB80i8YK+12REnHeXMfm09zV5e7kix9bkS/ZG5pH3NGXf2e6WdL
Z1j4hvaN7mPZSNDRiYBK6WCrRY0v3/exUp0KLVavEelbthV5997sY6Kv7Bst
yEdPLTwx8mxl2ccSXms8IL9MO8Ud8F40RnAP46E2+jZalSmDnqkZTeTYwQ5x
sGfsBnyX++OSmqgnQcZK3lrr8pZ+kK/UnQ8I197Elm4+aqU0Ip59EkdauKi2
jvGc5S9roJtWSH6bqx9vRsJeqd3qdKK4ce7zgoSsld4KRvmfFZ2yWNn5pXE6
hQrdJSzvU3zEhOnahdvLZzxeDMxhWojNzdqOLaXXDH0eNxunMHenxHt3xMMJ
PYqUp4RLpjAKmv4reuWhBLG74v1Tn6cwIs+5dzUrIYR67NlpV78prEp912Ly
fjSB7gn/31hdvJ+3rVvgRDbBMFEl6C7gfFTnl9KRbEJ6u63SKVncT4LZnm/y
C+GSRFkoxo7za/lGsU9LCDPejHNXVycxCvr3527ZVxHeDRurjXVNYlUpbQfa
G+oI/UzeSxl1k5j7F2Et5uEfBMkLWbGORTimxP4jKbYSXtzv0iSkTWIjZyIP
caj9JLSE7ZBoIicxoj/lg6GIX4TDNcc/tfriflcaVRO7ewgPFnUuhz/D8RmZ
2vR7/YTyw0+2TG1xrMVO8j8+RGDWiks5YTyJCSuPcL6SHyWYPq27tqSN51t6
OphGP07ISZ7fLSbgWOqup9LfCcLeT64MD2k8DzZ88JnoDEF3HzHQEsLnj9y0
a4UFwkepe1ScrJNYQt7BWVe9ZcKiUWDOwP4EVsVyK46SmkQgvim6lbw0gVE8
+UYxsrBOCC4cOvBwFOc7+1CSAZkwMnrgy9lOHFtY01GI7hHkWGXM9momsAQm
0dudNykRT8JNxoYvE5j77RYL5wFqpNPm1begZFw/efw21/cDyNGINEvDDzhv
kyykwc6AONS2s4r44POoTrXc+MOM1CxvlE07T2Dmtjq2TbzsCOcRYeuC+3h/
qJ3c0whOxEpH89BzwwmM2Hygn/0BN1L4zL5K9RKO0+72haXxITRpkQ+YLuB+
FH2jBD1BRL+rirdbAudjHwZx1gsjyZTTtXECOG7ZWzkqeQxZO8X++B4T7m8T
k7f6TxS5ePu8oMzuP4zi0HWDF1TiSPhbix8b8/8w4s3tw2UBUshE0dsnVUP/
MHfr6sACHVlEcTxf5G37PyzhB6WNaORpxJe9v/Va1T9MWMA27b7CWaQXpXLl
z8f9zNVOtMqcQ04+kBD7+wnHD14cr32vhLhE6XVmhuB4gbNL3waQxnpXNyev
f9jIvaRrJePKCB8pUQJxwuepfDpebaaG2Io099DexfO0+NzPlNVASnVXPdtu
4Dj6LandSgtheCEgE3HxH1alPyL2iVYXufVZdcBMEeebXpupcFxDMnrs3pw8
ifspBi8+sb6ObFOHyS/z4thg9M9dFgNER658uIQex4dux/OzGiGxpuN+nuRx
zN1uobH1yW3EOcGsL2IWx6LTgfcFzZFrY/1i2YPjmHCeOFMKegeROm7gVNM6
jplLK9zeTLFCDtz7Wf27EtefsP1dffs+MpKmwzqfO45VJTl+Hnlgi5RNN9ym
+oTzbxz790ceIuGSqhk8IePYiAUx4e+YPWL/sHJDymscS3BS+jR0yBHRyj2v
ruI0jlGco4kUCXyCiC4Xhty8O44RLypxXLvpglDIy448MMD5pssOKa7PkX6n
TGlPDRxrNJ5dpnqFFBaJPY84h+cLceTWdfNAAjc/NWaJ4/1vpXJbSr0Q6wuC
3DX8+Lz/UoOjUR9E9UWk5W9GPK+99qgPx1tEqJIzf27nL+b+8EotO9Ef2dwP
3KNcwLFZND/SGYR0KjPo8Az/xaocBs28Zt4jWV6vo6Q6/mJEmvXVBYkwxKeO
YlK5+i+WILsRQV0QjlgcfHHmZgGO37/5zuEbhRAubXg8SML7j/lpvCmKRbj9
HNo9wv5iI0crpEnHEpCllvnDEa//YuZna0vGjiUizSw2tlnOuH+jWVicRTKS
enX8W/V9nJd+R2U6noq4h5jR/jb8iwkTb3jIFX5GbnX1681dwvMWmcsJ9Gch
Z7kNEiiV8Hn8iwxMsnkIm+HPeW4p3O9m/LvUkwXITJSOkpQg7veqJZPBpBCp
HWjwVWbB80YWSvF3FSHxgqo9BvtjWJXwYN3zDyWIq1nlsQdLY5i79y+tnM/l
iP6n8489RsewkbUkHg7mKuTU38LK8E5cH8BxOnOzGqETlWXK+j6GCaNvTjsK
1iJj9zKNqgvHsASrH0lDHvVIRbpYWk8K7rfWO8Ql/QOJnPlEmg0fw8wlZcQY
TrQgDlKCKpS+uB/ZasTHpR3ReRQZxP1sDKOQHdBM/fATEcvj/CNpi+sH5x8d
SvmFUKwESigb43lo+UbeLHUjA/IMLgY6OE//QTzBrRcpevK6zg7Bsd7cnVyD
AST4GwWnx6kxjMilV9bhPoTYbj03Dz+C9y//+b5DNYqoK21kZ7Lh+jsHW+k2
xxDhlw7bVZQ4llWvoBX9h5Ar5zV7VkYxc3nnpr2gSaSLwiZ89u8o5h5/8PEn
mEFyVcb/UnSPYiOtEvim55F33mZy3PWjWNUvR7r36kuIVX2/m+S3UUy4SSWV
+fAKgtIZtBDTcb11xEMWMRLCp/WTzyBqFCO6Hhk4aLOOkPx07tu9w/U19yt2
ZjaRttaGQvfnoxhFqLGMf8E2ks6qShX+APe/bylM2bCHeF6rvJJpgucRuv1E
jpcSvR16Pq5KF/fr4Pn+fZsKVewunOmGUSxBrjWdk5MW7eUfikmVwfmpr7Kp
kQdRV/ODl58ewfEJu+1NawZUIFV2T4MV9xtmmLzrz4yWzxrl8u6PYAnc9qe4
fdhQEzkv8+mFEYwi6laA2jMOdM85i710aAQzN7Kevp9yCI0v765514ZjGZbR
72w8KJFq39G4cgQjdt3yU6/hQ0c1TopK5eB+lke0w6oPo54B13p24nD9CdMH
IYzC6LFfrm9aA0awkb2pH2ITImgtb/K5jy9HMOHTj1/mrB1D75q2Tj96iPNH
aM70gRh6IHk9GkzwPD1LlnNNJ9H06SM6bJdx/iS9QGecJHpJ5tLuCAHvP/6D
dLLqFDrj5JCTLzWCsb1SHpAQlEP9SmPMPA/jvNEZ9WYGeVSKoo7tOhOeT9xv
gvHUWTTGb9BLY3MYE5bMf/7aXxEd4paZmPo9jFGI0taYSV1AhRM9NN99w/lp
0gGzQwh6R7orQzJiGOsojnbaEiWiycVizK3Ow9hVNh9i0rwyOqH67L9HBsPY
SO6TufR/qujJ9uafrAq4n7681zrHRdT2ltCZfK5hzHyc2WHFVRPN/mcfrrc2
hJmveTX7HtNGl+y/b652DWHuJj/8FDl10dM7XMYfCocwNivTxYD0q6jTG+sK
hbAhbClZUNvdQQ8t4ig70us4hI2cQKeK7PTRzThmz2fXhzCici55MNIAvSBu
Ps4vP4RVzU9xsOwboi8KCy6WcwxhFGEUXCNJxigGtJ9NVv5gVVJnmB4FmKJU
zTcZ93/+wZaOHJyXGzVH1QwyHibk/8HYdLfsaVPuoD6jO+3K7/9gxLiZQclw
K7TxwZXTf+3/YO7osRc7xfdQhs1PYd5X/2AUqTnR8hw2qI4XaV1UFtd/un1i
O9UODWTRMGpgxflDmXSkF4/Qn1FRZdaLgxgbpTq3cKs9ekh0TpChfRCj+O9b
fr2nA2qQh7pn5gxi5lKDb9ksndBIpfdjOoGDWPABKruVx85of/1ftYWHOF8/
QFP6xQU9rKeQFnR5EBO2lL7AJf0cNf3jSy8nPYhV6XDs8f19iSZYD9h1Mg1i
Cd1H76Y9dEf/rkq3Oc4NYMIjYQN9zJ6o2Ct3Wa6WASxvsU34XrcXas3wK6Qo
cwAzf7c63tXwGs34ILp2028AW3pC9WB76g06J+xyc8t2AKMg8EdRIu/QU1lN
JdFaOBY4bmvd6I/aKwoeJkgMYMSdzzNswUFoQc1/bn/ocf+zg52fdN6jpMs1
I27T/Zi5jdeVQVIIqtB3SFX4Rz+2tNQx3/49DHWxup9SnY7jzmzl7vJwdNeV
yZbGuh/r+I/r52+lGJSbmKHTcakfo8is0HwQG4fK0mrKxErifpL3bOp5ElCt
pn/s1sz9WFWkl2Pki0+oVZAXSX6xD7v6TlyzdS8RddMX+b3f0YexOTpXZCck
oxF8WElzQR9mTx45mW2VijYlkd0snfuwhLRzq2UmGei4daSFjCHOKwysJkRm
oXvSCmrb5/swit3B7waUuSjv6i+xBgFc/x9V2efWPFSu+DF96G4vZj9bUyx6
tgDVesk6ZzrciwmrapXxl3xBrVSy2ySqezFzldVHacZf0ciWqdAa716MYoOj
oIq2BC147+MceK8Xv362y1c4ytAWg+NGtzRx3k/D2kOjAp0QqFESk+jFRrJ0
32umY+j+iJnQCmMvFnxUrv+fQDXKm7pLUTn/GxP2fuP+5UUNetou5u/b9t9Y
Qtef6Zub39F7az3pIqG/MeLHWf5pjQbUvdTJb97pN8ZWpnGcQfgHGv2K41GJ
wW+M4ia96SOBZrRQLe/q63O/sQ5KlsN+hFa0lV5X/hr/b2ypSYd173U7OtE2
yyW404NZ6621aOx2oBRhbzen/vRgbH0eCdG6negZoboK9089WIfBKlcNoRvV
/XsnQcerB1u6yLdE96cHtU6n8OK924PZ52hKKcf0op4PP94dv9iDjYQazNo+
60djThM0807ifL5LYMqzQbRwo0/iBUMPZs5x3kbu4xDaVv6UWXOuG7OWSPpe
7DSCUml86RzO7cZ8xXhrxffH0MNM175mvu/G8m5m8lXcG0cVfi5EPHXsxhIu
0dnKTf5Dr4b7u6re6MY6BMvrBT0nURtjCRNWxW58/9WdsuenUU/hRhjg7cbM
FVJIciyzaOy/u0fTyF2Ye4DNByrqebTjv0+TaGUXxiYdOceWsYTOnIEmhoQu
7CpxKdm8fxmlIQ9m9Xh04febIsMZoVVUCHMNSrTswmQX3tLOuJBQRW9eh0fq
eH/Mx/Ws6TX06qUi/QsncL1R0YcQhw3UlkVf8QA9jifHVJm5ttCPkUE7cS2/
MPdPbx0Ws3bQYhPpYZucXxgx+F1kYsoe+vNoc/XZ4F9YFWcYpYoZBcxMWidT
OvzCrjpfMi55QQk02QfetF7/hW2aPFGUz6ICIYdkm6izeH/rsFHxAjWcU1TR
ucvzC2MzVCGbqtOCXfVL9t3+TmxqNVsnT54OOAKflkFpJ5Zwd8XNdJkeSm89
vusZ1Ylfr7GxuBZGsDhhx1rn0ol1XOFKONPADHQkq5KDhp3486m3mOIvK+RW
mVpqKXZi7n5ffHfY2MEgwJA5gLsTOynpADyqHJAspmPB0f0TO/edgy/w7yHQ
XlVnvFH4E1siqP8j6nPDCgZfI0J/YuniVcXEQR6I8j9v1u/wE5PNarg6/IIP
iEby9IJ6P7GEay6jbooCMCkq/cVM7idWFa9QHMIsCIErYiaJbD+xvPe/RuMp
jsCgH3/+ifYOTNhELJAxUQS8DA8Z2+Z0YLwPew6sNR8FCVEW2uyADmzTdLus
9uBxcKmkNDqt04FZd778vVwsBkf8tqmeSHZg5t4fvAxlT0L9zbWsbwwdGJ1V
ZFFxhThIjP2kdA1px9zVxsPJQtLg8rzuxv7VdowuR1fn4topqD9U8tmbtR2T
SpqXlXWUBUuNhGtB/m1YnrJMnHzQaSgYCU05pN2G2ZdbfeYqlAcK1zdbUfRt
mO9wd6LC9BmIzXr0KdmnFbs6tXbF7I0izKjfWRNXb8Vk5ZNbWVfOwbnhG5dy
qVsxa2P1s9fsL0A3O7Jc4t6CGZqqL8lnInA8U1YdoAWTlTz4tdoGwEHteFTt
bjPmYljdMxhPBJanjMrtrs3YgzXvZo4YFbjNth+mf74Z62pxPGCdpQoZn1em
+jaaMGsNAfbPzWqgMdgXPO7UhOfxizBW0IDwJ63jNvJNWJV340M2L00YZ6k+
t7j8A3OJslxTHLkE7srpI1uPfmBT6/GnE9p0oK0/5swr6R+Y9azY8SsWunDY
KciXZq4RG3yWVJBKfRVKUp1lWW0asVj2JEbxxmtAR7T1DjvRiJ0sHqJxLdUD
gz6TXr6JBqzW11WBpfg6rDCqux+3bMC6Zgooy3tuADHlXNdnkQbswcWL86Wb
BhCISp2UGanH9IsbKxtOGILEY86O8yb12PFzBQPrObfAsmf0yJWbddhIVHL/
X0Vz6K8W2TrAU4dtnktlv0JhAVezLTore2qxDr8vT6l/WgDBe9T7lEEtRtSh
VDL1t4SC/0RMJ7hqsZPXfqqFPrUCcWMLxY/d37FksZ2OUw/uAvfp0WnmG9+x
Fibp+jqH++AvKPK97tB3TM3lbvat19ZATW8R+7KrBiPlWtK/TbSBpeER3fnr
NRgF+6b26q4dNAWMfGnRq8b2dJ0NaD/ZA/GZcIA3RzUWsup1W9HoMXyzMr9H
6KzCXhhtFh3gdYBkpRHerGtVmK244mHZDEfgPyG8YslehTGdHsoff+kEIqJV
4YqJGHbStDtl1vAJkDuxbe5PlVjx0LprhuhTmPwMOT7ClZjmQ2/FKh4X6HLH
zNfjK7DEDZ7tv+zPIPsUVtf9sRyb4+f6c+jIczB/VxkUFluKNS5QRVklvoLL
FqgKzeFSLMzK0pj3oTtcOFdJcowpwS6MN5g1MHvAoYkKo+vRxVjIdKvBmIkn
NChXHOOILMLIqXqXS5ReQyEv0uPBU4SRUlvZwih8IGGx3Hc5/Cu2cLCondzk
A65x5fMdHwqxtoLh5WZ7Xzi1VfYtKLQAy6JPe8ZG7Q8CHUq2+xwFWKFaTdzw
uj/QpZUd/i8kH8vQDa0lLQXAqH6Zh+77PCzwirzApc0gELd4EsEvlI1tGEjz
b0iEABXrk52tw1kY2/zNIREsBAbLnSz6BDKxQ/nzlTUGoRDM6yQZyfcZm5l4
puEfHAbr7Q4YF1cKdili56SCTAT467SIXRJNxsTdDV9QdUWAyA/RwBdnkzCD
739OMr2IBJ2a3tt/b3zCHv+Z/7bQHQUqNi9JFtIxWMkwP9/r/Fh4eEf2e+Pl
KOzoL0uk0z4OIo3/vpd5FIEFNDD7est/hPnLl2R2c0Ix54PBTie+x4PsXYku
WQtf7F7gZPTw60/gczP48d4nb8yeTmRfY/UTDFxaZ2kZc8eY7OolHt1JBCYT
79C2Rgesc2Qyd109CYKFI6neWtyDEzEK+9RHU6D8QlkGufE9OIVLPF2Q/gzv
lekGQ9NDwZ6f4vn5b5/hnuYNZmnfD6DFknaboJIB7AaL/5lpREE0r/oRS5NM
+FL8nn/sTgI0ISMZe2nZQNdVN3xxNA142fLKTlzMByNanrN0/30B1sOuvpIV
RdB7kmzJufwF4rKjXz8/+g0Mdf6ECDkWgkDr0qFAXxyHJi2defoVHme0tiwY
FIOhiGyWxatvQJNw1ElzpwQMkEvHyoLKIJXakfnjvQr4XFpBp9hbDdWfTjcv
XquBlJXF9enNH3A1pEo8maMJHpcN9LwJ6YLXvi2uP/F6NhoZmGoaBBHzKPZp
vG5FMcS8eDQGx7AP2VZ4JWZFP/d7OQbSPWSvx3j1rZS4He0/Bk9QOVk3vPL+
1RIszhiDFHX63XC8Kkr5xa9OjIFcbe5+HV6fVDIm25r9hZ6OHDsuvC6PMWUb
Xh0HEWMJQeUr43BuLTbgvtk4cNcOqiiZjoP7QelHzo/G4ZqLxZb8w3Fgk7os
E+Y/Dh/6+EqF/cZB5klAfnvjOFDyIMnj9ePw8CBL0UXlfyBxTs9/C/kH05Ks
2JnTE1BdJB1JIT4BtheWlXxVJqAu9NFs/rkJmNP8VTygNwHNTlacRpoTsHA3
osDTcQJ0kLYIn/sTsBJ/JLWjEP+86N2ETsoEkDllAx4oTkKa1lDWiOAkPD/K
wVClMQkkrt3ZaKlJ2JEl+XAaToJNymlAlSZh73Kxe6nLJDTQHspWwj+n8iU6
0ZVOQu9EEetS8CQw7lw1TiZMgVnh6CrjziT4M8j3buhMwfEGnr0Suilg4eO6
oW0yBVHURaTzXFPAptCnu/JyCiSpU46kS0/BIXsLFSI2BbzPnTDa21PwwU0V
C22fgkRLgyHG+1PAHSBKmByeAqvmZpdfj3FdxvTZQIppuHbV81+czxQcHn8s
Pqg8DX2MrtyDWVMQt3I9VUZvGsKqRmcyvk6BEKXCMa8708AxQH50onIKhIXI
hyW8pmFwKzJPqG0KPkkNRr0MnYbNSZGJ0O4pOKpUyf0zaRqqqQ+XZw7i5zD0
ZHOpnQatGpXqb9NTkHLPKqC5axqoWtQ4UxenQOzJRYYj/6bhHa+ZjuTaFKR5
nXzjsDYNO1fF76uRp+BkCANNPe0MyM0JGCzsTcHnhDl3Pu4ZuPafNI0Y9TRI
5LbtPhCbAeNMlxtTB6YhqyLPtUphBuo2Z0+cZpgG6ZaQDU6NGVB9SKlPwTwN
NciVM3oGM+B2fNReinUaDHMZHwffnYGuzJD7k2zTMC/cmN3mNAMs/m/iTnFM
g2eI9wyT9wyEz1k77+OYl0b5hHboDFhYFOvf5JyG7Ce7lm8TZ+DOZedoeRyr
TJYkNOTPAFtF6+f3uL7X0PkPbfUMLEXW/XvEPg0Pm07zq3XMwB/GjYJGfD4V
YdHAc3gGzq9pusTi+SKzM0OrFmZg+kJe/OT/8x+x7tjbxc/XTApPO4jnDz7O
jDDPwlOB5x19+PkNqUYvPT88C9NT7LXP96dg3jHOp0RyFr7T1C6+w/fn+c/o
+8aFWfg3kd1Lg++X9yY3hYLWLETU9zBOLkxBdmMnwcloFkhLTEdkpqZA5ULQ
swLrWWDiqMvvH5mC3kztoqWns0AW2Xk42TsFDwXpVk+9mYWoJAH66x1TQBVU
K/MwfBa2hobVBBqmQNoB+TxdOAsnV25MFRdMQc3frX8namehckuL713aFBje
KDp679csnP4Cr3Jj8HznZGLHlmeh/jqt7KLH/7+fs73ClHOQxCnbTOuE5xNI
5zJjm4PUFyOIzV08z55w0MCpOUC7t0TZLuJ57P8086FzoP5+IujqWTzPWBSd
4eU5cB85Wv77GJ6njsOzy24OGPpXL37dm4QahfZKjudz4HL90i362UkwTPfb
vvpuDqQ3OWPieybB04/mSWv6HBh+eXw2KHMSeHer8hmL50D1n4zQZNgkZD96
uXCpAceusvpuL/Hf8bX1+/X/5iAghJ3FRmcSpHmnbmFH58HUycxGcnQCat4m
R+zKzYNAUGuMS+0EGG6bdykpz8M00UKKNm0CPIf6LhebzYO0seXCkM0E9CY3
E/Nj50GQ0HYrZ+IfeMrliiVxL0CkPfP2bsU4BATy1oSJLsCnd/fVE8PHIXLW
w8TnzAJE0VvlpeL3ydwU/TAbvQX4OOBY2H94HAb5yJSygQsQ9MtsTtnhLyhQ
qf8pp12EpEvaLlQ0YzDb2R/aQ1qEzfjPVWeq/sA2TyLPOOUSCP3+Or158w94
1Bv8u02/BP8iB9ffLA6C/7Eqd13eJVigO2krIzQISX9CvskpLMGBiAiZKtd+
6Lh2TnTz8RIcb7rxIuf8b5C44EXxenoJGhh88hZZf0LLhPnhhOUl8Edyuooz
O+BRKHqubGsJKmJpi4M0O+DL3NZ/y/TLIB6l+IqesR0I8fbDJhLLQKw/mBrO
3wJD2rrbLqeXQWLkuJWvVTO4b0ryhF1YhkRfFqWdvCaouzap26S1DEfm7nsG
X/sBujSmlQp2y2BB47B+taAelvKU+q85LoOJo8wAwl4PISZ86w+eL0Pe6l74
pEMd/C7qkk7yw/uLvbk90Vowt9GOY81aBqe4H7ZHN6qBilu8RKJwGVa5fHcv
PaiGlJoD3erly9Cb8vY3Ol4FMwI1TC9almEg7AgPfwkGjm3nXkzNLYNsDqMo
w58y4H7OHUm9tgwvbl0y/7FaCsUnSF+EdvF5Yv6zW6ylsOOeO6vPvALDrcb+
bwyLwUdezLhaegX4lcPy2MW/wskR6qeDZ1dgzUm7S8i2EJr8R0M2kBWolXnj
cT4Pf4+YiG2S1l0B9eVebkPtAoiM5LwQ/WgFGNPUjCudc+GC+vKNr84r8Lbo
bRjNxRwYXG573OG2AjlFe7aXhbJBRPvd5wNBKxDS4JuiNZ0BtRv360QiVqDt
Bufd3AH8fSdZfZQQj+ebCYp+2pMOGbsUfI65K3Ck9dZSwHgq6GQMnQn8tgJZ
xgxk340UWDAov/oZw/NcfGCnzJEC8nlPfYfbV2BWim9I2TQJyu8sbGgvrYCR
ufXhEe0EmCKWOA5urADpuyDVjEY8cB3xXnywvwKZJmyWGtQf4dEA32QAyyrY
i0YUB0THQHTJ+B0h7lVwo6w4tPQkGhoicodyBFfhqQ4LycU4CoT11XvapVah
882lxHXVCNA5zaZnfmYVespPSthcDIdnbAOtS0qrsBtJqNy99gE6W+zr2LVX
4d6hjaPBXqHgpR5beN1mFagYuYViLwVD3rH7suP2q1DvU9pQfDgIBilPZzm5
rEKf+AeBr4UBcKayIenDm1Xgi4v2MWPxA/PYkCNiQatg1xH5Q679LQS4msQU
ha9CYVcz0hjrCxMKqyG/U1YhIf1XeMJtH+DgqmSxzl6FJMmIkzy6rwFWfd9t
Fq7Ct/aPumVa3hCZK+TJV7sKS567h5mtPKE2YHr3c/MqHHxd+4bC3QOW7Qqf
Xfi1CpFfepizU9xB66TWY+OxVZCV1NT8zOcGzge45menV2E16Kz55ZgXkDQ+
bP1ieRVo+GnDMennsJPwxDyOggSoqMHpKE8XOPmKOChNR4J3V5z9OlSfgr4J
o2ElKwkqXmn3POF0hmy+T1eGhUjA3buZ93vAEfo37Jr/EyPBsZJA/te/HOBA
j4IGxSkSXF05z+b5+zGYhrSgIggJeH122p9S2cM7+4jSfDUSGBhYR1BeewTf
dO8oqOiQgGm8T2Y1/wGwMW5KWxqTIMVcaOhgrg0Qpms+r94hQeKNPlmfS9Zg
0xAg6m1LgrzRIcPotXtQ43VMMOUZCUhSZhE+r6xgwWIh8qwHCfS7/v23ZGwJ
AsSSQ/W+JEhX/nCTU+MOOO3oMk1GkIBgP/d8/qI5JPTz+T6NJ8F0uijWUWgK
rcXj1HRpJJjoN06/SLqNv6+4bp8sIkH5lMA3KDYCvevqT0sqSEATxuCUfMEQ
3OTYVi/V4bh1fFr7pwH8nk+Zse3C98FHNI5Q1AfhpqjCuEESVHrMHX07pwe2
qQFuHeMkCNVZKForvAZfPD00qedJ4Cryfqg76CrsmD7hUFgjQap2cMDtTV1Q
V7IZtN4lwYXEO3JCKzoQyGOSGkO7Bq4UwcdOMGqDcIfaBUruNTj+im1CL0wD
bLLO0ZwRWgNutzRTLcqLUOAr1XZPbA3UFzyWZd+owbaVcGTUqTWYzNNHE46r
gpryoTstCmsQM97ortqrDAGCdFL7KO7HffhPTwIRera21+Q01qBrx/HOZTIK
1gV/30bcXIPyjqRKUu8FyA/8fb3JbA3GUFvTWvI5INs2C+7eX4M9BhqtaCVF
UNXAJmXs14Cgow4fo87iz5Mv+Xdc1kCR8s4uG+cZ6N5Pff7BfQ0Od2ac0E49
DUKD0eqNvmvAoP5CrvyaHOSHefZJR63B1cB09r4eaSDbOyeZf1oDp4gDspPZ
kqB22fZh6Oc10IndUnbLEIcAcVPF+vw1WEhWfajadAJ6aPUot0rWQFPy6f4u
gxgcGVNvlqxZgzBrgeoPtsfBuvL8B9OmNRAuuW7EPnkUyM4i4rX9a/CaafGH
mYwwqF7nWl0fW4Ob73tvRC0Kgr8MfYX47Bo0NnDpxWUJQDfjrs/t1TXwusv1
bjSED4Smlq4Gba/B7PmY9fR4HrhfO85fQ70OyVP0Ry06uCAvoXecxLgOav7N
f+KPHgIVoyqXW4fXofvb49Tao+zgd7ZQJeD4Osj5StDzRbFCF3s6U5XUOv6/
KM7i7BFmEFyI6Vk5sw4ZO5rrpl0McK8pKEEUWYeVhwf8r3ylg9xUL1tD9XWY
cxyvXa88AJueT8/4XV4HhYpRyqcLNOCnZNa4ZLIOFw+siboUUkIXz/WQY/fW
gffex1iRixQgRLp42+DROmTF3aMdmdxF73dcEHvrvA6c7h87vjzdRvOyTi2V
ua1DmmL8zLLiFrrle7R0wWcdOkdyvVlFN1CVu9zeIkHrYFknEI8praFdgns8
b+LXITFW62V13zIqSF4eLUlbh5wp9QJ/4yX0Xs+/zLncdSD8F3Aue2MezS3o
e3KkeB3cTM0JSfaz6GZgK+hVrUPNoTcxXwSnUWW7avrXjfj5xLVdxskT6DuN
r7++dayDsSpHmzfNP/QwRdx9wdF1yDzE5BwfNIoK602OiE+vA+N8YUQ9+wh6
PFnulsLyOoTwMnYs3P2Dnlx//ktlax1q6wrnI0b7USnNep0rlBvAf8aEhjuk
F5WNZqs3pt8ATZPdkUuOPeiZuVtgzb4BlZ+D1iw8ulBC8KKch8gGOL1nljPh
/okSx85nBohvQOe65eMJ6XZU7Yz38Wi5DZAtuHor7L8WVNOnLS71/AbMH7WM
C5/7ger08vJ8Ud6AQP4kx+MJDehVCctg7NIGiCqfTe58XYfqv8imb7mGz5dX
7PSP+o4atm149hptgJFknFLQ72rURFhlZ9xiA+IDX42ZE6rQOw7+T5ZtNqBN
9+uZ2LcV6L3anoXdx7j++e5E/UApasstYs3gugE5B7R3f9oUo4+s7Ua5PTeg
4/dMfdmpItSh9OutY+82QH/f9+2UaCHqzETRJROyAT9l/Ab4tQtQV1Oty4Ro
XM875vMgOg91ywur10zEcd3330HCOagn1TDcyNgAu5g3377rZaI++uIlFgUb
YJ5qWH+/Lh19l+p4+lHpBkQrl5HnHVLRwM2KTNeaDdB4f0MPMUhGQ7ToRN80
bcBC7mhBum0iGh6r9zG0cwO0Wg48mchMQKMXYnkS+vF9XKMQYpf6iH4kTgZn
jW1A+s69lBmtGDQxRI6hZGYDBPwcHlZnR6Kp48+96lY2gIKyGvXXDUczFOp3
fpI3oPFtFNSdCENzfNmch6g2IbZlW9/sTAha0H9rcYZhE6SOPdAr/y8YLZJK
sd7g2ITj2nVdGpkBaKnb4ii1wCaMmFIkOde+Qys7zhuzHduEMZpq1u1jvmjN
Ue+uw5KbsHKz7qn199dovVPbZXH5TWgJ0HQZi/VCm+p5G84qbcLtWecBtkwP
tI3XkqiiugnXy1RXTna+Qjtts0t0tTchPvbd+lbyC7SnfOO08fVN4JY3nXar
f4b2s6hk3TfehNQYscfGMk/RIXN/USfLTfB92tc62OuEjhX0fHS32wSFMAJh
ttwBnaAR4Q1w3ITCzIJ3O9326IyB3fuo55twRUcikhV9hC6kf2VI9doEReYv
nCQxO3SFvO9V4LcJKgKE3zdNrdF1Ha3dytBN+PDSxTFv8C5K/hjm3ByzCQtp
ErfEYizRvaWhxd9J+LxbRSveoRYolaq4zXgmvr/QBm5DdzP0wAfHsaUvm8B8
mMhKe+42yjBZYbxbtgkar3Ytu9SMUJbzdN30tfj+wl6fs/logHL46elyt2xC
wt1nY3KIPsr9J7bhaNcmnNOKuHeDXw/ll5kkygzi/XcL3RJlrqJHPORKlcY3
wctJQJtiUQfNobEJrZjdhOHri/ynmLRQgm/CA1jF/T5KnuV5rIE2MfaqV5Px
fboFBW5yq6OGQaxHVKm2wJzCkD17QwWd4NDYrKXfArv3Ht/imZVRp3C3nxfZ
tyBkfyL0ZRqKUvEXZTTybsHMbKT7yDslNDhu3ktLeAvqqZfUWSrOoUIioiYt
J7bA9M/QQ0cFBTQr+baCrswWuFjZGMstyaMXToaxdijgenr6EeZxOfRHZvPU
NXQLcpwoHayYZFFDGeqaX+pbsPdaQlauUQqdKLgQc+MyPq/EbYOjVRx1UnBw
+q2/BWMDDAjzkRMoVenny0a3t2Anp/WsX9FxNBgZFRuw3IIpXRU03/8oKlTN
S2FitwWlHxIodGKE0Sy1q31DDltAW6oT4VEiiCo1vikwd92CIiei+F4EP9qk
jfmNeeB4P0h4qpEHNWxft7J6uwXPrOXKdlS50Am9U+hE8BasXLzp00DJiTr1
3OWxjtwC7oskn8BtNpTqVtzSdPwWaL53PeJhwIIG/+n6YZe2Be4JRyuauBlR
IQumpPmcLfx52x0ueIoOzRpXffFf0RYEiRv8FxFKi16wfn5juWILDsnQdysC
Ndo4W3DKsW4LGNq2U5rEKVGD/2YOrrVswVvHoca0qD3k34rIqHPXFlw/n1G7
o7aNODkblW4ObIFQxLFr3NqbCBU5ONT17xY8/1Vo/TpxDQl+2fhgZwa/HuTq
J+0qq4gQJcVFtxWcvzLx2eD4MpLlrXiEgrwFnAWjRm/cF5ALdP9telCS4TVH
YdO48CzS6Jf6k5qeDJu9AlOY0BRiwDqU8ZqNDMkt0h1n7P8h4yFc3gd5ybDX
3FpiyfQXceC+bPL2CBkO9d8QNJ4dQSiivRUYT5DhnUfm1VXGISRIsJw14BQZ
VmMcM0sz+xGhT6tTLApk0Kl+ZBWX8RvJOi5ZE4yQ4aOY9j+TvS7kQvqdGA51
MhyfklTtjutEGiWjncJ0yCAVM7fR7t6BGOT+vMytT4Y4VBldgVZk/DT9iUhj
MjiMml73m/6BOBQRKfgtcT9lX/GClXqE8oJLX4wtGWo+zZmtXK1FgityCwQd
yJD2suTHErkaEVKe9It/RobFY1EPKzowJKtW6K6IB34eqYoDb46VIxc0DdAk
XzJobNxb3RwpRhqbA3hEg8mgyXRHXnn3K2JwpW4pNYIMEpYr450PvyDjnTs/
TsaTQSuLyVlFPB9xMDiTlJFKBj39i1eMdHMQin67F1I5ZKj6qMekVpWBBJok
3cj5Sga5hUyL2eg05PBo/ynZCjI475sovepMRjKtOOgKaskQc5kxJuR2ImIw
4SDT00IG4dHb7JXUCQiF9S8DchcZ1PMsz0TNxSCZ0/JuQn/IEJ/+9TSPQSRi
YBeWovKPDDNVqKKj/AeEcp7Ucm8ezzsQyXrTOQTJenSD9G6NDI/62vURjmDk
5tJXgdxdMnAemMkV3vRDqBy4VX/RbsORuIIm0nVfJHvV2XaDeRsKZp8GHTjx
GjF88vu9APc25PFHr76444lQbSiWgNA2DCbmlv9efoVku0SOWIptw6uCvtNQ
+RwxJG8e9D21DcqJGlJ+XC4I1QsjmSyFbVhwbaZtnnBCsndLDDrQbQjhsLD/
IOKAGL7idyNd3AapZ2++BTz+D6GmfJ7Ce2UbKDsRIwFlOyTHc6CFcHMb0ocs
80Xi7iNGNASSudk2xHdfGjruZIXQ+MQKvL6/DY3B0zx5hRZI7sFdlc//bcP2
WMy6UYopcuutiW3r022IWvukL+l1C6FhrHy//GobTAd97UwXDJBcf6ESLt9t
4LO1v3G28zpyi+XVyPngbTi0pW/SJHwNoQkePmgauQ3rsorxZh8uI7nsRBnP
hG2Yk6V+QO9/CbkVmmCQmr4NP17pcVIzXURouSjdmvK2QeZdBeZ2UBXJC7dI
WSjG8xtWMq3fJyLGvDUtHNXboGeVk619kYAciD5KUvixDTzzr+KbLc4h+QJe
AsY/t8HqfDJLB+VZ5HbcX5VXfdvAHRHb4cZ+GjlwRM02aXQbzrDb3uAWkkHy
E5LfN0xvA6cie4FRrQRy+yhtyezyNqjk8zmcZzqBHEi+O8JK3oY/Pg/Ym1qP
Ifmi9QfPUO3A2qb3x2k6EeR2mpiMIcMO/n85+7oGCCIHxd8YvODYgZ8x0Wot
h/mQgozJlwn8O/j9+vPh+95ciImUZkrt0R14VEHHM/iaA6HLSW+ZktiBzdK1
X9OFrMgXGXoSk/wOPFfOD18TYERM820E5JR24MrDiZ/2Nw4idPJNKjdUd0Ds
UfUnLSoa5EuhhO0z7R2QucdwfFCOEjFV8Hsfd30H7kg+0fz+eJdAVzxbXG28
A44C9iOF6luEL+d1Rv5Z7sArf+toOs81gmlZ1kGGBzugzyX8rVdxhUCPMMuc
ctqBx6XvKFjnFgiFlQ8N9F7swNeqeXnu0BmCGbHtpbP3DvDpB3AqRUwQGGpO
pUT770CjDFdR1+JfwlfVoJbKsB1wUM3gaBsfIZjXLa6Oxe7ArdW4JMmfgwQG
jasCB1N2gMeu5+Jp1j7C18Y8FcnsHZA+2DDwsq2LYK7FbnvlKz6P1Sz0y+xP
AkPL4/eOFTtA/cFOqMeglfD1cmdxRN0OTCNPqJJbfxDM20+PlLXuQPKvNPfz
ZXWEprNtCwuDOxBiOvrO5BRGOBNrsysytwN35RdLKb58I9hc+eZdtroDSypq
BS/hC+EjFS3Tje0d+KS7uXC9PYtAZ5PA78uwC4eeWs2HU6QSkMMLn0Q4dmGC
RlvdjvMzwaFdSbyMbxcCg9/H5xhHEwbP/lZcOLkLp96mRLHafSLkUbHc0NfY
BduV4Sz5oGDCv6/Gg/O6u/BO2FFi634Igd/ms+Ubg1244GzOKrgfSvBuV3Mo
vbsL67dMedr8wgmGsc+DhL3xeR+ftfvefli+f3b6x1zVLtBed5e5Fnq1/My0
wjWfxl048JzEeVFFp9w61rv3SMcuGDVU+EYd0izvpBKe1BvehfKo0ezyp8rl
qe0GNCW7u/DWqfvue93T5bo2tejrC3sQZfc7+noDZ/nH2PgvgoV7cDHwvc/R
2O6ywDrVmeCyPfDRYzzXqdFZ5rYwKUzzfQ9u5kTepZ1tKzMlygbO/MT5VLOP
n7nry4TGq6y/Le6Bw6mr1FZPisriJMcEr0nuQ6zX7vn9vvCy2NLjvt6J+/A+
2r+wUd6g7PKcfs4TTQoiZcGuzAfljtKR1i0NMW1K4ov1AcVoxuCSbyNqw54E
KqLscd4LMXSqxce+5SqJq1ATqy9bygs5FRX9qqz68FyBhhj5IHP64PTRr39f
JvRTi9ESJ8VvjQf4O395Q5Ew3i1+gPjDdu3ZbRavfPtC9bnrhw8SfcsvHfq4
FpS7IMlYInCMjhgWmqThUK2T3Xwr3p5PlJ440Nt58O/TpYy50j7R71wMRFTj
y5/qc9HpiUPyCUX8jER2hKZTNHcxJVb+DK8BCxPRuTXGwzrqStIaUD+X3GUi
XjO/2H/0UmzCX9aVRC0KFmLZe0umfBu/OC72N41cKyzEkTmC0ppDYHSg4rHH
l9dZiDzlnSeV/7hH05lifK/JLMSNsww9ClkO0eSMDVsSFSuRKk5Nc3nQIHpI
zZr5FycrMZEtsoyeWSQ63eWSXvBZVmL25dMlTR8KoggjjIMMz1iJZi+zWTxu
dUV+PZDurfKSlSjbwPZxEqmPPCWtJu3qwUo02jMt9NIujhRxfeE2/ZaVyKik
J2ewGht54NC8cGM0K/Hje/w1w9EqskOj7e7rclbieJQDi/L+asSlR7YsFVWs
xO99rw1vF/6LqAk78I1Uy0o8XKj8Xsn/d8TXUZTOqpWVOMBScykspywi+nlu
hsoQK1Hujwpv20GvCM5E7euuY6zEiODo+eEPThH+jZPb+ROsxI6g/DRmlXsR
blzCl0UWWYmzVWpbR3cvRWwola8ZrrIShdN3VILYCBH2dww/Bm+wEolCPoeO
a5+KmPElXWzcZiU6RzhaVt4UjrDMDV7c32clXnV7VSidwB7xP2G1B70=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1:eJwUl3c8Vf8fx69rhJaIJAlFkUoqfOOc9yFFIrJlK4UiWZGUrJQ9QwghZO99
zJKdJBlZ15a95+/8/rqP5+P1er/e78/nfO69n8Nj/ETFhEwikeJoSKT/f9bp
8/Tv7u7iglVnb1ZFiki8PCGhYL+2i89ZDGl6m1yWEB9QK56e28X1wnd49+qK
SqQaeQX/GdzF/5twOkPXd1Ui4P6sbG7NLv7d60rLZf1rEnfNy7MevNnFHfS3
k7/vV5OYsdN2bT6wiy8UvVFjO20nweYbyPfh+A5+8aPWusf+Agn0cvVgPPMW
Lrm1h7o5SFKyzyEpXkVwA6cf21k5b/267HKIas5v3g08luZyr1GnWZlPJqla
9xjBMS+0ux+aSEqO3h18sG8DNxVp7Hn4wL0sUvUgt9PMOo51K3tSxZuVaZx3
iP6Us467eOA+4/7mZS3DN8OXrq7jhvPkL9ofwiT5d1c+O15ax0kneufXc4wk
nTkSCnfOEv5fjyPO3/aUFLqz00l/nMhrVkV/PQiUfFeRw3p8dw0n+XTFi4cG
Sd6IOBZ8vYZgf1VPoe0oyZi8+viG0jXchc7v5XPuFMnlVrscpbw1vPJOvTWz
RJxkAl3bD+1EggNN1wZ6EyXJtu5Mlm8IFkw2eueaJnnX/yL34iuivu149Pxu
mmR26t8LDg6EPvSmiYY1T9JwUFzJ1Yxg5VKGfKUiyYrb/3zDbhH9UWZ+i+Jy
yfVHT5Ucr63hGBNFo/lfmeTlt8tMuhKEvnJJRMq6UjK1ZjuY5yxRL5f7LJ6n
VnJk4LU6zUmCV1uSzKq+SnLv0B4Z4yD6409wPr9vkqHiByLTGAk+E+qYs9Qo
yWjDdtx6YxWv/OR7IepYm6RLOles2CTBrSL3IrZ/SK6M8Z/c/rOKu4RINaQY
/JJ8zHshqfr7Ko5NbeVo03ZJDumKCXgVr+IkgceN9mW9klrvIU0xhdBPDRRV
ug1ItvyQvcASQfDv6JaS5mHJa/uUc7q8CBb8lDGrMir5UqDDptSF6PdyLco0
dlyy6IbWlRgHgv3Skhw0JyUX7/WuuFgRfg/jrvGqacnzrw2L7pkS8zzKlp6R
mZE0i6E43jBcxQemKrc2X8xJJpSaSghoEfzAQhbPmJfkWLGqmJEl5qtJPnKz
YElSnWX51Q8gOJmUPyO9Ihkg7CiVJ/b//s7itm2rko2K2+T3FwjOIs1y/lmX
pHv0utbxNNHvS93a/e+bklJetJ66J4h5rpcbjLdtS75IfCsLR4g8g2A758Mk
pKB6PwPvQaJe5Oiahy4VMt8f2ECzZxU3bJRu31NCRoS2WX2IrwJeiYZlRQrR
IA84IhUbVlZwklPXsloJLRInxnUwfWYFx/gEptSl9yC9avFt/qME+38oLb7M
gByx5g+y/ksw3u/3bIURUfFPVVXvJPIaCtP79uxHfNPOs4q3ELpqYSWLxEGk
/ntOJ8fXFdzlepvSryYmhHpMNHy7fAXnfnJJNfcYM4LSlGoP5BP6Psm4ElcW
xIEHjtWkE8w5nm1MYkVy0ZrexESCq2x9il3ZkBkd2RivaIJTD3Tfk2ZHzjg2
GjwKJfpxKzn17+dAYnJ/Dgl7EHz3u1kEDxfyp00zgcV5BTd0v+LKdJ4bOTzT
Y7JiS9TLbzvPmvAgSnsNT/95TKxfgL9SO58XeXeGMl56fwUfGNB/84zrFFJ3
3TQ1RpfIG0lcbYjmQ0j3ph+9ViN4LfZ7zZXTiF300swNGWL9e+Vk97YIIvxv
vZXzJIk8NSGOO6lCSKctbw7PFaKf1ST14djzyBvDYhb/c4TfxyPPS18YEVdQ
ttviW8Fjn5cYJ726iIyLjXWacRF+raK63/kiSMTJl+K/2Qi/d3WMwNYlZGPj
y2b2HiL/0xWB462iyJdRab0TJMK/aPAv3lAc0W3/U+Gztoxj7gWiMfuuIvsq
rLg35pbxyhE/tic/JZDylD2uDycItrr78Uw+gliGxgx3DC7jLisNF36WAcL1
+sp16e5lnCQ1zJG5gCEuWvfojzcu44ZW8jL7VK4hF2U2zN7VELpy8/sDsTLI
0IXAxtVSov7ka7UKmhtI0LEz50zyiHy8sULxtSxybQ/u155G+Bf8q1TYbyJL
C+pzkEjwcy27yHp5JOHv9J30aGLelIQK31AFhK6Ag9XLj6jP/h6beF0ZKYzL
tl/2JJhXjZSrewcx9ZXrMn61jMeKcFzU91RB2B37/2t7towPDFtpiNWoIt/v
239ArIh5FrvrdQ6rI8+V92+nmhL9bjxRSXLSQAQlE/TZjQieV6z33tBEfFja
eRbvEMy73yL+ug6C7Jq6GcoT/cxg+hGLHjIzuUtpliZ4z++PziQDJKYz7IaE
BDGvLu+mv6cholR9Ljn5EsEv9c9oRxshpIxaBjah/+9fzeKnr8ZIVoTOI7dT
xHwlqQfVqe8jzE/fntdnJfICVaMsSh4gNbrcAY37CXb5SFcpZorYyhXOi9MR
PMtfTttihpy6fFs1aWcJr1xRrqt1foT8OjGSx7K6hJPqvpGcb1ognntfsL2e
JVjBgm/h4hNEdJXZYWZsCR9oPbNzNtoKCW/BJL53EWzIJrDw2xq5WfI7SvQH
4RdiGm1lskU2Ei13Pn0n9BM3T7/Ts0NSA2kND1Uv4bFfVi31cHtExzmq6mUJ
0Z/3S+JnMQdkn9mlk9M5Szh2y3TI8psjUqbW4K79heBrNrU9Vk4Il9Ca7OUo
guc1KnhYXyGtR/xT4kKIfo43v3e+dUFcqPn3HvQluH/12L6I14jwbNnjFx5E
fsEii32xKzLYrdoy4byEG/qo2SRNuSFBXycvaNoT+ub91QMXPRDpnNeBtZYE
z2bb9L7zRBLeZqp9NCDyPthbiLu8RcSfHTc11yTYRNzzhrQ30nTf2+mKEuFP
1mQt5/VFDFXW/UiyBPuGTL056Y8swcP4RpRYr8f6/MNPAYjXuV/5YaJLOLfJ
w1GVb4EI57Fr343OE/rmcZP2nSBEZoVrbvU4kf8cM4tKD0W6hn2oa1gJ/qTD
WHb6PfL4xwab337Cf+ehPE1pOELCTQW1aYn9kC5z22sWiYSkdSKnthfxyo9r
/CGXopAzkTJ3ZpcWcZcXPbIOnDFI2Zuc+yXTi3isauLdTuZYZMTYz1u5dxHH
xH45tSrHE+d5K+ZYB+Fv+Fhv4vMJOYCa54w2En6hDovC3gQk/mxXXXbNIm4Y
oCN/4loSInr0xp8XpYS+5ee1VfkZaaDLm5bNJThgp61JMwXRX+IhsXwh5rE9
qXKW4Qvi2brNnxK5iJMebiyaVGcgHOWPrtoGEf2pSr5tPchCMlL/KMI7It/H
vhB3zkakw2WNGF2JeTK4pIKScpBOj3zbX46L+EDBhSG/oVzE3OakV+xToj5s
RW5BJB/ZMQz88MiM8L9JGCdFFCD8khbVVNqEv+Tl8/QvxUiJQM+vJmVinlDq
j5hOKXL7yM2J93IE65QG2fKXI0M0hVvGGMEvWmOpD+KI/cIppvPiRF7Zt5N6
3pUI40DQyfULxPxGHfnfPlYhMc0ksdrThG6AStfVVSPfknv17h4h6j+nPJ+Q
r0N0w+Sf8h1cxLlXj+21TPuKzLkVuc/R/X8/YsblT9Uj7k/5w0t3FnCX5FC9
7tzvCLtByBfPlQWcRDrzLUi3EUlTION3ZgjOyNak4m5GsKtW7ZyjBOscVa7e
bUFMWRXWc34t4IaV3x8m+f5Atsgl+142L+CVnLT4o/R2JGDuNPfNOiL/tCb7
yf6fyKm/oZcOlxO6ffLk4MlfSFEjtWx/HlGvPne3+UUnolD89G5q2gLObbcb
wj31GxlI6rewSyD8jIu7PFZ/EHrX0pC9IYQ/NDQLr+lFop4IJHd6E/k2E0pq
oX8RYb33pXFuhH7tUcdXqQGkVp629bETMW/sGAeT3CCiJW4zJGZD5B/73WCh
P4RM8w0ukx8RurWz4S+PYcSFRYmhxZjI2/TllMcpSMqMoPB9FYIl7qdkPR5D
XB9Ih6jLL+AYh8LQXM84ovtXe+2GNDHfglXoQaNJ5ECLV6WACJF/2+4nfc4/
ZOx67KljgoTfdishzmUWqSwv9NrHu4DHNgt/vpU/h1injyrPHiL6v7ZUdGpc
QG7x7eQNMBCcViF0f2YRORXNerSdiqgfyNC7z7uMdPrIDObNz+OVF/lyoqtW
kUwa3etJE/M4d7/R8cXz64jXC5uU94PzuIvl16aI7A3k6uP4p89/EHp6niW+
uY2wUIp/Pfo+j5NOUSd11+0i0zo//tOrIvLeSFtK/SKhMbdIZCx7Ho/9sTJe
RSGjz2qOPLiYMo8bhuc5e1PToMoSFxp444j63zO9nSK0KPVZ/SDaQEKPeKOc
/nUP2htvt7LiNY9jN5SXr5xjQAs4fO+OuxAs/JUXSWZETRnLeButiH5XB/L0
B/ajUq4/PctMiX4ec2PTHw+iHBuTk+mGBMemKz0tY0KbJo7mBigT/RoTl9Qr
mNFEo4tHXOWIfiasyVK/WNCXf+ScbDBCT65dGNk8jAp/f3ZNQ/j/67vz8YfT
EZRByv+z7Bmi38x60UInOzpUlLT3P+55fOCMh83r6xxoaPKvn8eYCF04fFXA
6Dhqyf1PbD89sX89K4FeTCdQuXCaqJ3dOdywm3959hE3uvHm0v3B2Tk89vrG
zm9tXvTnrnx9+9gcjk141T0zOYmmPTMWqu2fwwfM2tJ7Xp1C9R8GLiW1zuEk
w8v9Jyj8qFh/slb4NyKvl/F5zoUzKJNmZdlbnPBnVQ9Y+gqg1Tdm3R9nEnnp
C7tybkLohwq6Cb3Pc8T9k9XN4fh51FaUS1HpI6FTtr6sNF9AT/Mrsor4z+FZ
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
esilXvYRfbHPYtk8exdkwsrM9RVjUF39fOM7lbvQzZu0XRjzAVV4ox1R+41Y
L9OdzSK9SFQya7tVrHUXNlQuG9QLRqCc5BsI199d8JL/cqh0Ogzdd3bSJnBk
F6Rp/ua+HghFt1T9Umn+7YKos9Es50AI2pvYeWRqcxe2Vw8Md5CC0QcPkdOZ
VCSM/3OYFIknCP3r5F9tSkvC3FwreY7fCkRbEi6t9+wjYTQ/06vW7f3RG8Ue
IaFMJEwwqffPKJUfWtH8+4LSYRLWI6Oz5R7tg2asOD2oPkbC4nTS+beo36H8
e1uoXpwgYZ+9B4qdmr3QmBPc0VdOkrDBf9NdawlvUD+52p/JgiQs1nyg2N3J
A6XTY3tifJ6EHVYa+/vE0R19+dSUkVOEhJ16JfqLyc0NtYzcJ+X/HwnLP80e
YlH4Gh3N0O+VQ0gY1b5k30uDLqh+TdYzshQJs60dUag57IIqTqtl2MkReSFi
ONsFZ7TjVamViwIJ+0N5GW2T4YTeZeG95K1MwljllPg3sefog6uzhbFaJGzJ
zLN15MMzdLpZ/fkXXRKmdcXILtDYHrUxKpMsMCRhGVNcw6vidqiL19uqRlMS
tm7i0jJ/yAal45xz63xMwmpsa9aOslijPpkaNwatSNhI3qgdH89TNKLzZOOK
AwlLMPE58LPaEuU2f+dL5UzCNv7FPJs+ZYEmbc8p7XtNwvxC6wqORT1Cc05V
dPC8JWE2se7xcXWmqHjRqfdCviTs+OFtfkb7h2jFLW9tsUASlnzHmOWL2AO0
0Vrrr0IECWM/WjFzZeoeqkKHx2pGk7DJgKn7b3uM0a4IvnvGcSSs+XKd4dgf
I5RSuTD2LIWEvRwSr1jfNEDN1bRTXdNJGH1K5sVmGX10bgx/7JtNwqRjtTde
JOii2wd85+OLSRh+5WM15ZM26h6/mJteTsK6nr5zcpTSQhlF79oXVZGwjhi6
zPh5DZRN7/Rm83cS1sj4q3jNQw2NmvMt72omYUcE+L+YmKqivO5Lr4Z/kDD1
2FaRUW0V9MKXKpr1PySMkblFie2hMlqAnvlG/ZeEdVIv92eSlVDJdr+3B4ZI
WID7QkqskiIqt65z4NQkcR5lM0Taz8mjLT7VbednSJiw4qPJ8jI5VJ1bIPi/
BRL278vppEcGsqix7MoRpQ0SJhV66AapVwYd79bt1t4hYU/WZ3dIeddQS8ua
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
dIh+09b99Wo69X+eKLgN
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
b3RVC+hj/g9XQvkJ
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1:eJwVV3c41u8XtvceJWUmZVQ2Gc95jKxUEkJIyKqQSpQkJMn8JklCVpKSkYzy
ochIGfEaIXtn7/l7f3+9133dZ97nnOe9PiL2HiaXqCgoKAyoKSj+/1ttK/J3
Z2eHsJupuj6w9BP5C6kZea/uEH1tYwUr138hlT7TkqnZHaJiiM2MbvEXyr4Y
+qSzn8xrLX09vN6Ioh1n9Aq+7RABNPEfy9mbkcEBxo8Sn8n862OR/OeaEdWI
qGhK4Q7R9LUi8L/kZnTT2XwzPIOc73TA/VH5FmTl9uWD08MdwnOJ5Jjk9htx
S7UL9NzbIYzvPtU7W/YbNUzOhp312SFmbb6Y6LG2Irgqdgm77hAf1GRidgpb
kZjn4z38J8j2cxocyjwkNH3TMvAnG9n+btaJw7s60Wul6zPa9OR8T2qMD93t
RHYr4dalO9sExzA/y8fhTvTbp0Lp9ew2Yewq/SuhrAsV3zk4GdCyTcjs1t7R
uNONrqlrWqzUbxPCTej9lZluJLllVX312zaRQqN80+ZSD3rpH5lsVbhNNNm0
MyWb96LA+0tnFeK2idlbFwveHexDalrsldmRZPt2uzcSrn1okUriiMjDbSIg
hiny1ds+5BxszcDms0307bb1fCLfj4wefvs8akn272KwHjk9gHZFxBx4IUCu
7+4zk6wvQyj/dKCOB+82YeekSSrYPYxOc1130GbdJj5EsgzKXh9Goc9MX01u
bhEy69psiUdG0Mar3QLq3VtE05FPlvWfRlG8I4M6R+sWQUG7fIJZcAwpHFyz
GvqxRXBYmTb8ezCG3HO64sPLtogP1iFRH6zGUV/RS56ehC0iui+2oJ9vEvn5
Rsrn/UeOV6fEPRg+ifao3zN5EEbGLZaBpVRTyKTSLvrw7S0iQFYwmn5xClX/
2M/ib7lFzJpF/x38N42y+95QC/FtERUPxIdTU+eQblqC6AL7FmFcP/GK698c
Grz0WLOGnhxP7vfptyrzaN/klXseK5tExXOTPpff8yhq6egGQdokZF5cqY/Z
vYiki4X5Y39tEgEJnSnVlxdR7W3OYy7fN4kUgrlEt3IRUVEseHMUkf11I6l1
PJfQDaaiebunm8SHBqWlj73LiONnJqdiBBlHddv0aqygd1HPZBgfkO1tF5z9
klbQCI+ve96NTUJY51fXEcdVZCmkPkFpuklE20X9R0+1jpDC1/5ULnL+v+xa
z8O3kHF1dQol8yZ5v0w6P2xtIQfzugt21JvErEeQjp3nNgr1aeoRWNwgjPdH
cCZa7aCWz72d8W0bBEUzX1X0KwpwOr7RHBm/QRyynD5RVEgFPqTt6H/RG4Td
+maq6QYVPHamMjZ6tEH0LdTX/dOihg+PGH8x3t4gZqmW7wu0UcP6z931wec3
iGj/u+mNtLQQaa7w9bYgOZ/uIY/QF/SQMqp8v3PXBpFyc1jafYEeCnzUsAo7
Ob9y4emHRgzQkaBVvrSzTtg9G7/kQMUIon+NSz3714nonM06ubtMUOR8Nd8p
fZ1ouhER1pbPCrWrnteqE9cJ4dJphb9CbPDn0Q0Zsadk+1WP43aRbECRc+d9
/4N1ouLp0Lk/HuxgOPso29p5nYgP0v/8MpUDenwyU00k1wmfKc16ymQuUIg9
m98uuk7UFm838vRzQXguxVfrvWR/kf+MqcW4QX3Eqt+JhRy/xePU3RxuSDjL
Lnxneo04lJz3XqaWB8yP+LxMy18jAkoqrjMe3g3vDQ68O/R2jfhw5MdhYf/d
QHup5fO7tDUiZWmdATfthsIX0t2fYsn8yIGM17f4gIuxn7/Bm8y7Kwx6/N4D
vwYN4hdV1wi79JeVDZX7QHxn+bWvPDn+l/Oj22ICcJc//dO21Box+9LkmOcj
AZA+s01iEFgj8O7LEkLmghBWns8rsLNKBGhkkHbvCIHu871Pjn9bJRgWPh+/
VicCSYW1qfVl/+cj2idpRWGp8Wb+6cJVIkWtreeAtiik0zU1W2asErX/zNb7
CFGguhHM4f5wlfBZXovJ+7ofyk/9i4g7sUro99qeqJg5AGuXr5321V4lDi2E
RISCOCg8WuKwVlslhOd2nG2jxSH729YTEalVwuL8zDQoHoSnKmwJOUzk/O1u
d5TDD8EV0aOZX+tWCPxJI4nCSwpeQ4FzRuUK0Vfoc1u9VQoGrJUlQktWCJlv
3oblytJg8QxyTr5ZIQJkNmXTqA6DNotxfkcomc87Y2GXdQT4lz3Lp/VWiFXR
aIukvbJgxr10rxnI/HKVdO85WYiW8dUsVF4hZtPewECsLNBdvl/le3CFYCiJ
VMKccjD3N6aehn6FsPMr0YvllofaunwS//dlgqM8aOATVgTqUaX4rS/LhMrV
4hcWYYqAaMos+z4uk9/7vpyhVkUoQN+6MzKWidnDjX51V5QgqeD3gMyDZYJB
aamVM0sZbr5cnNbVIeOSqP08p1VB/NFj40J1cvzF190FqapAuiGaL6K4TFjc
EDimv6IKKkbGNzcPLBMyVMS8RZoarK+/3cijXyawYKWhPb0GBFg4MAj8WCIs
nIwDCigwyOqsu4Z9WyJ8jpT1VcthGDga82OlbIkQxpZ8LpcwaNMTkS05SwRf
u1XXxQYMdEX8vKGRS0T0kvb62VeaEM7dIrJwZomIjzhKEeqiDRo7LkF2hmS8
+DTLKF0bpid2hn5qLRGhkRXdJX3acPrr4aws+SXCWOp+ROx5HeC69uiILe8S
EZAhZHPb8jjE/8JqdR2LREA/++7IW3qQ/ijXNPnCImGnWRvVZGAEKrcEXNzO
LRK1c6dWUIYRNDg+vqN4epHwpHjlXUp5EhbBOfUHWiRmvcQ/Dn45CTrLgrMr
AouES7nFyZPap2HYPvKxcfcCEf8mbzpA6wzcNt5M2tu6QHRwTZef8D0DbMgt
f+THAtG36O1Z+OEMKO3R7fQrI+N9jWWXREwgpHFL/E3CAqGfz/34BtNZEFe/
+pXScoGoMKBozN80hVKJP20NxgtEqBBThiAyg1O7Dcaf6S8Q0afFl7QCzMB7
XozjiMoCUZt7Yf9nOnOoyeq2sdpNxuGSdmn7zoELr9Fafts8cai7Nm3kqiW8
mZaUcTSZJ1x++wlwFtpCoJNWrJnhPMGRu3b8KdsFsO61XNXVmic847q4GN0u
ANuv0AoJObJ//5NdQ5x24PVuxHiGc57oVltP9Wy2A9UrqdduN88RLNIqoSUu
9sA9VNJ2uW6OqOJU8t56aQ9T55uP2VTOEWIOC1o/fttD0gkKKpw3R1wpSNdi
1HQAainb/2hj5ogm2Z1WGVFHaBjfUxBtTMYvEjZ0KJwg46Ls7kD9OcLull57
KXIC/079O9fxHMHg3P3u110nkKm7pW0uM0dYKHa/bNtygqdZbb/3cswR8Vsd
WiG0LmDrHLOY2ThL8BkE579WcIPZIQalL6dmiabjD7mY9nkASMmrHtObJfoi
jhtoXvaAyGs26CPMEhWSP1MlyzxAejtP953MLJHVwe0ffsQTXHafP/eSa5ag
+SaeW9XqCcQTq7n1nBmCYjytYkHOC6yFc9fmX84QFn875jztvGA9h5pqMnKG
UPiou8ck0guUvudw/fGcIRzF/+3XnvSC96vb8mUKMwTN2foTi2+uQ5JNmved
z9NE4rkDDMpqN0F9YsX/+rtpYuznpRVDj5vQ5W308HLSNFGV4pPzK+0m7Ipe
enY+YJroMPHwO8TmDZFf9UrUdKYJGS9lb7Uxb7h7cGpj48c/osr27mJUvg9Y
zync9/szRVCknBV6l+EHFfeV/x39MUUEcDqmUc/4wQEuVcvBUjKuGijeVLkL
03Iga5gwRWCrBIE/v+7C/RsG/bstp4jiyoVSF6p7kLlio1lAmiQ8NZech6sC
gCnU7p3T90ki56qJ2cR0AHjwOezhL5okVOw1/xrsuQ8qx1zmAp5OEng8Rn6v
x334cdvr1SnTSUK/yHVyt1AgzG6FUE40TxB2E3M71DFBYBr56OrLygnChx7d
3qwIghLB8E7jvAmCb14k0HIuCAIhJu9T9ASRk5z7Q/tsMPDef3HxwekJwjid
z2Zy7wNQpflQKfxznPAx5GffUxkCD5g675+rHSMWP0gIpVwIA5Iy5RHhkjEi
PLsl5ezzMBC/JNE19maMCD7f+fDa7zD4TvjK3X48RnRrH/89rf8YGG7yDyae
GiNMMX30jko4hP09rzPQOkpY9D7Fm4cjIbqwl+5q/wghl6BAVaUcA339dAWK
LSOE5DmTwbbzMSDLfvTC9tcRguKQoK94QAy0uN77FJU+QqQeE9oMrosBbiFh
l3znESLJ0X8FLvwHcY8u1q38Gybq73mR5uOeQKLt0OPA9SFCtOaIlu+xOPBO
udD5bHKISAx3duO/FAdnBrrE33UPEQo0eZcoY+KAzqm5sr18iJj15qNNHY8D
z6vlK9JBQ8TUvkxFpaRnoO0X79DOPESki423T/E8h4nnRmrSAoMEhdSITaZq
IlT9qQnVZBskxK5NzsZ6JEKygDbJfGeA0JHp/tWSngimr45du98/QDgqeD3T
4HgJX7LEX5MyBohE7yNh7RMvIfoTBff9IwOEwtV2PtvcZFBuK5xog35CfXxK
u7vsFXTw977IPNpPdHt9K9PufQW37ehP3hLqJ6zRtM5filT4PGmZy7fTR8gk
7qAC3VTAVDvXz5f3EeHsawW/W1PB4KjBVp96HxG8yColsJEGRVxlQh3Xe4kU
sU2ZLc9MWH3JGuh7tpfIjDbOVU3IBFUJuyF++V5C/fnbB3nfMoEA2jc28z1E
34P+1hO7X0PtldNyg549RJZ200HlytfQ9X1QZ/pqN6Eq5svJKPwGtm6zuNG4
dBG6e0skIplyYBfONmoy6CLcxh6ZrCrngAyt/tFEqS5CofOeYPylHHCMClqU
n+kkLByWN30qc6A+bd3fwbuTyAr+dfrrnXcQ3zD25GtwB1HPvi4fsv4eFASr
vwS8IhHsqvsnczjy4NSgfYpREIlQJoL7GyXzwCWLIojvEolI/yLYwnY8D17I
qet/OEQiaD/llvX55gGVXkHL39w24gRbuWXbUB40ebwaReWtxFfEe5WuIh8u
V97l3OpqIfSSL3WmPi4ErshbZVDaQnAfJ7oa3hZCqdW1S4HPWwiODFk1voZC
YFh0LKG3aCE0u835uFk/Qrq40UWutmaivv2t5PPoj9D9mD/vYGMTwf5ZpXPo
ZREk5ri/Sg/5ScRF7pW0ai4GB1K/0Olz1cQ+uQN90c+/QFelyBrd7mritu7u
n/sqv4Dxu4st5aQqgkl++Oj3sS+gHtwffMS8iggnmLY8Vcphl1z/OKvZN6KO
PVNCrLMc6iP6ChpMKokmr3dPltgrwC6sPCo2sZT4XNCzsO9iJSw3ehG8vBmE
883jdzUkqsCSdrcig0cBSAmY75Yrr4OM+Znl8dU62LXLu7NksxGKOH5EJCjW
Q3+zmEcbYxN8P5IpdsKrHuimPBcMeZtgzM3aJGeyHp7PMhVLSzeB9GDtO/fe
H1D8k1e6zrIJCn+/clz49hNEs2r9zQqbwL5LwtW/pgnYjtyMVnFqhmtlf0gP
/2uFbw0OpVQlLTCl9c/KtaAV/ovpN6CoagGX+u1ew9ZWYOsqq1381QK2nSKj
rLvagD8pW+HrUAsYrjivPHneBlm36A5Nsf8GUfnF3SkpJDDJjshxdvwNv7NZ
LIvfd8DL1gt1FrStcEpOsOd5YweknikPoWNvhfqSoxfvzHaAHMNB/Sy+Vqio
NXFFcp2wUKV3t0aqFXJG4n2rPnYCTdsOeJ1phWDRAwlNn7tgLH6h91JCKygm
aPwZq++GeO2I0KOibZC4mrVPdrIbZih/BLJJtgHVOR5bX+Ye8NKqufhXtg2a
uCf7GI16QHUrO8hcsw2uRMSPSP7sAX69V6bxF9ogPWBh7kpjLyh/bPawIvfF
/NdW/uNML7CcnFE+ndIGXhr1N7bY/8Lfp201Cq/bAK+nrEQY/4VDka83mgvb
oPv6qa33zX+Bi7J4wKSxDcIKTINXXftgMKwhyo6SBOX2TBn7bvfBvrRmGSt6
EsxxVlTjsD4o+/EwQZuVBBaeUvSPsvtgoLosfJiPBOKHqcL2TPZB/Y0SU8ej
JPiamRuleqUf6A4ckdS0JMGy2aUPtn79EC3Q/VbGlgQStHubA8P7IUqYdQ+7
AwmiHUK4fuT0QwMpOyj+CglshW2env/XDwfz6bS6/Umw9pzphZ/7AFyhStwv
QJ4bzkm48/juAPh9zT9emEaC0HJJ64TwAdDw2j+p9poEfIOGAsXZAzBrdDB5
33sSKEs/Tl4YGQCSBW+DaBkJ/NHeAKrlATjLe/+QRjkJvhu/teOkHYSPni/q
9CpJYH7zh8jR/YPQYdzz+XANCW6WM6e7XRiEXxVJaWotJPjc9CLY130QuOqy
7dpbSUAzKHUp9O4g0Gq+lXJoJ0EsvZF45otB2CcV22LYTYLuPd10H7MHoafv
bGpmLwnEpK+MfisZBDuiyHm+jwQFxuFZ/e2DwMt577PlMAnW7fc9mh0ZhJL5
b/jmKAm0bua47iwNggPD5fSAcRK0PG+QFOAZghh91iWnf+T5DLC8szAegqLb
yrLXFkmgspQY4XxhCH7Iqh5gXiZBAP1hd2/3IXg86dgSu0ICDumTR2PDh4A7
O17v1jp5nqiHPe3FENCIZtM3bZAgxfjqbF72ELzKXPTk2yLB0ZsReY21Q7CZ
XC7js0MC74cC//W2D0HoikVAFEU7lD9/5/VvZAicNO0vx1G2A12OxtnNpSGg
UyifDqdqh1PlP+WZaYeBaf91+uvU7RDXZMPDzzMMeazZ+fo07dA78G/x0P5h
qMh5/4+Vth3El+62KcsNw/y9mY9fyfgqPVuRriYZd20xONO1Q+GepDgz42EY
n4sYWifjTakjtxwvDMPVYW9df/p20EHl5667D4PEr3zpOTIONz6lEnh3GPpq
bJ+eZWiHVvtevpjwYeDdLPXPION9N93Xkl8MA3+O5OgIGTs+3O58nz0M31QV
fu5mbIe3zyNLv5QMQ5Ti/aMqZDz/VvBFQ+0w6Nv0suiTsWr5+zt/2ofB8L2a
ox4ZBzYh64mRYTjokqOgRMb1A7/U15bI9fM43+UhY64lWwEG2hGYiarWGCDn
s6Kf2drFMwL9zMdvJpNx6p57vQf2j0AVX8h+IzIel2InFORGQOyNkf4YuR83
1Tm1UK0RCDsvaOZKxlP6v4v/mIzAXi6XORJZj6vnPioedRgB90tuArJkPH3p
WX7g9RG4NRHXeYusp8cN36OkoBF4oBQt/pas/2zg+RyJ2BFIHZCg/UGez3yy
UGZT4Qi8+3v/ThN5ntffU+4Xqx4hz72bt4g878XPg8m32kZgQYNDL5S8D8ud
r58LLo+AU5/5zflNEtwae7TLi24UeC5EeoeR92l1+fKT6l2j4M4ytoudvG/r
3DIRV5RH4TSXE/SS9/OOKBdThd4o1PQr/Ty0RIJNmcUQbotRGK8MpLVbIMH2
yeKAUp9RYMzZDoydIcE964Qt1kejcNPEvjGGvP8Ul/1uX3w+CgwyWa13JklA
FYpvMJSOQreZFf8u8v0ExYnOna8fBS7VAIfvQ+R7zaBxz+0ahbgbG94OAySg
+1rrbL4xCpcz7nA49pCAedP4fLr6GCQV7aTcI997OJN8x4rRGFgkdfyKayQB
2x5esxM2Y0DXSL2Q0EC+J6XOU/N3x+DY2ICy23cS8Hhe1MLEGAzWqFw7UEKC
p/7axJPGMaCarmHN+EiCXREH1Ef/joFPZGYHZz75vcoeV4ykGId/Gu18Bdkk
2Dd0TaJbcxzmWJckeF+Q4OX82cyjJuNQOpgquBNHAkFKpf1B9uMg4+f+gPQf
CYQF1/dJBo2DwveyXyfDyO+LRSCHT9U4uKr/vHDBhwSHG/5b4dabgEgGv8jd
Z8jvs8ZpBRPzCQhk0f2kZES+/1zma9GXJiAsnlZPV48Egf8FT7AET0BM2fhX
JQ0SdFh499BWToCQm5i+7SEyP2z5bUV1EqaPZbQ0bbQB37ldFEqGk7BMo2y8
sdQG72pb1G9YTsKE6rP+XbNt0PH2RNHsrUnQsTH1EBlqg8NeGm/GCyfhqN6d
sAc/yPy2cNSfI1Mg2NlWEfusDa569vzYg6aAlsb1JCma/P848JzB4uQU/GT6
VsIYRvav5gpsvTwF4vcbXHT92iDwMc3Nn1lTcO2r/Ws+OzLPN2ZFiP6DPaXu
qocPkHnZXPG0XdOwHnakPCCjFSIi+b7GHpgGzusWqsdftkL85H2bEIVp2Jwj
rW3FtkJuhmmsq8k0aLk+DDQKbiW/3+uUMpHToFLHeveCfSsoUR3v+Uw7A/v6
B10u72uFyZauJ6TFGYhVFL4YE/obJFWDKB6Mz8KK/6076zot0DBity9lbhbs
/ZKDPY+1gPsTpFK2NguZSrIUvYdboGBqzWOOcQ7i1jc+JO9qAfVkz782knOQ
iTreVow2wyka23Kly3OwuPAtPzK0Ga7/UvEbm5qDqGPIgbG6CT7bT6+cmJ2H
QwU7id02v6D9X8aEW+siZLc8PkBxuhb2Ubx0FuhfBqlJhtPm3F9B2GS0T2J8
GdzPhI7rbVaCWLqsldLcMui8rh/SHa4Eaf3vRqcpV2D3kpjV1U+VoB49I3tf
ZAXsXtmU2lpXgo2w1ubQxRWQnGEyG8mqgCQ8Gp0zsAKv/vQ8OJRQDkL3ZUvV
hlYBOA0+LYaVwHsa1ydfJlfJ3wVlJsecS0A9NOUKLKxCaMrRrRfaJWARxS6k
TbUGFilz+WWbxRD98l+QofAarKxQr1/yLAaq0jcnLa3XwM+SM83D5hMMz4v0
e7euQaq8/sCTUx/hhrdl6eqfNZjIJJ19d+QjUK1HP7k9uAbak5ttw2wfyfdC
oes/vwa/U1/tLmwsBHP23uwHHOvgYLHUVG1SCLVSCTdijdZhau6tDGFbAG8d
uRjyq9bh/M831dSReWA+4nWU1LAOFk+X9NM88oDC5bf5eus6mPFIiTqfIfOX
YzO0htfhGqd4yXle8veD1y7t37QbUHHpacJK0gewuMfvv6i7AUxHq08MXcsF
ugTRRaW6Dei9JiSlw54DeXuD9p5v3oAkNYUQzz9vwfrloNa9zg1QXVOKHHj9
FvJS0mNqxjeAKyBP6JkmmX8tftSCaROi/a48RD7ZUFAo6eZ7YhMelac1Os1n
gV2jXF/Zz024Fgf0jHsy4WlggLNZ2ya8ry0mAmczoF7x1/R09yY87NdsUajN
AIVE1y2RqU1geJ12VdMnAxhcU/hDmbZAKMpbf7UrHT5QsZmZ6m1BRvTTvaXZ
abCjOF43VbEFdjSJRz28XoHCuNKZkNotmIn/q59p/ApcEoM7hJq2IFftzH8c
R19BC5XwqMnfLZh8c5zGfyoFMhvNaUq2tuAaSAR+ck2BU65V6IHqNtgfz65d
70qCpMTkAoHCbeAR4gw5IPcCIqu1J6LLtkH8/LuF6o0E8J8eFab5tg1WMfp5
X6oTwBbLRE40b4Px/kdFeVYJIDhU4fJpZhsCJx/xp4Y+h5dSAwJnpHbgc1F9
rNniM0gsFQsNTt2BqA2jk1EMTyF8sLZ85c0OfMwqUbncHQt+LFeX3PJ2wHXO
/fCTD7FgbfvR/kzFDjjXNNdVW8bCPipdDcHeHQi5yL7wNvcJ/EqXX/vDQoG1
jkZdOOz6H5ycMn1/U58C6yk8+PqEIxpa75V5BhhRYN0tRrGw1iiw4haVf2xM
geM93kc9CI0CJ9WZTykWFJhn/+BZ7flICAh9VPnDhQLzCTBZfm2IgHyx8laR
RxRYTjhEkO3lY1ApFnsmHUGBW37r6cdZPobyE48tlWMocICgZPSbXY/hh5dF
r9FzCjxwWlvY/b8wGKqYH731hgJ/NtGbOBf9CHbZHNz4WUeBY4t+GyylP4TE
2YgvHT8psJOzy+IP14cgGrx4b7CZAuPmjGfCRx/C0beVNGudFHhXAEUsLgsB
/bXzbGITFNjKKn3v8c4HcOdptMhtJkqcLP/p5AepYOj7uaYnfoIS+1LspOaL
3QfpdfPSyVOUmO2Q9eL39QC4JV4onWdCieXUqn/KNwcA2z13TnUrSnyneL6G
514AqMkMdp1xpcShZZce1Xy5B3H/NVy9+5ASp0cKHXe3vgsD5RJ9Wo8p8VeB
dEch7rtweDLEhCGKEhuy1j31qPeDKm1N5SdxlNj+zm/SmKofzC1+pHiTQYnt
rA0/C++/A0bnkp+0fqPE7i46J0vYfSE+aJM2oYYSbwuU/fvT6AODuZY+F35Q
4g+Ulr/Do33gNgOPzUQLJc5Jdrv0lNsHXpeEilMMUGKFd905B4RvAdU+rxIp
CipczvqBydnkJnzq0/kbqE6F72UtSDXyeAFHeJHPc0yFU91TK7r6roGb8iGu
DzpUmOnDbez27hoIRjIf7zGiwpMFPhkc+tcgWK0lW9mGCj+kke+2DvIEk7gL
3lN3qfBnjhFtNlF3yNFsZqcOpMK1NmdY0+uuAt0/rTd7QqhwaVmGgbDXVSjR
Fu/WjaTCWp+NFaqqr4Dw3JTmqyQqnOP8Qino1mX4d+I2qzlBhfkyusPlqV1B
d2Uy88o3KpwQo8dnWOwCKak2OKiGCtt9W5g65O4Cpmv4+odGKixcc8tMpdsZ
SjPpO5n6qLDCe036q5VOEEr5NJ2goMZxNVHMue8dYf+nXDUJLWp8f0pqWZXx
Imht7H6wfpwa//ezWv9Vux3YQcCvHwbU2GU/W86jTDtIqjG+6H6GGp8RjWPs
Pm4HezrmQgrsqDFT8ey7XzwXgH1NvkXjHjUek/ipq2lqDUc0EveyB1Fj+9xb
4joU1mB0n+ZSXwg13s4sOnjo3XkIY2xbCYykxpmutlaPGc8DLb+3QO1LakxB
eXPsQYMlbKgWu5h8psaGKqb2T3zPAf894fz9FdQ4pNScr1TuHKh8C91Y/EaN
P18+1ZY6ZQ7eJywjn/2gxgmFhYIF9uYwd369oLuLGifyHm9OPGcGo37qO05r
1DhMOVuP3eEs0FWm66tskeOfSXgadPAsiNGy/sdISYPd2nzdkqZMwD6iRyyH
gQbzP16ASh8T6Hnpbzi3mwaHOQVdi4o/A7/LK57eUaLBoXFaHtPjp6FJo7Xo
mCoNnnqz/7x46Glo+DzavqJBg8VbwhY8Dp6GqlI2/hvHafCNk2tRh11Pwcci
66QrpjRYQUnIm3HNCJ69X8208aLBrQ9Eslj1DSH2MEvtXm8aPP/zW+ThZQOI
zhEa7/SlwUUcwZLKGQYQmq0rZX6fBkcmdR3bpjUA38zY3FPRNFhHubJrb4se
nE+SKSb/qWO/51T6mf8dBwsBnc6tPBpcnBVzwuzUcTBNPLde9pEG60tK7v3B
dByMEvzVVb7Q4MR6EgN1iA5oxDVUyDTQ4PJ0p8ArD7RBKNKlTmSCrAfjjP+t
TE3Yx+o38fcfDV53u97/5qom8IVHMSfN0WAWr5CPwYqawBFWdJJ/jVx/lk+u
dA0GyhCaFi4GWhzcY+chNQQweDeli1qcFjv92d/yvk4dpu/UinJL0uK4fv3o
Vw7qsOo76yZ6hBazyEhGDmyrAZs33sBKtNj8pMMfOKYGKu59e/11ybjMbHjr
8zEItxW2WXWixdvHXqRabClBnLV+Bv1lWpz4ve7JjWwleGXl+W+XBy12YZy/
lGGhBEXmFXcVb9FihvXIOJViReg7ZZfk9ZAW1+4y8/gRpACKkPJ36jUttr+/
3DprIAdYo/bg5ltaXLrd/nmQTg4M1WY9mD/QYlXGAyulVbJgp4wpJItpsaCe
2TlmbVkIO9on7FxLi6eYuvaMGchAr5Cwff8YLU5olQ6P35SGMQH97NkpWtzy
tv9KdLQ0LOz1nN+ZpcX5je3SOwekgYGvIlBwjRaHh+uUHzGTAjkOu7TzjHS4
mztf4lyVBDykSBlqk6DDmack07f7xcH8WXl38mE6PKD9+SlHjDiIH+lpdZWl
w7/q9yUf1hSH7+f5q7dU6LD9TVtrv/QDQPMpNuOAPh0+cnWZc9ctMQi8+sjp
phMdVvrDTp1qIAomNFm24EaHaw/9w5v0oiDy4rs5ozsddjsX1SVXIwIVtdR6
L2/SYV3fkCBJfRHY2e9/sDqYDnNxaK+snxUGvy6vMZ40cr0hfWJDIgJgdC2m
rzeTDosGfW+q+rQP9jJ86MjKpsNiQxG57Kf3Qaniv1r1fDrsZEKh1nJ/L6xF
O79xrCTz7DHl0St7wFvP2q3wLx3uyxAWOym8G3R7b9v7D9JhR8n3b1vrdwHv
zedW+qN0OH/NoSTYexcUppIMu6fp8PeIL5Gnm3lhYctYimabDnfRzkVKxvKA
Z+HxqbP76HFIV5X35AkuOFXvw+whTI+tSognryi5QLrvrWSYGJkvf297vZgT
xpi5XCuk6bF+S7OJlQQn2Dn0Dktr0OP6MNmv9bs5APly0upr0uNZWSqakbfs
sC9KR8zhOD3ukKj9KCvJDh2l2fbPT9LjQrk1hyRpNjDmuvWX1pYeZ0kc7GHW
Z4Ejh7K3he3p8VTtYdUbv5mBBfUIqDvRYxWBWP9XdsxQ66pt7eVOj7sMPY7J
BjABrmTv7PWnx1XjOh63fjPAUc+slk/J9JjmmXKjZzUtsIT8mWtJo8d8PEWn
Td1oYeIFG+f0a3qs+36sLJmDFjJrbpwW+0CPl48FvLW8SAOCQpoN0RVkPDi5
08BFDZsKNybfVtFje7N8H/uvVNBl+JqpppYex71311K5TgVx3qwGW0302LD1
ktJ/HZTA9quz2rWfHqe3+nDdz6OAqUGW4eBhejzGUMeV4EYB9WtAkzJOj1PT
Y343ilFAyIFMLdIcPWZYjOqgPLaDtv28CC0qBmw8vzXCLruFpqWYS/buZ8DW
z3oex95bQ9l+47n7DzJgHwXJiRzuNXTpZ02mlBQDNr0S/PXmm1XU7R4cqybP
gONbn0XvdK6g+rwtj/PaDHjXXIOs3qllFELV7eSgx4BvdLafUZpZQppnS20u
n2DASMfYNyNmCRUvep+4c5YBZ1kay/zrWkQZyrPiLxwYcHrcmYaH/gvILvSX
QJozA9aqAvFuyQW0rzOH5+1lBty1xXLgQcc8+u+2K1XZdQbMb3W5ukJ5HgV8
GejpCiLbdyRfMqWdQ9babbH86Qz4EGcnbVbeP8QXW/BYNIsB66fGq12W+Yd+
D8UESuYw4Nnq4e86eVPIMOSUp2ohA6YxMfXlL5lEKnU1J6yqGHBkUf/I9b5x
tLgnU8u+lgEXHVSMYvEYR7luwcfcGhjwdnDN27s7Y0icRfPg7VYGLDmvbttw
YAzxnC6lShhiwHKlCpLnHo6gpuT4tVdjDHig8K/y9P4R9HjWe/bNFAN2+YFi
xL8OI6r/5HtLFsn6dMVdvkg9jGZbc0o6aRixTJpTlXH8IPphley55wAjXi0u
Vx2j60dGOjd2dx9ixJvVL8NbiD7UcNigPEmaEQvK8kS0+/ahXxQLzGIKjNjo
uOk+rYG/qClT9/URbUasQPuhIbCjBxlH7z01p8uIP+zYyguf70HNvrOLBYaM
mC+I7m3B327UYpSgdcyEEYdfvCKTPP0Htc7/69G+yIj7XEvWy0W7kGn312C6
S4z4SvXBJ1qFnait+plUnQsjjjU7/TJIrxOR4jV9T3ky4ord2RH7r3egDvSU
x/IeI5amssoV7yWh7jD1E+4vyfZsN84ObP1G1jc452VeMeIiXr+hM1m/UY/N
SPxCOiPGeXQiQqa/Ua9M9IhPDiP2e7kW9CW3BfWRBu8HlTHiBsU/V297NyO7
iuJDugQjTnWZN9KTakb9byIaGb4x4l7nIxEG/U1owE9ZILKeEefQHHL4Y9yE
hkQfF8d3MuJZ1VJK1zu/kCOL3YXzPWS+sozDYuUnGl5SoBPsJ+tDe5fX7eZP
NFLbezZtjBEnHl0IbLvVgMbc5WberTBisb2TiiOx9WiqtPPAN14m3CFinicr
UYPu7P+2QNrDhK8YVseLlX1HTOE5lRMCTDgxLW2O+fR3dMjmng2XOBMO3GE3
iPOrRg47Yk8vKjFh/bM5Sh//fUPzzmwON1WZsGqihqVT5DcU0LQi8wgx4b5N
g8UfMt9Q0qv6hg+6TDhT5fVq3O2vqEvbk4biHBMWVLgd6yBSiVxzLFu4zzNh
isdUq9O/KtAqj3bKwQtMmAneJC/frUC8I7zqp53J+Zye366sIJBxaNn1pFtM
OKAlV6Lv8hdU00A3qB7PhI3GqsxeaJQgc8XZD8aJTJjHzzQq4msxGnrZ6e+Y
QvbXiZAnDIoRlUcOf3gWE84/xvSz2PYTQpwmJn+KmXAWU0778quP6KevmvDM
ZyYcv5ha16r8EVkPiE1TVTJhY8cQz8zGQuRbsPJIso6sh7bFFCVtISo0e1np
28mEnTSkOd89yEfa5SFRET1kfaPDudQk81GLuKfNq34mrLCh+t/tpjw0u6K1
VjvOhHPyvwfOiOQhqYQxGb51Jjzm571WlZuLUnvlU4r4mfGV/B8sJdxv0fJf
bsEHgsyYQ2jTR/dpNjLsX3hxVpQZF6a0X2Hek43mBwuezUow4wqTWOpdB98g
zXH5KMljzDievWNG2vo1ip3gZl1TZ8bv3XY9uDGdicYmF8JqMDMeyTmW+jYw
E0VPF4Q46jPj2+/MRGo+ZKC+BXn/pHPM+FRj5blm0XSksMS9eeU8M3YqKrPI
/5aGQpcXfNUuMOPPmrQvtZ3SkMxawc0OJ2ZswS7/1vJDKgrYlr/K5c2MBdUN
YyLOvUJCjArWIbHk+h1+n7jX8RJ5MfF0mcYzY3XNatNhg5foO/Piuf2JzLjD
2c3hz5dE5M5WeLYijRnvW+mONHz3ApVzK5xYz2fGrZdFDGjePEdcvDx1tUVk
f8eEM8WHnyOnXYu6z0qZseebRprXhfGIbU+hlsJXsh4vXlOy1j1DtoIKqu7N
zHj9APXtWaY4lC/EU6zexozno078vJryFNGJLCoydzLjG0b8vH+Un6L3+wtl
s/rI9fL2MjhciUVbhxQkBmaYsS0RIQiT/6FEeQU+czYW/LnyxuFTx6LRLw/i
KicXC/apXfE61B6Fdt4afmvgZcGH5ElNgSgK2YtddNcWYMHxprtrPHkj0UHe
yCoZaRYc/N6svn/gMbI4s4d/6ijZ33awJtL6MQqLSPd4Lc+CTRsm6HM6wtAU
bRm/oBoLTs/4Ps/c8QjlL496MhuyYOn8sCa1+YdoSO769+8nWbAjc/Gatv9D
xOuxvTfwDAtWkMpUdGN5iHxGeWpWLcjxHlbuTBwJQRodmgIjziy4+3uFzZfH
wai25EVdxQMW7C9E9UXw5X20viQu5PeIBXe4jWuO6t5HUnL5N5QjWHDVguIV
vfkAFJldK/Q+lgXLqexuyTsZgM6+WLr5Io0FV9zxutEu7Y+C2wN+mL8m9zOj
kmwVfxcVcbOIcL39v17HO5Pp7iK+cNGG0HwWTMNlK4cm76Bev9Oi3pUs2Cg0
yNH7ty/iKOm6JVvNgq9kpzsVnvVFmkuXfk7VsuApos/MjOSD0q/6+Tg0seCU
0UmZ2IFbyM32zS/jv2S9gxIneni90RJQ35HaIutVd9xwudcLKWykrihTsuJT
dv8l5Pt4oRtFWjd0aFmxMRJjeMjjhRalA6/asLJiR7lJ/lMm19D8Hkq7KAFW
7LNyydOr3gPJtaV0vxBhxXibRUlOwAN5RWPLrAOs2DT1cHHQdXc0RxdgUnmY
FQdbq6U/kbyKZhe2dRY0WHG0v7ZuQIUbkslNqtzRZMXdNeH3hg67IU83hFh0
WfFnXZ1YkyRXNNN3V/nAKVYcf6nNnC3UBU3/3JQ4Z8uKm37wnXC464SmXq+z
lfmzYgZGBguHQXsk7ZDwuCaQFZtvF50svm2PrgiqMrSGsOLVt2ZywGOPJmN9
Kf9FsuJWsaO3Pp68iCbury4IJrPijp0OLvH8C0hSI95TKo0VHzpIND6ivIDc
VpX/Kb9mxdaf+PRfm9qicfdbI8a5ZH0q3Li/0tqgsfPLHYEEK56qumvqHmOF
Du2OM4v6xoqNDhORsZuWyKVFseVFDbk/Gy+DQTdLNKp/80dhIyvmaHQ3Kza2
QCOKi19G/rLi0Mv96cFgjgbZ51MNKdjwQKaod1WiCRpzCG3kpGHDxfzahqaq
Jmjqk+BmBz0bjhy5Jd3TeQYtXzhh5szOhnW5aSUKBM8gpg/p9MGCbDg+vNKq
xe80YqdRUzghyoZXN6UIr7ZTiMei2Y5LnA1zxKfd95I9hQQotktSDrNhi/o0
wZMLRkjG+NyVL+ps2I6B40d2oiFSTP8XH4zZcGivI0sAmyFSXQ2qPqHDhlk8
diKUggyQdsoHwa4TbHjz0oNPrDf1kfksY/OyFRsewr7jfT66yC/6s6KMLxs2
vUhibl7SQveHTOxX/NjwlX33+4KitFCIynhkeQAbtqJWJZ2S0kJRfbxjRqFs
mKEiuZ3KVROlyngkuD5jwwHsMP54BdDrYNoamRdsONFg0k/JEFBOx4uFlSQ2
vKh4XMcrBaGPAbVGIZls2Dp8qMD0nAaqbRLZSf1IzucaptIzpYp+ihVLuZWw
YWGPI6biVqqoxeeUhewXNixzSNLKp/4Y+iN8J4+oYsPdJ6Zl1wpU0LRnq0P3
bzY8tnzxUUOWElqocotOa2fDrTpHLUukldAqH+UXtz/kfhdKc1ULFBFV5eFd
awPkfA2eFdU1CoiX82Et7zw5Xqe4QTyrPIpU3n/t5DIbTgqJc/8YL4cYbIk9
D9bZcF/hjT+PxeXQevaK2yIVO7aO3WAQN5RFvTourL+52TELRX8oyfYoOneZ
poiJjx2P7VessHh5BDXFpNhq7WPHjhlyOw59h9G33o7cPDF2LK1xVDXnujTK
8jEwiVZkx7Wc7zR0GiSQSPLwes0xdqw/x29jKC2BEqrvp+1osOPifroq3uhD
KIKrdNFdlx1nnaLMTbc/iLxyJJ+dPMeOE3nfRZjLHkCTLd/hwXly/Il4DeV3
YshxzX7s8wV2fAMFNRyTFkPndF8ck3Zhxx+WYzOs5Pcj9T7mbiZfdsxwwm6f
sKMI+kiXFax1l9wfZ/8N4RVhdOSwzuHb99nxusTsZEm4MBK57ec//ogd+61c
YV32F0J0PP+EaxPYsVgE7RXloH3onuqjup0kdhy/b/V9TONetGp3wEs5jR2n
LJ1bOCa8F02+s/mW+ZYd4w/BL9h/7UFNer8uPfjMjnlqXAv2W+5GBu5ubF8q
2DFfLae1ZvUu9DWW7tNiFbl+qlteMwq70Md+xOD4kx13iwxTZAnyooQ7udla
veyY6xH9GZM93Ig79cTZ2wPsWP3TcMenZC4UXju6kTdC9q9SymCX4EL+vMIn
RWbI+fUozI11ONGK2ucliwV2nLqaULSLxIE87S2SolfYcVzsWmqYGweaCF3U
rd0g68/9njORkgM55EbP7Oyw4444lmlvJXb0P5yKTL8=
         "]]}}}, {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {"\[Mu]", "Torque"}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, Epilog -> {
        Line[{{
           Rational[2, 3], 0}, {
           Rational[2, 3], 1}}]}, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
      PlotLabel -> "Normal distribution", PlotRange -> {All, All}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]]}, {0.010000000000000002`, 0.05, 
        Rational[1, 10], 
        Rational[1, 5], Rational[1, 2] 3^Rational[-1, 2], 
        Rational[1, 2]}, LabelStyle -> {
         GrayLevel[0], Bold, 8}, LegendLabel -> "\[Sigma]=", LegendLayout -> 
       "Column"]], {0.75, 0.55}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.684540636301993*^9, 3.684540647763238*^9}, 
   3.684540677807744*^9, {3.6846344349702787`*^9, 3.684634461850379*^9}, 
   3.6846346558660507`*^9, 3.684634797252331*^9, 3.684634832733811*^9, 
   3.6846349443414288`*^9, 3.68463501884871*^9, 3.684635055904681*^9, 
   3.6846352896101913`*^9, 3.6846356802838593`*^9, 3.684668007498163*^9, 
   3.6846886373803787`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sigs", " ", "=", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.1", ",", "0.5", ",", "1", ",", "2", ",", 
       RowBox[{"5", "/", 
        RowBox[{"\[Sqrt]", "3"}]}], ",", "5"}], "}"}], "/", "10"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"TODO", ":", " ", 
    RowBox[{
    "place", " ", "legend", " ", "inside", " ", "the", " ", "plot"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"TorquePivotTriATB", "[", 
       RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "sigs"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", 
     RowBox[{"-", "1"}], ",", "4"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{"sigs", ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", "Bold", ",", "8"}], "}"}]}], ",", 
        RowBox[{"LegendLabel", "\[Rule]", "\"\<\[Sigma]=\>\""}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.75", ",", "0.55"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Mu]\>\"", ",", "\"\<Torque\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Triangular distribution\>\""}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Sqrt]", "2"}], "/", "2"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Sqrt]", "2"}], "/", "2"}], ",", "1"}], "}"}]}], "}"}], 
      "]"}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<../abecker/SwarmPublications/JournalTorqueControl/pictures/pdf/\
TorqueTri.pdf\>\"", ",", "%"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.683656192718853*^9, 3.68365650959415*^9}, {
   3.684533201990088*^9, 3.684533227629901*^9}, 3.6845336018509903`*^9, {
   3.684538398449457*^9, 3.684538398934102*^9}, {3.684538872647613*^9, 
   3.6845388887736807`*^9}, {3.6845392008597593`*^9, 3.684539232440401*^9}, {
   3.68453938540254*^9, 3.6845393866137953`*^9}, {3.684539430208269*^9, 
   3.684539435555996*^9}, {3.6845436780615*^9, 3.684543685187031*^9}, 
   3.684635142165762*^9, {3.684635208962812*^9, 3.6846352179362793`*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
b1XUD1sifYll9XF5mfT/AUn1VAA=
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxN13c8VfH/wHEjlFDJ3iOrgRaKvI0IJSFSobKTUVYKhQpRyEg2ScomZMSR
nWtvUoTrLvtGkvG738fX757v+ef1eD4+n/O5n3vuPefxOKJWrka2dDQ0NM9o
aWj+U3Ky4retrXmEZvvoeW7V50pGXez5cmxsGvVd/cllpB313Hq4mH8iauL1
aR8aRdQTvLGytC5zVHfFLkXTjc5QXU0b327jQaC6Wai24rn2NNWEIwpxmdKT
VJ+0kmtWDx+juruV3FCtOkz1S/6ItFX7Hqpv0oRoCuqjPoH1n1Y/hno03+1w
2Ho31Qc1TMsFX6FucRDs0qjsojpJn8vdPhX13WN7uF48Rc29TmPefxE1Ruhb
Z2dTJ9Vu+EpO3leo+Ypzr1tdR/3VJyU9R6ITeSSVmXb4n46qg1Yk7vd8B9J+
tZp0OfWB6t49gUdUKzuQQ3lMriLtsaqfh9zdg592ID6setweSx9VLd/aVnRd
7EBkM8puc9lXqDI6Xdni5e1AqgTfqXGsN6rmn9TVsp5sR2p7HHFzD7pVTbZO
h+XmtSN3jF/UaQuMqK63HO5evt+OtN3X0liKn1B9FyXEDRrtCC5Q0L89mKB6
3nyvRQhLO3L1jIBGxNaC6pIEXUb3QBty+hyNedb+FdWEeTKeL70NKVhxrZvc
v66qXoGVtbnThnQf3Ru7/pwW8IGDHnkn25BBo0nxjmgGiLzwrXJlC4PIEnfj
1Y4ygyJXFY1aKwYZfjKlLOe0B36O5Wo/j8Egnf2TX05lsUPQx5QXPZYYJHmF
aZO8wAlH3CN7+GUwyC1iWPjxN7zQpxLIY0tuRf6uJCVi0wXBl9HDMr+6FRE6
euKjzy5RONBl++5PcCvCWcG6cNBbHDDxV4hqRq2IXdmi0n1hSXCz1pUPFWhF
1jBefIO0MsB3RNmrd/obUpl0/NBX0cPwdeXwF4Gib0gFpoY2N0AOHGqF6Ox8
viELflf4mKKOwmdjuvDVPd+QMk+WZ7uST4Kl4O9e9ZEW5PbqmJPhsCIw4rC8
Ye9akFfq++XrlE/D5YffMgVPtSB2zk2eu70B1jWrSHb0LciDBy7njhxUhwzW
vKOF7c2In4ba0FieBiylRVZrWDUj3MwXk81XtSDHM1tWWr4ZEcx8K7eRdg5s
9BpSWTebEKVf1b33LXVhgPwnYCi+CXl0sVXwH68+RLTsI1fbNyERIesf6XkN
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
CYgq+66j9sPpL21tof4/CejLag==
       "]]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
rg==
       "]]}, 
     {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]}, 
     {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxN1nk0lO/bAPCxJGWpfCWEbFmyVbYJucZSqRCiVQsSUSKRsoRkC6EsRUiy
J1LW8tj3EB57tjEzxthF0sT7dM57mt/8M+dzrmXuue/ruWfErG+b2TLjcLh4
Jhzu7/vSK/WmjY055HTu9jbrbHPoDLHuvr00hxgnnjF23GUBH9zCR0bIc4hB
xqlP848twNmIuIx8nUMq9HNDvezOwCw9Qtw3YQ75IGDwclTrHExdJHvi1OeQ
Eu62QCFlS2g+tiPIed8cQuBqVpUttYQsZa3oUeE5RBlXwT9EuAT2HNGZlaxz
iN+v4a/aFpeBXHYY9e2cRSQGRUREj1+FcYEYRSanWeSl8IuCsvfWUL2p8pCL
1SwyOhsfGo6zgdcLU/pj5rMIm7S6pIGZDVxtIlys0pxFttj9rL6/agPDHtNB
fltmEcVrEp2Lp2yhv1dvjOntDGKqz2F+Sd4eOmIWnzEPTSNDUvu+CqU5ga9S
v9C1tmlk9ibehix8G/Y3IW/rKqeR1qr5TQvxt+EpPaw4+O00ck2+gNn+uDMY
20gPct+eRjIIil4LJ1ygZb+l+G7maUTH7U3Q9Vuu8KBZN8frBw35eUHyWtFH
V9h3TVZlmExDCpo2ZgvprhAat3LkdQsNyUptOF8ecRcM1iNvSMfQkChSWghP
uRvUt9TlK8vQkNm6cf+Xqh7gbpt7KEaQhrgHqy5IB3uA1EZ09QonVm8xqeo8
6AGPD17tLl2YQnycb4epBNwH/RdrP6F8Cik+wXX3zfADqL6uBIbGU8ixzO5L
ncXe8IXpxddrd6lI1JU/3Ak4fziYdNzqnR0VIW1GFxsO+kO6xtqP5QtUZDY7
rtzU1h8iXC8KBelQEe2oeDPvFn+4TBJ2zOKmIq3v3ywfTnwEuKZU9tnMSeTU
50/s+aceg25krt697xTko4m37HtcCBTJX+pFOijIkxSxdyIQAvuauBzZaynI
/puBLcveIcDDfDv6RTYFYZU2VBqihwDR9cBY+T0K0vJ7fCF6IxQCzhb54Hgo
SGIWr+USfzg0iFSWhhwlI9OySXW0tkhg/akqy6NBRradK63Y/yMSCO058S8V
yMgDton0XIEoKHsYdy+Hl4xsoY2RjttGQe6ok+rXcRISzNITLLIRBZGpwgXb
H5IQqWWTT6cPP4NzUp6ZccUTiM0PYW12Ugw8X5/fJZozgRQE6Jvc3xEL33qu
B2UmTSBRrScuSWnHwokgs+uljyeQTaHOW1TjY0FrUlZy8PQEwj7tzit7Kg5E
s/uSReaJyPt2UYOnjfFAVVCLeytDRLYouZU7TSXASqFdwJ7dRCTgnexPYYlE
YNZ44fKCi4hwhmwuF7BMBKGj9JPhi+NIUphl1s+2RDC5XI1z+zyOrGvia8xK
XkFRhLGDvsk4YjctwFz4Ihn8564fJt4bQ85ydirptr6Gp27x+y45jCHWXBaa
z2deQ+Lvpl29lmPIp2irmm3bUuHTZoXFZp0xhFq7N/+RWSpM7llK/8AxhoQz
V321GkwFY5OH2/2TRxHu8rtpXMtvQNVaqUEnYgQJJ14R6DNIhz5XqWIWtxFk
trqQe/lmOjx4LJxRd3EEOT01s4iPSoeKTI6g47IjSNDVgUHVgXQwmKMcNa0d
Rg7w/brP5pQBll4p9VfXviM6rPc0dr7KhEexO+ofXh9C2PsQW0+BHJDKZC/S
MRpCzsvdbknSzYHG0o23LCpDSKWOUgXNMQc4v888DmIaQtQ2ZyQxIzkQK9F8
5GniIHJbdCBGyi4XsvP965I6B5Ak6r3888g7+Na8VPtFux+hWM3GbRzLB168
db61RD9SVlyaeMAqH8687UjYzN6P2Ae7RXs/yIehh+/umH7rQ9YPcgfavMuH
SRU7UZJNH0Lvn2e+wVsAuOQBT86QXqQNnaDbUgpAybXq4MUuFNlR1qn1+HUh
hO9+mrJq14nQhvcc07tRDFdxwXrCRp3IdxUOu9rgYlAh+ZJ1DnYiv2+1frHK
LIahvDvyT+jfEBm6ru4CpRj26Z4pEY76hjzNEmO3tS+BRnvhDt2yDiTXNC8y
26kU2G6e3RAQaEPwYkbfN0WVw2JK5Bdd6wbEhk1MyYC1EtyTONi1iz8hyyu/
bsoeqAVSVGmbemsMTI907pYsaYTAYeuL+u0VULGXkh5OagUq8VTiGNoCkh5/
WLivd4CMfkqGaVY3zHJomN016cTm485O7+puSOjxNuQ72wmZv/UeZQ52QwdH
63rhpU6QKaRc3uBCoTql1n3coROkxZX43t1BwX6sQ5zjcSdI4SoC2LV6YFA8
azSwpBP2fh60Qtp6Qbx96RWLUBdMxL1rn6L0wrEStic84l2Q5vrwMB9THwTb
cIQKyXSBpJyEwC3lPrCgSWWJqWB+6dAhGN8HJfKmA3MnMXv80na36oe6wTrv
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
3Nhg+P8ApNzWTg==
       "]]}}, InsetBox[
     TemplateBox[{
      "0.010000000000000002`","0.05`",FractionBox["1", "10"],FractionBox[
       "1", "5"],FractionBox["1", 
        RowBox[{"2", " ", 
          SqrtBox["3"]}]],FractionBox["1", "2"]},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox["\"\[Sigma]=\"", {
                 GrayLevel[0], FontWeight -> Bold, FontSize -> 8, FontFamily -> 
                 "Arial"}, Background -> Automatic, StripOnInput -> False]}, {
              
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #6}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontWeight -> Bold, FontSize -> 8, FontFamily -> 
          "Arial"}, Background -> Automatic, StripOnInput -> False], 
        TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold", ",", "8"}], "}"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"\[Sigma]=\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.75, 0.55}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"\[Mu]\"", TraditionalForm], 
     FormBox["\"Torque\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Epilog->{
     LineBox[
      NCache[{{2^Rational[-1, 2], 0}, {2^Rational[-1, 2], 1}}, {{
        0.7071067811865475, 0}, {0.7071067811865475, 1}}]]},
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
   PlotLabel->FormBox["\"Triangular distribution\"", TraditionalForm],
   PlotRange->{All, All},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1:eJxN1Hk0VWsfwHFSklQSvaiMDdQl9xqLzk+m6CIRKUPXyXRRZKjWJfcYQi46
4ZDKmDpCvS4yJHZJKWOmktdMTo7j7K1DKOXtrn3u3j1r7fVdn7Wf57eevx5F
qr+txwoBAYHy798/5WXqvlpeRhEB/uq8Qu3255EuDUkcGpogHWA1Noe0kuYu
JSnRbpJmO02ECuiSHpVhqAue5RJ+zfiYsqKfQ7hWMKPVPXiScKPck+orZhOE
J9V00u+ojBHWpu5tPJg0RLijiddQS3lHOHHL1ZwFr07CH3PotUbURsLns9aK
UCofEvap2Nqbepi0a5tawdRAOeFD346YZ6wkLe2aGjd7tJRwsP5+CYd39wl/
3eciqWGSQ7i565t3TU8W4Vuaxvc2K2cSpvCaVVtrMwhvsBP3UVl7HSlgmPxZ
GZpCGS49VhjlmIaczni5eAHeUP6WyGAP3klFXj91Kta8N0+JDBzYvZ+XjFga
q3ekmW8Au05FX4bhNaRzlKo5ckgBzN1bHEa2XEWC6ncUGtqrAVvZ/m16xV/I
wsFZFmNJFxLGBo5bH41DxgaX0/IsjUD9tmfvSk404oL4C26kHYbXVNSxJiYC
qfW9Kq7iZwvvTbDSMaMwZJfczExCkyPsbhAst7kYglQ8GVsXf+A36I/Z6RPq
dAbZSA83am1zhybRlN7ChFOImxEl+ZuKD/jJuweFXvkZubDe0kBYPQAkvwzL
TTc6gM9noR63R0Eg+KdV4tZFb4hif5CpeXgBDAwZpoqHgqC8/lXBNukw6FOo
zlU+SwN/m6Y34ouRoOemoXimKwpelqw8xi6+DGm5zJwKvViYRBo/n4iOA1ul
tGwLoSSg3Am0WJeUBO+vVbfptjCg0i7FNLuNATHvtLS/uKWDyg6lSBtqOuxU
LLlZN38dKClBef/Uu+Sut6nyLfDk9zzLIkL1QC6E8Lu4SneLbioTZvml5cbt
UlUshXB+YwapTibtdXCb38mxI7dGepohmV8Vkxzm0XvdsJVfJa3/bFWb7QMV
fr9lOr3bPjYMHVl4u/7rrGlgMA5i/CaID/TRnVjwYANe7a/nNsXUsSFvGe92
6/iB3c1syD+CVyI7j9n+lg1/ZOLlGnbpy8ywQdIU791oLfdi5SlwjsMrLTZf
3hk3BcmieL/IhjnI23EgbTNetm+qQsMpDmicxdv7uJjt7ccBlyd4y10Hwksv
c0DOBa9fHoVpWsWB0Fy8g6qCC77bpsFiD96nejEZVaxp0NPBO/i/0fe+c9PQ
24d3KRx+kRfigvUlvHrPF5ouy3HB6hnekqO+S7b2XLjIb9tso7nwaS5If8LL
Sd/OqA7ggiUDr8rggJpCAhcS+c3xsTk1Xc+FBH7r1t0vynnNBSNxvP0laxbs
BrnQWoZXer6e/mjx+zl+dW7ID5xZjcL1HLzHDoSpKkqhcGo/3sDh3pBuJRQc
xvDSo7TrYzVQcKXhfbAzeb0+BYX8lgBfj30otLzinuT+isKIqZzZUwUU2H6/
MnNPoFBUyArtHuGCiHgB75gXCvuHrcqSwriws2yloUgICpbFHclD2DSYOLgl
1ESiUDDCe1JBmQbqYm3vWToKHBftcSFPDtBuye5QykIh5+vm2xWeU5AFF871
FKHQlCaTX2fIhsejXbVx1d/Pf6hNXDv7Afoua4gaNKKwZjhaOJHGggWVRAe0
GwV5e7T8l4n3sLllMi9vFAUjqXDgbB8HLX8z1B5DgTr3t+U9g1Go6ls2HlyF
AT0/3Zyzox8O/aTOrhTDwGzVy1U/7++FN5ec6dc2YRCXXPVAM6MbPNrjdXxl
MTjZ6PVJ0rgDZhWq+00UMbDvYcpP+bdAVCArUk7l+/57n5w46AuQaJBSXVDH
oCW2arW/cD3kSpm0d2hjEB3SvfF3rxrQ8AoMKTLAoEJk419LaBkgVTlbLhtj
8Fs0JOlYF4G1aPtT18MY2IXylOmyuTDg9NVL7ygGuqOnBzcnJIPf/T3rJRwx
YHpSISAxHL58O1E+5YpBw7kH9SXtxyHeJu7kcw8M/n3PZfIqBLL9SBfwxu9e
DCKta7rJyvYP0i/SDvL2RJAe35cFQ0mk5WnHe00LSTdp3qYvl5AOZnHNqyt/
+G8dU/3Tc9Lntz28sWmYdMsjCZcRqRnCF+daR8IiSHf6mEyVOX4kPL+E5Ruy
eYQle3YxMzPnCOcdk7OR0ZonvN3pDC2jfoFwFtNscTLwM+H4m0PSJ4SXCJ/t
WRFxveYrYbO08IB+72XC5svOUdlhAob/+vc3yMcqe0HCxhGRD90UVhBO95+p
EWORZtHuTGTXCRHGPKrd62NXEp47I7G61W0V4TKL5iVPNWHCU94aOkJzpOWL
+lJiW1cTFns6bnIzXYSct6gpmx64hrDj+b2aDAtRwsEv4rOVJNYSTti3R+P6
FGkX2h7JzAoxwgWivfr5l9YRRitfxabYryfM1duyS0J+A7lfyHyQoUSa2hbM
kNlJ+u3pNiFFNdJPkiKG9+qTTh5nZVgdJ61DLxe7cpU0dnLkmVgK6cId60Pp
aaTla7wm0zNJi0zIvrhbRLpPP+LPhkbSqcIPdMybSVt39E03t5F+5qnl3NVD
uvgaS290jLSnsyTmwSKtsOsgc5L9w/zHN6RmZn6YH9vYEjz3w/1sZ6MWFkjX
b1XUD1sifYll9XF5mfT/AUn1VAA=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1:eJxN13c8VfH/wHEjlFDJ3iOrgRaKvI0IJSFSobKTUVYKhQpRyEg2ScomZMSR
nWtvUoTrLvtGkvG738fX757v+ef1eD4+n/O5n3vuPefxOKJWrka2dDQ0NM9o
aWj+U3Ky4retrXmEZvvoeW7V50pGXez5cmxsGvVd/cllpB313Hq4mH8iauL1
aR8aRdQTvLGytC5zVHfFLkXTjc5QXU0b327jQaC6Wai24rn2NNWEIwpxmdKT
VJ+0kmtWDx+juruV3FCtOkz1S/6ItFX7Hqpv0oRoCuqjPoH1n1Y/hno03+1w
2Ho31Qc1TMsFX6FucRDs0qjsojpJn8vdPhX13WN7uF48Rc29TmPefxE1Ruhb
Z2dTJ9Vu+EpO3leo+Ypzr1tdR/3VJyU9R6ITeSSVmXb4n46qg1Yk7vd8B9J+
tZp0OfWB6t49gUdUKzuQQ3lMriLtsaqfh9zdg592ID6setweSx9VLd/aVnRd
7EBkM8puc9lXqDI6Xdni5e1AqgTfqXGsN6rmn9TVsp5sR2p7HHFzD7pVTbZO
h+XmtSN3jF/UaQuMqK63HO5evt+OtN3X0liKn1B9FyXEDRrtCC5Q0L89mKB6
3nyvRQhLO3L1jIBGxNaC6pIEXUb3QBty+hyNedb+FdWEeTKeL70NKVhxrZvc
v66qXoGVtbnThnQf3Ru7/pwW8IGDHnkn25BBo0nxjmgGiLzwrXJlC4PIEnfj
1Y4ygyJXFY1aKwYZfjKlLOe0B36O5Wo/j8Egnf2TX05lsUPQx5QXPZYYJHmF
aZO8wAlH3CN7+GUwyC1iWPjxN7zQpxLIY0tuRf6uJCVi0wXBl9HDMr+6FRE6
euKjzy5RONBl++5PcCvCWcG6cNBbHDDxV4hqRq2IXdmi0n1hSXCz1pUPFWhF
1jBefIO0MsB3RNmrd/obUpl0/NBX0cPwdeXwF4Gib0gFpoY2N0AOHGqF6Ox8
viELflf4mKKOwmdjuvDVPd+QMk+WZ7uST4Kl4O9e9ZEW5PbqmJPhsCIw4rC8
Ye9akFfq++XrlE/D5YffMgVPtSB2zk2eu70B1jWrSHb0LciDBy7njhxUhwzW
vKOF7c2In4ba0FieBiylRVZrWDUj3MwXk81XtSDHM1tWWr4ZEcx8K7eRdg5s
9BpSWTebEKVf1b33LXVhgPwnYCi+CXl0sVXwH68+RLTsI1fbNyERIesf6XkN
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
CYgq+66j9sPpL21tof4/CejLag==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
rg==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1:eJxN1nk0lO/bAPCxJGWpfCWEbFmyVbYJucZSqRCiVQsSUSKRsoRkC6EsRUiy
J1LW8tj3EB57tjEzxthF0sT7dM57mt/8M+dzrmXuue/ruWfErG+b2TLjcLh4
Jhzu7/vSK/WmjY055HTu9jbrbHPoDLHuvr00hxgnnjF23GUBH9zCR0bIc4hB
xqlP848twNmIuIx8nUMq9HNDvezOwCw9Qtw3YQ75IGDwclTrHExdJHvi1OeQ
Eu62QCFlS2g+tiPIed8cQuBqVpUttYQsZa3oUeE5RBlXwT9EuAT2HNGZlaxz
iN+v4a/aFpeBXHYY9e2cRSQGRUREj1+FcYEYRSanWeSl8IuCsvfWUL2p8pCL
1SwyOhsfGo6zgdcLU/pj5rMIm7S6pIGZDVxtIlys0pxFttj9rL6/agPDHtNB
fltmEcVrEp2Lp2yhv1dvjOntDGKqz2F+Sd4eOmIWnzEPTSNDUvu+CqU5ga9S
v9C1tmlk9ibehix8G/Y3IW/rKqeR1qr5TQvxt+EpPaw4+O00ck2+gNn+uDMY
20gPct+eRjIIil4LJ1ygZb+l+G7maUTH7U3Q9Vuu8KBZN8frBw35eUHyWtFH
V9h3TVZlmExDCpo2ZgvprhAat3LkdQsNyUptOF8ecRcM1iNvSMfQkChSWghP
uRvUt9TlK8vQkNm6cf+Xqh7gbpt7KEaQhrgHqy5IB3uA1EZ09QonVm8xqeo8
6AGPD17tLl2YQnycb4epBNwH/RdrP6F8Cik+wXX3zfADqL6uBIbGU8ixzO5L
ncXe8IXpxddrd6lI1JU/3Ak4fziYdNzqnR0VIW1GFxsO+kO6xtqP5QtUZDY7
rtzU1h8iXC8KBelQEe2oeDPvFn+4TBJ2zOKmIq3v3ywfTnwEuKZU9tnMSeTU
50/s+aceg25krt697xTko4m37HtcCBTJX+pFOijIkxSxdyIQAvuauBzZaynI
/puBLcveIcDDfDv6RTYFYZU2VBqihwDR9cBY+T0K0vJ7fCF6IxQCzhb54Hgo
SGIWr+USfzg0iFSWhhwlI9OySXW0tkhg/akqy6NBRradK63Y/yMSCO058S8V
yMgDton0XIEoKHsYdy+Hl4xsoY2RjttGQe6ok+rXcRISzNITLLIRBZGpwgXb
H5IQqWWTT6cPP4NzUp6ZccUTiM0PYW12Ugw8X5/fJZozgRQE6Jvc3xEL33qu
B2UmTSBRrScuSWnHwokgs+uljyeQTaHOW1TjY0FrUlZy8PQEwj7tzit7Kg5E
s/uSReaJyPt2UYOnjfFAVVCLeytDRLYouZU7TSXASqFdwJ7dRCTgnexPYYlE
YNZ44fKCi4hwhmwuF7BMBKGj9JPhi+NIUphl1s+2RDC5XI1z+zyOrGvia8xK
XkFRhLGDvsk4YjctwFz4Ihn8564fJt4bQ85ydirptr6Gp27x+y45jCHWXBaa
z2deQ+Lvpl29lmPIp2irmm3bUuHTZoXFZp0xhFq7N/+RWSpM7llK/8AxhoQz
V321GkwFY5OH2/2TRxHu8rtpXMtvQNVaqUEnYgQJJ14R6DNIhz5XqWIWtxFk
trqQe/lmOjx4LJxRd3EEOT01s4iPSoeKTI6g47IjSNDVgUHVgXQwmKMcNa0d
Rg7w/brP5pQBll4p9VfXviM6rPc0dr7KhEexO+ofXh9C2PsQW0+BHJDKZC/S
MRpCzsvdbknSzYHG0o23LCpDSKWOUgXNMQc4v888DmIaQtQ2ZyQxIzkQK9F8
5GniIHJbdCBGyi4XsvP965I6B5Ak6r3888g7+Na8VPtFux+hWM3GbRzLB168
db61RD9SVlyaeMAqH8687UjYzN6P2Ae7RXs/yIehh+/umH7rQ9YPcgfavMuH
SRU7UZJNH0Lvn2e+wVsAuOQBT86QXqQNnaDbUgpAybXq4MUuFNlR1qn1+HUh
hO9+mrJq14nQhvcc07tRDFdxwXrCRp3IdxUOu9rgYlAh+ZJ1DnYiv2+1frHK
LIahvDvyT+jfEBm6ru4CpRj26Z4pEY76hjzNEmO3tS+BRnvhDt2yDiTXNC8y
26kU2G6e3RAQaEPwYkbfN0WVw2JK5Bdd6wbEhk1MyYC1EtyTONi1iz8hyyu/
bsoeqAVSVGmbemsMTI907pYsaYTAYeuL+u0VULGXkh5OagUq8VTiGNoCkh5/
WLivd4CMfkqGaVY3zHJomN016cTm485O7+puSOjxNuQ72wmZv/UeZQ52QwdH
63rhpU6QKaRc3uBCoTql1n3coROkxZX43t1BwX6sQ5zjcSdI4SoC2LV6YFA8
azSwpBP2fh60Qtp6Qbx96RWLUBdMxL1rn6L0wrEStic84l2Q5vrwMB9THwTb
cIQKyXSBpJyEwC3lPrCgSWWJqWB+6dAhGN8HJfKmA3MnMXv80na36oe6wTrv
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
3Nhg+P8ApNzWTg==
         "]]}}}, {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {"\[Mu]", "Torque"}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, Epilog -> {
        Line[{{2^Rational[-1, 2], 0}, {2^Rational[-1, 2], 1}}]}, 
      Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
      PlotLabel -> "Triangular distribution", PlotRange -> {All, All}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]]}, {0.010000000000000002`, 0.05, 
        Rational[1, 10], 
        Rational[1, 5], Rational[1, 2] 3^Rational[-1, 2], 
        Rational[1, 2]}, LabelStyle -> {
         GrayLevel[0], Bold, 8}, LegendLabel -> "\[Sigma]=", LegendLayout -> 
       "Column"]], {0.75, 0.55}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.684538399671235*^9, {3.68453849634173*^9, 3.68453849872439*^9}, 
   3.684538528787299*^9, {3.684538873726265*^9, 3.6845388893641148`*^9}, 
   3.684539204510564*^9, 3.684539388496564*^9, 3.684539436519663*^9, {
   3.684543675549574*^9, 3.684543692218206*^9}, 3.68463446206347*^9, {
   3.6846351646980753`*^9, 3.6846352202940073`*^9}, 3.6846356807250147`*^9, 
   3.684668007960554*^9, 3.6846886377831583`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sigs", " ", "=", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.1", ",", "0.5", ",", "1", ",", "2", ",", 
       RowBox[{"5", "/", 
        RowBox[{"\[Sqrt]", "3"}]}], ",", "5"}], "}"}], "/", "10"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"TODO", ":", " ", 
    RowBox[{
    "place", " ", "legend", " ", "inside", " ", "the", " ", "plot"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"TorquePivotUni", "[", 
       RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "sigs"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", 
     RowBox[{"-", "1"}], ",", "4"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{"sigs", ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", "Bold", ",", "8"}], "}"}]}], ",", 
        RowBox[{"LegendLabel", "\[Rule]", "\"\<\[Sigma]=\>\""}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.75", ",", "0.55"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Mu]\>\"", ",", "\"\<Torque\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Uniform distribution\>\""}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", "1"}], "}"}]}], "}"}], "]"}], 
     "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<../abecker/SwarmPublications/JournalTorqueControl/pictures/pdf/\
TorqueUni.pdf\>\"", ",", "%"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.683656192718853*^9, 3.68365650959415*^9}, {
   3.684533201990088*^9, 3.684533227629901*^9}, 3.6845336018509903`*^9, {
   3.684538398449457*^9, 3.684538398934102*^9}, {3.684538872647613*^9, 
   3.6845388887736807`*^9}, 3.684539050089514*^9, {3.6845392360343122`*^9, 
   3.68453924661322*^9}, {3.684539278578122*^9, 3.684539281301207*^9}, {
   3.684539347834256*^9, 3.684539370928897*^9}, {3.684539413266988*^9, 
   3.6845394260116*^9}, {3.6846352309790583`*^9, 3.684635250380561*^9}, {
   3.684635306044159*^9, 3.684635310225789*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
YWOD+L+b5fps
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxN0nk0VXsfx/FjCBXlkQZDhmMKV1eILq6vLrpKMlTKUB5CSoRMoSJdSUIh
mUVmwjFkiC0JjzGkTkJH4nQmjqmQ4fGstZ+922vt9V6v9dn7t/YfW9rxqqUz
J4FAoG/c/+tcmtZ/1tenEQJ69d9zfHd1DjfJ98Hnz5O4PU3HF5Bu3FMr0cSQ
FNx028kgghbuLyIJ+zk8pjC/TZiN4xxmYm7gSOp28qFhbpNoqr13ZBIzTUUz
MWffOOaDjr+3HY7+jLmvY66lQe8j5gdiMZmLF/sxz2bGNvzl2Ia5yLdw/z5V
3E7HWjIE1loxv5/7EUpOwl1/xP6IR98bzHeYKr1J+i2Ydx3qpLAlXmHu5Z+w
eM9swhwxttZcX4d7OVItJ9wKd2O9+sAhcQSzBW/f15jleswtZdxtNo9xa9oc
KpBTwy1akuFef6kO81dLj++T5BrMVitPyeU+uNtzBuuCBXGXLOreEjJ+gVkq
y9NhZLwa8yOTZwb5t3BzL3yQuyZWjTCuB/9TG3RXzy99K5/eiypk+njobWXh
cb3L1eLk+GNVCLK6trT5Awec71HJZ4xUIktxpyl5aTvAclIv4C+vSsRXQ1HA
X1ca/l4zM07irkSa1gIHixqVQHeXwx52YgXiLxwrW6ukDqr7vb8dUa5AYqz5
NZwJ2iB7JKwmrZGEmCkk8auw9WHP+fiIeQsS0rdEoJs4GwG/X85Zk4ly5MSz
P9Vi7I8BIbp6X1ZAOdImbzbxfdQM5nPaFhe3liNpTcmhr2YsgdZAbjfLKEO6
rBffJGlawcgg7UmuWhlCsG8C7kZryP600Ld8vxRRfjs7RYg4Bz462kJWH0sQ
/aBOP/KMI9i52ZG4CCXI4Ok7EiRtZzBKuWlZLl+MuLjMUt49uwi7fjY/4vcp
RO4oTlUtDF+BNaUJtbrkAkR4OKh9rvAqUG14By6+ykfMHD8H7jX1gpo6kx2v
t+UhH8XUzC09fCCT7l7heTAXkXAYjx7f7Qf3RGNPStjlIP8+PG0j0u8PNoHv
4q4XZCMT/btSvAOCYPWPc8KqhpnITGr/iHtrKHQOrLnWD6YjMUUJpPaR25Cq
blCwSyYNec7L0+O7GgZ6c52K3Q1JiFv+FLn1dDjc9h5R0p57hFDuf9YzvHwf
TvZLuyXoP0QCeQSOHmiJAmOnLqsxsRjkSQ81yVM+GqLGR86csIhAcrP7eedC
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
4iLuZnFpneAV3DeoprPr67j/C4q55Ss=
       "]]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
mDQr
       "]]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxN03k01O37wHFRUoYiTyUiJZK1iIpctpBKoVCEZElPJDQqKkqWsmWXJSpk
X8uWbkpUYxszY0sy5jNEJWuWxNfvnPnN57n/eZ/Xue5znfufW8L+iqkjJwcH
x8oVHBz/18kUtY9LS78QB+u0h9hTr0ziLrkW9vXrIG7344xp1Ix7dCF8u18S
7hGrQR8ONdwDwrEKK9xG2W6LnYjm7P3Bds2KxGYHr2G2G8VqK0P0B9kelleN
z9jFYHufvWKjdvhXtsmfJutrNLvZFtpvX2S/A7d5RlvSah7cvXfyPUzIXWx/
U3HexryAm+NJjw8hpJNtXcIR52JX3IE3yk3NTXETTsXIpIng3rzGuFO5oINt
K+Lrt11RuFMZuwtueeOWfLP6fqMWbmdZovvlnR2osyxqNOuCj2ZOAmYlsLYD
Fa/+HZl8+qPmj1VmBq9GaajyR27qUQzTVPSs22tFoSG7vTG2VePTmh79imIc
FTSUUHU5vYLKCWXHU9dkJNNQy9cojYwmAsxUEaaP+NMQr16qn4m7EBzc5dM/
6khDjO6yGctgEbgVO0yKNqKh8oQGf5VOCajltCzfr0hDFhkb2rWuSgGXe8PT
LxtoqC2q7rJJlCzof1EJvztLRY+Uvu1STlGCEKNnN6S/UJE0T1otKlOGpnIB
x6Y6KpI5GXyrZZ0arNvpd/JqJhUl8qTb2hYcBNOoUfWND6mIuGfEySNSE2KX
rKWrr1CRHbP4I5eVNnRdJgnanaKigyOBHhERumBj8GI4eysVxSTP/Rk+Zwjp
ZRtpxpxUJGgU31sxYwSYxP3ayUEKalRsbjUsPQ6XFs7HHyqioBEyxwyt0QTy
XdruDsRQ0EZhv1CwNIOxDk23oBsUdM73aG7I3CkgFoscJutQkEZ8QwBys4RK
sQdKRGkK6jQmQq7OWVh4OCsiQqCgh9s97nlLW8NdJ9qEA60dbV+XRekSsIMw
kYi0Wed29KD0qKK5pwPYcQTrbj3ejmhnr9ipJzmCCtNvUHtvO6oae/lWh+QE
vQUecg8XyMjnW+6WCl0X2K1jXrH1ERkNr1bffCjODRalTljpEMnITpLYrrx0
Bdp5DRedrMjozaYRG6kKd7hBO6BXtJOMeoMXoj32ecCHi1vbdKra0F/OScku
u2uQfHyjp/OTNkQ5mqzfu48I7nvXbQwNWJ7zdvqN83vDpgUOa5pxGzKd4IAT
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
0xHI
       "]]}, 
     {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxN2Hk0VV/0AHCRqShJKpFSoUIyD7FRNCEklanMQ0KGKCpjaNCAXqbShBTJ
TMMxFZlnj+e9+94zvEiGDA+h3/ut9fu53/vPXp91zt3rnH3O2netu9Pey8yJ
nY2NzW4VG9v/xqlU1R///o0jtv972mLsO7ymcOf538ewIdzeRv0zqBH32GKs
REgy7hGroSA2Vdz0rQlyqzzHVtyS8CeOvW90xV9WJTY6+g2vuGZ7eWmMwdCK
h2VVCG+k+1c8m+8SIb4NN7tG4pVEftyiBosn7/+hr9jEtpLN/zPuolhj9yMm
uMPGnbX6A2grfuD/dJ+NO+6Uvz82d1vjLuSW/VOni/un+FR63lrcxia3BMKe
U1ds1ZW79PcRbldr+oh/BO5QV/1vbm64C0LWXjdVxF3BpeVSvwd30z1Pc/0t
uHsF03TRmv+MH3xl47OAodxsPVp+l6f2Ty0uNWcMQ2xbzwSrJ5drs59wE7Ss
xpCk+UHxpnqStqhFw6jRWwxJeV76tsP6t7ay/YEa3VgMffhhUP7lyLw20Vey
mMMfQ3d4wuu0yOxwPVIs45sVhkZTX9fnW6wBUYIQIUoPQw6C1VcuRm2Ar5lr
o47vxdD9JuGYvDBhuFjGHrBWAEM+4XX7TcREgaNh3rlxloJcn46/T9m/E9LJ
ExYPyBTkdSmLV/Xpbjg2zjAwraagmbJNMgHm0jDChqlsfEdBPbcPCtlclIH7
gl2SnY8oKICxfHHaRh7kdzcKEwIpKPv4F5H7+QrQplzNdf4CBe0dOV08J68M
fkc/zYoYUFB7baWKapcqbD6fN9QnQ0EPB3kTj73SAOvgtO8XF8ioy0OAw8dS
B5bvE4okaGQUfS6Qp3hRF148j00fqCEjHQfDW4N5h2GoMvi2awIZre5Sq1i2
PArRHb5X9wWTkaC26b1hw+Owf8jdedSejHZ966z9YnYSvHnPG3jLk1GK/K4n
EkmnQHCbiYrCZjIKX3M1rue3CRTKHJWcXupDavcexj/ZYgYLp5S5Auv7kMlX
RvnYXXMIf7Lh+y3nPiRM3l65eeQ8SGbyFOka9aHEesWWSEsrqC3994ZDqQ8V
/Vh+8rPDGvjIvyOjVvWh+Oki43uMC/BkV53+gxQSsmE/pyip5wBqyhXKpuEk
1FmsISYv4Qgkg5I9G91JiNc/0EGJ2wl2uKdzElRJqJ6Lk1OG6gxZuWHfnrX1
orgo+5TuRncwrLxWeLG0F6kHibkVdF6C8XbvNxJpvSjpquLju3QPUGLaRqZf
7kXFEd7z0mu94KuWpn4OTy8SubV5nUDDFWitm6r+ot2DpPJte261XAUhNftc
+109KDjDVxvdCQCLNy3J3Dw9aGLSYGHkaCD03cr2MW0loi0x0le566/BTyWX
HYMORJRQ3n3TfDoY2J73BvHFdCPJfVNuz4dD4TDfcZePl7uRyBnvtp22YXD7
WrGZhVk32vbO0FmkIwz4zOP3pm3rRoeJEgKe1eGwhde4WzGnC+1T1fd4XhQJ
B3wrFKzaO5EVt73BPloM+FAPbGcr6UQi/a2O6y/fgQKjZ7xvUjrRyHBajvvC
HdCQDqKOOXWi9EDr6vCt98CArBQbNteBipKOz4FbLNgezRx+K9aBkuaWdLwz
HsH9bQ/S5lzaULfvxXV2WwlwkS36sJhRG7q72oHB5k8ApcGQIV2FNpS8Wmzj
mVYC9OX4yNxdbEXdZsX2Iveewj49ixKxR62oTiqSvmVNEtS6irXolbUgv/xI
x0GpVODyOPtv69YmtCTNr2478wJylI/rO/Q3oiMunKa+ci/hzD+Nu++zG9Eh
m/OP6S4v4fXj7ZtBrxGpeQs9aia9BN3SQTnHSw3IQ6H7Zn/NKwjm8rPN+VKH
CqUebJvKfQN/0h5+0bOvQf2dtec/fn8L7/yz5KTla5BDe3y5N1cWOJ6ofs6/
/B3R3f2TbhpkQdcUM5SY+B01u/hlRNZkwSeDCwaerd+QZ6KbpG7jO4gYlW1O
1KlGXST5ksuMbBBWq6dObK9ABM/EBOP9H6GZb9C0a7QcreM/fn2TyUeIpi1X
fiorR+FzYU85/D/Cwh2FN7ctypFzUULoGfQRvn5SbFcTRWh9kwpXy5k8MOVu
HXiw8AnNerj0iN/Jh6vP1vJoFxciTrewjH0CReBeJEqMP1GIrL6Q0221isC2
STbzF7kAxZ92+1buXgRHl08dS1xdgD7rb7i4/nsRbLGNj542zUOdOq/Xdt0s
Bj9NDUGLnmyk8LhLk3e+BJbUbYTkj6Sh+y882LgFPsPgo9Im1YYE8FI/wC/v
WAG3e5SU/9oRgE6hF2bdrADJnbnJX5lP4SEUBqgnVoBrbrqr/q4USFUoMohr
qoCrjOOhe7VeQCAmLaimUQnznKrbVOMzQMW81dZgUxWEvIiW2rszD2rfyjX7
91bDbYq91ZHmr2DCuY1vx4taGO4/lULrrIdYyr671MAWkD6SlmH6tgMIk6vN
fLI64ae4z6YblR1QzVy/RxZ1Qubfw+GZpA5Q1JOkTLZ3gnQ+w/Yffyd0v/Jj
T1zqBCmJA8LZPp2gnvR0o61pF0iyfY3gOdQF9qeXzlYtdMGezyQ71NQNJ5nq
bgvmRBggZDePMLrhc2T20qQ7EV773tISXkUEr3MygVMhRNi9f9fWy4pESK47
KS6UzXKSe4vIUyLw0TeoNHD2wO7Aee2rdj1whlwWubm0BySUNovKTvdCMGdI
togUCfQKrsT6rydBz/4TWno6JLBTamD7uo8Eb1tue/qfJ0GaUuigsR0JMhPO
Fi7fJYGY8q8c7yYSbOQ/25EySYItKki3ILMPcj82nuVGfaBWtLVgsaoPjBFa
/knsg7MqfpL6WB/Yndx9tOtPHzxR2bu2axMZqJQjn9slySCkGtfBDCODyVS/
quUDMqxXc3HRtKHAdGuiX4I9BeRKKnrCAynQ+j1f4eANChiriRo2xFFgt4bO
YyKBAvfUWuVt6iiwJyVX+UQjBdaoay7cVMUg0Wicv1QNg32lCR41Zhhrnand
H09jcFx9grLeE4M1qV/0ilgxWv1NVdprDIyGzizRWDGz9J/yMMIgtbbRkLcc
gxp1y8yDJAzs9pZoHWLFodICkeuzGBB4NrX8b+RIjTKg8VChqn1fzNI/DATJ
BbcihVkOOCw5wbKEGL1k724qnEod3tnNsoLN+j+NB6ngckQsOI9lvdRD+32A
CmsvU5TCWDYjuzkKG1FBY7OsoQHLdmKE1DJLKszq8VYuL2PgbVPdZetKBe0J
nyfvWA5JnVzPcZUKG8Tdfxiy/JC8/XhGOBWuNI9Z0pcwSBMzDDv5iArWq1ad
9GA51+bap/FnVOgoSEscWcQApaZPx72nQvdwo4ENy03kdlm1Mio4p0WbVf/F
gCK2yqWvhgphxJbP4iwvp1r17O5n5Wvkzc6fx0D/ZZVKzAQVlGVuTo3PYXAv
fX/87yUqmMk7rd7J8rYPf42LttDAQvpupB2rXvb5Du9FJGmgJVo34z2DQVZx
Pe8tRRq4FgbJ+09joFaeXH3UmAbR3Sqc1n9Y+6vmkHhvRYObF3Wea0+yzqP2
0i0BNxoUx37mEJ7AwKJVU6MnnAZTvXwyr35j4EsnfXAvpQFBgX9B5ScGZUOH
+Zu/0+Dt4DsGGsKA/dc7d8UOGixrfXmuNciq11TQnsUxGvhRVL020zHIWS2a
fH83HWIo9+4eYZ33DE/E3ORBOhR/Km/w7cHgEP/oGQugw15tFyKhG4P6TZ8F
xC3p0K3Ad+prOwY/Ja1v5z6ggw2psDSiHgP5/dX9Qql0yKTfNLb8gUHAARnd
a1l0UHlQlr27BgMutcW/ut/oIEaMqSdUYrDreMqV9gU6CO2NjmCWYOButLpZ
lacfgiyHPHyLMMgz9ZBJ2dQPkgeLxQfyMdCxPMRwlO8H/abcgVc5GNhe6rOe
deqHnBqO0ZRXGLzxOlJm6dsPB3cxpVAaBqO+7zejkH6Y22Uj15WKQVBwcFtU
cj+YbApNohMweHpf9NjW1n7YXyw94XcXg/YP1oqHDg3AHebsw1verHp/XIgs
PTYA6h0+Z2UuY0DMe0pUOTMAFlJits1urPtS2HHjoOcA9Mkv7Z+zx2Dkk2Gt
ZNoACLaO/OgwZ9W/9pDNhtWDIGsQvK5MBYPIH70fYgUGoSIG665TwICnPpCd
T2wQqg5fobXKYbCuqSCDS2UQNmzbUVgpicHWDpk/f10GgWTxzvaAMKu+VNGo
ofpB2MYRWKY0RYF8WlmPA3EQ4rIrb78do4BK/zkZ2sAgXG/SjBMaocChofhW
0tIgPPYt9WikUuDoKJ9o64EhGDtB31nH6h+2c4u5n+KG4LTcSPz4G1Z/ESD3
PrRiQFdNW+qIMQW0HdEHUTcGNCtVyGUdo8Bk8YuIzKsMEHz94aitHgUsLjjL
lT9iQFDMvQ2vlSmwM2c8dLyGAS1eBpzp2yhQdJJ9r7HST3iQVeYRPsjqg7el
AtbyD4Mt8bXma28yPO7lNSSIDENpbFzDtCsZ9OVGd+ySHoYLR8MG1e3IkNWZ
W6dxeBjuowsfXpiSwX+3xnb3a8NwuV7kFeMgGdZUGn6rHRwGXdNHa4wm+kB5
6crG219HQGNTSM8Nxz7YbXyHvK9+BGjn/I3+WvWB4POXGc3dI7AHkqo8T/fB
mE675tbJEbg15VOkqtcH6RFKju93/YIbfy8UmYr3wRY+ZkFb9C94Hi0tnt5N
gr8iwRbip0fhJsE3voX1/ahQu51YwvgNmVGT/DIzPUAh0QcvzfyG6k/Jm7WH
e2DxJiiIc4yBWbKA8xFyD6h9m6uL3D4GldaWrbLfeiDX9NKi2ZkxYP68TPON
74E0d5MLvyvHoEAygdEg3wMhKSJ7JJ6NQ5DqwN28i0QQDzlL1M+aAK2cCCXD
1C6oU3z18F/uBGRZz7cWxHaBH2PsWGnxBFw78GSHYAhr3Ph2qcy3CZDXO9aa
Zd8FV8UKkzZSJ0BYNDbEXKoLGsoEbWibJqH2RZpwTE4nBM400oJDJyF3mroj
oKAD2tyP/Mo/9weiS5qynZ+1AXNx4rXOyBQ4FlgNcoY1gFCnVEZq6gxIV/k/
OpRRAYIf6hOYr2ZAQvSo40xQBQjEeEWYZs1AS3HB2iSTCuDXKrbjLJ6BQ8WO
xPT5cuB6YyB6uWUGgrs2uzWdKIc5P6dHhzhmgU02oTmr7QuQhF4FkVxnQV69
uiBSrgR6xwzclb1moZoQEDraVgzE2pFzD/xnoSHIgbkvoBg6ghVUDofNgkDH
AEUOFUHDQMVEVvIsnPt2P8XMqBC+FlCdrjfNQktWYBuvfR68NN9uslWJCWkc
TqaevZnw+SFmclqDCdSDa7L+iGZCV0Oa6X0dJpyLMw/ceyED1ujvOr3KiAk8
E0T/HPob8FGWthh2YsIxgbTpTUMvQU9YwbqUwIQW4in2os+JYG02ZT2VygSB
VB1XfrWncDW2wEb2NRPKa4JKf+Q9gSwu1Qsvcpnw0KRV7Ep6HAgyNe1jfjBh
x8U/pBm+uyCjuGRf1cyEiybXrafmo8DA66vDUicTQvgJ+WWDEXCdoeN0hc4E
HbJYvZHvDYjfxe787ifLezpCCIcDIOdClfPgGMvcBf1+G65AbXKEi/gM632u
IEZ9qRP0d+u7nv/LBDa7yqosghksb+R2i1s1B///f2CLSa1bIzduhXsx7tzr
cBvWnrikK4TbeTWfR5AI7hCdRo/CHbgLSk557pXF3TQt4OWgiPunfJtXqjpu
0bfmVzYY4I5IPO83b4v7WaeIv6IT7pINff6XL+EejbENoAXgNr/ucP3HQ9y7
rS6HJFbitig3qbT8gTt6j9Jq0Zb/5BtfiHpGxp0fEf3g1RxuvZxXz7Ll5lds
t6r3c0US7mcZBvPDPgsrvpOMbTnPtbhiz0720KefllZs8OSmd5/rvxUf+2cd
/jyYTef/7daF/pScWbXiw6FhhXY72FdM8Jr8xMfAzQh5M/T8K8eKJ5xKHSuj
Vq945rIgd6Md54rzj9cvOstyrfiXq7wKxwxu8Xe9cVGN3Cvmqxg4kkzgwfPN
K4oQfHhXfO7qAcWE42tW7Pf9znMJwbUrvqe+X/7pL9w2IfuFUov4Vpy5hqj5
+gb/iseLf0TFnVm34jG1bVKC4uvx+RzHKAkSuO2b/BK2SuLudmji2CmLuzw2
lHpAE/fjAUai0VncKg8L+GIe4J6wpFXxxeHO2rMu6OET3OKfXIYJqbh5hkS+
p7/D3asZequ6Bnc8V47KsXrcxq29v+ubcFc5K1m3d+J+/4ihRu/H7WwtNOHE
wL1DSjdjeOQ/+T8nbZqc/E/+qJoGv5n/rM9sOnxuDnel6E7N4EXcNxhGf/79
w/0/U4fHSg==
       "]]}, 
     {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]}}, 
    InsetBox[
     TemplateBox[{
      "0.010000000000000002`","0.05`",FractionBox["1", "10"],FractionBox[
       "1", "5"],FractionBox["1", 
        RowBox[{"2", " ", 
          SqrtBox["3"]}]],FractionBox["1", "2"]},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox["\"\[Sigma]=\"", {
                 GrayLevel[0], FontWeight -> Bold, FontSize -> 8, FontFamily -> 
                 "Arial"}, Background -> Automatic, StripOnInput -> False]}, {
              
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #6}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontWeight -> Bold, FontSize -> 8, FontFamily -> 
          "Arial"}, Background -> Automatic, StripOnInput -> False], 
        TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold", ",", "8"}], "}"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"\[Sigma]=\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.75, 0.55}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"\[Mu]\"", TraditionalForm], 
     FormBox["\"Torque\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Epilog->{
     LineBox[
      NCache[{{
         Rational[1, 2], 0}, {
         Rational[1, 2], 1}}, {{0.5, 0}, {0.5, 1}}]]},
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
   PlotLabel->FormBox["\"Uniform distribution\"", TraditionalForm],
   PlotRange->{All, All},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1:eJxN0Ak41ekewPGDkpEa1zKjlLWxZMhcx1KMH0XIYy1SpGFsN7SgpnujLGXp
olO2lOXQDIYyHsky4khK2bMUxk7OOI5zju06Stwzz33v+/Y+z//5Pp/3/f/f
933+yt7nnH2FKRRKieD5q4vZhq83NrgMChrdCd695xaJyy8mjY5OE5+3m1xm
tBNz1pJVIu8Ts9ynr1AMiSd2pOkIneVgd6UtpAgPsbHrhDLbfcJmsJsVGmoS
Dk9jz2gbZPyiMYmt772v2Tx5FPtNy2JTnekAdpL8LTrfvxt7gU6rO+jdjH0p
Z6uYadUT7DOVu/pTjxB7dmgXzQ5XYFutO1hnbiKW80yNX3Iqxw4zPiDlOvAI
+9P+UzK6FnTs1p71gNq+HOwsvUO/fqWajW262KrZXpeJHR0yvPfA4h3so93K
gWlmtxnFoXPT/uKtptY+ba7j8rcYbkdnWbu1/wYsVZd3GZX/ZnwVwXvQpq4F
iZPDx+2d4hlicrEu81+agM4Dv/5N7OuMAt3ygxWjVtDlzXWrjY1ipL/04d/R
cIb3FrzyyYPhjBba9UG10hOwt0mowvHyRcZPxkOTR8y8YChW7cwV92BGtAll
jOvgBy3iKf3FiacZcbalXsKiQRCk6BN6JeE7hjk1lGr+3QWQ+TimMNfsCk9t
ej9UlYeB0DW7pF2rAUD1+xDjG3cZTMzSLJWtQqEo4X2nzW/hMKhUk6d6NhKe
h2x2c1+LBiMvXeXgnhhYSVbJV0y6Ael5hfRKozgo1sm3u2YVD84q6bk2Islw
k//qleT+ZHh/u6bDsC0NplFjB6j6H70yIB5VTbnsfv3KXVBHDSgrCLBUzQJ/
1EtMmyjN7/NwVzcbyhumFsIH1Mi8eHVN5XK4hho74u1u0VkP11FnJh2yxvta
gY2qYUEvdPq1F6ioKtSvd2kvDYIG6nq2+8CeyTFYQu35zUPPxGQKXqEmSg4P
0tyZEI+q/+mCdGw9C5RQ99jfHN7bygJJVKnc/MLOdyygoHLMeox3zLNgDLXg
OtXnoeos0FHlJFYquuNnQRL1485wV8WjbOChsgJTlZpOs2EMtf/pQ1ZAEBu6
UCs8h6+W32ADHTUo37TQspoNP6COaArxA3fPQQPqM6PYzGrmHJShjvwx8T5w
eQ66UNeuwt8VRThAufa/Gr3gt9xQ4IAuaplT4JqzCwfoqB1LzdaiP3KgC5Wd
sSet5jwHxlA1Roa1lRI5IIlKP+N4eq6RAzTU+m2PSuhdgnnUobIv+EdHBPuh
yq000n5fFdwH1eCe4nDwFi4ooR77PlxTWZYLuqi0GP3GOF0uRKKWqt3Zbmwq
mEdte805ybHlQgMqK8i2MO8EF7pQxSSLFo/5c4GCqvZ4k5nYRcF56wNvS5S4
YOHqlVgbLfj+WK+Xf/4ceK/W9Z+lCc7LOZD5T1U2RGbt/EYlR+A/JCImHrAg
B3660FfCBfpW2235qjPwdKKnLr6GC2M6yzbV+UzgayS5cnsF5zkkvfozZwqq
BzcOjWzmgRkr88ljhWGw+laHVSUhcERfVrb0ILyN8KDdluYB/T9/DlG3vIMl
pZohC2UeKGVl+AeyuiAmhBmtoMGDBpqvj2xFK0g1yWrydXhAqbQtKaW9gDxZ
i843+jyIdHhuZdlXD7r+IRdLTATr7fZZEzHlwKimy984JHAi07Gv4i7Yi3c+
8zwiMBrD7p/8jZyIgx5pbZdyI/64fqJi1pP4pmP8yRe+xEWLUwWXQ4kNLaXt
nP9F/DLdfFErinhqfw6MJhMrRh7vtywmbtF7QNsoIw5jcqxrqj5bt4+t+fYF
8aXdT+5JjxG3/S51alx2Hvvycvt4eBRx9xmL2cduC9gra7yfzViL2DJ96oXZ
2cvY+ccUHHdQV7D3uAdHZjbysXMKD6/OhHwg/+f+qNwJ0TXss33CUXdrP2Ef
Tr96fihgA9t6wyMmN5xi9n//4y1jodpFCPtQVPQTLyVh7Ixz87USTGJm5C/T
ufUi2DzfGp/GuE3Yy8FSW9q9NmM/tmld89MWxZ4N0DUQWSZWLBlMiWvfgi3x
bMrifoYY2W9Vb2dGyBfYbpf26aXZiGOHvbyZqyK1FTtxv5bu3VniU5FaMtmV
EthF4v3GP0dsw+ZWvY5LcdmOzTGSV5dS/JK8L2I9kqZC7N0RlrZDjfjdjx0i
ytrEDclRY/uMie9MMTPtjhMb0CokEm4R806OP5dIIS7+ZvsVWjqxYq3/TEY2
sdj0zpcFJcSDxlHXmpqJU0VLDaxbie3fDM61dhA/96N69PQRP7zNNJqYJPbz
kOH5MomV1M0LZ1if7f/0nuz8/Gf7xzW3hS1/dj/npRg+n7hxl7Jx+BpxBNNu
YWOD+L+b5fps
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1:eJxN0nk0VXsfx/FjCBXlkQZDhmMKV1eILq6vLrpKMlTKUB5CSoRMoSJdSUIh
mUVmwjFkiC0JjzGkTkJH4nQmjqmQ4fGstZ+922vt9V6v9dn7t/YfW9rxqqUz
J4FAoG/c/+tcmtZ/1tenEQJ69d9zfHd1DjfJ98Hnz5O4PU3HF5Bu3FMr0cSQ
FNx028kgghbuLyIJ+zk8pjC/TZiN4xxmYm7gSOp28qFhbpNoqr13ZBIzTUUz
MWffOOaDjr+3HY7+jLmvY66lQe8j5gdiMZmLF/sxz2bGNvzl2Ia5yLdw/z5V
3E7HWjIE1loxv5/7EUpOwl1/xP6IR98bzHeYKr1J+i2Ydx3qpLAlXmHu5Z+w
eM9swhwxttZcX4d7OVItJ9wKd2O9+sAhcQSzBW/f15jleswtZdxtNo9xa9oc
KpBTwy1akuFef6kO81dLj++T5BrMVitPyeU+uNtzBuuCBXGXLOreEjJ+gVkq
y9NhZLwa8yOTZwb5t3BzL3yQuyZWjTCuB/9TG3RXzy99K5/eiypk+njobWXh
cb3L1eLk+GNVCLK6trT5Awec71HJZ4xUIktxpyl5aTvAclIv4C+vSsRXQ1HA
X1ca/l4zM07irkSa1gIHixqVQHeXwx52YgXiLxwrW6ukDqr7vb8dUa5AYqz5
NZwJ2iB7JKwmrZGEmCkk8auw9WHP+fiIeQsS0rdEoJs4GwG/X85Zk4ly5MSz
P9Vi7I8BIbp6X1ZAOdImbzbxfdQM5nPaFhe3liNpTcmhr2YsgdZAbjfLKEO6
rBffJGlawcgg7UmuWhlCsG8C7kZryP600Ld8vxRRfjs7RYg4Bz462kJWH0sQ
/aBOP/KMI9i52ZG4CCXI4Ok7EiRtZzBKuWlZLl+MuLjMUt49uwi7fjY/4vcp
RO4oTlUtDF+BNaUJtbrkAkR4OKh9rvAqUG14By6+ykfMHD8H7jX1gpo6kx2v
t+UhH8XUzC09fCCT7l7heTAXkXAYjx7f7Qf3RGNPStjlIP8+PG0j0u8PNoHv
4q4XZCMT/btSvAOCYPWPc8KqhpnITGr/iHtrKHQOrLnWD6YjMUUJpPaR25Cq
blCwSyYNec7L0+O7GgZ6c52K3Q1JiFv+FLn1dDjc9h5R0p57hFDuf9YzvHwf
TvZLuyXoP0QCeQSOHmiJAmOnLqsxsRjkSQ81yVM+GqLGR86csIhAcrP7eedC
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
4iLuZnFpneAV3DeoprPr67j/C4q55Ss=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
mDQr
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1:eJxN03k01O37wHFRUoYiTyUiJZK1iIpctpBKoVCEZElPJDQqKkqWsmWXJSpk
X8uWbkpUYxszY0sy5jNEJWuWxNfvnPnN57n/eZ/Xue5znfufW8L+iqkjJwcH
x8oVHBz/18kUtY9LS78QB+u0h9hTr0ziLrkW9vXrIG7344xp1Ix7dCF8u18S
7hGrQR8ONdwDwrEKK9xG2W6LnYjm7P3Bds2KxGYHr2G2G8VqK0P0B9kelleN
z9jFYHufvWKjdvhXtsmfJutrNLvZFtpvX2S/A7d5RlvSah7cvXfyPUzIXWx/
U3HexryAm+NJjw8hpJNtXcIR52JX3IE3yk3NTXETTsXIpIng3rzGuFO5oINt
K+Lrt11RuFMZuwtueeOWfLP6fqMWbmdZovvlnR2osyxqNOuCj2ZOAmYlsLYD
Fa/+HZl8+qPmj1VmBq9GaajyR27qUQzTVPSs22tFoSG7vTG2VePTmh79imIc
FTSUUHU5vYLKCWXHU9dkJNNQy9cojYwmAsxUEaaP+NMQr16qn4m7EBzc5dM/
6khDjO6yGctgEbgVO0yKNqKh8oQGf5VOCajltCzfr0hDFhkb2rWuSgGXe8PT
LxtoqC2q7rJJlCzof1EJvztLRY+Uvu1STlGCEKNnN6S/UJE0T1otKlOGpnIB
x6Y6KpI5GXyrZZ0arNvpd/JqJhUl8qTb2hYcBNOoUfWND6mIuGfEySNSE2KX
rKWrr1CRHbP4I5eVNnRdJgnanaKigyOBHhERumBj8GI4eysVxSTP/Rk+Zwjp
ZRtpxpxUJGgU31sxYwSYxP3ayUEKalRsbjUsPQ6XFs7HHyqioBEyxwyt0QTy
XdruDsRQ0EZhv1CwNIOxDk23oBsUdM73aG7I3CkgFoscJutQkEZ8QwBys4RK
sQdKRGkK6jQmQq7OWVh4OCsiQqCgh9s97nlLW8NdJ9qEA60dbV+XRekSsIMw
kYi0Wed29KD0qKK5pwPYcQTrbj3ejmhnr9ipJzmCCtNvUHtvO6oae/lWh+QE
vQUecg8XyMjnW+6WCl0X2K1jXrH1ERkNr1bffCjODRalTljpEMnITpLYrrx0
Bdp5DRedrMjozaYRG6kKd7hBO6BXtJOMeoMXoj32ecCHi1vbdKra0F/OScku
u2uQfHyjp/OTNkQ5mqzfu48I7nvXbQwNWJ7zdvqN83vDpgUOa5pxGzKd4IAT
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
0xHI
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
w/0/U4fHSg==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
         "]]}}}, {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {"\[Mu]", "Torque"}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, Epilog -> {
        Line[{{
           Rational[1, 2], 0}, {
           Rational[1, 2], 1}}]}, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
      PlotLabel -> "Uniform distribution", PlotRange -> {All, All}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]]}, {0.010000000000000002`, 0.05, 
        Rational[1, 10], 
        Rational[1, 5], Rational[1, 2] 3^Rational[-1, 2], 
        Rational[1, 2]}, LabelStyle -> {
         GrayLevel[0], Bold, 8}, LegendLabel -> "\[Sigma]=", LegendLayout -> 
       "Column"]], {0.75, 0.55}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.684539050727324*^9, 3.684539172596488*^9, 3.6845392473597107`*^9, 
   3.6845392819314327`*^9, {3.684539349215146*^9, 3.684539371686418*^9}, 
   3.68453944026709*^9, 3.684634462206657*^9, {3.684635312442264*^9, 
   3.68463533878892*^9}, 3.684635681142131*^9, 3.684668008413847*^9, 
   3.684688638262115*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sigs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"TODO", ":", " ", 
    RowBox[{
    "place", " ", "legend", " ", "inside", " ", "the", " ", "plot"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"TorquePivotTriATB", "[", 
       RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "sigs"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", 
     RowBox[{"-", "1"}], ",", "4"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "sigs"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Mu] (pushing location)\>\"", ",", "\"\<Torque\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Triangular distribution\>\""}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Sqrt]", "2"}], "/", "2"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Sqrt]", "2"}], "/", "2"}], ",", "1"}], "}"}]}], "}"}], 
      "]"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.683656192718853*^9, 3.68365650959415*^9}, {
   3.684533201990088*^9, 3.684533227629901*^9}, 3.6845336018509903`*^9, {
   3.684538398449457*^9, 3.684538398934102*^9}, {3.684538872647613*^9, 
   3.6845388887736807`*^9}, {3.6845392008597593`*^9, 3.684539232440401*^9}, {
   3.68453938540254*^9, 3.6845393866137953`*^9}, {3.684539430208269*^9, 
   3.684539435555996*^9}, {3.6845436780615*^9, 3.684543712674811*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwV1nk0Vd0bB/BQkqFbUq8pSkIUkrhJPcdUrKQifg1SZE6SJhUioZBkeM1R
1+ziFK+SuBlCmSLzzJ3ce82zTL/tj7PO+qx91j5777X399l7be6Y2nFv2LCh
Dz3r7+lEzZ9ra+OU0y6tpLjxLGh+ZdNyZ3qc8nRlZsejySz49OB1fz9jnJIX
KvLCbDoL3M5SZyn145R/PprZCs5nwdhyqIxP/DhleLZJ1ns1C9hXGU83aI5T
gp81pFoLZcOQWJQyl+sYpTG8Ol1BKRt+R01FcPeMUMyLirIL7bOhhCu23vY+
i3LLrySgnZkN1VLfi16dYlAWfr0td7pBBtYhjehUBSrlIP28/7s2Mhy1UanW
Ce2nOHqqSHRY5EDTr+nKkpOdFLG3fdv9GnLgtcSb5AWHZkqzTE632vlcmEoO
K9G1qaaoBdof9G/MhYfvBPhOfv6PssVpotfwVB7Q3xY1aNZFQf6M7E1CdR4E
9Nlc1W8sBanPXZKTUjiwqOcSBltr4ekWdp2zBQ4K+snpFzJb4LKG0BQzBIdh
afedXuUtkFoqkpDyGoeMJT2/jO4WqDG1qLsRir7PZ1qtCbXCmtCxkvY3OMjL
qOzKcW8Fox6L35RwHOQ2lL7g024DGrFSyyMGh/3fuq0pDe1QMDe8K4CEAy06
p5HNbIcDM/uc1VJwSLn37MQurg5Y8JA93Icsq7RP7PaRDtj6Ul5UPQ05zvm3
eEwHaNQQtDozkD0WTz607oRV1WPGfLk4yKj/I3lopgtWM9yTZz/joFtwN/QB
oRuK7zkpJ3zBwVq9bkOpYjfIBvVx6RbhkKzuSzex7gZhN7OHwV9x2H2Uk+vW
gLzU5rOzBAdRDYpOQUYPrA4VP9pUjgOB6OBw/FofLKbm15yrxUH5S1mnn0cf
EOOk43qRTYiSxnURfcAOehnrXIdDCLFJ9dqvPvimaS39vB4H/mPH/3pr9kND
bIJaeiMOPImBpwb5BmCr+afmmj84rCZe7ZSlDsANs22ttt04GHyo0Hg1MQDE
kmB6C3JImlLk6MoADN1eFtHvwUEib8mkUHQQupZn66V7cSB+j688bTIIOTot
kXV9ONwb6s5zLhoEe1ZY199BHL4y9IQaqwbh75GlAMshHLg52c5HWgZhr6L2
6RLksOmn+5fHBuGi+5MNnlQccjdKxr+WHYK0IXfdMRraD3KWAfibIQj8keaY
ysRBVamSKpI4BFTtXWvzyI9UDuo8zhqC8MoT74yGceAlLi/p/BgCcavRaRby
PqOEu3/+DsEexcssKTYOzmc3NmryUcE+cscnJ+RPF1wOJuykglXZnFc+MnZF
m2mrSoW4b3ck9Tk4WN3qsZyzo0JIRuGNyyM4pN7R/3rlHhVKY3RUEpBH7pH/
ofhQYeOq3VIv8lNPz+bAeCos+uS/shrFIea1pKFYExWoHRxnszEc/uRZHtHW
pgFmtj9FYAIHi49//YsMafDbhjdRC7njU0yHhjkNylcCsh2R+/5r8TrsSgP5
qP2by5HZxcY1csk0+ORPyHSaxOF2CVs8hUyDOSVZeIs8Ufry9t4iGlzvMWd8
Rp4rqxSWbKYBr0SjHfcUWv8a7WvbN9Lh/JnzYiHI/j+78kK30cHd+4UCGZmv
1oNbcDcdvLTM9GuRtzYUpPNq0KFQ8FkS7zQObxtN//rp0iHqeXGvDLJI04Qx
1zk6lGEX5E4ii7UcnFpyoMMN89Mtd5ETWn/pP75Ph0CBQGIQslS7Y/ScDx0s
f/alvEeW7UrRnoylg4dEVEQ9cnq37hvXNDq4Ef6IDCEr9g4Mcj6h9l/M+Flk
1QHJQEYtHWTMLxaJzeCQP/i182YHHR68CDZRRNagXjo4SKPDCa1LzGPIRbQ5
b6tJNF85RT9DZG1GZFP3Ch2CFtz2WiBTmGqyl/kZUH4jocwGWZf1+2HbLgY0
b5W86YpcyXb9abaPAWGfrm96jHx6RFCySYUBbUtt6c+Rf41muZpoM8A7btIo
GNl43LCs1pAB109Kc8KRGycYO4zMGWAa3RgUi2w69cK+ypoBqubuCknIrdMy
RXqu6H/yjypIyJdmvwuUPWHAVsrZq+nI3XNWVicDGfD9l914JrLVwjJeHMEA
yl/lZ9nIg4txPMeSGUBbFeUnI9suES0KyQzgC4x4s97OXG7LOFLEAG69rYQs
ZOfV+0v4DwZkDS0Ervc/uiZsotzMgL6dFYvr/3fj+pic3ccAt5Cem+vjm+I+
N63AYcCJuYIf6+N/sHHUIG2eAZI836QikBc2Bcfs28gEho216/r8n2w+wEne
xgT3HyIF6+uzwld9Qmo3ExK6DMY9kH347cLiDzBBy9RWen19eQR5qKIaTJDr
6ddbX/8AofdH/9VlAlFBwdIcOWRbb1fYVSYoV/XaEZFP2lLyJJ2YYK9OH5VD
nvz8/kXGQyakFhRqiiBbXLdX/v6WCeMO7UIctF+25BvyGCcxwfxyYUwL8jde
pY52MhOedHoPfUPemzvuO17NhM/cI3mvkFu4mi2etjJBwXmPmitygHmB0mYq
E7b1XnO7gDyy7NEqtcqEOesdUiLIhWe4D5ioD4PUBQPFIHReHJNoK506w6Dt
9c7DFlliuqrZ7hxyLnidQPaJC/b0ch6GpPjHaRx0Ps+wRH6Tk4dhWDDDloi8
qj2fQswdBpmfuy/wIeNhnY8ri4eB7Cc+1obO/y7iu309bcPg4laj4YY8ECD/
SECIBXFvm8fCx3EI79piHC3OghuZlmcuIRsoj+zZp8AC2heyqSRyViv+S0sP
+XipVTLKoweyWlLOj1lQqOV3KQbllYKH5PRsAAsePxabN0Xuql2t9o1kgUNm
gZYgMnav4m5sHgv8L4vlPkF5x19u/KOGzgLKTY/Dp1FeluxUibs4zYKxSGHa
HMpTN6ftdwY2sKEInziaity6rU10QYINbbIxBSssVA+vX3eRN2XDMUe3Le9Q
Xh9dubsjoJQNaaQDbvF0lA8mQb2KtWzYq+JAOo4snPQhvbGdDZPnLGO7UH0Y
w/4cF5tkQ6PLrloR5LQX6rbkfRxQbHY6+gTVF1HB+YLmlxyox4I/8PWj+nCN
8OxRFAfqTHcUR6J6NZMjbyT5gQPCDvMh0shN5y712hVzoPSj55XDqL4FRRRt
WhzlgGqoRIgBqodL4p4W0mYjMHYpo0qlHeXxrcg9lddHoOR7mXJ6G8rvb2S2
o8sI/IzuPrUbucCq1/uT/wj05xa92NSKg8uHk+kGX0aABBS5qmaU7we4Fm7t
HgXOwKjP5gYcyogBsV+Yo5BZX/MgoAK1dw/Rb82Ogp9SbFoFug8se4OaNM8Y
xAz0a6yVofr7Y+GXv9QYKFi1ud/9jvbLhVvLpuZjwOYN19NF94lk5/PXR8vH
YHFr9PvIQrT/EsT3y7wbB9fFO+Lz6ThI+/yvwyBrAvIstciZgTg0O+tz8i9N
gZFnqib9NA7zyxMpGHsa5K9lCDsKorxvlU9PTJwFnjUNvqboPPhwUeq8mPo8
6FYZB92QzgPZq7d9YssXoOPrI/+zmbnwLv3UIsv9Lziq+eUcPZALQfH9opd5
l8H3YOl98scccG3l9o0pXoHIzE5HKdUcOPWvt1uP4xqsmvG3jeJkMFyz9Evy
3IBN+jgPndEig1MbZeqLORfWq5otkVqUDXq+z/+z3sONmd2UmAnRyYboO5PF
gkxuTKYi2aC5NguYPqmMpFIejJXKWylsnAUTdkW25YEbMaJAwuBgSybM3hbe
XG+9CfOd3n6QbJYJ+Ua1y/aHeDEzq887N3VnAMdRVYNnlhfznrvrUWybAdLZ
XRGB9ZuxD9uF+G7T0kGwjKYfH82HmeS1a+S4pMPs4hHxaPct2HTj8/Bhdhpc
eqhyJMqIH5vcrefgeysN7lcFJckIC2CPx9S6M2ZSIeSYkmoMRwBb1OHxrL2X
Ctd8lEQSCwUxLlGeb55LKZDB33E8xUsIuykh+iDYPwXGP/8MjDDfipW+F7oa
tSkFxogS8sLSBOxDltrAoVASZPAY9kXJELCNBzYVioaQwKbhfpSYHAGzT28P
5gkiQfvNBp69hwiYUoqnZqc/Cb6H+g6oHCdgBYlVoS+8SBBOY8ae/R8B+xF2
5US3Cwk0wgoEX70hYOyHz+NeniHBxJXBCsEIAmY8e9HtnhEJsvZvfRr2LwHL
vSd/yuo0CaSLHVjRiQTM3a1u8ogeCfgY4lVp2QRsyWmXUb8WCbqO+z6rrCZg
gtey5o8qkiCSN1fDsJaA3en2rN+jQAKTpq7R2gYC1nz5HElAjgQV9uqWf1oJ
2L8WMyaDe0lAfsskDlEJmPT5k2khYiSwtxSZsGMSMN+GbZ6P/iHBHnmddBab
gFGNqRdsdqL+v8XtnJwkYBlGL1c0t6P+A6vr7s8SMIGaK39kCGh8pjN+CwsE
7PapQ5lCQiQol9x73HOZgDVWrnkv8JPAi3l2am2NgB3Wa75I5SPB/wFJyzGZ

        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
p+7v1Q==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[Mu] (pushing location)\"", TraditionalForm], 
       FormBox["\"Torque\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0.026000000000000002`}, DisplayFunction :> Identity, 
     Epilog -> {
       LineBox[
        NCache[{{2^Rational[-1, 2], 0}, {2^Rational[-1, 2], 1}}, {{
          0.7071067811865475, 0}, {0.7071067811865475, 1}}]]}, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotLabel -> FormBox["\"Triangular distribution\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"2", "3", "4", "5"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.684543705403277*^9, 3.68454371324186*^9}, 
   3.684634462340859*^9, 3.684635681476083*^9, 3.684668008758712*^9, 
   3.684688638615163*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"TorquePivot", "[", 
     RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", "\[Mu]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6764676711948633`*^9, 3.676467689250969*^9}, {
   3.683655816302288*^9, 3.683655818012466*^9}, 3.6845336058575497`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {"1", 
        RowBox[{
         RowBox[{"\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], ">", "0"}]}]},
       {
        RowBox[{"-", 
         FractionBox["1", 
          RowBox[{"12", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
           RowBox[{"\[Sigma]", "\[GreaterEqual]", 
            FractionBox["1", 
             SqrtBox["6"]]}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Mu]", ">", "1"}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "-", 
             RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}]}], 
          ")"}]}]},
       {
        FractionBox[
         RowBox[{"3", "-", 
          RowBox[{"6", " ", 
           SuperscriptBox["\[Mu]", "2"]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}]}]},
       {"0", 
        RowBox[{
         RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
         RowBox[{"\[Sigma]", "<", 
          FractionBox["1", 
           SqrtBox["6"]]}]}]},
       {
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{"3", " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{"6", " ", 
            SqrtBox["6"], " ", "\[Mu]", " ", "\[Sigma]"}], "-", 
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"6", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
          RowBox[{"36", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]]}], 
        RowBox[{
         RowBox[{"\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], ">", "0"}]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"3", " ", 
           SuperscriptBox["\[Mu]", "2"]}], "-", 
          RowBox[{"6", " ", 
           SqrtBox["6"], " ", "\[Mu]", " ", "\[Sigma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"6", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", ">", "1"}], "&&", 
         RowBox[{"0", "<", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}]}]},
       {
        RowBox[{
         FractionBox["1", "36"], " ", 
         RowBox[{"(", 
          RowBox[{"18", "-", 
           FractionBox[
            RowBox[{"3", " ", 
             SuperscriptBox["\[Mu]", "2"]}], 
            SuperscriptBox["\[Sigma]", "2"]], "+", 
           FractionBox[
            RowBox[{"6", " ", 
             SqrtBox["6"], " ", "\[Mu]"}], "\[Sigma]"]}], ")"}]}], 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}]}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.676467689734181*^9, {3.683655818551602*^9, 3.6836558232819147`*^9}, 
   3.684533255979312*^9, 3.684634463538602*^9, 3.684635682692934*^9, 
   3.684668009986906*^9, 3.684688639874906*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FindMaximum", "[", 
  RowBox[{
   RowBox[{"TorquePivotATB", "[", 
    RowBox[{"\[Mu]", ",", "100"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", "1"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"\[Sqrt]", "2"}], "/", "2"}], "]"}]}], "Input",
 CellChangeTimes->{{3.676467904065825*^9, 3.67646791129003*^9}, {
  3.6780146322743587`*^9, 3.678014693782064*^9}, {3.6845336531426153`*^9, 
  3.68453368574295*^9}, {3.68453372267428*^9, 3.6845337504064074`*^9}, {
  3.684538788650648*^9, 3.6845388162791433`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "nrnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function value \
\[NoBreak]\\!\\(-\\(\\(TorquePivotATB[\\(\\(1.`, \
100\\)\\)]\\)\\)\\)\[NoBreak] is not a real number at \[NoBreak]\\!\\({\[Mu]}\
\\)\[NoBreak] = \[NoBreak]\\!\\({1.`}\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::nrnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634463796012*^9, 3.684635682850985*^9, 
  3.684668010214738*^9, 3.684688640032325*^9}],

Cell[BoxData[
 RowBox[{"FindMaximum", "[", 
  RowBox[{
   RowBox[{"TorquePivotATB", "[", 
    RowBox[{"\[Mu]", ",", "100"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", "1"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.684533736315269*^9, 3.68453375082355*^9}, {
   3.684538792200719*^9, 3.684538816693467*^9}, 3.684634463817914*^9, 
   3.684635682858906*^9, 3.684668010224049*^9, 3.684688640040004*^9}],

Cell[BoxData["0.7071067811865475`"], "Output",
 CellChangeTimes->{{3.684533736315269*^9, 3.68453375082355*^9}, {
   3.684538792200719*^9, 3.684538816693467*^9}, 3.684634463817914*^9, 
   3.684635682858906*^9, 3.684668010224049*^9, 3.6846886400439034`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Comparison Plots", "Subsection",
 CellChangeTimes->{{3.684538773093625*^9, 3.6845387789630013`*^9}, {
  3.684542352618402*^9, 3.6845423568740664`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"bestPushNorm", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ans", "=", 
        RowBox[{"FindMaximum", "[", 
         RowBox[{
          RowBox[{
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"-", 
                  FractionBox[
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], 
                   RowBox[{"2", " ", 
                    SuperscriptBox["\[Sigma]", "2"]}]]}]]}], "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"-", 
                 FractionBox[
                  SuperscriptBox["\[Mu]", "2"], 
                  RowBox[{"2", " ", 
                   SuperscriptBox["\[Sigma]", "2"]}]]}]]}], ")"}], " ", 
             "\[Sigma]"}], 
            SqrtBox[
             RowBox[{"2", " ", "\[Pi]"}]]], "+", 
           RowBox[{
            FractionBox["1", "2"], " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Erf", "[", 
               FractionBox[
                RowBox[{"1", "-", "\[Mu]"}], 
                RowBox[{
                 SqrtBox["2"], " ", "\[Sigma]"}]], "]"}], "+", 
              RowBox[{"Erf", "[", 
               FractionBox["\[Mu]", 
                RowBox[{
                 SqrtBox["2"], " ", "\[Sigma]"}]], "]"}]}], ")"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Mu]", ",", "1"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", 
         RowBox[{"First", "@", "ans"}], ",", 
         RowBox[{"ans", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
        "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "0.01", ",", "1", ",", "0.01"}], "}"}]}], 
     "]"}]}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.684539759369796*^9, 3.684539766770606*^9}, {
  3.68454237504427*^9, 3.684542375371945*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634463899085*^9, 3.684635682930705*^9, 
  3.684668010384075*^9, 3.684688640112808*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.12743099999999998872546314032661030069`5.1258750044753905", ",", 
   "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.6845397674626293`*^9, 3.684542384795682*^9, 
  3.684634463979389*^9, 3.684635683010354*^9, 3.6846680104677887`*^9, 
  3.684688640184984*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"bestPushUni", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ans", "=", 
        RowBox[{"FindMaximum", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"TorquePivotUni", "[", 
            RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Mu]", ",", 
            RowBox[{"Max", "[", 
             RowBox[{
              RowBox[{"1", "-", 
               RowBox[{"\[Sigma]", 
                RowBox[{"\[Sqrt]", "3"}]}]}], ",", 
              RowBox[{"\[Sigma]", 
               RowBox[{"\[Sqrt]", "3"}]}]}], "]"}]}], "}"}]}], "]"}]}], ";", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", 
         RowBox[{"First", "@", "ans"}], ",", 
         RowBox[{"ans", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
        "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "0.01", ",", "1", ",", "0.01"}], "}"}]}], 
     "]"}]}], ";"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"bestPushUniBot", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ans", "=", 
        RowBox[{"FindMaximum", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"TorquePivotUni", "[", 
            RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Mu]", ",", 
            RowBox[{"1", "-", 
             RowBox[{"\[Sigma]", 
              RowBox[{"\[Sqrt]", "3"}]}]}]}], "}"}]}], "]"}]}], ";", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", 
         RowBox[{"First", "@", "ans"}], ",", 
         RowBox[{"ans", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
        "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "0.01", ",", "1", ",", "0.01"}], "}"}]}], 
     "]"}]}], ";"}], "]"}]}], "Input",
 CellChangeTimes->{{3.684539481796115*^9, 3.6845394881208687`*^9}, {
  3.68454136885922*^9, 3.684541404523679*^9}, {3.684541477889475*^9, 
  3.684541492077577*^9}, {3.684542377163807*^9, 3.68454237733956*^9}, {
  3.684542512842882*^9, 3.684542561507465*^9}, {3.6845426182605047`*^9, 
  3.684542634353174*^9}, {3.684543372905573*^9, 3.6845433798502083`*^9}, {
  3.6845434102664003`*^9, 3.68454342476092*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846344640481052`*^9, 3.684635683070904*^9, 
  3.6846680105347633`*^9, 3.684688640251176*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846344640481052`*^9, 3.684635683070904*^9, 
  3.6846680105347633`*^9, 3.6846886403056087`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846344640481052`*^9, 3.684635683070904*^9, 
  3.6846680105347633`*^9, 3.6846886403627*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(FindMaximum :: \
lstol\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.6846344640481052`*^9, 3.684635683070904*^9, 
  3.6846680105347633`*^9, 3.6846886403810987`*^9, 3.684839589634404*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.22257299999999999307043196949962293729`5.3680723928550815", ",", 
   "Null"}], "}"}]], "Output",
 CellChangeTimes->{
  3.684539491999902*^9, {3.684541372176519*^9, 3.684541405262801*^9}, {
   3.68454148008794*^9, 3.684541492595182*^9}, 3.684542386864703*^9, {
   3.684542514601239*^9, 3.6845425621064043`*^9}, 3.6845426349628696`*^9, {
   3.68454341768991*^9, 3.684543425461896*^9}, 3.684634464230507*^9, 
   3.684635683260054*^9, 3.684668010717383*^9, 3.6846886404236803`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846344640481052`*^9, 3.684635683070904*^9, 
  3.6846680105347633`*^9, 3.6846886404874372`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846344640481052`*^9, 3.684635683070904*^9, 
  3.6846680105347633`*^9, 3.684688640538663*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846344640481052`*^9, 3.684635683070904*^9, 
  3.6846680105347633`*^9, 3.68468864059182*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(FindMaximum :: lstol\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846344640481052`*^9, 3.684635683070904*^9, 
  3.6846680105347633`*^9, 3.684688640610427*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "fmgz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered a gradient that is effectively zero. The \
result returned may not be a maximum; it may be a minimum or a saddle point. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FindMaximum/fmgz\\\", \
ButtonNote -> \\\"FindMaximum::fmgz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846344640481052`*^9, 3.684635683070904*^9, 
  3.6846680105347633`*^9, 3.684688640657858*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "fmgz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered a gradient that is effectively zero. The \
result returned may not be a maximum; it may be a minimum or a saddle point. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FindMaximum/fmgz\\\", \
ButtonNote -> \\\"FindMaximum::fmgz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846344640481052`*^9, 3.684635683070904*^9, 
  3.6846680105347633`*^9, 3.68468864067673*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "fmgz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered a gradient that is effectively zero. The \
result returned may not be a maximum; it may be a minimum or a saddle point. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FindMaximum/fmgz\\\", \
ButtonNote -> \\\"FindMaximum::fmgz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846344640481052`*^9, 3.684635683070904*^9, 
  3.6846680105347633`*^9, 3.684688640714922*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(FindMaximum :: fmgz\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846344640481052`*^9, 3.684635683070904*^9, 
  3.6846680105347633`*^9, 3.68468864071859*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.31402999999999997582378341576259117573`5.517571052474177", ",", "Null"}],
   "}"}]], "Output",
 CellChangeTimes->{
  3.684539491999902*^9, {3.684541372176519*^9, 3.684541405262801*^9}, {
   3.68454148008794*^9, 3.684541492595182*^9}, 3.684542386864703*^9, {
   3.684542514601239*^9, 3.6845425621064043`*^9}, 3.6845426349628696`*^9, {
   3.68454341768991*^9, 3.684543425461896*^9}, 3.684634464230507*^9, 
   3.684635683260054*^9, 3.684668010717383*^9, 3.684688640753598*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Last", "[", 
  RowBox[{"{", 
   RowBox[{
   "0.13768099999999999782929194225289393216`5.15947392496363", ",", "Null"}],
    "}"}], "]"}]], "Input",
 NumberMarks->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"bestPushTriATB", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ans", "=", 
        RowBox[{"FindMaximum", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"TorquePivotTriATB", "[", 
            RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Mu]", ",", "1"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", 
         RowBox[{"First", "@", "ans"}], ",", 
         RowBox[{"ans", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
        "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "0.01", ",", "1", ",", "0.01"}], "}"}]}], 
     "]"}]}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.684533733790844*^9, 3.68453373380893*^9}, {
   3.684538649827408*^9, 3.684538714949552*^9}, 3.68453892285102*^9, {
   3.684542378699654*^9, 3.68454237881138*^9}, {3.6845436590584784`*^9, 
   3.684543659444222*^9}, 3.684543720984222*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634464778311*^9, 3.684635683686736*^9, 
  3.684668011271706*^9, 3.684688640858337*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634464778311*^9, 3.684635683686736*^9, 
  3.684668011271706*^9, 3.684688640911736*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "sdprec"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Line search unable to find a sufficient increase in the \
function value with \[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digit \
precision. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/FindMaximum\\\", \
ButtonNote -> \\\"FindMaximum::sdprec\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634464778311*^9, 3.684635683686736*^9, 
  3.684668011271706*^9, 3.684688640973918*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634464778311*^9, 3.684635683686736*^9, 
  3.684668011271706*^9, 3.6846886410335207`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(FindMaximum :: lstol\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634464778311*^9, 3.684635683686736*^9, 
  3.684668011271706*^9, 3.684688641064848*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.32592399999999999149480345295160077512`5.533716254977648", ",", "Null"}],
   "}"}]], "Output",
 CellChangeTimes->{
  3.684538715723082*^9, {3.68453892449374*^9, 3.6845389296288853`*^9}, 
   3.6845423903632307`*^9, 3.684543660180376*^9, 3.684634465051095*^9, 
   3.684635683948936*^9, 3.684668011570998*^9, 3.684688641136376*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"bestPushTri", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ans", "=", 
        RowBox[{"FindMaximum", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"TorquePivot", "[", 
             RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], "&&", 
            RowBox[{"\[Mu]", ">", "0"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Mu]", ",", "1"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", 
         RowBox[{"First", "@", "ans"}], ",", 
         RowBox[{"ans", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
        "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "0.01", ",", "1", ",", "0.01"}], "}"}]}], 
     "]"}]}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.676466416448494*^9, 3.676466470673649*^9}, {
   3.6764665929400253`*^9, 3.6764667320443153`*^9}, {3.6764667913415413`*^9, 
   3.676466813481152*^9}, {3.6764670024882803`*^9, 3.676467011715851*^9}, {
   3.684533315639995*^9, 3.6845333574782143`*^9}, {3.684533424740246*^9, 
   3.684533427664321*^9}, 3.684533609947345*^9, {3.6845386232823772`*^9, 
   3.6845386237138233`*^9}, {3.684538695860608*^9, 3.684538724948888*^9}, {
   3.684542380459647*^9, 3.6845423806275063`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634465183243*^9, 3.684635684230503*^9, 
  3.684668011698328*^9, 3.6846886414162188`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634465183243*^9, 3.684635684230503*^9, 
  3.684668011698328*^9, 3.684688641642754*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634465183243*^9, 3.684635684230503*^9, 
  3.684668011698328*^9, 3.684688641758387*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(FindMaximum :: lstol\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634465183243*^9, 3.684635684230503*^9, 
  3.684668011698328*^9, 3.684688641799696*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "6.05866599999999966286168273654766380787`6.802976924803199", ",", "Null"}],
   "}"}]], "Output",
 CellChangeTimes->{3.6845387358336267`*^9, 3.6846344708471212`*^9, 
  3.6846356912122307`*^9, 3.684668017922505*^9, 3.6846886473573627`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plotBestLocationPivotObject", " ", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"bestPushNorm", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
          RowBox[{"bestPushNorm", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"bestPushTriATB", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
          RowBox[{"bestPushTriATB", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"bestPushUni", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
          RowBox[{"bestPushUni", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"bestPushUniBot", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
          RowBox[{"bestPushUniBot", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}], 
        "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Sigma] of swarm\>\"", ",", 
        "\"\<Optimal push location (\[Mu])\>\""}], "}"}]}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Filling", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"3", "\[Rule]", 
        RowBox[{"{", "4", "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "Automatic", ",", "Automatic", ",", 
        RowBox[{"ColorData", "[", 
         RowBox[{"97", ",", "3"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"LineLegend", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<Normal\>\"", ",", "\"\<Triangle\>\"", ",", 
            "\"\<Uniform\>\""}], "}"}], ",", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Black", ",", "Bold", ",", "8"}], "}"}]}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.77", ",", "0.75"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Dashed", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"2", "/", "3"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"100", ",", 
             RowBox[{"2", "/", "3"}]}], "}"}]}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{
              RowBox[{"\[Sqrt]", "2"}], "/", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"100", ",", 
             RowBox[{
              RowBox[{"\[Sqrt]", "2"}], "/", "2"}]}], "}"}]}], "}"}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"1", "/", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"100", ",", 
             RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}], "]"}]}], 
       "\[IndentingNewLine]", "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", 
        RowBox[{"{", 
         RowBox[{"0.4", ",", "1.0"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Prolog", "\[Rule]", " ", 
      RowBox[{"Inset", "[", 
       RowBox[{"pivotDrawing", "[", 
        RowBox[{"1", "/", "10"}], "]"}], "]"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", "\[IndentingNewLine]", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<Where to push object pivoted at 0, length 1, to maximize \
torque\>\""}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<../abecker/SwarmPublications/JournalTorqueControl/pictures/pdf/\
BestLocationPivot.pdf\>\"", ",", "%"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotMaxTorquePivotObject", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"bestPushNorm", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
          RowBox[{"bestPushNorm", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], 
        "]"}], ",", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"bestPushTriATB", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
          RowBox[{"bestPushTriATB", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"bestPushUni", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
          RowBox[{"bestPushUni", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], 
        "]"}]}], "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Sigma] of swarm\>\"", ",", "\"\<Max Torque\>\""}], 
       "}"}]}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<Normal\>\"", ",", "\"\<Triangle\>\"", ",", "\"\<Uniform\>\""}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Right", ",", "Top"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<Maximum possible torque on object pivoted at 0, length 1\>\""}], 
     ",", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<../abecker/SwarmPublications/JournalTorqueControl/pictures/pdf/\
MaxTorquePivot.pdf\>\"", ",", "%"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GraphicsRow", "[", 
   RowBox[{"{", 
    RowBox[{"plotBestLocationPivotObject", ",", "plotMaxTorquePivotObject"}], 
    "}"}], "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.676466820390336*^9, 3.676466989524275*^9}, {
   3.676467176427374*^9, 3.676467178092044*^9}, {3.676467921880308*^9, 
   3.676467966912457*^9}, {3.676468003785376*^9, 3.6764681638781776`*^9}, {
   3.676468384380714*^9, 3.6764684153499928`*^9}, {3.676707813843314*^9, 
   3.6767079846388817`*^9}, {3.676708047904991*^9, 3.6767081476060266`*^9}, {
   3.6767082139474154`*^9, 3.6767082727058077`*^9}, {3.6767083111956387`*^9, 
   3.67670831472095*^9}, {3.6845337620296717`*^9, 3.684533764907995*^9}, {
   3.684538635321357*^9, 3.684538643391612*^9}, {3.684538747385893*^9, 
   3.6845387563731527`*^9}, {3.684539513008461*^9, 3.684539632658648*^9}, {
   3.6845396872828693`*^9, 3.684539701923581*^9}, {3.684539783126017*^9, 
   3.684539794917314*^9}, {3.684539829955718*^9, 3.684539929322253*^9}, {
   3.684539974204549*^9, 3.684539998544354*^9}, {3.684540045281748*^9, 
   3.68454009313211*^9}, {3.68454017096564*^9, 3.6845401888859377`*^9}, {
   3.6845414193238163`*^9, 3.684541433577652*^9}, 3.684541519396113*^9, 
   3.6845424131349707`*^9, {3.684542653280794*^9, 3.684542657339637*^9}, {
   3.684543360939043*^9, 3.684543366906088*^9}, {3.6845434300387774`*^9, 
   3.684543458328472*^9}, {3.684543604949129*^9, 3.684543617696163*^9}, 
   3.684543728731419*^9, {3.684635845492674*^9, 3.684635897530367*^9}, {
   3.684688586852866*^9, 3.684688591831575*^9}, {3.684688803380711*^9, 
   3.684688883682922*^9}, {3.684688922675078*^9, 3.684689121375661*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     FormBox[
      TagBox[
       FormBox[
        GraphicsBox[{{{}, GraphicsComplexBox[CompressedData["
1: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
/l9QclZ2
            
            "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, 
              {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.2], EdgeForm[
               None], GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwlzkdOQgEARdH/wV4Q7IigIMp+3IAJC9B12ruiYu8dOxbQkzg4uW/4ssWZ
yelIEAQhU0SNBhppopkWWmmjnQ46idFFnATd9NBLH/0MMEiSIVIMkybDCKNk
yTFGngLjRJggDP9P/kqdGj9888UnVT54541XXnjmiQqPPHDPHbfccM0Vl1xw
zhmnnHDMEYccsE+ZPXbZocQ2W2yywTprrLLCMkssssA8c8zyBxBkNkU=
                 
                 "]]]}, {}, {}}, {{}, {}, {}, 
              {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
               0.011111111111111112`], AbsoluteThickness[1.6], 
               LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
                 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 
                32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 
                47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 
                62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 
                77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 
                92, 93, 94, 95, 96, 97, 98, 99, 100}]}, 
              {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
               0.011111111111111112`], AbsoluteThickness[1.6], 
               LineBox[{101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
                 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 
                124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 
                136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 
                148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 
                160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 
                172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 
                184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 
                196, 197, 198, 199, 200}]}, 
              {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
               0.011111111111111112`], AbsoluteThickness[1.6], 
               LineBox[{201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
                 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 
                224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 
                236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 
                248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 294}]}, 
              {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
               0.011111111111111112`], AbsoluteThickness[1.6], 
               LineBox[{259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269,
                 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 
                282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 
                295}]}}}], {}}, InsetBox[
           TemplateBox[{"\"Normal\"","\"Triangle\"","\"Uniform\""},
            "LineLegend",
            DisplayFunction->(FormBox[
              StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                GrayLevel[0], FontWeight -> Bold, FontSize -> 8, FontFamily -> 
                "Arial"}, Background -> Automatic, StripOnInput -> False], 
              TraditionalForm]& ),
            Editable->True,
            InterpretationFunction:>(RowBox[{"LineLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                    "}"}], "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", "Bold", ",", "8"}], "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
               "]"}]& )], Scaled[{0.77, 0.75}], ImageScaled[{0.5, 0.5}],
           BaseStyle->{FontSize -> Larger},
           FormatType->StandardForm]},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{
           FormBox["\"\[Sigma] of swarm\"", TraditionalForm], 
           FormBox["\"Optimal push location (\[Mu])\"", TraditionalForm]},
         AxesOrigin->{0, 0.403},
         DisplayFunction->Identity,
         Epilog->{
           Dashing[{Small, Small}], 
           LineBox[
            NCache[{{0, 
               Rational[2, 3]}, {100, 
               Rational[2, 3]}}, {{0, 0.6666666666666666}, {
              100, 0.6666666666666666}}]], 
           LineBox[
            
            NCache[{{0, 2^Rational[-1, 2]}, {100, 2^Rational[-1, 2]}}, {{
              0, 0.7071067811865475}, {100, 0.7071067811865475}}]], 
           LineBox[
            NCache[{{0, 
               Rational[1, 2]}, {100, 
               Rational[1, 2]}}, {{0, 0.5}, {100, 0.5}}]]},
         Frame->{{False, False}, {False, False}},
         FrameLabel->{{None, None}, {None, None}},
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImageSize->Medium,
         Method->{},
         PlotLabel->FormBox[
          "\"Where to push object pivoted at 0, length 1, to maximize \
torque\"", TraditionalForm],
         PlotRange->{{0, 1.}, {0.4, 1.}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}},
         Prolog->InsetBox[
           GraphicsBox[{
             RGBColor[0.6, 0.4, 0.2], 
             RectangleBox[
              NCache[{0, 
                Rational[-1, 10]}, {0, -0.1}], 
              NCache[{1, 
                Rational[1, 10]}, {1, 0.1}]], 
             RGBColor[0, 0, 1], 
             PointBox[{0, 0}], 
             RGBColor[1, 0, 0], 
             PolygonBox[
              
              NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2},
                 {
                 Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
                1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]], 
             GrayLevel[0], 
             PointSize[Tiny], 
             PointBox[CompressedData["
1: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
WA==
              "]]}, PlotRange -> {{-1, 3}, {-8, 2}}, 
            AxesOrigin -> {0, 0}]],
         Ticks->{Automatic, Automatic}],
        TraditionalForm],
       InterpretTemplate[Legended[
         Graphics[{{}, 
           GraphicsComplex[CompressedData["
1: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
/l9QclZ2
            
            "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {
               EdgeForm[], 
               Directive[
                RGBColor[0.560181, 0.691569, 0.194885], 
                Opacity[0.2]], 
               GraphicsGroup[{
                 Polygon[CompressedData["
1:eJwlzkdOQgEARdH/wV4Q7IigIMp+3IAJC9B12ruiYu8dOxbQkzg4uW/4ssWZ
yelIEAQhU0SNBhppopkWWmmjnQ46idFFnATd9NBLH/0MMEiSIVIMkybDCKNk
yTFGngLjRJggDP9P/kqdGj9888UnVT54541XXnjmiQqPPHDPHbfccM0Vl1xw
zhmnnHDMEYccsE+ZPXbZocQ2W2yywTprrLLCMkssssA8c8zyBxBkNkU=
                  
                  "]]}]}, {}, {}}, {{}, {}, {}, {
               Hue[0.67, 0.6, 0.6], 
               Directive[
                PointSize[0.011111111111111112`], 
                RGBColor[0.368417, 0.506779, 0.709798], 
                AbsoluteThickness[1.6]], 
               
               Line[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 
                17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 
                32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 
                47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 
                62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 
                77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 
                92, 93, 94, 95, 96, 97, 98, 99, 100}]}, {
               Hue[0.9060679774997897, 0.6, 0.6], 
               Directive[
                PointSize[0.011111111111111112`], 
                RGBColor[0.880722, 0.611041, 0.142051], 
                AbsoluteThickness[1.6]], 
               
               Line[{101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 
                112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 
                124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 
                136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 
                148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 
                160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 
                172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 
                184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 
                196, 197, 198, 199, 200}]}, {
               Hue[0.1421359549995791, 0.6, 0.6], 
               Directive[
                PointSize[0.011111111111111112`], 
                RGBColor[0.560181, 0.691569, 0.194885], 
                AbsoluteThickness[1.6]], 
               
               Line[{201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 
                212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 
                224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 
                236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 
                248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 294}]}, {
               Hue[0.37820393249936934`, 0.6, 0.6], 
               Directive[
                PointSize[0.011111111111111112`], 
                AbsoluteThickness[1.6], 
                RGBColor[0.560181, 0.691569, 0.194885]], 
               
               Line[{259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 
                270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 
                282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 
                295}]}}}], {}}, {
          DisplayFunction -> Identity, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0.403}, 
           PlotRange -> {{0, 1.}, {0.4, 1.}}, DisplayFunction -> Identity, 
           AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {
            "\[Sigma] of swarm", "Optimal push location (\[Mu])"}, 
           AxesOrigin -> {0, 0.403}, DisplayFunction :> Identity, Epilog -> {
             Dashing[{Small, Small}], 
             Line[{{0, 
                Rational[2, 3]}, {100, 
                Rational[2, 3]}}], 
             Line[{{0, 2^Rational[-1, 2]}, {100, 2^Rational[-1, 2]}}], 
             Line[{{0, 
                Rational[1, 2]}, {100, 
                Rational[1, 2]}}]}, Frame -> {{False, False}, {False, False}},
            FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
           PlotLabel -> 
           "Where to push object pivoted at 0, length 1, to maximize torque", 
           PlotRange -> {{0, 1.}, {0.4, 1.}}, PlotRangeClipping -> True, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {0, 0}}, Prolog -> Inset[
             Graphics[{
               RGBColor[0.6, 0.4, 0.2], 
               Rectangle[{0, 
                 Rational[-1, 10]}, {1, 
                 Rational[1, 10]}], 
               RGBColor[0, 0, 1], 
               Point[{0, 0}], 
               RGBColor[1, 0, 0], 
               
               Polygon[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {
                 1, -2}, {
                  Rational[1, 4], -3}, {0.75, -3}}], 
               GrayLevel[0], 
               PointSize[Tiny], 
               Point[CompressedData["
1:eJwVmnc8le8bx60GqTjPc4wWlRUlkRLlEkKiIlFKC4UKGY1vZkbSJKkk7SGV
EiWkq8gICaHsvY5xpl1+9++vXl7Vec657+v6fN5vLD7kZesqIiQk1CMqJPT/
P/ckLTmQeYcNz+QS89ezpXE0smBnUBQXNE/f2j40QOHlqBCR5tsdkHs1sUZ/
LxPbUoXs3Z4OwsNQ4edWChRusHlXUr1qCHxLEuXHFZn4I90mzM67AVIX7tp8
tZfGSS/J3LUHh2AcbrTZ5kvjNJmsbQzPHvBK78j6bUih5715nBteAkiMq9G5
9IDGRV/Zh9YdHQbhlLebvE8zMe6yS8XNiX4YVGJyxldTuKmzb9ihlgdf1uZt
F3vFxD1rz03k7ePBwRPTbq4oY+AZrq2X0d1hWOY/yTysR6FQ/s6T6691QwPT
sOpqN43yFily910Gwbr4RZGaEI1lf+uqCp2HYYYsF7/cY6B1xvCd8skWKDwx
JTePZqLp4gwXPedWSA+ZcVDGjIHjH0znhWzlQMH1/E8migxcpV84O8KOC9q2
EWJX/6PwWGTw3+d6Y3D/wYj+c38GXnr/kil5iw8ueer906coVJbSPVPowod2
pQXrc3+T8zrtk3j4ci8cntOSkXCUxnG3GyKPUrtg6Hq0Uco3JmalzfuQ0tYD
v5Zn51qrUOiQvrQweWAQ8kqjZEXTafxv1YwY16JBiIqY8pcOkMLXD4RkEtcP
wzvfNMtoNxpDXeuX8Zh8OHVs9sqaSQZe+b17T/fLXqg+bKL24yCF78+b3lTW
H4AHfwMW9y5i4um/pp5NwcMw6KKpFD9FY9Zd4wMhat1wJD5XPCKKQpVgi4To
c22wOLpVRryOQpuzjZ/2p/ZDir+WUuAzCpeaZRRlWwzDKqUFkc8SaczIXXDp
tgYbhHd56q5VpbFry8Pmg04D0BsqWSJRzUCLhenrbl5qgqlUMw3+PBo3RGZw
x1u5IKpR4twTS2Okv/zaBOEmmGbsuX2BL4VbTjCtDL9wwcrA/v3fqzSmbdH5
yMppBPZY74z18Uxc+3lR4wODFihYfKnyqo4MBj08JZcoMgSXdqc94i5jonO9
Y2VqPQekukRf+s2lcZ1fjMM3ahx2ulw5kmQkg1o7It7dW8mFBRe8JdSDpDDz
jGvvEuBAn9IiT7dVTEzW8lmy130Y3HdPPZj+g4Ex7Lkh9PIe+Cj4lRz7kIH2
Xj6jvtPb4L73v8fST2kMrNiU902sFyzs7CqPURS6pKf8+iA/DBZr6I++YRSe
UnVfN1uvH35vfrrRoZBGaePaFf1kHx7tO6kpt4VCwbzLNQ+dOaA06+Ptpns0
Ns6In0YXsEDEYzT7ni2N/vldQVvch+Dw6vEemywmvsC/i/4uFICa4cI5nidp
hPe3KgJNRiH0XnaU2n0K71n1hJb5scFqZC/XLIqBmW8zG+rXscBIekWhcA+F
9cd9izOwHc59ebJt2noadxtllZY1cmCkNtNQ5DQDp3+cEcBbLYBgq90cNRkm
rvSv3l8ZwYVmo4Tltx1oXLM7zmr+2i6Q/pZW4f5ICh98tverc+dDzZ8ez9dp
NFp81DAZzBqFfz3NcglJTEz6/MPzjN4gdG8K1tOVl8HgrLP537b2QdK/aecm
jzGRtXLTQLcHG5473W8JkKCw7zrb6IlJH9h+FYkses3EkGe7So0ae0B1UYPI
4X4ZNJi9vDjzVw+4Bzr5XR2VQSXmEMdNjgtlH99+eV9IocxxfsaFB2MgN5ri
sOuZNP78t/NEYXIjtMWtf3BegYky/CdP9a6Pw4Bx9gvdQxTy1ua+emc5CGcV
YxnCJgw0/nTjSmjKOCz6u7ftYZEUzsws7ozZPwa3tlIf5ryn8LPT4Pp1PA7M
n6b4b4cOE9crpFtO1g/ADYPUzecf03go3u2QZCcPSm2O3509Vwa5K+Jn0WpN
0MCVysqNZOBzi9jFfYWTgPOqv8raMfH9q7fadgda4dGFuGnHLlB46PmYGVu0
CQqmxzxgnafQ0SmkJ5DmwC3RpXklV0k+vfz5lfGHC3PU3T5KBtEYff/NxW+W
7bCvJNOGfZ3C/3Skji+80QhBrZpchZ0MjDxwsPmMaQtccCkd9W2TxpUXP0te
dh6AfXPORGU5MjAo/Z0oq44PxatZKjFfGbgk+HLOi8oaiFoYLrtpnMLAlv4m
e6t+UBy6V7G+noFfLhw3vf1sEGyNii6YfmFg3bwFrgbefLg1YHFNvYjCjriQ
b5LSAhi0/6yWRvLt9fEGmcchHHi2rih3NI6JG3UrJ8JTuNDV4BGeUCeNYp/V
Vk1/PAzssJg/3sjAwmC7pL5TbPh8pP5HowfZp7yFIbNTuiDzfewns+U0usco
n1vwSAAf4zk/xY7R+Ev1XF1aPAdc6yqubNtB9v9LwL8jsztBUlbT5vIsGgPO
TNskrTEEK7uGnHKbaBwYchDZL9ICDvOPyB27SGNKuyy9tX8ArNeUrLROpvBk
htwR9rQu2JMWvUOenK/T26uPt3YMQY/1WtnaBxQ6J0fbm/py4Pw3n+CGFJJv
/nXsL91smLl0463CxRS2xATrdRgOw0HtFmfDKJJvRntfbndjweNX3vOL2BRq
Ns+M7X/aAVt3bOwyU2KiA3P2TPZBDtQ2fSxmFjJQVvSur7wiF0pmfznT6UHj
vG8zF7ee7QaWg05S5lkKT39NCu1u54JJk8709fso7K/fbOY9OAi76z+pqZO8
199hfdt7xghQ+1c7lZ9hICMz6q28Nxfexzuvt1whg94KYakhs8egRpI9U24J
jczNyyU1dnBhn5MSiCGF0VMxVYpFfWD482O2JdnHIsGE6BVFHjhoL2R0vJTB
pUtymhdvHoZT6zQOB6cy0O1QyslD+n3wpezDx5+3aDR+pR9+yLINykwTVUrJ
vGW+fyKnerodfiiUrF1iT2Pd3+tKWbuH4Vi5r33ATQofHxpbE3K6G0omzDd/
XcxEy3CP6VKtAmg49cH/zw8KJ+dNHbuTTfonUmHfVCiNSsZU3VFlPgQ8yDN7
dIeBa9dsO5MoNgLT2ipOFHYwcPPXFJVgZR5UfW7xA8IfS1Z8nKoy6ICuZT7J
27VI3unSzreNOHB3+cscLZJ/gnfXBrqBDb9dL5SxdjPwPF+S+qw5DFulrpYx
hxmYfTVJ+dGMAXDtOShsNJ9C5pl7G3YtZ8NJlpHL9XUy2LHQXCjLggv+iX38
fJLnza2CaZY3OBAWazFZZE2jzH0Xe9cuLhhfLb08MsHEhrcxZkUTfOj1V7c5
90AamZKRXwzcOeAU49RZXUbhuWfH7YdOtADbXPTmhVdkni4HPGuOGQbBcoVZ
n7+TfdvdVFl6txc8Fnb8mDSh0Leb0R+cxgFFd5Pz+3/SyA56DiEv2XAqqv3W
uiEat8dHH/2RUUvyxzNb4wSFigeTdi1y7gfH4ksGFbspLP+p6XH1sgCo4LuK
/YMUUmXebOPt/aC7SK+8uI3w2pzFmqtDRsHl/vdru8woFPUqmMOfxYcV+3/M
d17NxOkrX6UFp3RC/0P3VycVCI88vpl3f5IDCoXjwl8X0mjIuuEg1tID58f2
xE4jfcQ6HjEwv6AXluunLLfyY+CRU2n/CT0QgEL2jSZXKxpj+nJ8O9mDcPWr
xOgS8vnN+t12ZmlwQdo5+9N2wi/ed27/kVo/CpY7P225u08Gvc7s/a3B4cJT
aUezV42kv5Z1GsZbcqE07XL6+U802nZ+ry6a9Rt8v83V/3WMgUImU5d/yPIh
UKAb4hhM+OZv5TtrDR6YBxSrLqJJP3c9vrMxdQKSrY67znhIY/lE656j4t3w
W7n0AJfMn5HyooOpz0eg3fWvgqwjOR+FXc6qoS3AeyJpNkq+9t95rSpfqhdc
mFfpI2kUmhp4r9l5gQ8zHz4prid5RKcFXwqUHIWfEXaJ6yIotL7frTRtayuI
nJ3zxeoxyfeJcLFj2r3w58j0Gw6+NAbl6ITQin1wcftGz2em0vi6JsD29uYx
6Oto1hSwKDT5vmE2u1sAJxdwPz+dksGny3tWLz7PA3+tOwpdVyks5X68qDsv
D86dXXLM9hGFq1y3LN+YxIUXZq7ppqJMtN6eeGnv+iFw4htFehIetp1Wcmzb
hy7od7lUdy6GRhdjzw22Kd3w81iehFMNyadpZtu2hRMeSisRHSbP//U+MbQ5
hgV1vr8ssveT+3KxSw5tbIexs4Gl0seZWH6YXim9qh9YHzgranMo/B3R5xgi
2QgiRl7CARtpfBfnKb5ibzvAQ/v7DUIUhnPMY1y+C4Dx6+4KYZL/CukqR3+9
5sDOeypBkb9o1F1Wulg5hQeNqUU1RSRfb8ty6gt1B2Dx88UnRv8wcW6yH6to
pA/2Gh+Qd9tE+CWr5bVEIgcmr62RsRcj/lOubLd1guzHY1RTJXlsKxI6V1GT
B9UrT+K9j4R/X0HYpwdcEBJ3X/nlPxq3mQurPi8ahpfuF6eLizDRru5r83/r
+YAunupfXSi8FNOp4/WBA1uVxzSOizPR8029a51CN/hk7D88jfDQruA3904R
PumT0PJPek36tqFxuNNrEMZ/tcXZkP7hsY6fHjnBBS47754xh0KJnoqIZFM2
MLXiUvcM0vjIMDtTcrIdNNrcdz9hknz9sUN97sl+qPTJeeQTQOGYfey6hB9c
GP4x8SOe7NvLpzGNh2/2wBopqd86JD8D9Larf9raAxKH/Bd/OMLA+X//U/j8
nA/JOrMczivIoGeVjFZ+2QDo7mC3eYQw8IGvFK9rFRvOLFv3I3yMRn3dIPuo
pQJwMN42pmtC+ozvb9JI8mE4snFw0Uca56ylrx3UEIBOtu3XQVkaL/0OszEP
4kL/tLGRPH8a+YlTRy9c7QNZ8SUx9nwaRZbteq52pgfWW9qV1oZQ6Hpd+3aN
Ix/OaG/qy3Rhov3hFQflzveDioyjaBfxhVLNfoGLgPTVvU1rvQ4w8VPHlcdJ
ye2wJ+jkHC1Vcn+rDB3T9/EhdnXnB/k9NLYsbP4Zld8KLlrNziN+NIrPtlqn
YSOAWTMtu7YQv1h02NTdjMGDumOHz28UlUHnW5mvTruzQZUpP2VO8shrZK6Z
TbMAjM8Z6O9OpbEoeoTfLDQC+do7cvJjmbgmTM95x3g7KD/YL2JA+sBGfwvt
INoLL2CDkVw/AzXeOeyfYg2DaPS+zzLvKFwYnP3l5l4O3Fx1ov36LhpNppYq
n4gegMJnZqdr7GiUXH9CZXC+AFrvg90ZKQqzlp5+Zo9sKG8wG/c+ysTEHm/J
xas5sB4dMuyUSF9W1v82yWHDH6HzJiYXmdhZYDyrejMPQkPmfkiupNB8aJ2k
xR42DLrK3822ZeDCjmUj+9f1Qd6aSwe1xqTQ6MI3Rq3cICj9bV+Rup/GwWYl
w7zwPzBDoF/G82SgPrWyrrm1GcKm/u4riSZ+zTz05LMPmad/+6ujmaSfeBm6
Dh9ZoFW8hl1aQeOCtXCh7CQHNhTeDtwewcS6Htmi/3aNgP2o+GtahIHRDV4f
hyR5sCb83rWFBhQGRcz7rCfJhgNhK4XGd1D40ubnKh/C19w9V6cHk3y/cXaH
pu6LPlie5mPwSJuJ+p+k2BnHRsDV04njXiuDYzkWoYV1LCg+LjP3w2wKY6PG
7ov+6IcMc8bUimMUTt+7+/5mVivw17xoWHJdGpMeH6hye8aCLoW7Hhw10r9t
uk0TvBG46n8++XAxhdtB6fCysTb4duau+o5+aeQo0RKSiTwQvjnJtCf5UPQt
QnNzmwDWPlvl1vgfEyVDsw+uIryTav+sUi+DQrnMbQV08iBoH3SyLZ8iPNu4
RlR8NR/SDDcOKpN8z1ofHDrK7IaqvSsHNhM/E2Oub1bIYMGpzc2PrQh/GOtd
u7RxgAue9nFrXwgxULzPNdOgohXY+Zi3vouBUnbqy5MM+fBS2ilL+jADw66q
ps2RYsPy6JcbrOxkMfGq4gVbkucJaV77L65gYvysqwtEb5K8i1hptu8Bje9P
x6+YGORC+aVwRwbZ1yL7PdeOVPBgrpppZvcYA30d7VfLz2mHrJ/sVsfbDLyw
RPPY0nVsOM+/9t+WS0wM8FRv2tnbA1mK+bezZGRQbUbuStFDbXB5la9n/ysG
TtbdUofvfHgVo7HozgLi66nnPRZy+iGrSetI/yEGvt59tHR43iC0XOlRufuK
5PXMOI/Q7x3Ez1NvDtwlfbpU9n3WOB+2HzB/uYTs2wmH/T/T1fvAKe3QS4MR
Jj7aKVU+GjEAfvJNx25cobCy4+11pcddUDXMs9knQXjHYT3vSkgDuHm0rt49
ycRLJo6XdOo4UF0yJMxYycTrjBNSD1MG4VJrOrPOWwZz5EXfTRMaBj/Gi72a
L5k4Ouv2mFV3C/SvtkkNMWXij9ylWhtk+KAzM7XQkMzzvirhaR3k+fXHd/pd
E5B8VJP5zfLjwLbp0w4tWUhhV9Lt30VGVRDVMee3bTSNBaVGq9ue9oJJeFOT
Gvk8dSbnvSqSeOC818G/l/iO268J8dD3rXDXcf3OhQ2kv3linMdPRmCuT6OS
gj8T2xa36+gF8uCrvXb4UpIX2+/lfGEKhkCiJubb/fM0alVG65zJH4TrXUaj
3+OZSL3NlOmtYsMwuvk6ckk/Gppm6hX0w1PnSK155Lw3BOyPN5LnwKj7CdGt
05j4MCN7U83DduCG6+p/OUCh2lSQivplHgRcWkENEB7YtGPrSKA3C1Y5bUt3
Jvzssici/8oMDoRveKEQFE9h7rPmj5+e9kHxV52r72JkcHd3gP6F92xoysne
Wt5KY8ZmJTn1ugEY2HtS7OEeClXl22L181sgUa023a2WgZdFHD/F3GXD9xsm
FtIkD0xnTR/c4fgXfO70a3JyGWgUvjVeWawD5Bbn3E5aRGPCqO7yGPFJmHlP
j5WSKIWHbugFbXk1CAVzXE0iyL6XJQmtCr82COaKwe9WEj/OLJ5SWhowBEWb
uf5ztlMoM+F/4kUyDy43Te2fQ3jIarf68fMnRuFr51MJ6jWZV6mHL6MGW0B1
qyMjxIdGvWq+v63tP9AouMN45UBjvLFOd+d/7SCqcaXQaBcDV0adckxndMC9
e3XHxC4z0eNWS28m8fHHHke03qykcUee/NFgkyGwpm/POxrNxNZ3rC2ThEfo
ml+ZM1fJYqy/xNbPC9kwnl79OID4buK68Hn5UyxwHikuPF7PxFonntbNjSwI
iJ96ddqQiYHW96xhggdvE8JVWCCD51ZsLa2jeYCNcwRTbCnMUT+UkRDGhc/h
C++uNSN+0yo6U4z4oGPeuyFzeSZmJQ839fizYc+4vf00ORprfddumbAZg1cH
eEEzb5A8YGRyxXPq4Mbd8ocvnGiczPtjam7zDdYHzrokymBieg5l0WDOhwPc
hObt7TS+EN8m7avVDbaRVo9lzjGx1KZ42/paAYinRFWW6tMYYWxT47mLB45p
2+9Iicii/bVFoevuDQOmCRVqHGXgsZYjiwv0J0Hz1Z81/s9obDynUqL/gpyf
XrpQBfE341q7yn3Bw+CgZivi30+h50U5y01RA7DESnX0rAqFtMOjvaMRHWBo
pXgkb6Yslq1NjHi/mwu5/ZGxGqdIP9kWZ7ix+sBC977Ed4r4BX/pb2ANwJvL
XY43pGhsjfzbsrijEzr190da7ZTBF2UZS2IFIyCfHfzE7g0TGdoND2+11IH1
4UfXlIhfC4I/cn38RmGHnsvfvGwar60q+3m0mAW5mxYlyfnL4GOnXY2+e4nP
spf8/kX8XSAYdPS4xIYtW2JzDhL+atgfqv9Whw3Re1df7FeUxVkbsgqTk9jQ
EJIasH2I8HT7A0O1IjasO12tMtoujQdXJPUdqCZ8dDEEQgIp3DntbnLsNgEk
jt/rXd/GwObCydO5i3jw/pU079IyJuo0MeQU1Tph9byHz35WEb7p2mTA0uqE
xLp36QvqaTzC1VESv8aBNG9qMqNICtU/Lf7U5N4H2+N4cSanmcgWT3W+vKwT
2qhd6SJiTAxW9p1K1ueCQVhE1HgthWuaL96y926Ayze8nv2nTXzHJvVW/q92
2FCmferyOgrXn2GZwRk2eF+u/RXxlOxv3L6Pq+TZsE+k7t6GXxRurBMNbC9g
wWJZrbc/3JnINFi7pv82C6yqv6rELqCw/mVgT338EHxT7/SpuUBjrNYH6oow
B3Q3s/MPH6aRK9ewJVyNDeEWbur3k2h8vFag3ShogNyJqT/f3Mh+7YzfbrKC
C+6Wjap/SN/ukPla39DAgbmLbn7cE0Fjc1PSaPF7LtjOqf4ofVgGD0ZOTeg+
YsG5FeUKr5Yw8UuiVurRPxy4kj0ydJzw/SUd9wI/SxYYT+qz6SUUJkU++zNf
pgMqdryLnPacgZJ5caq+TVxw3autdqWAxs6QJRZFV7mQ87TY0G8uhd4iV/It
iI9mKWpr+fZI46968dXho7+hUcTnjkMh8e+fgTp5fR1wVdzUtIHwr9bLJ+eu
So/CXO11sj4tJP8LIrx4c/rgbgJ7pexiCqvLe4omyPNidbu+GxF+r1sW+c9q
XRvc4slXuwhTeGDiUoHXuz44UPh6Vynxs6r5/xLTg4bAs+ZzdX05jW0ZRv/y
6tpAou1bfnUyhQ9/K656ursHjrXPcl9wi+RJz+it+eU8iPA+R+8gee0xfeVi
XMqCTrgy0WVL4QpNn2m28TxInDbrn1ECjVnBd6JjvjbDoujUq9u3Upj56Hzt
qXX9YOY8Mun3lOSH+c7qiT89YPlYJ5KdTPKwwSbBnT0ANkW7T++fpPFCz/SW
fY8GIfx0kcxaKSYO12h6f0rvg7NZRTV/Emm8fPPmuOv9Hvivr+trj5gMxorZ
l/R/H4EHOh+FU24R/r2z1bb4QAccPVXSFU/6tPmRk4v1m2GwOVJbVxRE+Lfg
dnwW6ZuA1ftQ/BoDf7Fi7hWe7IHzzLC9AwkUXhhZt4y/RQBJDfKLdGfQ+LtP
M8BZhPCzicecoLcUXg57++fFEy40rNiBj8i+y6Xva3qmJgBe/U7e4HKSRyuO
jNR8+glzAk13q2VK45uq4MtiY1xIndhhU0fmgw77a33SlgPM2z+eHNpEfGhZ
qKvyi3FY0sl+H/2DiSFFw5s9e/tAWVZ/QL+A7Be9LqGLR/j65NDKGKQxnS//
+ojQICySXRu5XIKJJ4ebz//rrwGtutX993PJPP5zlgjUHYL8KPuvFcS/VSi9
qtDX3VCRu3X5yHMay5OKZmWIDACf+zOCmimD1scmtFVShkA4blF6D9mX0xcf
CMbDOuGz2bmoQ6HEn6yt7nz0GIQwH9l/ZhXSeKDkcPKIERsK9KYZlJH3L/ZP
YvuWIz0QV1nV5r+PiW5nLDXUie/OzV5//Owp4jNWl0/WOg/BU8XciVtHZNCi
9PF3o88CEDZibR/xYqCp3fPP3Rs74DDnatOJrzSOXGxYPXa5H7Y72gcfSKFx
8UGlgh2OA/DlulOlF+HRKFeHroQ9ZB8fhinqE5+tW+R4p+0sB1aIFXS/F2Li
sdDcD1f9WHCPV7fXNoKBto0azywqOJDxi7fAeRWFN4LvNi1tHoZ9dJBX/jUK
9eiMuCybTvg5Zjb9tw2N59QSP9lncyHa93tNpD7xj1u9B67ca4b5JzU9zOql
URLkow5mkqY9tFv4zicmfhSnl11+xwcRw3oJYXkZvGPndNm4dhQUF/e/byB+
kN93ccW5AQGwJ51Tbcj8Wi3dPX3Wol6wO9Wi/ZrMp09N162LQpPA7GOHGlXR
+F3T8qBI/TjEKA8u2DsohftsyzTMUzog0iX/+KZuBm63Gbuq/GgSLOpq1VUX
UTh892PbKv0p2F2zl6l6nIFuS4ZZLbZ8kDXq83stJYOvLjfobIhjwe2zL3ID
H5DzcHWIOSZSD9od9hW+pC9O1gT9+x3aDVeWWb1IPUPyW7R4luRRFoxlz3RT
H6LRXF/D+oZYF3RvmruceZFGR9N/6X5urbBol3dCwnTin191Rjc6DIGS15ab
GfkMLF8pqWO1rgdsThZXN96l0PJfimmDBxf0xjPy38UzcKQhIs3Kjw1ffCxo
uxlMVIyZvMT14EPjkz+nQ4kvNHimfbXrHAZJPFniwKfx9Ol/MUkPuTBD/san
5z2ErxJSPRKfc8Ht8XzDbaYUrjykP/m9vBe4r94+xi00Jj9a1SEfNgTrdhbR
J6OkcVxcr/jfGwHYf/1bbR1HYUFbu6yPwRiUzHAz4GjQuO1Hv7dhJw++8Fas
ZclRqB8bvWLo3Tj4P7n0M8SaifOtPhclkM+/3thDs15Ao/bhELvZKh0Q+nmR
xOVbhG/cPil3vmKB6f1DUocKaVT6fnmjdiUbfkhaHhxl0HjeW2q1Rl87rN6V
X+oSSqNG1IkEqX42JAiGnN+S/Pt2U+X1owo+eKeWZP2poXBoh++jUyWdMHrS
VlkznMZE5pvi96S/ljzZe+J5EI19srfLquuHYPORCv2CUBmcU9mq8OlKDzj/
+G9bE8nP9rTqekvfIWAvjJhveUAaczp7On4Ek88r0bZdKZ1GNe8LT1Yf6IT2
7Vcl0vxplNi+4ltoIgtmuJZNS95H4z9DvTULRVtAIHVYa8FDGgOsDVfLoQAk
l3mAQ58MSu8aax+P64Zf/zoDZgPx648DO2o1WZDB1z7s5cBEsc6Vp4dNR6Bn
/wdzWxPCr6mz1V5Zj8BF34MJ285JY13uZL1SWD0ssxA+37NUBtGvSu5DZSec
/inzLaKFgSlhklZHeW1QEBjOv5hFo6l5w725blVQcdF75O8O0v9/t1SYKfBB
ZUu5k1ujFH6ZNN8Q28QHn8v1B6+7U2gU8Kl2SXcTWGVvue1GfLXr5s++ptx6
iCyoXcUgPuMw1yjjOvKAp35vbJUoeb03g77374/C7VWfFgiTfDW6EhFwzKwT
Xrcx5C26pPG+IfunSjQfqkQXCzfUSOGsgdqnJkocMJiRUfdwPum/dEF1sIAP
TbZnzjlJURgUf+1WxexW2K4iJc0g+9MaNOf63jYexIgn9Zwj/97s2h6JZXPa
gKGx7sXoNAbGH61c0T86Cipe3iKO4xSOvhPMy3rBB7rlfKjcegr3KSVOTs4b
gaKHb8cG/qNwsEir7vTPQbi1fU7ZX3kGfsaRy/NLBmCl7YzgBQY0WjAvZPd9
6QXN72fqyurIvgn+FHB/8uF1pvTaKRkKJw9HcrO394OJgVJXcoE0/qd34J1K
aRu0Hrmf5PSBRvWMWY3XK1nw/r3c802STJyVO3b7rW0fhBanPdQQo/DuruLo
25ZsqHtwapaZGo2vWpuq7Niknw6VvZC3o3HFO7c/E/MHwChh3HAF4cGj8y4L
ZYf1g2vb9Yehvv//+bDAdXLpEEzEfwAbFRqXRKJ8bwMX3v16mNdZTXh6sdeb
uodj4Pj7+cHOv0yc8cKau+TRENifsmH1nCP5r9iqqbunBwYKOmJ+/aExbuNr
acVHbJi2XGLuTTEalb+xJXU3cWDlQPqRHA0KT9tqXb7n3w42811bFbUofCfU
WHsruA8Gd6tMW6DGxKrEoSrnGhbk3d2c9MSDib6ZjCXmWjwo3XLkn1EnjS4R
Wavq31ZAp+Ip/E+J+LuMV+3p500wJ6FjIluG9L+f254gJxaUuHEGqC8MfF0s
njXpyIWOkYihKKDRkyMCITrDsDbs6HVHwh/e6wVz6J09cMXQeahoM/GdSCEn
6nMPdJkHz215R16/3Mz7q3Mf5M5Lq5geI43Hyi86Px+oh5AlegcmrzPQI/KN
Vt+MRji1x+m7ZS6NT6lNB5PWVQPTd+n6LVY0iqosvrltrB9K/s351SpOYc6C
j3Vdv7pgg5Zq/G+SD8eKxZuy3DvgwNX4S4Ncks/tjz2dzo+A7HS/1WrLmej4
fnvY5MxOOF6Xdq3qAI3XH2862/u2F+Qaw7d6EX978kCzld3HAe27ejOK9xLe
sZ2pK0vy4l6t7beSYgr7r8/XLEnpg68vbxlofyb5Vn3904tFI+CT5N9n3cRA
/mzzdb5XRsGmV2jd+aUM7BjewrkiPAZVpzXuObwn91Vi8N+eMj7oO660vppD
I91x655qzhBYPf1e9Nea+OvkcJp4ZT/kKxwwDTrMQM+CK7dvyXTDV87p7zON
mVgZmv/z5ONR6LBiy/5yp/H1K4Pe9erk/At7jKuI3x4WLPT4mT4KFo9SJDcT
Pl/25sLOkRYeOKxIjXvxjYGZ/0k0KrsKQCPGIzKX7IPefN0eCfEBSGwhwEvy
yaL+R9etbRzosf+SsFydgei14IyJ7zC8uq7wKJz457bj0fO3+PTB/oXvjUsv
yODI7ad+SQIB9P0tSv6wiMZ3L4PotRQHvj7w1ozdQ+ZF/QK/aHorMLIDoiRH
KVzisOBmOdUFn9+MbIwUIbwcVwTiDOK/ni9wP4fkwbLzdWdrqsBC4JU0W4HG
nFi3v3Lf2LDB/Pun+6sYWNlR/eHrr15w7hOMVe6mUCxr8dYvJ1lg90zRd/ti
BgboX9hzh/Q7/VX/qPD/vx+4223N5LtO6D62p3wuUrj2nnCszyY2OH2dz8xZ
+X+e9hMfuc6FqKWGVpEpDGw8urn3SSobRJvGAwuIryz+fOjcnuUcCBC+828D
8akFyqrGOvJDcPTPwFDyRQa29btKHi9rhZqdL99sJ/z1n3bTX0OHPlBXrPY/
I0F4Q70seKY3FzS+33WYOkdjd1DONGtOL0RZlim4LqdxvoGaeYs1H2o9vEzl
Z1Ioo1YefZ5uhvRzWso/P5A8FT/i8+wHF8qiC+bLEB6synxebNbBBeFaC23L
USZeqTIzH38tgA9PeCy/CWk8Ejk3SP0JGzxv345RPURjxMJNV8Ia2RBm35b9
kfRjdNWB94FfukH4XN2f5R4UpiyNYIgt4oLImb1Fjs5MrN6iGvxAeAhiLv48
a2hJo31xdJzcJsL3yw93JNnSeEWh+nZJL/HNR7NytaRl0HPXbIO4Xg5YPkl7
dHUejd61X1NUugagRnVbogafwqm5UTHh8QIYsDVWbTjJxLcHivbwkgdBKzYu
8D15PVpuZ2UBlwWjYmbv3x0kPjI7NMpLawDuhKrKdNwgvig975KspQB0hF4p
3D9Bnn9n0+2B253QOjj/v3ni5H53QYX6czYcvVqdPN2F9LOYmcbXQi7s2Plp
/qwuBoaNdH4OSGgH84/wzfsI6fs0L7s3hE/iX9fOdRykMbz9zoZ/11rBo7yN
/eMHA1khJrceqHAAT1wLyZOVRp3AL5s7zvXCsI+vq/8yGXzTxpi3IIf4zW6x
d5dqafwctOG70+t+AEXniK3/kb51dlnxXakF/C0K3O2LyP006UcELuyBFVZZ
XMfbxF8kRGrmJLLB9tCqkyqHZDEk/mVJ9SAPhPsm3zv10HhtxaXikQwBuHDE
eXaEP+ZGao9OqLAhZ7PGb60yBsb+ZHAz2oYhrm5X2MKDMniK5/rhzy4uxBkc
uCmsQ+ObWBOfD2Y8MBWWLX7tSOP40AN5vz/DMMXWD/20jIEJz47G3IvnAzVa
WVm3gezznMpB+j0byhKcY09vonD1kuQTNY29sM9kcaXtbhrX2heo1On3gJLU
SJHnRQrffLhU/ve6AL5b3sjcSM7PIl/oi11qL1ywf2815fL/73fk+/xePwQX
KzcsWbKegS/u7Fgs2v0LXiYKrz71jfjPantzhRlc2JMt2lCnSqPHwh6jtzK9
MCiaYfcrncJdN/0GO0xHIcNb31P6J4U1Lnnzv/03CKqFIapxaylUs5HM2jaN
C6+33ghbQPgq8tq0qMkJHiQ43uuX62WgXnZ53hz5SUgWkbnZ+IiJP4yUOPte
9oODSWPQB23C4wrc+mTFTnAw89yQf4fwVKn/zCUubHhvnhizppLMm21i1dGr
XPjwqTcihOTX/tXncrWNuuGkzeCdlo1kvuuWp6xt5kOFV7NLoDGFD3svlBsf
aobq+rdib0pIP1vWZYx59cG+bweZXl40Cp2I1lDFdMixYUw7IKCwV/iiyjMe
HybfrzhspcTAnBmmN4ye8cBrW+LEvqs0njQKVFmmPQpPymu6Wdnk7787XG8b
Iv1meF7eIovCCYO8JPs/hIdn1Z048EgGm16rdKrc50HepYeljH+y+M+49bSO
QR8cWlO54B7p+60tUxnXldug8gBP/nEuA+3PHtogKtoOwRPuawJJ/z3Yy9Bc
FdAGodklr0yIPxvfXqT09QQLvve6MZ+R/W0Qer0hwakT/rTxCnVp0sentkTf
t2DD1qGjWn9Jf+R1TKilNHJgSH95rrwIE2cX6d2utWFD7VEXVYNM4i/2Sbvc
dVjgx8pRXiSQwbcCy4Hvwt3AEknU1iR5J3ZoTKNyigXvzGxzbc5S6PGlTkfy
AB/6XvoPlHvJIPdh1Fsf0sfNwceU4s0Z2GK/62yECQe+0edS2Q4Uttx4ljY1
PAbZBWdjFgjRGCke9YlXVA+rNz/TuRNNoX2+b5ZmZw/kGjK/qf5h4Mb7rb+W
Ww4CLyAofHSQwmeBG3S6w0Zg03TlazpqFEaqWHFtfTkgUSEn8rGJRsMrw5o+
Gn3wLD5z9nkbCpW3JYkNdrDhYEzV0sfuTPx6x1jTp7oTVpfeTLx6m8awPbzU
qF9tgM7uefFnmGjRp1olJ9QPl40C8f+/f3VnQe/+ingOFJl4pizZwsCQP+fS
9cqHIDDH4mSsHuET4QZxPcIjejdF249fYOK5k9sesT4OwoT14U91l0h+S+ur
1ZTwYeXZsx7zSN7O2Vnp0lgyApPiuXeyCV+7PatIuJvaBYMVIUqvCa9nRxjn
BLwcguW62vwESRpVXU0/qq/lQKpa9IZeBSa+t2er3CH7xo366/o5msaNr/ol
rxZwwZw10cOPZuAXRduiGcT/+RPnhgOITwZ0fBOZX8uF6/Fzoi9ymMiNtz8m
XyiAc/5CqkFbiX9dd387Yx8H7HgLuh06pfEx1Vy04e8QcG+pV1UrUpjWtmdl
3+E+eN+sXOFEEb+yq2aoX+qA+Lc/uyuPM/HUWn4V35oNS0M8XHaXE1+6q6yQ
84L0v5ZBa2IIhXrPstz3rhVAzuFVUy7EP16+WvXjuG4nXOYPGUTl0fihRf2n
+kQ/fJvM/rv8DQP9Li6TWWjPgtK6IfUhwj9vLH58033Dh50MUW8sIH09Hrhm
jTg5T6GvCd+MmNgU3fd2wcIhePH8249swudjOHCuI7Ydetke7+4Tfpil0x7s
dWUIfDtYvt6Z5L6P1L/tsu+F2Bd35oivYuJZ79ibSmMsaFSIpE01GZi06/pw
3vMhWH9jaaDFDRmUevImryVPAIVGJo+15ClceMHaj4rjQH5020Um4RuJPOsM
MyEOjNvabw4hr1/CbDLV/tUKkro1pXnyNDbY7bh0RWoEzm2J7WZJMbHr7IxO
/dAqMBvFeWIfZNGqUWD70a0X/NzzlvgR3toX11a59283PKJ+vLtG+uDB7gWW
nMuD4HmuoTaL8K1k+usvfGc+5L5yG5EkPvbLtHeOxHcWTOSvNoyaT/roiXyQ
wQQflGd5zQhpoPFX++0n/7q7YcuDwi0n8wl/XrOz0ZrRClbxH6f08il0PaW8
T0OCDXYPw094vaHw2nbLY23m1XDxvp9QthwTzUSElyc+4cPn/l8OvoR/b+fs
DtvwUgA/k++euceRRl51/guZWgEM27ZFvXFl4ubgO8lJNX2wWe9feFQgjXvi
ceEcuSHIdviWsmE/8demIoUd+9vhaNpNM/coGvlritTOd4xD/9871edOMdHp
zLKu+FVsUJw+ModJeFHTfKnG5zMCYKe5Jq7ZQeGBN/PgGlUNlDE4JjnTGFN9
o7E8lPh2fHJbH/HR/p+BJoHnWRB6cm63PvEl1QcRpaphPHCKEO/dkchApzXe
99QOCkBoo4Pl8QeEn599vWjf2w6frPT07xfTuHLW6ZKMIC7kPLaDPpKHh5/e
iJrDHwVO8wm96e0URk1r3RmzdgTq3u4ycx6SxgPTKzfyhLrBvVrWQpuc743z
EqeCrnPAysX1fTvxM/uwR5lLuAMQHpW41zBbCnOefDjIKOgAy0HnIT7Ji33V
Bgtf/BwDS8WNynFfKOwSc5hjs2UQLlrLF929T6PZFdXahSTvP3aVSezooNCn
eF26z7s20DkY+HZPL7lfUck/KmR/zs+XnNOTIY1r+zOtxIvHYL0BahRXMlG+
T9kjxpQLz73jNaNqGMgdtRBKuToMD28khSeQvFGarcK4e2YQnh8tO3uJ8Ofe
ZamBDDIvD7QcC86yaKxnDY1mXhDAhS0ZR8bu0Nhx13Pat3EePDrGrhAi+6W+
oGlSPXgEBJpuSbzjDCz6wOH3fhsHY7Ge4lTCi2IBL4IqSL5cUcm37TanUevI
W3nTxR2w8Wh/W1QeA+mVRyLvZHJgh9flMuP9DPwQKzP7Z8UQeAffWR4wg8K+
0zs502eNwK0dHrWCQwx8OlgQ8+ZfO6QnKtdeTKWx97hEzOvyFqi/JqknWimD
HfLj/bsetMG5UWeV+HgaLyzsbW/9yIaBrsnMFC0aJWYv+s98Iw+MkyfCqMcM
PNAmt3+CyYU1D//O7Ce8Z3kild52igt2CkJ3q9wYCIWZoyPKf+GByE4BI5jk
7fnv7qJ7hiF/9ZPfB6tpXPL6aFNFBA/eZ6aeq7tE8k4yef6hoiF4F+IlJ/GE
5EvS9YMhMmyIyLqmN8OEwqqni74tfDMA89w+iUgLy+B4gcRn+n0FBOS4XbXK
kcaL0rq+R+cNgwXLOfgh8ZHxt/13imP7oHn6mSOiB5i44o3HlqNNvTDloLhw
Z5oMHt88uq3XZxiSVojJ+q4k/PpkdrPsmyEwTNMysljCxAWt13uyXzfCtcgU
ruAxE79PX7EhYUYvFFQIMcZVmTj9eJ6STmUn0L7cpbu7KQy/FtTyhs2GM7tj
q9620aheeLPuqssQDC9a/sn9NOF9zYDA3EA+JF7JfXqkTxq/06y3Ynm98Ops
2bLKRvL85WxqGeEvnojCQX/Cy54H9/hRIVz4HERtidzOxBxf/2V/m9vhwM1g
e6eNFD4N4Fe8v9EBDOmqsZRcwn8SbR1hShyQs9t+PaOc9MtzoajXSqOQN09p
LPcohd22Q7gujgUPw1+3SG9gor27x0UTXQHMeXpq+/I+Ci+9fxU9fJsNCgfn
h244yMTYC4VPHzNaIS5B9/npFgqD9OJzNUwIL3b5ZVdsYuA7iY1+l9f1wTdq
cv1RDxqb2st+337dA/ufPWr8z5SBpz8MTlrRLWAjdE6oQ4WJRrfVLtucYMP3
K//WqMvIYGfS52uHRIfBRq9CI1ua8GiWdcs8OS7cf7730IxRBpYuWXnUcYgD
Z0dubk+7wUBDtz97vRN/gojZqzs265mYqvYlZCiBnOf6zZJ391O4SbQeucm9
8MBp5vRe4iMbpg9PO2PYD+KcjdGq14lPMfn3pbf3wj0THaelJK8KBLv+NWrw
4Xzxb5/qARplwzf+QsNhqGT/PrpCmcbnQ05Pqw91wAWhPdrdpTTuLxS3Nlvc
BmfWfRd7K8bEdHaA7pZ/bMjoUrTcTc5PLN9YSDtxGMztclaVV1AYkPhV+Kew
AGqzXu2zqSf9wj7snGjMhx9ns2d7BFMo/nz3YO5JPkjoOe9aQ3xU6XBTzKzs
cbhudFfV/DCFJbNviC4g+/aOI/mFTV7vcNJShW1LuuDDO4/eMHIfqo+3aa4I
7oMnpU+mxw0wcEGVOr/DbxTMD3jspv5SqHMl7+gtwhN/f4QaRjykMVcnZqP8
WS6czdyrsIHwtfKR8QXWF9ng173e654OmZ/omrr1hzvh2Do1kCP8+1Lr0PzO
Fg58DzCsrROhMW7y8Vl+Mxtch7Uk7qgQHyxV3RXVz4IvmyMskt8ysOSm2MoI
+yHwyNf97uorjUr7vZJ3LB2Cl5LHvL4so1Epaf6uXbNa4OfaWey1IrKoN6Jz
o8ROAC+K7+WFzaJwnkPqp2WnOqH3/ZeiZpqJNSsTFtd/FsCJiI1nr2yQRn7G
r/+ang/A2R8d2SkrKDy5I0X2bmEvSIlof12XxkDjMH5MwXE2yLVouzR0kPz3
PcDb+4UPX6B290Oyr681qt+ouA7Cg1dvOUX1FErYvkosuT8MNSIpQtm9FLJf
OcfM5nPAD/XYa3QZGDP1tOv0kz5YO6Q7Z2o1EzcebihRyR2Gi9wrbgatFBa/
yNb1+W8cvHT2h128SOb1Rtlo53cBJAbpCdz3MdFY4Z7W4+P9sEbnrj3zFIU/
+S8PjeM4bDJYqbXSgvjb9CcqXtJCRrVa4z5N9UzsWP7ngQl2QP4pmf/2L6DR
sjw4YWkYBxw3/3n59zMTRdayeu838eBN7K+yFH0KlyYlm631GIHpp1qc/s/n
P8L4r0sHWeCTniEiQfbptFnN2UVbuXD6Ezp+ZzEwykRcu4Aagm1HhaYFs2ms
rFpqz543COvSpPV+k/sXTuUci9sxBDYhwhqWUwz8fqL5tzTdB88XpLuWE57P
OfU04t5xDkxQJ/4VCGgcPRGg2TKzE85r6+tFfKDwbm5jQkdMBxyamzxzvzWF
2odfOpjtHgGradKSN2gZbL2RMbRrcy/Yuyhv8yP5HBuZ+TGC0Q9Ppz/f6jWd
wrqBc6Y3Oniw7fy76ZFzKVx76veBjlAuhDs3XKog/Dc9TpBzieaDX0rnzlfG
JF8uag4F8Vvh5E+150VODNyru5B/+hIHTgwVmnNCGViwslKklvjFwp8/o0vj
CA/fsrH+FzgMpafqy/PIfhnMLl64vHwA3A7O1RYj799o7O4RmYsDMJg3JWJp
Rvzo5ve0FfU9IGvABPjFwLpnT+zFiligOuF+9Rl5vzN3dAgfI3nuqGAdu81V
BqeLMu6cu8AG60eFuR7+0niqTdbg/37nvO2orPd0cj++j+KKW3jw4avVQzNX
GjXcjuWzDDlQcmxwxP0Mjadktk7UFLMggKNy+gVF4/z9rdFWsh2Q96T+y/s1
DFyst+nXG/EBOHKk+5ZbAI2Su3neqzZWwlm35f/oQrKv1l7Pup+PgPa1Wbpl
kzQKmyvLVOjwIMh9fqtyPQONspN76l3J+y3bebGd7FuBcYFL/rEeqDIo7df9
S55/6ZheufAEyDpdPBnKpLFquipYpwlgVvusrDWJ0lhp86Ow6hMHZGDZYnlx
GkNaXZMCNLjwdImtmOFCJlrbOvUu9OsBK1mX0pPET0YPXDF6WNYD0sdLhSLJ
Psa+uLu6U5ENITszriXkM9Gn7MXTLT1s8JXucG6pY6C3S6R6xo9OCA3bmSBP
/DJqzq+pz5+rIWBJpuabnUzUjvHsyVDpgeLSNqe229Ko2bbg/pPfHIiqzi3/
+Ir45IOPAXu+cCH9jeKmDn1yPkIW7zTuER9WXP6mol4Gz3wLdOnK5IJCueQO
pVgajyobJXvbDcPgV+/w1Y4M3PrfiX33RtnASKJ2yqfQ+PCI6Fop1TZw1W4Y
GPxHIb/sxObTyR0g9vqC0zRtJppuW3bcEobhsmNNW5A4A/U9RrjWkV1wvrSU
VXiS8Jp6883PT9rAP12k80IdE9mJza+nhfDg94EdSy1bGBiUW23v5t0MnQ/n
Hcn7P492LTzWqdYGLSXbTD/voTBhfPoap1QODNe18m4upvHmP9bxs+kcmGej
teYqyRfPRz1898csUHL7McMqnPBS8ebItAt/oXD1McNtJJ80c3TvH9/YAte6
vs5VS6AxdaVdYv+rIRCTiIub60Pmo/TQB9PNHGjQtVi6Lo3k2bLV0S88h2Gb
ZsPmQMJ7o8cPvZzmz4KbU5GnPimT/fLfdLn8YSnsWLXzpdgKaRwNl+5/HtUK
xduiEuhkBj7Za/6k59AQTIrItdSRfrU/8DnZVa0VnE8abBULZ6CnyUkhjRt9
oMM1E7HzJvnmUVypdIMDDkpOY2ySF8Nhw+OmYnxIq2ixPKZHzu9dj1zTYh7Y
uu4pvNtJYbTiqd3j93mQ4sN7YqpIY7xXyY+49cOAJsaZOVtofPpb/MI892EQ
3bdHrmw+4felyzvYpziwzvGpZ/n/f39tUUz0mALhw52+d5Q0ZHD9sOHWZTgE
15p608ofUKi1Z/hX26tOqGnRPri0lsbTs1xu1jUL4OjLix+6jzDx6YfDkYP5
nfBAWDE8keyH0Lkw45anf2HxwJT+rRZpTPfL4RvrDMMTpzk/vr0j89TBidnw
sRrK7OSvabOl8eTNgL4VZH/e3Z201oyTRvMze4bcX5CvM3tea+0heVyidbKl
cRg6ggKE/imQ/2/Wf+WubROofZJ86CBGY/iS6JMRbzogQBs66u4w0GelTquf
RTOsUX/lcdmBRimTFzFyBq2QbF/ffQcorJmZqar44Q+4xrIG2CT/9O6LB5rv
5YO4XuWMi1PSuLAxzmKXBA9yNo6r32JR+HrLsvrz/QMQZMC88ofcR813aWFx
AQ/6Zxz6vHou6af5BbT5YgEsEbWbE7WN+NCyT759GgOwa5bojllPGfg/uDUu
WA==
                "]]}, PlotRange -> {{-1, 3}, {-8, 2}}, 
              AxesOrigin -> {0, 0}]], Ticks -> {Automatic, Automatic}}], 
         Placed[
          Unevaluated[
           LineLegend[{
             Directive[
              PointSize[0.011111111111111112`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              PointSize[0.011111111111111112`], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              PointSize[0.011111111111111112`], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              PointSize[0.011111111111111112`], 
              AbsoluteThickness[1.6], 
              RGBColor[0.560181, 0.691569, 0.194885]]}, {
            "Normal", "Triangle", "Uniform"}, 
            Joined -> {{True, True, True, True}}, LabelStyle -> {
              GrayLevel[0], Bold, 8}, LegendLayout -> "Column", 
            LegendMarkers -> {{False, Automatic}, {False, Automatic}, {
              False, Automatic}, {False, Automatic}}]], {0.77, 0.75}, 
          Identity]]& ],
       AutoDelete->True,
       Editable->True,
       SelectWithContents->False,
       Selectable->True],
      TraditionalForm], {192., -189.}, {Center, Center}, {360., 360.}], 
    InsetBox[
     FormBox[
      TagBox[
       FormBox[
        GraphicsBox[{{{}, {{}, {}, 
            {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
             0.011111111111111112`], AbsoluteThickness[1.6], 
             LineBox[CompressedData["
1:eJwtlAtMU2cUxxERC4gukzp1DMTNFXUmG6CbMPgTVxDsRASHm+BwDHW+Ikhm
AAfIhjEs2zTI3NrxEGGLyAABgxARBoJQaGsf0JZ3X1BKeQUpkYljbT0nubn5
7r3fOef//53vesSdjzhua2NjE2++LPdLLhV71alZeFgyVh1tP41X61yYOG2m
Ku8p1LldMR6sK4C48kqN64VJel+C/L0/eR5vmACPa4lS2O04xX62ZgL11u8r
UGb7bKPXGSPMC/OTKix+JD68WjhO++/D61Dol00+43BUFCf4Oz5AF+ulqKzI
AGs6bj3+zdyz/chaA7bGXGsxeTYgOOjNH09mj1E/jdjqcfdW5vIxlJh3K4r/
AdMhqzEuU48Ja71mJK1ULols9fDxtsRjZGyZC8m5Okr1W2E/XSdIXzOKxyZP
c4U2+Po4/XeGNwInaz/tkIU6q3Z6jiDCWrAD4XkHyhvqdKSXj/EgbouOo4Mm
1ZKwE/xrN0pvqrXUrwCaT3dvaErRItHSXoIQnJ2uXWEuWvJHhOx26Ru+VRrY
WEMMPS/mWHK4hvSIwetfilo+q0aI2lJAAt6pwAD5r2rSJ8EzH4bXpJ8a11ss
AqQ467Q5m61TwSrXWwan69lRyl9UsMpRyDBfnbyqxE9F+ruxLeRwOrtnGO6W
dtx6UOu+3p774TD50YNu1mLzroIhnDxhCTmM2abaVQ5D5I8C9g3+SyuTB2HJ
5lKhQOuCx+Ja4wD5pUS1h+76xrgBzFvSmZRIY936ym6wn/zrxYrey6/XR/cj
wDoAfVjYU5HlPtRHfvZhqIC9xi2+D9b2rvTDjhFRw5vsJX8HkBAQve9Sai+E
AksM4LMZduWfjr3k9yBu+DSpl/KVYFobHMILbeo7CT5K8n8IqvnsdYNCBazp
Yobh9N0XHTtOK4iHCl5ldYJQBwXpUUFYERu8oUxOfFRwYMTPZh2Qkz4VPGOX
vX9xvod4qfHJLqa9orCH9KoR6Vz8bg6nh/ipwcgtn8lZ6Cb9GuwfvpPQVtpN
PDVgJzbHrovpxqt0Giw78t7mpNe6ia8Wrn3lrfwnMvJHi0ctaQuMDBnx1sKJ
U+ayabeM/NIh5IO3GEtzUuKvQ3J1cOzNain5p8PIpr98FYlSmocRGP9w49R4
ScnPEQTm+gldTRKajxH8Hnk6y75eQv6Ooq/Iu/brdAnNyygM4rQtnkES8nsU
5cZB5xBnCZ138zlNeOlWJxeT/3qEa9cnnysS0zzpMfA9r/joOTHxGMM3tbKc
dF8x8RjDby/l3CcMMfEYw8fH9fLP7z0lHub/guzOtrCDT4mHAdLKy8+j50TE
w4DBu0v3Erki4mFAw+32+IxAEfEYBytv+NG3BiHxGEd6BWchKFdI8zmOoBS9
Sh0oJB5GPPwhs81vWkA8jGA17kwJLhQQDyP8/VfsM4ULiMcEfvYuXfSzExCP
CSS5Fbavru8iHhOIYZ4NizvfRTwmcZvFzN/O6iIek5h/0Pn2MVUn8ZjEBX5r
tYnXSTymcMIv7KImqpN4TOHQi8VZV5dO4jGFrkCmbZ6UTzymsdHEFEXl8InH
NP6+ePYpO5JPPKax6vl+/lEmn3jMmOvdf8JVduB/Gv0hXg==
              "]]}, 
            {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
             0.011111111111111112`], AbsoluteThickness[1.6], 
             LineBox[CompressedData["
1:eJwtkw001XcYx6+xKDozahbSMpOkk7cts+obZx2bmrfSTpjhiKJGQzOVckov
LFnrnIpixaZykhWSiuUlL9d9d7uXq+u+eblvaCXVUc29Pc85//M/v//v/3ue
5/v9PL+lCWkR299jMBiJs4/hvW9BTZA85wh6CpcdZH45gXfrMwjRdx49mD2O
Rqd8bXhjGQIWmZ21u6en/UpYfeYe8JuZHiXnDXEVQqem9YJwHe4Y/69B0/Xg
i0MVWswuZr/8A9MP1/RdeqWh83VgrH1hYbFVg3miivS1827j2t1Y/zf1ahjT
nb+Dc7t1+36yV2N5zKnWKbd7mHvdyyvg8Bj104ythf7BP0yOonL2tKjiX/i7
XTt4JX4UOmO9B2gJSj9pLhqBr48h2mD3gUdqbNgI1W9HuuOBvGLWMNqm3GYr
dOD49zclh0KGYWnspxPpd/dE2ghUiDAW7AIjxrF9WbSK9HYjbq7QoXJECUWO
IWEPjv+5sjglS0n99uLi6rO1seZK7DG0l87C5YXthxIvKMgfNvo9/U7G+SrA
MAYXM1tDZlZz5KSHi9L216XcXXJ8IzcU4KE5o0ZnPV9O+nhYk5qyXHZDhuJW
gwA+OgM7NrtGymCU6yOAdYFp2q2XQzDKEQmw/KpdhFPIEOnvQ/Wmw75Xq6RY
YmjHSYgoW5MV0XOk5IcQFpEHzD1SHiM5yRCP8H7iw2MWgkHyR4QQ5t1c4fpB
GLItqBFhU22L38+3JOSXGKclOzY2uUvw3JBuSowz3wY+O/r3APnXj/3MrKW1
rgNYZxyAAXiGVPnNr+4nPwcwNy+uOsunH8b28iX4L7kt8UGLmPwdRKX810Xd
oWKweg0xiPkNbYeSlCLy+zH+2jK5LzNHhIXGBqWo48R4chaIyH8p/D51ttty
8xGM6WKGEK9UmykiHhEPGQ484a/Y9lxIemRIYCg/Lr0gJD4y9DivrCnYICR9
Mlg0/2Fv9aSPeMnhyhJzzMr7SK8cH7kc+yU6tI/4yVEiWTI6bdJH+hU4vVlq
29YgIJ4KPGGHz6naLcC7dAqId82wilwFxFeJ4GCHrCQ5n/xR4rH3zWf2ZXzi
rUS5Vu9WEsMnv1QYSNB08B35xF+FzDPDm+qkPPJPhYxslcmqyzyah2F4VPTK
fZJ55Ocw3L2enqtbyaP5mN23/CSnYopL/o5g/3bTvU+buTQvI/jqiL3tuRNc
8nsE096MpPxILt33UUw/dZlX68wl/0exI1T4ub2CQ/M0ig1F66Jc8jjEYwzH
syt/T3HmEI8xBLLfPuzvYBOPMVgNLK7/MZVNPMbgbfvFoMaGTTzUcMm0yU65
xyIeasTnte5lJ7OIhxrJobw084Us4qGBn8d06Zz2XuKhwRU1WPcze2k+NVAt
Lk9esqyXeGghNtdtc5IwiYcWdg6wqylmEg8tHAqri1uDmMRDh4jc0FVhDCbx
0OHWUD17Y1MP8dDByjr/9rWsHuKhR8zbrJIE7x7ioYdZzqnCnZPdxEMP94ZL
r+tvdBOPcZTsfHN/XXo38RhHsWbn5CuvbuIxjjDbQEvFsy7iMYEygUigbewi
HhOQF7yIss7tIh4TWJxR+TLo6y7iMQlp0cR3hZZd+B9XFRhO
              "]]}, 
            {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
             0.011111111111111112`], AbsoluteThickness[1.6], 
             LineBox[CompressedData["
1:eJwtkwtQVGUYhsGBkcGmkQYDCTGMHFQ05ZZDwmuJQjMocommcStCwEpQwSIB
yyYlGskJIgtxIgQTUILoujTk4F5Y2BvsLsvCsqx732WvTomNpTtxjt8/c2bn
nLPn+7/vfZ4/tuR4ftmKgICA0uWL+a0PH8gy1p3DwdqQPdHVPjy6/wqdf63+
dKfFC25MgyuP24HVFWsnCou89P4qSq2xj1WNe9B+iVl94L6xOfdCmgfD7P8H
EDmb+GVfvxvLN8tPhnAs7wW1MMZN3/+CMfGeSFOzC6Ga7hPpob9jfWbOIf8K
F9hyl4ZR82dhR9T7TmzifMFbih+BIvV1Y6p9kfq5ic0/lsUVvLaIq8tfa7pH
8cmmY0eOSxxws/vdgq6r5npTugPJScziIyn6jKdn0E77C/D5xcbtglg7+Evx
yzsIYX28+aSh1YZVbD8iZHzW9tuDYBvy2Q3H8U3glfuRp6w07wR8dX27UpwW
mOqYgmJk3R06k8exUL9SdFb+wauUm1HFtHdChvs2XvD53WbKR478Ykn2tZ9M
CGDXFG7MqZp4cSaaZwpBBTq5/msjso3MBgpwpJaw/0KMNJ8Cv+71FEbUG9DM
YwZQ4kbIh/Gt2ttgx01SYfsrd07eEuvBjqNRoSrf8GytdIHmn4Yud4izRq/D
eqadGDUe1mvT4vzzlIcaZY055W9umceRcmbNoCouQvF9qZby0eDhvuyme71z
YKqFD2gQ9J3maMU/s5TXLNRRge+k5c7iHlNuaRbtp1s+7h3UUH5zMOPuk2GR
GmSwAmhx4NURrr5xhvLU4ue/07ed96vBttcwj8MvLqja6tWUrw4Pdc8kXPZP
QyZllg7inZ1dWxqnKe8FKPZvOOUJn8YatkE9Rj5IUDb1qCh/PdJTahzcDBXY
cpzbCIlKydmqVRIPA9YlNe/tqVXSPAb4gpIyndFK4mPAe+sqi2/yFTSfAfIf
Bpy+SgXxMqL3XMPK3KcUNK8ROyLOFg1KpoifEaKagS77R1M0vwnmsKLLiuQp
4mkinpN4VM6E8s5v2zgHJ4mvmfjKKR8z+m1vDTe+LCfeZuIto7ws2Nee7ygp
kBF/C/GXUn4WFJbUyw5XSMkHK/kgoTytqFvQb3yuVUJ+WMkPCeVrQ8UTZ5da
xsTki418EVPeNjzIGlXUB4vpvNvhZ/2ZoPztCETitn8PTJBPdvJpnHg4sDFz
lJPcNU48HOTXOPFwYENsdeLbfhHxcJBvIuKxiP4Oz1Z7iYh4LJJ/IuKxiKZD
K0PDJ8eIh5N8HCMeTmTsSLhe/NIY+ekkP4XEwwWuciYvZ0RIPFzkq5B4uDAR
7I8q2SUkHm7yV0A83Jjvbr3yPE9APNzks4B4eCB71zl/dL+AeHjIbwHx8GAp
dffaawt84uEl3/nEw4uwQdnTF6v5xMNL/vOJhw9zwr4K7yo+8fDReeARDx/8
PS2nK/t4xOMOnQ8e/gdEkiPL
              "]]}}, {}}, InsetBox[
           TemplateBox[{"\"Normal\"","\"Triangle\"","\"Uniform\""},
            "PointLegend",
            DisplayFunction->(FormBox[
              StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False], TraditionalForm]& ),
            Editable->True,
            InterpretationFunction:>(RowBox[{"PointLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "True", ",", "True"}], "}"}], 
                    "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
               "]"}]& )], Scaled[{0.99, 0.99}], ImageScaled[{1, 1}],
           BaseStyle->{FontSize -> Larger},
           FormatType->StandardForm]},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{
           FormBox["\"\[Sigma] of swarm\"", TraditionalForm], 
           FormBox["\"Max Torque\"", TraditionalForm]},
         AxesOrigin->{0, 0},
         DisplayFunction->Identity,
         Frame->{{False, False}, {False, False}},
         FrameLabel->{{None, None}, {None, None}},
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImageSize->Medium,
         Method->{},
         PlotLabel->FormBox[
          "\"Maximum possible torque on object pivoted at 0, length 1\"", 
           TraditionalForm],
         PlotRange->{{0, 1.}, {0, 0.9826794919243103}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}},
         Ticks->{Automatic, Automatic}],
        TraditionalForm],
       InterpretTemplate[Legended[
         Graphics[{{}, {{{}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              Line[CompressedData["
1:eJwtlAtMU2cUxxERC4gukzp1DMTNFXUmG6CbMPgTVxDsRASHm+BwDHW+Ikhm
AAfIhjEs2zTI3NrxEGGLyAABgxARBoJQaGsf0JZ3X1BKeQUpkYljbT0nubn5
7r3fOef//53vesSdjzhua2NjE2++LPdLLhV71alZeFgyVh1tP41X61yYOG2m
Ku8p1LldMR6sK4C48kqN64VJel+C/L0/eR5vmACPa4lS2O04xX62ZgL11u8r
UGb7bKPXGSPMC/OTKix+JD68WjhO++/D61Dol00+43BUFCf4Oz5AF+ulqKzI
AGs6bj3+zdyz/chaA7bGXGsxeTYgOOjNH09mj1E/jdjqcfdW5vIxlJh3K4r/
AdMhqzEuU48Ja71mJK1ULols9fDxtsRjZGyZC8m5Okr1W2E/XSdIXzOKxyZP
c4U2+Po4/XeGNwInaz/tkIU6q3Z6jiDCWrAD4XkHyhvqdKSXj/EgbouOo4Mm
1ZKwE/xrN0pvqrXUrwCaT3dvaErRItHSXoIQnJ2uXWEuWvJHhOx26Ru+VRrY
WEMMPS/mWHK4hvSIwetfilo+q0aI2lJAAt6pwAD5r2rSJ8EzH4bXpJ8a11ss
AqQ467Q5m61TwSrXWwan69lRyl9UsMpRyDBfnbyqxE9F+ruxLeRwOrtnGO6W
dtx6UOu+3p774TD50YNu1mLzroIhnDxhCTmM2abaVQ5D5I8C9g3+SyuTB2HJ
5lKhQOuCx+Ja4wD5pUS1h+76xrgBzFvSmZRIY936ym6wn/zrxYrey6/XR/cj
wDoAfVjYU5HlPtRHfvZhqIC9xi2+D9b2rvTDjhFRw5vsJX8HkBAQve9Sai+E
AksM4LMZduWfjr3k9yBu+DSpl/KVYFobHMILbeo7CT5K8n8IqvnsdYNCBazp
Yobh9N0XHTtOK4iHCl5ldYJQBwXpUUFYERu8oUxOfFRwYMTPZh2Qkz4VPGOX
vX9xvod4qfHJLqa9orCH9KoR6Vz8bg6nh/ipwcgtn8lZ6Cb9GuwfvpPQVtpN
PDVgJzbHrovpxqt0Giw78t7mpNe6ia8Wrn3lrfwnMvJHi0ctaQuMDBnx1sKJ
U+ayabeM/NIh5IO3GEtzUuKvQ3J1cOzNain5p8PIpr98FYlSmocRGP9w49R4
ScnPEQTm+gldTRKajxH8Hnk6y75eQv6Ooq/Iu/brdAnNyygM4rQtnkES8nsU
5cZB5xBnCZ138zlNeOlWJxeT/3qEa9cnnysS0zzpMfA9r/joOTHxGMM3tbKc
dF8x8RjDby/l3CcMMfEYw8fH9fLP7z0lHub/guzOtrCDT4mHAdLKy8+j50TE
w4DBu0v3Erki4mFAw+32+IxAEfEYBytv+NG3BiHxGEd6BWchKFdI8zmOoBS9
Sh0oJB5GPPwhs81vWkA8jGA17kwJLhQQDyP8/VfsM4ULiMcEfvYuXfSzExCP
CSS5Fbavru8iHhOIYZ4NizvfRTwmcZvFzN/O6iIek5h/0Pn2MVUn8ZjEBX5r
tYnXSTymcMIv7KImqpN4TOHQi8VZV5dO4jGFrkCmbZ6UTzymsdHEFEXl8InH
NP6+ePYpO5JPPKax6vl+/lEmn3jMmOvdf8JVduB/Gv0hXg==
               "]]}, {
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              Line[CompressedData["
1:eJwtkw001XcYx6+xKDozahbSMpOkk7cts+obZx2bmrfSTpjhiKJGQzOVckov
LFnrnIpixaZykhWSiuUlL9d9d7uXq+u+eblvaCXVUc29Pc85//M/v//v/3ue
5/v9PL+lCWkR299jMBiJs4/hvW9BTZA85wh6CpcdZH45gXfrMwjRdx49mD2O
Rqd8bXhjGQIWmZ21u6en/UpYfeYe8JuZHiXnDXEVQqem9YJwHe4Y/69B0/Xg
i0MVWswuZr/8A9MP1/RdeqWh83VgrH1hYbFVg3miivS1827j2t1Y/zf1ahjT
nb+Dc7t1+36yV2N5zKnWKbd7mHvdyyvg8Bj104ythf7BP0yOonL2tKjiX/i7
XTt4JX4UOmO9B2gJSj9pLhqBr48h2mD3gUdqbNgI1W9HuuOBvGLWMNqm3GYr
dOD49zclh0KGYWnspxPpd/dE2ghUiDAW7AIjxrF9WbSK9HYjbq7QoXJECUWO
IWEPjv+5sjglS0n99uLi6rO1seZK7DG0l87C5YXthxIvKMgfNvo9/U7G+SrA
MAYXM1tDZlZz5KSHi9L216XcXXJ8IzcU4KE5o0ZnPV9O+nhYk5qyXHZDhuJW
gwA+OgM7NrtGymCU6yOAdYFp2q2XQzDKEQmw/KpdhFPIEOnvQ/Wmw75Xq6RY
YmjHSYgoW5MV0XOk5IcQFpEHzD1SHiM5yRCP8H7iw2MWgkHyR4QQ5t1c4fpB
GLItqBFhU22L38+3JOSXGKclOzY2uUvw3JBuSowz3wY+O/r3APnXj/3MrKW1
rgNYZxyAAXiGVPnNr+4nPwcwNy+uOsunH8b28iX4L7kt8UGLmPwdRKX810Xd
oWKweg0xiPkNbYeSlCLy+zH+2jK5LzNHhIXGBqWo48R4chaIyH8p/D51ttty
8xGM6WKGEK9UmykiHhEPGQ484a/Y9lxIemRIYCg/Lr0gJD4y9DivrCnYICR9
Mlg0/2Fv9aSPeMnhyhJzzMr7SK8cH7kc+yU6tI/4yVEiWTI6bdJH+hU4vVlq
29YgIJ4KPGGHz6naLcC7dAqId82wilwFxFeJ4GCHrCQ5n/xR4rH3zWf2ZXzi
rUS5Vu9WEsMnv1QYSNB08B35xF+FzDPDm+qkPPJPhYxslcmqyzyah2F4VPTK
fZJ55Ocw3L2enqtbyaP5mN23/CSnYopL/o5g/3bTvU+buTQvI/jqiL3tuRNc
8nsE096MpPxILt33UUw/dZlX68wl/0exI1T4ub2CQ/M0ig1F66Jc8jjEYwzH
syt/T3HmEI8xBLLfPuzvYBOPMVgNLK7/MZVNPMbgbfvFoMaGTTzUcMm0yU65
xyIeasTnte5lJ7OIhxrJobw084Us4qGBn8d06Zz2XuKhwRU1WPcze2k+NVAt
Lk9esqyXeGghNtdtc5IwiYcWdg6wqylmEg8tHAqri1uDmMRDh4jc0FVhDCbx
0OHWUD17Y1MP8dDByjr/9rWsHuKhR8zbrJIE7x7ioYdZzqnCnZPdxEMP94ZL
r+tvdBOPcZTsfHN/XXo38RhHsWbn5CuvbuIxjjDbQEvFsy7iMYEygUigbewi
HhOQF7yIss7tIh4TWJxR+TLo6y7iMQlp0cR3hZZd+B9XFRhO
               "]]}, {
              Hue[0.1421359549995791, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              Line[CompressedData["
1:eJwtkwtQVGUYhsGBkcGmkQYDCTGMHFQ05ZZDwmuJQjMocommcStCwEpQwSIB
yyYlGskJIgtxIgQTUILoujTk4F5Y2BvsLsvCsqx732WvTomNpTtxjt8/c2bn
nLPn+7/vfZ4/tuR4ftmKgICA0uWL+a0PH8gy1p3DwdqQPdHVPjy6/wqdf63+
dKfFC25MgyuP24HVFWsnCou89P4qSq2xj1WNe9B+iVl94L6xOfdCmgfD7P8H
EDmb+GVfvxvLN8tPhnAs7wW1MMZN3/+CMfGeSFOzC6Ga7hPpob9jfWbOIf8K
F9hyl4ZR82dhR9T7TmzifMFbih+BIvV1Y6p9kfq5ic0/lsUVvLaIq8tfa7pH
8cmmY0eOSxxws/vdgq6r5npTugPJScziIyn6jKdn0E77C/D5xcbtglg7+Evx
yzsIYX28+aSh1YZVbD8iZHzW9tuDYBvy2Q3H8U3glfuRp6w07wR8dX27UpwW
mOqYgmJk3R06k8exUL9SdFb+wauUm1HFtHdChvs2XvD53WbKR478Ykn2tZ9M
CGDXFG7MqZp4cSaaZwpBBTq5/msjso3MBgpwpJaw/0KMNJ8Cv+71FEbUG9DM
YwZQ4kbIh/Gt2ttgx01SYfsrd07eEuvBjqNRoSrf8GytdIHmn4Yud4izRq/D
eqadGDUe1mvT4vzzlIcaZY055W9umceRcmbNoCouQvF9qZby0eDhvuyme71z
YKqFD2gQ9J3maMU/s5TXLNRRge+k5c7iHlNuaRbtp1s+7h3UUH5zMOPuk2GR
GmSwAmhx4NURrr5xhvLU4ue/07ed96vBttcwj8MvLqja6tWUrw4Pdc8kXPZP
QyZllg7inZ1dWxqnKe8FKPZvOOUJn8YatkE9Rj5IUDb1qCh/PdJTahzcDBXY
cpzbCIlKydmqVRIPA9YlNe/tqVXSPAb4gpIyndFK4mPAe+sqi2/yFTSfAfIf
Bpy+SgXxMqL3XMPK3KcUNK8ROyLOFg1KpoifEaKagS77R1M0vwnmsKLLiuQp
4mkinpN4VM6E8s5v2zgHJ4mvmfjKKR8z+m1vDTe+LCfeZuIto7ws2Nee7ygp
kBF/C/GXUn4WFJbUyw5XSMkHK/kgoTytqFvQb3yuVUJ+WMkPCeVrQ8UTZ5da
xsTki418EVPeNjzIGlXUB4vpvNvhZ/2ZoPztCETitn8PTJBPdvJpnHg4sDFz
lJPcNU48HOTXOPFwYENsdeLbfhHxcJBvIuKxiP4Oz1Z7iYh4LJJ/IuKxiKZD
K0PDJ8eIh5N8HCMeTmTsSLhe/NIY+ekkP4XEwwWuciYvZ0RIPFzkq5B4uDAR
7I8q2SUkHm7yV0A83Jjvbr3yPE9APNzks4B4eCB71zl/dL+AeHjIbwHx8GAp
dffaawt84uEl3/nEw4uwQdnTF6v5xMNL/vOJhw9zwr4K7yo+8fDReeARDx/8
PS2nK/t4xOMOnQ8e/gdEkiPL
               "]]}}}, {}}, {
          DisplayFunction -> Identity, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
           PlotRange -> {{0, 1.}, {0, 0.9826794919243103}}, DisplayFunction -> 
           Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {"\[Sigma] of swarm", "Max Torque"}, 
           AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
           Frame -> {{False, False}, {False, False}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
           PlotLabel -> 
           "Maximum possible torque on object pivoted at 0, length 1", 
           PlotRange -> {{0, 1.}, {0, 0.9826794919243103}}, PlotRangeClipping -> 
           True, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
         Placed[
          Unevaluated[
           PointLegend[{
             Directive[
              PointSize[0.011111111111111112`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              PointSize[0.011111111111111112`], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              PointSize[0.011111111111111112`], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]]}, {"Normal", "Triangle", "Uniform"}, 
            Joined -> {{True, True, True}}, LabelStyle -> {}, LegendLayout -> 
            "Column", 
            LegendMarkers -> {{False, Automatic}, {False, Automatic}, {
              False, Automatic}}]], {Right, Top}, Identity]]& ],
       AutoDelete->True,
       Editable->True,
       SelectWithContents->False,
       Selectable->True],
      TraditionalForm], {576., -189.}, {Center, Center}, {360., 360.}]}, {}},
  ContentSelectable->True,
  ImageSize->{780., 245.61684774746024`},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{
  3.684634471318781*^9, 3.6846356917367353`*^9, 3.684635909148432*^9, 
   3.684668018890717*^9, 3.684688599466317*^9, 3.684688648128553*^9, 
   3.684688776472468*^9, {3.684688809283383*^9, 3.6846888868485117`*^9}, {
   3.684688982243389*^9, 3.684689124419998*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1: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
3649XSc=
        
        "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwlzkdOQgEARdH/wV4Q7IigIMp+3IAJC9B12ruiYu8dOxbQkzg4uW/4ssWZ
yelIEAQhU0SNBhppopkWWmmjnQ46idFFnATd9NBLH/0MMEiSIVIMkybDCKNk
yTFGngLjRJggDP9P/kqdGj9888UnVT54541XXnjmiQqPPHDPHbfccM0Vl1xw
zhmnnHDMEYccsE+ZPXbZocQ2W2yywTprrLLCMkssssA8c8zyBxBkNkU=
             
             "]]]}, {}, {}}, {{}, {}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
             18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
            34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 
            50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 
            66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 
            82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 
            98, 99, 100}]}, 
          {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[{101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 
            112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 
            125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 
            138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 
            151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 
            164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 
            177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 
            190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200}]}, 
          {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[{201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 
            212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 
            225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 
            238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 
            251, 252, 253, 254, 255, 256, 257, 294}]}, 
          {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[{259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 
            270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 
            283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 295}]}}}], {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"\[Sigma] of swarm\"", TraditionalForm], 
        FormBox["\"Optimal push location (\[Mu])\"", TraditionalForm]},
      AxesOrigin->{0, 0.403},
      DisplayFunction->Identity,
      Epilog->{
        Dashing[{Small, Small}], 
        LineBox[
         NCache[{{0, 
            Rational[2, 3]}, {100, 
            Rational[2, 3]}}, {{0, 0.6666666666666666}, {
           100, 0.6666666666666666}}]], 
        LineBox[
         NCache[{{0, 2^Rational[-1, 2]}, {100, 2^Rational[-1, 2]}}, {{
           0, 0.7071067811865475}, {100, 0.7071067811865475}}]], 
        LineBox[
         NCache[{{0, 
            Rational[1, 2]}, {100, 
            Rational[1, 2]}}, {{0, 0.5}, {100, 0.5}}]]},
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->Medium,
      Method->{},
      PlotLabel->FormBox[
       "\"Where to push object pivoted at 0, length 1, to maximize torque\"", 
        TraditionalForm],
      PlotRange->{{0, 1.}, {0.4, 1.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Prolog->InsetBox[
        GraphicsBox[{
          RGBColor[0.6, 0.4, 0.2], 
          RectangleBox[
           NCache[{0, 
             Rational[-1, 10]}, {0, -0.1}], 
           NCache[{1, 
             Rational[1, 10]}, {1, 0.1}]], 
          RGBColor[0, 0, 1], 
          PointBox[{0, 0}], 
          RGBColor[1, 0, 0], 
          PolygonBox[
           NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
              Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
             1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]], 
          GrayLevel[0], 
          PointSize[Tiny], 
          PointBox[CompressedData["
1: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
9cjpHigyX3FcxZPC1IUPHjLvDUHb/qu713+ncFG+VUi/UCvMMFrLdJZTWHhY
b8qZ6ge+9kLby5ZkXgdGiv+pdAK7ODXF7Sbh4XvyJwI+jcKVte/+JEcy0L4s
Sd5NfwJeZH4wvHqIiZFl/vzizzrgjUvjorUPmBhQo1y5gDsMK3z/bXAbpDHz
2/3xk5L9kJrEWCHcRqNrkFV42cVu8GyXlW6MEsexrf5Dkqn98ODmtyVptQzc
qiCzpPTrFLjar8s49JzCV2U+GmEdo7BmjvquyRYafy68InoLSf6YD7axWUyU
WyMSDleGQEiy9dJYOoWXjv8yuPGIB7yDE/n5osSPtBeY39HqgUFF2PNNn4lj
2V8k9UifV849mvn9I+FDZaMTf3U64fY6I2eTUQp1lorMlzDtg9WnvlTNI/vj
mTIj1jzYC+8GDWpCyH6q5Y3Ee36bgHKBqt0idkycP5QIZ3+1g2q92LrSr0z0
ly2ZtSL6FwQU/yrYGsrES04XHfK3cWF1c0maM/F5dvb5te4LeWAdk3ozaFQc
Py045VYgwwPn+otfI55ReMw7eS0ruA0uPc8JnRphYLHl+asNF3ig3C5beEKG
xq6mXWFizT0g1FuvM4cmfHXlpKbt6lbwcS1sMrhDo9U6xVedeziQLFljknyb
wmvHVl7MuzsD973iXNx+MVHFJZ8HHp3At8H1c5EyhS8XPM431uOB6tcAgbE+
MTy/ofa68JleaJBaxTW+S+Ob1guPFlqRfNwd7zroycCLEHgqU34MzJtlfRc8
pvF+6oDs8wYe3JblBpw8yMAsCROF0sdjkGqn0+WtSvjosa6huWI3CNnp9j29
SKOKv8OizZkTMG14+pj8FvL8DZzyfZwOCFAQiYuoZ+DGjIKfZXe4sKqt1GCK
8HtwU93C721c0NX+VzZ9m4kPlD79bkoegUdfqJfuBxh4aZ2zz+Ov9fC1TW/i
LcmbO24jEguIz7/je9nlaMvE3/sOjJ70God4d881TbuZuMDWQ0w7YhherC1o
/07yx4sRXRtUzgbjSL70p+qEb+vzE0tr26DG4ejbPDPCM2aFGZI1HNAVKRX8
p8tAz5Zh7a6PbDBKOFccNEbhXdODjFVWo8SvbZQPhovjVZ+T7I6QJrCX33DK
n/DC1a1Z+63Se+GKlDo1SvhI9RN9ZWn4MOgYbfCWuUf6I1ZIdzKuGvrKXXxC
+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
NDYM+Z/PVuVAmkzIdCnp/2nj7UMOzCE4ozFAL1Ci0WX4ouV0KA+yfq62ySFf
T/M32n680Q3v106f9/FkICPg2IqOom54sMf9ykfSF47jCxvMDnDh+29nDeH/
KFTQKE9xVeiCu98WszZliuGtbqPHtN4IqL9nGUWL0ejr+7Io5D3Ju/C6uB4F
wrPfWYvl2jogNdhwmu8YhZzlq1+WARekZLe/4WtiovR5u+465Q44ecnneLco
Ey2Evu3lruoG3+sXH8bvofDRWce884XtMNv3oWPF//NzSOHC3WIeRMtH+zwz
oTFh3u9bUovZsKbWen5Mlhiq91UNTs7qAXsB/bcOYTSqBxTNJNez4aDeskvC
9kws4woNzgoYgWylxBAl0u8aP/U0D6Rwwbn3xpOJqxL4xJ5vqbABG8LGn+2Z
rKYwYMMjw5sbOXCm6DVv/mEmDsecyq7ObAb32lV/jb8xsSm0o/7yxX6wSz9+
/cMWcTxSPbpdQpwNO8z/iW0m/ea1wCVXv3gARsNWBWqfoVGxLiS/+thf+D5r
1u1/f2h8VCQUzLneB/szpbUv2VLY5CHzXlKzCzZ4ha0KKafwUv/S4lWby6Hw
s+63WrJfFZVfvSyiRsHLp2Dvho00zqfEqqu3jsM47+e810fFkaXBt69PrA/e
9t4Xjf9MI99Gu/7VhMdXjTwvKrvOxEufRy4GJE7ApcvW8vP2MrHFyGR8epjk
VWrcUMQ94ost0UfjXQfAOHYqbrYL4eMNwS/9CC+9mfqjo2XNRJd8NZdLDSOQ
t+THyWoTCus2q+RTPQNQnnTwhZcwjfrxLGkpdTYIxqxKoybIvDXxjUo4s8FE
+ais0SIK334XrVwt2gd7+7PSYib///sSUiKPk7tA8I1b8nMrJr6wmYkdaO+D
+S/SfPado/GSgeGaUtFBGH/2yuNeD8kvrS8lrPdDULhQKEvEg8Yef6s2810t
oFB8Mmn1/f//fwmj/JZvf8B6j1rH927C60I/hq7OdAPLmE/tM5m/W8t7dTcR
f/0UqDVSSZ73Cb4THRBkg51+8BLFPHL+XZ3S6lYs+LxfcX0R4Y+d9kXGa0KG
QTmjdNZZPgk851aR2bKIB1v3CWnrMpi4+03r+ZM+PCiudn/73y4ab93KN8r4
2QtbZh9NSiP+AmBuOd3KhYDPbaP10xQWWJVgR94wHNtfNi7fJo6nx0znz6rp
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
bhHX
           "]]}, PlotRange -> {{-1, 3}, {-8, 2}}, AxesOrigin -> {0, 0}]],
      
      Ticks->{Automatic, Automatic}], {191.00408802586253`, -116.80842387373012`},
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212`}], InsetBox[
     FormBox[
      TagBox[
       FormBox[
        GraphicsBox[{{{}, {{}, {}, 
            {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
             0.011111111111111112`], AbsoluteThickness[1.6], 
             LineBox[CompressedData["
1:eJwtlAtMU2cUxxERC4gukzp1DMTNFXUmG6CbMPgTVxDsRASHm+BwDHW+Ikhm
AAfIhjEs2zTI3NrxEGGLyAABgxARBoJQaGsf0JZ3X1BKeQUpkYljbT0nubn5
7r3fOef//53vesSdjzhua2NjE2++LPdLLhV71alZeFgyVh1tP41X61yYOG2m
Ku8p1LldMR6sK4C48kqN64VJel+C/L0/eR5vmACPa4lS2O04xX62ZgL11u8r
UGb7bKPXGSPMC/OTKix+JD68WjhO++/D61Dol00+43BUFCf4Oz5AF+ulqKzI
AGs6bj3+zdyz/chaA7bGXGsxeTYgOOjNH09mj1E/jdjqcfdW5vIxlJh3K4r/
AdMhqzEuU48Ja71mJK1ULols9fDxtsRjZGyZC8m5Okr1W2E/XSdIXzOKxyZP
c4U2+Po4/XeGNwInaz/tkIU6q3Z6jiDCWrAD4XkHyhvqdKSXj/EgbouOo4Mm
1ZKwE/xrN0pvqrXUrwCaT3dvaErRItHSXoIQnJ2uXWEuWvJHhOx26Ru+VRrY
WEMMPS/mWHK4hvSIwetfilo+q0aI2lJAAt6pwAD5r2rSJ8EzH4bXpJ8a11ss
AqQ467Q5m61TwSrXWwan69lRyl9UsMpRyDBfnbyqxE9F+ruxLeRwOrtnGO6W
dtx6UOu+3p774TD50YNu1mLzroIhnDxhCTmM2abaVQ5D5I8C9g3+SyuTB2HJ
5lKhQOuCx+Ja4wD5pUS1h+76xrgBzFvSmZRIY936ym6wn/zrxYrey6/XR/cj
wDoAfVjYU5HlPtRHfvZhqIC9xi2+D9b2rvTDjhFRw5vsJX8HkBAQve9Sai+E
AksM4LMZduWfjr3k9yBu+DSpl/KVYFobHMILbeo7CT5K8n8IqvnsdYNCBazp
Yobh9N0XHTtOK4iHCl5ldYJQBwXpUUFYERu8oUxOfFRwYMTPZh2Qkz4VPGOX
vX9xvod4qfHJLqa9orCH9KoR6Vz8bg6nh/ipwcgtn8lZ6Cb9GuwfvpPQVtpN
PDVgJzbHrovpxqt0Giw78t7mpNe6ia8Wrn3lrfwnMvJHi0ctaQuMDBnx1sKJ
U+ayabeM/NIh5IO3GEtzUuKvQ3J1cOzNain5p8PIpr98FYlSmocRGP9w49R4
ScnPEQTm+gldTRKajxH8Hnk6y75eQv6Ooq/Iu/brdAnNyygM4rQtnkES8nsU
5cZB5xBnCZ138zlNeOlWJxeT/3qEa9cnnysS0zzpMfA9r/joOTHxGMM3tbKc
dF8x8RjDby/l3CcMMfEYw8fH9fLP7z0lHub/guzOtrCDT4mHAdLKy8+j50TE
w4DBu0v3Erki4mFAw+32+IxAEfEYBytv+NG3BiHxGEd6BWchKFdI8zmOoBS9
Sh0oJB5GPPwhs81vWkA8jGA17kwJLhQQDyP8/VfsM4ULiMcEfvYuXfSzExCP
CSS5Fbavru8iHhOIYZ4NizvfRTwmcZvFzN/O6iIek5h/0Pn2MVUn8ZjEBX5r
tYnXSTymcMIv7KImqpN4TOHQi8VZV5dO4jGFrkCmbZ6UTzymsdHEFEXl8InH
NP6+ePYpO5JPPKax6vl+/lEmn3jMmOvdf8JVduB/Gv0hXg==
              "]]}, 
            {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
             0.011111111111111112`], AbsoluteThickness[1.6], 
             LineBox[CompressedData["
1:eJwtkwtMk2cUhuskwEAzAjIUESZjgihRLlNn0FedCxs6boILlzlHKijqRKWO
YRSJohOmsmkioqIMAgIRGQIiKk4u2lJ6pxQoll4o0AsXp4gSxLX1nOTPn+/7
/++c877P+RYnHoja9RGDwWCaHvP76LyqEFXGKYRke2dyvxrDh/UllI8+O52Z
PooG92xDZEMhphZYXXZ5OELfS7DhC9+Nf1iNoOCKOcpxy71xgyTSiPuW/6tQ
czv0en+xAaaFaecfzDgEdxZN6el8LUaD39jabtfDTlacus7uHkof7Fg7U6eD
Jd2V+yjabzz6i6sOSxMuNE/4PITNbX//jSeHqZ8mxOauDf1xfAglptOy4n+x
zqci89bPQzBa6j1BY0jqORvZIIICzdEC10+W790RMUj1W8FyO5aVx9OiZcLH
VKENOT/UyE+EaWFv6ecZDj04GOMoGUCUpSAbM/Furd7xA6SXA+bH0oUlgxqo
M8wJ25F70y8vhaWhfjtwffXl6h02Ghw0t5fKw03n1hPMa2ryh4/ulWvO7QxS
g2EJIaa3h02vFqhIjxDXWt9dFe5T4VuVuYAITYerjA5zVaRPhOC9KUuVd5TI
azYLEIO9qW3bkhglLHIDJfg0Z/aBu2/7YZEjk8Cv3CXKPayf9HeicuvJoPIy
BTzM7bhLEec0a1m8tYL8kMIu5pjN8pTnSE4yRxesmU/P2Er6yB8ZIrgPjks3
9MGcbV6VaV39eM2hu3LyqxsX5bu3NPrK8dqcbqIbl77b9Op0aS/514NjXNbi
6iW9WG8ZgF4EhZWtmVvZQ372wjZrZyUrsAeW9rLl+C+5hfnkcTf524di1W8L
OOHd4HWYow929S0nkjQy8vs5SqPHj6ZlyOBsaVCBekHCSsE8GfmvwKrPPV2i
a7pgSZfQD6ZGZ6WO6iIeSmS8EC+LfS0lPUokMjTzr16TEh8lOJ5+VTnfSEmf
EtZNF13nvOgkXir48LoFVjc6Sa8Kzl5nfo0P7yR+KuTLPYYmZ3WSfjX+2qZw
aqmXEE81xvmR1mX7JfiQTg3Zvmne+SUS4qtBaOhCVpJKTP5o8Dyg5pVroZh4
a1BoGPEpSBCTXwPoTdS3id3ExH8Ahy9pt9YqROTfANLSB2at+FtE86CFX3GH
KjBZRH5q4ev/Mr/WT0TzocUy+88yiieE5K/pXu2afeRlk5DmZRDBp1yd8s8K
ye9BvAlgJGXHCOm+D2HypZddtaeQ/B/C7nDpl65qAc3TEDafXx/nlSUgHsP4
Pb3kzxRPAfEYxtf890972vjEYxhzehfV/bSXTzyGEeC0qk/vyCceOnilOaan
POQRDx2YWc1H+Mk84qFDUrjogI0zj3josXb55FXr1g7ioUeFDrxHaR00n3po
F91I9vDuIB4GdNkYY93lXOJhwPyFcKnK4xIPA9xyK/OaQ7jEw4jo4+ErIhhc
4mFEbX8df0tjO/Ewwt4h+14Fq514jCDuPasgMaCdeIzAOuNC7p5xDvEYgW99
0bu6OxziMYr8PTOP1qdyiMco8vR7xqf8OcRjFJFOm+zVr9jEYwyFEpnE0MAm
HmNQ5ryJczjOJh5jcDtc8jZkM5t4jENxfuz7XHs2/gd7WRvo
              "]]}, 
            {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
             0.011111111111111112`], AbsoluteThickness[1.6], 
             LineBox[CompressedData["
1:eJwtkwtQVGUYhsGBkcGmkQYDCTGMHFQ05ZZDwmuJQjMocommcStCwEpQwSIB
yyYlGskJIgtxIgQTUILoujTk4F5Y2BvsLsvCsqx732WvTomNpTtxjt8/c2bn
nLPn+7/vfZ4/tuR4ftmKgICA0uWL+a0PH8gy1p3DwdqQPdHVPjy6/wqdf63+
dKfFC25MgyuP24HVFWsnCou89P4qSq2xj1WNe9B+iVl94L6xOfdCmgfD7P8H
EDmb+GVfvxvLN8tPhnAs7wW1MMZN3/+CMfGeSFOzC6Ga7hPpob9jfWbOIf8K
F9hyl4ZR82dhR9T7TmzifMFbih+BIvV1Y6p9kfq5ic0/lsUVvLaIq8tfa7pH
8cmmY0eOSxxws/vdgq6r5npTugPJScziIyn6jKdn0E77C/D5xcbtglg7+Evx
yzsIYX28+aSh1YZVbD8iZHzW9tuDYBvy2Q3H8U3glfuRp6w07wR8dX27UpwW
mOqYgmJk3R06k8exUL9SdFb+wauUm1HFtHdChvs2XvD53WbKR478Ykn2tZ9M
CGDXFG7MqZp4cSaaZwpBBTq5/msjso3MBgpwpJaw/0KMNJ8Cv+71FEbUG9DM
YwZQ4kbIh/Gt2ttgx01SYfsrd07eEuvBjqNRoSrf8GytdIHmn4Yud4izRq/D
eqadGDUe1mvT4vzzlIcaZY055W9umceRcmbNoCouQvF9qZby0eDhvuyme71z
YKqFD2gQ9J3maMU/s5TXLNRRge+k5c7iHlNuaRbtp1s+7h3UUH5zMOPuk2GR
GmSwAmhx4NURrr5xhvLU4ue/07ed96vBttcwj8MvLqja6tWUrw4Pdc8kXPZP
QyZllg7inZ1dWxqnKe8FKPZvOOUJn8YatkE9Rj5IUDb1qCh/PdJTahzcDBXY
cpzbCIlKydmqVRIPA9YlNe/tqVXSPAb4gpIyndFK4mPAe+sqi2/yFTSfAfIf
Bpy+SgXxMqL3XMPK3KcUNK8ROyLOFg1KpoifEaKagS77R1M0vwnmsKLLiuQp
4mkinpN4VM6E8s5v2zgHJ4mvmfjKKR8z+m1vDTe+LCfeZuIto7ws2Nee7ygp
kBF/C/GXUn4WFJbUyw5XSMkHK/kgoTytqFvQb3yuVUJ+WMkPCeVrQ8UTZ5da
xsTki418EVPeNjzIGlXUB4vpvNvhZ/2ZoPztCETitn8PTJBPdvJpnHg4sDFz
lJPcNU48HOTXOPFwYENsdeLbfhHxcJBvIuKxiP4Oz1Z7iYh4LJJ/IuKxiKZD
K0PDJ8eIh5N8HCMeTmTsSLhe/NIY+ekkP4XEwwWuciYvZ0RIPFzkq5B4uDAR
7I8q2SUkHm7yV0A83Jjvbr3yPE9APNzks4B4eCB71zl/dL+AeHjIbwHx8GAp
dffaawt84uEl3/nEw4uwQdnTF6v5xMNL/vOJhw9zwr4K7yo+8fDReeARDx/8
PS2nK/t4xOMOnQ8e/gdEkiPL
              "]]}}, {}}, InsetBox[
           TemplateBox[{"\"Normal\"","\"Triangle\"","\"Uniform\""},
            "PointLegend",
            DisplayFunction->(FormBox[
              StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False], TraditionalForm]& ),
            Editable->True,
            InterpretationFunction:>(RowBox[{"PointLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "True", ",", "True"}], "}"}], 
                    "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
               "]"}]& )], Scaled[{0.99, 0.99}], ImageScaled[{1, 1}],
           BaseStyle->{FontSize -> Larger},
           FormatType->StandardForm]},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{
           FormBox["\"\[Sigma] of swarm\"", TraditionalForm], 
           FormBox["\"Max Torque\"", TraditionalForm]},
         AxesOrigin->{0, 0},
         DisplayFunction->Identity,
         Frame->{{False, False}, {False, False}},
         FrameLabel->{{None, None}, {None, None}},
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImageSize->Medium,
         Method->{},
         PlotLabel->FormBox[
          "\"Maximum possible torque on object pivoted at 0, length 1\"", 
           TraditionalForm],
         PlotRange->{{0, 1.}, {0, 0.9826794919243103}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}},
         Ticks->{Automatic, Automatic}],
        TraditionalForm],
       InterpretTemplate[Legended[
         Graphics[{{}, {{{}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              Line[CompressedData["
1:eJwtlAtMU2cUxxERC4gukzp1DMTNFXUmG6CbMPgTVxDsRASHm+BwDHW+Ikhm
AAfIhjEs2zTI3NrxEGGLyAABgxARBoJQaGsf0JZ3X1BKeQUpkYljbT0nubn5
7r3fOef//53vesSdjzhua2NjE2++LPdLLhV71alZeFgyVh1tP41X61yYOG2m
Ku8p1LldMR6sK4C48kqN64VJel+C/L0/eR5vmACPa4lS2O04xX62ZgL11u8r
UGb7bKPXGSPMC/OTKix+JD68WjhO++/D61Dol00+43BUFCf4Oz5AF+ulqKzI
AGs6bj3+zdyz/chaA7bGXGsxeTYgOOjNH09mj1E/jdjqcfdW5vIxlJh3K4r/
AdMhqzEuU48Ja71mJK1ULols9fDxtsRjZGyZC8m5Okr1W2E/XSdIXzOKxyZP
c4U2+Po4/XeGNwInaz/tkIU6q3Z6jiDCWrAD4XkHyhvqdKSXj/EgbouOo4Mm
1ZKwE/xrN0pvqrXUrwCaT3dvaErRItHSXoIQnJ2uXWEuWvJHhOx26Ru+VRrY
WEMMPS/mWHK4hvSIwetfilo+q0aI2lJAAt6pwAD5r2rSJ8EzH4bXpJ8a11ss
AqQ467Q5m61TwSrXWwan69lRyl9UsMpRyDBfnbyqxE9F+ruxLeRwOrtnGO6W
dtx6UOu+3p774TD50YNu1mLzroIhnDxhCTmM2abaVQ5D5I8C9g3+SyuTB2HJ
5lKhQOuCx+Ja4wD5pUS1h+76xrgBzFvSmZRIY936ym6wn/zrxYrey6/XR/cj
wDoAfVjYU5HlPtRHfvZhqIC9xi2+D9b2rvTDjhFRw5vsJX8HkBAQve9Sai+E
AksM4LMZduWfjr3k9yBu+DSpl/KVYFobHMILbeo7CT5K8n8IqvnsdYNCBazp
Yobh9N0XHTtOK4iHCl5ldYJQBwXpUUFYERu8oUxOfFRwYMTPZh2Qkz4VPGOX
vX9xvod4qfHJLqa9orCH9KoR6Vz8bg6nh/ipwcgtn8lZ6Cb9GuwfvpPQVtpN
PDVgJzbHrovpxqt0Giw78t7mpNe6ia8Wrn3lrfwnMvJHi0ctaQuMDBnx1sKJ
U+ayabeM/NIh5IO3GEtzUuKvQ3J1cOzNain5p8PIpr98FYlSmocRGP9w49R4
ScnPEQTm+gldTRKajxH8Hnk6y75eQv6Ooq/Iu/brdAnNyygM4rQtnkES8nsU
5cZB5xBnCZ138zlNeOlWJxeT/3qEa9cnnysS0zzpMfA9r/joOTHxGMM3tbKc
dF8x8RjDby/l3CcMMfEYw8fH9fLP7z0lHub/guzOtrCDT4mHAdLKy8+j50TE
w4DBu0v3Erki4mFAw+32+IxAEfEYBytv+NG3BiHxGEd6BWchKFdI8zmOoBS9
Sh0oJB5GPPwhs81vWkA8jGA17kwJLhQQDyP8/VfsM4ULiMcEfvYuXfSzExCP
CSS5Fbavru8iHhOIYZ4NizvfRTwmcZvFzN/O6iIek5h/0Pn2MVUn8ZjEBX5r
tYnXSTymcMIv7KImqpN4TOHQi8VZV5dO4jGFrkCmbZ6UTzymsdHEFEXl8InH
NP6+ePYpO5JPPKax6vl+/lEmn3jMmOvdf8JVduB/Gv0hXg==
               "]]}, {
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              Line[CompressedData["
1:eJwtkwtMk2cUhuskwEAzAjIUESZjgihRLlNn0FedCxs6boILlzlHKijqRKWO
YRSJohOmsmkioqIMAgIRGQIiKk4u2lJ6pxQoll4o0AsXp4gSxLX1nOTPn+/7
/++c877P+RYnHoja9RGDwWCaHvP76LyqEFXGKYRke2dyvxrDh/UllI8+O52Z
PooG92xDZEMhphZYXXZ5OELfS7DhC9+Nf1iNoOCKOcpxy71xgyTSiPuW/6tQ
czv0en+xAaaFaecfzDgEdxZN6el8LUaD39jabtfDTlacus7uHkof7Fg7U6eD
Jd2V+yjabzz6i6sOSxMuNE/4PITNbX//jSeHqZ8mxOauDf1xfAglptOy4n+x
zqci89bPQzBa6j1BY0jqORvZIIICzdEC10+W790RMUj1W8FyO5aVx9OiZcLH
VKENOT/UyE+EaWFv6ecZDj04GOMoGUCUpSAbM/Furd7xA6SXA+bH0oUlgxqo
M8wJ25F70y8vhaWhfjtwffXl6h02Ghw0t5fKw03n1hPMa2ryh4/ulWvO7QxS
g2EJIaa3h02vFqhIjxDXWt9dFe5T4VuVuYAITYerjA5zVaRPhOC9KUuVd5TI
azYLEIO9qW3bkhglLHIDJfg0Z/aBu2/7YZEjk8Cv3CXKPayf9HeicuvJoPIy
BTzM7bhLEec0a1m8tYL8kMIu5pjN8pTnSE4yRxesmU/P2Er6yB8ZIrgPjks3
9MGcbV6VaV39eM2hu3LyqxsX5bu3NPrK8dqcbqIbl77b9Op0aS/514NjXNbi
6iW9WG8ZgF4EhZWtmVvZQ372wjZrZyUrsAeW9rLl+C+5hfnkcTf524di1W8L
OOHd4HWYow929S0nkjQy8vs5SqPHj6ZlyOBsaVCBekHCSsE8GfmvwKrPPV2i
a7pgSZfQD6ZGZ6WO6iIeSmS8EC+LfS0lPUokMjTzr16TEh8lOJ5+VTnfSEmf
EtZNF13nvOgkXir48LoFVjc6Sa8Kzl5nfo0P7yR+KuTLPYYmZ3WSfjX+2qZw
aqmXEE81xvmR1mX7JfiQTg3Zvmne+SUS4qtBaOhCVpJKTP5o8Dyg5pVroZh4
a1BoGPEpSBCTXwPoTdS3id3ExH8Ahy9pt9YqROTfANLSB2at+FtE86CFX3GH
KjBZRH5q4ev/Mr/WT0TzocUy+88yiieE5K/pXu2afeRlk5DmZRDBp1yd8s8K
ye9BvAlgJGXHCOm+D2HypZddtaeQ/B/C7nDpl65qAc3TEDafXx/nlSUgHsP4
Pb3kzxRPAfEYxtf890972vjEYxhzehfV/bSXTzyGEeC0qk/vyCceOnilOaan
POQRDx2YWc1H+Mk84qFDUrjogI0zj3josXb55FXr1g7ioUeFDrxHaR00n3po
F91I9vDuIB4GdNkYY93lXOJhwPyFcKnK4xIPA9xyK/OaQ7jEw4jo4+ErIhhc
4mFEbX8df0tjO/Ewwt4h+14Fq514jCDuPasgMaCdeIzAOuNC7p5xDvEYgW99
0bu6OxziMYr8PTOP1qdyiMco8vR7xqf8OcRjFJFOm+zVr9jEYwyFEpnE0MAm
HmNQ5ryJczjOJh5jcDtc8jZkM5t4jENxfuz7XHs2/gd7WRvo
               "]]}, {
              Hue[0.1421359549995791, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              Line[CompressedData["
1:eJwtkwtQVGUYhsGBkcGmkQYDCTGMHFQ05ZZDwmuJQjMocommcStCwEpQwSIB
yyYlGskJIgtxIgQTUILoujTk4F5Y2BvsLsvCsqx732WvTomNpTtxjt8/c2bn
nLPn+7/vfZ4/tuR4ftmKgICA0uWL+a0PH8gy1p3DwdqQPdHVPjy6/wqdf63+
dKfFC25MgyuP24HVFWsnCou89P4qSq2xj1WNe9B+iVl94L6xOfdCmgfD7P8H
EDmb+GVfvxvLN8tPhnAs7wW1MMZN3/+CMfGeSFOzC6Ga7hPpob9jfWbOIf8K
F9hyl4ZR82dhR9T7TmzifMFbih+BIvV1Y6p9kfq5ic0/lsUVvLaIq8tfa7pH
8cmmY0eOSxxws/vdgq6r5npTugPJScziIyn6jKdn0E77C/D5xcbtglg7+Evx
yzsIYX28+aSh1YZVbD8iZHzW9tuDYBvy2Q3H8U3glfuRp6w07wR8dX27UpwW
mOqYgmJk3R06k8exUL9SdFb+wauUm1HFtHdChvs2XvD53WbKR478Ykn2tZ9M
CGDXFG7MqZp4cSaaZwpBBTq5/msjso3MBgpwpJaw/0KMNJ8Cv+71FEbUG9DM
YwZQ4kbIh/Gt2ttgx01SYfsrd07eEuvBjqNRoSrf8GytdIHmn4Yud4izRq/D
eqadGDUe1mvT4vzzlIcaZY055W9umceRcmbNoCouQvF9qZby0eDhvuyme71z
YKqFD2gQ9J3maMU/s5TXLNRRge+k5c7iHlNuaRbtp1s+7h3UUH5zMOPuk2GR
GmSwAmhx4NURrr5xhvLU4ue/07ed96vBttcwj8MvLqja6tWUrw4Pdc8kXPZP
QyZllg7inZ1dWxqnKe8FKPZvOOUJn8YatkE9Rj5IUDb1qCh/PdJTahzcDBXY
cpzbCIlKydmqVRIPA9YlNe/tqVXSPAb4gpIyndFK4mPAe+sqi2/yFTSfAfIf
Bpy+SgXxMqL3XMPK3KcUNK8ROyLOFg1KpoifEaKagS77R1M0vwnmsKLLiuQp
4mkinpN4VM6E8s5v2zgHJ4mvmfjKKR8z+m1vDTe+LCfeZuIto7ws2Nee7ygp
kBF/C/GXUn4WFJbUyw5XSMkHK/kgoTytqFvQb3yuVUJ+WMkPCeVrQ8UTZ5da
xsTki418EVPeNjzIGlXUB4vpvNvhZ/2ZoPztCETitn8PTJBPdvJpnHg4sDFz
lJPcNU48HOTXOPFwYENsdeLbfhHxcJBvIuKxiP4Oz1Z7iYh4LJJ/IuKxiKZD
K0PDJ8eIh5N8HCMeTmTsSLhe/NIY+ekkP4XEwwWuciYvZ0RIPFzkq5B4uDAR
7I8q2SUkHm7yV0A83Jjvbr3yPE9APNzks4B4eCB71zl/dL+AeHjIbwHx8GAp
dffaawt84uEl3/nEw4uwQdnTF6v5xMNL/vOJhw9zwr4K7yo+8fDReeARDx/8
PS2nK/t4xOMOnQ8e/gdEkiPL
               "]]}}}, {}}, {
          DisplayFunction -> Identity, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
           PlotRange -> {{0, 1.}, {0, 0.9826794919243103}}, DisplayFunction -> 
           Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {"\[Sigma] of swarm", "Max Torque"}, 
           AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
           Frame -> {{False, False}, {False, False}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
           PlotLabel -> 
           "Maximum possible torque on object pivoted at 0, length 1", 
           PlotRange -> {{0, 1.}, {0, 0.9826794919243103}}, PlotRangeClipping -> 
           True, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
         Placed[
          Unevaluated[
           PointLegend[{
             Directive[
              PointSize[0.011111111111111112`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              PointSize[0.011111111111111112`], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              PointSize[0.011111111111111112`], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]]}, {"Normal", "Triangle", "Uniform"}, 
            Joined -> {{True, True, True}}, LabelStyle -> {}, LegendLayout -> 
            "Column", 
            LegendMarkers -> {{False, Automatic}, {False, Automatic}, {
              False, Automatic}}]], {Right, Top}, Identity]]& ],
       AutoDelete->True,
       Editable->True,
       SelectWithContents->False,
       Selectable->True],
      TraditionalForm], {576., -116.80842387373012`}, {
     Center, Center}, {360., 222.49223594996212`}]}, {}},
  ContentSelectable->True,
  ImagePadding->{{174.714236, 175.714236}, {1., 0.}},
  ImageSize->{780., 245.61684774746024`},
  PlotRange->{{186., 582.}, {-238.61684774746024`, 5.}},
  PlotRangePadding->Automatic]], "Input",
 CellChangeTimes->{3.684575004980954*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1: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
3649XSc=
        
        "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwlzkdOQgEARdH/wV4Q7IigIMp+3IAJC9B12ruiYu8dOxbQkzg4uW/4ssWZ
yelIEAQhU0SNBhppopkWWmmjnQ46idFFnATd9NBLH/0MMEiSIVIMkybDCKNk
yTFGngLjRJggDP9P/kqdGj9888UnVT54541XXnjmiQqPPHDPHbfccM0Vl1xw
zhmnnHDMEYccsE+ZPXbZocQ2W2yywTprrLLCMkssssA8c8zyBxBkNkU=
             
             "]]]}, {}, {}}, {{}, {}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
             18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
            34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 
            50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 
            66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 
            82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 
            98, 99, 100}]}, 
          {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[{101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 
            112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 
            125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 
            138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 
            151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 
            164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 
            177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 
            190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200}]}, 
          {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[{201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 
            212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 
            225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 
            238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 
            251, 252, 253, 254, 255, 256, 257, 294}]}, 
          {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[{259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 
            270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 
            283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 295}]}}}], {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"\[Sigma] of swarm\"", TraditionalForm], 
        FormBox["\"Optimal push location (\[Mu])\"", TraditionalForm]},
      AxesOrigin->{0, 0.403},
      DisplayFunction->Identity,
      Epilog->{
        Dashing[{Small, Small}], 
        LineBox[
         NCache[{{0, 
            Rational[2, 3]}, {100, 
            Rational[2, 3]}}, {{0, 0.6666666666666666}, {
           100, 0.6666666666666666}}]], 
        LineBox[
         NCache[{{0, 2^Rational[-1, 2]}, {100, 2^Rational[-1, 2]}}, {{
           0, 0.7071067811865475}, {100, 0.7071067811865475}}]], 
        LineBox[
         NCache[{{0, 
            Rational[1, 2]}, {100, 
            Rational[1, 2]}}, {{0, 0.5}, {100, 0.5}}]]},
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->Medium,
      Method->{},
      PlotLabel->FormBox[
       "\"Where to push object pivoted at 0, length 1, to maximize torque\"", 
        TraditionalForm],
      PlotRange->{{0, 1.}, {0.4, 1.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Prolog->InsetBox[
        GraphicsBox[{
          RGBColor[0.6, 0.4, 0.2], 
          RectangleBox[
           NCache[{0, 
             Rational[-1, 10]}, {0, -0.1}], 
           NCache[{1, 
             Rational[1, 10]}, {1, 0.1}]], 
          RGBColor[0, 0, 1], 
          PointBox[{0, 0}], 
          RGBColor[1, 0, 0], 
          PolygonBox[
           NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
              Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
             1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]], 
          GrayLevel[0], 
          PointSize[Tiny], 
          PointBox[CompressedData["
1:eJwVm3c8le8bx6VBRTjPc6yQSiWkUgnFRbZkp2gZ6WsnLUUaRomKFiqpRIOU
jCjqMoqWskdItmOdYSd+9++vXud1XjqP+76uz+f9Tpa6HLZx4+fj4+uZzcf3
/z/rfN72/pc9AcMxCw7Va9BotrLiQY11P+jb6a/J0qJx78e9Uk5T1aCg7u4+
fZqJd2bu7Dyd1gdtNx6+CfrOwIUDfoHLD3SB++KfgUNVTPSJDL72fvUAbAyZ
X1X8l4lL2e1z/rj2w4qYZHu3CRrHl6xcGZNRDss0cweiCyh0mj7y1X9kBn7l
/hz5Qz5vZI7dsVgjDow888o7oiyOl5/f+xGhzQabnY3a8y7SmFVWMGHlwIWM
ueaSHcM0CkfXCSpH9EDtj/aQDxsYKJDKNVxhwgbPLEOR+53iWKa++87o3gE4
rN+06YQFjYHHSyXDpNhwJeJ58r8eGkf7fgyqWw1D2MHA124UhSdnTf7O0h+F
hKGrDVJ7KKT81K6/UxuGoOBrCf6eFAb1VM9l720DTmabptxnJgq49l7a0UGe
V6GmpOYEhdeWzNt1SHMIDLWU5v2NZ2Il3Wwk+KMHNJ+rS4uXM7CnuoKbIzQI
kppJj/nmi+Pc0Szu9RweKH7YOCpnzcSVPxYkxAmPw0NF3Ygw8vrgqqnNO179
hmON7bIHX0gg3yvHFfHGXSC5EAQ8rWjcvihiRfF8NjjurLvYliuG+6viJl77
ssGg02dttbUEmu1SP5W+iQ38swYKi3ZS2FAiWHFh0wgYDVDtg0M0Ph3NL5Px
6ofZ+vx8O8j3U30hwFzHkQPzrC6eE95BY87HisKIdi4IML7ejJOiMIrP9zWn
pQtiN9zbc0GLwn962l38zlzIN6uYElCi8UVslqfjUjbkH9I2XH+BRtGmNzpr
pAdAVfYxz/4xjecrU7Zr5w1B7V/pCy/OUrhn43Xp1f+6Yem1hYPjZTTOWSqY
qyfAggsVGV/3HqfxzZnocNTlQEqC5jqNVhpl1slvT2UNQfqHtVZnN9I473Ll
0vkLRmF1eYzRjS4alYTbUsJvTcL16e6j62toHLwqw6zlcmBuRvNnzgCNk58m
b+Y8HoEOcX5bo09iaPKM7zUVw4Vsh9rGVUNMFIGpd/9esKHkAWvuqUAxlI+p
sGu6PAFx+6Idnu4n93lo9YTrgx5o+G2uPBUkjl3yJ37+HSTzFRUS9DSGwifO
npWGZmNwYLtByJYFDKyL6y5ZLssGym1ee8QVCu+ObXlQe6IPliQqL9GsozAz
TmHQI3YIhpvWllQeofBMVE50s0YvzFF6EBSgzERv3Bp1O7kNzFb9fppQwcBn
MRtSwucNA9d51inNaQpTwmSty+eyYMWWTTsvD5H351+jVg+xYfhNYPFdBo0t
5t6X3iqw4Z6+o6DHQSbuU1wdnZ7IBf1JP96kHoXDHyOu6Qm3Qd3wk+RuHTH0
SmeZ5CQOgNM7R85jU7IvdZ7W+lEDsLdDw3GJLY3HL9rrzrXgwOP5fpGRSRTG
P+nZfaOKAyovZy/ZME6jxfdPpq9VRqG1T/obp5XCuJop7tLZ1XCwfP5ofwuF
fE/7d53bxoMDS3v3vpNgYtRYSfb6gUHgP2Gq7GRB4dq/Ga9lprkg8U1n44AQ
AzW8t81IYwMkCTcLC90Sw5Ylepab2WxYHl5/Sk+Ewu1We4ZldrLANEzQ7c0U
2V/u6aIZYx6MV47+q9OhsTFZ8fSqJ8Nw81zZh4wjDLyv5URvcBiHW+evio7M
ZWLeGck3UQI8GIjOzpC/wUCblBS1vZt7YCRd5J7dBAPbFBeE9P6qhsDyZc8P
76axyPhIloUpB6blfY9vXEihdvbzQwc+c2Bjxqs0mTYGrh+OvKFfOAx3Vk5m
zzpAY8oRJ7Gv4wOgqDbwWgYYOLtf78XmNzww/+yiI/iTxpVTDS0bP3BB/WGe
mpQoA32OdV2zvfcHLPh21f2oFccFHNVjDfPb4S0tf76khIErJ0cTAgyHYc3p
LZtDFjKxtvm2SrP1EBSehAEUYKJBnYHXw/ks6H4ind1lTWFfAkeKcXIM8pt/
zvw8y8A5orESlT85MPG2I2q3MI3LwhvTIr81wExK51qFEgq5Ryt8DJ3GgNEp
u6y7iTyfn76+ilolXFi9zfO0GoVzhHrn5VaOgK5tbp5CsBhq9sZGfHg/BJ1p
fxtLVBj4xWrdyyCbYchOdzZwFqTQyJU3yD+nC1Ljjm8pk6ewQPFXttxmNnzM
/OLxJY6B6jkrE27e64HVNpm+058oNKn0VnWMqoFpHyPfOY5iuO5HNTfFpB9U
ZNkHfEkeM8KtHGLlWKD0LYxViGQeQ78UeH/lQZqT24JNh2hsWxwnYva7D9bF
Jun5GVHovHqu3fHqQThZ0fJ6cw6NX27ZvDlwuA8u9fa0v/9A49c+PB51igMP
fXLYheYk39qVThTt6wTF1zx377XiuOeh16btKRwIiLiX7kP6qjLMZ4Te1AcT
WcMB2rkMFL3hsktgTifs3t5SrClOo1p31vs1/3XB97FtfOJFNAplnmZca+yG
Y0pps4yZDHwtPPX3uC4bLJIEh26R/AvMe89ot++H53NstpyTEsesfAfq3VUO
GF9axWK9YuCwQZFOjV0bGP354G2qwUBBvb7njLM9UNYq3/5Pm8IDL9PPjm39
AyOMv+LXPSg8Xj00ENrHhROfp7oTf4lh8JcVbgpXeTC8dOWtedsonO2yO35O
4QA8rnfZkNVFIb/MPa4ViwsbSx3sZ6tQOPVAK0Quog3Cbu6/szWTiSke33yG
SsdgRsUoXNSDxst96lkpebWwZtfb2ZwBJt7TyqzU0ufCbfcZNexlokXak9te
WwagoFfqpUEpA0VmfTOsy+dAnulDw6e2FNb/4THj+cdg18SC0VV6NCY2CvNX
rewD+aPtLVryNF661Lq8MzYPqKLBDc0RNF6Y+zKk1rUbLvL1mSWqMbEqTLZa
sqcLNMxlJTtIP2nZHOwdmRyBd7sC1vVnUKgbr/RleNEQBF08R1WT+1Pr1JRt
OdwD/w6x765NoFFO/y4mNzXDd1OmInWVwjU3AufE+3EA3C+dEiH3FfNOpzdo
YASypK5btP5gYPLz/0KzjSYgrHdMsuifGLpn8LnMFf0LCdI2WtpsCmsXfHr2
meQpY9sq2co9TFwSttk3Lp4NRyZqCstP0xhWw2IWb+bAz0clJe9e0Xi1MuBR
y3Q1DAX7fY//KIan5/SEqO7ohqyi+qaWaRoT9HYoPOjgwvlskxzqiBjO9RkS
O1NK8rcpZ8XKAQpDtx6z03w8DHsvSxe0kfv1+zOku1BnGL5o9uA6HQb+G9eb
MdrCgcGnyblPNjGRLzZc96PMOEwVtK19Mlsca1d75C+ePwhRbD67SSkadXZJ
2qie64e6zoayW4YMVJW/+GSuxCB4Kif/+0X4q1OuVXtjYS882zPb695vMt8r
NotENNXCOG2hsuY9A1OUZO8/S6+DJ62bdhofIvP014Mvpp8NTLcBN7EqCtUE
y13khqZAtlQkb/lh0o8RV6qauT0guTQ766g/Oe/LTS3H4gYhbrMc3zkuhTlf
9p+KlxyC8FOH3/1/fy20P3Pa1EbgWmBmWAHhi8f8eSs3JLNhluLXzRmBhAeV
fFtnbR0GyU2bT7gQHjLa8Phtrs8QBLBW2PznR+OCT877K/0GQeRT9re3m2jM
vi6y7nrPJGREiqVPBlI4ZCISa/CGA2ZVe/ZxH9J4O8w15inJU7O+/LEIBxpN
Ij2KDzMb4WR+zdWjFRQuqDAwj/fohrRu1Xch5L5/Sfon/kzjgJg7k+8Zycf7
+stXu+iz4HeUKp+VGY0ab37mx+d0g+ms70v2txJeRoFlUTkcKAt8pbAjmcIb
devaF68YBRuuSnEFOd/AoyXq8ya54COdQysQ3uIH/sUtrf2QFfH+aN8bkqdX
xyLfsrog49H2+fJLaCynO/j33xuDjpycE7zX4nipdovP9K4+KOE3D9U6xsSy
lMj35hl98HSu+4rcz+R80i4cPBkxDmvOy/WPlzDx5RZXI37WKITsOzir/T3h
n/bftOj1EXgYemHQjvC6mXCA0YNgLhhyzHQ0y5l4mx+od209UOG78371MiYK
znIXsahogZimC+VmDWI4u8bubtjPIWDlX1v8jeSxX/JHNY2bPyBOdNxlw3zi
EyL7r6Ty/QJFefpuey2FAa81jT0LBmDmWdiCaI443jNguh47w4FJzTvVa6Vp
fPX4und0Iwv2zy+9ri1BYdqRA9uUfrURH/n8NYfc35zotOT4VWyYuqz708uF
QvOFe9zDjNtgiqEhLMXPxOuss3M861lw69oC8zQeAz9JrBn7/qEf7Cf1Xe1W
MPC2bF3qrQX9cCq8y6LtpBhu7V2fbj2XDYdLdr3cWExhy/LHrf8ed0OrhvKM
xCMa5zPkS8xmj8I9szOflumS53Ocn/idNQzLmUpq120YeDh908gNwW64Bp2i
K6+QPJOkQk2SuKDH7cvtTKHQ0GzmPt+HVhAqq/9XU83Ak8orVdNe9cByQWXV
edEUPhWf6+efNQ6buiOD9Q+LI5SdWjtrMRdkNmUnWc+l8WH0lI0l+bxtvwIl
lFbSSC15F1X6rB+83l43OkP8qclCX3dRJA9uvN6eyG9M+ufHlE/k3Q54orE+
9ho5z3DnuQ0jr9nAG45/ddWAzPMPlf5F4f2wdr6v3NJhCruVzK/ktg2C6Ind
S5XdaHwX4vHD5RAHXJN0gr3HmLi4epcd25kHPb6ap/3J/ib6f5HpPDsMAR+f
/Ne2jMae+GlTtSdcUD2948BxUSY+jed/VT7ZB9ye7uc9CjQe2jtYJXi9Ck58
/9sjEE6j1IMNfzN7uXB8InfzYiMavVZw5GCoC17xZTwUqKew6ZTlDenIQaje
xol8U03um/kxwMy6Ez4+/nzplQYTpRfz/sxOZUFs0oPI/W8ZOHGYEb18Vyt8
v9IyuJ2PiXvT5Q9lHp6ERfeqXG8R3/G7XHmB5nJhj1zDFqW/FPb8i3YVWDcE
fnvlKqRHafxWf1Otb10nvI1Z/ySf7OtwSVL1xo/d8Kdq8Nz5DTTKY8iFhpA6
eLE4yyKpUBxHvrzLvocckN/ebcW7QCHLYc7uN04cWJcyMMvSj4F3tr70uCvH
gRqfewnDhAcv9A7l1USzoUnuet+IHY3K9hcHjd+OwDq6a7ueJo29YkL3Zrn2
gdGGzy7byL4f9Fs829OmE3Jg9GkLybOkvt+yepwumBgf95r/lpzHo86yFxF9
kH6e4debR+GPPR2jdgJcuLYFbCp2U2gmpXMsVKMBxqZeHJa4T+HIyqI1OhwO
2D7Ld0jhp/COmNJNjRYubIlYqutE5jUlyf3LLME+2MXwf2KZw8A9WneF7mSN
wcpMjeGNxK/mHMrb5Uh8QkfIMNhWk4k6/Go+l3nDsPZp6u3qfAr7Vf5w6hx7
IUFH5WSEO4Ua8y8o/8ffB1pLb083BlOoyL9mh/ubTlBbPJa08y4TH/lEWNZk
DsIjcef8rRwxnH7g+F5ChfiF+PDIT30GNv5iOzzX6wGX7MrS0V8kL9+zbgo8
YgHbVTlR+AzhVb8nu/ZGdwL1u3b3kS80rsvccHKNcheE6Ebe6U6hMdKxcvQj
4eWcvw6xIaQvVZfnuA6FzcA9/kvllscYOO/5WWv3s91QXG0in3KV8KbK/sxm
/1aYfBnLHxhGofzjlprQ5G74eXtnQZC7GD6vkdwXdpgDznkB57c/IXk4s+eJ
pTTJ49WsbY+8SN+4Xzkv5tAKduzS5lW7GXjjGdXErzgCwss3XbrrTOODHoun
7lFc6NG8k9caSWGb0DIpEzcelFBy+1YRHvsgGfgkcBcbJDq2dzHIfddxEq88
3zkBjZUxO6fIffUXaidLrK2Gn+e2JXiTffnOOFxvdWEAGhtF9EdNKXQxW5ar
odsBdorHUxIeiWFQZvl/W4v7wOqoselrSSZeXj0/WHOcDZ0xEcmcXgqjX4jH
vJhTDi4pvN47DDG0HJQaa7swCi5NJ37tucRE9dEd0o9SCA/yJcnqDzIwQqRj
9cjpHigyX3FcxZPC1IUPHjLvDUHb/qu713+ncFG+VUi/UCvMMFrLdJZTWHhY
b8qZ6ge+9kLby5ZkXgdGiv+pdAK7ODXF7Sbh4XvyJwI+jcKVte/+JEcy0L4s
Sd5NfwJeZH4wvHqIiZFl/vzizzrgjUvjorUPmBhQo1y5gDsMK3z/bXAbpDHz
2/3xk5L9kJrEWCHcRqNrkFV42cVu8GyXlW6MEsexrf5Dkqn98ODmtyVptQzc
qiCzpPTrFLjar8s49JzCV2U+GmEdo7BmjvquyRYafy68InoLSf6YD7axWUyU
WyMSDleGQEiy9dJYOoWXjv8yuPGIB7yDE/n5osSPtBeY39HqgUFF2PNNn4lj
2V8k9UifV849mvn9I+FDZaMTf3U64fY6I2eTUQp1lorMlzDtg9WnvlTNI/vj
mTIj1jzYC+8GDWpCyH6q5Y3Ee36bgHKBqt0idkycP5QIZ3+1g2q92LrSr0z0
ly2ZtSL6FwQU/yrYGsrES04XHfK3cWF1c0maM/F5dvb5te4LeWAdk3ozaFQc
Py045VYgwwPn+otfI55ReMw7eS0ruA0uPc8JnRphYLHl+asNF3ig3C5beEKG
xq6mXWFizT0g1FuvM4cmfHXlpKbt6lbwcS1sMrhDo9U6xVedeziQLFljknyb
wmvHVl7MuzsD973iXNx+MVHFJZ8HHp3At8H1c5EyhS8XPM431uOB6tcAgbE+
MTy/ofa68JleaJBaxTW+S+Ob1guPFlqRfNwd7zroycCLEHgqU34MzJtlfRc8
pvF+6oDs8wYe3JblBpw8yMAsCROF0sdjkGqn0+WtSvjosa6huWI3CNnp9j29
SKOKv8OizZkTMG14+pj8FvL8DZzyfZwOCFAQiYuoZ+DGjIKfZXe4sKqt1GCK
8HtwU93C721c0NX+VzZ9m4kPlD79bkoegUdfqJfuBxh4aZ2zz+Ov9fC1TW/i
LcmbO24jEguIz7/je9nlaMvE3/sOjJ70God4d881TbuZuMDWQ0w7YhherC1o
/07yx4sRXRtUzgbjSL70p+qEb+vzE0tr26DG4ejbPDPCM2aFGZI1HNAVKRX8
p8tAz5Zh7a6PbDBKOFccNEbhXdODjFVWo8SvbZQPhovjVZ+T7I6QJrCX33DK
n/DC1a1Z+63Se+GKlDo1SvhI9RN9ZWn4MOgYbfCWuUf6I1ZIdzKuGvrKXXxC
+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
NDYM+Z/PVuVAmkzIdCnp/2nj7UMOzCE4ozFAL1Ci0WX4ouV0KA+yfq62ySFf
T/M32n680Q3v106f9/FkICPg2IqOom54sMf9ykfSF47jCxvMDnDh+29nDeH/
KFTQKE9xVeiCu98WszZliuGtbqPHtN4IqL9nGUWL0ejr+7Io5D3Ju/C6uB4F
wrPfWYvl2jogNdhwmu8YhZzlq1+WARekZLe/4WtiovR5u+465Q44ecnneLco
Ey2Evu3lruoG3+sXH8bvofDRWce884XtMNv3oWPF//NzSOHC3WIeRMtH+zwz
oTFh3u9bUovZsKbWen5Mlhiq91UNTs7qAXsB/bcOYTSqBxTNJNez4aDeskvC
9kws4woNzgoYgWylxBAl0u8aP/U0D6Rwwbn3xpOJqxL4xJ5vqbABG8LGn+2Z
rKYwYMMjw5sbOXCm6DVv/mEmDsecyq7ObAb32lV/jb8xsSm0o/7yxX6wSz9+
/cMWcTxSPbpdQpwNO8z/iW0m/ea1wCVXv3gARsNWBWqfoVGxLiS/+thf+D5r
1u1/f2h8VCQUzLneB/szpbUv2VLY5CHzXlKzCzZ4ha0KKafwUv/S4lWby6Hw
s+63WrJfFZVfvSyiRsHLp2Dvho00zqfEqqu3jsM47+e810fFkaXBt69PrA/e
9t4Xjf9MI99Gu/7VhMdXjTwvKrvOxEufRy4GJE7ApcvW8vP2MrHFyGR8epjk
VWrcUMQ94ost0UfjXQfAOHYqbrYL4eMNwS/9CC+9mfqjo2XNRJd8NZdLDSOQ
t+THyWoTCus2q+RTPQNQnnTwhZcwjfrxLGkpdTYIxqxKoybIvDXxjUo4s8FE
+ais0SIK334XrVwt2gd7+7PSYib///sSUiKPk7tA8I1b8nMrJr6wmYkdaO+D
+S/SfPado/GSgeGaUtFBGH/2yuNeD8kvrS8lrPdDULhQKEvEg8Yef6s2810t
oFB8Mmn1/f//fwmj/JZvf8B6j1rH927C60I/hq7OdAPLmE/tM5m/W8t7dTcR
f/0UqDVSSZ73Cb4THRBkg51+8BLFPHL+XZ3S6lYs+LxfcX0R4Y+d9kXGa0KG
QTmjdNZZPgk851aR2bKIB1v3CWnrMpi4+03r+ZM+PCiudn/73y4ab93KN8r4
2QtbZh9NSiP+AmBuOd3KhYDPbaP10xQWWJVgR94wHNtfNi7fJo6nx0znz6rp
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
bhHX
           "]]}, PlotRange -> {{-1, 3}, {-8, 2}}, AxesOrigin -> {0, 0}]],
      
      Ticks->{Automatic, Automatic}], {191.00408802586253`, -116.80842387373012`},
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212`}], InsetBox[
     FormBox[
      TagBox[
       FormBox[
        GraphicsBox[{{{}, {{}, {}, 
            {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
             0.011111111111111112`], AbsoluteThickness[1.6], 
             LineBox[CompressedData["
1:eJwtlAtMU2cUxxERC4gukzp1DMTNFXUmG6CbMPgTVxDsRASHm+BwDHW+Ikhm
AAfIhjEs2zTI3NrxEGGLyAABgxARBoJQaGsf0JZ3X1BKeQUpkYljbT0nubn5
7r3fOef//53vesSdjzhua2NjE2++LPdLLhV71alZeFgyVh1tP41X61yYOG2m
Ku8p1LldMR6sK4C48kqN64VJel+C/L0/eR5vmACPa4lS2O04xX62ZgL11u8r
UGb7bKPXGSPMC/OTKix+JD68WjhO++/D61Dol00+43BUFCf4Oz5AF+ulqKzI
AGs6bj3+zdyz/chaA7bGXGsxeTYgOOjNH09mj1E/jdjqcfdW5vIxlJh3K4r/
AdMhqzEuU48Ja71mJK1ULols9fDxtsRjZGyZC8m5Okr1W2E/XSdIXzOKxyZP
c4U2+Po4/XeGNwInaz/tkIU6q3Z6jiDCWrAD4XkHyhvqdKSXj/EgbouOo4Mm
1ZKwE/xrN0pvqrXUrwCaT3dvaErRItHSXoIQnJ2uXWEuWvJHhOx26Ru+VRrY
WEMMPS/mWHK4hvSIwetfilo+q0aI2lJAAt6pwAD5r2rSJ8EzH4bXpJ8a11ss
AqQ467Q5m61TwSrXWwan69lRyl9UsMpRyDBfnbyqxE9F+ruxLeRwOrtnGO6W
dtx6UOu+3p774TD50YNu1mLzroIhnDxhCTmM2abaVQ5D5I8C9g3+SyuTB2HJ
5lKhQOuCx+Ja4wD5pUS1h+76xrgBzFvSmZRIY936ym6wn/zrxYrey6/XR/cj
wDoAfVjYU5HlPtRHfvZhqIC9xi2+D9b2rvTDjhFRw5vsJX8HkBAQve9Sai+E
AksM4LMZduWfjr3k9yBu+DSpl/KVYFobHMILbeo7CT5K8n8IqvnsdYNCBazp
Yobh9N0XHTtOK4iHCl5ldYJQBwXpUUFYERu8oUxOfFRwYMTPZh2Qkz4VPGOX
vX9xvod4qfHJLqa9orCH9KoR6Vz8bg6nh/ipwcgtn8lZ6Cb9GuwfvpPQVtpN
PDVgJzbHrovpxqt0Giw78t7mpNe6ia8Wrn3lrfwnMvJHi0ctaQuMDBnx1sKJ
U+ayabeM/NIh5IO3GEtzUuKvQ3J1cOzNain5p8PIpr98FYlSmocRGP9w49R4
ScnPEQTm+gldTRKajxH8Hnk6y75eQv6Ooq/Iu/brdAnNyygM4rQtnkES8nsU
5cZB5xBnCZ138zlNeOlWJxeT/3qEa9cnnysS0zzpMfA9r/joOTHxGMM3tbKc
dF8x8RjDby/l3CcMMfEYw8fH9fLP7z0lHub/guzOtrCDT4mHAdLKy8+j50TE
w4DBu0v3Erki4mFAw+32+IxAEfEYBytv+NG3BiHxGEd6BWchKFdI8zmOoBS9
Sh0oJB5GPPwhs81vWkA8jGA17kwJLhQQDyP8/VfsM4ULiMcEfvYuXfSzExCP
CSS5Fbavru8iHhOIYZ4NizvfRTwmcZvFzN/O6iIek5h/0Pn2MVUn8ZjEBX5r
tYnXSTymcMIv7KImqpN4TOHQi8VZV5dO4jGFrkCmbZ6UTzymsdHEFEXl8InH
NP6+ePYpO5JPPKax6vl+/lEmn3jMmOvdf8JVduB/Gv0hXg==
              "]]}, 
            {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
             0.011111111111111112`], AbsoluteThickness[1.6], 
             LineBox[CompressedData["
1:eJwtkwtMk2cUhuskwEAzAjIUESZjgihRLlNn0FedCxs6boILlzlHKijqRKWO
YRSJohOmsmkioqIMAgIRGQIiKk4u2lJ6pxQoll4o0AsXp4gSxLX1nOTPn+/7
/++c877P+RYnHoja9RGDwWCaHvP76LyqEFXGKYRke2dyvxrDh/UllI8+O52Z
PooG92xDZEMhphZYXXZ5OELfS7DhC9+Nf1iNoOCKOcpxy71xgyTSiPuW/6tQ
czv0en+xAaaFaecfzDgEdxZN6el8LUaD39jabtfDTlacus7uHkof7Fg7U6eD
Jd2V+yjabzz6i6sOSxMuNE/4PITNbX//jSeHqZ8mxOauDf1xfAglptOy4n+x
zqci89bPQzBa6j1BY0jqORvZIIICzdEC10+W790RMUj1W8FyO5aVx9OiZcLH
VKENOT/UyE+EaWFv6ecZDj04GOMoGUCUpSAbM/Furd7xA6SXA+bH0oUlgxqo
M8wJ25F70y8vhaWhfjtwffXl6h02Ghw0t5fKw03n1hPMa2ryh4/ulWvO7QxS
g2EJIaa3h02vFqhIjxDXWt9dFe5T4VuVuYAITYerjA5zVaRPhOC9KUuVd5TI
azYLEIO9qW3bkhglLHIDJfg0Z/aBu2/7YZEjk8Cv3CXKPayf9HeicuvJoPIy
BTzM7bhLEec0a1m8tYL8kMIu5pjN8pTnSE4yRxesmU/P2Er6yB8ZIrgPjks3
9MGcbV6VaV39eM2hu3LyqxsX5bu3NPrK8dqcbqIbl77b9Op0aS/514NjXNbi
6iW9WG8ZgF4EhZWtmVvZQ372wjZrZyUrsAeW9rLl+C+5hfnkcTf524di1W8L
OOHd4HWYow929S0nkjQy8vs5SqPHj6ZlyOBsaVCBekHCSsE8GfmvwKrPPV2i
a7pgSZfQD6ZGZ6WO6iIeSmS8EC+LfS0lPUokMjTzr16TEh8lOJ5+VTnfSEmf
EtZNF13nvOgkXir48LoFVjc6Sa8Kzl5nfo0P7yR+KuTLPYYmZ3WSfjX+2qZw
aqmXEE81xvmR1mX7JfiQTg3Zvmne+SUS4qtBaOhCVpJKTP5o8Dyg5pVroZh4
a1BoGPEpSBCTXwPoTdS3id3ExH8Ahy9pt9YqROTfANLSB2at+FtE86CFX3GH
KjBZRH5q4ev/Mr/WT0TzocUy+88yiieE5K/pXu2afeRlk5DmZRDBp1yd8s8K
ye9BvAlgJGXHCOm+D2HypZddtaeQ/B/C7nDpl65qAc3TEDafXx/nlSUgHsP4
Pb3kzxRPAfEYxtf890972vjEYxhzehfV/bSXTzyGEeC0qk/vyCceOnilOaan
POQRDx2YWc1H+Mk84qFDUrjogI0zj3josXb55FXr1g7ioUeFDrxHaR00n3po
F91I9vDuIB4GdNkYY93lXOJhwPyFcKnK4xIPA9xyK/OaQ7jEw4jo4+ErIhhc
4mFEbX8df0tjO/Ewwt4h+14Fq514jCDuPasgMaCdeIzAOuNC7p5xDvEYgW99
0bu6OxziMYr8PTOP1qdyiMco8vR7xqf8OcRjFJFOm+zVr9jEYwyFEpnE0MAm
HmNQ5ryJczjOJh5jcDtc8jZkM5t4jENxfuz7XHs2/gd7WRvo
              "]]}, 
            {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
             0.011111111111111112`], AbsoluteThickness[1.6], 
             LineBox[CompressedData["
1:eJwtkwtQVGUYhsGBkcGmkQYDCTGMHFQ05ZZDwmuJQjMocommcStCwEpQwSIB
yyYlGskJIgtxIgQTUILoujTk4F5Y2BvsLsvCsqx732WvTomNpTtxjt8/c2bn
nLPn+7/vfZ4/tuR4ftmKgICA0uWL+a0PH8gy1p3DwdqQPdHVPjy6/wqdf63+
dKfFC25MgyuP24HVFWsnCou89P4qSq2xj1WNe9B+iVl94L6xOfdCmgfD7P8H
EDmb+GVfvxvLN8tPhnAs7wW1MMZN3/+CMfGeSFOzC6Ga7hPpob9jfWbOIf8K
F9hyl4ZR82dhR9T7TmzifMFbih+BIvV1Y6p9kfq5ic0/lsUVvLaIq8tfa7pH
8cmmY0eOSxxws/vdgq6r5npTugPJScziIyn6jKdn0E77C/D5xcbtglg7+Evx
yzsIYX28+aSh1YZVbD8iZHzW9tuDYBvy2Q3H8U3glfuRp6w07wR8dX27UpwW
mOqYgmJk3R06k8exUL9SdFb+wauUm1HFtHdChvs2XvD53WbKR478Ykn2tZ9M
CGDXFG7MqZp4cSaaZwpBBTq5/msjso3MBgpwpJaw/0KMNJ8Cv+71FEbUG9DM
YwZQ4kbIh/Gt2ttgx01SYfsrd07eEuvBjqNRoSrf8GytdIHmn4Yud4izRq/D
eqadGDUe1mvT4vzzlIcaZY055W9umceRcmbNoCouQvF9qZby0eDhvuyme71z
YKqFD2gQ9J3maMU/s5TXLNRRge+k5c7iHlNuaRbtp1s+7h3UUH5zMOPuk2GR
GmSwAmhx4NURrr5xhvLU4ue/07ed96vBttcwj8MvLqja6tWUrw4Pdc8kXPZP
QyZllg7inZ1dWxqnKe8FKPZvOOUJn8YatkE9Rj5IUDb1qCh/PdJTahzcDBXY
cpzbCIlKydmqVRIPA9YlNe/tqVXSPAb4gpIyndFK4mPAe+sqi2/yFTSfAfIf
Bpy+SgXxMqL3XMPK3KcUNK8ROyLOFg1KpoifEaKagS77R1M0vwnmsKLLiuQp
4mkinpN4VM6E8s5v2zgHJ4mvmfjKKR8z+m1vDTe+LCfeZuIto7ws2Nee7ygp
kBF/C/GXUn4WFJbUyw5XSMkHK/kgoTytqFvQb3yuVUJ+WMkPCeVrQ8UTZ5da
xsTki418EVPeNjzIGlXUB4vpvNvhZ/2ZoPztCETitn8PTJBPdvJpnHg4sDFz
lJPcNU48HOTXOPFwYENsdeLbfhHxcJBvIuKxiP4Oz1Z7iYh4LJJ/IuKxiKZD
K0PDJ8eIh5N8HCMeTmTsSLhe/NIY+ekkP4XEwwWuciYvZ0RIPFzkq5B4uDAR
7I8q2SUkHm7yV0A83Jjvbr3yPE9APNzks4B4eCB71zl/dL+AeHjIbwHx8GAp
dffaawt84uEl3/nEw4uwQdnTF6v5xMNL/vOJhw9zwr4K7yo+8fDReeARDx/8
PS2nK/t4xOMOnQ8e/gdEkiPL
              "]]}}, {}}, InsetBox[
           RowBox[{"Unevaluated", "[", 
            TemplateBox[{"\"Normal\"","\"Triangle\"","\"Uniform\""},
             "PointLegend",
             DisplayFunction->(FormBox[
               StyleBox[
                StyleBox[
                 PaneBox[
                  TagBox[
                   GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                  ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                  "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
                False], TraditionalForm]& ),
             Editable->True,
             InterpretationFunction:>(RowBox[{"PointLegend", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                  RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "True", ",", "True"}], "}"}], 
                    "}"}]}], ",", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                  RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
                "]"}]& )], "]"}], Scaled[{0.99, 0.99}], ImageScaled[{1, 1}],
           BaseStyle->{FontSize -> Larger},
           FormatType->StandardForm]},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{
           FormBox["\"\[Sigma] of swarm\"", TraditionalForm], 
           FormBox["\"Max Torque\"", TraditionalForm]},
         AxesOrigin->{0, 0},
         DisplayFunction->Identity,
         Frame->{{False, False}, {False, False}},
         FrameLabel->{{None, None}, {None, None}},
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImageSize->Medium,
         Method->{},
         PlotLabel->FormBox[
          "\"Maximum possible torque on object pivoted at 0, length 1\"", 
           TraditionalForm],
         PlotRange->{{0, 1.}, {0, 0.9826794919243103}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}},
         Ticks->{Automatic, Automatic}],
        TraditionalForm],
       InterpretTemplate[Legended[
         Graphics[{{}, {{{}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              Line[CompressedData["
1:eJwtlAtMU2cUxxERC4gukzp1DMTNFXUmG6CbMPgTVxDsRASHm+BwDHW+Ikhm
AAfIhjEs2zTI3NrxEGGLyAABgxARBoJQaGsf0JZ3X1BKeQUpkYljbT0nubn5
7r3fOef//53vesSdjzhua2NjE2++LPdLLhV71alZeFgyVh1tP41X61yYOG2m
Ku8p1LldMR6sK4C48kqN64VJel+C/L0/eR5vmACPa4lS2O04xX62ZgL11u8r
UGb7bKPXGSPMC/OTKix+JD68WjhO++/D61Dol00+43BUFCf4Oz5AF+ulqKzI
AGs6bj3+zdyz/chaA7bGXGsxeTYgOOjNH09mj1E/jdjqcfdW5vIxlJh3K4r/
AdMhqzEuU48Ja71mJK1ULols9fDxtsRjZGyZC8m5Okr1W2E/XSdIXzOKxyZP
c4U2+Po4/XeGNwInaz/tkIU6q3Z6jiDCWrAD4XkHyhvqdKSXj/EgbouOo4Mm
1ZKwE/xrN0pvqrXUrwCaT3dvaErRItHSXoIQnJ2uXWEuWvJHhOx26Ru+VRrY
WEMMPS/mWHK4hvSIwetfilo+q0aI2lJAAt6pwAD5r2rSJ8EzH4bXpJ8a11ss
AqQ467Q5m61TwSrXWwan69lRyl9UsMpRyDBfnbyqxE9F+ruxLeRwOrtnGO6W
dtx6UOu+3p774TD50YNu1mLzroIhnDxhCTmM2abaVQ5D5I8C9g3+SyuTB2HJ
5lKhQOuCx+Ja4wD5pUS1h+76xrgBzFvSmZRIY936ym6wn/zrxYrey6/XR/cj
wDoAfVjYU5HlPtRHfvZhqIC9xi2+D9b2rvTDjhFRw5vsJX8HkBAQve9Sai+E
AksM4LMZduWfjr3k9yBu+DSpl/KVYFobHMILbeo7CT5K8n8IqvnsdYNCBazp
Yobh9N0XHTtOK4iHCl5ldYJQBwXpUUFYERu8oUxOfFRwYMTPZh2Qkz4VPGOX
vX9xvod4qfHJLqa9orCH9KoR6Vz8bg6nh/ipwcgtn8lZ6Cb9GuwfvpPQVtpN
PDVgJzbHrovpxqt0Giw78t7mpNe6ia8Wrn3lrfwnMvJHi0ctaQuMDBnx1sKJ
U+ayabeM/NIh5IO3GEtzUuKvQ3J1cOzNain5p8PIpr98FYlSmocRGP9w49R4
ScnPEQTm+gldTRKajxH8Hnk6y75eQv6Ooq/Iu/brdAnNyygM4rQtnkES8nsU
5cZB5xBnCZ138zlNeOlWJxeT/3qEa9cnnysS0zzpMfA9r/joOTHxGMM3tbKc
dF8x8RjDby/l3CcMMfEYw8fH9fLP7z0lHub/guzOtrCDT4mHAdLKy8+j50TE
w4DBu0v3Erki4mFAw+32+IxAEfEYBytv+NG3BiHxGEd6BWchKFdI8zmOoBS9
Sh0oJB5GPPwhs81vWkA8jGA17kwJLhQQDyP8/VfsM4ULiMcEfvYuXfSzExCP
CSS5Fbavru8iHhOIYZ4NizvfRTwmcZvFzN/O6iIek5h/0Pn2MVUn8ZjEBX5r
tYnXSTymcMIv7KImqpN4TOHQi8VZV5dO4jGFrkCmbZ6UTzymsdHEFEXl8InH
NP6+ePYpO5JPPKax6vl+/lEmn3jMmOvdf8JVduB/Gv0hXg==
               "]]}, {
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              Line[CompressedData["
1:eJwtkwtMk2cUhuskwEAzAjIUESZjgihRLlNn0FedCxs6boILlzlHKijqRKWO
YRSJohOmsmkioqIMAgIRGQIiKk4u2lJ6pxQoll4o0AsXp4gSxLX1nOTPn+/7
/++c877P+RYnHoja9RGDwWCaHvP76LyqEFXGKYRke2dyvxrDh/UllI8+O52Z
PooG92xDZEMhphZYXXZ5OELfS7DhC9+Nf1iNoOCKOcpxy71xgyTSiPuW/6tQ
czv0en+xAaaFaecfzDgEdxZN6el8LUaD39jabtfDTlacus7uHkof7Fg7U6eD
Jd2V+yjabzz6i6sOSxMuNE/4PITNbX//jSeHqZ8mxOauDf1xfAglptOy4n+x
zqci89bPQzBa6j1BY0jqORvZIIICzdEC10+W790RMUj1W8FyO5aVx9OiZcLH
VKENOT/UyE+EaWFv6ecZDj04GOMoGUCUpSAbM/Furd7xA6SXA+bH0oUlgxqo
M8wJ25F70y8vhaWhfjtwffXl6h02Ghw0t5fKw03n1hPMa2ryh4/ulWvO7QxS
g2EJIaa3h02vFqhIjxDXWt9dFe5T4VuVuYAITYerjA5zVaRPhOC9KUuVd5TI
azYLEIO9qW3bkhglLHIDJfg0Z/aBu2/7YZEjk8Cv3CXKPayf9HeicuvJoPIy
BTzM7bhLEec0a1m8tYL8kMIu5pjN8pTnSE4yRxesmU/P2Er6yB8ZIrgPjks3
9MGcbV6VaV39eM2hu3LyqxsX5bu3NPrK8dqcbqIbl77b9Op0aS/514NjXNbi
6iW9WG8ZgF4EhZWtmVvZQ372wjZrZyUrsAeW9rLl+C+5hfnkcTf524di1W8L
OOHd4HWYow929S0nkjQy8vs5SqPHj6ZlyOBsaVCBekHCSsE8GfmvwKrPPV2i
a7pgSZfQD6ZGZ6WO6iIeSmS8EC+LfS0lPUokMjTzr16TEh8lOJ5+VTnfSEmf
EtZNF13nvOgkXir48LoFVjc6Sa8Kzl5nfo0P7yR+KuTLPYYmZ3WSfjX+2qZw
aqmXEE81xvmR1mX7JfiQTg3Zvmne+SUS4qtBaOhCVpJKTP5o8Dyg5pVroZh4
a1BoGPEpSBCTXwPoTdS3id3ExH8Ahy9pt9YqROTfANLSB2at+FtE86CFX3GH
KjBZRH5q4ev/Mr/WT0TzocUy+88yiieE5K/pXu2afeRlk5DmZRDBp1yd8s8K
ye9BvAlgJGXHCOm+D2HypZddtaeQ/B/C7nDpl65qAc3TEDafXx/nlSUgHsP4
Pb3kzxRPAfEYxtf890972vjEYxhzehfV/bSXTzyGEeC0qk/vyCceOnilOaan
POQRDx2YWc1H+Mk84qFDUrjogI0zj3josXb55FXr1g7ioUeFDrxHaR00n3po
F91I9vDuIB4GdNkYY93lXOJhwPyFcKnK4xIPA9xyK/OaQ7jEw4jo4+ErIhhc
4mFEbX8df0tjO/Ewwt4h+14Fq514jCDuPasgMaCdeIzAOuNC7p5xDvEYgW99
0bu6OxziMYr8PTOP1qdyiMco8vR7xqf8OcRjFJFOm+zVr9jEYwyFEpnE0MAm
HmNQ5ryJczjOJh5jcDtc8jZkM5t4jENxfuz7XHs2/gd7WRvo
               "]]}, {
              Hue[0.1421359549995791, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              Line[CompressedData["
1:eJwtkwtQVGUYhsGBkcGmkQYDCTGMHFQ05ZZDwmuJQjMocommcStCwEpQwSIB
yyYlGskJIgtxIgQTUILoujTk4F5Y2BvsLsvCsqx732WvTomNpTtxjt8/c2bn
nLPn+7/vfZ4/tuR4ftmKgICA0uWL+a0PH8gy1p3DwdqQPdHVPjy6/wqdf63+
dKfFC25MgyuP24HVFWsnCou89P4qSq2xj1WNe9B+iVl94L6xOfdCmgfD7P8H
EDmb+GVfvxvLN8tPhnAs7wW1MMZN3/+CMfGeSFOzC6Ga7hPpob9jfWbOIf8K
F9hyl4ZR82dhR9T7TmzifMFbih+BIvV1Y6p9kfq5ic0/lsUVvLaIq8tfa7pH
8cmmY0eOSxxws/vdgq6r5npTugPJScziIyn6jKdn0E77C/D5xcbtglg7+Evx
yzsIYX28+aSh1YZVbD8iZHzW9tuDYBvy2Q3H8U3glfuRp6w07wR8dX27UpwW
mOqYgmJk3R06k8exUL9SdFb+wauUm1HFtHdChvs2XvD53WbKR478Ykn2tZ9M
CGDXFG7MqZp4cSaaZwpBBTq5/msjso3MBgpwpJaw/0KMNJ8Cv+71FEbUG9DM
YwZQ4kbIh/Gt2ttgx01SYfsrd07eEuvBjqNRoSrf8GytdIHmn4Yud4izRq/D
eqadGDUe1mvT4vzzlIcaZY055W9umceRcmbNoCouQvF9qZby0eDhvuyme71z
YKqFD2gQ9J3maMU/s5TXLNRRge+k5c7iHlNuaRbtp1s+7h3UUH5zMOPuk2GR
GmSwAmhx4NURrr5xhvLU4ue/07ed96vBttcwj8MvLqja6tWUrw4Pdc8kXPZP
QyZllg7inZ1dWxqnKe8FKPZvOOUJn8YatkE9Rj5IUDb1qCh/PdJTahzcDBXY
cpzbCIlKydmqVRIPA9YlNe/tqVXSPAb4gpIyndFK4mPAe+sqi2/yFTSfAfIf
Bpy+SgXxMqL3XMPK3KcUNK8ROyLOFg1KpoifEaKagS77R1M0vwnmsKLLiuQp
4mkinpN4VM6E8s5v2zgHJ4mvmfjKKR8z+m1vDTe+LCfeZuIto7ws2Nee7ygp
kBF/C/GXUn4WFJbUyw5XSMkHK/kgoTytqFvQb3yuVUJ+WMkPCeVrQ8UTZ5da
xsTki418EVPeNjzIGlXUB4vpvNvhZ/2ZoPztCETitn8PTJBPdvJpnHg4sDFz
lJPcNU48HOTXOPFwYENsdeLbfhHxcJBvIuKxiP4Oz1Z7iYh4LJJ/IuKxiKZD
K0PDJ8eIh5N8HCMeTmTsSLhe/NIY+ekkP4XEwwWuciYvZ0RIPFzkq5B4uDAR
7I8q2SUkHm7yV0A83Jjvbr3yPE9APNzks4B4eCB71zl/dL+AeHjIbwHx8GAp
dffaawt84uEl3/nEw4uwQdnTF6v5xMNL/vOJhw9zwr4K7yo+8fDReeARDx/8
PS2nK/t4xOMOnQ8e/gdEkiPL
               "]]}}}, {}}, {
          DisplayFunction -> Identity, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
           PlotRange -> {{0, 1.}, {0, 0.9826794919243103}}, DisplayFunction -> 
           Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {"\[Sigma] of swarm", "Max Torque"}, 
           AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
           Frame -> {{False, False}, {False, False}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
           PlotLabel -> 
           "Maximum possible torque on object pivoted at 0, length 1", 
           PlotRange -> {{0, 1.}, {0, 0.9826794919243103}}, PlotRangeClipping -> 
           True, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
         Placed[
          Unevaluated[
           Unevaluated[
            PointLegend[{
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]]}, {"Normal", "Triangle", "Uniform"}, 
             Joined -> {{True, True, True}}, LabelStyle -> {}, LegendLayout -> 
             "Column", 
             LegendMarkers -> {{False, Automatic}, {False, Automatic}, {
               False, Automatic}}]]], {Right, Top}, Identity]]& ],
       AutoDelete->True,
       Editable->True,
       SelectWithContents->False,
       Selectable->True],
      TraditionalForm], {576., -116.80842387373012`}, {
     Center, Center}, {360., 222.49223594996212`}]}, {}},
  ContentSelectable->True,
  ImagePadding->{{174.714236, 175.714236}, {1., 0.}},
  ImageSize->{780., 245.61684774746024`},
  PlotRange->{{186., 582.}, {-238.61684774746024`, 5.}},
  PlotRangePadding->Automatic]], "Output",
 CellChangeTimes->{3.684634471408965*^9, 3.6846356918113127`*^9, 
  3.684668018966415*^9, 3.684688648201022*^9}]
}, Open  ]],

Cell["\<\
Note :  the optimal \[Mu] for uniform distribution is any value between 1 - \
\[Sigma] \[Sqrt]3 and \[Sigma] \[Sqrt]3\
\>", "Text",
 CellChangeTimes->{{3.684542993377308*^9, 3.684543075369314*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pivotDrawing", "[", "\[Sigma]_", "]"}], ":=", 
  RowBox[{"Graphics", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"Brown", ",", "\[IndentingNewLine]", 
      RowBox[{"Rectangle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{
           RowBox[{"-", "1"}], "/", "10"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", "Blue", ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
      "Red", ",", 
      RowBox[{"Polygon", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{".75", ",", 
           RowBox[{"-", "4"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.25", ",", 
           RowBox[{"-", "4"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.25", ",", 
           RowBox[{"-", "3"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.75", ",", 
           RowBox[{"-", "3"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "/", "4"}], ",", 
           RowBox[{"-", "3"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{".75", ",", 
           RowBox[{"-", "3"}]}], "}"}]}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", "Black", ",", 
      RowBox[{"PointSize", "[", "Tiny", "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{
         RowBox[{"MultinormalDistribution", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"-", "5"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\[Sigma]", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "\[Sigma]"}], "}"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"10", "^", "3"}]}], "]"}], "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "8"}], ",", "2"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"AxesOrigin", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.676708174556182*^9, 3.676708189614781*^9}, {
  3.6767082290168657`*^9, 3.676708238918744*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"Brown", ",", "\[IndentingNewLine]", 
        RowBox[{"Rectangle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{
             RowBox[{"-", "1"}], "/", "10"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", "Blue", ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
        "Red", ",", 
        RowBox[{"Polygon", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{".75", ",", 
             RowBox[{"-", "4"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.25", ",", 
             RowBox[{"-", "4"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.25", ",", 
             RowBox[{"-", "3"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.75", ",", 
             RowBox[{"-", "3"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"-", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "/", "4"}], ",", 
             RowBox[{"-", "3"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{".75", ",", 
             RowBox[{"-", "3"}]}], "}"}]}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", "Black", ",", 
        RowBox[{"PointSize", "[", "Tiny", "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{
           RowBox[{"MultinormalDistribution", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"-", "5"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\[Sigma]", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "\[Sigma]"}], "}"}]}], "}"}]}], "]"}], ",", 
           
           RowBox[{"10", "^", "3"}]}], "]"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "8"}], ",", "2"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Sigma]", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "/", "10"}], ",", 
        RowBox[{"1", "/", "2"}], ",", "1", ",", "2"}], "}"}]}], "}"}]}], 
   "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.676470766623321*^9, 3.676471003872978*^9}, {
   3.676471085936934*^9, 3.67647111513273*^9}, 3.676471326988613*^9, 
   3.67647197537925*^9, {3.676708033904203*^9, 3.6767080386069403`*^9}, 
   3.67670816978053*^9},
 CellID->70294289],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{
     {RGBColor[0.6, 0.4, 0.2], 
      RectangleBox[NCache[{0, Rational[-1, 10]}, {0, -0.1}], 
       NCache[{1, Rational[1, 10]}, {1, 0.1}]]}, 
     {RGBColor[0, 0, 1], PointBox[{0, 0}]}, 
     {RGBColor[1, 0, 0], 
      PolygonBox[
       NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
         Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
         1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]]}, 
     {GrayLevel[0], PointSize[Tiny], PointBox[CompressedData["
1:eJwVmnc8lf8bxkWUUjjPc06SrJYkpSgUtyKlQQkVaShFScoIJTSsItEwSiQy
kuiLhnQnIcnKStl7nmUr/T6/v7zO6/Uc53k+93Vf1/tyKNicN7UVFBAQ6BES
EPj/T2OZzH+Hg7rhgYbNmy2VND4zyN13P4oPoqxtLBtNBg4Ih8x8UTEACU+f
uP4Mo9B135auRzmjUHo02qVDiIWLd+hYzA8dg0D+X22XzRQGtcaG6dj3wE/7
K3m6jjRmp7paHrbhg8a8NMteHRoxfHHI2q4RmLxVVKYnwsSmB7982172g+iw
QspvYQZu95dNZFADMPYilTPrMwOzfVxnB7T1wIJ8y4KAu5JoYxr4Qt5uAvp8
75RdWUPj1JqiqWe/J6HgtfxvhXM0umXaBU3u6odRhT2PDvFobAko9S6rGobq
OR/h2Uwad1EzlKX29MLcetXP138w8Nh5FS3Nfz1AXTqteyqBRqc/m9dGnBqE
0rIs/5ZmGrukZLmbSjnAj3kf5TFE45Cn7KOyvVVglbpa32gXherN71vFyfMp
NH0cnjzOROpx/KPV73nwcPGijV6Xafzv+d7AsNJO+BprrvTDl4kP3ohsMo/i
wIkkjziZNRQOtLy6kenMhZXwtWGDPRMLA7+HGr/lgpSOgHu5IY166homwQf5
UO2wbtHQLCYK1OTVv77KgTdjl1PVsmjc1xG74+hzDmi9+yKX2UTh+N4Lgt9/
cOH5tqhryXJMLPm+dlYYvwMsVoS+yaXIfKqHM+b+4kK34a6VBs9ofJGz3LXu
QR+8LBnd+/E3je5mEqF/kQuHjK72SORQ+HpMeV2MNQdEWFvBXJCJnpZ9c02U
h2AXY06SWiIT5ff9Somih2AwZ86rYhkGXot8/0FqwyhsuyCTtNaRwvXclx41
13hQGzE35W85CxnitOjAjwH4/KJC6PJbCewwvCMaJDAE1hcmX16IphDFb2pc
7uCC5+9/KyzeMdBuldidwdNsCOpYr39XnMbXHVb5ttI8SHKc6uL7kfmYLu7P
+8OG8VWO1wUlmZhcstpb5PUAXN26+qjsNIXaVL2reDAbvEu2i6K1JC7e/iSx
a9YQ+DXe/BZHnu+0qa/ui+Yh4HtdzywoY6CQa4dpmTAPDv36Hn75M4W6gcuv
VSm2QtpWx5QbzgxcXqy1Q6qHB4OFr8Kip2iMSzL+I1PYAzq3RVqqnJn45ceA
jkTbAKRcfr4m3p6BN/4tFLusxwGNh2MOM5QozJSaqfT+Gh/C7pgvPBZH436R
Tf312Ry44cFQuHGWhcb83gO9e7tho05MSsRuJsY23rBz+VcH6RqeqzsGyX7K
XTez7+VC+1HX5+0VTPRdoHpvy/N+WHrQ8X2FKxN3pKRusOloAd+7cYrHwynM
2HBz9/2JVuBOCZn12tCock/U4eb7n3BCn1UxFcFCPY+uHke9Bliz3fKaHrl+
3ufRq/uGOFCSPyDxpofCxXsKAioedMN/y67OrDGjsO+ARNnV4lEI92lv+7SO
wl0fhaI/ZXDh7bLnq71HKbwQ3M/YWsOFogPl8zK6KOSuvhIj5zYGb/cr1uAk
A4OSoi2Lz7fC7dpr90zI+RZlmLq7zOuCnU0i6568ZOIP87OsY+S8rO+eqE76
sQCle0SeJ8zog7sp1frzJRmocHL9vMBUHuwUzrWzGZBER8P+KFmxUUi0ENt6
VJvGsrp/n1l2bLBI9xgdL2NigFHkerXUHgjwczb5TDOx/oClgnrvJCgzh8Ks
hhko2BssTP33B+Qof7bcAxYqLepPOBk0CrtOi9RlkfPye/pMSdCxCUwOaKTW
z6Mw/5nAr8c3x4HeM6WyupvGHRmKt0ICuMCcsSt5zRMGHupa52TBGgY9/0/c
+cEURtmU5Z5XHITnppcKNW/TqKxW1Rc6NgwymS9nmU9Q2FXgvLD7QSesiQiP
T8tkYJKKXtmpznFYO2TWY5NG/OH11lTXyEHo667TLJxPo4CMkVnGIS68FO05
Vp5NoX/H15IDp4YgKMnPpHIfEzMV9v+99aoVYnx2pETWEz+8zVvrc28crgzt
yGd30ngsPaBlt1wjqEgWXP5UwsDb+2/I7vvVDT/e3usYz6UwNm3h0z/FPSDo
NrP6nBMLTW1njKdXjEJtx6YiZV0K0y//clP5yIYFxc8CLv2SxHebnjlOvRuG
Jp63ycF4CiO/KNzaUsaBxLqAVUfcmfhw08l6g6IesD/korlimPiTye+k3N0t
4PM2+/iepQz8vsHgoPMlDjT55f1TcWZhLe+wdnbEJER/u7M315qFLkpzFb8u
nYSXQh0390RI4ssEryWpb4Zh4erC6Is9NNbP6rzo/F8JKE+u2d2ZI4lSRZ+N
+YEj0HI5Zd6/SzTa+W8VDSH763rxuPEhVQoTlepnsAx5oJjcmpxuQKHzWjrH
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
+Mj5pp7igkre2Y3n1SiMfGoTfpT0T59P8slGkf//f6CpoMVF3aBU3b7mcDSN
3/aHjWayuiCcO2+WljeNKnt83qcuaAWF3I2WEmmEpwf3dx/aNwzD/0SfbzrM
xM2XniWdeT4G/qmrOOXk/ReuHM0pY43C7tDHEys2snC7xbafio5s6G9g/Fqh
QaOnde73hjvjIMtSyonfRWFFheNrfaKXvm+DX28Sfq5fe3jZj3ldsPTNGl/Z
3YQnlaYN38zkwz2/VmYGme/igh3XvM63gURAp9wPwjdRMg6TzfOHYVRa/II9
6ZN37ykkxP4aAr5vS0EY0Wti8uOV3YpsWJ7tMl1yk4UOo7IS4aMT0PJJp8PA
h4FJSfO+3qquBc3LlWezHWlUUqk0FpBvhYJ79kvsjtCou+72/kyfLhC42uL8
XIeJluPZn6Rfd4Ot0GZVX8InJuoRV5cu7IO74wmq4e8YaPFBwrDSiA8xXcN3
iki/M2oxMx9XGoIqox3nvTyZaGdT/bvbfAzWaByqzX1A8jB3Oqd1dh+kLbrd
9rybxoo1ByX5hd2QWti95Mk34o9nx/ae3jcA56RbO97EU7h8ba7m59IuSBGc
sXmUz8J3+o/Vs0S64ZTyolUhhNeL/Pbz2iSHQNSj7LO3JtHr30RaN4H0dakY
1qYu4j8tyaJf//XBiUWVahtIfmoLLRIa/K8dDMIUB+eQPqIaOW+Hav8wzF4U
JO6/mcbY+vYDO0o6QDsoSPsp8aeL3zmeYiUcCNfvVjhSRvzdiT+a8fUBFM4M
WbLxKLlfxdrQ6s9sUNjqP7gwk4Hzvluuf5PTCwmBwRGfV1KosqtlgV7uJFQ+
llUt72diSYKM8Ir1XHD97F0tRPI0NmY0vn8VH7bVm3r6mjDxQI1FwiN7Lizc
vLMxk/S/7No+TCH9nKFrQNXNYeGJ3pZrV59xwEUtTvPRXgrtnP9kaUjwwedj
wYm/GwnfOQvrzJPrgWatI6/ftpB5z1jaKi3eB98urbiW5ETh5JaWJoGoTmhc
ef1II+F5lxOZG9YyOqChqefTjK8Uzgg2il801gOfvBocx32ZOHvnXpWup6MQ
DXEWpz5J4iJug+07kofTP4292YSvgjLY0rP7ZugdGarRzDKisJBh9OIguxPk
PGONd+9lYuvH/WN1SzmQXXS1okGMQs3gjdMbnvNh99VnawLVmehSub00+s8A
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
y0ft
       "]]}},
    AxesOrigin->{0, 0},
    PlotRange->{{-1, 3}, {-8, 2}}], ",", 
   GraphicsBox[{
     {RGBColor[0.6, 0.4, 0.2], 
      RectangleBox[NCache[{0, Rational[-1, 10]}, {0, -0.1}], 
       NCache[{1, Rational[1, 10]}, {1, 0.1}]]}, 
     {RGBColor[0, 0, 1], PointBox[{0, 0}]}, 
     {RGBColor[1, 0, 0], 
      PolygonBox[
       NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
         Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
         1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]]}, 
     {GrayLevel[0], PointSize[Tiny], PointBox[CompressedData["
1:eJwVl2cglf8bxs2y4uxjhSRJQipUuE9CQmmKUCgj+SGplKaGkiKJosjIqBSS
iDo3iYjIysrI3vPY4//8X50XzvGM+3tf1+ezysHjgCMPFxdXDy8X1/8/Vxbc
Mj/XOADhkdMdRjIMPGxz7/iQfw98woIrpZZUvJqyn874NgAJJ17vd/Wi4JXn
6Zac8EEo2sA12dhFxYZH7tzU8TlIYtw+ebyJhps/eCw4begDu0uG1vzXqXha
sbcp8cQciFHllpmXkJGLVLmvS4ADEpJ6ArpnqCjx9d2tS0d5WMXKAj605zTc
lv7h5+3FAego3zGx55QwRqtec4rxGIHbyzTal4bJ6DFjG3bwey8oy1kdNtxL
RaqR2TzHcwgk9p5YJqwljlxmhXlPIr+xc2NDOr22knDCXvpUiH8LpPwd5I+R
I6HlBTHNL2pTAGMjG4Rj6WhiJWH8SJ+LlXslP9/DjY4y05XWje5crIGREfPV
TSRsOn/X8f7TamjQEc1+aERGva+766yt6qBhS6truhQFL9WqZ6iULkKKxOl3
FHsSlhx+2XZvzxAsaSU+lW8h4bHNlM76X6PQ7C/jOeVDwxL12isN49VgUmfQ
vHqchvvm1j7yu9QECVYSg4+LaWh24pykkEUnW2CsaGOoJx3Vjz8/8qCKmxW4
R/2Q7RM63o3zH9C4sAhM+5DsuHNUZL8IfTRdOgoWZ4+OCyhL4Gdqw2/n1+OQ
clOr/JYyMY9iY4fcTTPw3v/f8elTZJxPc1nU1qpkX3PKiL9cRMeOrW2bh9jD
YHaKOhGnLIoflnxjDeuGoMrkTLiGDAWL29PLXY0nQbBHZF/aYRG8PBlRsjul
hq3le91Q9SAZf7RXtbC0CtlVU5paf1fTUbsnmfPNLB/e7RTlurCDgXnHveJU
bEbAqyS2QvQKDYNzJo2PKhax6xzTNxY9kUC6jOhPd+8peD1kvzSpRUPaw1DR
9vU/IfHry/0Z4SQM0hLx/Xp5DJRUXc2VpemYMC0SfsenG7JOLmDicQlMFwkU
qz8xA3nh1LrKPXQ0e8YJXSO/CCRrLY1CLSbKudjlvm6dg+Pb1FdY5jEwdOjS
We+CaXgrNPtqeRIdOdMsfc+wcXjvu/364HJx1JtVOhvaxstK++D1fcGegdNO
mSVr/XhZVTvPr9y4QxTLLKaTb0otY1Vtd6mvWE/BpFcLZaynE/D64LnR3+4M
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
r4KtJY7Pgoj++B/MLOhy
       "]]}},
    AxesOrigin->{0, 0},
    PlotRange->{{-1, 3}, {-8, 2}}], ",", 
   GraphicsBox[{
     {RGBColor[0.6, 0.4, 0.2], 
      RectangleBox[NCache[{0, Rational[-1, 10]}, {0, -0.1}], 
       NCache[{1, Rational[1, 10]}, {1, 0.1}]]}, 
     {RGBColor[0, 0, 1], PointBox[{0, 0}]}, 
     {RGBColor[1, 0, 0], 
      PolygonBox[
       NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
         Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
         1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]]}, 
     {GrayLevel[0], PointSize[Tiny], PointBox[CompressedData["
1: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
       "]]}},
    AxesOrigin->{0, 0},
    PlotRange->{{-1, 3}, {-8, 2}}], ",", 
   GraphicsBox[{
     {RGBColor[0.6, 0.4, 0.2], 
      RectangleBox[NCache[{0, Rational[-1, 10]}, {0, -0.1}], 
       NCache[{1, Rational[1, 10]}, {1, 0.1}]]}, 
     {RGBColor[0, 0, 1], PointBox[{0, 0}]}, 
     {RGBColor[1, 0, 0], 
      PolygonBox[
       NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
         Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
         1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]]}, 
     {GrayLevel[0], PointSize[Tiny], PointBox[CompressedData["
1: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
AT4e7Owb819BrxggRq47q+IxjW778mqFBRDh34L42yAKK9z3O9jqt0ABavZW
QfHLS0hVpK10fpofjn864XXCbwnJbFcM0hcnAbb5wtADwioSkJvkTk2QBv1t
Oi+v+rFjwsuvcvY5ssPkjyWLi+IrqFtw+G2wrBisrh2ImqV1IPe13Cvnslbw
6oWjN0JvVKOpkhe7PUACnh4XHiNU8WAtGpa/WlQJ4CBjpphqy4NRsCs13zYo
UJBy99BVL1YsxZK/tmEfHbKtWeotxFmw4HBPniMVTD3O3P734GFWbDDV79RU
EBVWOUMYqfgGLp5RdyryoDio6vY+984BnL1YIGtTCR8Q7FokngWtoWRaCDny
rRQEqCbfXT9Tj3/aNUNYPEuFJZ/5PWcxNkxxRPRRijIdyBa27F3xnNiOd6F+
888FIDnpzMszrBlIZrk7+HIPO/hv4Y5w7hhBv6VlV6yfi8CjWuPv1VQ2LKHb
+cS0uwRkRdlT/y5MoD+JT0z3UshwwZJXzJptFhdZrrvyR4P5f5f+M/v8VvC+
beO0/mUK5Gq9ydMsIWBhe8t93sdJA/vXA2MX+IjYsk5ZR+p7FtC+W8G//JEV
4OZcF9sBGpDjZAPfVLNjat/ll3yvCMKhO2enSS8I2D6raVnGFAWmNl/siS5a
R8uPyIns9cLQ4jTb7V/bjH8mdCBCFhFYx+mSb0YIGM3naAPgRIgfsF8t7F7F
R+6kFBDkqDB/daFV+8sKHqz+ZmQ5mwhOfx78bJddxclVYQ9Nj9Bgw923iGA9
gWwqmj5mB4uAvPMlpdNSo7hvRAlxKEwEVPVuEYhHxxGvQO2N+NeC0KT4LIL2
m4jttLAq3l1OgZTSi3Re10UkedtX6UgrL+zep7BlKewv8pZ/pfZUlenP246q
fZJ6g27ciDllF8Lcf9GvskF0IlZ1tLawLoHpv8ut4u8//8QrFIhaa4s0SGdX
ONu1XQi7kMjJZjvBA6deXe3RoK6iUMuI257bheG6xuPbWuJTaO+RuzVySSIQ
Ecb17KZmPX61pMFD6Rk3yOVPKFYFbSBds9z5g+ZkCE4MT2ya+4FG2f4TPKwt
BnZPRs2UnTvRE4v7gTPRQvBjkqDNd3wVOWXsjk3UpILzeMAgt8QEylqXt3TV
YOpx/cvdMYcWkcLxPl2ucTIUWug6UVbncX7VXdtTJklQFe1M/bd7Cd0ZV/Y3
xkhgN8PQk8hZRI8frN+3SyHDJK+OEm/kD/yEmE7RSCUPlCrt2cvIWcB3V2Q4
VzbR4PXFrT8bM3iwlCNcZmPXqZAh/tr+xuc+vG6tadfrWhK8eP/x5bfLPJjO
TkvlURsaPOE03mA1JGOEC35OxepEOK9vK/6yvgg565Joud3C8MMgy7rWmRPz
oqu94HegQVL1LyXBzetIuaNVRXY7BeovKibzOPBjHdIjurE2JAiQGZoWsCnB
eb062SQiqCCfShI9xNKN8hbitTPTSNBDzHhz5epfVC9YOEFh+vchw4/tLkIE
TJ2Y90vlAw2qVAK39OkQMd4DQqvDucJgKp3qx/KkHQUqObtvDhCGyOij1DHK
ImKpymh6p8QOha48p2/en0XPejaVjwVTgVt5ViB48yxO3JZ1Qz5ZDM6ybI+v
c1vBaevDZ2f2CYKWsxB3gvccOnTMZ3TUSRDiizqcRJ83oWBPQqI0g8lHXjZ3
LL0m8csFa3GXDwkB4e2hrbK3ZxAIWVg5HiRD1v7kh0rTM0jln2pxsgARZCW+
ZrwmrqOJDD3UdIgEVCtZkyyJUeQf7ojq9/LDhbNfop6INaK9B5PjTrtRYTQx
LyhrPys29Cpl/7UXZOg9tObpl/AbMeZIjltvMOBypceeb7MzKNb8OJt1BwVO
nn7NIsO2jiSCpPoGb1GA2zz1yAU1Psxrh9ZKDdOf33TzblXy4cZM4v2Kbtzi
g7FnBXOjFv2o/Pi5+Bt3uSH9SffVH04LiOSjYK6pRAfXNml7z5gNtHNeskfQ
mwoL28/aP0jhw5JXRrhi1cWAN3UHh/q3cVw/s37osTcZjil7v1pbJ2C375Ro
3mHlBkVXNwMD1TXUPCriWOUlAM5HT1crDrBgVT6FeZxiImA6yH9dri4Nma1F
sa7n8IJ53ZOHGbv4sOyUc1eciNzQrvZghfq0DFmf3sHSsEqCvusJLxRa51A/
uf+hPYEA7R9Zn71LXsYDvk/WFHfSofDjHQ7JkQlUmqwyz0+UhOGbS02/fVqQ
6yFllSu/RGB8zu2O2mNBTPP0d4XfbNLQ5psT8cJqFHk1OYeT+kTAuuDCJLdl
D9Iix+usbCHCW79BOYHhOQQPy0aTD4hCTsV67kP9HpS1cXzihZIIZCQMTiUc
qsMno+ui8/5QIcz4+yjexYIZ39dVlUkiQQN10/LU+CTq3DkWeiqEBYoXutlW
VvpwYf1pcoEqHaaSlY7s2MSOhapWKPIPkuC8u+KhR4aTyNpWv3J1vzD0tj/j
8YhcRXb5C+keWeLAYyubbFrEgpVtHpdgVRCGr+N7D9/r7cZDG73iS11EwIXx
qfKqfTGKCntZtc2eyW9z7vp++9uQ4FOxFYNbkmAzo1FePssBmhbP9rXNE2Hn
omYVayA3pt/UlirTKADa6DvXKZ1FtPj5kYAymyCwM6J23RydwVe6gtmfKXND
74PpN9zPl/AUx2kL+SIqaGDveiXCFxGh3LOtabs43P3tfMekgQtbdAyWE1Dm
g6RLn/VL9g2ibMOb51UzmPsj0GUm/6QUhVit2Uk50yD3FYedoz8HZn/+gUAb
BwXCHLaICGizYCZLyLb0FAOkCLHbHLX5sQ8aW+/8prGDo3ohXa5mEjXH1U2K
ypPg2r5rNAHGGH5ldte+Az0UmGNf6k1QFMI+HOQ+YPqM6TdNe/fPJv3DObJd
Rtm5RSFT60rEVoVehJurfZOqEwaK+VszA45ZVDNFzqw2kASRk81dteOD+N2L
NrMXQgig8Ihz26uDK8ipkae/ppKZ9xee5l+S6EZGArfWXo+JAjbJsyvk1AqC
PWfnXjB44XBFpHFeeC/SPZPoXzXDAOGT1TXLjxaQLm32ys2PAhAwnzqt8A3H
qQKXFn8l0eGsROWmqvpx5HnjYH8+FxXGN34pjE43If8L1OSVYVEYfhk2/0ai
DD9KCLar3MQL7qOZhz9JtaA/YU653uUi8KtVidK6lwMUPxlxPL1Hhifnd35o
PjeLkhzY+XdqEYHR92T3Jc8pNHLmtUnAHRrsaR3S+re5BTnv0jlHyaZCp+Ox
8V2vR/HZfMlyzlIyFLw+WnkWhtGnl45PSXxC4L72tEGQdRFf199vKuchDX+z
BCvnAhfRmYYjMYiZj8sp5epGIS1IfrU6xFBfGKhTnYscJf1o6OhF0qvPJGiR
QS17pkuRcVP17hAPYcj454N5kheRvlrzjlJOMph+15QLrctDh5/tWLivQQL3
7tS2wahmhP0XckNhgunv6YFqXnuW0QXnkS2rHVTIVTP4kntxDCW+7jkWEiYK
j+5Z73doq0KvD5xIL07kgWqbwOZjr1eRr4nRB9UvAgDcJ4OGBTNw+HtDPG6a
Co+OCiQXew/h6fUP35duEoSzpzgjk2EGNf6t6Owj8AO28HwxRH0IaYgMqYYx
ny2tM3fLpU0iA7509s4mCswuRbFY63Fif3dan2fxXMePaPvYbnAOIs3YvEfW
7ylwQLDC7HZKD/o7UhPwoYEEDN9eOSMXDuz+Jnu5R9NMvx4PIUT9XEalbgq6
N1XIcLhMo7ApgAfzig7bQumjgY/Jdau7zxZwI+cKgSnE9E+PXNLhgEFc5iev
k95pcXCMTAvokRtGe/TfmZkLSQIVv9h0z2YReQydCzL7JAz/vf4mwYOPoeuO
+SnhUVQ4r8y1GHiOBdMeur61aJIHrl/q+u02xYnZk0byFA3E4O01o8yqbazY
+YWsQ/tSKTB6jN4z0DWMF1hEfaB10cG7lk9DXZKIXdA55Kd2mQhmttunr79u
QnKJMdK8FlR4cK+J59hLXoz9SNnFUEdJSBZsHon/1oxUy4J/u0rRgEXv5+53
SeuIcD/Vnb2cCoKBtsHhRzdQVtOXLBTJDw6JCqpzBW1IQNMwIv+LMJRHhyTJ
y7Fjx+dayoublnAXX/GyrcoFSF+w4/UNL3E40H46VtB1EkWUXeoryqRBuXb2
dd6NVaS9tYnyxZkfnm3aoWSfuoLEXggWvjwlBn8IES6nm1kwXtYz1tepIiAx
aKpz0+EvknFL++QhRIQtnTIKze5zaJs4B48QpzA8+d5adKmdgFni2fs3GOIg
+6dHMEF5EK2eaN0j3iUEncv6a+0TLJj7nQ9fapTZQTtKwctT5xcyKDfc5u1L
hoCb5f9KjL7jpc9I7SbCTJ6Vm9cvGx3EP5qKvHkszQG5p2bbRvQGUK9nWkqP
Ch24fWPX77vOI+Si+LluRQSeyAnvMuFdRNdSWTN8DxJh2bpvcxbTTw/tml6/
O0eBR28UnaZ/TuFlf/cVdcSRIH0lHTVUT6HkzLCqZ8VEEPhZGwM3ubDOhiUn
LJ4Cp6v2zcrnVOHjRMlSIzcRZn4p6dJ9yNTjBu5tF5IYcO+h7TutSHb4KXGd
xYuLAu0BJ/ft+zKJDEtHTTKniTDryxV56Xk3vvn3xd+m34XhWezRqiuMRTSS
FbnN5yE/yEt4XpjSYfInrekg7zUKmLz/03lWfgpp9NQVmYhQmbx54lUQXy+u
xZW4Zt5NA6OgU/w2VvO479eYSrIzk3cDRbafb13DlZ2uRUyXisBOKnvK89fM
fFwWdWVyggbEySdechGzqIckMZB+ngJb97yqe9DHj/k9MLjbvEsA+NW692f1
8GAbY1sUjr8lQTJLWaiydw/u+0XQhJkqwcC2fx4Z1OF56n/+cbhww2xi24OR
7HH0XO/Sw+cmrEzez+Gu55vCb86WGlo2CMOHN2HKNj2TyOvLo7OBHAzQPnVx
1Z3EhlX6hIaryjHAxXq+SIyUgxMUHT6iLk6I0o1cXdZuR6bppzWlnlFhU/OX
FbaIJTQm8ch57AYVCvKvuO/eV4YKn95SunCfAtLdHrYpN3/i7TlxjpyWYiC/
18jPRZSAeauXC45kckCbBP/QlX21iCPs8ezpHmHg0tMN2OW9gnol7l+7H0cH
8YMFbzVEWLGn5qwNlx2IYG6lEp2aMouPjwQ8/egoABobWwIv1tahh+YfNFMM
KaDJsWM5+zYFi5bzdCG40KH63JYOBTMeTHG0ePjIKgPYOO7eaFHmxfTC9Tdm
mH60Ki05XuzyC332OR/9iJk30vON7vxUb0bWry9f5mqhge773YfJl7mwdxcT
9v/gJEFMWbLiHLaCYrPtfmQz9bW41lZKtv43SkMjD5/T+CDt3p5Mqx9/cJ5w
s9+hFcJwoL6enyZUhutKcYY3xwjAC0HPHzPa6yj23ZXzjb9pcEyudJsWow99
3J9k8UCFyYv3Wxy2xjej0as6aU7momA0a2dvQJvE9RTOZTow92ufrKgwmem/
o7vDNDb/4YPBvSlHl+QH8LpTryIqmPP7wYhAHWFnwfazlZ76x80Ac5vXBkI3
uDGCyNGjkXNkiEnNfGbE1PtLu8QvZ3WxgOBvYvSfL72IPPtfYMxVCbjG67HP
umcIhT9czuvgocMsh6/2o6Ql3PDst+cz7xlg91UrVyp3Fs9Jx8sv1tMh+I/C
e3bXDtzxZtxfLgsycGwuzNSLmUbxk8NLoveIUBP/+RepawQt/3j84oASKzj4
THM43wXcXNFeAAKJYKyS5j490odqyRvfdZTFgfhgbk35+QRuJK0WL5vJDvp7
C3flmkwiouQGtaJEEOwT9L/dvzSFtK0ErF2bRWE+1Ptnxdw82re5zv3EGTro
Cczaf/zEBsvBYiq9f8kQMfqOo1achEUvsx1+2iIEkgT20zOGE3grte5rDKsg
9NdsCRcp6kCrDXu5r8cx/XmeuCWu9TvaJvBoMaiGBH/2d5vNi80hhZSKSuXb
DJC4ncA3e2cUvVZ6KHhJnQz1EzT88745XEBmtu9ZJhW0vkkn1b6dQJl7zakv
tohCkurSw7iAFYQ7Lt/QfE2CsnsaPk+I08hUaIr1+BlucDCb6Dbrz0P97/l3
v2ln+jeWfPdQ3RoSst3u+OAkGRZNx16YDADeXps9P7JGAvF8O04JNIWyh+ff
8hwRhmM1UqHzm+dRlOXL3v5LZGji2fzV5PsA6hbnEdueToPZLPEXheur+Dtb
16pIE1GI0SYGuqsSsC0K6kdcHotDm7RMYd3YDBLY9Gkm6icDJltyPbOLivA6
zkOkf67CIJ04enTVrxlv0lXhj5gRAs712KnSZ3wYt7ASyYM5v69+XhDWUptF
pa7esze3S0Onrd3mjEJOTLT6fBPhBQm49bvn1huJ2Nmrb/M2vkhDdOf1JfJ7
Dqw/hSfUqkoEas2PvfzvdScqEBM2+itDgUmHxz2/dufhk5gRt6ODBHhdbo8o
UyNgzl4mTxb4qWC6EmdEkXyPri6rHuz6JwJBc36N0btHUKb3q6w+AgcMKysx
cu/PID3f9SO+slT4Hlb+6MjALLJqLvXqY/bTw157rcuNC9v5hS5OPy4KVwna
KZuYeZ/dY4f/fTdR8NKKOCWZzoYdbz3Df+MkA9Kdb4kfJ7FgU4dly/yfMEDy
JF/0EZFZxEns7kkTEga4sjzgNheMIt+ezeI5Q4Gmh1HSG7YLiPxefEglkJkP
nxFPPMBmkcPtw/V6D+mAOZ97RfXjxIS7BRiUpxTwCNLUWK4bRMargQ3evHTw
upKpIPixDBff9C96KWsRP/x4l2tR6QoaDH5JWQ/ih3TJINIyP/M8dkJmaJQT
+u70e7ALLiEnrke/qm9yAPeD5iIOmyqkemQhdOYYHYzeIlViay+q+itp+neA
BMaiUeu4bTvOE2nwoKuXFeLSBmSygBtzf/NgV7G4KPz4VuA+ldiDXtNuv7zc
x+z/j1s77R6O4XXH3VaCa/hA8Zp8RC8z7/iHph3sfi0EJxImaKukcdTg9UDg
2gERwD4ePBPwvhIvlF5lTeInwer8kO9/NUN4hXd/Y/YYBZxEebd43GjHl6MX
vFEYHxifUlNOONOKzOmymh1/BUCSJVPe+2UvStszTFqJoIDzRIP4e9sxdEbj
nFJNMgUqJwd1ukP/4OEN+3HRKGa9SVpW/aN/UHr/r7RXzPfrZJWYEING0Re2
nkUrLmHwEno1Ibgxh8qvFT4xH6FAt4vQ8pgCjlsMw27dP0we8nY/6p3QiRzX
mtSyojnhcNPl1481WbHk6IYY2TQR2BOCd+XX/UZnB0porEPM+onY8VhpbaDN
Odd5xrdRgGxsmjMfwo7RN57X5XDTIIOQ9lt5nAXL73y5M3maBoTgFLuL30bx
B2u/WffS5vGvD+5KsV6fQIw7W3YSmDxJ/WuEumxZMRey3lA2c/5eqff4f+bu
RRuTXzW4r4vAAZmIiw3GE/iylcLglhQx2KtvWxsryYq5+zy5eiZaHEKrPZd7
+38g5QcPtFgimHnj/cL9EOEOJLvRx5O1RQDYKzzVGprW0YtvnrkzpVTwL/2g
8IbIiYVeCIpaZ+5T5X/phLi/nFh+gXeCDJ8wpJhnB+fgfNhQ0Aru00oDaW09
q1C/CLQqfHFBldnPu/47os17x1AGtfTHnt+zOGFi37sap3pcQD07XneWCjuI
emVjV/6hD0JPH780JQPhceb9J2khuFZU16EnW+mwnPR1fbvoOtJ9fIVrhIsO
htImC/8utKHx3N/fkx8yeZxfRceebwHtX0unrbZSoPbHyd5v+z/hOsT9ngsE
EQhrP5vwa2UD1fNcIXr8EYbpk95vd7fxYNJufrTOK+IwfsBKOb12Cq1GuEU7
lPOD4/k+iTv7ZlDXz5chPZ/EoKrROVKOcxmxzyVaaX0UgQvBieoiidzYstZB
9ntkDsgMOTRdajOI9HI8HyY5USFvvwX3rrZJdMFmKOuwuQScTDTr5zk9gIhe
8ptEOfnh0fmiQXaTVRTe2BG/vZAC1sQ0fkdqL+5Q2dkeJCUA5Oh4HwfpIVwJ
zkYPZFAAy4uPLg/9icLddKNvZApB02ht/xGFFaT09sp21yescNSB/flJbAPZ
fI0N55YlgYHSrdZzZQtod3+0gYE9GcBXdiIwIg7Pk6JbZOXTwM7Q4qmtMC9G
9JcSsK8Uh+D1rxeH0ovxMAn/czoFzDzmoLA0Nb2IWJftT/8hiUDic/pyQssA
8rvd0qBVQ4T37Dl9y0YCWO1ayEBcmBBwD0vUB2oUIs5tV9oqC3ihUqhQTylm
FR1/PLJl0JoKGitW5Ry3p5GrvcuN3ZuE4An9aH5W+gIyztO1VN4mDjWGB/I0
OnqQ8uPgI1G3xaH8lTk+mCWAfXExBVZmv9+5GR/j2jWDXmw9Y+hB44cDKgyx
Qa06fHFr8X6bW4Jwt3WhcMydFzN5/+qjb64IWLS05NXWzyE9KezCDyshiFnu
sPp0Yw09j79z0dqdBLw6QSypTJ7tyIp4mr1KBb9KHwP13cM41b8y/HS6CGjr
JKbEXevGt/1627RME4HBozzXI9u5MJmV7c87/CgQeMstVSdMEHPN4v8Xd1EU
9iuP3xtLmkNsW9+9/5rB5OkxsYYnN8bx1fJNxqo4Bapql1j0LJbQbtpSZ8hN
QaAmrtWU6XBgu7ZfDd/1mAMGFRav1M314Kgqx9X1K3O/HKY+VnWXIKOnc6ob
MvygH2gquFbAhv07+N5wooSp/9qEsciIRWRZR9hkzM4F501+JU9vn8QfSVcq
ko4zwD8w60TGjXV0mfeveDhdHHbdul+fypyHg0TCxZRkYeB8vlP95xN2LEHT
8/aPPH5IeDXNmbjAhX19dlt4z3ciFBS0j2Y4LOJ6exVe/umWgHKzYxu/9nFD
5grlWfoHEUj7GmL3k28G1VwPayee4gHVKH/vpkvTKEPHvHUpjwzztrlvD9sP
4w433nrkNguDry2fwqLBHC6a5WxQacjUhxsHbwjUzKOnY5I853koUH3A23/P
9Wa8x1HZ028XCbbV2Z5JbRXESvcpvRdEItBwKDRtjpMbvs4KN9oMkqHiPzRJ
jmfDGvr3hF0wlYIwpI1JxnNiTTVeVHlNKmQcH0KONfno0VfvOc4XonDYvCDM
QosVE7vwoFc2gg6Tj2NcMl614pcKp+58WhaGlwu8cV0ei0hhtd6nKpkBi3ya
Sv8ljuBe05MDaUfncR6VcIN4aw7sZ1H0DJHZL4LnKf7DmRU4t7SKSNhNCry8
ZSHiYrWKvoxJcLlSSbCnVcVNYVs/2ivTtEusVgSmP8b9ud22huyoVa9xfyrU
fFb/ouA6gxcUWnk7m5Hh4j3Ky3kOdmy3+vmAlTgGUD9T3YwafyOvxmquI3eF
QeStcG/8Xg6szlQ2sVadBKE7eUpSdLvxiPevtnNvEYeTq1aP7E734d8JKaxO
Kky9eLk0cfnrJ5Rr8+pz5hYqXJ20kS7NZcFGDa7ZpOov45bB735E7i/CE3TX
U+VpdDCw7rR56VOCftU1E255EOHao2i3jfVFxLL198cxTTLkHCEXEN1nkGqJ
+m0nDioISs24XVYmYD5xpaVPtzOgfD7wz9+IFtT53KTAn0gHctqTxJdWnWje
z6b6NzsV6H3R4skRWchpj+sl20NCYFpRtX/CNQNfHfxj00NgAPfXnfWcvgRM
4xWraeqICICe/9eMimj89hffwHfjIqC2X/cMfwsL5vzCUe88M2/FFh9pttix
imJHo2PeZvFD2KadxOSvKygr5+PlQiZv3vEPLHDQ58ZYLAmq7QWCIBcUftUn
bhJVJc3EHLbnhdHNP5XuukzhD7fN5N/Lp0PvYL4Yhc7Ut8sJgVYD0vCwiSuk
98Q80vBueM/2igZsIeKGY5ajSFrFgbGJye/EyISJeYkaJHQ5WPvLiggYFBew
T3/+h/vy3xBcLRCB8MhzHRY/l1DVk7z7pwzpYHmduFCxVo9Wb80+//mEC5J/
reRIwSqi1TuUSK7xQtN4ern3jmWU1L4YMWtLggs6b0SOuLegDoyL6vqADKvd
QRvN7zdwmRNzFJqKCMRzBYwk0QZQZXbRNmUJHjhQqf5h60FWLKRJ8FyiMhVO
b0zq2mguoasJXHzC3aIQccahv2R2Aze81B/4RlwMap3WfO/sX0JJM0EHfjaQ
Iaz7wNUb7X9RefnFWzUzZFjW+vLcRKsP0a78ZKkliUPO5R7Xi5MzKCtmzO5U
MA1YkzwWs7b1IYPTbjapTN4y7spuUEquRUJ0x8cN5hTYGR9f5PZtCs/K71ld
OrCBG6crHbMc6MGJMrfVPZj3OaDw+P5z3hLcSfhH81CUOFimCHiGb59E8uoe
suc4mTxy/aaXdTngZy5OfL7CzMOmmzX45t58QzarTttDX3OBJvfHXe0X55G7
3XWTTUpksC7e4W7AUotyfmTu5rFmwPGNerGEgTU0vFO+N3uUDvElV91uvRnC
LU19DgrYEoELo21M20+jtjq/9LybNHjULfj7K08XzuLpz3avVwwyvce3pXgS
sON9fSLfasmQSj4hL/9oGh38PHdUJooXqiuK//tbtYos/lENt6+wAa8lPS3y
5zqS/Jap/uunMHj/UNYyVN9AtFKvIwbcFCitcJdrQoKYvNQxe7O7ROBfa1h0
6u9Czgj/V/lDHCaVLt9/uncOnfmlf3mSyYcx51HZH2ZezLT9ueGlSQTdmD/B
AnKsmFnlEMmpnQQRRklXOq/xYj9ulLIEB/EBz+/XSenaBGz9e+kp7xYxsNOz
6iTQZ9Bi4e+uV+4M4EwKX3WRY8Ec/jue0nhNEO6bZOktFc6iX9fNrsxKUGFy
2/GPkweLkP+B5eipYlGYLB2fs/erxNuaDvj2WkuBGMHtwENJNgwtZZCpeWKg
efsQ3e0sFXuDeceeFSTDzN7XpOsx3JhiqwHuM8AH/eL76f4Pe1DzyYgqwjsa
ZO+dM/8dtI6Ejx6NmzpKAbW/0rlWl1kwthPfA6x3ikFOWi31095Z/A7Lk75E
pr6Nks0qrtxYRuutT0NMmfc1Zkv78C6HhKne435+/DQNXARapZv82LGdA1re
y/fJkGx2VJd6bQGdGCdG0u8RYYK9Jy8qfgaZqVi9ctmQAFONtONxoSxYun+2
1FqTILStWlc/dp9A+pwlgWvOJBA0MbKZ9uDByij+WXKfiXBXs1GkxAOQxd8g
MVVPYbCeF1d7W7GAiijnPrsmCsMOSpnKVj12zFW0SeYOkzcnny533DGeRXlm
GZZKXFLwMXmT47X6BVS18RVSPpGh4O2OdKOzVah3KSnE4z9BMBftuMzbzYud
5N35Nr9HHBId9CcMc9rRwppLwZ06bti6FtGstGcScW9RftDpSoSctc2KQ4Js
mN742/Ff40Jgd//1AO8jbuyJs3fzoXNESPF119/bz4ZtG/N9pBwnDGa8JyNK
RwiY/NUPWoqLfPDXQa3WypEN01R984AjkQOOyKdcSbrIjT072J93KIrI5KnE
t71H1xG7Cr5qZiYC/YVP586dZ8e2m4wa6TDzpsGlkrHeKhLWfvJIVFcUDUzv
ndL3ySjBN88WxQa68YNYcWDZ90VuTPeapK3MIRrENb/S62udROvF3/y6mfxt
SnJfkfnvM95rdmRo3lUQ3BVkPIlDvTjnfSHlqts08DXVlHqXwIZpGClqKXmK
gepkt/bwVBk+0HI6OW5QArgPcsqtOrNhobaDf9z2EcHJ9ghnyhEOLODJ9W8J
vqKgHP75ckbaPN7/X9DITxFpINz4ILEytYbezB9tVhqhgtqXV6I+sRygNlfI
4eDHDwVmaqWH5frRy8JG/lUJZh48oTU0lL+OCDpVak9pAkAsUo/cK8KJEWGJ
9LiFCoQ7PH0Njk14m5r44x5fQWjfOeMhpUfAYjMeiHWRBeDy5Xw5vnpOrBWf
fMoFXGD8WQrTCeTEsvz8/NrEyOB4iy2fIM8G3STFl7efcoL1+dqrn3gmcX4B
XXO2JjEwCkpcD767gkLdhYubHlNAr6x/q3fDPMrhagOe7zwweJcinau0jmQd
Hnw6sU8EClJVqhx/s2BP771VUNMVhW75pHt9h2eRxhuJ8MI8Ejg/e94a5rSI
69w1SaIOUCH3d5JswVg+gmc5HMIUZn1DLP9cf7KKjlyaXAIuMtghnag0zQFk
bx6YlsLUq3JVtQMO5QPId1z1rthvMoRbfpX9KjyD3CRtg+8x6zlYHuh+NYqA
vZVyuzhiLgTI+dCGMXEV7ZKVE1EPoUBbYjQ9RWUJCfJuN5uWoUDSdqtDd9JH
0Pc9w+Z75ulA2nOaqOk9jW6/ibR8e0oKblablH3pImA7cCdCfAkNVOe8OZHq
OhrtbEwTPUQH4+f8jk6xdXh/y+6zhQ9I8MVb2n5piAXLdcn9w8UmAaJV9i9z
ODgwayOpQiEuElxcazabciVgF0OCG++/IoJdKo+kew0LNi3zVexOEiu4LCZq
XtRgwQwEv4u4MHmMmu7M8XsTB5Zsf+elDtOP29neXPGyWEX6LXJGvcpSEKFo
/7bZfg73V9oa4ehOgeN6I37KAwR4I5wxPpJCAU3738+6ltmw73dfZhoqUKBB
4urRhOck7ND8lY4tAVQoFFzbt/PiBnL02Xvy8hEiKFu9oSZIcGCyPNkSonYk
OGx9skFMkxVr+h6413ea6Q+6kVtWb7SgsJzBQd9RFmg42OCxVDKMxK+p7s5Y
pUAz50f/4r4hRDvaGv72CnN/iL/CdV8toYCu/JtLctzwof/lsoruAmKHmmfG
uZwQSSx5tE+OE/tRPHP8sQwXcBSkbbt7ah7dWtncdt6NCFSvzP53O+bQV6fb
1nvESPCfFb/eO6m/SO3PWMPgKREgrLNjxq9C8Kb/Pp2mr4hBhqzFruageHSw
dXNsSTUJak3EP9TN/0UHGO9Y3tWJQ37zV7as++Oo4XPZgm0YU2+0HuVSYkeQ
otB1CHERAixV7du40yd8LcGfP20vBU6VSuwqH+9HG9njn7uPUUGet1L3qf8w
GhFaUpQ7Rwf/jyUyCrKzSOp7b+PLm3SolG202hf0F6lKKRR9lRaF+rotLT62
48hvt8d9C6a/jKW6wAdTLsxFuWWoJkwAVlWram4RBbDcjhNf3T6Lg+MWixPz
f9kxySQTtvgtdPAyMVSvpGwgu1hSx3N1Cpxue3jzzBt2LGNwwc5Hmw9C1y1E
Nfe04S8UDceOfmMA3aon5oXdFxTiuqNbaFIQRim/Xm/Z0YPm40tdbz8hQ9OD
PlNhbB69Vik5/WhRFMT7/rGYXGOBE24XXn1m5p0brSMTwz4smORLC9OZShoY
l5WpdsX+QKdd7VutTLlB69WsWLDxKIJWZT2CoQQUzm8JeGMxisKeyRkXOVOh
PHozuz5jEcXRT516l0SFZ+9K+ZZ3/EPWIMejHkkFzCyCznG8Fn9lKFoX5UUE
QlcALqnZgVh6qieD5kXgRw23eU3kEnp9pPnsEX9mHrYQ3H6hYxAdUG2X/bsm
Du6ud7jFplvxzvuBJ9mPiEJe3N/vK1pTaMBOrvFoEQXsIMDf/ikLdj+t+Z+7
oQj8Jf5q7PfixMaJD7+tzAuBarIdwT9qHXWGbBotmaWCR/zNY535o0h1+MSx
zfeY3xeXptV+OBy/uCGp8OUz089Gtp8PesqNOdXXXdw3wgkNStd5pzXmkWfT
pXvprUQYPgc6Mi/ZsM7+v5jfQzoc/CfULnLpH0r1mc+7rCoE4lr7unePEbF3
l0tGhq9Iw5nGBp2SSTZM4puaYd59MShcCIwukRhHtXuGEp/p00CvteejZvMy
2vzicTQ/izT4Hry3IbS9DZ3cym43HCoMDka2AselO/F6jhOxhZYUcB+pGvo1
uITP1LcZto8wedkk3Bm/vohEHxfIL/ESISnw3tfHW6aQFv3Pa6F2Hrh5sLFl
n9QyolXrfPO7yQ/SV/nMLRjc2NLlNt8LB0mgKSd/gD25CV8xcF57pE0EDfJg
TDujG/9IVX1pGU8HdsvHDxPOzSMfjYF3IqkMGIrgcf70rhedqAhLe6UlClt8
M//1qMwgib5gveg6YRg4U+juHcEKzRcmn/xg8qyB4UHPn2OcGGv50cOxDxmg
2cuSGZPehxSt2hTdqqRAlfvLtJsDB6YilJblVUSHbsfP+8+cnEfsJheTjlgK
Q841445tI7OIMZpFOBhEhdAxy6UD6bVoSHt6or+QDhGf8p/bZs6iGfb8u8/2
8oBl0Nu1juJynB79Il1AWAjkFW4qeO5oxcv/tGVn/BQA3xMaO5Y0p9BjeYY7
6qPApoefpariWSCRwc7W+4kHREIaor58nEBvnfMa6pIYEIvOpbpIN6Gqs/p6
NXQJaNRxKb/axoeVfroZrMHMi4WtOs9lYAg5eMN4gDgJhksyPr1QW8El04IH
q6XJYCnZWB0tx4HtOLRRo+koCqFp+fckFltx3bhLxbu3UqHtoP6eAAYbVnes
+sR1Jq94yQiGmsSU4Of09wf4HGX256oIUSG2ET+MJlKNk4VhMtBU98SXVtxr
18iFR+/IkIC92aAa/kZ+BwL/kQ0FgfvWAcuKqgLkMKxRHMFLhQiitc0F0S5k
cNZjW8MpLohOsCMjsyl0c/qubJ0eHZb/PdFSXRxHfwIeC46eJIMZKfUnP/s6
8mnxTRtqFgfjNRPGUG4V2vbxO0vYawrYtm/2oEhyYd5uDNG7wcz96b7wJTaN
FWuWsipa6BCGeQ+7py1Oi8hBwuNJdawwuOyQfbZp8R2K0Q6cPzfDDmXrJmkW
nzmwVW1V71u+IqAwXXDZnelXt69W+U7c5IGD/v7dzaaTqPPKsfTJchqwB0re
RmnNeMm+IfvgC0JAPIBPJX5bRbptfG6myhwAh2+w79zehQp0Kuv2Ekhw4lx9
coU/K2b6S/v6QDUd1p+PapQ/m0YbxppLX1zIsLi5n0Votgx/O9XrnjItDD/l
3n7kiRxBvHcvirIhBhCUSW8v8f7EG96QxPYRGRCW+ON06VglsmzYP1v9lgTE
Us+RvbnDOOPxjryuFgpcklh888eSB1N4EOHZoM0D7v+WstMaSpAFPcXodbgI
kEdejW2brUfnzUySjE+Twf14TBd70RAiVykJ+owJg/mt3de0qezYMX7+NIds
VljbqM2ythpAizxJfw9dkoaI7j3sWVs3EFXDfmZBUQqEbm+/WCfKhjVbCAhy
VQiAyvIuyjMhVqz/7H0JSyVRsIi+OhMXwIsJs6PczONk2C40dvSE1QZi2TJe
9M2VAepln6Mb+Zl+1RkrvalDGgJqLII6TpCwcDOTM40PRIHwb6ml7WMWfmLn
DNfNb0Rw+FY39+3pKIqX7Hg6ws4N/KV4bXPkMK44JO29BVFhxk3gTrw8K6bS
nYAkAoRhC3sD2H1m8uPQXRNqOAN2Kkb+E6gcwtfm9ya5SkvA8ObMrkHlftzF
ritZQI0BXrv/LPMHtSLJ1R72FhkyfHZRvItnz6ELRWdOBCqIQG4LT+9NxyJ8
+HT76zg2Msh7gb3ppiac7n7WN3eHFJjauP/ojeDC7pRGTYg0kqHqs3B+KPN9
EpdYxN2Z8+PHZwjrIjxYbvVftz8UCljyyypctstGjNgnnYH76LBm0xp1Pp8f
26a4PHFMiAJeH0xdFoT4sP3ux871GFNhymbLfr593Fhtmr5WkiYDumUjKy5f
60YVRjYBxb5isEqP1onm/IOfZaHszGR+b8yS46yOzAw65tH1+LixMCh/DpO4
XD6Hl6Xp/P1KJ8OzZtcrRh0LeCnt3hW2SBrU7mZbZI8fQtykxzdd0kSgJF6Z
39F6BpmIm/HcvscAIrufhOFvHHH9iWRLCKBDS9T41LelT4iU0nYtzp0TCIdO
z0d9DUSmCUtcJ2gUyLzeJh7XNY9qF16oyBRTIV/OVcX93BS6359zOqxJCNKz
np7ev3UEZSX4RWZfI4Kev/FTgy/cWBh1reT/eX52cpNAq2cJ+rOQ5me5LApN
WS+P3F8eRVY7W8fJ+2hQr/+h1s6fBWtun+29s40C1XyDDoczupGBrum09pQE
qHLyc2YKp6FqryuRKgLM+zhutmhKGEVF2vksjAQiJEYSiefOsWH397jUhJ6m
wKqBe5J80ig+5d6+OqBLhDL5KnNVcW6spOW5YHI8FTSvp+ft1GaDfIf4oopm
KrTsZfdrYBakU0P6A20bFWJK3/WlG1Cwfb5ejtuvk8CSobNyXIAT46g2lyGa
iwLP6WPdkuacGNk2b3bbQz5gZws70bh7Br/3YbdfpTwNOi9wG6eqjyJ1K033
fTmiML0Zq+awncatpDPz/Jl83VIzMbWLBOi+Pgu5bxM/EKycvwzFlONv2cNN
LXfSIDLNbRe3DztmYa61/9wFBvjmk9ftzw/j9RGpD3Xb6UAk3d8yorCIZF4e
i/n2kjm/jmZ7ufw2UEbTyN2zJSQItc5+HoF/xnOK9hYVB5Igyr3pxu+YcbTY
/JHLfYUOLn9POiTkjOA1UliBCjNP6XzZ39d6chrNXr6Uv3ONDhmOU/oKrVNI
ge2VRiuzHlH7iu2sXqwjo6eahxi7aKC57SGbe2QTvvkn7WaVvCRMb1i0dPbz
YO4GvpS2TDpImzv6/jzPgu3f0DcUkRQGuf3p73l6ebG/x1wzozeRgRjsJE+z
L8Wri7rSamy4QOeO4I+GxzOowk10840GMhCe3HmUphKDD9zI2v7pOw3Sl+U4
nuUvohChImPTWAocqgjR41Dnw3j9BpQWHAVBcneOlbztMrIb2nYiUlkcytXP
3LQoYcGsn9Vc/6hEg2Syq7ZY5yQq3PNMlDTP1ButP0LPTXrw1ICZPDqRAoTz
7qFmCi9wgXHJSjUbMpT+4SK5c7JjF+NMr6V8IIFgLmnf8ATzvOrg4G8PGjho
VE8WBy4jny4vvnshYlA7FP/B6eg40m6f+ayTKA4zO8nFGe0zaDJg6Jz3Lea+
MmRrsG/N+PeSxscD8WJAOFh58pTQNzxYqefI5ggauJ91cj+HzeA3ejLqv12n
gvROuV6Xe+yYCmkvWgrig+885Uc65nix41daX+kuU2Hyd0aX0Lt89GXW88Xm
e8LQHXIgo14lC+/LfRmQKCsCh9kVjF/qrOA8/Nh0dwoD9PU1zh9sYMUK/8vv
50ymQGcsTelAfh9es8i5W3YXHZyFb51R85tB1W4vdj6pEYYDI/bDzXvbkVOu
3X/p58ngpjA10dG2ghpET/GIchNh0+a6TQVaM8jS5mbAyVYGsI5L0E/kzOIF
Qm/IusNUOBmeGkQZ4MasPWYeJgit4NLuvmeOfSNho8uJV2InyVDfnWDiWd2N
DH9cKzvWQILbjqyy5rZsmKNub/8nRIG40yJCtnpLKDfX0N0rnwFGa4oF8fm9
6JlZ3qaPe0UhPEgi5xR5EmUkouocnXV8a+KHQ26mBBA3KjFK+i0A1Ec3divJ
kbEKvGSC+ywZ/FdW5iLl+pBKjNrjnI8kSIu7vW2auw938+d72VgrDbV7H+bw
UjrwWof5x/suCEP4w0+lNj2zSM9R96SAAjs4Vec73T27iDzuKAd1N7DCcq6C
bozSLMrqm9+yWUkcBP/rMnRM30Cd8/I/QkLIEP0fX0yUwhoa9Ij2klKgglp4
ZiirzDD+/ZgQL4FKhb9Od95VaC4jL69uE7kWMXheeR75ScyhTxFVpr8kKVDO
YX1L2Y0Xqjsv/Q33ocGmtLhG628byOd6+cprEzoUbN13NR3N4V7bsxj7nUSA
Fp8TfsVoFO2t9NLS9WJAr+3PVIGkYeQx0DMz9Y4CpXmafNe296D1uFOz4scp
wJYWHncmZRINVL1LTn9EgckDFi0dOkKYYJj4oSQ9CtwaV2WTPNaL9P9L1VGu
5YWIWYsv5aw/cNVqV995FQYolJriMVws2NPCTwMzLykQTilVZ3Pmxf776LIA
S6Lg9zMpyWxiFV8pbEy2LhYGLGnboF5PBp48NO3zc0UCFD90C1zwmWE6/cpY
/FYmb+/xDp7nbEF6pxcuyv9l6qOJwt64VS5M/859Rz8m/zEMdr2518CCUS9l
MljM+GDHkxpGsTsfJpbV8V8LztRPoZnbj5jzFuwzcvN6DQNabF572FnXIYH6
GsrIGSIE25wUMhiYQDtqlLOPbyMDutvfdGNwBN3affLyo1AymO533OAqeYNE
hdW5Y28xoLHX2yS+nYA17+2l7rEkgXeIyL3Y07zY7PEq87vyYtA/7LuzhT6A
Yit5suzviEKLS9fnB5u+oaiZ51eK8kXh0di5iJeNS/gt/I07uYoIoPbBTrb/
M25TYeqQsUiBVtmCTBvyFIroDTh3NIEG1koaR6+lzCFcsZF0sZodvn3We4Xc
2DDz0F0VJnE05vm0HK8n+XghUcqsnOlH/wMHHnqd
       "]]}},
    AxesOrigin->{0, 0},
    PlotRange->{{-1, 3}, {-8, 2}}]}], "}"}]], "Output",
 CellChangeTimes->{{3.676470783775257*^9, 3.6764707939130287`*^9}, {
   3.676470829920199*^9, 3.6764708640944843`*^9}, {3.676470903722499*^9, 
   3.67647093557904*^9}, {3.6764709802999067`*^9, 3.676471004411406*^9}, {
   3.676471098371408*^9, 3.676471115749959*^9}, 3.676471327689361*^9, 
   3.676471975896736*^9, 3.6767080397143373`*^9, 3.684634471477928*^9, 
   3.684635691859378*^9, 3.684668019205863*^9, 3.68468864825976*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Problem 2:  a free object (no pivot point).  Where should swarm fit to \
generate the most torque?\
\>", "Subsection",
 CellChangeTimes->{{3.6764621771486588`*^9, 3.6764622264149523`*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"TorqueFreeNorm", "[", 
     RowBox[{"\[Mu]_", ",", "\[Sigma]_"}], "]"}], " ", ":=", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", 
            FractionBox[
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]]}]]}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           FractionBox[
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "\[Mu]"}], ")"}], "2"], 
            RowBox[{"2", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]]}]]}], ")"}], " ", 
       "\[Sigma]"}], 
      SqrtBox[
       RowBox[{"2", " ", "\[Pi]"}]]], "+", 
     RowBox[{
      FractionBox["1", "2"], " ", "\[Mu]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Erf", "[", 
         FractionBox[
          RowBox[{"1", "-", "\[Mu]"}], 
          RowBox[{
           SqrtBox["2"], " ", "\[Sigma]"}]], "]"}], "+", 
        RowBox[{"Erf", "[", 
         FractionBox[
          RowBox[{"1", "+", "\[Mu]"}], 
          RowBox[{
           SqrtBox["2"], " ", "\[Sigma]"}]], "]"}]}], ")"}]}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", "1"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.684673826522071*^9, 3.684673850270439*^9}},
 EmphasizeSyntaxErrors->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{"-", "1"}], "1"], 
    RowBox[{"x", " ", 
     RowBox[{"pdfTriangle", "[", 
      RowBox[{"x", ",", "\[Mu]", ",", "\[Sigma]"}], "]"}], " ", 
     RowBox[{"\[DifferentialD]", "x"}]}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "assume", " ", "the", " ", "object", " ", "COM", " ", "is", " ", "at", 
     " ", "0"}], ",", " ", 
    RowBox[{
     RowBox[{"and", " ", "the", " ", "object", " ", "extends", " ", "from"}], 
     " ", "-", 
     RowBox[{"1", " ", "to", " ", "1"}]}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.676465933957417*^9, 3.676465936137473*^9}, {
  3.676466161477537*^9, 3.6764661745402927`*^9}, {3.676468233532557*^9, 
  3.676468252757174*^9}, {3.684533543640164*^9, 3.684533573457127*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {"\[Mu]", 
        RowBox[{
         RowBox[{
          RowBox[{
           SqrtBox["6"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", "\[Mu]"}], ")"}]}], "\[GreaterEqual]", 
          RowBox[{"6", " ", "\[Sigma]"}]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}], "&&", 
         RowBox[{"\[Sigma]", ">", "0"}]}]},
       {
        RowBox[{"-", 
         FractionBox["1", 
          RowBox[{"9", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Mu]", "\[Equal]", 
            RowBox[{"-", "1"}]}], "&&", 
           RowBox[{
            RowBox[{"3", " ", "\[Sigma]"}], "\[GreaterEqual]", 
            SqrtBox["6"]}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Mu]", "<", 
            RowBox[{"-", "1"}]}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "+", 
             RowBox[{"6", " ", "\[Sigma]"}]}], ">", 
            SqrtBox["6"]}]}], ")"}]}]},
       {
        FractionBox["1", 
         RowBox[{"9", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Mu]", ">", "1"}], "&&", 
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", "\[Mu]"}], ")"}]}], "\[LessEqual]", 
            RowBox[{"6", " ", "\[Sigma]"}]}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
           RowBox[{
            RowBox[{"3", " ", "\[Sigma]"}], "\[GreaterEqual]", 
            SqrtBox["6"]}]}], ")"}]}]},
       {
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", 
             SuperscriptBox["\[Mu]", "2"]}], ")"}]}], 
          RowBox[{"18", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], "<", "\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           SqrtBox["6"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", "\[Mu]"}], ")"}]}], "<", 
          RowBox[{"6", " ", "\[Sigma]"}]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
          SqrtBox["6"]}]}]},
       {
        RowBox[{
         FractionBox["1", "2"], "-", 
         FractionBox["\[Sigma]", 
          SqrtBox["6"]]}], 
        RowBox[{
         RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
         RowBox[{"0", "<", "\[Sigma]", "<", 
          SqrtBox[
           FractionBox["2", "3"]]}]}]},
       {
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], "+", 
         FractionBox["\[Sigma]", 
          SqrtBox["6"]]}], 
        RowBox[{
         RowBox[{"\[Mu]", "\[Equal]", 
          RowBox[{"-", "1"}]}], "&&", 
         RowBox[{"0", "<", "\[Sigma]", "<", 
          SqrtBox[
           FractionBox["2", "3"]]}]}]},
       {
        RowBox[{"-", 
         FractionBox[
          RowBox[{"2", "+", 
           SuperscriptBox["\[Mu]", "3"], "+", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", 
            SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", "\[Sigma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "-", 
           RowBox[{"3", " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"6", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
          RowBox[{"36", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]]}], 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
          SqrtBox["6"]}], "&&", 
         RowBox[{"\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           SqrtBox["6"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", "\[Mu]"}], ")"}]}], "\[GreaterEqual]", 
          RowBox[{"6", " ", "\[Sigma]"}]}]}]},
       {
        FractionBox[
         RowBox[{"2", "+", 
          SuperscriptBox["\[Mu]", "3"], "-", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "+", 
          RowBox[{"3", " ", "\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"6", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", ">", "1"}], "&&", 
         RowBox[{
          RowBox[{"-", 
           SqrtBox["6"]}], "<", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}]}]},
       {
        FractionBox[
         RowBox[{"2", "-", 
          SuperscriptBox["\[Mu]", "3"], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "+", 
          RowBox[{"3", " ", "\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"6", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", ">", 
          RowBox[{"-", "1"}]}], "&&", 
         RowBox[{
          RowBox[{
           SqrtBox["6"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", "\[Mu]"}], ")"}]}], "<", 
          RowBox[{"6", " ", "\[Sigma]"}]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          SuperscriptBox["\[Mu]", "3"], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "+", 
          RowBox[{"3", " ", "\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"6", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", "<", 
          RowBox[{"-", "1"}]}], "&&", 
         RowBox[{
          RowBox[{"-", 
           SqrtBox["6"]}], "<", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", 
          SqrtBox["6"]}]}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.684634498240581*^9, 3.684635722168562*^9, 
  3.684668046372229*^9, 3.684688675589512*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"TorqueFreeTri", "[", 
   RowBox[{"\[Mu]_", ",", "\[Sigma]_"}], "]"}], ":=", 
  TagBox[GridBox[{
     {"\[Piecewise]", GridBox[{
        {"\[Mu]", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "\[Mu]"}], ")"}]}], "\[GreaterEqual]", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "&&", 
          RowBox[{
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "+", 
            RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
           SqrtBox["6"]}], "&&", 
          RowBox[{"\[Sigma]", ">", "0"}]}]},
        {
         RowBox[{"-", 
          FractionBox["1", 
           RowBox[{"9", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]]}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Mu]", "\[Equal]", 
             RowBox[{"-", "1"}]}], "&&", 
            RowBox[{
             RowBox[{"3", " ", "\[Sigma]"}], "\[GreaterEqual]", 
             SqrtBox["6"]}]}], ")"}], "||", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Mu]", "<", 
             RowBox[{"-", "1"}]}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "+", 
              RowBox[{"6", " ", "\[Sigma]"}]}], ">", 
             SqrtBox["6"]}]}], ")"}]}]},
        {
         FractionBox["1", 
          RowBox[{"9", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Mu]", ">", "1"}], "&&", 
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", "\[Mu]"}], ")"}]}], "\[LessEqual]", 
             RowBox[{"6", " ", "\[Sigma]"}]}]}], ")"}], "||", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
            RowBox[{
             RowBox[{"3", " ", "\[Sigma]"}], "\[GreaterEqual]", 
             SqrtBox["6"]}]}], ")"}]}]},
        {
         RowBox[{"-", 
          FractionBox[
           RowBox[{"\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", 
              SuperscriptBox["\[Mu]", "2"]}], ")"}]}], 
           RowBox[{"18", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]]}], 
         RowBox[{
          RowBox[{
           RowBox[{"-", "1"}], "<", "\[Mu]", "<", "1"}], "&&", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "\[Mu]"}], ")"}]}], "<", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "&&", 
          RowBox[{
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "+", 
            RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
           SqrtBox["6"]}]}]},
        {
         RowBox[{
          FractionBox["1", "2"], "-", 
          FractionBox["\[Sigma]", 
           SqrtBox["6"]]}], 
         RowBox[{
          RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
          RowBox[{"0", "<", "\[Sigma]", "<", 
           SqrtBox[
            FractionBox["2", "3"]]}]}]},
        {
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], "+", 
          FractionBox["\[Sigma]", 
           SqrtBox["6"]]}], 
         RowBox[{
          RowBox[{"\[Mu]", "\[Equal]", 
           RowBox[{"-", "1"}]}], "&&", 
          RowBox[{"0", "<", "\[Sigma]", "<", 
           SqrtBox[
            FractionBox["2", "3"]]}]}]},
        {
         RowBox[{"-", 
          FractionBox[
           RowBox[{"2", "+", 
            SuperscriptBox["\[Mu]", "3"], "+", 
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", 
             SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", "\[Sigma]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "-", 
            RowBox[{"3", " ", "\[Mu]", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"6", " ", 
                SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
           RowBox[{"36", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]]}], 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "+", 
            RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
           SqrtBox["6"]}], "&&", 
          RowBox[{"\[Mu]", "<", "1"}], "&&", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "\[Mu]"}], ")"}]}], "\[GreaterEqual]", 
           RowBox[{"6", " ", "\[Sigma]"}]}]}]},
        {
         FractionBox[
          RowBox[{"2", "+", 
           SuperscriptBox["\[Mu]", "3"], "-", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", 
            SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", "\[Sigma]", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "+", 
           RowBox[{"3", " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
          RowBox[{"36", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]], 
         RowBox[{
          RowBox[{"\[Mu]", ">", "1"}], "&&", 
          RowBox[{
           RowBox[{"-", 
            SqrtBox["6"]}], "<", 
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "-", 
            RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
           SqrtBox["6"]}]}]},
        {
         FractionBox[
          RowBox[{"2", "-", 
           SuperscriptBox["\[Mu]", "3"], "+", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", 
            SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", "\[Sigma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "+", 
           RowBox[{"3", " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"6", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
          RowBox[{"36", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]], 
         RowBox[{
          RowBox[{"\[Mu]", ">", 
           RowBox[{"-", "1"}]}], "&&", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "\[Mu]"}], ")"}]}], "<", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "&&", 
          RowBox[{
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "+", 
            RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
           SqrtBox["6"]}]}]},
        {
         FractionBox[
          RowBox[{
           RowBox[{"-", "2"}], "+", 
           SuperscriptBox["\[Mu]", "3"], "+", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", 
            SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", "\[Sigma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "+", 
           RowBox[{"3", " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
          RowBox[{"36", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]], 
         RowBox[{
          RowBox[{"\[Mu]", "<", 
           RowBox[{"-", "1"}]}], "&&", 
          RowBox[{
           RowBox[{"-", 
            SqrtBox["6"]}], "<", 
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "+", 
            RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", 
           SqrtBox["6"]}]}]},
        {"0", 
         TagBox["True",
          "PiecewiseDefault",
          AutoDelete->True]}
       },
       AllowedDimensions->{2, Automatic},
       Editable->True,
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.84]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}},
       Selectable->True]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxItemSize->{
     "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.35]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   "Piecewise",
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True,
   Selectable->False]}]], "Input",
 CellChangeTimes->{{3.684533818682495*^9, 3.684533823449733*^9}, {
  3.684540933564073*^9, 3.684540934072744*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"TorquePivotTriFree", "[", 
   RowBox[{"\[Mu]_", ",", "\[Sigma]_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"lowlim1", " ", "=", 
       RowBox[{"Max", "[", 
        RowBox[{
         RowBox[{"-", "1"}], ",", 
         RowBox[{"\[Mu]", "-", 
          RowBox[{
           SqrtBox["6"], " ", "\[Sigma]"}]}]}], "]"}]}], ",", 
      RowBox[{"uplim1", " ", "=", "  ", 
       RowBox[{"Min", "[", 
        RowBox[{"1", ",", "\[Mu]"}], "]"}]}], ",", 
      RowBox[{"lowlim2", " ", "=", 
       RowBox[{"Max", "[", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "\[Mu]"}], "]"}]}], ",", 
      RowBox[{"uplim2", " ", "=", "  ", 
       RowBox[{"Min", "[", 
        RowBox[{"1", ",", 
         RowBox[{"\[Mu]", "+", 
          RowBox[{
           SqrtBox["6"], " ", "\[Sigma]"}]}]}], "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"uplim1", ">", "lowlim1"}], ",", 
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          SuperscriptBox["lowlim1", "3"]}], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["lowlim1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Mu]", "-", 
            RowBox[{
             SqrtBox["6"], " ", "\[Sigma]"}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["uplim1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "uplim1"}], "-", 
            RowBox[{"3", " ", "\[Mu]"}], "+", 
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", "\[Sigma]"}]}], ")"}]}]}], 
        RowBox[{"36", " ", 
         SuperscriptBox["\[Sigma]", "2"]}]], ",", "0"}], "]"}], "+", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"uplim2", ">", "lowlim2"}], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox["lowlim2", "3"]}], "-", 
         RowBox[{"3", " ", 
          SuperscriptBox["lowlim2", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Mu]", "+", 
            RowBox[{
             SqrtBox["6"], " ", "\[Sigma]"}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["uplim2", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "uplim2"}], "+", 
            RowBox[{"3", " ", 
             RowBox[{"(", 
              RowBox[{"\[Mu]", "+", 
               RowBox[{
                SqrtBox["6"], " ", "\[Sigma]"}]}], ")"}]}]}], ")"}]}]}], 
        RowBox[{"36", " ", 
         SuperscriptBox["\[Sigma]", "2"]}]], ",", "0"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"lowlim1", " ", "=", 
        RowBox[{"Max", "[", 
         RowBox[{"0", ",", 
          RowBox[{"\[Mu]", "-", 
           RowBox[{
            SqrtBox["6"], " ", "\[Sigma]"}]}]}], "]"}]}], ";", 
       RowBox[{"uplim1", " ", "=", "  ", 
        RowBox[{"Min", "[", 
         RowBox[{"1", ",", "\[Mu]"}], "]"}]}], ";", 
       RowBox[{"lowlim2", " ", "=", 
        RowBox[{"Max", "[", 
         RowBox[{"0", ",", "\[Mu]"}], "]"}]}], ";", 
       RowBox[{"uplim2", " ", "=", "  ", 
        RowBox[{"Min", "[", 
         RowBox[{"1", ",", 
          RowBox[{"\[Mu]", "+", 
           RowBox[{
            SqrtBox["6"], " ", "\[Sigma]"}]}]}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"uplim1", ">", "lowlim1"}], ",", 
        RowBox[{
         SubsuperscriptBox["\[Integral]", "lowlim1", "uplim1"], 
         RowBox[{"x", " ", 
          FractionBox[
           RowBox[{"x", "-", "\[Mu]", "+", 
            RowBox[{
             SqrtBox["6"], " ", "\[Sigma]"}]}], 
           RowBox[{"6", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]], 
          RowBox[{"\[DifferentialD]", "x"}]}]}], ",", "0"}], "]"}], "+", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"uplim2", ">", "lowlim2"}], ",", 
        RowBox[{
         SubsuperscriptBox["\[Integral]", "lowlim2", "uplim2"], 
         RowBox[{"x", " ", 
          FractionBox[
           RowBox[{
            RowBox[{"-", "x"}], "+", "\[Mu]", "+", 
            RowBox[{
             SqrtBox["6"], " ", "\[Sigma]"}]}], 
           RowBox[{"6", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]], 
          RowBox[{"\[DifferentialD]", "x"}]}]}], ",", "0"}], "]"}]}]}], "]"}],
    "*)"}]}]}], "Input",
 CellChangeTimes->{{3.676467577391876*^9, 3.676467583150907*^9}, {
   3.676467620923286*^9, 3.676467642689784*^9}, 3.684533184729178*^9, {
   3.684533596596053*^9, 3.684533598039216*^9}, {3.6845379966929417`*^9, 
   3.684538068930195*^9}, {3.684538106530834*^9, 3.6845382708752737`*^9}, {
   3.6845383147084846`*^9, 3.684538356260854*^9}, 3.684538387403821*^9, {
   3.684538484572762*^9, 3.684538521073769*^9}, {3.6845388666282597`*^9, 
   3.6845388668906527`*^9}, {3.684540347995214*^9, 3.6845403592671824`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "lowlim", "uplim"], 
  RowBox[{"x", " ", 
   FractionBox["1", 
    RowBox[{"2", 
     SqrtBox["3"], " ", "\[Sigma]"}]], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.684539156942346*^9, 3.684539164426305*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    SuperscriptBox["lowlim", "2"], 
    RowBox[{"4", " ", 
     SqrtBox["3"], " ", "\[Sigma]"}]]}], "+", 
  FractionBox[
   SuperscriptBox["uplim", "2"], 
   RowBox[{"4", " ", 
    SqrtBox["3"], " ", "\[Sigma]"}]]}]], "Output",
 CellChangeTimes->{3.6845391647952223`*^9, 3.6845408854065228`*^9, 
  3.68454102996239*^9, 3.684634498514007*^9, 3.684635722399192*^9, 
  3.684668046506063*^9, 3.68468867572051*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TorquePivotFreeUni", "[", 
  RowBox[{
   RowBox[{"1", "/", "2"}], ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.684541082575522*^9, 3.684541100235766*^9}}],

Cell[BoxData[
 RowBox[{"TorquePivotFreeUni", "[", 
  RowBox[{
   FractionBox["1", "2"], ",", "2"}], "]"}]], "Output",
 CellChangeTimes->{{3.684541093148327*^9, 3.684541100708908*^9}, 
   3.684634498540916*^9, 3.684635722435773*^9, 3.684668046532552*^9, 
   3.684688675745014*^9, 3.68483274175124*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sigs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1.1", ",", "1.2", ",", "1.3", ",", "1.4"}], "}"}]}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"TODO", ":", " ", 
    RowBox[{
    "place", " ", "legend", " ", "inside", " ", "the", " ", "plot"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"TorquePivotFreeUni", "[", 
       RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "sigs"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", 
     RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "sigs"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Mu] (pushing location)\>\"", ",", "\"\<Torque\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Uniform distribution\>\""}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", "1"}], "}"}]}], "}"}], "]"}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.683656192718853*^9, 3.68365650959415*^9}, {
   3.684533201990088*^9, 3.684533227629901*^9}, 3.6845336018509903`*^9, {
   3.684538398449457*^9, 3.684538398934102*^9}, {3.684538872647613*^9, 
   3.6845388887736807`*^9}, 3.684539050089514*^9, {3.6845392360343122`*^9, 
   3.68453924661322*^9}, {3.684539278578122*^9, 3.684539281301207*^9}, {
   3.684539347834256*^9, 3.684539370928897*^9}, {3.684539413266988*^9, 
   3.6845394260116*^9}, {3.684541137633313*^9, 3.684541223576767*^9}}],

Cell[BoxData[
 TemplateBox[{
  GraphicsBox[{}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[Mu] (pushing location)\"", TraditionalForm], 
       FormBox["\"Torque\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Epilog -> {
       LineBox[
        NCache[{{
           Rational[1, 2], 0}, {
           Rational[1, 2], 1}}, {{0.5, 0}, {0.5, 1}}]]}, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotLabel -> FormBox["\"Uniform distribution\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"1", "1.1`", "1.2`", "1.3`", "1.4`"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.684541180427577*^9, 3.6845412241660624`*^9}, 
   3.6846344986272697`*^9, 3.684635722521311*^9, 3.684668046624586*^9, 
   3.684670335762723*^9, 3.68468867583906*^9, 3.684832745763913*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sigs", " ", "=", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.1", ",", "0.5", ",", "1", ",", "2", ",", 
       RowBox[{"5", "/", 
        RowBox[{"\[Sqrt]", "3"}]}], ",", "5"}], "}"}], "/", "10"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"TODO", ":", " ", 
    RowBox[{
    "place", " ", "legend", " ", "inside", " ", "the", " ", "plot"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"TorquePivotFreeUni", "[", 
       RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "sigs"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{"sigs", ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", "Bold", ",", "8"}], "}"}]}], ",", 
        RowBox[{"LegendLabel", "\[Rule]", "\"\<\[Sigma]=\>\""}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0.55"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Mu]\>\"", ",", "\"\<Torque\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Uniform distribution\>\""}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", "1"}], "}"}]}], "}"}], "]"}], 
     "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<../abecker/SwarmPublications/JournalTorqueControl/pictures/pdf/\
TorqueUniFree.pdf\>\"", ",", "%"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.683656192718853*^9, 3.68365650959415*^9}, {
   3.684533201990088*^9, 3.684533227629901*^9}, 3.6845336018509903`*^9, {
   3.684538398449457*^9, 3.684538398934102*^9}, {3.684538872647613*^9, 
   3.6845388887736807`*^9}, 3.684539050089514*^9, {3.6845392360343122`*^9, 
   3.68453924661322*^9}, {3.684539278578122*^9, 3.684539281301207*^9}, {
   3.684539347834256*^9, 3.684539370928897*^9}, {3.684539413266988*^9, 
   3.6845394260116*^9}, {3.684541137633313*^9, 3.68454116084551*^9}, 
   3.6846743914643393`*^9, {3.684674425838735*^9, 3.684674489560034*^9}, {
   3.684674521984548*^9, 3.68467453713513*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{InsetBox[
     GraphicsBox[{{{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1: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
+1+SsCAm
          "]]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1: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
ObWPrGFiI680D88JYvz9KfL/AQq9dsc=
          "]]}, 
        {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1: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
          "]]}, 
        {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJxF13k4VG0fwPGpaLHVq0XePBpRSZKI8OBHKrRYekpKWaKeSNKGFEYkRdYW
su+VJUWlsdxUdpVIltAsZ8aMedqY0c4773WdZ+77n+/1uc657t+5zvnnPmoH
j+88NJ0iXtMolP9XBxaNTk1NIQq5dvmsjP7+Azv4utGKcRF2s2DfQa4A2z0l
a6CjFzvxi2Z76j1sYd6fJfpu2PTZHn5/101KHPbiraDB47fE/AJlpQ0qvyTW
em8zZ+7QD4nz5+cJ+y98l/iZS9tVBN8kVslSoaYwJyQuTQ2XNx7ENr/G/dH/
FtvtcnnPkg7s3FObYrIeYWva+E4UxmCv/1Ld8dAAu1FApTvpYjtxLxZ91cIO
fGd/wZiKTW9kb6iVwba4JZv3/L1I4tfX/BMODWAfjO8JmdmDHRGZ5WzTht3k
p6/QUYnt5J3y0/ce9ojnb578XezZe5uf2Wdhp/6lff9zKraWXWJm4jVsus1E
jF489jYrl7Pdl8XmJaL2SiOkdTLwdWek2PK0wPlXPJBMTvKql2Ficxq/Sn8/
jlom2/tbzogQbcDU7K5XKNpCNzWp8xDbn8rixF5FFutUf942FiH3M6yqt9IZ
yGAp83woX4gYfLa2KKYELf15mLbKVoiio5cHObCq0ZqyDNrJD2MosubcCV96
O2KcztF5e/sL+rrsRVHzg27knZ6Yl+7zGRmsdl3QPtCHnEP3qpcs+4jCTfpH
414PIU3BKpddmQI0HB3fPvyBgR5GdiX7JAtQUsXSuCkRA21UPddBixYg4aWA
L/+dZKD9jh1mpScFqGlN0C1LBSZKeOxHnWktQOnH2s/Y6TDR94gKzuNPo0i+
7r7j4WNM1KZi5r/EchQp5IZkxo0w0VE7h4ssNg9FBijGNrSz0ORW3Ter+3lo
7evsVp8uFkqynqd+5iUPjYW09yv0sxDdorN+1hMeev5CdMKay0Kz9R1+acfx
0I0tmeHBFDYqVHI4FWjEQ9x0c1WePhuxGPYecldH0MbBmu3MG2wUMLS2fPeF
ESQX3DNEpLORzMDcqczAEfTJ+4olO5eN1nW/Sl93cARRLFppnWVsRGu073Pa
MILsGm8N+zaxkepde/scJhelrL+qVCpko32n7M0MDblopOBe6LYdBIrpy/Aw
0uaipPkOE9t3EqjG7J+LJsu4qPzm6g+2ewikOvvyS3MFLrJkJzsbehCImf7U
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
          "]]}, 
        {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1: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
          "]]}, 
        {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJxF2nk0Vd//P3AKlYgGUZkrKSURkfKihEqmCqFIA5VZKUREmpAhlSEKoRRK
MsXLTMZ7D5kyz+695qEIfc97/fw+7h+e67H2Pfucs8/er7PvWkTMbfWuLGNi
YrpK/vkvJWEj7d+/f8i0+Dlzfcejmdklu4TIi01MLbmUbmTeR1+y2auo5sqG
JQeOiVeEJi95Mkbxo4zpkrNWXrSxyF34n6va9RsnM5bc8U3zyP3UJbNdkd/4
OmHJevlcuUTQkunOuZxKFkvmp2/5tIF7yXsL1vJGsy/5SOgKz72sS7ZUnzhz
Ynb+f06LKZ+717PkMpe8q5ztS27R/UYJayLNF1fXvV8SR8Q/HhSvI33qb3SD
gQ4uY4qOTasmfcjncHmPCfI0vFxz9Afpss3bs75dRvEkvzuUQtKx3j20P9dR
y8RZk54xj3nO6qW22Y54Ucb2253UefRIffldt8kJb7JfEWZLIr/PZu8vMu2M
YRk6k8Ix8/jGtf3SsY0e2LdBPELfbx47ll8uU1HzwXtV9fT8i/MolbE16qha
IHY0euUlmsyjmfvaSz5zgXikRyokxGAeuR/fuOr3JQjZ/j5RunaKPL/VZYkB
gefoKw6B3Apkf1bXkihjLzDMK17OlJs8XjvvlbV/BH5VuOM5lzuHUjU6925U
xeDgu028B/jnsG5f6Ir9Hkm4q11jFVfrLN5JbptJ58rE2PUxk033Z7C5623i
QcN8LDQu90P4gz5xOWbWJsXIH8Uv/KpzGpn0kt+V7/uBJ48aO9c+nkLl+IrP
BTaVuMvhNpXiPYWNexJcfzlXIvvb4J3V96YwJV6Pbci7EssWKprKbk3h7ltr
L8yGVaJa1qGDuRen8NBtOd7ckkpU3if4N0FhCut5BVMG+atQVqjzrvvgJDaX
X7pLLaxCob9XPXYen0SJP2Xu3X+rkfHTIjbr6CR28Xt9nGStwYwUy7KTSpOY
s7P+zDxXDepcvc5tIzOJ7X/VeKa21qAH1frNF4FJLPc8fdb9ZA12xd/MUxyf
wEMb+Ijfr2ow7sx9Jq3wCaS832FauJGCDnu9trWHTOBFpeCoo1soqMTurWEX
MIEs6idfoxAFG/BBQNCDCbz39Q3lgzgFV0o8Fm6wnUANps6NWgcpeJ05QNlM
dQJ3G6eLlJlQcE/Saw+HoXGUFsyWehJJQY2cs1xmA+OYNv05WymaguaVnJGn
usex2mljwMg7Cr6iuWWLN41jjrU4j9onCrLsuDDdVjSOoXJ2ASXZFGyOErQ6
GTGOqvufneRppKBPYJTBtpPjeK2dvW6Qk4pv3xj0rVUbx2cfvvnuWEvF78lc
t/4pj+NxAYr/xQ1UHKu6F9QsN45uMydtyzdT0YTdrCpAdBy7fS3e2u6gooyX
8NH5mTF8IyRZvkKZih0330rWJ4whbfLPHlsbKrrL3tJojRnD61cMRMTtqcg/
rWHeE0m2f5bwanWkouHt0ZDx52PY1yYbdNiZilRnmF/jOYbEI0or4UXFAvfW
CvVzY3ifX0hC7xUVYx9tupa5agwVj4pExuRS8cjxoft5LGMYJaNoRssjz78q
P6L03yi5bisC9hSS53tqSfk5NYoluzUPvy+lYohf+oHxzlFUra8rvEWhok/Q
WTaJrFHccO2fz6VOKl6LCIyJuD6KXP6ZvYFMBE6uPPH4wJVRFLXnFfFfRqDH
rWW2hOkoelkx7/RhIfCFluPBlWdHUeajc+S1lQQWMJ2lOsIoqmj/FVrgInDz
Fb5/JzaM4pZtR93OCxL4jkrp6V0ziny+5p4bhQmUUnpc7rFqFC9zrNGrECHQ
V3JSwnp+BPvOrjonvp3AnqD0c6rECEZwBM4nSxAYYqyUNu46goUre99MHSDw
4/5kD3H7EXw/VWx9Q4E8P6ew5oWrI9g2K72i9SCBw8jc/UNnBGW1PkelHiZQ
bVsx99vtIxjIBxaSRwmcZpy00q4ZRrZDUTpGpwjkKPl+4EHRMNZ/Uunz1SJQ
NGrP8uzMYZw6YKeRrU2gli5XmFjsMAqG2Dus1iMwPo0onb8zjCKOrOed9Qk0
dD+39aPoMHbn2Ps+vUDg6jz5ojC+YVSZGl9xw5TAXGa+K4/XDKPCHoFfamYE
bn9QH3d1dgj/RFo9mrhI4PjT07tEiCFMffx7QfgKOV5V0hVcZUPYU5x3oJu0
Idc6q4WcIUxeJlP29iqBGET59Ov9EPK4rxtdb0mOX+ipfS88h1Dgbo5x5XUC
4dduwvv2EIrkVOva3yD75+dwdLQewryFR1HrrAg896b8q865Iaz0+qNywppA
sXh1+dX7hlA0pDDaz5bApgGxphmxIZxp5tfnsSP738XmMsA/hDdEhC6Gkp74
VJRdvHIIBVME3V/YE5j3VQU8OhiYV7eq7rIjgY7Twh029Qy8IZSoWkNaTJ7J
83wlA1OuT3HI3STQLzu34GAGA9mXP4j9Q1p5/vWlnUkMFNQpdzxzi5x/Sm4s
fLEMrHqdEfaRtFGBotrUMwbOHgwY0XUikJNlS3/3AwbeeeIsEEU679jsQ8KV
gQHNq2MGSO/4kfEj2YL0XYk0u9sENrO/uh55nvx+dYZKMml/zdur/U6T/QmP
bKeRnqyRPXUdGFhdqj915g75fNfyDBvKMlCI/1GHN2mj05P+6hIMXG1vvvUz
6TUhtXvlRBgYWNKb00Q6v/4LZRsvAz/zr0tZIH2TL8h+PScDrRz7Z4ScCRQ3
sl+3bDkDC8qvhB8m/StcJ3X0Dx2/iPo9NyDt37r3TPswHQ+5nu+1Jq0ixDVV
1UNHs7p6Pw/Sk2bDId+b6SgsOeP3jHRCdJVcIoWOzo+KesNIG/d8bAgtoaN1
t3xINOk1Yr53Hn2n418l/Yg40gUWNzbd/kLHbeH8f//zrfcnsq4k0LH/99PP
Mf9dH32n8ZlIOqqejcUI0mneRPD1YDpOK3RvDCR9RNC10uMRHZmUJ0U8Sdek
b2V96UZHc4uGDivSJrqVhz850Mn54Hv6DOlB2k2nQgs6Sm/e4HKAtJO3QHKT
CR0j31mf2Uh6uWBJ/4guHS/phXaNkuMVkG4jzKZOR0/hl9tKSQvo8p7jP0TH
P1wWm0NJf6BhoPQ+OpYKryq6SvqAt2W5hhgdR/TcRKRIFwmsXW66hY62cYXS
U+Tz1E3PVLzFTUeNLS2/00i36ZjffMpKR5fPJXYOpGe8UnvTR2g4oLLOvY2c
Lz4CJoLVPTTcdshxnT/pDeksBj1NNMwwiDNSIC1JO1vGXURD+vh9Ni9yPmZ7
LTDtyKThY4fd10VIawjEKxxOoqHH+gTPbHI+m+v8+XDtFQ3vZPJUdpHzf2Tw
Tfc9Pxo65674Z0v6rtdx/hf3aVjbU9H7x4Gsp9/C/AqsaBgQUl49T66ncv7D
dltUaCjz8O2aOnI9GnzrTdgnR8OZF9s6lEj3aPt3qkvQkK/M+co7GwIX7rfr
3eShoal/2NMr5HqWHvSUrRocRN7EtGNfyHqA93fZdLcNYnTxj7TZawRq8tfG
zdQOog9zSpMS6ava2/jEcgfRsHX8UJYFgWFpJbPuQYO4fbuevdtlcj1p28qE
PBzEWyd+34u5RODXAV6rxLuDKBRoc6TYnMDqLddaG64Oouv92q6/ZH1bdn91
npTiIJpMOQXKnifwhpbOg67uAczdsi2u+Qx5vSek6iSaBpBt76BC/mkCg9S5
t96qHsC/Xhfex5D1NUuZkrcicwBHxs9tMdEhcKWMztxu/wH80xN8MvwkgXG8
Oo635Qfw5aYNrXoqBB7cIFWQt2cAM9RbJX4DeT3c3GvZtw7gw3R9/ZdKBE6t
oiRFcA7gbhMjpQpFAlXntGn5Xf0YnhlrxCxHYFeH9kUOv35kLT5WFLeTnK+t
e1PO3u/Hf5zrq1eKE8jezPUv8nY/xr8KSL0qRuC+2pqIfeZku0PE2o1byfdj
sXaj/oF+rFX8vekoP4GCH7S133b24QrBTON6TrJ+OGoflpPrw8htNjGdQ1R8
2vj6ovzuPvygR+ProZP7j8OMBwdF+9DZdO9k1yAVBVc+rlZa04fGPBtafvZS
sTOiwFS9rxdlx9XtA1qpaFkie9/wRS+C3bnPhpVUdNrEX+oy3YPv3bY+ko2n
Yrz7dfpdRg+OeGV/K4qlYmN3Bte9rh78bcl/UieaigeTzhp6VfegZo38O5PX
VJw/8mzwaVwPsnO2CJ4IpqK31TKO1/o92KpZueOOOxWDcUAHv3Vjc+vpAGE9
KkbeZeIcTOxGrjbhlHktKiYo8P1Y97Ybo6O4g+tPUjE3VV3l6tNu7L1qGO16
jIoD8XH7OM26sYP1cV+QPBWVAi6vM17VjR8e2LBOC1Bx0Kyjdtq4Cx/5nnjt
30vBSYE/z4R1uzAyw1akp5OCC81cmifUunB9XLqlbBsFN5yFotdSXbi5OFm5
op7cfx6P/KrK2oUR61U2FpVS8Pk+k5CgpE68Od5vQEugICxr1Jdk7kTrdDXZ
VZYU7NtxYYD7dwfqNa+qEbxMQf9TPc4TjA5Mf/ApXcqMgm2vRiMyGjtw/taL
W8cNKei+d1X3kZQO9Pg+HKOlQcHvJgdtDUw70LAzozx+BwVv2ihwMbu2Y+4G
C89dpTV4vbHA7t1ECzqlekdkvqlG69qLhZmtLThbrtRx6EU12lUzbawubcHn
nsF30p9W4+0ipezp8BbkqOSID3KqRu+ULFYN1RZcWa/0t+NkNUY++hJGe/4L
JXLfeLROVmGtfHTRXrlmFGs3/ndWuQoPhXryZd1pQNql5ErVnAq0bB37dY6X
wJ0NfHDGrAxTbVtY1ZYT2PHS2b5crwwXmEv3So+Q80Zg/rzCsTJ8LhbhxU7u
E1VvW11h3lWGebZqEtlO5L73CmPPwYlS5FsW7sJPjrOPhP07Le9SDDj1SDp3
Zw0WmPpLLn9bgmIO531eMNeg03f1dwFBJfj9hXSzTVM1rmzbWr/RuwQH2ls8
hR5XY6Wt6lVOixJUdthH9RiowroqMeWY3SU4+qLZ9mh8JbY52jXbfytG7Y7d
n8q2lWODBe/7sKIi1Ly8wwxmfiBTNwfLZGoRnhgQWf+t6gd27DcjVGOKUHV0
o3OM0w8sMBH+UelZhPJMzMfcy8qQM4dNyEmpCEWFf7bIWJViId6wkvxWiEKx
Nc8+KJfiqTil+YXYQuQXLz8iwlOKvpdsmUuDC5FXChPW5JbgXnPapcP2hcih
/P7mIFcJ/rFVCyyUKMQpUzeOKPI6Pla98JONKsDx7tvI86gIQ4TUz7j5FeCo
hYODr0kRymmc9f/uWoA0W4tGZ9YifCHw1ETEsADb7unGnjEoxM5Gk4ve3AX4
a7mmQQXZr3PH34KHC/nY+FCN/QhTIZbl/nl5n5GPtc8U7fa+L8An/1ZHXCjL
x7Ko7YfY/+ZjcOArjpR7+Vi8VXjEoyYfW7TEVtla52NB/Obo3zH5+KtrrfN2
43zMk+A5a3MnHwNPGZvUauRjTjLXyl7NfPzrvyz1jlw+ZsmwZxuL5GPG/890
FhtiKu9/mab4T/h4eR5+W8wvOFOLkXmYspjJRyd95BxJL+bH0mGFT+p5mLiY
p6JKQbYTUWcx5TC8geadi/KLuZmDZTBSJhf5FnPe0GpWrysHFxazaPyQQDbk
YN5inhZrM386m406i2nnJzwsYZf5v3xv/I7F2vgrJiymwuj5S22XYlF5MSW8
RtjzbsXA/sU0UVy/8pNoLJgtpu+EHGtYzVIOX3L/57gzDkYX84sq5+SO1gRI
WUx5NonWZ6pJoLyY0aqpDcmPv8KbxcwSPqYv1vEVMhazdq6+LkIuDaoXkyVt
lvq4Ow0Wvv6/vLL9SOWlw+lwfTHF2ah5vGOZsGsxlbvMwV896395LncyhyUy
C4wW84kTX/bYiWzwWUxGn2laRex3GF7M5NLh9/cMEb4sZtsFTre97xG6FnPN
tIRO+wwC92LKBe13jTqVB/KLWd1aePn3rTygLuaVnae1tCOXcu5m14H4kjz4
u5jP8+xF/g0v5W4O5tUGvPmwZzELDQImkyAf9iVc2NsrlQ9GMUJtbJb5kBBP
GRtUyYfx4aTSCwH5IHOr06RfLx+eHFT6/C0jH6jcgXatl/JB1KcqbE1nPni6
tO+uvJkPugIM69x9BSCQYRgV/CIfBixdDTYaFcAKX6+zVvH54PGVXcXmfgGw
SJ76epjsJ+Xkzg2CtQVwsOX7jfKmfFjjcjXL7WYhPO7kLHjKXwDl9R1sh9OL
4PszJ46kNwVgLmo3+ry9CJpU/TXXfi6AGet/TYwVxbCqTFXWOr8AxFkFP0UY
FkO0vD8TV1cBPJQxPj03UwzfC4LcZ0ULQTXgZ1T2oVLwcjHns48phJzj5fIH
C36A/R3+wpbIIhiW3V84MfQD5K3upLxJLgJB0chTnzaVw31f2QXjvCJwn7U3
F7Yvhzi92qyMziJQTtzkyyZcAWJTERns24qhiONaO+FWCeuCLUu444uhvGaF
zw2FGvCV7tz1Lq4E6B+ir2kZEsDNZMg78rQMXn+SDJ9Ma4ANPis/2HZUgA0H
3+OZHw0Ql8AX0EGvAKUbzLcXWhtgmfYGxRO/K6BNvE5vJVsjCO6obl+xphKE
Y53Z+fUboYdF8/JuxUqIDStyPjrdCPFOduc2P6+Ejw+NDIPkmmGFjMnkY+Uq
+H7Rh0cqvQX2cCEj3asamrhba3srW6Dzi8nCTv9qmEaZoPCuFgj8vupZ8Ktq
kBLsXLNiTSt0MwftOfWpGmKaFVe2XW4F3TPGpkb11fDk9Njs03VtYMhHDWkR
qwHDYyYd/dbtsFbguJZHfg3cmvwS+dqrHeQ8alW6ymsgKGbV+dOh7WB43Pqr
Yl0NVDKnN+UWtYM/Z83Gn301INz+aLCcswM6k7YPUFgpEBze3fX2cgck+q9/
St1JAZcNoT+113VCiG+aU7QNBW4s12+35++EULPjSd4OFDAZXzcYLNYJu0XM
9l1yogBQfOcaDnbCgsXGzTzuFGDx9dhqdqkTTnPE3dL0o4D/ckt7u6+dgMm6
Z1clUiBmXI4zUL8LIi82f8vupsDzzomNqWZd4FxacWFHPwV8KCnCP693Qfcm
Zb1nNApYJu3av+leF1zy/rzlzBgFJK8LGr+N74L1dunynxcokNHJ+v7zny7Y
H60dnslHhUpKnSoR1g337D8vW36CCt9MjOTzY7vBymmH4qAmFd4OtEukJHWD
koBgT4U2FZyY6Ov8C7rBX8fvoc9ZKghLMXcep3VD5ynHDVQzKtx6tsctX6EH
zsScVyP3DSCo5ZOW0tgDVpmJ7D1RVFjZvPp9VFcPdM7KnjaMpsLElcAIf0YP
KLYpc/yIpUKZW4SXFVMvRDxprIl6TwXHT190xcV7gduF67VoKtnO0T4UdbsX
ilPDtd2KqWBfcUDs2cY+uBi0h+dhPxXu/5vw1BfpA40usVVpg1QIkklpFdjd
B+wPuyva6FT4Gi4e8lGlD4Rr4nK2j1Lhz41NLOVWfRB07qye5x8quHP87WQp
7AM/Az1l25UEPFNOP1xZ1Qc7pjyEjdgJeHPTMTS4sQ8i+h1qlDkIyG+h64gO
9wFvxZtQZm4CWD61IGzqh9O+29p1eAl4cir3tYttP3T9rpAU205AuKfLjIpL
P+zt3vu3SoyAj2lyZ1c96Af9rQYv7MUJqBJI5ngV1g9y0SPyHyXIdTkc5ZpW
3A+HwjT2juwj4KW/57nRLQNw0TGsI/EwAQkFh9PSxQbA9KNMKDcQkDE9w31v
3wAoHAwQtlcmoPmCQxmn+gDcOxMcvv0oAYJ7Lx2QcBgAba/8IyYaBMTWqPJc
LRuAleU5Z5n0COALDwq/SQzADQP1tDWnCXh6tUPEq2UAlos/tdl0hgCHeVfJ
N6MDQAlSGd6qT4CKRKp6M98gdPhfE+U0IuDrNFP1gOgg9MsWay+QFi/QOvN7
9yBsFf5VTzcm7+cczWyDyiDI58qOZ58noM1HxEXr2iA0Csedl7pIgJ6eLdN5
x0Hw6qw1ZDEnoFggx+eG2yCY92Z/qiP98ath8KPAQcBvWZevXybAtevZx4LM
QRi557jiugUBw59apamFg6Bk5EgRtiTA3Fkis71qEApu75moJX2Cu7R4rnMQ
rt6lHNt7nbxfpYU2OXYabP9IFcqyIsB3leaVYxtosOlNzLfT1gT8qwulnxak
gXLD3vhB0n03ZP/YSdPIenU7hN2WAKMDXu73DtFgnEs6OIR09TIqi78aDein
42n8dgSkhVqtTTSiwd13eXHC9uR4XMl6mXmZButTL69+TTpCaqVgmQ0N2pYX
/uBxIMC7NGZX732y3Tbp9Bxpvanmo0KJNBi7oRzx+iYBJXni5XvSaLA7+Fv1
HGkFXyedQ0iDiPk+I8NbBAhvXXf+XC0N+CKcPFicCHg+bNpt0UreH+XnprOk
V2Z9uubUT4Or6iMc0aRHdI47Bf+lgc8/HaZ9t8nx4n8595aVDleUQ5kcSdf3
99xP4aKDc1G40WfSJ1KlV+EmOuQ9NVzDIJ3r7vGsaisdDr+o2bL1DgHSJ6p5
WvbQYbibyUuf9Dse/gjaATrU3mQc9SHN13lNdEaFDkMaQRe+kPb9mJ6wQpMO
imbjRDNpMeFDL4f16WB/wsV/mTMBecF5D35epIMy1zomMdJGK47d/G5Fhw9J
mTuOkZ5w+WEec5sOSeL2rGakfYdP6T65TwdNN/lQJ9Ji5Jyx96PDg49c3Y/+
6++nvqThKzoYfJvuevFff8d/8UMMHYrChl69IT353XS1WBIdKs5NssSR9pfq
meHIpIPVBPuOeNLisZYDE4V0iLfY9y+GdAHvUH1zNR3ufrPwiyBt8tS+OL+J
Doz2T9QA0tMLU6kJPXSY6l5e6UE6wMEl+tkIHUILrt21Ir2zbyHAaZYODa7t
Xaf/6++c173zrAxI5rryT+6//qpW2KhyM0DUfZbK819/yr4mElsYIFkaZTRK
jlfAV+6T68QY8JN2JrSE9C7xEIUZKQbwDG7yf0W6KHyTeIciA0bzh+Wvkv5z
X5Q1SZcBt5aXpUySzy9oOm7iuQkDBK0q3dJI774u0eVqwYCLyR1MDqRNdffj
cTcGpBfL72wj58ufooxPUo8Y8OPV3Wo/0kHyhyN4g8n+1Cg7FUiXCKk59yYw
IGJf/DIvcj6aBZdbVKYygNd2l4cI6Vk2bf3UXAZIPMxJzSbnr+SwgYxnHQO2
qq8/3O1IQNnFFhHLdgasGPkZZEfa/KcZtzaNAd72CZEz5HoI+X5tiJ9pCLTY
3BoXyPUjKTX8a/nqIQjlu8fmSrosxqGcxjMEHqyBtHFy/c09cY3PkBiCzbY9
dT/J9Xn5nN/FMwZD8NjzuLQluZ4XKtfqKJoPQZxlOXcBuf5fKb9QErUeggu7
jN/xkq7YEbVl9P4QhB/+OJpG1gvp6ZSfT5OGQDuGgxvJesMcXHe8kHUYom6U
2C8n69fCa5r5GNcw9NvKmIqbkfebwHRXaPMwSFpoPjtuSs6v3N1JrpLDkC15
P92DrH99NO91+w2GoVJkfkfBOQIqj8j+ik0YhuqXUo8DdQn4cerkJPFlGFZX
mrx10SHH1/AiJ3POMGhM7J8z1SYAbfzgPHUYcPOgs9ApAr6E9cbwzA7Duyqz
EHuyvr8aD7HyOTkCeoV+muZK5PjNJz74enYEHuxwfsZFvj+CVhZEdpmOQLo7
N0+mIlnvBYcpSjdHgI/t6ACTAgHuJ9Rkf0eMQN2d9KRLMgRcip6etxgegd3D
rdm3dhDA+z6xNFZjFEz4RBoqyPfhuvnNx6NPjcLxXvFb7KsJ4NB9Uh6lNwoy
VDbXY6sIWDZjWRVmMgqzrMdyU1jJeq0hVhtgNwrnu8tFTRaoUDLwpu3uq1Fw
sJ67xDZC7jfEX0ydGRiFhtzpkoQq8n1/l/W23tAoaN0oML1ZQQUrys0/2uOj
kC932ezQDyqY3zn998TcKETs2hWaX0QFrTJuZhXuMdjhgwNvsqkgZvmUY4/8
GDzh4GZKTaBCfbzHVtZHY+Crr8G13YMKPdqrm2z8xuCwUQLjqBsVxn+H+DcG
jYFk/eVnF1yosEYjcSbx9RjUyU1se3iTCmoDP2v0UsdgT/iVgHeWVEgXl7j7
pm0MOEffWPLqUOHV+591irLj4F9uL1izhQpxumZP3h0chwv1ZvFXyf3X1xka
cCmPg53Rx6mZDVSgHGdK7DoxDvoVhl3r11BhFW2X52OzcZDUWTG3gYkKLrs8
9jQ8HYc1fVlSmuR+0Dhxl49D1zg8O3I3yj+OApuFFij3+schVEBod1c0BZqD
qFv8GOOwVunbKukoChi53PkcPz0Omtr56SUvKeS+t6SlhX0CJr6caC98RIEz
/Rdl1GUmYM59lwnndQpobg3t2OJNeqcgZyu53z0UvkKxePskWL9MfNl2qAbW
XJrOVJKYhJgXn1gGpWugc1evfIbUJGyOKC+nideAT1aBXKLiJDRmnjWv21AD
1CY36UDdSfBSTskFRjVc5Zvced5tEiJdnHbfDq2GgJAOvqm6SWh/q95iOVQF
3c8yp7d5T8GL73O+Bq6VIB3nS/N+PAUFhya77Wwr4f5307Ye/ylgmmDr8bxE
/v4YZC2JDZ2CbGb39icnK+HCEb2QbclTsDnhS6H8lkponKTJbGueggA+ORWW
zAqoPMdvv1VqGk49esdtNFwOX7feo4u0TAN7jBgzs/IP6Ii5Lc0i8AcE+6cE
xguLgRA/5jFxZwayDNwfuDrng1DYMeGynFnwac365j6TCS8+nJtRmPsLRp9H
nKTVUoCu1TQZxTwHR/Y/rBHenALKE4ajrCvm4K56/Pu5X8lAUzTsp66dg5aA
jRWcEsmgVKX/89qOOTDUpStFlH6C3pHTn0P15uDyY2vatdkPsF9W69pMwhzY
/azTKVN7B4+bqi6bJs0B45/SXjtaLLS5nTIrTp2DgOXrLab9YuFRiaZBYO4c
qL740/W6LgZaDE4e21lHHj+YufqcWTR4u2iInPs3Bx5+u44wdUdCLR5pyjg7
D6NZ57+JTgVB897V1wuMSG8/njSpHAQdUbWzFabzwK2jxeHrGwiMe5f526/N
A1Pnu1n2rQHApuxjyuo+Dx709SrBYU+AI0VrdI3XPOSl+AT5ST6G9cK8nnyP
yPaJ3SnrCh6CMFNCtEQQefzEep2cfm9QyPvRqxv33/dfqoobu4OyVJCTceI8
KPOlffjh6gpqb4xWXEkhfVfhvUf4HdDzoIvfySKPP3Dbdm+jAxiOpmZ6Imn+
izZaNFswNbt74mkReb68t5LXRK+DlTKnVWQ12d61yUt583lwSPk5F19LesZG
3PmeLjgLR/p9biQ9eS9H2PsAeARcFcxuJb348WHam1zUtWRfu99Q3b/koA6k
NDCWHJWnM06bXnKc1Cavyb9L/vimc/0C08L/nOHhILt29ZIJ5ed3DggtmTW/
YcFLfck38i+sFni1ZPOophffXy/ZyO2MqEnMkjUUTiiEJy1522dZi03FS255
w1HIM75kTY8slzWa//7noxdk2ZJ0l3zwUErgKYMli/95l+BrvmQWu8B6ducl
55haSq+IW/LXw905cYlL/rjlwnG1z0sOazht9uD7kp20yZ/ItUu23pO1KaZx
yZdXy7470rZkvdJd3z0Hl3z83Tt1kZElK3sJ1+ZNLvnAxfALZrNLXvx/sv/5
/wC/8L0S
          "]]}}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"\[Mu]\"", TraditionalForm], 
        FormBox["\"Torque\"", TraditionalForm]},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Epilog->{
        LineBox[
         NCache[{{
            Rational[1, 2], 0}, {
            Rational[1, 2], 1}}, {{0.5, 0}, {0.5, 1}}]]},
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
      PlotLabel->None,
      PlotRange->{All, All},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], Scaled[{0.5, 0.5}], Center, 
     Scaled[{1, 1}]], InsetBox[
     TemplateBox[{
      "0.010000000000000002`","0.05`",FractionBox["1", "10"],FractionBox[
       "1", "5"],FractionBox["1", 
        RowBox[{"2", " ", 
          SqrtBox["3"]}]],FractionBox["1", "2"]},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox["\"\[Sigma]=\"", {
                 GrayLevel[0], FontWeight -> Bold, FontSize -> 8, FontFamily -> 
                 "Arial"}, Background -> Automatic, StripOnInput -> False]}, {
              
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #6}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontWeight -> Bold, FontSize -> 8, FontFamily -> 
          "Arial"}, Background -> Automatic, StripOnInput -> False], 
        TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, 
                    Frame -> True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold", ",", "8"}], "}"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"\[Sigma]=\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{1, 0.55}], ImageScaled[{0, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->False,
   AxesLabel->{
     FormBox["\"\[Mu]\"", TraditionalForm], 
     FormBox["\"Torque\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->False,
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   ImagePadding->All,
   Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
   PlotLabel->FormBox["\"Uniform distribution\"", TraditionalForm],
   PlotRange->Automatic,
   PlotRangeClipping->False,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
+1+SsCAm
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
ObWPrGFiI680D88JYvz9KfL/AQq9dsc=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1:eJxF13k4VG0fwPGpaLHVq0XePBpRSZKI8OBHKrRYekpKWaKeSNKGFEYkRdYW
su+VJUWlsdxUdpVIltAsZ8aMedqY0c4773WdZ+77n+/1uc657t+5zvnnPmoH
j+88NJ0iXtMolP9XBxaNTk1NIQq5dvmsjP7+Azv4utGKcRF2s2DfQa4A2z0l
a6CjFzvxi2Z76j1sYd6fJfpu2PTZHn5/101KHPbiraDB47fE/AJlpQ0qvyTW
em8zZ+7QD4nz5+cJ+y98l/iZS9tVBN8kVslSoaYwJyQuTQ2XNx7ENr/G/dH/
FtvtcnnPkg7s3FObYrIeYWva+E4UxmCv/1Ld8dAAu1FApTvpYjtxLxZ91cIO
fGd/wZiKTW9kb6iVwba4JZv3/L1I4tfX/BMODWAfjO8JmdmDHRGZ5WzTht3k
p6/QUYnt5J3y0/ce9ojnb578XezZe5uf2Wdhp/6lff9zKraWXWJm4jVsus1E
jF489jYrl7Pdl8XmJaL2SiOkdTLwdWek2PK0wPlXPJBMTvKql2Ficxq/Sn8/
jlom2/tbzogQbcDU7K5XKNpCNzWp8xDbn8rixF5FFutUf942FiH3M6yqt9IZ
yGAp83woX4gYfLa2KKYELf15mLbKVoiio5cHObCq0ZqyDNrJD2MosubcCV96
O2KcztF5e/sL+rrsRVHzg27knZ6Yl+7zGRmsdl3QPtCHnEP3qpcs+4jCTfpH
414PIU3BKpddmQI0HB3fPvyBgR5GdiX7JAtQUsXSuCkRA21UPddBixYg4aWA
L/+dZKD9jh1mpScFqGlN0C1LBSZKeOxHnWktQOnH2s/Y6TDR94gKzuNPo0i+
7r7j4WNM1KZi5r/EchQp5IZkxo0w0VE7h4ssNg9FBijGNrSz0ORW3Ter+3lo
7evsVp8uFkqynqd+5iUPjYW09yv0sxDdorN+1hMeev5CdMKay0Kz9R1+acfx
0I0tmeHBFDYqVHI4FWjEQ9x0c1WePhuxGPYecldH0MbBmu3MG2wUMLS2fPeF
ESQX3DNEpLORzMDcqczAEfTJ+4olO5eN1nW/Sl93cARRLFppnWVsRGu073Pa
MILsGm8N+zaxkepde/scJhelrL+qVCpko32n7M0MDblopOBe6LYdBIrpy/Aw
0uaipPkOE9t3EqjG7J+LJsu4qPzm6g+2ewikOvvyS3MFLrJkJzsbehCImf7U
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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
/wC/8L0S
         "]]}}}, {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {"\[Mu]", "Torque"}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, Epilog -> {
        Line[{{
           Rational[1, 2], 0}, {
           Rational[1, 2], 1}}]}, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
      PlotLabel -> "Uniform distribution", PlotRange -> {All, All}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]]}, {0.010000000000000002`, 0.05, 
        Rational[1, 10], 
        Rational[1, 5], Rational[1, 2] 3^Rational[-1, 2], 
        Rational[1, 2]}, LabelStyle -> {
         GrayLevel[0], Bold, 8}, LegendLabel -> "\[Sigma]=", LegendLayout -> 
       "Column"]], {1, 0.55}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.6845411384377728`*^9, 3.684541161355607*^9}, 
   3.684634498736293*^9, 3.684635722626712*^9, 3.6846680467359457`*^9, 
   3.6846703388968477`*^9, 3.684674397238345*^9, {3.684674428141814*^9, 
   3.6846744939879932`*^9}, 3.684674541001401*^9, 3.684688675957349*^9, 
   3.6848327763136806`*^9, 3.684832806455092*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"TorquePivotFreeUni", "[", 
   RowBox[{"\[Mu]_", ",", "\[Sigma]_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"lowlim", " ", "=", 
       RowBox[{"Max", "[", 
        RowBox[{
         RowBox[{"-", "1"}], ",", 
         RowBox[{"\[Mu]", "-", 
          RowBox[{
           SqrtBox["3"], " ", "\[Sigma]"}]}]}], "]"}]}], ",", 
      RowBox[{"uplim", " ", "=", "  ", 
       RowBox[{"Min", "[", 
        RowBox[{"1", ",", 
         RowBox[{"\[Mu]", "+", 
          RowBox[{
           SqrtBox["3"], " ", "\[Sigma]"}]}]}], "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"uplim", ">", "lowlim"}], ",", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         SuperscriptBox["lowlim", "2"], 
         RowBox[{"4", " ", 
          SqrtBox["3"], " ", "\[Sigma]"}]]}], "+", 
       FractionBox[
        SuperscriptBox["uplim", "2"], 
        RowBox[{"4", " ", 
         SqrtBox["3"], " ", "\[Sigma]"}]]}], ",", "0"}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.684538961696658*^9, 3.684539033841741*^9}, {
   3.68453908776854*^9, 3.6845390935628242`*^9}, 3.684539169612364*^9, {
   3.684540437551422*^9, 3.68454045745277*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"bestPushFreeNorm", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ans", "=", 
        RowBox[{"FindMaximum", "[", 
         RowBox[{
          RowBox[{
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"-", 
                  FractionBox[
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], 
                   RowBox[{"2", " ", 
                    SuperscriptBox["\[Sigma]", "2"]}]]}]]}], "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"-", 
                 FractionBox[
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Mu]"}], ")"}], "2"], 
                  RowBox[{"2", " ", 
                   SuperscriptBox["\[Sigma]", "2"]}]]}]]}], ")"}], " ", 
             "\[Sigma]"}], 
            SqrtBox[
             RowBox[{"2", " ", "\[Pi]"}]]], "+", 
           RowBox[{
            FractionBox["1", "2"], " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Erf", "[", 
               FractionBox[
                RowBox[{"1", "-", "\[Mu]"}], 
                RowBox[{
                 SqrtBox["2"], " ", "\[Sigma]"}]], "]"}], "+", 
              RowBox[{"Erf", "[", 
               FractionBox[
                RowBox[{"1", "+", "\[Mu]"}], 
                RowBox[{
                 SqrtBox["2"], " ", "\[Sigma]"}]], "]"}]}], ")"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Mu]", ",", "1"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", 
         RowBox[{"First", "@", "ans"}], ",", 
         RowBox[{"ans", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
        "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "0.01", ",", "2", ",", "0.01"}], "}"}]}], 
     "]"}]}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.684540302969158*^9, 3.684540310153585*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634498857087*^9, 3.684635722743629*^9, 
  3.684668046842411*^9, 3.684688676206601*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634498857087*^9, 3.684635722743629*^9, 
  3.684668046842411*^9, 3.684688676282116*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "sdprec"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Line search unable to find a sufficient increase in the \
function value with \[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digit \
precision. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/FindMaximum\\\", \
ButtonNote -> \\\"FindMaximum::sdprec\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634498857087*^9, 3.684635722743629*^9, 
  3.684668046842411*^9, 3.684688676375663*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634498857087*^9, 3.684635722743629*^9, 
  3.684668046842411*^9, 3.684688676519597*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(FindMaximum :: lstol\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634498857087*^9, 3.684635722743629*^9, 
  3.684668046842411*^9, 3.6846886765502787`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.40952399999999999913313786237267777324`5.632879271786659", ",", "Null"}],
   "}"}]], "Output",
 CellChangeTimes->{3.6845403113243923`*^9, 3.684634499216339*^9, 
  3.684635723100963*^9, 3.6846680472643347`*^9, 3.6846886765683537`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"bestPushFreeTri", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ans", "=", 
        RowBox[{"FindMaximum", "[", 
         RowBox[{
          RowBox[{"TorquePivotTriFree", "[", 
           RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Mu]", ",", 
            RowBox[{"Max", "[", 
             RowBox[{"1", ",", 
              RowBox[{
               RowBox[{
                SqrtBox["6"], "/", "2"}], "\[Sigma]"}]}], "]"}]}], "}"}]}], 
         "]"}]}], ";", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", 
         RowBox[{"First", "@", "ans"}], ",", 
         RowBox[{"ans", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
        "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "0.01", ",", "2", ",", "0.01"}], "}"}]}], 
     "]"}]}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.676466416448494*^9, 3.676466470673649*^9}, {
   3.6764665929400253`*^9, 3.6764667320443153`*^9}, {3.6764667913415413`*^9, 
   3.676466813481152*^9}, {3.6764670024882803`*^9, 3.676467011715851*^9}, {
   3.676468270631659*^9, 3.6764682776512947`*^9}, {3.684533837881112*^9, 
   3.6845338508256598`*^9}, {3.684540245279271*^9, 3.684540256086082*^9}, {
   3.684540289572055*^9, 3.68454029856402*^9}, 3.684540367414665*^9, {
   3.684541591262807*^9, 3.684541606783594*^9}, {3.684541640840365*^9, 
   3.684541686358395*^9}, {3.684541752098618*^9, 3.6845417951403437`*^9}, {
   3.684541849077037*^9, 3.684541877464965*^9}, 3.684542026268549*^9, {
   3.684542820490223*^9, 3.684542852974832*^9}, 3.6845435407925043`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499279896*^9, 3.684635723168494*^9, 
  3.684668047331626*^9, 3.684688676632853*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499279896*^9, 3.684635723168494*^9, 
  3.684668047331626*^9, 3.6846886766901817`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "sdprec"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Line search unable to find a sufficient increase in the \
function value with \[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digit \
precision. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/FindMaximum\\\", \
ButtonNote -> \\\"FindMaximum::sdprec\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499279896*^9, 3.684635723168494*^9, 
  3.684668047331626*^9, 3.684688676752748*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499279896*^9, 3.684635723168494*^9, 
  3.684668047331626*^9, 3.684688676812852*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(FindMaximum :: lstol\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499279896*^9, 3.684635723168494*^9, 
  3.684668047331626*^9, 3.684688676849736*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "fmgz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered a gradient that is effectively zero. The \
result returned may not be a maximum; it may be a minimum or a saddle point. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FindMaximum/fmgz\\\", \
ButtonNote -> \\\"FindMaximum::fmgz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499279896*^9, 3.684635723168494*^9, 
  3.684668047331626*^9, 3.684688676927682*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "fmgz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered a gradient that is effectively zero. The \
result returned may not be a maximum; it may be a minimum or a saddle point. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FindMaximum/fmgz\\\", \
ButtonNote -> \\\"FindMaximum::fmgz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499279896*^9, 3.684635723168494*^9, 
  3.684668047331626*^9, 3.684688676966372*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "fmgz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered a gradient that is effectively zero. The \
result returned may not be a maximum; it may be a minimum or a saddle point. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FindMaximum/fmgz\\\", \
ButtonNote -> \\\"FindMaximum::fmgz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499279896*^9, 3.684635723168494*^9, 
  3.684668047331626*^9, 3.684688676969781*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(FindMaximum :: fmgz\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499279896*^9, 3.684635723168494*^9, 
  3.684668047331626*^9, 3.684688677002331*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.50404300000000001880096078821225091815`5.7230675010468355", ",", 
   "Null"}], "}"}]], "Output",
 CellChangeTimes->{
  3.684540334625102*^9, 3.684540369361082*^9, {3.684541593635766*^9, 
   3.684541608197021*^9}, {3.684541642372292*^9, 3.684541657004161*^9}, 
   3.684541687640533*^9, 3.684541769109294*^9, 3.684541812340002*^9, {
   3.684541853702668*^9, 3.684541881268992*^9}, 3.684542027637506*^9, {
   3.684542834015074*^9, 3.684542854457673*^9}, 3.6845435463866653`*^9, 
   3.684634499714438*^9, 3.6846357236951437`*^9, 3.684668047759831*^9, 
   3.684688677084365*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"bestPushFreeTriBottom", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ans", "=", 
        RowBox[{"FindMaximum", "[", 
         RowBox[{
          RowBox[{"TorquePivotTriFree", "[", 
           RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Mu]", ",", "1"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", 
         RowBox[{"First", "@", "ans"}], ",", 
         RowBox[{"ans", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
        "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "0.01", ",", "2", ",", "0.01"}], "}"}]}], 
     "]"}]}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.684542894304944*^9, 3.684542899036315*^9}, 
   3.684543543966049*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499937738*^9, 3.684635723891653*^9, 
  3.684668048101269*^9, 3.684688677309507*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499937738*^9, 3.684635723891653*^9, 
  3.684668048101269*^9, 3.68468867736403*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "sdprec"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Line search unable to find a sufficient increase in the \
function value with \[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digit \
precision. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/FindMaximum\\\", \
ButtonNote -> \\\"FindMaximum::sdprec\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499937738*^9, 3.684635723891653*^9, 
  3.684668048101269*^9, 3.684688677423997*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499937738*^9, 3.684635723891653*^9, 
  3.684668048101269*^9, 3.684688677480736*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(FindMaximum :: lstol\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499937738*^9, 3.684635723891653*^9, 
  3.684668048101269*^9, 3.684688677516666*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "fmgz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered a gradient that is effectively zero. The \
result returned may not be a maximum; it may be a minimum or a saddle point. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FindMaximum/fmgz\\\", \
ButtonNote -> \\\"FindMaximum::fmgz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499937738*^9, 3.684635723891653*^9, 
  3.684668048101269*^9, 3.684688677592092*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "fmgz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered a gradient that is effectively zero. The \
result returned may not be a maximum; it may be a minimum or a saddle point. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FindMaximum/fmgz\\\", \
ButtonNote -> \\\"FindMaximum::fmgz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499937738*^9, 3.684635723891653*^9, 
  3.684668048101269*^9, 3.684688677633211*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "fmgz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered a gradient that is effectively zero. The \
result returned may not be a maximum; it may be a minimum or a saddle point. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FindMaximum/fmgz\\\", \
ButtonNote -> \\\"FindMaximum::fmgz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499937738*^9, 3.684635723891653*^9, 
  3.684668048101269*^9, 3.684688677636487*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(FindMaximum :: fmgz\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499937738*^9, 3.684635723891653*^9, 
  3.684668048101269*^9, 3.684688677666147*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.48775899999999999812061446391453500837`5.708805204906971", ",", "Null"}],
   "}"}]], "Output",
 CellChangeTimes->{3.6845428997410173`*^9, 3.684543548713526*^9, 
  3.684634500377095*^9, 3.684635724313336*^9, 3.684668048581306*^9, 
  3.684688677741507*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"bestPushFreeUni", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ans", "=", 
        RowBox[{"FindMaximum", "[", 
         RowBox[{
          RowBox[{"TorquePivotFreeUni", "[", 
           RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Mu]", ",", 
            RowBox[{"1", "+", 
             RowBox[{
              RowBox[{
               SqrtBox["3"], "/", "2"}], "\[Sigma]"}]}]}], "}"}]}], "]"}]}], 
       ";", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", 
         RowBox[{"First", "@", "ans"}], ",", 
         RowBox[{"ans", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
        "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "0.01", ",", "2", ",", "0.01"}], "}"}]}], 
     "]"}]}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.684540465185493*^9, 3.684540465468801*^9}, {
   3.684540516819571*^9, 3.684540517184272*^9}, 3.684540977979784*^9, 
   3.684541012876995*^9, {3.6845412684218693`*^9, 3.684541268771349*^9}, {
   3.684541310836534*^9, 3.684541326926167*^9}, {3.684541558220834*^9, 
   3.6845415595286617`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634500440503*^9, 3.684635724384885*^9, 
  3.6846680486559772`*^9, 3.68468867780759*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634500440503*^9, 3.684635724384885*^9, 
  3.6846680486559772`*^9, 3.684688677862729*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634500440503*^9, 3.684635724384885*^9, 
  3.6846680486559772`*^9, 3.6846886779203787`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(FindMaximum :: lstol\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634500440503*^9, 3.684635724384885*^9, 
  3.6846680486559772`*^9, 3.684688677953452*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "fmdig"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Working precision \[NoBreak]\\!\\(MachinePrecision\\)\
\[NoBreak] is insufficient to achieve the requested accuracy or precision. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FindMaximum/fmdig\\\", \
ButtonNote -> \\\"FindMaximum::fmdig\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634500440503*^9, 3.684635724384885*^9, 
  3.6846680486559772`*^9, 3.684688677972294*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.3237559999999999882369650094915414229`5.530817738995173", ",", "Null"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.684540466599551*^9, 3.68454051817599*^9, 3.684540979097865*^9, 
   3.684541014482897*^9, 3.684541269464591*^9, {3.684541311972795*^9, 
   3.684541327816001*^9}, 3.684541560253099*^9, 3.6846345007000237`*^9, 
   3.6846357249512463`*^9, 3.684668048943243*^9, 3.684688678073703*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"bestPushFreeNorm", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"bestPushFreeNorm", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"bestPushFreeTri", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"bestPushFreeTri", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"bestPushFreeUni", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"bestPushFreeUni", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], 
      "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Sigma] of swarm\>\"", ",", "\"\<Max Torque\>\""}], 
     "}"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Max possible torque on  a free object (-1 to 1)\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<Normal\>\"", ",", "\"\<Triangle\>\"", ",", "\"\<Uniform\>\""}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Right", ",", "Top"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<../abecker/SwarmPublications/JournalTorqueControl/pictures/pdf/\
TorqueFreeComparison.pdf\>\"", ",", "%"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"bestPushFreeNorm", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"bestPushFreeNorm", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"bestPushFreeTri", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"bestPushFreeTri", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"bestPushFreeUni", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"bestPushFreeUni", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"bestPushFreeTriBottom", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"bestPushFreeTriBottom", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}], 
      "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[Sigma] of swarm\>\"", ",", 
      "\"\<Optimal push location (\[Mu])\>\""}], "}"}]}], ",", 
   RowBox[{"Filling", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", "\[Rule]", 
      RowBox[{"{", "4", "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", "Automatic", ",", "Automatic", ",", 
      RowBox[{"ColorData", "[", 
       RowBox[{"97", ",", "2"}], "]"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<Normal\>\"", ",", "\"\<Triangle\>\"", ",", "\"\<Uniform\>\""}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Left", ",", "Top"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "2"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"2", "/", "3"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"100", ",", 
           RowBox[{"2", "/", "3"}]}], "}"}]}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{"\[Sqrt]", "2"}], "/", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"100", ",", 
           RowBox[{
            RowBox[{"\[Sqrt]", "2"}], "/", "2"}]}], "}"}]}], "}"}], "]"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"1", "/", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"100", ",", 
           RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}], "]"}]}], 
     "\[IndentingNewLine]", "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Where to push a free object (-1 to 1) to maximize torque\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<../abecker/SwarmPublications/JournalTorqueControl/pictures/pdf/\
TorqueFreeBestPush.pdf\>\"", ",", "%"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.676466820390336*^9, 3.676466989524275*^9}, {
  3.676467176427374*^9, 3.676467178092044*^9}, {3.676467921880308*^9, 
  3.676467966912457*^9}, {3.676468003785376*^9, 3.6764681638781776`*^9}, {
  3.676468291519845*^9, 3.67646830329661*^9}, {3.6764683388165216`*^9, 
  3.676468372623979*^9}, {3.684533929234049*^9, 3.684533939348472*^9}, {
  3.684540376345602*^9, 3.6845403861440163`*^9}, {3.684540478831476*^9, 
  3.684540504167663*^9}, {3.684540558946384*^9, 3.684540561457901*^9}, {
  3.684540710649729*^9, 3.684540739068645*^9}, {3.684540801207048*^9, 
  3.684540810028236*^9}, {3.6845422568892612`*^9, 3.6845423290434504`*^9}, {
  3.6845429179330807`*^9, 3.684542953671657*^9}, {3.6845430966267433`*^9, 
  3.684543119304673*^9}, {3.684543323600518*^9, 3.684543327384514*^9}, {
  3.684674617451166*^9, 3.68467463543652*^9}, {3.6846747228371563`*^9, 
  3.6846747443712683`*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.008333333333333333], AbsoluteThickness[1.6], LineBox[CompressedData["

1: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
GHmoWeuP+ssyosLwf1XPWsI=
        "]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.008333333333333333], AbsoluteThickness[1.6], LineBox[CompressedData["

1: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

        "]]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
       0.008333333333333333], AbsoluteThickness[1.6], LineBox[CompressedData["

1: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

        "]]}}, {}}, InsetBox[
     TemplateBox[{"\"Normal\"","\"Triangle\"","\"Uniform\""},
      "PointLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}], "}"}]}], 
           ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
         "]"}]& )], Scaled[{0.99, 0.99}], ImageScaled[{1, 1}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"\[Sigma] of swarm\"", TraditionalForm], 
     FormBox["\"Max Torque\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->Medium,
   Method->{},
   PlotLabel->FormBox[
    "\"Max possible torque on  a free object (-1 to 1)\"", TraditionalForm],
   PlotRange->{{0, 2.}, {0, 0.9826794882812013}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.008333333333333333], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Line[CompressedData["
1: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
GHmoWeuP+ssyosLwf1XPWsI=
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.008333333333333333], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Line[CompressedData["
1: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

          "]]}, {
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[0.008333333333333333], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Line[CompressedData["
1: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

          "]]}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
      PlotRange -> {{0, 2.}, {0, 0.9826794882812013}}, DisplayFunction -> 
      Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
      AxesLabel -> {"\[Sigma] of swarm", "Max Torque"}, AxesOrigin -> {0, 0}, 
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, PlotLabel -> 
      "Max possible torque on  a free object (-1 to 1)", 
      PlotRange -> {{0, 2.}, {0, 0.9826794882812013}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      PointLegend[{
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {"Normal", "Triangle", "Uniform"}, 
       Joined -> {{True, True, True}}, LabelStyle -> {}, LegendLayout -> 
       "Column", 
       LegendMarkers -> {{False, Automatic}, {False, Automatic}, {
         False, Automatic}}]], {Right, Top}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.68453389843923*^9, 3.6845339398526583`*^9, 3.684540265088787*^9, 
   3.684540386692976*^9, {3.684540505027707*^9, 3.6845405206929827`*^9}, 
   3.684540562129772*^9, 3.68454073991187*^9, 3.6845408107933702`*^9, 
   3.684540981636374*^9, 3.6845410168946857`*^9, {3.684541272726653*^9, 
   3.684541275069581*^9}, {3.6845413149953117`*^9, 3.684541330390424*^9}, 
   3.684541564380101*^9, {3.6845415972458344`*^9, 3.684541611404339*^9}, {
   3.68454164531647*^9, 3.684541659352977*^9}, 3.6845416903810062`*^9, 
   3.6845417731341143`*^9, 3.684541815751561*^9, {3.684541858016691*^9, 
   3.684541884938489*^9}, 3.684542038494244*^9, {3.684542261702969*^9, 
   3.684542329744802*^9}, {3.684542837108465*^9, 3.684542857215396*^9}, 
   3.684542954771956*^9, 3.684543120000651*^9, 3.684543327850935*^9, 
   3.684543551271291*^9, 3.684634500796878*^9, 3.684635725419922*^9, 
   3.6846680491599283`*^9, 3.684674755019947*^9, 3.6846886781670933`*^9}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, GraphicsComplexBox[CompressedData["
1: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
ltTofbp4DfqC+XWjerv3GvSFZ39HunipNOgLa88qrkeO1qIvmMTs7HRrtRZ9
Ie0IL6DstBZ9YWnkpnea11r0BfWuZjtbqRZ94XrwmhOetjr0hbkbv7bu9dGh
LwjWeC+8cVKHvpCwovRe6Qsd+gJ4zu+t5v/f+bHpjfmMQaH6/PglMDny9yZ9
fnSaG/nay5uL+dHCr5Px9nf6/Oj5LnxOzOQ2zI/zDlWfuHVHf97sbxVckts+
j6j86LNmn1lDnP68OXOhdpnWkIP5seDQo0SLP/T5sdF6Ss0kpj4/njfOtFyy
Qp8fLxpU+wd/0OfHtOsNN05M1edHucPythv3mJgfNx+/PebNUCbmxyVx4aF1
eJ6aBw3HzmWoOzEwP3offikfENaM+dFjjcPk31qaMD+KnF0jF/s2YX6cPf1Q
9taiRsyP8qvWHY9Pb8T8eHf2E/eUBw2YH8u3fT2eY9OA+dFiSXXRt/h6zI+V
nt96q0zqMT++dGvz6r+nDvOjdO4W/wKzOsyPViE1lulJdZgfm7rH1pwZU4/5
cadTr4u7s+oxP3rwdq9YObcB82POIXFfqGzA/Lj11Ppi64BGzI/vuu2INRY3
Yn58Opo7u+VAE+bHX6uduhX1bMb8OCtuZ+79S82YH4ec/OXIOXv9ebPB7Reu
4Zn682aBKkrj667Pj8dfjnk+vVyfHxVMzh6b9SzMj4+8gxxMBCzMj9qjLnxO
JBvzY9ad3anF3VowPx62023NuNCC+bF85f3h5205mB/vX6ptjnjMwfzISgu9
6jezFfNjauavq1w+tmJ+XDbDyWLEmjbMj5yF9p9NuW2YHz+deJ3YtoeL+XEB
965HqSkP8+PzKX49Hp3nYX48cPdxYIEZH/Nj+YBRM1+s4GN+bLrTdVh6Eh/z
41RBnNE1Jh/zo/dV29ozYwSYHzVnOVlH/hBgfuwlX3t5d5YA82PcxFN7g4yE
mB/DFie27wch5kf+jqBJC04LMT+mWMja94cQ86NLY6pknKUI8+Osur0V1u15
g8qPbk5h9/rcFWF+nHwyrn3/iDA/fig5FSyfLMb8eNj82vyWA2LMj5OPPLOv
fifG/Li+s1X3op4SzI9Ds4uYL70lmB9rhqS9vX9JgvlxbzUv+XqTBPPj6E0p
B87ZSzE/Wp+qXx0VKsX8OBe+zQjPlGJ+XFDhZ7nZQIb58d0Sfvv+lGF+DIWS
qoWxMsyP40YdzZpeLsP8+Ljv9QsTBskxP36auXy3zXo55scqpfmyfqlyzI+B
64IcTQRyzI8Gm5f3UzoqMD8WDfsi4UQqMD/mu9qW1OQqMD+uCOlzr7ibEvPj
pj39Y7KXKDE/hll03pxxQYn5cci4/XP+qVdifvxbJh5x3laF+XHPOd/Ox9rn
NZUf06w3NEU8VmF+vLC9LHuLRoX50Xt0zTW/mWrMj2ZPufs9TqgxP771DFjj
8lGN+dHOvcNUh4EazI9uA0f9MmKNBvOjjU+Uuv8NDebHqNo9laZcDebH4xZX
n6gctJgfu+ztEN+G5zcCsF4p2F6bo8X8CBNXLy011WF+NA03cXjtodOfN//5
qf39qMP8eL7EiJvy7b/zl//OX/47f/nv/OW/85f/7/yFmhPU/KRqan5SNTU/
qZqan1RNzU+qpuYnVVPzk6qp+UnVOD9JTc1PqqbmJ1VT85OqqflJ1dT8pGpq
flI1NT9xTpL5SdX0Z2p+UjU1P39en76m5ufP69XX1Pz8ef36/xNT8/Pnfuhr
an7+3B99Tc3Pn/slxJqanz/3T19T5y9UTZ2/UDV1/vJzf/XnVtT5y8/91tfU
+cvP/dfX1PnLzxzENB5iGg8xjYeYxkNM4yGm8RDTeEhoPCQ0HhIaDwmNh4TG
Q0LjIaXxkNJ4SGk8pDQeUhoPKY2HjMZDRuMho/GQ0XjIaDxkNB5yGg85jYec
xkNO4yGn8ZDTeMhpPBQ0HgoaDwWNh4LGQ0HjoaDxUNJ4KGk8lDQe+pr6f+3P
PJQ0HioaDxWNh4rGQ0XjoaLxUNF4qGk81DQeahoPNY2HmsZDTeOhpvHQ0Hho
aDw0NB4aGg8NjYeGxkNL46Gl8dDSeGhpPLQ0HloaDx2Nh47GQ0fjoaPx0NF4
6Gg8KP9on6f9rk23/1XvJdNGdQt5bqXE+sVxo9k3woVY/w+o/Ucb
      
      "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, 
        {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[None],
          GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1NVSEAAQBVDAVsBuUcHA7gTFRlAs7MAg7O7u7u52/BO7uxtU7E6sw/hw
9r7uztzZ8OQJieODAgICAhln3OM+D3jIIx7zhHQyeMoznpPJC17yite84S3v
eM8HPvKJz3zhK9/4zg9+ksUvfvOHv9lLWS6QIHKQk1zkJg95yUd+ChBMCKEU
pBCFKUJRilGcEpSkFKUpQ1nKEUZ5KlCRcCKoRGWqUJVIqlGdGtSkFrWpQ13q
UZ8GNKQRjWlCU5rRnCiiaUFLYmhFa9rQlna0pwOxdCSOeDrRmQS60JVudKcH
ifSkF73pQ1/60Z8BDGQQSQxmCEMZRjIppJLGcEYwklGMZgxjGUd2qSYwkUlM
ZgpTmcZ0ZjCTWcxmDnOZx3wWsJBFLGYJS1nGclawklWsZg1rWcd6NrCRTWxm
C1vZxnZ2sJNd7GYPe9nHfg5wkEMc5kj2zTp5NPt+mUYqKSQzjKEMYTBJDGIg
A+hPP/rSh970oieJ9KA73ehKFxLoTCfiiaMjsXSgPe1oSxta04oYWtKCaKJo
TjOa0oTGNKIhDahPPepSh9rUoiY1qE41IqlKFSpTiQjCqUgFyhNGOcpShtKU
oiQlKE4xilKEwhSiIKGEEEwB8pOPvOQhN7nISQ6CCAz8/8j+ij/85hdZ/OQH
3/nGV77wmU985APvecdb3vCaV7zkBZk85xlPySCdJzzmEQ95wH3ucZc73OYW
N7nBda5xlStc5hIXucB5znGWM5zmFCc5wXGO8Q/iDaQB
           
           "]]]}, {}, {}, {}, {}, {}, {}}, {{}, {}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.008333333333333333], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJwV01c7FgAAhuGPor2ntBRpKElDU4OGNGgXKU0qGmjRUtIgLW2kqUGivaQ/
1u3gvp7D9+iNyM5PzwsKBAL/6GgwnehMCKF0oSvd6E4PetKL3vShL/3ozwAG
MojBDGEoYQwjnOGMYCSjGE0EYxhLJFGMI5rxTGAik4hhMlOIZSpxTCOe6cxg
JrNIYDZzmMs85rOARBayiMUsIYlklrKM5awghZWksorVrGEtaaSzjvVsYCOb
2MwWtrKNDDLZThY72Ek2u9jNHvayj/3kkMsBDnKIPPI5zBGOcowCCiniOCc4
ySlOU0wJZzjLOc5zgVIucokyLlPOFa5yjetUUMkNqrjJLW5zh7tUc4/7POAh
j3jME2qopY6n1POM57zgJa94TQNveMs73tNIEx9o5iMttPKJz3zhK9/4zg9+
8ovf/KGNv7R3bDvBfzPvTQA=
          "]]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
         0.008333333333333333], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJwNz9dCSAEAANBbiDSMQkUloRSyykoDJQotDavJIz9Vf2JUymopEVFCWRkt
1Xk4H3BSmu9X3gsJgqCNBzzkEY/poJMuntBND095xnNe8JJe+uhngEFeMcQw
rxnhDW8Z5R3vGeMDHxlngk9M8pkvfGWKab7xnR/85Bcz/OYPf/nHLHPMs8Ai
/1limUA8hFBWsZo1hLGWdYSznggiiSKaDWxkE5uJIZYtbGUbccSTwHZ2kEgS
yewkhV2ksps97CWNdPaRQSb7OcBBsjjEYY5wlGNkk8NxTnCSU5wmlzPkkU8B
hZzlHOcpopgLlHCRS5RSxmWucJVyKqikimquUUMtddRznRvc5Ba3aaCRJppp
oZU73KU9NAhWAN2dTMU=
          "]]}, 
        {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
         0.008333333333333333], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJwVz0NyRAEARdGf7CRbyhIyijvo2LZt27ZtczU5GZyqO3iTFxUTik6OCIIg
TKyII54EEknifxAihVTSSCdMBplkkU0OueSRTwGFFFFMCaWUUU4FlVRRTQ21
1FFPA4000UwLrbTRTgeddNFND7300c8AgwwxzAijjDHOBJNMMc0Ms8wxzwKL
LLHMCqussc4Gm2yxzQ677LHPAYccccwJp5xxzgWXXHHNDbfccc8DjzzxzAuv
vPHOB5988c0Pv/+fIoPgD1y9S5Y=
          "]]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
         0.008333333333333333], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJwVzldbiAEAQOGvSGZlhpQys7eMhlH2DGWPkq2ySQjZe1Nk/Rk/QjYVsldl
9Lp4n+dcnoScgsz8kCAIHvFYVPKEpzzjOS94ySte84YqqqnhLe94Ty0f+Mgn
PvOFr3zjOz/4yS/qqKeB3/zhL//+T4UGQQihNKEpYTQjnOa0oCWtaE0bIogk
ira0oz0d6EgnoulMF7oSQzdiiaM78STQg570ojd96Esi/ejPAAYyiMEMYSjD
GM4IRjKK0SQxhrGMYzzJpJBKGhOYyCQmk04GU5jKNKYzg5nMYjZzmMs85pPJ
AhayiCyyWcwSlrKM5axgJatYzRpyyGUteaxjPRvYyCY2s4Wt5FNAIdvYzg52
sovd7GEv+yhiP8Uc4CCHKOEwRzhKKcc4zglOcorTnOEs5zjPBS5yictc4SrX
uM4NbnKLMsq5zR0quMs97vOAhzQCzChZhA==
          "]]}}}], {}}, InsetBox[
     TemplateBox[{"\"Normal\"","\"Triangle\"","\"Uniform\""},
      "PointLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                 "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
         "]"}]& )], Scaled[{0.01, 0.99}], ImageScaled[{0, 1}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"\[Sigma] of swarm\"", TraditionalForm], 
     FormBox["\"Optimal push location (\[Mu])\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Epilog->{
     Dashing[{Small, Small}], 
     LineBox[
      NCache[{{0, 
         Rational[2, 3]}, {100, 
         Rational[2, 3]}}, {{0, 0.6666666666666666}, {
        100, 0.6666666666666666}}]], 
     LineBox[
      NCache[{{0, 2^Rational[-1, 2]}, {100, 2^Rational[-1, 2]}}, {{
        0, 0.7071067811865475}, {100, 0.7071067811865475}}]], 
     LineBox[
      NCache[{{0, 
         Rational[1, 2]}, {100, 
         Rational[1, 2]}}, {{0, 0.5}, {100, 0.5}}]]},
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->Medium,
   Method->{},
   PlotLabel->FormBox[
    "\"Where to push a free object (-1 to 1) to maximize torque\"", 
     TraditionalForm],
   PlotRange->{{0, 2.}, {0, 2}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, 
      GraphicsComplex[CompressedData["
1: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
ltTofbp4DfqC+XWjerv3GvSFZ39HunipNOgLa88qrkeO1qIvmMTs7HRrtRZ9
Ie0IL6DstBZ9YWnkpnea11r0BfWuZjtbqRZ94XrwmhOetjr0hbkbv7bu9dGh
LwjWeC+8cVKHvpCwovRe6Qsd+gJ4zu+t5v/f+bHpjfmMQaH6/PglMDny9yZ9
fnSaG/nay5uL+dHCr5Px9nf6/Oj5LnxOzOQ2zI/zDlWfuHVHf97sbxVckts+
j6j86LNmn1lDnP68OXOhdpnWkIP5seDQo0SLP/T5sdF6Ss0kpj4/njfOtFyy
Qp8fLxpU+wd/0OfHtOsNN05M1edHucPythv3mJgfNx+/PebNUCbmxyVx4aF1
eJ6aBw3HzmWoOzEwP3offikfENaM+dFjjcPk31qaMD+KnF0jF/s2YX6cPf1Q
9taiRsyP8qvWHY9Pb8T8eHf2E/eUBw2YH8u3fT2eY9OA+dFiSXXRt/h6zI+V
nt96q0zqMT++dGvz6r+nDvOjdO4W/wKzOsyPViE1lulJdZgfm7rH1pwZU4/5
cadTr4u7s+oxP3rwdq9YObcB82POIXFfqGzA/Lj11Ppi64BGzI/vuu2INRY3
Yn58Opo7u+VAE+bHX6uduhX1bMb8OCtuZ+79S82YH4ec/OXIOXv9ebPB7Reu
4Zn682aBKkrj667Pj8dfjnk+vVyfHxVMzh6b9SzMj4+8gxxMBCzMj9qjLnxO
JBvzY9ad3anF3VowPx62023NuNCC+bF85f3h5205mB/vX6ptjnjMwfzISgu9
6jezFfNjauavq1w+tmJ+XDbDyWLEmjbMj5yF9p9NuW2YHz+deJ3YtoeL+XEB
965HqSkP8+PzKX49Hp3nYX48cPdxYIEZH/Nj+YBRM1+s4GN+bLrTdVh6Eh/z
41RBnNE1Jh/zo/dV29ozYwSYHzVnOVlH/hBgfuwlX3t5d5YA82PcxFN7g4yE
mB/DFie27wch5kf+jqBJC04LMT+mWMja94cQ86NLY6pknKUI8+Osur0V1u15
g8qPbk5h9/rcFWF+nHwyrn3/iDA/fig5FSyfLMb8eNj82vyWA2LMj5OPPLOv
fifG/Li+s1X3op4SzI9Ds4uYL70lmB9rhqS9vX9JgvlxbzUv+XqTBPPj6E0p
B87ZSzE/Wp+qXx0VKsX8OBe+zQjPlGJ+XFDhZ7nZQIb58d0Sfvv+lGF+DIWS
qoWxMsyP40YdzZpeLsP8+Ljv9QsTBskxP36auXy3zXo55scqpfmyfqlyzI+B
64IcTQRyzI8Gm5f3UzoqMD8WDfsi4UQqMD/mu9qW1OQqMD+uCOlzr7ibEvPj
pj39Y7KXKDE/hll03pxxQYn5cci4/XP+qVdifvxbJh5x3laF+XHPOd/Ox9rn
NZUf06w3NEU8VmF+vLC9LHuLRoX50Xt0zTW/mWrMj2ZPufs9TqgxP771DFjj
8lGN+dHOvcNUh4EazI9uA0f9MmKNBvOjjU+Uuv8NDebHqNo9laZcDebH4xZX
n6gctJgfu+ztEN+G5zcCsF4p2F6bo8X8CBNXLy011WF+NA03cXjtodOfN//5
qf39qMP8eL7EiJvy7b/zl//OX/47f/nv/OW/85f/7/yFmhPU/KRqan5SNTU/
qZqan1RNzU+qpuYnVVPzk6qp+UnVOD9JTc1PqqbmJ1VT85OqqflJ1dT8pGpq
flI1NT9xTpL5SdX0Z2p+UjU1P39en76m5ufP69XX1Pz8ef36/xNT8/Pnfuhr
an7+3B99Tc3Pn/slxJqanz/3T19T5y9UTZ2/UDV1/vJzf/XnVtT5y8/91tfU
+cvP/dfX1PnLzxzENB5iGg8xjYeYxkNM4yGm8RDTeEhoPCQ0HhIaDwmNh4TG
Q0LjIaXxkNJ4SGk8pDQeUhoPKY2HjMZDRuMho/GQ0XjIaDxkNB5yGg85jYec
xkNO4yGn8ZDTeMhpPBQ0HgoaDwWNh4LGQ0HjoaDxUNJ4KGk8lDQe+pr6f+3P
PJQ0HioaDxWNh4rGQ0XjoaLxUNF4qGk81DQeahoPNY2HmsZDTeOhpvHQ0Hho
aDw0NB4aGg8NjYeGxkNL46Gl8dDSeGhpPLQ0HloaDx2Nh47GQ0fjoaPx0NF4
6Gg8KP9on6f9rk23/1XvJdNGdQt5bqXE+sVxo9k3woVY/w+o/Ucb
       
       "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {
          EdgeForm[], 
          Directive[
           RGBColor[0.880722, 0.611041, 0.142051], 
           Opacity[0.2]], 
          GraphicsGroup[{
            Polygon[CompressedData["
1:eJwl1NVSEAAQBVDAVsBuUcHA7gTFRlAs7MAg7O7u7u52/BO7uxtU7E6sw/hw
9r7uztzZ8OQJieODAgICAhln3OM+D3jIIx7zhHQyeMoznpPJC17yite84S3v
eM8HPvKJz3zhK9/4zg9+ksUvfvOHv9lLWS6QIHKQk1zkJg95yUd+ChBMCKEU
pBCFKUJRilGcEpSkFKUpQ1nKEUZ5KlCRcCKoRGWqUJVIqlGdGtSkFrWpQ13q
UZ8GNKQRjWlCU5rRnCiiaUFLYmhFa9rQlna0pwOxdCSOeDrRmQS60JVudKcH
ifSkF73pQ1/60Z8BDGQQSQxmCEMZRjIppJLGcEYwklGMZgxjGUd2qSYwkUlM
ZgpTmcZ0ZjCTWcxmDnOZx3wWsJBFLGYJS1nGclawklWsZg1rWcd6NrCRTWxm
C1vZxnZ2sJNd7GYPe9nHfg5wkEMc5kj2zTp5NPt+mUYqKSQzjKEMYTBJDGIg
A+hPP/rSh970oieJ9KA73ehKFxLoTCfiiaMjsXSgPe1oSxta04oYWtKCaKJo
TjOa0oTGNKIhDahPPepSh9rUoiY1qE41IqlKFSpTiQjCqUgFyhNGOcpShtKU
oiQlKE4xilKEwhSiIKGEEEwB8pOPvOQhN7nISQ6CCAz8/8j+ij/85hdZ/OQH
3/nGV77wmU985APvecdb3vCaV7zkBZk85xlPySCdJzzmEQ95wH3ucZc73OYW
N7nBda5xlStc5hIXucB5znGWM5zmFCc5wXGO8Q/iDaQB
             
             "]]}]}, {}, {}, {}, {}, {}, {}}, {{}, {}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1:eJwV01c7FgAAhuGPor2ntBRpKElDU4OGNGgXKU0qGmjRUtIgLW2kqUGivaQ/
1u3gvp7D9+iNyM5PzwsKBAL/6GgwnehMCKF0oSvd6E4PetKL3vShL/3ozwAG
MojBDGEoYQwjnOGMYCSjGE0EYxhLJFGMI5rxTGAik4hhMlOIZSpxTCOe6cxg
JrNIYDZzmMs85rOARBayiMUsIYlklrKM5awghZWksorVrGEtaaSzjvVsYCOb
2MwWtrKNDDLZThY72Ek2u9jNHvayj/3kkMsBDnKIPPI5zBGOcowCCiniOCc4
ySlOU0wJZzjLOc5zgVIucokyLlPOFa5yjetUUMkNqrjJLW5zh7tUc4/7POAh
j3jME2qopY6n1POM57zgJa94TQNveMs73tNIEx9o5iMttPKJz3zhK9/4zg9+
8ovf/KGNv7R3bDvBfzPvTQA=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1:eJwNz9dCSAEAANBbiDSMQkUloRSyykoDJQotDavJIz9Vf2JUymopEVFCWRkt
1Xk4H3BSmu9X3gsJgqCNBzzkEY/poJMuntBND095xnNe8JJe+uhngEFeMcQw
rxnhDW8Z5R3vGeMDHxlngk9M8pkvfGWKab7xnR/85Bcz/OYPf/nHLHPMs8Ai
/1limUA8hFBWsZo1hLGWdYSznggiiSKaDWxkE5uJIZYtbGUbccSTwHZ2kEgS
yewkhV2ksps97CWNdPaRQSb7OcBBsjjEYY5wlGNkk8NxTnCSU5wmlzPkkU8B
hZzlHOcpopgLlHCRS5RSxmWucJVyKqikimquUUMtddRznRvc5Ba3aaCRJppp
oZU73KU9NAhWAN2dTMU=
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1:eJwVz0NyRAEARdGf7CRbyhIyijvo2LZt27ZtczU5GZyqO3iTFxUTik6OCIIg
TKyII54EEknifxAihVTSSCdMBplkkU0OueSRTwGFFFFMCaWUUU4FlVRRTQ21
1FFPA4000UwLrbTRTgeddNFND7300c8AgwwxzAijjDHOBJNMMc0Ms8wxzwKL
LLHMCqussc4Gm2yxzQ677LHPAYccccwJp5xxzgWXXHHNDbfccc8DjzzxzAuv
vPHOB5988c0Pv/+fIoPgD1y9S5Y=
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           AbsoluteThickness[1.6], 
           RGBColor[0.880722, 0.611041, 0.142051]], 
          Line[CompressedData["
1:eJwVzldbiAEAQOGvSGZlhpQys7eMhlH2DGWPkq2ySQjZe1Nk/Rk/QjYVsldl
9Lp4n+dcnoScgsz8kCAIHvFYVPKEpzzjOS94ySte84YqqqnhLe94Ty0f+Mgn
PvOFr3zjOz/4yS/qqKeB3/zhL//+T4UGQQihNKEpYTQjnOa0oCWtaE0bIogk
ira0oz0d6EgnoulMF7oSQzdiiaM78STQg570ojd96Esi/ejPAAYyiMEMYSjD
GM4IRjKK0SQxhrGMYzzJpJBKGhOYyCQmk04GU5jKNKYzg5nMYjZzmMs85pPJ
AhayiCyyWcwSlrKM5axgJatYzRpyyGUteaxjPRvYyCY2s4Wt5FNAIdvYzg52
sovd7GEv+yhiP8Uc4CCHKOEwRzhKKcc4zglOcorTnOEs5zjPBS5yictc4SrX
uM4NbnKLMsq5zR0quMs97vOAhzQCzChZhA==
           "]]}}}], {}}, {
     DisplayFunction -> Identity, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
      PlotRange -> {{0, 2.}, {0, 2}}, DisplayFunction -> Identity, 
      AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
      AxesLabel -> {"\[Sigma] of swarm", "Optimal push location (\[Mu])"}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, Epilog -> {
        Dashing[{Small, Small}], 
        Line[{{0, 
           Rational[2, 3]}, {100, 
           Rational[2, 3]}}], 
        Line[{{0, 2^Rational[-1, 2]}, {100, 2^Rational[-1, 2]}}], 
        Line[{{0, 
           Rational[1, 2]}, {100, 
           Rational[1, 2]}}]}, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], Method -> {}, PlotLabel -> 
      "Where to push a free object (-1 to 1) to maximize torque", 
      PlotRange -> {{0, 2.}, {0, 2}}, PlotRangeClipping -> True, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      PointLegend[{
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Directive[
         PointSize[0.008333333333333333], 
         AbsoluteThickness[1.6], 
         RGBColor[0.880722, 0.611041, 0.142051]]}, {
       "Normal", "Triangle", "Uniform"}, Joined -> {{True, True, True, True}},
        LabelStyle -> {}, LegendLayout -> "Column", 
       LegendMarkers -> {{False, Automatic}, {False, Automatic}, {
         False, Automatic}, {False, Automatic}}]], {Left, Top}, Identity]]& ],
  
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.68453389843923*^9, 3.6845339398526583`*^9, 3.684540265088787*^9, 
   3.684540386692976*^9, {3.684540505027707*^9, 3.6845405206929827`*^9}, 
   3.684540562129772*^9, 3.68454073991187*^9, 3.6845408107933702`*^9, 
   3.684540981636374*^9, 3.6845410168946857`*^9, {3.684541272726653*^9, 
   3.684541275069581*^9}, {3.6845413149953117`*^9, 3.684541330390424*^9}, 
   3.684541564380101*^9, {3.6845415972458344`*^9, 3.684541611404339*^9}, {
   3.68454164531647*^9, 3.684541659352977*^9}, 3.6845416903810062`*^9, 
   3.6845417731341143`*^9, 3.684541815751561*^9, {3.684541858016691*^9, 
   3.684541884938489*^9}, 3.684542038494244*^9, {3.684542261702969*^9, 
   3.684542329744802*^9}, {3.684542837108465*^9, 3.684542857215396*^9}, 
   3.684542954771956*^9, 3.684543120000651*^9, 3.684543327850935*^9, 
   3.684543551271291*^9, 3.684634500796878*^9, 3.684635725419922*^9, 
   3.6846680491599283`*^9, 3.684674755019947*^9, 3.684688678433922*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"sigs", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "1.1", ",", "1.2", ",", "1.3", ",", "1.4", ",", "1.5", ",", 
       "1.6", ",", "2"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"TODO", ":", " ", 
     RowBox[{
     "place", " ", "legend", " ", "inside", " ", "the", " ", "plot"}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"TorqueFreeNorm", "[", 
         RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Sigma]", ",", "sigs"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Mu]", ",", 
       RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "sigs"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Mu] (pushing location)\>\"", ",", "\"\<Torque\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Triangular distribution\>\""}], ",", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "]"}], "}"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6846738840081873`*^9, 3.6846738957255077`*^9}}],

Cell[BoxData[
 TemplateBox[{
  GraphicsBox[{}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[Mu] (pushing location)\"", TraditionalForm], 
       FormBox["\"Torque\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Epilog -> {
       LineBox[{{1, 0}, {1, 1}}]}, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotLabel -> FormBox["\"Triangular distribution\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"1", "1.1`", "1.2`", "1.3`", "1.4`", "1.5`", "1.6`", "2"}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 0.75, 0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.684673899353324*^9, 3.684688678883442*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sigs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "1.1", ",", "1.2", ",", "1.3", ",", "1.4", ",", "1.5", ",", 
      "1.6", ",", "2"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"TODO", ":", " ", 
    RowBox[{
    "place", " ", "legend", " ", "inside", " ", "the", " ", "plot"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"TorquePivotTriFree", "[", 
       RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "sigs"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", 
     RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{"sigs", ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", "Bold", ",", "8"}], "}"}]}], ",", 
        RowBox[{"LegendLabel", "\[Rule]", "\"\<\[Sigma]=\>\""}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0.55"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Mu]\>\"", ",", "\"\<Torque\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Triangular distribution\>\""}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "]"}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<../abecker/SwarmPublications/JournalTorqueControl/pictures/pdf/\
TorqueTriFree.pdf\>\"", ",", "%"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.683656192718853*^9, 3.68365650959415*^9}, {
   3.684533201990088*^9, 3.684533227629901*^9}, 3.6845336018509903`*^9, {
   3.684538398449457*^9, 3.684538398934102*^9}, {3.684538872647613*^9, 
   3.6845388887736807`*^9}, 3.684539050089514*^9, {3.6845392360343122`*^9, 
   3.68453924661322*^9}, {3.684539278578122*^9, 3.684539281301207*^9}, {
   3.684539347834256*^9, 3.684539370928897*^9}, {3.684539413266988*^9, 
   3.6845394260116*^9}, {3.684541137633313*^9, 3.684541223576767*^9}, {
   3.6845419473452797`*^9, 3.6845420170348797`*^9}, {3.684542119211987*^9, 
   3.684542121724435*^9}, {3.6846745539692287`*^9, 3.6846745924173307`*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{InsetBox[
     GraphicsBox[{{{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1: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
YQ==
          "]]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1: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

          "]]}, 
        {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1: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
mAJ/E1dfhliiwH+k30r48hR4Pd6UHXkRBdXnb/IdeDYFrmX5/s7wwl/P8/3L
cNMUYJ5M6A3wwfeD8gnpg1Pg0oKhikYACg7sGKBsoEyDCL08ZmgYCgyblZqr
d08DoSREa/UGCpwCY297qkyDY2y+T22iUZDTrcbRe3Ea8ES9eN91FwVYdMLb
e/7TIE6+VvtnAgp6lMcjdOOmgYXi+VxGEgr47ycTK6umwV0v+8qH6Si4debn
8m3eGeAuYbWrNRcF+SSdFxoSM+DsBNv9HQUoqKNl+vw+MgOWLx0xPV2EgjWq
wYKd4wzY9fqMh2MpCoRgNl0weAbcVDnw+EQ5ni+3JY+PiTPAJiO5aysdBVea
8qZVsBnAb/l37XwlCmIDVosZX2dA58ml971PUVAkaeyUOzkDXp0PMNB4joKG
riKJc0QGULUmeke/QMFQFHGUR4AB4CZOmWcvUUBUNst9K80ANJ0tDo1VKNgx
WnohUJMBIloyqW+qUaCWzLbroBkD5HpK8D56hQKz45b9o64MELkma3WxBgVX
F+iZGeEMcAsc6iVDFCTkbLQ6k8oAUqSKsDTcZUa2QhvLGKCZV0aZG0NBE/FZ
V00dAwwcEZ26iHu8nDvFu5sBOk6S7zzCzW578azkLANs5XNje4M7IdKKc5Y0
C/67LwKRvqjxRu5Z8N99DVgcUbykqLIev5f+Y/DRxfU4u5l6j2/Vuv23pH49
yfvz3+tz5hS548/O/Ys3fWo71po2/y9+5YPSnrv8i//8uOUY36V3f/75zpNn
BRsMVv6ZeK9N9w3b2j+PTETwHjJdW19fU+Hb44L1OHSLAVaf1+P0tOEcvuX1
eFnuSvVRVua/+JPyTe1XKExQbHi2qAF3QdVeRpYgEyhYVTa8wJ379gjHx11M
AO4Lz2fhzv58RvSvNBM0le0/5I87s8dRVVKJCXosbiXo4E4fDT5jpsEEjgZt
fFy4U+aSXG7qM4Gvckl9LX5+SavFNypMmGDDl6eFLv87X47XmYM2TLDlU8J7
Ltyxmzuf8TgxwaMfg9JZeD3c3jHzSd0bf75anW97cEftY51wCWKCgzsu9WTj
9RNxaBtLehQTKJX0KG3GHaSnpfD7ARNUHLQU/ozXn7+J5QnxfCaQji+o2IHb
x9bz8hkaE+yca6u3xevV41pmalk9E3jdNr7yGq9v19AK+vcWJmiVmtw2+Azv
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
biRc5Au2sG6l8+nWtsvr/u//Cf75/wAZFOJm
          "]]}, 
        {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1: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
9/++r4H/AQz2/Hw=
          "]]}, 
        {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJxF2Xk8VN/7AHDcmSHFKBV9qIRKSGUrkee2F1KpJCFFCCVFIjuJFlFSkbIO
Zi5aSFGdW4ikTbJl35cxY/vIln738/r24695vV/Pueeee+Z5nnter7vshIvJ
SSEBAYEbggIC//2qwcKeP3+YJDdG6jzufwkddFwZOjbOJA/5rb26qvQS8rqz
YcXQv0zyhl9yrvV8b1Tca36io5dJZvdZTuameyPre49qy6qY5BWdw68Eqn1Q
5IDSx/tZTFIiXbPk8DJ/NJykS2gcY5JRXx6oSqYGojyR42fs34iT4Tk+HoYL
QpHfp8ret8fFSBY3yig+8RbqTlkktV52DhmgX/i71/w+Um7cNYtZL0omhsCp
JRLxKFkyabgmcBYZILbt+JyUJFRwtPQGAhFyQmnf6Y8vWOhrsmT/jo0iZGPY
k2PGRSzU0Gdh8llThCx1ilL68I2FRv34C+tXiZCbzJUZrB4WUkueHz8uKUJK
XUhznJBJRTFcq6daXcKkhLFXuohPKjrrM1TJiRAmbRNrAg03pCHf93o6GteE
Sa2dEgaZW9PQNWZIbN5lYVIufbmy8N40xEqQtv7gJUzmGW74HXMyDf0s2tTd
YStMxsWLn9p9Kw3tEA+dWKYjTLqvnqOU052GZB/Jyt1rZpDvR7KK7SLSUcb9
ADGdOgbZGrOic0tMOtKP6hivqWSQad3lnyST09GxsMc/ZMoYZCIsfHU7Nx0l
nt927dFzBsmuNuSINqQjpV3OI6xrDPLxottGH5TYSHMgvyxHi0HmEVFHV+ew
UVGvXJ7pWgZZKHChJvQ1G5l2XE79pcwgNxfUXqwqYiOPn3sDdeQY5D9GFzv3
VLJRXlHr+teiDPLaRWHJhyNshMfMTipspJNSd6NlSE0OMtx61PN7GJ0cRl7P
MlkcpHzO49vXYDpZr5bc2UJwkGjC7VWf/ejki66ll0SfcVDJ1MeaEnc6GTW1
/Y4G4qAdeXob3xynk0MT5Y7cSg7C1y2ZSNOhk6oh8sDHCLTUeuMBliadBMMx
24OzCDQVbspJWkMn3a0FgRAn0Gtu+NGHy+lkgl59m8YiAm1M+5N/ey6dlKAb
lCWsJpDW0mZv324aKbZUOZN3gEDzjX9XXGqjkf43Hkp6mRFo2HvRas9GGmmw
XyHwlwWBntburz//g0ZujLmzt+QkgdZGv9t06i2NjPZK8icvEIhZ1HDH7hWN
5NXJYT+9CMQbGu+zyaWRG6SW6HT6Eihjv8ZDqwwaOVDxJaoihEDKYslTB+7T
SJk30Y2C0QSapUea7o+ikYqr7pen3SdQl2NdpvFNGvmKd1VhcxyBUkvmH9t9
mUY2Grhlb08mkGLwZaTvSiPnRLTZxT0hEO1ZgpSeM428K921+HM2gVqbX7vo
2FPr9zWo5+cSKBFGlmpa0sgziTYGjDfU/k3Y+a/aTSOro08/9flAIO4P++S8
rTSyvdzb36WMQC8eO5QY6tNI9S9Be/d+IdA+O0eJMxo0UiOB+7K6gkCym500
/6ymkZu2imwMrKLWK+NsFqFEjde/GbyolkD+307HP11MI4OrTLbMbSSQEXGm
cKs0jdTZsjvGtZlA0ldcuirm0cigh0tCUCuBnui5rv0lTLmwpkWhi0AtqW6k
7iBGdg/mqYv1Eygz0L2tjIuRkwvLOdUDBPKyvCBi1UnZMsswcohAkpIX9/nX
YaRL35oPH0YI1NR30W1uFUZqC924tnuUQESJ573EbxgZXa6g/3yMQNt8LzUV
vsfIMv1zm0wnCSRxxJtm+hYjf7Faz4T9JlCdho9SZz5G2tsImadPEShN3Nfo
4nOM3G6uMpDzh0Du3b5nZz3ByFeu+SuyBDLQlkK/qBgORo7eZPZFCWYg8Uf+
L1RYGLk8NljbXigD1XoG1L2Kx0gnT49/l2MZiHUwUMA4lrqfxHbZb5TPrQlS
bLyDkcM7DeIcaBlIXzR419kIjLxGa3PkUhZtD3YWvEbth6qLhwU9A1WhyxG3
LmPkhtRdOS8oJ8eEZCv4Y2TCkU8LBRkZ6Kz7lepsL4w0UTYP16Ksty90crs7
Rrr/MRQ3pSyiEiZX5YKRmuhP6AnKFfSr2xwcMXLrlb1Z/zm+6arDmO2MnfOv
Xb96bMY60dcfy5hj5Ja/LjcMH920dybuKBiBW2+bcVlVtHW39IxXZ8b5n+sT
mr4+JPLRYUVDoel4k1uCWmWa4LRPPYhMeuAoMG0z3yMKhPwU+n8r9a46evDh
xLSdjPddbmkdnbb5+b2btLVHpn0bde1Dz4fQ5r8GoWpTNcGB6XjDvf4HL6r7
p+27ZlbrlsczfmWx0eXwsX60/a8thkxymrVnPBHmNOEkPuOkrIHrxrT+6ftF
s/l6J4b5aIuB0ZAF5Y5/J46tbOKjiN+9D9dT1tosEsT9yEcc/4PxfOr/Db4+
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
          "]]}, 
        {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJxF2Xk4Fd//AHDb3ItwFZKohJCUIjudSUhKSSnJTotElNIiESmRiIQbwl1m
LFlSITpTaEGbSpGsWe7CJeWTRL/5Pr/Ph7/meT3vc2bmzLzf7zPPM8t9jjkd
EBESEkoVFhL633ENWMj9+5dGZGSuRAIeXYW7j2hdmfxNIyz0vqybN3AVnr1p
ojn+k0YEvt1b+Vg2Hj7nufoM8GhE1DInC8+D8dArPae9+RONkLIqEL24IAEm
j2k3ZZTQCDWNvoLVQdfgj3zzIgNPGrG3g6k0TykJVot7Bx16LEOURzucnBy7
AS+8auU98ZYmUlLKuq33ZkAOU0nRWEWK+PKgnWO4MwfqdNlJ0L5KEtNPH41l
BufBP5sn1rM+SRK6e2n71cLz4OvSfC/LFkliz/IEC8blPHj84szDgOeSxIFd
i01vZefBqhUVB1+USRJK803emjTnQbujy+qjYiWJZuqogZdmPjw0+TPih54k
kXJVsnb4Yz5kyOX/aLsoQfzULDE4sYwJ60up8a/OSxD5CycO3NRmwn6Ho8uf
nJYgVvBUzUrXMaHmFcPtWJAEMWYlkvdmExNif56zT7lKEDdL5A5UHGLCon6+
q5y+BAETQryl7zJhxUOjJ9t6xInO90rnqtez4Ifd9L1ohzjxKdL9eKcFC/4c
+zts8ImMy19qn7RmQSPdl4uVX4kTAd89Py10ZsHKO/tDOZXiROAlv9NDoSxY
ExepFZskTtxfjAv1lrNg3f7GaxCIE7kXVI/ztNjwLUNu1NZMnNinnXM7Uo8N
O4fdnF6vFyeM9LOcJI3Z8NcFwcKvK8WJEdnktVM2bLiGIX/nt5w4IX690Gun
Lxtm8j3KDYeoRLeB3Y96Ohtihph8bS+VEE+e0czKY8P7EWOnrL9SiTPDi9X9
cfJ6sjHmu1qoRN3Wv7YdD9gQMcTrg2uoxD39Rs7qd2wYfH68tTCJSgg7IjMn
RDEY8czC1CCeSnza5K4YLYHBeFosvfoSlVj2UdjkEg2DrNxFXi/PUomIsAIP
H2UMfmmw5Az4UYkdjq+GI/QxaCtzZWq5KTn+18+TRh4Y3L33nTtuQCV4fvt2
B/ti0PvOYmLtGiphJz0advswBsP1i2OAOpWwrlzr0XQcg2V7WqTdpanE5Lxd
uy7GYlAlR0U1vYdCeDhWWtkXYrA4I0ratINCZD+ppieWYHBD6sDvtlYKoZGu
NFN/D4OecaUflZspBAwWLqPWYDDvhHV8zgMKsbJcKrGvCYMGQfhptIxCsPUu
jT54g8H6wzIHewopRKdEjFD4ewz2u39G1XMphNbblVPt7RjUtjs6wYqnEGgs
psQbwmCV1bu+zbEUIqZpgGXPx6C9pdG7oUgKMeb38RJdgMEAfaEinVMUQijp
s+T8CQzeVUn1vutFIYYxidEtIjgEipPbd+ynENEh7i/1ERy+ne9hMepMIe5d
ik+XEsfhGEVbUX8rhUhLiOfekMbh+rFHzfcNKcTFiWJljiIOG3iq1XvWUojR
6YM+LotxuGfgEvsfHQrhb6exqVIFh2Ffdlw0VaUQJnkEY8tyHIq3VhxrX0zG
9QpkzqnjMP2tkvs5BQrhPlX07fYKHFY39BnXSlIIm61y7LKVONxK2K3wQCiE
kkNUOGMVDjuqixf8/YsQ/nFLki6vxuF0Sdgw+hMh1hf/3LR0HQ7RzHn59V0I
kRD98HaCMQ7fpQYnHWhHiK3mOmpCpjj0uf7xPOUjQvzS+Bnna4bD6JgcF7tG
hGiNw1omLXAof0HMllOPEL0X6bd1N+CQccbf4CpEiBR8avEOgMNnQQYyzRUI
kXVuEdV3I7le//SpoyUI8YHR5b7bCoeDvtND0gUIEfCPtrnhJhye9vBpvctA
iB3lZ1IQa3L9+57X7chBiED5vfsbSGfs0i0bzUCIcjfby6E2ONTZnpydnIoQ
tMbmeXK25POwm4jXv44QJ+jHvt4hvXXT/jPv4xCiiVYxumQzOf542Lu3MeT6
Fvw4E01aMjdl5esLCLE9a7dHO2nOm5KoprMIIRQXk6pmh8MXM01tL04ixPVi
fTk30tjqoXXPghFCs0/6XSzpy25iV+sCEGJcuKE+j/TBeNVe4iBCqPdS+ktI
21ZbmD32RoguTuufUtJ1J4sz7zkgRPe/RtctncJM52yG/X2UMn9uvOGynvAI
jthsXEeaMbMrQ2w2vmzqYOTKLXNx1u6LQtvporPx1XezIo8Pi8zGu0Nz17Ri
wrP2v52cf/uI0KxdIvapF6nNwP+szVu5f3f21KwDtjte6u37NWvXEzssjYwm
Zp0Chxzhg/FZA5HPe9YIj8HOf92ZPnq78vPorCP0JPqsSudc42Z2bK/n6Ox8
t3Gn+z1Gc56KC5gKkJlzfslYwnaxOacVCCx8fgjg8WSJmULSAz+nPLW6BfCW
oeeZ+P89z43i0fwmAeQ6b366jXRMgjyr7KEAAgU+T0C+/w+fVF+eyhfAxLQw
iZOkNdRX882vC+DDP3JrOsh8Cg0ypQmfE8CCI7yjK0jXV9noPztIzhfVbnMk
81EecXKOdxLAIM74JQ8yX/0cPU47bhBAGnomdjuZ3/foR+gKOgKortM7rErm
v8jgqcftCgIY0ujy5iOKQyf96J4cYQGc3ETdEEjWz/cXdC2dthFotL2CZk3W
m5U8Zi+oH4HVGtSMaLIekz0rAitKR6Ccl9kfpgkO104039twZQQ2JnFvp6zH
YeTGtlbR0BEo1PxIyFOf7FcJ/ZMvPEcg4x+FeOm1ODymPgN2GY/AT4XSXvJk
v3gcJOm7SH0EGp79+/aoNg5lqhfGfpUZgXfq1e5jZL+566jXfGhgGJrsY6k3
LcPhDN1coNsyDFGO64cysn85DG5e8L12GHIjOdbhSjjkn/dyCb85DPucLMtr
FuDQ4uXRcxujhqHo+z0f9Wk4TJA/k00JHIYHBr6LXZuHw1WFyd+SrIdhqdP+
1mFRHB75/DSYOc6HqQviXH3HMRj43ruu6isf3iIWXbo9gsHg10ILXz/nw1ql
Ban3ORgMq9/waILOh06bXhKXuzAYU1qN2FnzYXXR9N+7LzF4uXCfi9saPvzD
T/zFqcPgVdavguBFfKhTn56OPMZg8m0jxww+D6oVZ63tKsNg9pXyTG4qDzbk
qQYsTcdgbvTO4ZkIHkx8r2PvnYxBRsQokPPnQerlmpRLVzFYGLqm39ySB3/y
pp8fD8dgpVeB3rV+LpwcKPLsJffT9yZ59XpGXJgY4J67aikGWw02KlqrcqFx
OkxLUsBg+5pufxdJLtRa9jz8sxQGuzWW0qI6OfBumUP4/Ck2HJHN3NcSy4FP
1YbHdVrZUJyTPBL6aQjyZhYqz7/MhhYZUYuqTw/CzyMaE7s/sKCD6/Vb630H
oVuNDnbhBQt6KGctLHEYhK56fNvkGha8kFUpz1AbhGv9Rlj+DBZ8miuQTWwe
gOY5lLCx4yy4ucBdwkd1AEpJmF8JmceCTo9Mf0u8+AaRZft+fNBhQt/wzWdi
yr/BNQfffZdQYcJQS+dfM7e/Qc3NhwltaSa8CYMnxkO+wen1G1ZoCBjwcx37
+1flb3D5nly6fDkDujcr8MqO9cFyt8mAUQMGPPx17Ms+xV6oO3JT1VA7H947
1oHYivbCXo6T7B/FfDgj/FxPX9AD1f2M15VT82Gq5u1oyec9kCd1aCd/IA8S
x2xXPTrVA40ffVfMZOTBRSL0syqt3bCLs1mNr5IHkxyu6D9e2QWNYrc5Dgvn
wh3dusUvNNph6VCR/2+rLGgE6Z+4Ma9ht3GGpcbjZGg66u7b6VsBkzov1AUu
OQ1XRQskiZP3gKzduRS+WBgoeT6CX3B5A+SPXXU0WH8D1G5pNDF72gZQ3W5X
r57bYMRwfd34cBuIlD0cBqWywFK1bIdipXYQ01DZJ2ySBSJ+h/iohrSD0Ax9
rl5iFkALlRIoql/I46TvKtNsUC/l39VyvgNYXPN9cDIuBzS+ocYGmHaBuoj4
DBGJXPD7UYjsigNdwNOr07ZSJRfoYF8yO5O6gP9l6TS3tbkgPrKkZOdQFwjN
BVXBe3MBK72QT9/aDbgDhYH1jFxweMuuhRd/d4NjTwP8xCzyAK8gz3+7Sy/Y
qPDE2NItH0y0HxZpCOwFQTWOzpsD84HQPD26eXQvMBj602QZkQ8WBjxq1r7b
C1TuL/EX5OQDq1Uf9ETF+kDxaWaPT28+SC9EJh6W9IEF9qP1p3wZwLro8MXl
1H7QondlSbkzE+zoWKOcrtIPZOMdKcp+TOAq9fOejH4/eMdqDgg8zgTHjkb1
T7n1A3vqrp2vE5kgUzfTrrW8H9QQNUjEMyYYLWqSifcYAHilpnTUOhbIKl5D
/3F/EJS2+nue/MkCQVKL4iZfDoLPguNpS4TYYEOAcNjM10GQGffkUYkkG3Rq
f3ASpwyB5JP9scnL2ECVcUZSZc8QuH53k+IWOzZgZNaf2TQxBJZkG3aH3WSD
0MniQ3aSHFCiM2b7IJsNbFxuOTss5YCGBU3Hv7LZYEDhyLq9thxgo5v0pr+K
DbSTaZwjaRzQLLr/ZkcHGxRddnW5YcQFtA1v5jstxUD4wCbbW/ZcsHG4UUFe
EwMONqvX3/bgAm5L7f3a1RgYERGSZcVyQfBpcOG5BQbWRjCfV7VygU9h8dp7
+zAg9DXx/mMuF6Rf85Aq9cLAO/PT+XUzXPBc7oQg5RAGjk/aX3ilyQPVVuej
ZE9ioCJ01KjnFA+Agvmv2hMxEPO+TWPgKg/YrvryRfomBpz16xbwsnmgoTbU
XYuOgQnBzZEfz3gAOrwOkmZjwCTAnCWuyAfzMxY+za/FgHijRqr0Kj5o0HDz
FK/DQJu2zMUFgA9c9TrbnV5g4OxAt7vKIT4Q++WgltGCgRrvWIW1D/nArfUT
d6ifHC/79X1/Mx/E8FbNfOGS14MGN+i9fBAVeZFZIiDXu7RHhiozDLaXnd75
6xf5fF4Zv6pRHwaEbJVm4DQGjoQnxh83HQY+YZbrngrjIL/dXLzTbxi49ey6
LCWJAyLuxrOUs8PgABabLyyDgw4TTsyWpGEwML0hrXU+DhbeShO+/2gYZH6J
urNMCQdXd439jl8wAigKymWrNHHAFrGr2qg9Av6K2HBVVuKgviw77B/LESCR
GGYxvAoHM7RtP3z8R8BjEZNXOutwoAzzyhddGAGSpQc7bhngwCRoMvh16ggg
orqYfYY4CGlmDZsSI+Ch0pi4ohkOEs9NFwo+joDcfJ0TM+Y4KNDZfYTJGwE2
bQKTekscPG8r0N4vLAChKslWhwEOvl0RHpRVFADKG4/TXBQHwiYuzGe6AvDK
CX9qb4WDpYN3fcOtBCBX4olE3CYcmKchavouArDDecKQaY0DFxu37sFAAai4
laGXY4ODkz/Ks7OiBeCO/lTnKVsc3MiXcN+VIQCDlwN0dTfjoMTJS1miRABc
Js2EIOlm4Ydtj+sFoHGoykrPDgecUun00HYBUKk06QgnTfHy26MzKgAKL6n3
2aRvXHaXHBUZBf9+nwHVriucRuk5u1oaHTQynXMKva8312/OauMyT8OPzbnU
3ix379k5N08meUonjYK+f01x2dBx+tEo6P3XZ+UzPu5YMDY7PkB0T1eIypzd
vi/gpGiOzc4HbxP+fDIbA/9+jwKxhEh1L9+58Ymih0OCK8Zmz5//3Ug6ec/3
uft5+8G6JXN89nwhTcaa1xdOzJrxxlrh4Itfs+MTih5i1G1Ts+cTTvmwpQ6Z
mY0r4oXPGXZC6H/xVnakOnJFeNb7C3Vij/eKzNqCTjVvWCGG/jf/4KIfK93P
zznpZveinx/mvOLDHtknQsisqxe8ol7TnXNC+6NYiv6cPfMKkEhjZPZ6YvpX
RE9YzcW379z018UFQf9br6qSfkSL+1x8vFt1eqvv3PxnGC284TCC1hbW+BWR
Tg+e+b0hCEErvJMa0v73vkyGz1SeQNBFAddOHyO9Qajj17ozCLrY9EucEWnZ
F41hhREIyrXIRfhkfvZdr5rQiEHQmkHKr+uk9VkJ3Jg4BM00s0/VIH2xxrPz
WyKCiooleGFkvr9r0W+xTkXQUXzbYWXSqhzkGSMDQT1uSD08T9ZH8N/PVWI5
CGqtvs3lDVk/UKGo2I+BoIyn8XtlSXtYOd3UKCHvt14q24usv2KXFXExFQjq
Or79z7GNOPgT9Cv8WxWC+r+4MRBE1iudnu3HqEfQvGnVa+YbcMAtC3ERa0TQ
+pVHvSTIejd7Yb3N7w2CWqRWDz8j+8HnH1wDjXYElavx8ZtvigOteY+1YroQ
NMCm1i/bGAenlicrf/uGoBSmioOyEQ4UthuLMgQIyovgifbr48DPT/If0Z8I
qt+wn7OO7E8VZ79yfX8jKPtMy7cgPRw4saNb1BEKOr/hw9Yqsp/l1u55Fi1J
Qf9qeb9+Rva70fcrq/toFFQq+WdqvRYOrgu9zc1fTEGDpU1UktXJfN+nEqK+
loIOtK5xPraY7H/BAr9oQwrqeINiJrQIB0din7r0mVHQ8mjO4ygFHEjcO4zm
21BQjzstrXtkcWArdZ+mvp+C1g9ZRNkjOLipdkU02ouCJp47g3mLkP3OZP8/
vQco6PrQ+ib/vxiIPiDclRdMQX+uubzeYRIDxGOHu2qxFLRzrPGtNx8DtI+q
eRfjyXj7pcUiHAx48MZv9iZRUGKfU00Kud9MK2aez6NTUJ/S5UbxnRgwCxnY
plZGQQM4DOvmN+T+qH6Bt7yDgjKepX29U4KB+wg9dEUPBWUVfOllFmLgweCD
ae0BChqlXfMsm9wPHxaO0NaOUtClRtiOozkYqDbwWL9BjIq+CUsLCCP3V7jJ
8ryrLhUNil/8j/MR8n5X7KN4rKOin2VDbLMOkKaevO5tREXvbayXaCP376dN
RbmHUSq6mFs5f81eDNTvUnl2ajcVvbbeRnfHJgw0+k7JpIRTUUuWycOTShho
slFMT4uiovSBMpa4PAaatQyWZ8ZS0Zm+KzlJMhh4xTtikJtERa1dsZYLohh4
e6J9bwmDiqbJKVp38NngY3TVnaZmKppfInLhZi0bdOeH6YstEUc10asl9nvZ
4EfbXcEJNXG0qXSr3d8dbCAuO1DUpyWO2neHuGPk95Fe+G6tOn1xdFL1iu5n
UzaI2L1O5aKdOKpTvKSwRJkNVBAeIhQqjh6dP5li95UF9h30aJtqFEc1ZFr8
TrqwQIu2TeT4aQk0blo+1nkdE9zSaWihREigoj10/mptJnDTtVmxOFoCZRqb
98wsZYJBPZtG9JoESs+JpF+VYoI/RjbyibkS6BGR3b72gwywwsYG026UQL/s
vlp1gs4Ap71t3rorS6IvjHK2ls3kg2WZNqovaiVROctq74nyPJBWsG/S9M88
dNmhoz5J33LAe2jVVuksjfauXrtkV1IGCHjiMW9JugwqXLZhaW9eCvDJaUur
yZJBS7Sm57deSQGu53erueXLoGsc4+GboBRgZ2pvSr8rg0YsPVn2wSwFaJQZ
HlJqkEG5sXItWu9vgI47UnUK32XQPgs1OUnkBtgWWX1WZhsNlefXTJ4KSgKb
PAwpd3fS0LCBVeucnZOAmUVpssNeGqr/zj3QwiIJaP9iYgk+NDSn67C7pmQS
EAtObpU8Q0MrA72nPm67Dmo9D+tTWTT0hoTbrdtProEKy75aViENNfSsdLyR
dA0UKXtssS2joXIfrnlkeV4DmZ92eV2qoaF7eF72P6YTwKkd5Bb3noZ6nX+3
otA8AQSurlbK/0xDi8+q2u6clwD85hkyrTpp6C0jHy+ZL/HA6blOTRSHhhZV
nXV+fTYebGEyNy8X0NCHQyUZ7+zjARqt+p74QUPHmakF/MXxwNib7uH1m4ba
rfhcs4x3Ffz7vwTN+///JeD/ALwq1y0=
          "]]}, 
        {RGBColor[0.363898, 0.618501, 0.782349], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1: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
ZSWCf98noN/+/30C+D9F/EG1
          "]]}, 
        {RGBColor[1, 0.75, 0], AbsoluteThickness[1.6], Opacity[1.], 
         LineBox[CompressedData["
1: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
yNYlrNgrA6eroRjxhh4cy037/HJbBmYEmGlWhfbgvEVjTmt/pmM5IeqkQks3
lhtKKUpwTccpNvHaNX904UkZhykN5TS8q3vN7Req7fT1BH2+FZKCdTHVyox9
g4ddrJ8Pf4vBBqPO7l/c72PXdt4p+ZW+WDOGJ84IqQDXcuaqvwa8oayBe/OM
41vorqYqH5+MhScWjfqbn7VBt5zixnrjFODqbKod57SBdYJGhea+FFBUzrO5
vbQdFHiyUmcDUiBqKuiwUlA7OIZWj09dSQGydGmSqNJncAg08lIXSIW6Bd5d
7093QOC/Wbp2T1Kh8e3cOF+DLrjKrWYra6TBVFWQ1KojXeC1pnLXLjINNIo/
535J6QJH/bfqXg5pkBhdVrZ7uAuKMjzfuZxLg6LsUjZl1Q2N7m7TB9vSwMti
j8y5qW64v/nnaGxMOrBKrnvvdOyFfr3HX+oaMmCy3UvouV8vzGmegtH2DBCY
r0UZxvSC/p+Rf4pwM0DGt6pJ/U4v1PuaOHAWZ8JWzWYt4Tl9ULO6fUuZSyZk
l4pMPizrg717Llwe4GXC9lte51bOHYB6HQM3L4Fs2NWxTj5bYQCOo2WeeVLZ
4LTgW4Wk9gAUG5otrVLKhoBjZwemDw6Ajtdp+WIyG3LX5Jq33BuA947B9TZn
smH01ivJRJdBeHLx1bry79lw+fY6auLBECQu3DdftTkH/BfIJfx8OQSfbUws
VnbngLGvYNhM5xC8qjSoEGHnwBf1Zjsx0WGwUn32MEY4F5QKIsQVHIbBS3XN
ZrsNuVCQWxexbXIYuncbdajF50Lwz9ue5uIj8GvXWyL5Ui6YOmbZ2yiOgFKI
6so2lAuD0j4b9pmNwJsN5xKUy3NBPZUY8ckcAdJDVD38Uy7cOu/keEmXCe2r
5u1VUKYgcnCbWZYlEwYtY7NbNCiwMV27CbkwwSo55FjIRgq4QgJSRXFMOOe5
OsB1OwXrowobHrcwodG1NnPEgwKBzgsPaphM2HGIKVF/jIL/GIbn184wgQx1
84sLpuD4T8szr9VYIMm6lXovhoL7waO6PaEsiO6qUPv7KgWxH9pUB/9iQUmK
Q1bZDQrstWsXsfJYEGOvYpF0h4JJXgZ3op4FkbLFCrwqCvR9DYvEZNlgcGz/
ZsePFIg1qqZLaLLB/uYOX+/PFLSpS55bBGzY8c1A17mHgpOD3c4KnmwQfphl
xmZTUO0WJ73+IRvU/qMtViSEoE2q88NAExu+eY2d1hNDMIk3XqJ62ZD9Tju3
UALBesUeybmSHAhvuHFAVg6BzWu919UqHOjQTnm1bDkCn8gLiccNOLBD7UjY
1EoE+e2GYl88OHDB2VhupyYCRsKl+rSTHPA//b31qRaCDv2RWIsUDtzoFPVe
uAmBTFam4IMqDkjLXkrfZoTgrz1jU4mLuFAQZrx6zBLBDSHzxybqXHDMTz5P
7kRQV54X9n0LFxrPiPb77EYwQ1hPHPbmgqRwl5rtPgTy+Po9uTNcmBs33iru
hEDf/2fgm3Qu/Aqill09iCCoqYhjwOAC14hg7ndDcOHUP6W8j1xQ+HHRJMod
QYnGXp9CFheONkswIo8gaGgrUT8gyAMBss/S3hNBf7zgkJQsD5jFPg1zvREI
6jsW1q/hgcrpmWXpPggUh+64R27lQYfGT40pXwSGmSLK2o48+LXiQYeBHwJH
04PdQ348eNCYJL3HH0HIxL28yzE8+JbdXmkagOBS/jznPTk86Pvxo3xhIIIy
O1f5eWU8iHHc2v037SbBh201dTwYWrVQk74fh5G7EtnB7TyQe4vDkmiLuno4
aIzyQOdZcWk17UvnncVHhUbh9/0ZKHXFjzRKzNppi+5RXYNZp1F9vdc8Zi3q
aNwRXjXrk0tyPu5aNMZ3/lddiVSHr3w3vWve/j53nO+gV3pqF2UmQe63C95u
lz764gd/PenWw+K51tN8C6Y1W9SKzPA/L3uztKHAXID833rLjWgVkXhBvg+U
asQd7xXi24iaa/h81Ry++y4+nlSNFeH7vsoZ1soOUb6788O05ywX4/u9umn0
ePg8ctlvr8g1VXrxRJy/nlmy/6fBr/mk4m9/wFvbHtlL8Nd9n7rMX54tybdq
uY7n0uez7ri6oFb666wfyf0YTRMj+E5P6VNctGLWif4uJeWqsz5n3aazW4Pg
n1+Ext6no1oEKf/bgWJvrVN0CHLDG8mzDNqegxaftAwJcoFQyu5C2i51de5v
SYKUyhRTD6Ftfx14/mYE+emdxeL1tK2jK09KWhOk8E9V5RZ63ra56Ije2U2Q
q+193T1pbza6m2qzjyDbNLkDffS8blimuZxzkCAra6MeWdFW/1FYnHSYIN3c
uSN59HyvaFHatMaLID13SyZ00vMvc5/Cr/wI8khzWcFc2hKXZKx8TxDkqHaB
1fJjCOYEpraIRxBkSUV1kiKdn2mbBYdLogjyj8uNofPpfH3VPM+xiKXPT/eK
XL8X/f8NRc5JuEiQxik9NY5HEbQ+/35RPYMg33wZ657wQPAm/7j8i1yCVPou
MRlJ5/vJIS/tuUUEGXLlzqbdrvQ8bOl7UlRKkHeqP5667ILglryLhVk5QUrW
2Ix9pPsit3WP65/VBFlxPuT6/P0IUh+8Yak+I0iNzoZpMbpv4tMswuoaCHLj
hrs1X/ciCN0FF4Q/EKQj73x1oi0Cv7WVS/M/EWTh4FJpQ7q/PObrFG79QpAj
k3GLWq0Q2DVoVJ8dIchHkXp6H80QWBQW7ljJI8iwM8sj9bYjIGOUPjAmCDL1
gcq1OBMEem6Ui+sUQV49Iv/gmTGC389bSOP/f94C/wUNUL0w
          "]]}}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"\[Mu]\"", TraditionalForm], 
        FormBox["\"Torque\"", TraditionalForm]},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Epilog->{
        LineBox[{{1, 0}, {1, 1}}]},
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
      PlotLabel->None,
      PlotRange->{All, All},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], Scaled[{0.5, 0.5}], Center, 
     Scaled[{1, 1}]], InsetBox[
     TemplateBox[{"1","1.1`","1.2`","1.3`","1.4`","1.5`","1.6`","2"},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox["\"\[Sigma]=\"", {
                 GrayLevel[0], FontWeight -> Bold, FontSize -> 8, FontFamily -> 
                 "Arial"}, Background -> Automatic, StripOnInput -> False]}, {
              
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #6}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #7}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #8}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontWeight -> Bold, FontSize -> 8, FontFamily -> 
          "Arial"}, Background -> Automatic, StripOnInput -> False], 
        TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 0.75, 0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold", ",", "8"}], "}"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"\[Sigma]=\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{1, 0.55}], ImageScaled[{0, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->False,
   AxesLabel->{
     FormBox["\"\[Mu]\"", TraditionalForm], 
     FormBox["\"Torque\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->False,
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   ImagePadding->All,
   Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
   PlotLabel->FormBox["\"Triangular distribution\"", TraditionalForm],
   PlotRange->Automatic,
   PlotRangeClipping->False,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
YQ==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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

         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
mAJ/E1dfhliiwH+k30r48hR4Pd6UHXkRBdXnb/IdeDYFrmX5/s7wwl/P8/3L
cNMUYJ5M6A3wwfeD8gnpg1Pg0oKhikYACg7sGKBsoEyDCL08ZmgYCgyblZqr
d08DoSREa/UGCpwCY297qkyDY2y+T22iUZDTrcbRe3Ea8ES9eN91FwVYdMLb
e/7TIE6+VvtnAgp6lMcjdOOmgYXi+VxGEgr47ycTK6umwV0v+8qH6Si4debn
8m3eGeAuYbWrNRcF+SSdFxoSM+DsBNv9HQUoqKNl+vw+MgOWLx0xPV2EgjWq
wYKd4wzY9fqMh2MpCoRgNl0weAbcVDnw+EQ5ni+3JY+PiTPAJiO5aysdBVea
8qZVsBnAb/l37XwlCmIDVosZX2dA58ml971PUVAkaeyUOzkDXp0PMNB4joKG
riKJc0QGULUmeke/QMFQFHGUR4AB4CZOmWcvUUBUNst9K80ANJ0tDo1VKNgx
WnohUJMBIloyqW+qUaCWzLbroBkD5HpK8D56hQKz45b9o64MELkma3WxBgVX
F+iZGeEMcAsc6iVDFCTkbLQ6k8oAUqSKsDTcZUa2QhvLGKCZV0aZG0NBE/FZ
V00dAwwcEZ26iHu8nDvFu5sBOk6S7zzCzW578azkLANs5XNje4M7IdKKc5Y0
C/67LwKRvqjxRu5Z8N99DVgcUbykqLIev5f+Y/DRxfU4u5l6j2/Vuv23pH49
yfvz3+tz5hS548/O/Ys3fWo71po2/y9+5YPSnrv8i//8uOUY36V3f/75zpNn
BRsMVv6ZeK9N9w3b2j+PTETwHjJdW19fU+Hb44L1OHSLAVaf1+P0tOEcvuX1
eFnuSvVRVua/+JPyTe1XKExQbHi2qAF3QdVeRpYgEyhYVTa8wJ379gjHx11M
AO4Lz2fhzv58RvSvNBM0le0/5I87s8dRVVKJCXosbiXo4E4fDT5jpsEEjgZt
fFy4U+aSXG7qM4Gvckl9LX5+SavFNypMmGDDl6eFLv87X47XmYM2TLDlU8J7
Ltyxmzuf8TgxwaMfg9JZeD3c3jHzSd0bf75anW97cEftY51wCWKCgzsu9WTj
9RNxaBtLehQTKJX0KG3GHaSnpfD7ARNUHLQU/ozXn7+J5QnxfCaQji+o2IHb
x9bz8hkaE+yca6u3xevV41pmalk9E3jdNr7yGq9v19AK+vcWJmiVmtw2+Azv
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
biRc5Au2sG6l8+nWtsvr/u//Cf75/wAZFOJm
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
9/++r4H/AQz2/Hw=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1:eJxF2Xk8VN/7AHDcmSHFKBV9qIRKSGUrkee2F1KpJCFFCCVFIjuJFlFSkbIO
Zi5aSFGdW4ikTbJl35cxY/vIln738/r24695vV/Pueeee+Z5nnter7vshIvJ
SSEBAYEbggIC//2qwcKeP3+YJDdG6jzufwkddFwZOjbOJA/5rb26qvQS8rqz
YcXQv0zyhl9yrvV8b1Tca36io5dJZvdZTuameyPre49qy6qY5BWdw68Eqn1Q
5IDSx/tZTFIiXbPk8DJ/NJykS2gcY5JRXx6oSqYGojyR42fs34iT4Tk+HoYL
QpHfp8ret8fFSBY3yig+8RbqTlkktV52DhmgX/i71/w+Um7cNYtZL0omhsCp
JRLxKFkyabgmcBYZILbt+JyUJFRwtPQGAhFyQmnf6Y8vWOhrsmT/jo0iZGPY
k2PGRSzU0Gdh8llThCx1ilL68I2FRv34C+tXiZCbzJUZrB4WUkueHz8uKUJK
XUhznJBJRTFcq6daXcKkhLFXuohPKjrrM1TJiRAmbRNrAg03pCHf93o6GteE
Sa2dEgaZW9PQNWZIbN5lYVIufbmy8N40xEqQtv7gJUzmGW74HXMyDf0s2tTd
YStMxsWLn9p9Kw3tEA+dWKYjTLqvnqOU052GZB/Jyt1rZpDvR7KK7SLSUcb9
ADGdOgbZGrOic0tMOtKP6hivqWSQad3lnyST09GxsMc/ZMoYZCIsfHU7Nx0l
nt927dFzBsmuNuSINqQjpV3OI6xrDPLxottGH5TYSHMgvyxHi0HmEVFHV+ew
UVGvXJ7pWgZZKHChJvQ1G5l2XE79pcwgNxfUXqwqYiOPn3sDdeQY5D9GFzv3
VLJRXlHr+teiDPLaRWHJhyNshMfMTipspJNSd6NlSE0OMtx61PN7GJ0cRl7P
MlkcpHzO49vXYDpZr5bc2UJwkGjC7VWf/ejki66ll0SfcVDJ1MeaEnc6GTW1
/Y4G4qAdeXob3xynk0MT5Y7cSg7C1y2ZSNOhk6oh8sDHCLTUeuMBliadBMMx
24OzCDQVbspJWkMn3a0FgRAn0Gtu+NGHy+lkgl59m8YiAm1M+5N/ey6dlKAb
lCWsJpDW0mZv324aKbZUOZN3gEDzjX9XXGqjkf43Hkp6mRFo2HvRas9GGmmw
XyHwlwWBntburz//g0ZujLmzt+QkgdZGv9t06i2NjPZK8icvEIhZ1HDH7hWN
5NXJYT+9CMQbGu+zyaWRG6SW6HT6Eihjv8ZDqwwaOVDxJaoihEDKYslTB+7T
SJk30Y2C0QSapUea7o+ikYqr7pen3SdQl2NdpvFNGvmKd1VhcxyBUkvmH9t9
mUY2Grhlb08mkGLwZaTvSiPnRLTZxT0hEO1ZgpSeM428K921+HM2gVqbX7vo
2FPr9zWo5+cSKBFGlmpa0sgziTYGjDfU/k3Y+a/aTSOro08/9flAIO4P++S8
rTSyvdzb36WMQC8eO5QY6tNI9S9Be/d+IdA+O0eJMxo0UiOB+7K6gkCym500
/6ymkZu2imwMrKLWK+NsFqFEjde/GbyolkD+307HP11MI4OrTLbMbSSQEXGm
cKs0jdTZsjvGtZlA0ldcuirm0cigh0tCUCuBnui5rv0lTLmwpkWhi0AtqW6k
7iBGdg/mqYv1Eygz0L2tjIuRkwvLOdUDBPKyvCBi1UnZMsswcohAkpIX9/nX
YaRL35oPH0YI1NR30W1uFUZqC924tnuUQESJ573EbxgZXa6g/3yMQNt8LzUV
vsfIMv1zm0wnCSRxxJtm+hYjf7Faz4T9JlCdho9SZz5G2tsImadPEShN3Nfo
4nOM3G6uMpDzh0Du3b5nZz3ByFeu+SuyBDLQlkK/qBgORo7eZPZFCWYg8Uf+
L1RYGLk8NljbXigD1XoG1L2Kx0gnT49/l2MZiHUwUMA4lrqfxHbZb5TPrQlS
bLyDkcM7DeIcaBlIXzR419kIjLxGa3PkUhZtD3YWvEbth6qLhwU9A1WhyxG3
LmPkhtRdOS8oJ8eEZCv4Y2TCkU8LBRkZ6Kz7lepsL4w0UTYP16Ksty90crs7
Rrr/MRQ3pSyiEiZX5YKRmuhP6AnKFfSr2xwcMXLrlb1Z/zm+6arDmO2MnfOv
Xb96bMY60dcfy5hj5Ja/LjcMH920dybuKBiBW2+bcVlVtHW39IxXZ8b5n+sT
mr4+JPLRYUVDoel4k1uCWmWa4LRPPYhMeuAoMG0z3yMKhPwU+n8r9a46evDh
xLSdjPddbmkdnbb5+b2btLVHpn0bde1Dz4fQ5r8GoWpTNcGB6XjDvf4HL6r7
p+27ZlbrlsczfmWx0eXwsX60/a8thkxymrVnPBHmNOEkPuOkrIHrxrT+6ftF
s/l6J4b5aIuB0ZAF5Y5/J46tbOKjiN+9D9dT1tosEsT9yEcc/4PxfOr/Db4+
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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
rfhcs4x3Ffz7vwTN+///JeD/ALwq1y0=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
ZSWCf98noN/+/30C+D9F/EG1
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
yNYlrNgrA6eroRjxhh4cy037/HJbBmYEmGlWhfbgvEVjTmt/pmM5IeqkQks3
lhtKKUpwTccpNvHaNX904UkZhykN5TS8q3vN7Req7fT1BH2+FZKCdTHVyox9
g4ddrJ8Pf4vBBqPO7l/c72PXdt4p+ZW+WDOGJ84IqQDXcuaqvwa8oayBe/OM
41vorqYqH5+MhScWjfqbn7VBt5zixnrjFODqbKod57SBdYJGhea+FFBUzrO5
vbQdFHiyUmcDUiBqKuiwUlA7OIZWj09dSQGydGmSqNJncAg08lIXSIW6Bd5d
7093QOC/Wbp2T1Kh8e3cOF+DLrjKrWYra6TBVFWQ1KojXeC1pnLXLjINNIo/
535J6QJH/bfqXg5pkBhdVrZ7uAuKMjzfuZxLg6LsUjZl1Q2N7m7TB9vSwMti
j8y5qW64v/nnaGxMOrBKrnvvdOyFfr3HX+oaMmCy3UvouV8vzGmegtH2DBCY
r0UZxvSC/p+Rf4pwM0DGt6pJ/U4v1PuaOHAWZ8JWzWYt4Tl9ULO6fUuZSyZk
l4pMPizrg717Llwe4GXC9lte51bOHYB6HQM3L4Fs2NWxTj5bYQCOo2WeeVLZ
4LTgW4Wk9gAUG5otrVLKhoBjZwemDw6Ajtdp+WIyG3LX5Jq33BuA947B9TZn
smH01ivJRJdBeHLx1bry79lw+fY6auLBECQu3DdftTkH/BfIJfx8OQSfbUws
VnbngLGvYNhM5xC8qjSoEGHnwBf1Zjsx0WGwUn32MEY4F5QKIsQVHIbBS3XN
ZrsNuVCQWxexbXIYuncbdajF50Lwz9ue5uIj8GvXWyL5Ui6YOmbZ2yiOgFKI
6so2lAuD0j4b9pmNwJsN5xKUy3NBPZUY8ckcAdJDVD38Uy7cOu/keEmXCe2r
5u1VUKYgcnCbWZYlEwYtY7NbNCiwMV27CbkwwSo55FjIRgq4QgJSRXFMOOe5
OsB1OwXrowobHrcwodG1NnPEgwKBzgsPaphM2HGIKVF/jIL/GIbn184wgQx1
84sLpuD4T8szr9VYIMm6lXovhoL7waO6PaEsiO6qUPv7KgWxH9pUB/9iQUmK
Q1bZDQrstWsXsfJYEGOvYpF0h4JJXgZ3op4FkbLFCrwqCvR9DYvEZNlgcGz/
ZsePFIg1qqZLaLLB/uYOX+/PFLSpS55bBGzY8c1A17mHgpOD3c4KnmwQfphl
xmZTUO0WJ73+IRvU/qMtViSEoE2q88NAExu+eY2d1hNDMIk3XqJ62ZD9Tju3
UALBesUeybmSHAhvuHFAVg6BzWu919UqHOjQTnm1bDkCn8gLiccNOLBD7UjY
1EoE+e2GYl88OHDB2VhupyYCRsKl+rSTHPA//b31qRaCDv2RWIsUDtzoFPVe
uAmBTFam4IMqDkjLXkrfZoTgrz1jU4mLuFAQZrx6zBLBDSHzxybqXHDMTz5P
7kRQV54X9n0LFxrPiPb77EYwQ1hPHPbmgqRwl5rtPgTy+Po9uTNcmBs33iru
hEDf/2fgm3Qu/Aqill09iCCoqYhjwOAC14hg7ndDcOHUP6W8j1xQ+HHRJMod
QYnGXp9CFheONkswIo8gaGgrUT8gyAMBss/S3hNBf7zgkJQsD5jFPg1zvREI
6jsW1q/hgcrpmWXpPggUh+64R27lQYfGT40pXwSGmSLK2o48+LXiQYeBHwJH
04PdQ348eNCYJL3HH0HIxL28yzE8+JbdXmkagOBS/jznPTk86Pvxo3xhIIIy
O1f5eWU8iHHc2v037SbBh201dTwYWrVQk74fh5G7EtnB7TyQe4vDkmiLuno4
aIzyQOdZcWk17UvnncVHhUbh9/0ZKHXFjzRKzNppi+5RXYNZp1F9vdc8Zi3q
aNwRXjXrk0tyPu5aNMZ3/lddiVSHr3w3vWve/j53nO+gV3pqF2UmQe63C95u
lz764gd/PenWw+K51tN8C6Y1W9SKzPA/L3uztKHAXID833rLjWgVkXhBvg+U
asQd7xXi24iaa/h81Ry++y4+nlSNFeH7vsoZ1soOUb6788O05ywX4/u9umn0
ePg8ctlvr8g1VXrxRJy/nlmy/6fBr/mk4m9/wFvbHtlL8Nd9n7rMX54tybdq
uY7n0uez7ri6oFb666wfyf0YTRMj+E5P6VNctGLWif4uJeWqsz5n3aazW4Pg
n1+Ext6no1oEKf/bgWJvrVN0CHLDG8mzDNqegxaftAwJcoFQyu5C2i51de5v
SYKUyhRTD6Ftfx14/mYE+emdxeL1tK2jK09KWhOk8E9V5RZ63ra56Ije2U2Q
q+193T1pbza6m2qzjyDbNLkDffS8blimuZxzkCAra6MeWdFW/1FYnHSYIN3c
uSN59HyvaFHatMaLID13SyZ00vMvc5/Cr/wI8khzWcFc2hKXZKx8TxDkqHaB
1fJjCOYEpraIRxBkSUV1kiKdn2mbBYdLogjyj8uNofPpfH3VPM+xiKXPT/eK
XL8X/f8NRc5JuEiQxik9NY5HEbQ+/35RPYMg33wZ657wQPAm/7j8i1yCVPou
MRlJ5/vJIS/tuUUEGXLlzqbdrvQ8bOl7UlRKkHeqP5667ILglryLhVk5QUrW
2Ix9pPsit3WP65/VBFlxPuT6/P0IUh+8Yak+I0iNzoZpMbpv4tMswuoaCHLj
hrs1X/ciCN0FF4Q/EKQj73x1oi0Cv7WVS/M/EWTh4FJpQ7q/PObrFG79QpAj
k3GLWq0Q2DVoVJ8dIchHkXp6H80QWBQW7ljJI8iwM8sj9bYjIGOUPjAmCDL1
gcq1OBMEem6Ui+sUQV49Iv/gmTGC389bSOP/f94C/wUNUL0w
         "]]}}}, {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {"\[Mu]", "Torque"}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, Epilog -> {
        Line[{{1, 0}, {1, 1}}]}, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
      PlotLabel -> "Triangular distribution", PlotRange -> {All, All}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]]}, {1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 2}, 
       LabelStyle -> {
         GrayLevel[0], Bold, 8}, LegendLabel -> "\[Sigma]=", LegendLayout -> 
       "Column"]], {1, 0.55}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.684541948297085*^9, {3.684541979631719*^9, 3.6845420339731903`*^9}, 
   3.6845421227183447`*^9, 3.684634501280901*^9, 3.684635726015329*^9, 
   3.6846680494755287`*^9, 3.684674595005321*^9, 3.684688679135581*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"Brown", ",", "\[IndentingNewLine]", 
        RowBox[{"Rectangle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{
             RowBox[{"-", "1"}], "/", "10"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", "Blue", ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
        "Red", ",", 
        RowBox[{"Polygon", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{".75", ",", 
             RowBox[{"-", "4"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.25", ",", 
             RowBox[{"-", "4"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.25", ",", 
             RowBox[{"-", "3"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.75", ",", 
             RowBox[{"-", "3"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"-", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "/", "4"}], ",", 
             RowBox[{"-", "3"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{".75", ",", 
             RowBox[{"-", "3"}]}], "}"}]}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", "Black", ",", 
        RowBox[{"PointSize", "[", "Tiny", "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{
           RowBox[{"MultinormalDistribution", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"-", "5"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\[Sigma]", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "\[Sigma]"}], "}"}]}], "}"}]}], "]"}], ",", 
           
           RowBox[{"10", "^", "3"}]}], "]"}], "]"}]}], "\[IndentingNewLine]", 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "8"}], ",", "2"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Sigma]", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "/", "50"}], ",", 
        RowBox[{"1", "/", "10"}], ",", 
        RowBox[{"1", "/", "2"}], ",", "1", ",", "2"}], "}"}]}], "}"}]}], 
   "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.676470766623321*^9, 3.676471003872978*^9}, {
   3.676471049882092*^9, 3.676471065234427*^9}, {3.676471129297615*^9, 
   3.676471149504457*^9}, {3.6764711932820797`*^9, 3.6764713150200872`*^9}, 
   3.676471922923559*^9, 3.676471966073427*^9},
 CellID->54126742],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{
     {RGBColor[0.6, 0.4, 0.2], 
      RectangleBox[NCache[{-1, Rational[-1, 10]}, {-1, -0.1}], 
       NCache[{1, Rational[1, 10]}, {1, 0.1}]]}, 
     {RGBColor[0, 0, 1], PointBox[{0, 0}]}, 
     {RGBColor[1, 0, 0], 
      PolygonBox[
       NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
         Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
         1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]]}, 
     {GrayLevel[0], PointSize[Tiny], PointBox[CompressedData["
1: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
BQ7StLbrOF/2BR1RMH3MhPVr8peiMP/tuj5g42TMhENp9pXZQdi3vjHyjc/T
QeNG5O8CzMMvo6mz+/+w4Jrz2XUfOQTaqf34iNc9BtzcR4iXe5Cop79qrFh4
Fvb9d9TyJu6zmBtCyzxOssF5m9WVradw/13m5356jQJ9s5BnbIR9ob/yrE49
DdKD3tuuxvuSbHkcxVyhgyFN2HQR++QB/2PB2/PmYMvGYe59N0k08jSjp+Ao
ngdaLWOkWRz13Lzz6tdRBiyR/OtssD9aBd6J8u7iANfpyRdVQ9hv9x2iaN8Y
hxS2bw+XKon+dF/T33uYCT++3eu82S6OCvRsmTnDmHe8gqucTAnkbXSi4+wS
DcZv9xr/68P5wlqdvTthBnp0Iu/n5RIopUgsvVBrBqaNoodTcD6FrS9cpjsw
Aw9dD+4RSBVHA/9lLTZsngG1sHzlQjwv1G3/msdpDEhZr6j2Z0kcTVUlSu7t
oUJpvdU9z+94v7o/3OZZmoHV/Plq0c9wf7F5RyjrKWCry/VV8jzO00Z1lb3m
bHA39i+zviyBSLVzxUu4H9kFuWKu8iTypZ2wy8f5w9/GNCt7TSJF/0Ftpy9s
0L74u1wF9z/c61TPaZsA6Qpv9xZdcfT2VaUw1y0GOPm8FTy+SKD19N3tV+8z
wKPq8MZbPAQSfth4PdkI+22ghHDLSQIptvLKOs5QIMYotSUMn8f7DD+LLTif
juwJf4ECSZSd98gjYSsD+AUCFrKXcP5kPTnUto8Dw6GPjY12Eijfw1l4GPPN
jQ/njbdlE8g2rJDuyaaCs8KOEDcjCdSUwdN2q5oG+W76Zwswr7H5MpzabNiQ
+FJcv/genvedLr+pUyyQ0Q4yTsF9cYhof1YaTINTc5RdLvjfk3+/LXLfOB0U
e7dov8L7mGK15uq5b0wwsJbPvojzUGmjMrfmLAPC+QIuzxiSKPe31M2Cd0wI
ZyP5q5jnVfe/9vg8SIM13nSJNLy/mlN+/adrmMBtduBEA87fyw6as25tVHgS
dMys8RyBHs5wt3K+UED8T1YsxwU/r/tg1erEWdg6ZBnThXla6q78XlvPSeiR
2rQbML8vWHU+E3lKA/t7i9V5BiSycHPO31mIeX/vOc9o7J/uRhM6Gaaz8Gx+
ZLZiCPPCiJNz1n4ahDUY8qzGfXGmsoa3SZ0K7p/tXLevI5HxNnON7SUU+GET
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
6vNklNMhSuy/fUy8X/8DNfQyyg==
       "]]}},
    AxesOrigin->{0, 0},
    PlotRange->{{-2, 3}, {-8, 2}}], ",", 
   GraphicsBox[{
     {RGBColor[0.6, 0.4, 0.2], 
      RectangleBox[NCache[{-1, Rational[-1, 10]}, {-1, -0.1}], 
       NCache[{1, Rational[1, 10]}, {1, 0.1}]]}, 
     {RGBColor[0, 0, 1], PointBox[{0, 0}]}, 
     {RGBColor[1, 0, 0], 
      PolygonBox[
       NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
         Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
         1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]]}, 
     {GrayLevel[0], PointSize[Tiny], PointBox[CompressedData["
1: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
       "]]}},
    AxesOrigin->{0, 0},
    PlotRange->{{-2, 3}, {-8, 2}}], ",", 
   GraphicsBox[{
     {RGBColor[0.6, 0.4, 0.2], 
      RectangleBox[NCache[{-1, Rational[-1, 10]}, {-1, -0.1}], 
       NCache[{1, Rational[1, 10]}, {1, 0.1}]]}, 
     {RGBColor[0, 0, 1], PointBox[{0, 0}]}, 
     {RGBColor[1, 0, 0], 
      PolygonBox[
       NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
         Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
         1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]]}, 
     {GrayLevel[0], PointSize[Tiny], PointBox[CompressedData["
1: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
/wMjW+Be
       "]]}},
    AxesOrigin->{0, 0},
    PlotRange->{{-2, 3}, {-8, 2}}], ",", 
   GraphicsBox[{
     {RGBColor[0.6, 0.4, 0.2], 
      RectangleBox[NCache[{-1, Rational[-1, 10]}, {-1, -0.1}], 
       NCache[{1, Rational[1, 10]}, {1, 0.1}]]}, 
     {RGBColor[0, 0, 1], PointBox[{0, 0}]}, 
     {RGBColor[1, 0, 0], 
      PolygonBox[
       NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
         Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
         1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]]}, 
     {GrayLevel[0], PointSize[Tiny], PointBox[CompressedData["
1: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
HfSvnXp4DpHU3C5V/SEC7ynvEB/LNWQ5dlgH0xSG05N3aNIZPfhYNEv/hDUR
pvv63yYV8WA9mpVHSlIEwTh1V7Wb/iySUeZP1r8rBoND/w3obSyiD9WZ9WUf
qXCeWqZ19MYKGn27/XbCJWHgiH1b8OTYKPolxjnKTSaCTHObmaE6N+a2ceae
KJsQrPJlVjr+ZMWuf+xOpEaRQMdmU/SZ3a141QeZR8cihKGO5M/P/24ID8iR
4K1r4YfDo0P/tp6bQw/PjCwlx1Ogzjy4KgPrRydpSWom/vzg0mgpllGwiLQ1
n8dc/I8O1/QyLEqP9KKjVhO8D3aTYN7seZ9V5ijiMlql81iTIe5tYtkRWzas
T2kbRUeZCgcMvKpvzgziX8yel3gME8H93+jhgY1y1GsczTfULg4Gh2tJxNYZ
1GMmXi1sTQKr9H8zFuQRFKHf/PnY/79f5GZGbvndgApFf6bN2hKga2au9u79
ZRTvPTHm95UEpC2WOYJO3Ngmy9+1uwSY51V5ZlTrxzxaeoCaEpg8/DZUkk9T
Ix832tOxJ5XpO8Z6MVMmB5sQNf661X/PSSD33VrXgLUDV8Kjtp85LQ7Sh//Y
+4WuoIWywR/x2mKQWRGV51Qwgg9lV1sTFQjwaIBTm7VyA+kWf5ZWcaJDVlrw
4tLVKWR/8oC4a6QAtOkf915w5MeGdp3NMpTnARd6XqiDei0qkPv7r+wccx4P
jpXav99AO0UCcxOOkqDN6eXri25MHpvQdTlUQwPbpz/LT57gwB7ffpMbfIQA
M+KsZoLu08jgvXJhuScPxKodq3dwXECK3U++P1pnQNFPOTFf7nZkevxQIp8M
GaTXk7myHwwjpddvr3IkkyDv2H3ip81rSEuhJGK0jAIqxDfZOcH5SEbjzENf
Tw6Y2Cp7IiubD3tmpaH7+isNgorvH3n8tQS/Pefe96eWACb7y4U2B66j7uit
pXeUCMD2ao+j7CgHRhCSTLi1i8nvj/PktHBO7MZG/ujRNebvMkv5nl9+4Xt9
brXFpHBCIl/dPzGpDTRwxt5uNIgGGm6G1w2WZlDvxRz1S5oEKBERz5lxmkTZ
LycfdX3jA6nK1bypqG+ogdQZ3+5NhOSuaI1M/Qk0uiW5S+MGD2C2jj0ZXtX4
uOmx6ZCP/CDbmHneS3oO7Y3R0Lp0kAKkCWRuqLiMvxOK//Y6QxjE3bOzOfrG
cCNTmdPUC0w/DaX8DJZix6IHZOpKmPvFp5cZx3g8jXbtHQyNCCXCPSN9VvLQ
KMpxswou/UuHzvW/B3LWR9Enk2y+UGafij2Qafc8z4Itkha1Ve8yeZJ9W/Is
xo6xX7OWaxMiAEY932O49ze6dIv8S1aZDqlvfdayK1iwmvHXLy//R4L/AeqM
tP0=
       "]]}},
    AxesOrigin->{0, 0},
    PlotRange->{{-2, 3}, {-8, 2}}], ",", 
   GraphicsBox[{
     {RGBColor[0.6, 0.4, 0.2], 
      RectangleBox[NCache[{-1, Rational[-1, 10]}, {-1, -0.1}], 
       NCache[{1, Rational[1, 10]}, {1, 0.1}]]}, 
     {RGBColor[0, 0, 1], PointBox[{0, 0}]}, 
     {RGBColor[1, 0, 0], 
      PolygonBox[
       NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
         Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
         1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]]}, 
     {GrayLevel[0], PointSize[Tiny], PointBox[CompressedData["
1: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
qQ==
       "]]}},
    AxesOrigin->{0, 0},
    PlotRange->{{-2, 3}, {-8, 2}}]}], "}"}]], "Output",
 CellChangeTimes->{{3.676470783775257*^9, 3.6764707939130287`*^9}, {
   3.676470829920199*^9, 3.6764708640944843`*^9}, {3.676470903722499*^9, 
   3.67647093557904*^9}, {3.6764709802999067`*^9, 3.676471004411406*^9}, {
   3.676471050842946*^9, 3.6764710656836853`*^9}, {3.676471131653288*^9, 
   3.6764711501049232`*^9}, {3.676471297459279*^9, 3.6764713164277487`*^9}, 
   3.676471923491651*^9, 3.6764719665285807`*^9, 3.684634501349966*^9, 
   3.684635726265483*^9, 3.684668049526926*^9, 3.684688679376834*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{".75", ",", 
     RowBox[{"-", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.25", ",", 
     RowBox[{"-", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.25", ",", 
     RowBox[{"-", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.75", ",", 
     RowBox[{"-", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "/", "4"}], ",", 
     RowBox[{"-", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{".75", ",", 
     RowBox[{"-", "3"}]}], "}"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.6764713623800364`*^9, 3.676471367359054*^9}, {
  3.6764714279189*^9, 3.676471434549323*^9}, {3.676471483974584*^9, 
  3.676471491130146*^9}, {3.6764715213396587`*^9, 3.6764715220939903`*^9}, {
  3.676471886330518*^9, 3.676471958465077*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.75`", ",", 
     RowBox[{"-", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.25`", ",", 
     RowBox[{"-", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.25`", ",", 
     RowBox[{"-", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.75`", ",", 
     RowBox[{"-", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "4"], ",", 
     RowBox[{"-", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.75`", ",", 
     RowBox[{"-", "3"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6764713678019037`*^9, 3.676471434956658*^9, 
  3.676471491934902*^9, 3.676471522490788*^9, 3.6764719147354183`*^9, 
  3.6764719588293467`*^9, 3.684634501401786*^9, 3.684635726302536*^9, 
  3.684668049579864*^9, 3.684688679418186*^9}]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "Problem 3:  given a variance \[Sigma] if you push at location \[Mu], with \
velocity ",
 StyleBox["v",
  FontSlant->"Italic"],
 " (everyone not in contact with the object moves at velocity ",
 StyleBox["v",
  FontSlant->"Italic"],
 ") , and variance bound ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Sigma]", "max"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", how long before you need to switch to variance control mode?"
}], "Subsection",
 CellChangeTimes->{{3.676456729376965*^9, 3.676456792954073*^9}, {
  3.676462023205823*^9, 3.676462123761077*^9}, {3.676462183093297*^9, 
  3.676462186933276*^9}, {3.6764622615292883`*^9, 3.676462261794133*^9}, {
  3.6767079936854773`*^9, 3.676707994070787*^9}, {3.678013488380001*^9, 
  3.678013506864674*^9}, {3.678013813226904*^9, 3.6780138627633266`*^9}, {
  3.6780151844238043`*^9, 3.6780152766910753`*^9}}]
}, Open  ]]
},
WindowSize->{1920, 1035},
WindowMargins->{{Automatic, 1280}, {Automatic, -119}},
Magnification->1.5,
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September 9, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1363, 31, 414, "Section"],
Cell[CellGroupData[{
Cell[1968, 57, 684, 11, 102, "Subsection"],
Cell[CellGroupData[{
Cell[2677, 72, 294, 7, 43, "Input"],
Cell[2974, 81, 223, 5, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3234, 91, 551, 16, 59, "Input"],
Cell[3788, 109, 2426, 69, 131, "Output"]
}, Open  ]],
Cell[6229, 181, 790, 23, 106, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[7044, 208, 1457, 37, 94, "Input"],
Cell[8504, 247, 48332, 817, 361, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56873, 1069, 48215, 815, 361, "Input"],
Cell[105091, 1886, 48287, 816, 361, "Output"]
}, Open  ]],
Cell[153393, 2705, 2812, 76, 135, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[156230, 2785, 1779, 44, 94, "Input"],
Cell[158012, 2831, 21510, 343, 361, "Output"]
}, Open  ]],
Cell[179537, 3177, 2446, 65, 89, "Input",
 InitializationCell->True],
Cell[181986, 3244, 670, 16, 154, "Input"],
Cell[CellGroupData[{
Cell[182681, 3264, 1937, 47, 119, "Input"],
Cell[184621, 3313, 42522, 832, 364, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[227180, 4150, 233, 6, 71, "Input"],
Cell[227416, 4158, 11227, 327, 553, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[238680, 4490, 12339, 332, 583, "Input"],
Cell[251022, 4824, 7052, 206, 339, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[258111, 5035, 7852, 216, 399, "Input"],
Cell[265966, 5253, 7002, 204, 339, "Output"]
}, Open  ]],
Cell[272983, 5460, 7203, 205, 345, "Input"],
Cell[280189, 5667, 5053, 141, 314, "Input"],
Cell[CellGroupData[{
Cell[285267, 5812, 297, 8, 79, "Input"],
Cell[285567, 5822, 471, 13, 75, "Output"]
}, Open  ]],
Cell[286053, 5838, 192, 3, 43, "Input"],
Cell[286248, 5843, 111, 1, 69, "Input"],
Cell[286362, 5846, 1381, 43, 126, "Input"],
Cell[CellGroupData[{
Cell[287768, 5893, 2393, 64, 176, "Input"],
Cell[290164, 5959, 237297, 4057, 395, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[527498, 10021, 2661, 68, 191, "Input"],
Cell[530162, 10091, 113123, 2019, 396, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[643322, 12115, 2636, 67, 176, "Input"],
Cell[645961, 12184, 84851, 1561, 395, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[730849, 13750, 1927, 50, 131, "Input"],
Cell[732779, 13802, 36332, 683, 326, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[769148, 14490, 343, 8, 43, "Input"],
Cell[769494, 14500, 6064, 182, 337, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[775595, 14687, 582, 13, 75, "Input"],
Cell[776180, 14702, 652, 13, 34, "Message"],
Cell[776835, 14717, 421, 9, 43, "Output"],
Cell[777259, 14728, 255, 3, 43, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[777563, 14737, 157, 2, 65, "Subsection"],
Cell[CellGroupData[{
Cell[777745, 14743, 2196, 59, 176, "Input"],
Cell[779944, 14804, 750, 14, 59, "Message"],
Cell[780697, 14820, 303, 7, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[781037, 14832, 2426, 62, 147, "Input"],
Cell[783466, 14896, 754, 14, 59, "Message"],
Cell[784223, 14912, 756, 14, 59, "Message"],
Cell[784982, 14928, 752, 14, 59, "Message"],
Cell[785737, 14944, 669, 13, 34, "Message"],
Cell[786409, 14959, 522, 10, 43, "Output"],
Cell[786934, 14971, 756, 14, 59, "Message"],
Cell[787693, 14987, 754, 14, 59, "Message"],
Cell[788450, 15003, 753, 14, 59, "Message"],
Cell[789206, 15019, 608, 12, 34, "Message"],
Cell[789817, 15033, 596, 11, 34, "Message"],
Cell[790416, 15046, 595, 11, 34, "Message"],
Cell[791014, 15059, 596, 11, 34, "Message"],
Cell[791613, 15072, 606, 12, 34, "Message"],
Cell[792222, 15086, 518, 10, 43, "Output"]
}, Open  ]],
Cell[792755, 15099, 192, 6, 43, "Input"],
Cell[CellGroupData[{
Cell[792972, 15109, 1089, 27, 69, "Input"],
Cell[794064, 15138, 750, 14, 59, "Message"],
Cell[794817, 15154, 750, 14, 59, "Message"],
Cell[795570, 15170, 592, 11, 34, "Message"],
Cell[796165, 15183, 752, 14, 59, "Message"],
Cell[796920, 15199, 604, 12, 34, "Message"],
Cell[797527, 15213, 373, 8, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[797937, 15226, 1389, 32, 69, "Input"],
Cell[799329, 15260, 752, 14, 59, "Message"],
Cell[800084, 15276, 750, 14, 59, "Message"],
Cell[800837, 15292, 750, 14, 59, "Message"],
Cell[801590, 15308, 604, 12, 34, "Message"],
Cell[802197, 15322, 280, 6, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[802514, 15333, 8815, 203, 679, "Input"],
Cell[811332, 15538, 105990, 1927, 390, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[917359, 17470, 56852, 1034, 390, "Input"],
Cell[974214, 18506, 57038, 1037, 390, "Output"]
}, Open  ]],
Cell[1031267, 19546, 207, 4, 55, "Text"],
Cell[1031477, 19552, 2716, 78, 194, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[1034218, 19634, 3201, 89, 219, "Input",
 CellID->70294289],
Cell[1037422, 19725, 86247, 1432, 348, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1123718, 21163, 198, 4, 65, "Subsection"],
Cell[1123919, 21169, 1609, 49, 160, "Input"],
Cell[CellGroupData[{
Cell[1125553, 21222, 842, 21, 70, "Input"],
Cell[1126398, 21245, 9619, 286, 493, "Output"]
}, Open  ]],
Cell[1136032, 21534, 10006, 289, 523, "Input"],
Cell[1146041, 21825, 5152, 143, 314, "Input"],
Cell[CellGroupData[{
Cell[1151218, 21972, 297, 8, 79, "Input"],
Cell[1151518, 21982, 465, 13, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1152020, 22000, 184, 4, 43, "Input"],
Cell[1152207, 22006, 300, 6, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1152544, 22017, 1947, 49, 119, "Input"],
Cell[1154494, 22068, 21009, 431, 312, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1175540, 22504, 2711, 68, 176, "Input"],
Cell[1178254, 22574, 95052, 1733, 323, "Output"]
}, Open  ]],
Cell[1273321, 24310, 1286, 38, 128, "Input"],
Cell[CellGroupData[{
Cell[1274632, 24352, 2270, 61, 176, "Input"],
Cell[1276905, 24415, 750, 14, 59, "Message"],
Cell[1277658, 24431, 750, 14, 59, "Message"],
Cell[1278411, 24447, 592, 11, 34, "Message"],
Cell[1279006, 24460, 750, 14, 59, "Message"],
Cell[1279759, 24476, 606, 12, 34, "Message"],
Cell[1280368, 24490, 278, 6, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1280683, 24501, 1717, 38, 100, "Input"],
Cell[1282403, 24541, 750, 14, 59, "Message"],
Cell[1283156, 24557, 752, 14, 59, "Message"],
Cell[1283911, 24573, 592, 11, 34, "Message"],
Cell[1284506, 24586, 750, 14, 59, "Message"],
Cell[1285259, 24602, 604, 12, 34, "Message"],
Cell[1285866, 24616, 592, 11, 34, "Message"],
Cell[1286461, 24629, 592, 11, 34, "Message"],
Cell[1287056, 24642, 592, 11, 34, "Message"],
Cell[1287651, 24655, 603, 12, 34, "Message"],
Cell[1288257, 24669, 618, 12, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1288912, 24686, 897, 24, 69, "Input"],
Cell[1289812, 24712, 750, 14, 59, "Message"],
Cell[1290565, 24728, 749, 14, 59, "Message"],
Cell[1291317, 24744, 592, 11, 34, "Message"],
Cell[1291912, 24757, 750, 14, 59, "Message"],
Cell[1292665, 24773, 604, 12, 34, "Message"],
Cell[1293272, 24787, 592, 11, 34, "Message"],
Cell[1293867, 24800, 592, 11, 34, "Message"],
Cell[1294462, 24813, 592, 11, 34, "Message"],
Cell[1295057, 24826, 603, 12, 34, "Message"],
Cell[1295663, 24840, 299, 7, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1295999, 24852, 1250, 32, 100, "Input"],
Cell[1297252, 24886, 751, 14, 59, "Message"],
Cell[1298006, 24902, 752, 14, 59, "Message"],
Cell[1298761, 24918, 754, 14, 134, "Message"],
Cell[1299518, 24934, 606, 12, 59, "Message"],
Cell[1300127, 24948, 595, 11, 84, "Message"],
Cell[1300725, 24961, 442, 9, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1301204, 24975, 7123, 175, 1254, "Input"],
Cell[1308330, 25152, 34949, 666, 347, "Output"],
Cell[1343282, 25820, 41144, 793, 324, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1384463, 26618, 1593, 43, 244, "Input"],
Cell[1386059, 26663, 30917, 631, 313, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1417013, 27299, 2633, 64, 253, "Input"],
Cell[1419649, 27365, 178060, 3132, 502, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1597746, 30502, 3322, 91, 366, "Input",
 CellID->54126742],
Cell[1601071, 30595, 107347, 1783, 522, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1708455, 32383, 914, 28, 64, "Input"],
Cell[1709372, 32413, 912, 28, 97, "Output"]
}, Open  ]]
}, Open  ]],
Cell[1710311, 32445, 888, 20, 231, "Subsection"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
