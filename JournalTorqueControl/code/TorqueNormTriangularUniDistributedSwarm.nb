(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1600501,      30622]
NotebookOptionsPosition[   1592275,      30378]
NotebookOutlinePosition[   1592652,      30395]
CellTagsIndexPosition[   1592609,      30392]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 "Problems: Torque Control With a Swarm of Norm,Triangularly,Uniform \
distributed Particles Under Global Control\n\n",
 StyleBox["Given a swarm of particles, whose positions are normally \
distributed, and a pivoted object, where should the swarm hit to generate the \
maximum torque?",
  FontSize->16],
 "\n",
 StyleBox["related problem:  shooting a railroad track switch with a shotgun. \
\nF = force provided by entire swarm\nN = number of particles\nF/N = force \
per particle\n",
  FontSize->16],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"]}], "/", 
     RowBox[{"(", 
      RowBox[{"2", 
       SuperscriptBox["\[Sigma]", "2"]}], ")"}]}]], TraditionalForm]], 
  "InlineMath"]
}], "Section",
 CellChangeTimes->{{3.676456729376965*^9, 3.676456792954073*^9}, {
  3.676462023205823*^9, 3.676462123761077*^9}, {3.676462183093297*^9, 
  3.676462186933276*^9}, {3.6764622615292883`*^9, 3.676462261794133*^9}, {
  3.6767079936854773`*^9, 3.676707994070787*^9}, {3.678013488380001*^9, 
  3.678013506864674*^9}, {3.678013813226904*^9, 3.6780138627633266`*^9}, {
  3.6780154731946793`*^9, 3.678015503683338*^9}, {3.684533968985187*^9, 
  3.684533971087208*^9}, {3.684542163365937*^9, 3.684542167980525*^9}}],

Cell[CellGroupData[{

Cell["\<\
Problem 1:  marginalizing to 1 dimension, not thinking about distributed time \
of impact
this is only a one-pass of the swarm at the object.  The kilobots are pushing \
continuously.  (math is for one step, real world is an iterative process)\
\>", "Subsection",
 CellChangeTimes->{{3.676456729376965*^9, 3.676456792954073*^9}, {
  3.676462023205823*^9, 3.676462123761077*^9}, {3.676462183093297*^9, 
  3.676462186933276*^9}, {3.6764622615292883`*^9, 3.676462261794133*^9}, {
  3.6767079936854773`*^9, 3.676707994070787*^9}, {3.678013488380001*^9, 
  3.678013506864674*^9}, {3.678013813226904*^9, 3.6780138627633266`*^9}, {
  3.6780154731946793`*^9, 3.678015502323708*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StandardDeviation", "[", 
  RowBox[{"TriangularDistribution", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Mu]", "-", "b"}], ",", 
     RowBox[{"\[Mu]", "+", "b"}]}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.684532736145203*^9, 3.684532744580744*^9}}],

Cell[BoxData[
 FractionBox["b", 
  SqrtBox["6"]]], "Output",
 CellChangeTimes->{{3.684532738975494*^9, 3.684532745205942*^9}, 
   3.68463443986845*^9, 3.684635658683772*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"PDF", "[", 
   RowBox[{
    RowBox[{"TriangularDistribution", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Mu]", "-", 
        RowBox[{
         SqrtBox["6"], "\[Sigma]"}]}], ",", 
       RowBox[{"\[Mu]", "+", 
        RowBox[{
         SqrtBox["6"], "\[Sigma]"}]}]}], "}"}], "]"}], ",", "x"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.684532574058216*^9, 3.684532603591757*^9}, {
  3.68453271452549*^9, 3.6845327153553267`*^9}, {3.684532754129568*^9, 
  3.684532765505777*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        FractionBox[
         RowBox[{"x", "-", "\[Mu]", "+", 
          RowBox[{
           SqrtBox["6"], " ", "\[Sigma]"}]}], 
         RowBox[{"6", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", "-", 
          RowBox[{
           SqrtBox["6"], " ", "\[Sigma]"}]}], "\[LessEqual]", "x", 
         "\[LessEqual]", "\[Mu]"}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"-", "x"}], "+", "\[Mu]", "+", 
          RowBox[{
           SqrtBox["6"], " ", "\[Sigma]"}]}], 
         RowBox[{"6", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{"\[Mu]", "<", "x", "\[LessEqual]", 
         RowBox[{"\[Mu]", "+", 
          RowBox[{
           SqrtBox["6"], " ", "\[Sigma]"}]}]}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.684532570795553*^9, 3.684532603974053*^9}, 
   3.684532715804618*^9, 3.68453276621266*^9, 3.684634440145928*^9, 
   3.684635658925296*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"pdfNormal", "[", 
    RowBox[{"x_", ",", "\[Mu]_", ",", "\[Sigma]_"}], "]"}], ":=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{
      SqrtBox[
       RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Sigma]"}]], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"]}], "/", 
      RowBox[{"(", 
       RowBox[{"2", 
        SuperscriptBox["\[Sigma]", "2"]}], ")"}]}]], " "}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.6764622317264*^9, {3.676462275865959*^9, 3.676462333498724*^9}, {
   3.676462386203244*^9, 3.676462388994298*^9}, {3.6764661175139837`*^9, 
   3.676466119114414*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"pdfNormal", "[", 
      RowBox[{"x", ",", "1", ",", "\[Sigma]"}], "]"}], "/.", 
     RowBox[{"\[Sigma]", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "/", "2"}], ",", "1", ",", "2", ",", "5", ",", "10"}], 
       "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "4"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{"sigs", ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", "Bold", ",", "8"}], "}"}]}], ",", 
        RowBox[{"LegendLabel", "\[Rule]", "\"\<\[Sigma]=\>\""}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.75", ",", "0.55"}], "}"}]}], "]"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<../abecker/SwarmPublications/JournalTorqueControl/pictures/pdf/Normal.\
pdf\>\"", ",", "%"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6764623486045923`*^9, 3.676462394184904*^9}, {
  3.67646603305241*^9, 3.676466039085231*^9}, {3.676467095974711*^9, 
  3.676467144451521*^9}, {3.684635469667963*^9, 3.68463547031621*^9}, {
  3.6846355483145647`*^9, 3.684635568532795*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
NJBTa/q0VoM40aX7eZS8jj1PX9NaOq1OnOdwuqLEuoZtLu6ZND5nTVzRqzY1
o17BnattdjvTQoiQdxRlRjuX8CA6L5L4J4OQCZzdZnRqAc8PnepKiaggmpz3
5AgdncPd3DNWmak9RM3V4LtHz89g05GuI+zCK4RRp8GCiuIUzo85sfz1OxeE
OhgTH4CM61Lt2sPmJECYQ9agt2AUC6blCXI5K4HINdHWoYwhPN6g/bflgz5o
97SKvGnvw9ubuNh4O6zB3Yz+3O3d3bjJ4MTIvkv3QIpWVTJerBVTtSjxpjWF
QsFlh2s+z+px2h4tEzaZBNB6Y15f0vQVr14rr8B6r0GoWjjU42gKFhenb7T5
/An0NToeCzjlAU1NlEF2VRl8k0jbp+74HdiurN8TpKiFgJKDRrEhPcB+rUIh
dLwbRlX/5LddGIBXpJ+aPUr9oP+O2SH82jB0XC96dZ96CGJGvI39ZcZhnKZA
XcV0Y36PJE4ULpLB8GLTwbZLJODa7Ttxa30KJrNitPhrB8Eq7ZFnXd8MKHX8
Vh081A8UN/7oLTUsAVOnIJ+wdQN8P/pzfLx9BQpYPlxmZKoBz/FBQZryNaBr
I41/jC+Dy5x7pIO1KBAWr2kaDf4Et0XyDmVfoETRT4JZLKhfg9XxAxzvlanQ
woMkvbiziWAGXj9/nKVGkWfaTb7cCYWaosG/8/I0yNtLfjfjSU9YcCNb7ZGg
RV2MGX01726BiERHw83DdOitTfjeit36cKjr9cGgffTIIMWJz1xaGa7VVqaJ
iTEgW7nq9IJ4cagRP1uSeIgRXbU49qb/6w5gCskqHeZnQq0zVScbzFYJte7p
OJ09zOjedMzTzqVuYv21WnkNFwvq+ClUf8n6G+H8UdFZmZYVZa3zFjyZzyRG
PwmsNNOzocMTV5XhUzDBYIJ5/ZbY0GwO55jGSRvCbD7EqGB9DVMYvGwvszEk
eq8FK1TSr+LPLfuovsp5ELl3TqET7Mv4FdP5t22WccQ9vtRPa2KLWMRyeIi5
4BMRLuWmkHd8Hg9e+ffNTb6BGB9e76tVnMX/GXfrfT9LJjT/O0t6qjqNC2X1
iAtLDODZonrXCU3idsYl34SAPdDqqvHQOnEcWwnc+Tr19gR8Fghp0coexnK6
9onfzp6Hw+ySpmtlA1ialF7x+b0FJPErNemt9+DfKnF6u/ScQVbUrI9PuhNb
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
6S3PtdfNODQkwqa3tNUct3jsmrrlLXPmvt8MiMnc8pYmB50CIorfb3lLsfHM
I1/3f9jyllKDf2J9yJ+3vKXtiWQTEcBb3tI2qzh9Z0PZ/7zlU2tSOfe3LW8Z
pj309Hlr9Za3bKr8cjkmp3bLW74YfLGj7lXdlrcMOJZFpR9dv+UtdbkvPxNW
/Z+3fNL01dNuqnHLWxZofr2rp/d3y1vyDjOZPjNq3vKWCwMpY08FW7a85b21
ad1Ej5Ytbxklocv66l7LlrdMteOWmuZr2fKWZqBzS/Ra85a31Ev53Sp55u+W
t1QSCDVn6W7c8pbRR1BrrOH/vGWBP2WtfWD9lrfcn9M4NFNUt+UtLx89EXm3
q3bLW3IX+oT4UX7f8pb84kTwA79vW96SlsxdeXyhbMtb1pdHqOxtwVveMqHA
0+q2S8GWt7QZ+f3yseaHLW/JkLzuLHwge8tbMmbfWZL4kLnlLZmF+Si4H6Vu
eUvKnIow3cIk2PSWCR1O42zPnsKmtxQMDdPlT4mATW8Z7OVyx3R/EGx6S216
2ojKBB/Y9JZFcmK/eD67w6a3rPi/62HTW+KjN6ldklxg01v2hl0U2vHdEza9
pbjgvrEXL/xg01s+dq2/oxXwCDa9pXnSJW3ubVGw6S13MQsXig3Gwqa3zFM7
HLKtJnnLW15t0eOhN0vf8pYNCjNR+n1vIChX13fhZhfc0Nj/XOJN05ZvzBui
oEzu+bvlG+NOjakUfm/e8o0zcqmkCYOWLd/YZnA0TSmgZcs3Un4jRPk3Pt/0
jQMONatuG7/f9I0PlfSt6Lr/QiIaDM/qmYe9kpEfv8U3bXlCqwnWlu8X3255
QkWqxm2ebulbnvAt5dObSdwvtjxhbLlKo7t1HGx6wtDylsv9dlGw6QnjJXs8
um+FwqYnnHjYr/zfLn/Y9IQ8uxRXdz+7D5ueMEJSizWNwxU2PaFA4em5HfVO
sOkJ0/mTGlUFPWDTE1pp19r3zzyATU8Yejq3d84sGDY9IcPEuoHko8ew6Qmp
ngfmSvA+g01PWBE4Emn6+PmWJ2whFci97X655Ql3oKTtp45mQarX9OStX52w
L+qmWY9205bfa+so7Hif+HfL7505mpOe9KR5y+/Rar/+uw21bPm9kKT48BN+
LVt+z1s+UD/JtmXL7wln27GYzTZv+T1Kms4/Q8LNYCyouNJnPg8u3vTXlWea
trxc1pOOjtq977e8nKhCA80h1owtL8cbyvN57GzKlpdjsayk5nmQAJteLlzt
etGthWjY9HJUukOP/rsSDpte7k7kDi1u9gDY9HJpckUJGge8YdPL9d1INKvX
uAObXi5DylHsUcRt2PRyvlbFj+sbvWDTyxnIv7h92O4hbHq5u3vJ5pwNYbDp
5X5FsXqNZ0VDWdq7MNlb3UBbsttlB83fLX8Wamc4syzUvOXPoi6LuX1daN7y
Zw35u1P3bpzPTX+mS6MWU7xxvjf9GZHybPWwfMv//JmN62nj2OYtr7V66uPx
k07PYNNrqekyxLisPYZNr6WrSCXz8EQIbHqtS64OnBc0fGHTa30T2ZZ7kuMe
bHot7Wsb0ym9M2x6re209cYOC46w6bXoLh0SlfnnDpteK0ufYZpd9AFsei0m
5fCz1y4HwabXusT5XyJXYwRseq0XdXP8Q6diYNNr3bfjUlFbSIJNr3U1+cjV
UtGXW15L+o8PTezV13DrUczAwdoOMD6pm52xp2nLR/FHfzvEdvfvlo/iXpI8
fMm9ectHWXhLmdEdbtnyUQprOpwJ3i1bPspt52D+tGvLlo+CQebERoaWLR9l
dE/ZGak0g1z4xGFvoXmwuCm/T0vg75ZHYrA2GQtIfb/lkQgnNc64zowtj6S8
h/3AfVLKlkfaeeasJFtcImx6pNI5F4nMiiew6ZF0aBzYn1NEwKZHumezfc6O
OxA2PZJW4iWngn/esOmRHhMLjO4ebrDpkZZtKtS/RrrCpkfKmoyTb+T1gk2P
5M3DQTXr6w+bHomvjcksICMUNj1SCL1JpVRbFIiIUwXxjnSBaJed/JGWpi3f
8/z3uY+9VM1bvuel9/w9357mLd9D83Z+75erLVu+J61gN8552LLle+xLJN2n
1Vu2fA+ejozYltu85WFG/oS2+FjHwqaH0TNiir+cFwmbHoZ3p9fxI5qPYNPD
nEEsNWOSfrDpYTS66Vcqz3vCpodpPmDNdobeBagCkDNDwSDsHWi0sMlu3vIi
1Kdkv+eda9nyIiyKzUftN/Z304ssvS/zy9o4nk2PwP3nRj3PxnrZ9AjB4ukP
rvq0bHmEAz6+fm2HWmCz3x+VKDtO2u4Em/3+C5mHrpeHOsJmv3+O30vbVskd
Nvv9LzJHi+oqfGCz3+95v05IvTUQNvv9zxoCHTTvRsBmv19eUul56q+nsNnv
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
J38Za5zK4PqpRuGcl9OtExhcP907bZ97jFEcg+unu5ulVKcMRDC4ftoT+Khp
g2cIg+unHaNy+852+DKB0yZIlRm2Mkb2j9XHQr2K64sPNTv6BXpCWl+UM4np
Pw33B1xffFWzIO2gh5DWr9T8JtpqeQpp/Spmg8sXZ9gf16/u9+evXqkjZHA9
6NZPLZ+2Vh9aj2FVL+6eDvcTXI8ZOaLpwz+4n+B6xKLRyieGuAhpPSI44WJC
JMxv9H77f6NVLkCMvm9vGM3uh/d/9P1YQd72JrifoO+HGupYDun2ZtD3Y+ak
Tm+F92P0faWimhcT4Pqg7y99uXVCNdwf0PfV+zKS6+B+gr6/+aLCtxFwP0Hf
P7nYSZ8F+6Pvt7SXTFWC8dD326eN+dgb5M2g7xttr5VeCtvR97MaZ6gthc+j
79cc/RirAr8Pfb9Jw1TvM8To++yKY9YCiNH3i9tLi1dAjL5v+qqGuwLGR9//
PnpC4FcDbwZ9//m8bV6SCbnk+9Hvvzu0T8wj369UbMg4eT+ffP/fxIqOMZ4F
5Pt/MkY+VVO8Sb7fU5ul+rWviHx/3NvzYSWVxeT76+5FDT1TXEq+37347pbc
a3fI92unJ3n/XFVGvl/o5qCWqF1Ovv93dOtNNZUK8n29TKX/FvdXkO9fvK54
0e5DJfk+d7L+vXpuFfn+yln3f8dFV5Pv2/4oWdVtfI98P3Dph9CIH/fI9y/v
t1FdlXiffH+mj05EnjyPfD/Kdll9RiKPfP9a0XL9Yb945PtZn/qcR6zgk+87
ifeM0tjLJ9/nTtj61zaCT75f9XBJ6HmI0fer/Ex2VLnzyfdzLE6UrVrFJ9//
4r7w788fPPJ9yRu+jeUneeT72XdSff1UeOT7x2eHBRw4dZ98n7W3e67373vk
+7ITN2jEbr5Hvh/V6TOafaqafD/m+a6apEdV5PsqKksFjd8qyfcP9Z+L9phU
Sb5/PC7rqNbSCvL9pE7Z77565eT7HWpjxydYl5Hvd7dfffmde4d8v69n43X/
ilLyfYvCqI0mP4vJ97/eTlvAl7xFvp9wqiLw3dqb5PsW4n2dfskF5PtWjqqN
nQ355PtXY2ZsqNPPI9+vH5wP6Pue5+Nn3TXnMPXZo22KrguYJ+tKV02045G3
e9Qkaa7n88jbw50zspYo8snbhz2vi9pqzSdv77vd23PlEJ+8/fsh98ero/jk
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
FmeTZ1Qs031nMo5NnuEuf+CYpQKbPOPc1HPVL2awyTOuzpPv9lnIJs8wM7/f
IK/NJs8Ym2yk4qjHJs/wdFk1OnYdmzzjV0uzXJkZmzwjuu5Kfaklmzxj1NVQ
p71b2eQZyVJpbf3b2eQZeVv15io6s8kzDjpO2WbuyibPmKt+VPrkbjZ5Rl9N
yowF7mzyjOs3Zhi2QYyeYfdV3/UbxOgZbycYuEyDGD1j3kM1j4swHnrGWKHb
roXwfegZO1703v7hxCbPiLva8W6hI5s8Y8uExz0b4PegZ0yYx7D+wO9Fzxho
q1023pxNnsH5+aBLCOcLPUOt/OmFHfps8oynk7IrguB8o2eYF+5b6qXOJs+4
bNYY92Ymmzyj+n1NOheuJ3rG3WlnX50czybPkJ769lkB5AN6xmKdIF0TyBf0
jLOFrRenfGaRZ0zzDWwa/pJFnnH3BxPL1LDIM265GyYqlrLIM7YnCA1+QT6j
Z8Tk7nA1TmGRZ+B8QM/YtsI9K+cEizzj2jS1gIf2bPKMUZKXgtV2sskzFr1L
M3ziwibPUFAqqo90Y5NntCybahqwh02e8bn243c2XF/0jImrjGYO82CTZyht
11zJgu3oGSOX7K/yh8+jZ2wbu8U8HMZHzzCKaPa6Ct+PnqFodVJTdHzoGecn
xRkK4fjRM3zPXr5VcJJFnvFPP9lvUwyLPENuf2kFaxubPONLr660/A42ecbp
osM2/ZD/6BmPm4c7/IB8RM+YLSX1dxQcL3pGplePnyf8HvSMgqk2X/ohRs84
1OUSVQcx9TNMsmurh8+jZ7B3nNOWh/xHz9BZ4D9s/y42ecZ4c83FEyH/0TOM
G25vGAXzFT1jYfD2H0cTWUz4tBkpj0tfMvPuXtGYDfujbwgmDHQlwXjoG2XD
FxVLi+bboG+4Ms0Sr+B40DfqCsceewTHi77xMO1T3wDE6BvVIWKRbhCjbyxZ
NPv7RPg8+kZOT2hBE5wv9I1t/hq8F3D+0TeGWrya+F80i3xjTrFVlBRcD/QN
1X3cguMwv9E3jv5YvzsOrgf6Rt3HSxtZMD76xiy7+7fq4Pegb8i61K03g+ND
37A9djmiB2L0DaOFVZeaIEbf+PtUNu0vHD/6RljlKKntMB76Rmvg1K31cP7Q
NxadmLMrHM4v+kZSTeCaNLge6Bs8D6t7X5JYzLWPZ/2rCoTMZE7XiWzIV/SO
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
Gh99ZKGz5KIV8P3oI0MG/8P6EOP/7+3/B3Z66Xg=
     "], {{{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1: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
Ag==
          "]]]}, {}, 
       {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV1He8T3UYB/Bzl5FxRVRoXKIkNEVaIk0jmVFJtG0qWhpKqSgNu+y99y6S
kTKLzJK9y969nz/e9/N8P8/v3PO6v3NeN6tpq9otU5MkSaGzH73SkqRCjiSp
yFJzwYwkWZKeJHnk+/IHMszV5BvM4BwXczftmMAxtrv+AjeYn2EA/7BEl0/e
RVvGczR2+vOUNjehP9tYrMuUd9KGcRyJnf4c15ufph9/87Mur6xEa8byX+z0
Zyllfoq+/MUiXR55B60Yw7+x05/hOvOT9GErP+lyy4q0ZDSHY6c/zbXmxvRm
Cwt1WzhFSedG9GIzC3SbOUkJ5yf4lk38qNvECa5xbsg3bIznoJvPPOYyh9nM
YiYzmM40prKR4xR3bQO+ZgNTdBs4RjHn+nzFn0zW5ZIVaMEoDsVOf5Qscz16
sp5JuvtlJ6Zzlou4nVcYycH4rM/dJ1+L+3MqnqfuLTmLC1xNXb5kHRPt35Pz
Sff+VY3nQE5zRzmNM3GO508u/Tsyn5wjU2R5mV8ukNnlyzKvHCEPxH3c4xLn
xebcsnO813KuTJWVZQG5UOaQr8pMOVmejHfM9Yvib9a9KWdynqviWZJNX0d+
wR9M8Pl35TzS7KrI15nK6bgHbzObxP42+RLD2R+/w/X3yg7x3XMi3lvdlfJx
evA743XZ5a28yDD2xU5/j2wf3y/H4z3WXSFr0521jNNlk7fwAkPZGzv9IYqa
H+Nz1jBWlyFv5nmGsCd2+oMUMdfiM1YzRjeaUYxkBMMZxlCGMJhBDGQ1Byjs
2pp8yiq+161iP5c716AbK/lOt5J9XOZcnU9YwQDdCvZyqfOjfMxv9Nely5t4
jsHsjp1+D4XMj9CVX+mnS5M30pxB7Iqdfnf8PzU/zEcsp68uVZajGQPZGTv9
rngfzQ/xIb/QR5ciy/Js/M3siJ1+JwXMD9KFZfTWJbIMTeN7YHvs9DvIb36A
D1jK/1Zc23E=
          "]]]}, {}, 
       {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0VWUUGUUgNE7AwMDUvJASYdSSjN0SCMIDKXSQwvMSCMd0t0l3SmoSCvd
oSCtSHdJ97B52Os759yXu9afKSomMjo0CIIQYkkRFgSFw4Mggkrm5PGC4B9N
qKv1b0LNw3Qxh3jJt/RnNrt4SB2a0Z3JbOYmFalAecrxOWUpQ2lKUZISFKcY
RSlCxPv/oxAFqU1TujGJTdygAJE0oSsT2ch18tOWfsxiJ/9Ti8Z0YQIbuEY+
2tCXH9nBA2rSiM6MZz1XyctQFnGQF7SmDzPZzn1q8APz2cdTGrKUI7ymE+P4
jSvkYRXHCfEOQ/Q08cwL9QDPacVZwt2Xa2L9U9/Sm6T2kxpXZ+gHuk3v8SUf
2s9pAl2hSfQvjWUQyeynNEznaSLdq09owBniuy3Rw7yiIyeI4z5W13GZz1jJ
MQLfBusC9vOMlizjKG/oxXT+4C7VGchc9vCYb/iOMfzKJT6lBT2Zxu/coRoD
mMNuHvE1MYzmFy6Sm+Z8z1S2cpsv+IpoRvEzF8hFFD2YwhZuUZX6dGAka/mP
nFShHu0ZwRrOk4PsfMLHZCMrWchMJjKSgfSkIy0fkYbUpCIllalLO4bzE//y
DgRph3o=
          "]]]}, {}, 
       {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0mUUFVUUgNGhQ7pBuksapKS7OxWkQaS7u7u7u7uRkEZBQFFRSVFROhWk
9vzY7zt3zf0x651J17JLnc4RgyCIQFw/CaMGQYHoQVCQcuY00YLgT02qu/Qa
cc0TdRM/Es25o45gJed4S11a0p8FHOc5ZSlDaUpRkhJ8QnGKUZQiFOZjClEw
fDfyk486tKAf8znGM/JSm8/pyzy+5il5qEVz+jCXozwhN18wnBV8yxtq0oze
zOEIj8lFB4axnG94TQ3Gso5LRPL/fKa9mM1hHvERE9jIZaK6116Hsoyz/E91
xrCWi0R071Pdws/EcO6pszjEQ3Kyk6vE8Xy83iKheYP+QBRzO71NYvM2TaG/
6Ac6RFPqDY2vSzWZntFXVCO18x+aRLfrh/qrxtLRmkpvagJdo8n1gkbQpvo7
icyb9Seim3vodeKZZ+pXPCAHO/iN2J6N0/V8T2TntrqVK8R0HqxLOM1LqjKK
1XxH4E4T7c4MDnKf7LRhEIs5xX9UYSSrOM87GtON6RzgHtlozUAWcZJ/qUwj
ujKN/dwlK60YwEJO8IJKNKQLU9nHP2ShIg3ozBT28jeZqUB9OjGZPdwhExnJ
QHrSkZY04R7DXYX7DncYfgfhrsJ9kzTcb/iNhLuiPPX4kkns5i/eA04PiXI=

          "]]]}, {}, 
       {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0mXYFVUUgNEL0iAhISHx0Y2EtHR3SYPS3Q0SBt0o3Z3S3Up3p5TSoXTn
mh/rvufsmef+2RPWuEO19uFDoVA44vlJETkUyhElFMpJVefs+lIz6B59SJjz
VN3GbRK599JxrOUKsc1+0A4MYQmniWReRStTiYpUoDzlKEsZSlOKkpSgOMUo
ShEK8z3tGcxiThHR/xfShrRjEIs4SQTPvtUGtGUgCznBZ54V1J6MZQ2XiWVe
X9vwKws4TnjzAtqDMazmEjHN6+lENnGd+Gat9Rfmc4xwZvl1Clu5RUKz7jqa
VfzN52Z1dQIb+Zd4Zq10B3dJ4v6zzuMoIfd8upv/SeE+WZ+SxnmL3uRL5276
nHTOf2pmva9JdZRm1ceaSldqRr2oMbSOfq0vNL3+pVn0gSbT8ZpNn2hq3aCZ
9B+Nqy31GWmdt+sdEjv/pI9I6TxXj/CRvOziP5J7Nkk3c4ME7l11J/f4yn2k
ruAC0d1r6++s5xpfmLXQAczhMB/IQxdGsJzzRPNuLf2NdVwljllz7c9sDvGe
3HRmOH9wjqjeranN6McsDvKOb+jEMJZxlije/06b0peZHOAtuejIUJZyhsje
r6FN+JEZ7OcNOalOY/ownX28JgfZgz0Guwr2Heww+A6CXQX7JkOw3+AbCXYV
fEPBPoNvItgRYVSjEb2Zxl5e8QmW5IxJ
          
          "]]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJwl12WYVVUfQPGhU0G6uxSlu0G6lO7u7u4wCSVUGqRBEElBQumUVrpTCemO
97ef98Pi7LX2f2Dm3Hv2HdK37Faza6SIiIgfokREhOv+yBER0VGJ/Mqb6FP4
Gd6cZ+BN+Bz+LvJqz3he9OVXeTczS/kdPo5/zIfyrTwnLCMO+CMGKvP1vKmZ
qfwsb8Ez8qb8Rx4PI/nm8IXI5/I8XNHP3jXe3f5P/C4fz8vyYXwbzwUa8SeP
iSp8A28mTuPneEueiTfjc3l85Nde8Pzoz6/zHmaW8f/4N7wcH86389yIqh3k
sVCV/8abm5nOz/NWPDNvzufx91BAe8kLYAC/wXuaWc7v8W95eT6C7+B5EE07
xGOjGt/IW5iZwS/w1jwLb8Hn8wQoqL3iBTGQ3+S9zPzM7/MJvAIfyXeG1xbR
tcM8DqrzTbylmZn8Im/Ds/KWfAFPiELaa14Ig/g/vLeZFfwBn8gr8lF8F8+H
GNoRHhef8M28lZlZ/BJvy7PxVnwhT4TC2hteGIP5v7yPmV/4Qz6JV+Kj+e7w
eiKmdpS/g0/5Ft7azGx+mbfj7/PWfBFPjCLaW14EQ/gt3tfMSv6IT+aV+Wd8
T3g9EUs7xt9FDf47b48PzLXRFmtJUFQLb86i2lB+m36HKtrn2t7wuiG2dpzH
Q03+B++A7Obaaku0pCimRdKKacP4Hf49qmpfaPvC64M42l88PmrxrbwjPjTX
TluqJUPx8MhpxbXh/G44K1BN+1LbH14HxNX+5u+hNt/GO+Ejc+21n7TkKBF+
XK2ENoL/x6fgHZzQEqCOvp13Rg6zHbRlWgqU1KJqJbWR/B6findxUkuIuvoO
3gU5zXbUlmspUUqLppXSRvH7fBri4ZSWCPX0nbwrcpntpP2spUJpLbpWWhvN
H/DpiI/TWmLU13eFcxBlEMN8Gf0z/SGfgfdwRkuCBvrucIaFsxIxzX+sf64/
4jORAGe1pGio7wlnUTjnkBDn9GRoZG9vOD/C2YRESIwkOG8/ORqb2Ree/XCu
IJZ/r6z+hf6Yz0JSXNBSoIm+PzzD4XxAbPPl9C/1J3w2kuGilhJN9QPhWURu
s521FVpqVNTiaOW1r/hT3o+v4o/5HF6df8UPhGcPn/E/eJTw/du/5JoKzex9
aW+79Z96G+s51lf0sda7w2eSnse6i/WEcDbY+9p1J//ONQ0f5bqFTwqfga7j
Xfe6fu9aydfHda3Av3X92vxXrjv4ZNdn9vu7ruYTXZ+EzzzXPeGzy94n4WvC
96ePsd5lXdT6c+ut1lHDPTZ32TU1mts7yNva/5Ff5f14Xt6Vr+RpUTk8M1pF
bQx/zufiU22MdjCcBeE9r13hadCCHwrfbzhfwjMTfj59rP6Cz0MqXNXSoqV+
mA8I5wdSIw3S4pr9dGhl5ggfGM6E8Bz5Oyvr4/SXfD7S4bqWHq31o3xQeJ3D
c2O+Srjn+iu+AOlxQ8uANvoxPjjcy/DcmK+qf6O/5guRATe1jGirH+dDwr0I
z435auG109/wRciIf7RMaKf/xYcin9lu2iotHWqEZ0urHt47/C1fjEz4V8uM
9vrffBjym+2urdbSo2Z4/rRPwnuDh1+wlrhkxi0tCzpoJ/hwFDDbQ1ujZUCt
8Oxqn4b3Jo+EpVoW3NayoqN2ko9AQbM9tbVaRtQOz71WI7xXeWT8pNXQxmqH
wvmOrNodng2d+Ck+EoXM9dLWaZlQJ5wLWs3w7PAoWKbV1MZph8P5jmzaXf4+
OvPTfBQKm+ut/aplRt1wbmi1wrPGo2K5Vksbrx0J5z3e1/7jH6ALP8NHo4i5
Ptp6LQvqacm12toPPBoG8DX8qfXP9mvzb/jR8FmAD7R7PDvCL8JneTszc/m1
cPbworwv3xDuFeprKbQ62hQeHQP5Wv7MeoX9Ovxbfix8ZiC7dp9/iG78HG9v
Zh6/Hs4DXoz347+Fe4gGWkqtrjaVx8Agvo4/t/7Ffl0+gR/nZfCh9oB/hO78
PO9gZj6/wb/gxXl/vjHcWzQMz71WT5vGY2Iw/5W/sF5pvx6fyP/iH+Mj7SHP
gR78Au9oZgG/Gc5lXoIP4JvCfUajcIZo9bXpPBaG8PX8pfUq+/X5JP43L4sc
2iOeEz35Rd7JzEL+TziLeUk+kG8O9xmNwzmlNdBm8NgYyjfwV9ar7Tfgk/kJ
Xg45tcc8F3rxS7yzmUX83/CZwUvxQXxLuM9oEs5CraE2k8fBMP4bf229xn5D
/h0/ycsjl/aE50Zvfpl3MbOY3wqfEbw0H8x/D/cZTcMZqjXSZvG4GM438jfW
a+034t/zU7wCcmtPeR704Vd4VzNL+G0+lpfhQ/gf4T5jNP+dR0azcA7zxtaz
7b2DEXwTf2u9zn5j/gM/zSuG9xbfxqOF89l6X+T//78yj9n/Aclksnk=
         "]]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJwV1He4znUYBvCfnNOSlBKVspM0jIaUiChKSSpFEcomGiIUKipFGdl77wrH
PPZWRpkhyt57VOjz/PE59/O9n/O73vO+7/c6eeo0r9osQ5Ik7f3okzFJVqQk
yWc8TVb26Fay2zyYOtxHQt/Yyc95hpvYq1vFHvMQ6nI/GegXO/kFFbmZfbrV
7DUPpR4PcAX9Yyc7U4ls7Nf9wj7zMN6mCBkZEDvZhWe5hQO6X9lvHs47FCWF
gbGTX/Ic2TmoW8OgSOevqEwODunWMjjS+Wue51YO69YxJNK5Ky9wG0d06xnK
MIYzgpGMYjRjGMs4xjMhnvHsN1Thdo7qfuOAeQT1KUYqE2Mnv+VFcnJM9zsH
zSNpQHGuZFLsZDeqcgfHdWflj7xPaTboDslRNORBrmKyfoPszkvcyQndOfkT
H1CGjbrDcjSNeCjuTmqSzJbtuZp/mMZHlIvv0j5ddmCK5zfK76gWf7vdApmL
S8ykLdfql8iTfv+8/Jksug/jNeSiuJ/yybhbcq68UX4qr5PL4j7KTZ4/Yh7D
9c6N4/3KhTKrfDjuspwjb5CfyExyqbyGf5lO6zjrF8un4r6Z58mO8fl6jU3y
e14mN5eZRTtO2V+QU2lFWTbrjsqxNOGReM/8RxptKB+fvd/bLHvwCnk4rdvC
MfM4mlIi/u74nGIne/IqeTmj28rUSOdeVCcfZ3V/MI3ppDGDmcxiNnOYSzrz
mB/PeLY3r5Gfc7ptLIh0/oHXKcB53XYWRjr3oQZ3cUG3g0WRzn2pScG4R7o/
OW4eTzMeje+XxbGT/XiDu+O70u3khHkCzSlJZpbETvbnTQrFZ63bxUnzRN7l
sbgnLI2dHEAt7uGi7i9OmSfRgsfjXrIsdnIgtSkc91n3N6fNk2lJqbhnLI+d
HMRb3Bt3Jv4vc8Y8hfd4Iu51vDYz+JgKpLp/82WneH/m5TKbXOH5/wG61trs

         "]]}, 
       {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJwN0WO8FmYYwOE3nJNr9SEtndqy27K1jJPttpZt27Zt27ZWy7Ztner6cP3+
930/H5+Qhq1DW4ULBAJhxA0KBK6zmqE0pwoliEd8EpCQX0lEYpKQlGSEkJwU
/MbvpCQVqUnDDdYwjBZUpSRpuclahtOSapTiCTuYRBcako5brGMErahOaZ6y
k8l0pRHpuc16RtKaGrzlILPpSxmesYspdKMxGbjDBkbRhpq84xBz6EdZnrOb
qXQnjNMspQkfOcp8BhIIDgTO6goycpeNjCaCt/Palq+cZDGR3C9rLd5zmOhu
czVIL+ov2l9/cIaY9uUaRa9qbC2nL9hDNPs0jagXNJb20O/8Rwz7Mo2sV7Qp
nzjGAoLdL+kgwpn/15Vk4h6bGEM7vnGKJdTmA0eYxwDK85K9TKcnf/OZ4yxk
MJm5z2bG0p46VOAV+5hBL/4hCw/Ywjg6UJeKvGY/M+lNM7LykK2MpyP1CCUb
j9jGBDpRn0r8wZ9kJwc5yUVu8pCXfOSnAAUpRGGKUJRiFOcx25lIZxpQmTcc
YBZ9+JcvnGARQwjvH87pKqKar2kc/Ut/Avjjhvk=
         "]]}, 
       {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJwV0mW4FlUUgNGPuuQlRLiE0ghKIyBId7d0CJdupESku7u7QelukO6UblBS
CcGilDU/1rz7PHN+zZ60kZ1qdIwSCoXCPRKHhUIP2MwY2vMVpfmQJCQlgmQk
JwUp+YiPSUVq0pCWdKQnAxl5yBbG0oFalOETHrGVcXSkNmXJxGO2MZ5O1KEc
f3OQ2XxPMzLzG9uZQGfqUp5/OMQcetOcT/mdHUzkG+rxP6dYwmAq8C+HmUsf
WvAZT9jJJLpQn1DMUOi0LmUIFXnFEebRlzjuXNG1tCS688/6IyMId76uG8jC
U3YxmYTe3dKuxDJf0tXBrsy/aAOimM8Eu9Jl+oHeCXalQzWeXgt2qOuD/eq9
YI9aSV9zNNi383xNpLeDfWs/jatXg/9A1wX/iP6qrYhhPq8rSGy+qyOJb76h
G8nKM3YzhW7E9v6yrqEhUZ3P6nKGUZk3HGMB/WlNmHsXdCWjyMZz9jCV7jQi
mnvn9AeGU4W3HGchA2hDdv7gJ6bRg8ZU5R0nWMRA2pKDF+xlOt/yNdXIyUv2
MYOeNKE6ufiT/czkO5pSg9x8Th7yko8vyE8BvqQghShMEYpSjOKUoCR/cYBZ
9CKSmvzHSRYziHbE9H0u6ipGk8D5pm4iwnxfU2spfQ+ClIj1
         "]]}, 
       {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJwV0lW4VVUUgNED0iFw6VDuJaQ7BBSRUhq9dHd3CyIhXYKAgtIi3d3d3d1I
K52CgGM/jPOvNff+zsvcEY07RLaPEgqFwvyExwyFXrGbyfSiEZFEkI70ZCAj
n5CJzGQhK9nITg5ykovc5CEv/7KHKXxPY6qQj9fsZSq9aUJVYsYKhU7pAobR
kfy8YR/T+IGmVCOW90/rQobTiQL8x36m04dmVCe298/oIkbQmYK85QAz6Etz
Enn3iq5iHDWIY3ZWFzOSLnzKOw7yB/1oQZh3r+pqxlOTuGbndAmjSON+T7fS
lWTuN3Q9E0nrfl93UIj3HGJmsCPPHml/Ujnf0c3BrpyfaUsSO18LdqVrgn3q
k2BX+ot+rP8EO9TtwX71RbBHraXx9Hywb10afBP6ONi3/qQf6d/Bd6Dbgm9E
n2s3kjvf1A3BN+T8VH8j3PmB7qQwIffD+ic/ktr9rm6hFUncr+tafqU28c0u
6DJG050UZrd0I79ThChmR3QWA2hNUrO/dB0TqMOHZhd1OWPowWdENT+qsxlI
G+qSwPySruBnvuNzPjA/pnMYRFvqUZRonh3XuQymHfX5guiendB5DKE9DSjG
lxSnBCUpRWm+4mvKUJZylKcCFalEZb4hhv8/qfMZSgcaktD8sq5kLD1JaXZb
NzGJCPeHuosszi81j36r/wOVIIvQ
         "]]}}}], InsetBox[
     TemplateBox[{FractionBox["1", "2"],"1","2","5","10"},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox["\"\[Sigma]=\"", {
                 GrayLevel[0], FontWeight -> Bold, FontSize -> 8, FontFamily -> 
                 "Arial"}, Background -> Automatic, StripOnInput -> False]}, {
              
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontWeight -> Bold, FontSize -> 8, FontFamily -> 
          "Arial"}, Background -> Automatic, StripOnInput -> False], 
        TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold", ",", "8"}], "}"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"\[Sigma]=\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.75, 0.55}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
     "AxesInFront" -> True},
   PlotRange->{All, All},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[
     GraphicsComplex[CompressedData["
1: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
NJBTa/q0VoM40aX7eZS8jj1PX9NaOq1OnOdwuqLEuoZtLu6ZND5nTVzRqzY1
o17BnattdjvTQoiQdxRlRjuX8CA6L5L4J4OQCZzdZnRqAc8PnepKiaggmpz3
5AgdncPd3DNWmak9RM3V4LtHz89g05GuI+zCK4RRp8GCiuIUzo85sfz1OxeE
OhgTH4CM61Lt2sPmJECYQ9agt2AUC6blCXI5K4HINdHWoYwhPN6g/bflgz5o
97SKvGnvw9ubuNh4O6zB3Yz+3O3d3bjJ4MTIvkv3QIpWVTJerBVTtSjxpjWF
QsFlh2s+z+px2h4tEzaZBNB6Y15f0vQVr14rr8B6r0GoWjjU42gKFhenb7T5
/An0NToeCzjlAU1NlEF2VRl8k0jbp+74HdiurN8TpKiFgJKDRrEhPcB+rUIh
dLwbRlX/5LddGIBXpJ+aPUr9oP+O2SH82jB0XC96dZ96CGJGvI39ZcZhnKZA
XcV0Y36PJE4ULpLB8GLTwbZLJODa7Ttxa30KJrNitPhrB8Eq7ZFnXd8MKHX8
Vh081A8UN/7oLTUsAVOnIJ+wdQN8P/pzfLx9BQpYPlxmZKoBz/FBQZryNaBr
I41/jC+Dy5x7pIO1KBAWr2kaDf4Et0XyDmVfoETRT4JZLKhfg9XxAxzvlanQ
woMkvbiziWAGXj9/nKVGkWfaTb7cCYWaosG/8/I0yNtLfjfjSU9YcCNb7ZGg
RV2MGX01726BiERHw83DdOitTfjeit36cKjr9cGgffTIIMWJz1xaGa7VVqaJ
iTEgW7nq9IJ4cagRP1uSeIgRXbU49qb/6w5gCskqHeZnQq0zVScbzFYJte7p
OJ09zOjedMzTzqVuYv21WnkNFwvq+ClUf8n6G+H8UdFZmZYVZa3zFjyZzyRG
PwmsNNOzocMTV5XhUzDBYIJ5/ZbY0GwO55jGSRvCbD7EqGB9DVMYvGwvszEk
eq8FK1TSr+LPLfuovsp5ELl3TqET7Mv4FdP5t22WccQ9vtRPa2KLWMRyeIi5
4BMRLuWmkHd8Hg9e+ffNTb6BGB9e76tVnMX/GXfrfT9LJjT/O0t6qjqNC2X1
iAtLDODZonrXCU3idsYl34SAPdDqqvHQOnEcWwnc+Tr19gR8Fghp0coexnK6
9onfzp6Hw+ySpmtlA1ialF7x+b0FJPErNemt9+DfKnF6u/ScQVbUrI9PuhNb
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
6S3PtdfNODQkwqa3tNUct3jsmrrlLXPmvt8MiMnc8pYmB50CIorfb3lLsfHM
I1/3f9jyllKDf2J9yJ+3vKXtiWQTEcBb3tI2qzh9Z0PZ/7zlU2tSOfe3LW8Z
pj309Hlr9Za3bKr8cjkmp3bLW74YfLGj7lXdlrcMOJZFpR9dv+UtdbkvPxNW
/Z+3fNL01dNuqnHLWxZofr2rp/d3y1vyDjOZPjNq3vKWCwMpY08FW7a85b21
ad1Ej5Ytbxklocv66l7LlrdMteOWmuZr2fKWZqBzS/Ra85a31Ev53Sp55u+W
t1QSCDVn6W7c8pbRR1BrrOH/vGWBP2WtfWD9lrfcn9M4NFNUt+UtLx89EXm3
q3bLW3IX+oT4UX7f8pb84kTwA79vW96SlsxdeXyhbMtb1pdHqOxtwVveMqHA
0+q2S8GWt7QZ+f3yseaHLW/JkLzuLHwge8tbMmbfWZL4kLnlLZmF+Si4H6Vu
eUvKnIow3cIk2PSWCR1O42zPnsKmtxQMDdPlT4mATW8Z7OVyx3R/EGx6S216
2ojKBB/Y9JZFcmK/eD67w6a3rPi/62HTW+KjN6ldklxg01v2hl0U2vHdEza9
pbjgvrEXL/xg01s+dq2/oxXwCDa9pXnSJW3ubVGw6S13MQsXig3Gwqa3zFM7
HLKtJnnLW15t0eOhN0vf8pYNCjNR+n1vIChX13fhZhfc0Nj/XOJN05ZvzBui
oEzu+bvlG+NOjakUfm/e8o0zcqmkCYOWLd/YZnA0TSmgZcs3Un4jRPk3Pt/0
jQMONatuG7/f9I0PlfSt6Lr/QiIaDM/qmYe9kpEfv8U3bXlCqwnWlu8X3255
QkWqxm2ebulbnvAt5dObSdwvtjxhbLlKo7t1HGx6wtDylsv9dlGw6QnjJXs8
um+FwqYnnHjYr/zfLn/Y9IQ8uxRXdz+7D5ueMEJSizWNwxU2PaFA4em5HfVO
sOkJ0/mTGlUFPWDTE1pp19r3zzyATU8Yejq3d84sGDY9IcPEuoHko8ew6Qmp
ngfmSvA+g01PWBE4Emn6+PmWJ2whFci97X655Ql3oKTtp45mQarX9OStX52w
L+qmWY9205bfa+so7Hif+HfL7505mpOe9KR5y+/Rar/+uw21bPm9kKT48BN+
LVt+z1s+UD/JtmXL7wln27GYzTZv+T1Kms4/Q8LNYCyouNJnPg8u3vTXlWea
trxc1pOOjtq977e8nKhCA80h1owtL8cbyvN57GzKlpdjsayk5nmQAJteLlzt
etGthWjY9HJUukOP/rsSDpte7k7kDi1u9gDY9HJpckUJGge8YdPL9d1INKvX
uAObXi5DylHsUcRt2PRyvlbFj+sbvWDTyxnIv7h92O4hbHq5u3vJ5pwNYbDp
5X5FsXqNZ0VDWdq7MNlb3UBbsttlB83fLX8Wamc4syzUvOXPoi6LuX1daN7y
Zw35u1P3bpzPTX+mS6MWU7xxvjf9GZHybPWwfMv//JmN62nj2OYtr7V66uPx
k07PYNNrqekyxLisPYZNr6WrSCXz8EQIbHqtS64OnBc0fGHTa30T2ZZ7kuMe
bHot7Wsb0ym9M2x6re209cYOC46w6bXoLh0SlfnnDpteK0ufYZpd9AFsei0m
5fCz1y4HwabXusT5XyJXYwRseq0XdXP8Q6diYNNr3bfjUlFbSIJNr3U1+cjV
UtGXW15L+o8PTezV13DrUczAwdoOMD6pm52xp2nLR/FHfzvEdvfvlo/iXpI8
fMm9ectHWXhLmdEdbtnyUQprOpwJ3i1bPspt52D+tGvLlo+CQebERoaWLR9l
dE/ZGak0g1z4xGFvoXmwuCm/T0vg75ZHYrA2GQtIfb/lkQgnNc64zowtj6S8
h/3AfVLKlkfaeeasJFtcImx6pNI5F4nMiiew6ZF0aBzYn1NEwKZHumezfc6O
OxA2PZJW4iWngn/esOmRHhMLjO4ebrDpkZZtKtS/RrrCpkfKmoyTb+T1gk2P
5M3DQTXr6w+bHomvjcksICMUNj1SCL1JpVRbFIiIUwXxjnSBaJed/JGWpi3f
8/z3uY+9VM1bvuel9/w9357mLd9D83Z+75erLVu+J61gN8552LLle+xLJN2n
1Vu2fA+ejozYltu85WFG/oS2+FjHwqaH0TNiir+cFwmbHoZ3p9fxI5qPYNPD
nEEsNWOSfrDpYTS66Vcqz3vCpodpPmDNdobeBagCkDNDwSDsHWi0sMlu3vIi
1Kdkv+eda9nyIiyKzUftN/Z304ssvS/zy9o4nk2PwP3nRj3PxnrZ9AjB4ukP
rvq0bHmEAz6+fm2HWmCz3x+VKDtO2u4Em/3+C5mHrpeHOsJmv3+O30vbVskd
Nvv9LzJHi+oqfGCz3+95v05IvTUQNvv9zxoCHTTvRsBmv19eUul56q+nsNnv
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
J38Za5zK4PqpRuGcl9OtExhcP907bZ97jFEcg+unu5ulVKcMRDC4ftoT+Khp
g2cIg+unHaNy+852+DKB0yZIlRm2Mkb2j9XHQr2K64sPNTv6BXpCWl+UM4np
Pw33B1xffFWzIO2gh5DWr9T8JtpqeQpp/Spmg8sXZ9gf16/u9+evXqkjZHA9
6NZPLZ+2Vh9aj2FVL+6eDvcTXI8ZOaLpwz+4n+B6xKLRyieGuAhpPSI44WJC
JMxv9H77f6NVLkCMvm9vGM3uh/d/9P1YQd72JrifoO+HGupYDun2ZtD3Y+ak
Tm+F92P0faWimhcT4Pqg7y99uXVCNdwf0PfV+zKS6+B+gr6/+aLCtxFwP0Hf
P7nYSZ8F+6Pvt7SXTFWC8dD326eN+dgb5M2g7xttr5VeCtvR97MaZ6gthc+j
79cc/RirAr8Pfb9Jw1TvM8To++yKY9YCiNH3i9tLi1dAjL5v+qqGuwLGR9//
PnpC4FcDbwZ9//m8bV6SCbnk+9Hvvzu0T8wj369UbMg4eT+ffP/fxIqOMZ4F
5Pt/MkY+VVO8Sb7fU5ul+rWviHx/3NvzYSWVxeT76+5FDT1TXEq+37347pbc
a3fI92unJ3n/XFVGvl/o5qCWqF1Ovv93dOtNNZUK8n29TKX/FvdXkO9fvK54
0e5DJfk+d7L+vXpuFfn+yln3f8dFV5Pv2/4oWdVtfI98P3Dph9CIH/fI9y/v
t1FdlXiffH+mj05EnjyPfD/Kdll9RiKPfP9a0XL9Yb945PtZn/qcR6zgk+87
ifeM0tjLJ9/nTtj61zaCT75f9XBJ6HmI0fer/Ex2VLnzyfdzLE6UrVrFJ9//
4r7w788fPPJ9yRu+jeUneeT72XdSff1UeOT7x2eHBRw4dZ98n7W3e67373vk
+7ITN2jEbr5Hvh/V6TOafaqafD/m+a6apEdV5PsqKksFjd8qyfcP9Z+L9phU
Sb5/PC7rqNbSCvL9pE7Z77565eT7HWpjxydYl5Hvd7dfffmde4d8v69n43X/
ilLyfYvCqI0mP4vJ97/eTlvAl7xFvp9wqiLw3dqb5PsW4n2dfskF5PtWjqqN
nQ355PtXY2ZsqNPPI9+vH5wP6Pue5+Nn3TXnMPXZo22KrguYJ+tKV02045G3
e9Qkaa7n88jbw50zspYo8snbhz2vi9pqzSdv77vd23PlEJ+8/fsh98ero/jk
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
FmeTZ1Qs031nMo5NnuEuf+CYpQKbPOPc1HPVL2awyTOuzpPv9lnIJs8wM7/f
IK/NJs8Ym2yk4qjHJs/wdFk1OnYdmzzjV0uzXJkZmzwjuu5Kfaklmzxj1NVQ
p71b2eQZyVJpbf3b2eQZeVv15io6s8kzDjpO2WbuyibPmKt+VPrkbjZ5Rl9N
yowF7mzyjOs3Zhi2QYyeYfdV3/UbxOgZbycYuEyDGD1j3kM1j4swHnrGWKHb
roXwfegZO1703v7hxCbPiLva8W6hI5s8Y8uExz0b4PegZ0yYx7D+wO9Fzxho
q1023pxNnsH5+aBLCOcLPUOt/OmFHfps8oynk7IrguB8o2eYF+5b6qXOJs+4
bNYY92Ymmzyj+n1NOheuJ3rG3WlnX50czybPkJ769lkB5AN6xmKdIF0TyBf0
jLOFrRenfGaRZ0zzDWwa/pJFnnH3BxPL1LDIM265GyYqlrLIM7YnCA1+QT6j
Z8Tk7nA1TmGRZ+B8QM/YtsI9K+cEizzj2jS1gIf2bPKMUZKXgtV2sskzFr1L
M3ziwibPUFAqqo90Y5NntCybahqwh02e8bn243c2XF/0jImrjGYO82CTZyht
11zJgu3oGSOX7K/yh8+jZ2wbu8U8HMZHzzCKaPa6Ct+PnqFodVJTdHzoGecn
xRkK4fjRM3zPXr5VcJJFnvFPP9lvUwyLPENuf2kFaxubPONLr660/A42ecbp
osM2/ZD/6BmPm4c7/IB8RM+YLSX1dxQcL3pGplePnyf8HvSMgqk2X/ohRs84
1OUSVQcx9TNMsmurh8+jZ7B3nNOWh/xHz9BZ4D9s/y42ecZ4c83FEyH/0TOM
G25vGAXzFT1jYfD2H0cTWUz4tBkpj0tfMvPuXtGYDfujbwgmDHQlwXjoG2XD
FxVLi+bboG+4Ms0Sr+B40DfqCsceewTHi77xMO1T3wDE6BvVIWKRbhCjbyxZ
NPv7RPg8+kZOT2hBE5wv9I1t/hq8F3D+0TeGWrya+F80i3xjTrFVlBRcD/QN
1X3cguMwv9E3jv5YvzsOrgf6Rt3HSxtZMD76xiy7+7fq4Pegb8i61K03g+ND
37A9djmiB2L0DaOFVZeaIEbf+PtUNu0vHD/6RljlKKntMB76Rmvg1K31cP7Q
NxadmLMrHM4v+kZSTeCaNLge6Bs8D6t7X5JYzLWPZ/2rCoTMZE7XiWzIV/SO
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
Gh99ZKGz5KIV8P3oI0MG/8P6EOP/7+3/B3Z66Xg=
      "], {{{}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroup[{
           Polygon[CompressedData["
1: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
Ag==
            "]]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroup[{
           Polygon[CompressedData["
1:eJwV1He8T3UYB/Bzl5FxRVRoXKIkNEVaIk0jmVFJtG0qWhpKqSgNu+y99y6S
kTKLzJK9y969nz/e9/N8P8/v3PO6v3NeN6tpq9otU5MkSaGzH73SkqRCjiSp
yFJzwYwkWZKeJHnk+/IHMszV5BvM4BwXczftmMAxtrv+AjeYn2EA/7BEl0/e
RVvGczR2+vOUNjehP9tYrMuUd9KGcRyJnf4c15ufph9/87Mur6xEa8byX+z0
Zyllfoq+/MUiXR55B60Yw7+x05/hOvOT9GErP+lyy4q0ZDSHY6c/zbXmxvRm
Cwt1WzhFSedG9GIzC3SbOUkJ5yf4lk38qNvECa5xbsg3bIznoJvPPOYyh9nM
YiYzmM40prKR4xR3bQO+ZgNTdBs4RjHn+nzFn0zW5ZIVaMEoDsVOf5Qscz16
sp5JuvtlJ6Zzlou4nVcYycH4rM/dJ1+L+3MqnqfuLTmLC1xNXb5kHRPt35Pz
Sff+VY3nQE5zRzmNM3GO508u/Tsyn5wjU2R5mV8ukNnlyzKvHCEPxH3c4xLn
xebcsnO813KuTJWVZQG5UOaQr8pMOVmejHfM9Yvib9a9KWdynqviWZJNX0d+
wR9M8Pl35TzS7KrI15nK6bgHbzObxP42+RLD2R+/w/X3yg7x3XMi3lvdlfJx
evA743XZ5a28yDD2xU5/j2wf3y/H4z3WXSFr0521jNNlk7fwAkPZGzv9IYqa
H+Nz1jBWlyFv5nmGsCd2+oMUMdfiM1YzRjeaUYxkBMMZxlCGMJhBDGQ1Byjs
2pp8yiq+161iP5c716AbK/lOt5J9XOZcnU9YwQDdCvZyqfOjfMxv9Nely5t4
jsHsjp1+D4XMj9CVX+mnS5M30pxB7Iqdfnf8PzU/zEcsp68uVZajGQPZGTv9
rngfzQ/xIb/QR5ciy/Js/M3siJ1+JwXMD9KFZfTWJbIMTeN7YHvs9DvIb36A
D1jK/1Zc23E=
            "]]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          Opacity[0.2]], 
         GraphicsGroup[{
           Polygon[CompressedData["
1:eJwV0VWUUGUUgNE7AwMDUvJASYdSSjN0SCMIDKXSQwvMSCMd0t0l3SmoSCvd
oSCtSHdJ97B52Os759yXu9afKSomMjo0CIIQYkkRFgSFw4Mggkrm5PGC4B9N
qKv1b0LNw3Qxh3jJt/RnNrt4SB2a0Z3JbOYmFalAecrxOWUpQ2lKUZISFKcY
RSlCxPv/oxAFqU1TujGJTdygAJE0oSsT2ch18tOWfsxiJ/9Ti8Z0YQIbuEY+
2tCXH9nBA2rSiM6MZz1XyctQFnGQF7SmDzPZzn1q8APz2cdTGrKUI7ymE+P4
jSvkYRXHCfEOQ/Q08cwL9QDPacVZwt2Xa2L9U9/Sm6T2kxpXZ+gHuk3v8SUf
2s9pAl2hSfQvjWUQyeynNEznaSLdq09owBniuy3Rw7yiIyeI4z5W13GZz1jJ
MQLfBusC9vOMlizjKG/oxXT+4C7VGchc9vCYb/iOMfzKJT6lBT2Zxu/coRoD
mMNuHvE1MYzmFy6Sm+Z8z1S2cpsv+IpoRvEzF8hFFD2YwhZuUZX6dGAka/mP
nFShHu0ZwRrOk4PsfMLHZCMrWchMJjKSgfSkIy0fkYbUpCIllalLO4bzE//y
DgRph3o=
            "]]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          Opacity[0.2]], 
         GraphicsGroup[{
           Polygon[CompressedData["
1:eJwV0mUUFVUUgNGhQ7pBuksapKS7OxWkQaS7u7u7u7uRkEZBQFFRSVFROhWk
9vzY7zt3zf0x651J17JLnc4RgyCIQFw/CaMGQYHoQVCQcuY00YLgT02qu/Qa
cc0TdRM/Es25o45gJed4S11a0p8FHOc5ZSlDaUpRkhJ8QnGKUZQiFOZjClEw
fDfyk486tKAf8znGM/JSm8/pyzy+5il5qEVz+jCXozwhN18wnBV8yxtq0oze
zOEIj8lFB4axnG94TQ3Gso5LRPL/fKa9mM1hHvERE9jIZaK6116Hsoyz/E91
xrCWi0R071Pdws/EcO6pszjEQ3Kyk6vE8Xy83iKheYP+QBRzO71NYvM2TaG/
6Ac6RFPqDY2vSzWZntFXVCO18x+aRLfrh/qrxtLRmkpvagJdo8n1gkbQpvo7
icyb9Seim3vodeKZZ+pXPCAHO/iN2J6N0/V8T2TntrqVK8R0HqxLOM1LqjKK
1XxH4E4T7c4MDnKf7LRhEIs5xX9UYSSrOM87GtON6RzgHtlozUAWcZJ/qUwj
ujKN/dwlK60YwEJO8IJKNKQLU9nHP2ShIg3ozBT28jeZqUB9OjGZPdwhExnJ
QHrSkZY04R7DXYX7DncYfgfhrsJ9kzTcb/iNhLuiPPX4kkns5i/eA04PiXI=

            "]]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          Opacity[0.2]], 
         GraphicsGroup[{
           Polygon[CompressedData["
1:eJwV0mXYFVUUgNEL0iAhISHx0Y2EtHR3SYPS3Q0SBt0o3Z3S3Up3p5TSoXTn
mh/rvufsmef+2RPWuEO19uFDoVA44vlJETkUyhElFMpJVefs+lIz6B59SJjz
VN3GbRK599JxrOUKsc1+0A4MYQmniWReRStTiYpUoDzlKEsZSlOKkpSgOMUo
ShEK8z3tGcxiThHR/xfShrRjEIs4SQTPvtUGtGUgCznBZ54V1J6MZQ2XiWVe
X9vwKws4TnjzAtqDMazmEjHN6+lENnGd+Gat9Rfmc4xwZvl1Clu5RUKz7jqa
VfzN52Z1dQIb+Zd4Zq10B3dJ4v6zzuMoIfd8upv/SeE+WZ+SxnmL3uRL5276
nHTOf2pmva9JdZRm1ceaSldqRr2oMbSOfq0vNL3+pVn0gSbT8ZpNn2hq3aCZ
9B+Nqy31GWmdt+sdEjv/pI9I6TxXj/CRvOziP5J7Nkk3c4ME7l11J/f4yn2k
ruAC0d1r6++s5xpfmLXQAczhMB/IQxdGsJzzRPNuLf2NdVwljllz7c9sDvGe
3HRmOH9wjqjeranN6McsDvKOb+jEMJZxlije/06b0peZHOAtuejIUJZyhsje
r6FN+JEZ7OcNOalOY/ownX28JgfZgz0Guwr2Heww+A6CXQX7JkOw3+AbCXYV
fEPBPoNvItgRYVSjEb2Zxl5e8QmW5IxJ
            
            "]]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Line[CompressedData["
1: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
          "]]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Line[CompressedData["
1:eJwV1He4znUYBvCfnNOSlBKVspM0jIaUiChKSSpFEcomGiIUKipFGdl77wrH
PPZWRpkhyt57VOjz/PE59/O9n/O73vO+7/c6eeo0r9osQ5Ik7f3okzFJVqQk
yWc8TVb26Fay2zyYOtxHQt/Yyc95hpvYq1vFHvMQ6nI/GegXO/kFFbmZfbrV
7DUPpR4PcAX9Yyc7U4ls7Nf9wj7zMN6mCBkZEDvZhWe5hQO6X9lvHs47FCWF
gbGTX/Ic2TmoW8OgSOevqEwODunWMjjS+Wue51YO69YxJNK5Ky9wG0d06xnK
MIYzgpGMYjRjGMs4xjMhnvHsN1Thdo7qfuOAeQT1KUYqE2Mnv+VFcnJM9zsH
zSNpQHGuZFLsZDeqcgfHdWflj7xPaTboDslRNORBrmKyfoPszkvcyQndOfkT
H1CGjbrDcjSNeCjuTmqSzJbtuZp/mMZHlIvv0j5ddmCK5zfK76gWf7vdApmL
S8ykLdfql8iTfv+8/Jksug/jNeSiuJ/yybhbcq68UX4qr5PL4j7KTZ4/Yh7D
9c6N4/3KhTKrfDjuspwjb5CfyExyqbyGf5lO6zjrF8un4r6Z58mO8fl6jU3y
e14mN5eZRTtO2V+QU2lFWTbrjsqxNOGReM/8RxptKB+fvd/bLHvwCnk4rdvC
MfM4mlIi/u74nGIne/IqeTmj28rUSOdeVCcfZ3V/MI3ppDGDmcxiNnOYSzrz
mB/PeLY3r5Gfc7ptLIh0/oHXKcB53XYWRjr3oQZ3cUG3g0WRzn2pScG4R7o/
OW4eTzMeje+XxbGT/XiDu+O70u3khHkCzSlJZpbETvbnTQrFZ63bxUnzRN7l
sbgnLI2dHEAt7uGi7i9OmSfRgsfjXrIsdnIgtSkc91n3N6fNk2lJqbhnLI+d
HMRb3Bt3Jv4vc8Y8hfd4Iu51vDYz+JgKpLp/82WneH/m5TKbXOH5/wG61trs

          "]]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Line[CompressedData["
1:eJwN0WO8FmYYwOE3nJNr9SEtndqy27K1jJPttpZt27Zt27ZWy7Ztner6cP3+
930/H5+Qhq1DW4ULBAJhxA0KBK6zmqE0pwoliEd8EpCQX0lEYpKQlGSEkJwU
/MbvpCQVqUnDDdYwjBZUpSRpuclahtOSapTiCTuYRBcako5brGMErahOaZ6y
k8l0pRHpuc16RtKaGrzlILPpSxmesYspdKMxGbjDBkbRhpq84xBz6EdZnrOb
qXQnjNMspQkfOcp8BhIIDgTO6goycpeNjCaCt/Palq+cZDGR3C9rLd5zmOhu
czVIL+ov2l9/cIaY9uUaRa9qbC2nL9hDNPs0jagXNJb20O/8Rwz7Mo2sV7Qp
nzjGAoLdL+kgwpn/15Vk4h6bGEM7vnGKJdTmA0eYxwDK85K9TKcnf/OZ4yxk
MJm5z2bG0p46VOAV+5hBL/4hCw/Ywjg6UJeKvGY/M+lNM7LykK2MpyP1CCUb
j9jGBDpRn0r8wZ9kJwc5yUVu8pCXfOSnAAUpRGGKUJRiFOcx25lIZxpQmTcc
YBZ9+JcvnGARQwjvH87pKqKar2kc/Ut/Avjjhvk=
          "]]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Line[CompressedData["
1:eJwV0mW4FlUUgNGPuuQlRLiE0ghKIyBId7d0CJdupESku7u7QelukO6UblBS
CcGilDU/1rz7PHN+zZ60kZ1qdIwSCoXCPRKHhUIP2MwY2vMVpfmQJCQlgmQk
JwUp+YiPSUVq0pCWdKQnAxl5yBbG0oFalOETHrGVcXSkNmXJxGO2MZ5O1KEc
f3OQ2XxPMzLzG9uZQGfqUp5/OMQcetOcT/mdHUzkG+rxP6dYwmAq8C+HmUsf
WvAZT9jJJLpQn1DMUOi0LmUIFXnFEebRlzjuXNG1tCS688/6IyMId76uG8jC
U3YxmYTe3dKuxDJf0tXBrsy/aAOimM8Eu9Jl+oHeCXalQzWeXgt2qOuD/eq9
YI9aSV9zNNi383xNpLeDfWs/jatXg/9A1wX/iP6qrYhhPq8rSGy+qyOJb76h
G8nKM3YzhW7E9v6yrqEhUZ3P6nKGUZk3HGMB/WlNmHsXdCWjyMZz9jCV7jQi
mnvn9AeGU4W3HGchA2hDdv7gJ6bRg8ZU5R0nWMRA2pKDF+xlOt/yNdXIyUv2
MYOeNKE6ufiT/czkO5pSg9x8Th7yko8vyE8BvqQghShMEYpSjOKUoCR/cYBZ
9CKSmvzHSRYziHbE9H0u6ipGk8D5pm4iwnxfU2spfQ+ClIj1
          "]]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Line[CompressedData["
1:eJwV0lW4VVUUgNED0iFw6VDuJaQ7BBSRUhq9dHd3CyIhXYKAgtIi3d3d3d1I
K52CgGM/jPOvNff+zsvcEY07RLaPEgqFwvyExwyFXrGbyfSiEZFEkI70ZCAj
n5CJzGQhK9nITg5ykovc5CEv/7KHKXxPY6qQj9fsZSq9aUJVYsYKhU7pAobR
kfy8YR/T+IGmVCOW90/rQobTiQL8x36m04dmVCe298/oIkbQmYK85QAz6Etz
Enn3iq5iHDWIY3ZWFzOSLnzKOw7yB/1oQZh3r+pqxlOTuGbndAmjSON+T7fS
lWTuN3Q9E0nrfl93UIj3HGJmsCPPHml/Ujnf0c3BrpyfaUsSO18LdqVrgn3q
k2BX+ot+rP8EO9TtwX71RbBHraXx9Hywb10afBP6ONi3/qQf6d/Bd6Dbgm9E
n2s3kjvf1A3BN+T8VH8j3PmB7qQwIffD+ic/ktr9rm6hFUncr+tafqU28c0u
6DJG050UZrd0I79ThChmR3QWA2hNUrO/dB0TqMOHZhd1OWPowWdENT+qsxlI
G+qSwPySruBnvuNzPjA/pnMYRFvqUZRonh3XuQymHfX5guiendB5DKE9DSjG
lxSnBCUpRWm+4mvKUJZylKcCFalEZb4hhv8/qfMZSgcaktD8sq5kLD1JaXZb
NzGJCPeHuosszi81j36r/wOVIIvQ
          "]]}}}], {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
        "AxesInFront" -> True}, PlotRange -> {All, All}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]]}, {
        Rational[1, 2], 1, 2, 5, 10}, LabelStyle -> {
         GrayLevel[0], Bold, 8}, LegendLabel -> "\[Sigma]=", LegendLayout -> 
       "Column"]], {0.75, 0.55}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{3.684634440244519*^9, 3.684635494330558*^9, 
  3.684635570788806*^9, 3.684635659066648*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
NJBTa/q0VoM40aX7eZS8jj1PX9NaOq1OnOdwuqLEuoZtLu6ZND5nTVzRqzY1
o17BnattdjvTQoiQdxRlRjuX8CA6L5L4J4OQCZzdZnRqAc8PnepKiaggmpz3
5AgdncPd3DNWmak9RM3V4LtHz89g05GuI+zCK4RRp8GCiuIUzo85sfz1OxeE
OhgTH4CM61Lt2sPmJECYQ9agt2AUC6blCXI5K4HINdHWoYwhPN6g/bflgz5o
97SKvGnvw9ubuNh4O6zB3Yz+3O3d3bjJ4MTIvkv3QIpWVTJerBVTtSjxpjWF
QsFlh2s+z+px2h4tEzaZBNB6Y15f0vQVr14rr8B6r0GoWjjU42gKFhenb7T5
/An0NToeCzjlAU1NlEF2VRl8k0jbp+74HdiurN8TpKiFgJKDRrEhPcB+rUIh
dLwbRlX/5LddGIBXpJ+aPUr9oP+O2SH82jB0XC96dZ96CGJGvI39ZcZhnKZA
XcV0Y36PJE4ULpLB8GLTwbZLJODa7Ttxa30KJrNitPhrB8Eq7ZFnXd8MKHX8
Vh081A8UN/7oLTUsAVOnIJ+wdQN8P/pzfLx9BQpYPlxmZKoBz/FBQZryNaBr
I41/jC+Dy5x7pIO1KBAWr2kaDf4Et0XyDmVfoETRT4JZLKhfg9XxAxzvlanQ
woMkvbiziWAGXj9/nKVGkWfaTb7cCYWaosG/8/I0yNtLfjfjSU9YcCNb7ZGg
RV2MGX01726BiERHw83DdOitTfjeit36cKjr9cGgffTIIMWJz1xaGa7VVqaJ
iTEgW7nq9IJ4cagRP1uSeIgRXbU49qb/6w5gCskqHeZnQq0zVScbzFYJte7p
OJ09zOjedMzTzqVuYv21WnkNFwvq+ClUf8n6G+H8UdFZmZYVZa3zFjyZzyRG
PwmsNNOzocMTV5XhUzDBYIJ5/ZbY0GwO55jGSRvCbD7EqGB9DVMYvGwvszEk
eq8FK1TSr+LPLfuovsp5ELl3TqET7Mv4FdP5t22WccQ9vtRPa2KLWMRyeIi5
4BMRLuWmkHd8Hg9e+ffNTb6BGB9e76tVnMX/GXfrfT9LJjT/O0t6qjqNC2X1
iAtLDODZonrXCU3idsYl34SAPdDqqvHQOnEcWwnc+Tr19gR8Fghp0coexnK6
9onfzp6Hw+ySpmtlA1ialF7x+b0FJPErNemt9+DfKnF6u/ScQVbUrI9PuhNb
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
6S3PtdfNODQkwqa3tNUct3jsmrrlLXPmvt8MiMnc8pYmB50CIorfb3lLsfHM
I1/3f9jyllKDf2J9yJ+3vKXtiWQTEcBb3tI2qzh9Z0PZ/7zlU2tSOfe3LW8Z
pj309Hlr9Za3bKr8cjkmp3bLW74YfLGj7lXdlrcMOJZFpR9dv+UtdbkvPxNW
/Z+3fNL01dNuqnHLWxZofr2rp/d3y1vyDjOZPjNq3vKWCwMpY08FW7a85b21
ad1Ej5Ytbxklocv66l7LlrdMteOWmuZr2fKWZqBzS/Ra85a31Ev53Sp55u+W
t1QSCDVn6W7c8pbRR1BrrOH/vGWBP2WtfWD9lrfcn9M4NFNUt+UtLx89EXm3
q3bLW3IX+oT4UX7f8pb84kTwA79vW96SlsxdeXyhbMtb1pdHqOxtwVveMqHA
0+q2S8GWt7QZ+f3yseaHLW/JkLzuLHwge8tbMmbfWZL4kLnlLZmF+Si4H6Vu
eUvKnIow3cIk2PSWCR1O42zPnsKmtxQMDdPlT4mATW8Z7OVyx3R/EGx6S216
2ojKBB/Y9JZFcmK/eD67w6a3rPi/62HTW+KjN6ldklxg01v2hl0U2vHdEza9
pbjgvrEXL/xg01s+dq2/oxXwCDa9pXnSJW3ubVGw6S13MQsXig3Gwqa3zFM7
HLKtJnnLW15t0eOhN0vf8pYNCjNR+n1vIChX13fhZhfc0Nj/XOJN05ZvzBui
oEzu+bvlG+NOjakUfm/e8o0zcqmkCYOWLd/YZnA0TSmgZcs3Un4jRPk3Pt/0
jQMONatuG7/f9I0PlfSt6Lr/QiIaDM/qmYe9kpEfv8U3bXlCqwnWlu8X3255
QkWqxm2ebulbnvAt5dObSdwvtjxhbLlKo7t1HGx6wtDylsv9dlGw6QnjJXs8
um+FwqYnnHjYr/zfLn/Y9IQ8uxRXdz+7D5ueMEJSizWNwxU2PaFA4em5HfVO
sOkJ0/mTGlUFPWDTE1pp19r3zzyATU8Yejq3d84sGDY9IcPEuoHko8ew6Qmp
ngfmSvA+g01PWBE4Emn6+PmWJ2whFci97X655Ql3oKTtp45mQarX9OStX52w
L+qmWY9205bfa+so7Hif+HfL7505mpOe9KR5y+/Rar/+uw21bPm9kKT48BN+
LVt+z1s+UD/JtmXL7wln27GYzTZv+T1Kms4/Q8LNYCyouNJnPg8u3vTXlWea
trxc1pOOjtq977e8nKhCA80h1owtL8cbyvN57GzKlpdjsayk5nmQAJteLlzt
etGthWjY9HJUukOP/rsSDpte7k7kDi1u9gDY9HJpckUJGge8YdPL9d1INKvX
uAObXi5DylHsUcRt2PRyvlbFj+sbvWDTyxnIv7h92O4hbHq5u3vJ5pwNYbDp
5X5FsXqNZ0VDWdq7MNlb3UBbsttlB83fLX8Wamc4syzUvOXPoi6LuX1daN7y
Zw35u1P3bpzPTX+mS6MWU7xxvjf9GZHybPWwfMv//JmN62nj2OYtr7V66uPx
k07PYNNrqekyxLisPYZNr6WrSCXz8EQIbHqtS64OnBc0fGHTa30T2ZZ7kuMe
bHot7Wsb0ym9M2x6re209cYOC46w6bXoLh0SlfnnDpteK0ufYZpd9AFsei0m
5fCz1y4HwabXusT5XyJXYwRseq0XdXP8Q6diYNNr3bfjUlFbSIJNr3U1+cjV
UtGXW15L+o8PTezV13DrUczAwdoOMD6pm52xp2nLR/FHfzvEdvfvlo/iXpI8
fMm9ectHWXhLmdEdbtnyUQprOpwJ3i1bPspt52D+tGvLlo+CQebERoaWLR9l
dE/ZGak0g1z4xGFvoXmwuCm/T0vg75ZHYrA2GQtIfb/lkQgnNc64zowtj6S8
h/3AfVLKlkfaeeasJFtcImx6pNI5F4nMiiew6ZF0aBzYn1NEwKZHumezfc6O
OxA2PZJW4iWngn/esOmRHhMLjO4ebrDpkZZtKtS/RrrCpkfKmoyTb+T1gk2P
5M3DQTXr6w+bHomvjcksICMUNj1SCL1JpVRbFIiIUwXxjnSBaJed/JGWpi3f
8/z3uY+9VM1bvuel9/w9357mLd9D83Z+75erLVu+J61gN8552LLle+xLJN2n
1Vu2fA+ejozYltu85WFG/oS2+FjHwqaH0TNiir+cFwmbHoZ3p9fxI5qPYNPD
nEEsNWOSfrDpYTS66Vcqz3vCpodpPmDNdobeBagCkDNDwSDsHWi0sMlu3vIi
1Kdkv+eda9nyIiyKzUftN/Z304ssvS/zy9o4nk2PwP3nRj3PxnrZ9AjB4ukP
rvq0bHmEAz6+fm2HWmCz3x+VKDtO2u4Em/3+C5mHrpeHOsJmv3+O30vbVskd
Nvv9LzJHi+oqfGCz3+95v05IvTUQNvv9zxoCHTTvRsBmv19eUul56q+nsNnv
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
J38Za5zK4PqpRuGcl9OtExhcP907bZ97jFEcg+unu5ulVKcMRDC4ftoT+Khp
g2cIg+unHaNy+852+DKB0yZIlRm2Mkb2j9XHQr2K64sPNTv6BXpCWl+UM4np
Pw33B1xffFWzIO2gh5DWr9T8JtpqeQpp/Spmg8sXZ9gf16/u9+evXqkjZHA9
6NZPLZ+2Vh9aj2FVL+6eDvcTXI8ZOaLpwz+4n+B6xKLRyieGuAhpPSI44WJC
JMxv9H77f6NVLkCMvm9vGM3uh/d/9P1YQd72JrifoO+HGupYDun2ZtD3Y+ak
Tm+F92P0faWimhcT4Pqg7y99uXVCNdwf0PfV+zKS6+B+gr6/+aLCtxFwP0Hf
P7nYSZ8F+6Pvt7SXTFWC8dD326eN+dgb5M2g7xttr5VeCtvR97MaZ6gthc+j
79cc/RirAr8Pfb9Jw1TvM8To++yKY9YCiNH3i9tLi1dAjL5v+qqGuwLGR9//
PnpC4FcDbwZ9//m8bV6SCbnk+9Hvvzu0T8wj369UbMg4eT+ffP/fxIqOMZ4F
5Pt/MkY+VVO8Sb7fU5ul+rWviHx/3NvzYSWVxeT76+5FDT1TXEq+37347pbc
a3fI92unJ3n/XFVGvl/o5qCWqF1Ovv93dOtNNZUK8n29TKX/FvdXkO9fvK54
0e5DJfk+d7L+vXpuFfn+yln3f8dFV5Pv2/4oWdVtfI98P3Dph9CIH/fI9y/v
t1FdlXiffH+mj05EnjyPfD/Kdll9RiKPfP9a0XL9Yb945PtZn/qcR6zgk+87
ifeM0tjLJ9/nTtj61zaCT75f9XBJ6HmI0fer/Ex2VLnzyfdzLE6UrVrFJ9//
4r7w788fPPJ9yRu+jeUneeT72XdSff1UeOT7x2eHBRw4dZ98n7W3e67373vk
+7ITN2jEbr5Hvh/V6TOafaqafD/m+a6apEdV5PsqKksFjd8qyfcP9Z+L9phU
Sb5/PC7rqNbSCvL9pE7Z77565eT7HWpjxydYl5Hvd7dfffmde4d8v69n43X/
ilLyfYvCqI0mP4vJ97/eTlvAl7xFvp9wqiLw3dqb5PsW4n2dfskF5PtWjqqN
nQ355PtXY2ZsqNPPI9+vH5wP6Pue5+Nn3TXnMPXZo22KrguYJ+tKV02045G3
e9Qkaa7n88jbw50zspYo8snbhz2vi9pqzSdv77vd23PlEJ+8/fsh98ero/jk
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
FmeTZ1Qs031nMo5NnuEuf+CYpQKbPOPc1HPVL2awyTOuzpPv9lnIJs8wM7/f
IK/NJs8Ym2yk4qjHJs/wdFk1OnYdmzzjV0uzXJkZmzwjuu5Kfaklmzxj1NVQ
p71b2eQZyVJpbf3b2eQZeVv15io6s8kzDjpO2WbuyibPmKt+VPrkbjZ5Rl9N
yowF7mzyjOs3Zhi2QYyeYfdV3/UbxOgZbycYuEyDGD1j3kM1j4swHnrGWKHb
roXwfegZO1703v7hxCbPiLva8W6hI5s8Y8uExz0b4PegZ0yYx7D+wO9Fzxho
q1023pxNnsH5+aBLCOcLPUOt/OmFHfps8oynk7IrguB8o2eYF+5b6qXOJs+4
bNYY92Ymmzyj+n1NOheuJ3rG3WlnX50czybPkJ769lkB5AN6xmKdIF0TyBf0
jLOFrRenfGaRZ0zzDWwa/pJFnnH3BxPL1LDIM265GyYqlrLIM7YnCA1+QT6j
Z8Tk7nA1TmGRZ+B8QM/YtsI9K+cEizzj2jS1gIf2bPKMUZKXgtV2sskzFr1L
M3ziwibPUFAqqo90Y5NntCybahqwh02e8bn243c2XF/0jImrjGYO82CTZyht
11zJgu3oGSOX7K/yh8+jZ2wbu8U8HMZHzzCKaPa6Ct+PnqFodVJTdHzoGecn
xRkK4fjRM3zPXr5VcJJFnvFPP9lvUwyLPENuf2kFaxubPONLr660/A42ecbp
osM2/ZD/6BmPm4c7/IB8RM+YLSX1dxQcL3pGplePnyf8HvSMgqk2X/ohRs84
1OUSVQcx9TNMsmurh8+jZ7B3nNOWh/xHz9BZ4D9s/y42ecZ4c83FEyH/0TOM
G25vGAXzFT1jYfD2H0cTWUz4tBkpj0tfMvPuXtGYDfujbwgmDHQlwXjoG2XD
FxVLi+bboG+4Ms0Sr+B40DfqCsceewTHi77xMO1T3wDE6BvVIWKRbhCjbyxZ
NPv7RPg8+kZOT2hBE5wv9I1t/hq8F3D+0TeGWrya+F80i3xjTrFVlBRcD/QN
1X3cguMwv9E3jv5YvzsOrgf6Rt3HSxtZMD76xiy7+7fq4Pegb8i61K03g+ND
37A9djmiB2L0DaOFVZeaIEbf+PtUNu0vHD/6RljlKKntMB76Rmvg1K31cP7Q
NxadmLMrHM4v+kZSTeCaNLge6Bs8D6t7X5JYzLWPZ/2rCoTMZE7XiWzIV/SO
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
Gh99ZKGz5KIV8P3oI0MG/8P6EOP/7+3/B3Z66Xg=
   "], {{{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1: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
Ag==
        "]]]}, {}, 
     {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV1He8T3UYB/Bzl5FxRVRoXKIkNEVaIk0jmVFJtG0qWhpKqSgNu+y99y6S
kTKLzJK9y969nz/e9/N8P8/v3PO6v3NeN6tpq9otU5MkSaGzH73SkqRCjiSp
yFJzwYwkWZKeJHnk+/IHMszV5BvM4BwXczftmMAxtrv+AjeYn2EA/7BEl0/e
RVvGczR2+vOUNjehP9tYrMuUd9KGcRyJnf4c15ufph9/87Mur6xEa8byX+z0
Zyllfoq+/MUiXR55B60Yw7+x05/hOvOT9GErP+lyy4q0ZDSHY6c/zbXmxvRm
Cwt1WzhFSedG9GIzC3SbOUkJ5yf4lk38qNvECa5xbsg3bIznoJvPPOYyh9nM
YiYzmM40prKR4xR3bQO+ZgNTdBs4RjHn+nzFn0zW5ZIVaMEoDsVOf5Qscz16
sp5JuvtlJ6Zzlou4nVcYycH4rM/dJ1+L+3MqnqfuLTmLC1xNXb5kHRPt35Pz
Sff+VY3nQE5zRzmNM3GO508u/Tsyn5wjU2R5mV8ukNnlyzKvHCEPxH3c4xLn
xebcsnO813KuTJWVZQG5UOaQr8pMOVmejHfM9Yvib9a9KWdynqviWZJNX0d+
wR9M8Pl35TzS7KrI15nK6bgHbzObxP42+RLD2R+/w/X3yg7x3XMi3lvdlfJx
evA743XZ5a28yDD2xU5/j2wf3y/H4z3WXSFr0521jNNlk7fwAkPZGzv9IYqa
H+Nz1jBWlyFv5nmGsCd2+oMUMdfiM1YzRjeaUYxkBMMZxlCGMJhBDGQ1Byjs
2pp8yiq+161iP5c716AbK/lOt5J9XOZcnU9YwQDdCvZyqfOjfMxv9Nely5t4
jsHsjp1+D4XMj9CVX+mnS5M30pxB7Iqdfnf8PzU/zEcsp68uVZajGQPZGTv9
rngfzQ/xIb/QR5ciy/Js/M3siJ1+JwXMD9KFZfTWJbIMTeN7YHvs9DvIb36A
D1jK/1Zc23E=
        "]]]}, {}, 
     {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0VWUUGUUgNE7AwMDUvJASYdSSjN0SCMIDKXSQwvMSCMd0t0l3SmoSCvd
oSCtSHdJ97B52Os759yXu9afKSomMjo0CIIQYkkRFgSFw4Mggkrm5PGC4B9N
qKv1b0LNw3Qxh3jJt/RnNrt4SB2a0Z3JbOYmFalAecrxOWUpQ2lKUZISFKcY
RSlCxPv/oxAFqU1TujGJTdygAJE0oSsT2ch18tOWfsxiJ/9Ti8Z0YQIbuEY+
2tCXH9nBA2rSiM6MZz1XyctQFnGQF7SmDzPZzn1q8APz2cdTGrKUI7ymE+P4
jSvkYRXHCfEOQ/Q08cwL9QDPacVZwt2Xa2L9U9/Sm6T2kxpXZ+gHuk3v8SUf
2s9pAl2hSfQvjWUQyeynNEznaSLdq09owBniuy3Rw7yiIyeI4z5W13GZz1jJ
MQLfBusC9vOMlizjKG/oxXT+4C7VGchc9vCYb/iOMfzKJT6lBT2Zxu/coRoD
mMNuHvE1MYzmFy6Sm+Z8z1S2cpsv+IpoRvEzF8hFFD2YwhZuUZX6dGAka/mP
nFShHu0ZwRrOk4PsfMLHZCMrWchMJjKSgfSkIy0fkYbUpCIllalLO4bzE//y
DgRph3o=
        "]]]}, {}, 
     {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0mUUFVUUgNGhQ7pBuksapKS7OxWkQaS7u7u7u7uRkEZBQFFRSVFROhWk
9vzY7zt3zf0x651J17JLnc4RgyCIQFw/CaMGQYHoQVCQcuY00YLgT02qu/Qa
cc0TdRM/Es25o45gJed4S11a0p8FHOc5ZSlDaUpRkhJ8QnGKUZQiFOZjClEw
fDfyk486tKAf8znGM/JSm8/pyzy+5il5qEVz+jCXozwhN18wnBV8yxtq0oze
zOEIj8lFB4axnG94TQ3Gso5LRPL/fKa9mM1hHvERE9jIZaK6116Hsoyz/E91
xrCWi0R071Pdws/EcO6pszjEQ3Kyk6vE8Xy83iKheYP+QBRzO71NYvM2TaG/
6Ac6RFPqDY2vSzWZntFXVCO18x+aRLfrh/qrxtLRmkpvagJdo8n1gkbQpvo7
icyb9Seim3vodeKZZ+pXPCAHO/iN2J6N0/V8T2TntrqVK8R0HqxLOM1LqjKK
1XxH4E4T7c4MDnKf7LRhEIs5xX9UYSSrOM87GtON6RzgHtlozUAWcZJ/qUwj
ujKN/dwlK60YwEJO8IJKNKQLU9nHP2ShIg3ozBT28jeZqUB9OjGZPdwhExnJ
QHrSkZY04R7DXYX7DncYfgfhrsJ9kzTcb/iNhLuiPPX4kkns5i/eA04PiXI=

        "]]]}, {}, 
     {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0mXYFVUUgNEL0iAhISHx0Y2EtHR3SYPS3Q0SBt0o3Z3S3Up3p5TSoXTn
mh/rvufsmef+2RPWuEO19uFDoVA44vlJETkUyhElFMpJVefs+lIz6B59SJjz
VN3GbRK599JxrOUKsc1+0A4MYQmniWReRStTiYpUoDzlKEsZSlOKkpSgOMUo
ShEK8z3tGcxiThHR/xfShrRjEIs4SQTPvtUGtGUgCznBZ54V1J6MZQ2XiWVe
X9vwKws4TnjzAtqDMazmEjHN6+lENnGd+Gat9Rfmc4xwZvl1Clu5RUKz7jqa
VfzN52Z1dQIb+Zd4Zq10B3dJ4v6zzuMoIfd8upv/SeE+WZ+SxnmL3uRL5276
nHTOf2pmva9JdZRm1ceaSldqRr2oMbSOfq0vNL3+pVn0gSbT8ZpNn2hq3aCZ
9B+Nqy31GWmdt+sdEjv/pI9I6TxXj/CRvOziP5J7Nkk3c4ME7l11J/f4yn2k
ruAC0d1r6++s5xpfmLXQAczhMB/IQxdGsJzzRPNuLf2NdVwljllz7c9sDvGe
3HRmOH9wjqjeranN6McsDvKOb+jEMJZxlije/06b0peZHOAtuejIUJZyhsje
r6FN+JEZ7OcNOalOY/ownX28JgfZgz0Guwr2Heww+A6CXQX7JkOw3+AbCXYV
fEPBPoNvItgRYVSjEb2Zxl5e8QmW5IxJ
        
        "]]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV1He4znUYBvCfnNOSlBKVspM0jIaUiChKSSpFEcomGiIUKipFGdl77wrH
PPZWRpkhyt57VOjz/PE59/O9n/O73vO+7/c6eeo0r9osQ5Ik7f3okzFJVqQk
yWc8TVb26Fay2zyYOtxHQt/Yyc95hpvYq1vFHvMQ6nI/GegXO/kFFbmZfbrV
7DUPpR4PcAX9Yyc7U4ls7Nf9wj7zMN6mCBkZEDvZhWe5hQO6X9lvHs47FCWF
gbGTX/Ic2TmoW8OgSOevqEwODunWMjjS+Wue51YO69YxJNK5Ky9wG0d06xnK
MIYzgpGMYjRjGMs4xjMhnvHsN1Thdo7qfuOAeQT1KUYqE2Mnv+VFcnJM9zsH
zSNpQHGuZFLsZDeqcgfHdWflj7xPaTboDslRNORBrmKyfoPszkvcyQndOfkT
H1CGjbrDcjSNeCjuTmqSzJbtuZp/mMZHlIvv0j5ddmCK5zfK76gWf7vdApmL
S8ykLdfql8iTfv+8/Jksug/jNeSiuJ/yybhbcq68UX4qr5PL4j7KTZ4/Yh7D
9c6N4/3KhTKrfDjuspwjb5CfyExyqbyGf5lO6zjrF8un4r6Z58mO8fl6jU3y
e14mN5eZRTtO2V+QU2lFWTbrjsqxNOGReM/8RxptKB+fvd/bLHvwCnk4rdvC
MfM4mlIi/u74nGIne/IqeTmj28rUSOdeVCcfZ3V/MI3ppDGDmcxiNnOYSzrz
mB/PeLY3r5Gfc7ptLIh0/oHXKcB53XYWRjr3oQZ3cUG3g0WRzn2pScG4R7o/
OW4eTzMeje+XxbGT/XiDu+O70u3khHkCzSlJZpbETvbnTQrFZ63bxUnzRN7l
sbgnLI2dHEAt7uGi7i9OmSfRgsfjXrIsdnIgtSkc91n3N6fNk2lJqbhnLI+d
HMRb3Bt3Jv4vc8Y8hfd4Iu51vDYz+JgKpLp/82WneH/m5TKbXOH5/wG61trs

       "]]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwN0WO8FmYYwOE3nJNr9SEtndqy27K1jJPttpZt27Zt27ZWy7Ztner6cP3+
930/H5+Qhq1DW4ULBAJhxA0KBK6zmqE0pwoliEd8EpCQX0lEYpKQlGSEkJwU
/MbvpCQVqUnDDdYwjBZUpSRpuclahtOSapTiCTuYRBcako5brGMErahOaZ6y
k8l0pRHpuc16RtKaGrzlILPpSxmesYspdKMxGbjDBkbRhpq84xBz6EdZnrOb
qXQnjNMspQkfOcp8BhIIDgTO6goycpeNjCaCt/Palq+cZDGR3C9rLd5zmOhu
czVIL+ov2l9/cIaY9uUaRa9qbC2nL9hDNPs0jagXNJb20O/8Rwz7Mo2sV7Qp
nzjGAoLdL+kgwpn/15Vk4h6bGEM7vnGKJdTmA0eYxwDK85K9TKcnf/OZ4yxk
MJm5z2bG0p46VOAV+5hBL/4hCw/Ywjg6UJeKvGY/M+lNM7LykK2MpyP1CCUb
j9jGBDpRn0r8wZ9kJwc5yUVu8pCXfOSnAAUpRGGKUJRiFOcx25lIZxpQmTcc
YBZ9+JcvnGARQwjvH87pKqKar2kc/Ut/Avjjhvk=
       "]]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV0mW4FlUUgNGPuuQlRLiE0ghKIyBId7d0CJdupESku7u7QelukO6UblBS
CcGilDU/1rz7PHN+zZ60kZ1qdIwSCoXCPRKHhUIP2MwY2vMVpfmQJCQlgmQk
JwUp+YiPSUVq0pCWdKQnAxl5yBbG0oFalOETHrGVcXSkNmXJxGO2MZ5O1KEc
f3OQ2XxPMzLzG9uZQGfqUp5/OMQcetOcT/mdHUzkG+rxP6dYwmAq8C+HmUsf
WvAZT9jJJLpQn1DMUOi0LmUIFXnFEebRlzjuXNG1tCS688/6IyMId76uG8jC
U3YxmYTe3dKuxDJf0tXBrsy/aAOimM8Eu9Jl+oHeCXalQzWeXgt2qOuD/eq9
YI9aSV9zNNi383xNpLeDfWs/jatXg/9A1wX/iP6qrYhhPq8rSGy+qyOJb76h
G8nKM3YzhW7E9v6yrqEhUZ3P6nKGUZk3HGMB/WlNmHsXdCWjyMZz9jCV7jQi
mnvn9AeGU4W3HGchA2hDdv7gJ6bRg8ZU5R0nWMRA2pKDF+xlOt/yNdXIyUv2
MYOeNKE6ufiT/czkO5pSg9x8Th7yko8vyE8BvqQghShMEYpSjOKUoCR/cYBZ
9CKSmvzHSRYziHbE9H0u6ipGk8D5pm4iwnxfU2spfQ+ClIj1
       "]]}, 
     {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV0lW4VVUUgNED0iFw6VDuJaQ7BBSRUhq9dHd3CyIhXYKAgtIi3d3d3d1I
K52CgGM/jPOvNff+zsvcEY07RLaPEgqFwvyExwyFXrGbyfSiEZFEkI70ZCAj
n5CJzGQhK9nITg5ykovc5CEv/7KHKXxPY6qQj9fsZSq9aUJVYsYKhU7pAobR
kfy8YR/T+IGmVCOW90/rQobTiQL8x36m04dmVCe298/oIkbQmYK85QAz6Etz
Enn3iq5iHDWIY3ZWFzOSLnzKOw7yB/1oQZh3r+pqxlOTuGbndAmjSON+T7fS
lWTuN3Q9E0nrfl93UIj3HGJmsCPPHml/Ujnf0c3BrpyfaUsSO18LdqVrgn3q
k2BX+ot+rP8EO9TtwX71RbBHraXx9Hywb10afBP6ONi3/qQf6d/Bd6Dbgm9E
n2s3kjvf1A3BN+T8VH8j3PmB7qQwIffD+ic/ktr9rm6hFUncr+tafqU28c0u
6DJG050UZrd0I79ThChmR3QWA2hNUrO/dB0TqMOHZhd1OWPowWdENT+qsxlI
G+qSwPySruBnvuNzPjA/pnMYRFvqUZRonh3XuQymHfX5guiendB5DKE9DSjG
lxSnBCUpRWm+4mvKUJZylKcCFalEZb4hhv8/qfMZSgcaktD8sq5kLD1JaXZb
NzGJCPeHuosszi81j36r/wOVIIvQ
       "]]}}}],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
    "AxesInFront" -> True},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Input",
 CellChangeTimes->{3.684631755048916*^9}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
NJBTa/q0VoM40aX7eZS8jj1PX9NaOq1OnOdwuqLEuoZtLu6ZND5nTVzRqzY1
o17BnattdjvTQoiQdxRlRjuX8CA6L5L4J4OQCZzdZnRqAc8PnepKiaggmpz3
5AgdncPd3DNWmak9RM3V4LtHz89g05GuI+zCK4RRp8GCiuIUzo85sfz1OxeE
OhgTH4CM61Lt2sPmJECYQ9agt2AUC6blCXI5K4HINdHWoYwhPN6g/bflgz5o
97SKvGnvw9ubuNh4O6zB3Yz+3O3d3bjJ4MTIvkv3QIpWVTJerBVTtSjxpjWF
QsFlh2s+z+px2h4tEzaZBNB6Y15f0vQVr14rr8B6r0GoWjjU42gKFhenb7T5
/An0NToeCzjlAU1NlEF2VRl8k0jbp+74HdiurN8TpKiFgJKDRrEhPcB+rUIh
dLwbRlX/5LddGIBXpJ+aPUr9oP+O2SH82jB0XC96dZ96CGJGvI39ZcZhnKZA
XcV0Y36PJE4ULpLB8GLTwbZLJODa7Ttxa30KJrNitPhrB8Eq7ZFnXd8MKHX8
Vh081A8UN/7oLTUsAVOnIJ+wdQN8P/pzfLx9BQpYPlxmZKoBz/FBQZryNaBr
I41/jC+Dy5x7pIO1KBAWr2kaDf4Et0XyDmVfoETRT4JZLKhfg9XxAxzvlanQ
woMkvbiziWAGXj9/nKVGkWfaTb7cCYWaosG/8/I0yNtLfjfjSU9YcCNb7ZGg
RV2MGX01726BiERHw83DdOitTfjeit36cKjr9cGgffTIIMWJz1xaGa7VVqaJ
iTEgW7nq9IJ4cagRP1uSeIgRXbU49qb/6w5gCskqHeZnQq0zVScbzFYJte7p
OJ09zOjedMzTzqVuYv21WnkNFwvq+ClUf8n6G+H8UdFZmZYVZa3zFjyZzyRG
PwmsNNOzocMTV5XhUzDBYIJ5/ZbY0GwO55jGSRvCbD7EqGB9DVMYvGwvszEk
eq8FK1TSr+LPLfuovsp5ELl3TqET7Mv4FdP5t22WccQ9vtRPa2KLWMRyeIi5
4BMRLuWmkHd8Hg9e+ffNTb6BGB9e76tVnMX/GXfrfT9LJjT/O0t6qjqNC2X1
iAtLDODZonrXCU3idsYl34SAPdDqqvHQOnEcWwnc+Tr19gR8Fghp0coexnK6
9onfzp6Hw+ySpmtlA1ialF7x+b0FJPErNemt9+DfKnF6u/ScQVbUrI9PuhNb
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
6S3PtdfNODQkwqa3tNUct3jsmrrlLXPmvt8MiMnc8pYmB50CIorfb3lLsfHM
I1/3f9jyllKDf2J9yJ+3vKXtiWQTEcBb3tI2qzh9Z0PZ/7zlU2tSOfe3LW8Z
pj309Hlr9Za3bKr8cjkmp3bLW74YfLGj7lXdlrcMOJZFpR9dv+UtdbkvPxNW
/Z+3fNL01dNuqnHLWxZofr2rp/d3y1vyDjOZPjNq3vKWCwMpY08FW7a85b21
ad1Ej5Ytbxklocv66l7LlrdMteOWmuZr2fKWZqBzS/Ra85a31Ev53Sp55u+W
t1QSCDVn6W7c8pbRR1BrrOH/vGWBP2WtfWD9lrfcn9M4NFNUt+UtLx89EXm3
q3bLW3IX+oT4UX7f8pb84kTwA79vW96SlsxdeXyhbMtb1pdHqOxtwVveMqHA
0+q2S8GWt7QZ+f3yseaHLW/JkLzuLHwge8tbMmbfWZL4kLnlLZmF+Si4H6Vu
eUvKnIow3cIk2PSWCR1O42zPnsKmtxQMDdPlT4mATW8Z7OVyx3R/EGx6S216
2ojKBB/Y9JZFcmK/eD67w6a3rPi/62HTW+KjN6ldklxg01v2hl0U2vHdEza9
pbjgvrEXL/xg01s+dq2/oxXwCDa9pXnSJW3ubVGw6S13MQsXig3Gwqa3zFM7
HLKtJnnLW15t0eOhN0vf8pYNCjNR+n1vIChX13fhZhfc0Nj/XOJN05ZvzBui
oEzu+bvlG+NOjakUfm/e8o0zcqmkCYOWLd/YZnA0TSmgZcs3Un4jRPk3Pt/0
jQMONatuG7/f9I0PlfSt6Lr/QiIaDM/qmYe9kpEfv8U3bXlCqwnWlu8X3255
QkWqxm2ebulbnvAt5dObSdwvtjxhbLlKo7t1HGx6wtDylsv9dlGw6QnjJXs8
um+FwqYnnHjYr/zfLn/Y9IQ8uxRXdz+7D5ueMEJSizWNwxU2PaFA4em5HfVO
sOkJ0/mTGlUFPWDTE1pp19r3zzyATU8Yejq3d84sGDY9IcPEuoHko8ew6Qmp
ngfmSvA+g01PWBE4Emn6+PmWJ2whFci97X655Ql3oKTtp45mQarX9OStX52w
L+qmWY9205bfa+so7Hif+HfL7505mpOe9KR5y+/Rar/+uw21bPm9kKT48BN+
LVt+z1s+UD/JtmXL7wln27GYzTZv+T1Kms4/Q8LNYCyouNJnPg8u3vTXlWea
trxc1pOOjtq977e8nKhCA80h1owtL8cbyvN57GzKlpdjsayk5nmQAJteLlzt
etGthWjY9HJUukOP/rsSDpte7k7kDi1u9gDY9HJpckUJGge8YdPL9d1INKvX
uAObXi5DylHsUcRt2PRyvlbFj+sbvWDTyxnIv7h92O4hbHq5u3vJ5pwNYbDp
5X5FsXqNZ0VDWdq7MNlb3UBbsttlB83fLX8Wamc4syzUvOXPoi6LuX1daN7y
Zw35u1P3bpzPTX+mS6MWU7xxvjf9GZHybPWwfMv//JmN62nj2OYtr7V66uPx
k07PYNNrqekyxLisPYZNr6WrSCXz8EQIbHqtS64OnBc0fGHTa30T2ZZ7kuMe
bHot7Wsb0ym9M2x6re209cYOC46w6bXoLh0SlfnnDpteK0ufYZpd9AFsei0m
5fCz1y4HwabXusT5XyJXYwRseq0XdXP8Q6diYNNr3bfjUlFbSIJNr3U1+cjV
UtGXW15L+o8PTezV13DrUczAwdoOMD6pm52xp2nLR/FHfzvEdvfvlo/iXpI8
fMm9ectHWXhLmdEdbtnyUQprOpwJ3i1bPspt52D+tGvLlo+CQebERoaWLR9l
dE/ZGak0g1z4xGFvoXmwuCm/T0vg75ZHYrA2GQtIfb/lkQgnNc64zowtj6S8
h/3AfVLKlkfaeeasJFtcImx6pNI5F4nMiiew6ZF0aBzYn1NEwKZHumezfc6O
OxA2PZJW4iWngn/esOmRHhMLjO4ebrDpkZZtKtS/RrrCpkfKmoyTb+T1gk2P
5M3DQTXr6w+bHomvjcksICMUNj1SCL1JpVRbFIiIUwXxjnSBaJed/JGWpi3f
8/z3uY+9VM1bvuel9/w9357mLd9D83Z+75erLVu+J61gN8552LLle+xLJN2n
1Vu2fA+ejozYltu85WFG/oS2+FjHwqaH0TNiir+cFwmbHoZ3p9fxI5qPYNPD
nEEsNWOSfrDpYTS66Vcqz3vCpodpPmDNdobeBagCkDNDwSDsHWi0sMlu3vIi
1Kdkv+eda9nyIiyKzUftN/Z304ssvS/zy9o4nk2PwP3nRj3PxnrZ9AjB4ukP
rvq0bHmEAz6+fm2HWmCz3x+VKDtO2u4Em/3+C5mHrpeHOsJmv3+O30vbVskd
Nvv9LzJHi+oqfGCz3+95v05IvTUQNvv9zxoCHTTvRsBmv19eUul56q+nsNnv
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
J38Za5zK4PqpRuGcl9OtExhcP907bZ97jFEcg+unu5ulVKcMRDC4ftoT+Khp
g2cIg+unHaNy+852+DKB0yZIlRm2Mkb2j9XHQr2K64sPNTv6BXpCWl+UM4np
Pw33B1xffFWzIO2gh5DWr9T8JtpqeQpp/Spmg8sXZ9gf16/u9+evXqkjZHA9
6NZPLZ+2Vh9aj2FVL+6eDvcTXI8ZOaLpwz+4n+B6xKLRyieGuAhpPSI44WJC
JMxv9H77f6NVLkCMvm9vGM3uh/d/9P1YQd72JrifoO+HGupYDun2ZtD3Y+ak
Tm+F92P0faWimhcT4Pqg7y99uXVCNdwf0PfV+zKS6+B+gr6/+aLCtxFwP0Hf
P7nYSZ8F+6Pvt7SXTFWC8dD326eN+dgb5M2g7xttr5VeCtvR97MaZ6gthc+j
79cc/RirAr8Pfb9Jw1TvM8To++yKY9YCiNH3i9tLi1dAjL5v+qqGuwLGR9//
PnpC4FcDbwZ9//m8bV6SCbnk+9Hvvzu0T8wj369UbMg4eT+ffP/fxIqOMZ4F
5Pt/MkY+VVO8Sb7fU5ul+rWviHx/3NvzYSWVxeT76+5FDT1TXEq+37347pbc
a3fI92unJ3n/XFVGvl/o5qCWqF1Ovv93dOtNNZUK8n29TKX/FvdXkO9fvK54
0e5DJfk+d7L+vXpuFfn+yln3f8dFV5Pv2/4oWdVtfI98P3Dph9CIH/fI9y/v
t1FdlXiffH+mj05EnjyPfD/Kdll9RiKPfP9a0XL9Yb945PtZn/qcR6zgk+87
ifeM0tjLJ9/nTtj61zaCT75f9XBJ6HmI0fer/Ex2VLnzyfdzLE6UrVrFJ9//
4r7w788fPPJ9yRu+jeUneeT72XdSff1UeOT7x2eHBRw4dZ98n7W3e67373vk
+7ITN2jEbr5Hvh/V6TOafaqafD/m+a6apEdV5PsqKksFjd8qyfcP9Z+L9phU
Sb5/PC7rqNbSCvL9pE7Z77565eT7HWpjxydYl5Hvd7dfffmde4d8v69n43X/
ilLyfYvCqI0mP4vJ97/eTlvAl7xFvp9wqiLw3dqb5PsW4n2dfskF5PtWjqqN
nQ355PtXY2ZsqNPPI9+vH5wP6Pue5+Nn3TXnMPXZo22KrguYJ+tKV02045G3
e9Qkaa7n88jbw50zspYo8snbhz2vi9pqzSdv77vd23PlEJ+8/fsh98ero/jk
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
FmeTZ1Qs031nMo5NnuEuf+CYpQKbPOPc1HPVL2awyTOuzpPv9lnIJs8wM7/f
IK/NJs8Ym2yk4qjHJs/wdFk1OnYdmzzjV0uzXJkZmzwjuu5Kfaklmzxj1NVQ
p71b2eQZyVJpbf3b2eQZeVv15io6s8kzDjpO2WbuyibPmKt+VPrkbjZ5Rl9N
yowF7mzyjOs3Zhi2QYyeYfdV3/UbxOgZbycYuEyDGD1j3kM1j4swHnrGWKHb
roXwfegZO1703v7hxCbPiLva8W6hI5s8Y8uExz0b4PegZ0yYx7D+wO9Fzxho
q1023pxNnsH5+aBLCOcLPUOt/OmFHfps8oynk7IrguB8o2eYF+5b6qXOJs+4
bNYY92Ymmzyj+n1NOheuJ3rG3WlnX50czybPkJ769lkB5AN6xmKdIF0TyBf0
jLOFrRenfGaRZ0zzDWwa/pJFnnH3BxPL1LDIM265GyYqlrLIM7YnCA1+QT6j
Z8Tk7nA1TmGRZ+B8QM/YtsI9K+cEizzj2jS1gIf2bPKMUZKXgtV2sskzFr1L
M3ziwibPUFAqqo90Y5NntCybahqwh02e8bn243c2XF/0jImrjGYO82CTZyht
11zJgu3oGSOX7K/yh8+jZ2wbu8U8HMZHzzCKaPa6Ct+PnqFodVJTdHzoGecn
xRkK4fjRM3zPXr5VcJJFnvFPP9lvUwyLPENuf2kFaxubPONLr660/A42ecbp
osM2/ZD/6BmPm4c7/IB8RM+YLSX1dxQcL3pGplePnyf8HvSMgqk2X/ohRs84
1OUSVQcx9TNMsmurh8+jZ7B3nNOWh/xHz9BZ4D9s/y42ecZ4c83FEyH/0TOM
G25vGAXzFT1jYfD2H0cTWUz4tBkpj0tfMvPuXtGYDfujbwgmDHQlwXjoG2XD
FxVLi+bboG+4Ms0Sr+B40DfqCsceewTHi77xMO1T3wDE6BvVIWKRbhCjbyxZ
NPv7RPg8+kZOT2hBE5wv9I1t/hq8F3D+0TeGWrya+F80i3xjTrFVlBRcD/QN
1X3cguMwv9E3jv5YvzsOrgf6Rt3HSxtZMD76xiy7+7fq4Pegb8i61K03g+ND
37A9djmiB2L0DaOFVZeaIEbf+PtUNu0vHD/6RljlKKntMB76Rmvg1K31cP7Q
NxadmLMrHM4v+kZSTeCaNLge6Bs8D6t7X5JYzLWPZ/2rCoTMZE7XiWzIV/SO
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
Gh99ZKGz5KIV8P3oI0MG/8P6EOP/7+3/B3Z66Xg=
   "], {{{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1: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
Ag==
        "]]]}, {}, 
     {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV1He8T3UYB/Bzl5FxRVRoXKIkNEVaIk0jmVFJtG0qWhpKqSgNu+y99y6S
kTKLzJK9y969nz/e9/N8P8/v3PO6v3NeN6tpq9otU5MkSaGzH73SkqRCjiSp
yFJzwYwkWZKeJHnk+/IHMszV5BvM4BwXczftmMAxtrv+AjeYn2EA/7BEl0/e
RVvGczR2+vOUNjehP9tYrMuUd9KGcRyJnf4c15ufph9/87Mur6xEa8byX+z0
Zyllfoq+/MUiXR55B60Yw7+x05/hOvOT9GErP+lyy4q0ZDSHY6c/zbXmxvRm
Cwt1WzhFSedG9GIzC3SbOUkJ5yf4lk38qNvECa5xbsg3bIznoJvPPOYyh9nM
YiYzmM40prKR4xR3bQO+ZgNTdBs4RjHn+nzFn0zW5ZIVaMEoDsVOf5Qscz16
sp5JuvtlJ6Zzlou4nVcYycH4rM/dJ1+L+3MqnqfuLTmLC1xNXb5kHRPt35Pz
Sff+VY3nQE5zRzmNM3GO508u/Tsyn5wjU2R5mV8ukNnlyzKvHCEPxH3c4xLn
xebcsnO813KuTJWVZQG5UOaQr8pMOVmejHfM9Yvib9a9KWdynqviWZJNX0d+
wR9M8Pl35TzS7KrI15nK6bgHbzObxP42+RLD2R+/w/X3yg7x3XMi3lvdlfJx
evA743XZ5a28yDD2xU5/j2wf3y/H4z3WXSFr0521jNNlk7fwAkPZGzv9IYqa
H+Nz1jBWlyFv5nmGsCd2+oMUMdfiM1YzRjeaUYxkBMMZxlCGMJhBDGQ1Byjs
2pp8yiq+161iP5c716AbK/lOt5J9XOZcnU9YwQDdCvZyqfOjfMxv9Nely5t4
jsHsjp1+D4XMj9CVX+mnS5M30pxB7Iqdfnf8PzU/zEcsp68uVZajGQPZGTv9
rngfzQ/xIb/QR5ciy/Js/M3siJ1+JwXMD9KFZfTWJbIMTeN7YHvs9DvIb36A
D1jK/1Zc23E=
        "]]]}, {}, 
     {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0VWUUGUUgNE7AwMDUvJASYdSSjN0SCMIDKXSQwvMSCMd0t0l3SmoSCvd
oSCtSHdJ97B52Os759yXu9afKSomMjo0CIIQYkkRFgSFw4Mggkrm5PGC4B9N
qKv1b0LNw3Qxh3jJt/RnNrt4SB2a0Z3JbOYmFalAecrxOWUpQ2lKUZISFKcY
RSlCxPv/oxAFqU1TujGJTdygAJE0oSsT2ch18tOWfsxiJ/9Ti8Z0YQIbuEY+
2tCXH9nBA2rSiM6MZz1XyctQFnGQF7SmDzPZzn1q8APz2cdTGrKUI7ymE+P4
jSvkYRXHCfEOQ/Q08cwL9QDPacVZwt2Xa2L9U9/Sm6T2kxpXZ+gHuk3v8SUf
2s9pAl2hSfQvjWUQyeynNEznaSLdq09owBniuy3Rw7yiIyeI4z5W13GZz1jJ
MQLfBusC9vOMlizjKG/oxXT+4C7VGchc9vCYb/iOMfzKJT6lBT2Zxu/coRoD
mMNuHvE1MYzmFy6Sm+Z8z1S2cpsv+IpoRvEzF8hFFD2YwhZuUZX6dGAka/mP
nFShHu0ZwRrOk4PsfMLHZCMrWchMJjKSgfSkIy0fkYbUpCIllalLO4bzE//y
DgRph3o=
        "]]]}, {}, 
     {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0mUUFVUUgNGhQ7pBuksapKS7OxWkQaS7u7u7u7uRkEZBQFFRSVFROhWk
9vzY7zt3zf0x651J17JLnc4RgyCIQFw/CaMGQYHoQVCQcuY00YLgT02qu/Qa
cc0TdRM/Es25o45gJed4S11a0p8FHOc5ZSlDaUpRkhJ8QnGKUZQiFOZjClEw
fDfyk486tKAf8znGM/JSm8/pyzy+5il5qEVz+jCXozwhN18wnBV8yxtq0oze
zOEIj8lFB4axnG94TQ3Gso5LRPL/fKa9mM1hHvERE9jIZaK6116Hsoyz/E91
xrCWi0R071Pdws/EcO6pszjEQ3Kyk6vE8Xy83iKheYP+QBRzO71NYvM2TaG/
6Ac6RFPqDY2vSzWZntFXVCO18x+aRLfrh/qrxtLRmkpvagJdo8n1gkbQpvo7
icyb9Seim3vodeKZZ+pXPCAHO/iN2J6N0/V8T2TntrqVK8R0HqxLOM1LqjKK
1XxH4E4T7c4MDnKf7LRhEIs5xX9UYSSrOM87GtON6RzgHtlozUAWcZJ/qUwj
ujKN/dwlK60YwEJO8IJKNKQLU9nHP2ShIg3ozBT28jeZqUB9OjGZPdwhExnJ
QHrSkZY04R7DXYX7DncYfgfhrsJ9kzTcb/iNhLuiPPX4kkns5i/eA04PiXI=

        "]]]}, {}, 
     {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0mXYFVUUgNEL0iAhISHx0Y2EtHR3SYPS3Q0SBt0o3Z3S3Up3p5TSoXTn
mh/rvufsmef+2RPWuEO19uFDoVA44vlJETkUyhElFMpJVefs+lIz6B59SJjz
VN3GbRK599JxrOUKsc1+0A4MYQmniWReRStTiYpUoDzlKEsZSlOKkpSgOMUo
ShEK8z3tGcxiThHR/xfShrRjEIs4SQTPvtUGtGUgCznBZ54V1J6MZQ2XiWVe
X9vwKws4TnjzAtqDMazmEjHN6+lENnGd+Gat9Rfmc4xwZvl1Clu5RUKz7jqa
VfzN52Z1dQIb+Zd4Zq10B3dJ4v6zzuMoIfd8upv/SeE+WZ+SxnmL3uRL5276
nHTOf2pmva9JdZRm1ceaSldqRr2oMbSOfq0vNL3+pVn0gSbT8ZpNn2hq3aCZ
9B+Nqy31GWmdt+sdEjv/pI9I6TxXj/CRvOziP5J7Nkk3c4ME7l11J/f4yn2k
ruAC0d1r6++s5xpfmLXQAczhMB/IQxdGsJzzRPNuLf2NdVwljllz7c9sDvGe
3HRmOH9wjqjeranN6McsDvKOb+jEMJZxlije/06b0peZHOAtuejIUJZyhsje
r6FN+JEZ7OcNOalOY/ownX28JgfZgz0Guwr2Heww+A6CXQX7JkOw3+AbCXYV
fEPBPoNvItgRYVSjEb2Zxl5e8QmW5IxJ
        
        "]]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV1He4znUYBvCfnNOSlBKVspM0jIaUiChKSSpFEcomGiIUKipFGdl77wrH
PPZWRpkhyt57VOjz/PE59/O9n/O73vO+7/c6eeo0r9osQ5Ik7f3okzFJVqQk
yWc8TVb26Fay2zyYOtxHQt/Yyc95hpvYq1vFHvMQ6nI/GegXO/kFFbmZfbrV
7DUPpR4PcAX9Yyc7U4ls7Nf9wj7zMN6mCBkZEDvZhWe5hQO6X9lvHs47FCWF
gbGTX/Ic2TmoW8OgSOevqEwODunWMjjS+Wue51YO69YxJNK5Ky9wG0d06xnK
MIYzgpGMYjRjGMs4xjMhnvHsN1Thdo7qfuOAeQT1KUYqE2Mnv+VFcnJM9zsH
zSNpQHGuZFLsZDeqcgfHdWflj7xPaTboDslRNORBrmKyfoPszkvcyQndOfkT
H1CGjbrDcjSNeCjuTmqSzJbtuZp/mMZHlIvv0j5ddmCK5zfK76gWf7vdApmL
S8ykLdfql8iTfv+8/Jksug/jNeSiuJ/yybhbcq68UX4qr5PL4j7KTZ4/Yh7D
9c6N4/3KhTKrfDjuspwjb5CfyExyqbyGf5lO6zjrF8un4r6Z58mO8fl6jU3y
e14mN5eZRTtO2V+QU2lFWTbrjsqxNOGReM/8RxptKB+fvd/bLHvwCnk4rdvC
MfM4mlIi/u74nGIne/IqeTmj28rUSOdeVCcfZ3V/MI3ppDGDmcxiNnOYSzrz
mB/PeLY3r5Gfc7ptLIh0/oHXKcB53XYWRjr3oQZ3cUG3g0WRzn2pScG4R7o/
OW4eTzMeje+XxbGT/XiDu+O70u3khHkCzSlJZpbETvbnTQrFZ63bxUnzRN7l
sbgnLI2dHEAt7uGi7i9OmSfRgsfjXrIsdnIgtSkc91n3N6fNk2lJqbhnLI+d
HMRb3Bt3Jv4vc8Y8hfd4Iu51vDYz+JgKpLp/82WneH/m5TKbXOH5/wG61trs

       "]]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwN0WO8FmYYwOE3nJNr9SEtndqy27K1jJPttpZt27Zt27ZWy7Ztner6cP3+
930/H5+Qhq1DW4ULBAJhxA0KBK6zmqE0pwoliEd8EpCQX0lEYpKQlGSEkJwU
/MbvpCQVqUnDDdYwjBZUpSRpuclahtOSapTiCTuYRBcako5brGMErahOaZ6y
k8l0pRHpuc16RtKaGrzlILPpSxmesYspdKMxGbjDBkbRhpq84xBz6EdZnrOb
qXQnjNMspQkfOcp8BhIIDgTO6goycpeNjCaCt/Palq+cZDGR3C9rLd5zmOhu
czVIL+ov2l9/cIaY9uUaRa9qbC2nL9hDNPs0jagXNJb20O/8Rwz7Mo2sV7Qp
nzjGAoLdL+kgwpn/15Vk4h6bGEM7vnGKJdTmA0eYxwDK85K9TKcnf/OZ4yxk
MJm5z2bG0p46VOAV+5hBL/4hCw/Ywjg6UJeKvGY/M+lNM7LykK2MpyP1CCUb
j9jGBDpRn0r8wZ9kJwc5yUVu8pCXfOSnAAUpRGGKUJRiFOcx25lIZxpQmTcc
YBZ9+JcvnGARQwjvH87pKqKar2kc/Ut/Avjjhvk=
       "]]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV0mW4FlUUgNGPuuQlRLiE0ghKIyBId7d0CJdupESku7u7QelukO6UblBS
CcGilDU/1rz7PHN+zZ60kZ1qdIwSCoXCPRKHhUIP2MwY2vMVpfmQJCQlgmQk
JwUp+YiPSUVq0pCWdKQnAxl5yBbG0oFalOETHrGVcXSkNmXJxGO2MZ5O1KEc
f3OQ2XxPMzLzG9uZQGfqUp5/OMQcetOcT/mdHUzkG+rxP6dYwmAq8C+HmUsf
WvAZT9jJJLpQn1DMUOi0LmUIFXnFEebRlzjuXNG1tCS688/6IyMId76uG8jC
U3YxmYTe3dKuxDJf0tXBrsy/aAOimM8Eu9Jl+oHeCXalQzWeXgt2qOuD/eq9
YI9aSV9zNNi383xNpLeDfWs/jatXg/9A1wX/iP6qrYhhPq8rSGy+qyOJb76h
G8nKM3YzhW7E9v6yrqEhUZ3P6nKGUZk3HGMB/WlNmHsXdCWjyMZz9jCV7jQi
mnvn9AeGU4W3HGchA2hDdv7gJ6bRg8ZU5R0nWMRA2pKDF+xlOt/yNdXIyUv2
MYOeNKE6ufiT/czkO5pSg9x8Th7yko8vyE8BvqQghShMEYpSjOKUoCR/cYBZ
9CKSmvzHSRYziHbE9H0u6ipGk8D5pm4iwnxfU2spfQ+ClIj1
       "]]}, 
     {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV0lW4VVUUgNED0iFw6VDuJaQ7BBSRUhq9dHd3CyIhXYKAgtIi3d3d3d1I
K52CgGM/jPOvNff+zsvcEY07RLaPEgqFwvyExwyFXrGbyfSiEZFEkI70ZCAj
n5CJzGQhK9nITg5ykovc5CEv/7KHKXxPY6qQj9fsZSq9aUJVYsYKhU7pAobR
kfy8YR/T+IGmVCOW90/rQobTiQL8x36m04dmVCe298/oIkbQmYK85QAz6Etz
Enn3iq5iHDWIY3ZWFzOSLnzKOw7yB/1oQZh3r+pqxlOTuGbndAmjSON+T7fS
lWTuN3Q9E0nrfl93UIj3HGJmsCPPHml/Ujnf0c3BrpyfaUsSO18LdqVrgn3q
k2BX+ot+rP8EO9TtwX71RbBHraXx9Hywb10afBP6ONi3/qQf6d/Bd6Dbgm9E
n2s3kjvf1A3BN+T8VH8j3PmB7qQwIffD+ic/ktr9rm6hFUncr+tafqU28c0u
6DJG050UZrd0I79ThChmR3QWA2hNUrO/dB0TqMOHZhd1OWPowWdENT+qsxlI
G+qSwPySruBnvuNzPjA/pnMYRFvqUZRonh3XuQymHfX5guiendB5DKE9DSjG
lxSnBCUpRWm+4mvKUJZylKcCFalEZb4hhv8/qfMZSgcaktD8sq5kLD1JaXZb
NzGJCPeHuosszi81j36r/wOVIIvQ
       "]]}}}],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
    "AxesInFront" -> True},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.684634440271858*^9, 3.6846356592803373`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"pdfTriangle", "[", 
   RowBox[{"x_", ",", "\[Mu]_", ",", "\[Sigma]_"}], "]"}], ":=", 
  TagBox[GridBox[{
     {"\[Piecewise]", GridBox[{
        {
         FractionBox[
          RowBox[{"x", "-", "\[Mu]", "+", 
           RowBox[{
            SqrtBox["6"], " ", "\[Sigma]"}]}], 
          RowBox[{"6", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]], 
         RowBox[{
          RowBox[{"\[Mu]", "-", 
           RowBox[{
            SqrtBox["6"], " ", "\[Sigma]"}]}], "\[LessEqual]", "x", 
          "\[LessEqual]", "\[Mu]"}]},
        {
         FractionBox[
          RowBox[{
           RowBox[{"-", "x"}], "+", "\[Mu]", "+", 
           RowBox[{
            SqrtBox["6"], " ", "\[Sigma]"}]}], 
          RowBox[{"6", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]], 
         RowBox[{"\[Mu]", "<", "x", "\[LessEqual]", 
          RowBox[{"\[Mu]", "+", 
           RowBox[{
            SqrtBox["6"], " ", "\[Sigma]"}]}]}]},
        {"0", 
         TagBox["True",
          "PiecewiseDefault",
          AutoDelete->True]}
       },
       AllowedDimensions->{2, Automatic},
       Editable->True,
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.84]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}},
       Selectable->True]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxItemSize->{
     "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.35]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   "Piecewise",
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True,
   Selectable->False], " "}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.6764622317264*^9, {3.676462275865959*^9, 3.676462333498724*^9}, {
   3.676462386203244*^9, 3.676462388994298*^9}, {3.6764661175139837`*^9, 
   3.676466119114414*^9}, {3.684532477326845*^9, 3.6845325183824787`*^9}, 
   3.684532784316008*^9, {3.6845328299790363`*^9, 3.6845329325663357`*^9}, {
   3.6845330180277*^9, 3.684533026054028*^9}, 3.684533084708044*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"pdfTriangle", "[", 
       RowBox[{"x", ",", "1", ",", "\[Sigma]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", "1", ",", "2", ",", "5", ",", "10"}], 
         "}"}]}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "4"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{"sigs", ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", "Bold", ",", "8"}], "}"}]}], ",", 
        RowBox[{"LegendLabel", "\[Rule]", "\"\<\[Sigma]=\>\""}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.75", ",", "0.55"}], "}"}]}], "]"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<../abecker/SwarmPublications/JournalTorqueControl/pictures/pdf/\
Triangular.pdf\>\"", ",", "%"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6764623486045923`*^9, 3.676462394184904*^9}, {
   3.67646603305241*^9, 3.676466039085231*^9}, {3.676467095974711*^9, 
   3.676467144451521*^9}, 3.684532791002536*^9, 3.68453283228883*^9, {
   3.684532907047003*^9, 3.6845329632608023`*^9}, {3.684533010619349*^9, 
   3.684533027756667*^9}, {3.684635475603888*^9, 3.684635476052294*^9}, {
   3.6846355747047367`*^9, 3.684635582349329*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJzFmnk0VW3bwE9FRFSkolSGJlIUTdR9FGlAZUgqSqkkGYqeIhlCFJkzho6j
QcMxbJkdM+cYkpAj85SjMpQhRb79rufZ135XrXe93z/f+vqnda299+267mH/
rt85R+qMjd65mRQKRWYWhfKv/0tMpdqmp6eZlH/+LfILXBUl+QviXcqFHTSR
SYhbrj+m6cn9gDhP94vfg4PfIXZ4ODKwV2MMYroPwyD21AjEzwbkFM31vkI8
1M2/JVd3COKTw8puNz98hthTgONmVN4HcbRp9z33H90Qb63H+utRB8RTjnMt
eSyaIL5U4LxgqqkW4rMNHSsOGZUwXVtyn7+qikdjb64wxcQSmNSyntDtBkxk
zLtYhd8mFeWm+N38/oSFEr4OjnG/s9BsA4tNy1Etssv+0HAnqA5JuBra1Ou8
RyqROz/0sZvRPuaDsvzyZjQRIRB107oT3d8p6j5frANx5ecxlTf1og0j+Rr3
wrqQQmXQuKhWPzqOLRFbebgXuSsxVscvGkC7dBp8XJr6kNyO2xRP7hDiVTax
MeP2oZwzA+MHh76i3frVji9VetH7Lwn9lnUjiBXB6diQ1IWWUR5ekOwYQ4UN
O1QfjLSjFW5KWard31FtIlfD614zem4uwp9S/AOljAWyD9x9j06/2dSeXTWJ
HDf2Kn9YVotiomNTJbFfKPFyy4sXi9lI57PBK4d9FKrY7SNrMtfmo/aqCa3V
B2dQ5VgOLxw8E1B6u0abu9pMKjGfMukM1XW7Z0H8Li8/1GkLD8RdznFNs1bz
QnyHEtddv242xLaY5mf9ZXwQD8gLZi6V4Ye44nisrfiqORB/zuKsKhITgJjW
ujnutYQgxNGblZccFZ4L8Sia5SQ/RcZd877SDlCEIRZbcKdc7CsZn2UEDE5P
zyPzcTB2rxImz0f0C+tHdK8qiE/fzfMPic5iUk50Ong/xFDjr5X+HzZ8RlWu
f705FPoRfaptCm4YGURNGfuctcX70dXqbTf7Pg8jepGYwx3/j2iRyZqfVSwK
1XLUOmjR3TSkbRQbXFc0g2ooOSAU6HUefTnoKHSUSc63Wrtgs8ANMr/jlrlJ
5++Q+TXfk0he86YGYrZfe2qlXgEzf39BxSmPV8i9x7hofMcnFCKx72v61160
ZaZmSw7vIJp7239W7w0u0uUxzdtyaRjVO22/Yq/Wh1Jk8+qkfCjU/Clv2+Iv
WehBUOVl5zszqJTnBrmtXx4gvQenrn12JvN7en2/XoAKmZ+r+tP2CWsWk1L/
6ml1WSBSWNJ3nCn9BfF+fPzi49Y+VHNk26rvdkOo9uIibpk3FzmFBkg5CuDj
fzHALFYnoZnLrmTKU8jxa7Sqz3nmkOMHmA9qpRaR9dNXa5uJ1L8l32ebOrhC
hkXM0GCmKt+6Z6jx2LUW3oJ+dP1C0iyrR72oWfzHDMX7A2hVX0rpJjkuUou1
bTORG0ZfjCqG+oP6kKu3T0GFBYXaP+PBqajYXKSq2NV05CK+PvMCPDfdikMe
qrWJW03I/Fo1LITeiZL5Cf8lqP7GsYJJ8ZbSlLzuhNzv8ThUPf2MuJvn5UX1
fkTxLUHpSluGUCbPt1VOjVy0b+KEsGw/hUodNotHjSnoSab3akrnDBhv9sIv
K8sj/63+fv+M/c6D6KukFTWCxUXDI2mUZwkzqInWIm1JeT7oq6Cmq+zZMiZl
nxjlQXI0OnnrhLbRcjLfSCdG4u5WcrxEM+9gTgc5n/wj5pl8x8j3p5pHh8eG
o8VM14y8b8edHiP3II/+uR79iOtnPrf0ei9iJBiEXNQbQCmRGmuNZ3JR6ucJ
m+E5w2hCc6Hi6rw+dH7HYHrcMfz94rHsvdf3PCTsYr1A7Tj+fvk8U7xuRjxa
fl9Qs0WbzO9H4rjlyEwyv/oFO4czXSvx+dQz3hF0FCmUiLjXXfqMjh8vKh3N
/Yh8ZfJddZcMIQU9s2IDSj/a+LyAZ4JDoRpe7ZOQV8KQI/9Ck/5acj6lHG/e
4vqQ45+91n/gtvogcq2ZesR8xEXFe9S3Bj/A7x+2fhDVG4gyH19TnHexnOkq
fMYgRS0MbazqdVefR+ab1rGL37yKHE+rmRPQbc9mUraOT9QneKOssHMDCw2G
kGa6x51HSVxUZzk1KDZM5pNnqrJ6fuYgOn+pqfXKMBctfyzHzsPw9RzzkzY8
7YJuia3UkRokx9/WbpD5eYhcr6zjdufcI8j1OvzSrDavoZhJOZj3xkM2AR1j
CNoFnOtH0o/y5l8170Xhn9xMvJQH0PerQsZWA33IOnjXtuyJIUTJzXhT9K4P
HReV3nzvML5eJW1Bk3Qm+ms1tj5ZD8/neE4nfQ8dWW5dK5KkQdbPb8oU9/xB
vk+3tRnuZ8wi35czOyP4j+l8RiGXJStozz4it9KjPSfnDKHe6+HB6gvxvDxG
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

     "], {{{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[{
          PolygonBox[{{137, 802, 803, 139, 172, 58, 156, 189, 123, 150, 183, 
           94, 115, 142, 175, 68, 84, 105, 132, 165, 35, 74, 90, 111, 138, 
           171, 57, 67, 83, 104, 131, 164, 34, 33, 32, 31, 30, 29, 28, 27, 56,
            66, 82, 103, 130, 163, 26, 73, 120, 147, 180, 89, 153, 186, 110, 
           192}}], PolygonBox[{{108, 800, 801, 170, 55, 194, 155, 188, 122, 
           149, 182, 93, 114, 141, 174, 65, 81, 102, 129, 162, 25, 72, 88, 
           109, 136, 169, 54, 64, 80, 101, 128, 161, 24, 23, 22, 21, 20, 19, 
           18, 17, 53, 63, 79, 100, 127, 160, 16, 95, 116, 143, 176, 71, 119, 
           146, 179, 87, 152, 185}}]}]}, {}, 
       {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[{
          PolygonBox[{{341, 798, 799, 376, 262, 399, 360, 393, 327, 354, 387, 
           298, 319, 346, 379, 272, 288, 309, 336, 369, 249, 278, 294, 315, 
           342, 375, 261, 271, 287, 308, 335, 368, 248, 247, 246, 245, 244, 
           243, 242, 241, 240, 239, 238, 237, 236, 235, 234, 233, 232, 231, 
           260, 270, 286, 307, 334, 367, 230, 277, 324, 351, 384, 293, 357, 
           390, 314, 396}}], 
          PolygonBox[{{312, 796, 797, 374, 259, 398, 359, 392, 326, 353, 386, 
           297, 318, 345, 378, 269, 285, 306, 333, 366, 229, 276, 292, 313, 
           340, 373, 258, 268, 284, 305, 332, 365, 228, 227, 226, 225, 224, 
           223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 213, 212, 211, 
           257, 267, 283, 304, 331, 364, 210, 299, 320, 347, 380, 275, 323, 
           350, 383, 291, 356, 389}}]}]}, {}, 
       {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[{
          PolygonBox[{{412, 792, 793, 520, 464, 531, 512, 528, 496, 509, 525, 
           483, 493, 506, 522, 469, 477, 487, 500, 516, 436, 472, 480, 490, 
           503, 519, 463, 468, 476, 486, 499, 515, 435, 434, 433, 432, 431, 
           430, 429, 428, 427, 426, 425, 424, 423, 422, 421, 420, 419, 418, 
           417, 416, 415, 414, 413, 462, 467, 475, 485, 498, 514}}], 
          PolygonBox[{{504, 794, 795, 461, 532, 513, 529, 497, 510, 526, 484, 
           494, 507, 523, 474, 482, 492, 505, 521, 466, 471, 479, 489, 502, 
           518, 460, 459, 458, 457, 456, 455, 454, 453, 452, 451, 450, 449, 
           448, 447, 446, 445, 444, 443, 442, 441, 440, 439, 438, 465, 470, 
           478, 488, 501, 517, 437, 473, 495, 508, 524, 481, 511, 527, 491, 
           530}}]}]}, {}, 
       {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[{
          PolygonBox[{{536, 788, 789, 644, 588, 655, 636, 652, 620, 633, 649, 
           607, 617, 630, 646, 593, 601, 611, 624, 640, 560, 596, 604, 614, 
           627, 643, 587, 592, 600, 610, 623, 639, 559, 558, 557, 556, 555, 
           554, 553, 552, 551, 550, 549, 548, 547, 546, 545, 544, 543, 542, 
           541, 540, 539, 538, 537, 586, 591, 599, 609, 622, 638}}], 
          PolygonBox[{{628, 790, 791, 585, 656, 637, 653, 621, 634, 650, 608, 
           618, 631, 647, 598, 606, 616, 629, 645, 590, 595, 603, 613, 626, 
           642, 584, 583, 582, 581, 580, 579, 578, 577, 576, 575, 574, 573, 
           572, 571, 570, 569, 568, 567, 566, 565, 564, 563, 562, 589, 594, 
           602, 612, 625, 641, 561, 597, 619, 632, 648, 605, 635, 651, 615, 
           654}}]}]}, {}, 
       {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[{
          PolygonBox[{{660, 784, 785, 768, 712, 779, 760, 776, 744, 757, 773, 
           731, 741, 754, 770, 717, 725, 735, 748, 764, 684, 720, 728, 738, 
           751, 767, 711, 716, 724, 734, 747, 763, 683, 682, 681, 680, 679, 
           678, 677, 676, 675, 674, 673, 672, 671, 670, 669, 668, 667, 666, 
           665, 664, 663, 662, 661, 710, 715, 723, 733, 746, 762}}], 
          PolygonBox[{{752, 786, 787, 709, 780, 761, 777, 745, 758, 774, 732, 
           742, 755, 771, 722, 730, 740, 753, 769, 714, 719, 727, 737, 750, 
           766, 708, 707, 706, 705, 704, 703, 702, 701, 700, 699, 698, 697, 
           696, 695, 694, 693, 692, 691, 690, 689, 688, 687, 686, 713, 718, 
           726, 736, 749, 765, 685, 721, 743, 756, 772, 729, 759, 775, 739, 
           778}}]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{1, 158, 125, 98, 77, 61, 51, 2, 3, 4, 5, 406, 6, 7, 8, 9, 10,
          11, 12, 13, 14, 15, 159, 126, 99, 78, 62, 52, 168, 135, 191}], 
        LineBox[{108, 185, 152, 87, 179, 146, 119, 71, 176, 143, 116, 95, 16, 
         160, 127, 100, 79, 63, 53, 17, 18, 19, 20, 21, 22, 23, 24, 161, 128, 
         101, 80, 64, 54, 169, 136, 109, 88, 72, 25, 162, 129, 102, 81, 65, 
         174, 141, 114, 93, 182, 149, 122, 188, 155, 194, 55, 170}], 
        LineBox[{137, 192, 110, 186, 153, 89, 180, 147, 120, 73, 26, 163, 130,
          103, 82, 66, 56, 27, 28, 29, 30, 31, 32, 33, 34, 164, 131, 104, 83, 
         67, 57, 171, 138, 111, 90, 74, 35, 165, 132, 105, 84, 68, 175, 142, 
         115, 94, 183, 150, 123, 189, 156, 58, 172, 139}], 
        LineBox[{193, 112, 187, 154, 91, 181, 148, 121, 75, 177, 144, 117, 96,
          36, 166, 133, 106, 85, 69, 59, 37, 38, 39, 40, 41, 42, 43, 44, 45, 
         401, 46, 47, 48, 49, 167, 134, 107, 86, 70, 60, 173, 140, 113, 92, 
         76, 178, 145, 118, 97, 184, 151, 124, 190, 157, 195, 50}]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{205, 362, 329, 302, 281, 265, 255, 206, 207, 208, 209, 363, 
         330, 303, 282, 266, 256, 372, 339, 395}], 
        LineBox[{312, 389, 356, 291, 383, 350, 323, 275, 380, 347, 320, 299, 
         210, 364, 331, 304, 283, 267, 257, 211, 212, 213, 214, 215, 216, 217,
          218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 365, 332, 
         305, 284, 268, 258, 373, 340, 313, 292, 276, 229, 366, 333, 306, 285,
          269, 378, 345, 318, 297, 386, 353, 326, 392, 359, 398, 259, 374}], 
        LineBox[{341, 396, 314, 390, 357, 293, 384, 351, 324, 277, 230, 367, 
         334, 307, 286, 270, 260, 231, 232, 233, 234, 235, 236, 237, 238, 239,
          240, 241, 242, 243, 244, 245, 246, 247, 248, 368, 335, 308, 287, 
         271, 261, 375, 342, 315, 294, 278, 249, 369, 336, 309, 288, 272, 379,
          346, 319, 298, 387, 354, 327, 393, 360, 399, 262, 376}], 
        LineBox[{343, 397, 316, 391, 358, 295, 385, 352, 325, 279, 381, 348, 
         321, 300, 250, 370, 337, 310, 289, 273, 263, 251, 252, 253, 371, 338,
          311, 290, 274, 264, 377, 344, 317, 296, 280, 382, 349, 322, 301, 
         388, 355, 328, 394, 361, 400, 254}]}, 
       {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{412, 514, 498, 485, 475, 467, 462, 413, 414, 415, 416, 417, 
         418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
          432, 433, 434, 435, 515, 499, 486, 476, 468, 463, 519, 503, 490, 
         480, 472, 436, 516, 500, 487, 477, 469, 522, 506, 493, 483, 525, 509,
          496, 528, 512, 531, 464, 520}], 
        LineBox[{504, 530, 491, 527, 511, 481, 524, 508, 495, 473, 437, 517, 
         501, 488, 478, 470, 465, 438, 439, 440, 441, 442, 443, 444, 445, 446,
          447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 
         460, 518, 502, 489, 479, 471, 466, 521, 505, 492, 482, 474, 523, 507,
          494, 484, 526, 510, 497, 529, 513, 532, 461}]}, 
       {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{536, 638, 622, 609, 599, 591, 586, 537, 538, 539, 540, 541, 
         542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
          556, 557, 558, 559, 639, 623, 610, 600, 592, 587, 643, 627, 614, 
         604, 596, 560, 640, 624, 611, 601, 593, 646, 630, 617, 607, 649, 633,
          620, 652, 636, 655, 588, 644}], 
        LineBox[{628, 654, 615, 651, 635, 605, 648, 632, 619, 597, 561, 641, 
         625, 612, 602, 594, 589, 562, 563, 564, 565, 566, 567, 568, 569, 570,
          571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 
         584, 642, 626, 613, 603, 595, 590, 645, 629, 616, 606, 598, 647, 631,
          618, 608, 650, 634, 621, 653, 637, 656, 585}]}, 
       {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{660, 762, 746, 733, 723, 715, 710, 661, 662, 663, 664, 665, 
         666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679,
          680, 681, 682, 683, 763, 747, 734, 724, 716, 711, 767, 751, 738, 
         728, 720, 684, 764, 748, 735, 725, 717, 770, 754, 741, 731, 773, 757,
          744, 776, 760, 779, 712, 768}], 
        LineBox[{752, 778, 739, 775, 759, 729, 772, 756, 743, 721, 685, 765, 
         749, 736, 726, 718, 713, 686, 687, 688, 689, 690, 691, 692, 693, 694,
          695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 
         708, 766, 750, 737, 727, 719, 714, 769, 753, 740, 730, 722, 771, 755,
          742, 732, 774, 758, 745, 777, 761, 780, 709}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], 
        LineBox[{197, 203, 196}], LineBox[{199, 200, 198}], 
        LineBox[{202, 204, 201}], LineBox[{403, 407, 402}], 
        LineBox[{405, 410, 404}], LineBox[{409, 411, 408}], 
        LineBox[{534, 535, 533}], LineBox[{658, 659, 657}], 
        LineBox[{782, 783, 781}]}}, {{}, {}, {}, {}, {}, {}, {}}}], InsetBox[
     TemplateBox[{FractionBox["1", "2"],"1","2","5","10"},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox["\"\[Sigma]=\"", {
                 GrayLevel[0], FontWeight -> Bold, FontSize -> 8, FontFamily -> 
                 "Arial"}, Background -> Automatic, StripOnInput -> False]}, {
              
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontWeight -> Bold, FontSize -> 8, FontFamily -> 
          "Arial"}, Background -> Automatic, StripOnInput -> False], 
        TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold", ",", "8"}], "}"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"\[Sigma]=\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.75, 0.55}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0., 0.},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
     "AxesInFront" -> True},
   PlotRange->{All, All},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[
     GraphicsComplex[CompressedData["
1:eJzFmnk0VW3bwE9FRFSkolSGJlIUTdR9FGlAZUgqSqkkGYqeIhlCFJkzho6j
QcMxbJkdM+cYkpAj85SjMpQhRb79rufZ135XrXe93z/f+vqnda299+267mH/
rt85R+qMjd65mRQKRWYWhfKv/0tMpdqmp6eZlH/+LfILXBUl+QviXcqFHTSR
SYhbrj+m6cn9gDhP94vfg4PfIXZ4ODKwV2MMYroPwyD21AjEzwbkFM31vkI8
1M2/JVd3COKTw8puNz98hthTgONmVN4HcbRp9z33H90Qb63H+utRB8RTjnMt
eSyaIL5U4LxgqqkW4rMNHSsOGZUwXVtyn7+qikdjb64wxcQSmNSyntDtBkxk
zLtYhd8mFeWm+N38/oSFEr4OjnG/s9BsA4tNy1Etssv+0HAnqA5JuBra1Ou8
RyqROz/0sZvRPuaDsvzyZjQRIRB107oT3d8p6j5frANx5ecxlTf1og0j+Rr3
wrqQQmXQuKhWPzqOLRFbebgXuSsxVscvGkC7dBp8XJr6kNyO2xRP7hDiVTax
MeP2oZwzA+MHh76i3frVji9VetH7Lwn9lnUjiBXB6diQ1IWWUR5ekOwYQ4UN
O1QfjLSjFW5KWard31FtIlfD614zem4uwp9S/AOljAWyD9x9j06/2dSeXTWJ
HDf2Kn9YVotiomNTJbFfKPFyy4sXi9lI57PBK4d9FKrY7SNrMtfmo/aqCa3V
B2dQ5VgOLxw8E1B6u0abu9pMKjGfMukM1XW7Z0H8Li8/1GkLD8RdznFNs1bz
QnyHEtddv242xLaY5mf9ZXwQD8gLZi6V4Ye44nisrfiqORB/zuKsKhITgJjW
ujnutYQgxNGblZccFZ4L8Sia5SQ/RcZd877SDlCEIRZbcKdc7CsZn2UEDE5P
zyPzcTB2rxImz0f0C+tHdK8qiE/fzfMPic5iUk50Ong/xFDjr5X+HzZ8RlWu
f705FPoRfaptCm4YGURNGfuctcX70dXqbTf7Pg8jepGYwx3/j2iRyZqfVSwK
1XLUOmjR3TSkbRQbXFc0g2ooOSAU6HUefTnoKHSUSc63Wrtgs8ANMr/jlrlJ
5++Q+TXfk0he86YGYrZfe2qlXgEzf39BxSmPV8i9x7hofMcnFCKx72v61160
ZaZmSw7vIJp7239W7w0u0uUxzdtyaRjVO22/Yq/Wh1Jk8+qkfCjU/Clv2+Iv
WehBUOVl5zszqJTnBrmtXx4gvQenrn12JvN7en2/XoAKmZ+r+tP2CWsWk1L/
6ml1WSBSWNJ3nCn9BfF+fPzi49Y+VHNk26rvdkOo9uIibpk3FzmFBkg5CuDj
fzHALFYnoZnLrmTKU8jxa7Sqz3nmkOMHmA9qpRaR9dNXa5uJ1L8l32ebOrhC
hkXM0GCmKt+6Z6jx2LUW3oJ+dP1C0iyrR72oWfzHDMX7A2hVX0rpJjkuUou1
bTORG0ZfjCqG+oP6kKu3T0GFBYXaP+PBqajYXKSq2NV05CK+PvMCPDfdikMe
qrWJW03I/Fo1LITeiZL5Cf8lqP7GsYJJ8ZbSlLzuhNzv8ThUPf2MuJvn5UX1
fkTxLUHpSluGUCbPt1VOjVy0b+KEsGw/hUodNotHjSnoSab3akrnDBhv9sIv
K8sj/63+fv+M/c6D6KukFTWCxUXDI2mUZwkzqInWIm1JeT7oq6Cmq+zZMiZl
nxjlQXI0OnnrhLbRcjLfSCdG4u5WcrxEM+9gTgc5n/wj5pl8x8j3p5pHh8eG
o8VM14y8b8edHiP3II/+uR79iOtnPrf0ei9iJBiEXNQbQCmRGmuNZ3JR6ucJ
m+E5w2hCc6Hi6rw+dH7HYHrcMfz94rHsvdf3PCTsYr1A7Tj+fvk8U7xuRjxa
fl9Qs0WbzO9H4rjlyEwyv/oFO4czXSvx+dQz3hF0FCmUiLjXXfqMjh8vKh3N
/Yh8ZfJddZcMIQU9s2IDSj/a+LyAZ4JDoRpe7ZOQV8KQI/9Ck/5acj6lHG/e
4vqQ45+91n/gtvogcq2ZesR8xEXFe9S3Bj/A7x+2fhDVG4gyH19TnHexnOkq
fMYgRS0MbazqdVefR+ab1rGL37yKHE+rmRPQbc9mUraOT9QneKOssHMDCw2G
kGa6x51HSVxUZzk1KDZM5pNnqrJ6fuYgOn+pqfXKMBctfyzHzsPw9RzzkzY8
7YJuia3UkRokx9/WbpD5eYhcr6zjdufcI8j1OvzSrDavoZhJOZj3xkM2AR1j
CNoFnOtH0o/y5l8170Xhn9xMvJQH0PerQsZWA33IOnjXtuyJIUTJzXhT9K4P
HReV3nzvML5eJW1Bk3Qm+ms1tj5ZD8/neE4nfQ8dWW5dK5KkQdbPb8oU9/xB
vk+3tRnuZ8wi35czOyP4j+l8RiGXJStozz4it9KjPSfnDKHe6+HB6gvxvDxG
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

      "], {{{}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroup[{
           Polygon[{{137, 802, 803, 139, 172, 58, 156, 189, 123, 150, 183, 94,
             115, 142, 175, 68, 84, 105, 132, 165, 35, 74, 90, 111, 138, 171, 
            57, 67, 83, 104, 131, 164, 34, 33, 32, 31, 30, 29, 28, 27, 56, 66,
             82, 103, 130, 163, 26, 73, 120, 147, 180, 89, 153, 186, 110, 
            192}}], 
           
           Polygon[{{108, 800, 801, 170, 55, 194, 155, 188, 122, 149, 182, 93,
             114, 141, 174, 65, 81, 102, 129, 162, 25, 72, 88, 109, 136, 169, 
            54, 64, 80, 101, 128, 161, 24, 23, 22, 21, 20, 19, 18, 17, 53, 63,
             79, 100, 127, 160, 16, 95, 116, 143, 176, 71, 119, 146, 179, 87, 
            152, 185}}]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroup[{
           
           Polygon[{{341, 798, 799, 376, 262, 399, 360, 393, 327, 354, 387, 
            298, 319, 346, 379, 272, 288, 309, 336, 369, 249, 278, 294, 315, 
            342, 375, 261, 271, 287, 308, 335, 368, 248, 247, 246, 245, 244, 
            243, 242, 241, 240, 239, 238, 237, 236, 235, 234, 233, 232, 231, 
            260, 270, 286, 307, 334, 367, 230, 277, 324, 351, 384, 293, 357, 
            390, 314, 396}}], 
           
           Polygon[{{312, 796, 797, 374, 259, 398, 359, 392, 326, 353, 386, 
            297, 318, 345, 378, 269, 285, 306, 333, 366, 229, 276, 292, 313, 
            340, 373, 258, 268, 284, 305, 332, 365, 228, 227, 226, 225, 224, 
            223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 213, 212, 211, 
            257, 267, 283, 304, 331, 364, 210, 299, 320, 347, 380, 275, 323, 
            350, 383, 291, 356, 389}}]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          Opacity[0.2]], 
         GraphicsGroup[{
           
           Polygon[{{412, 792, 793, 520, 464, 531, 512, 528, 496, 509, 525, 
            483, 493, 506, 522, 469, 477, 487, 500, 516, 436, 472, 480, 490, 
            503, 519, 463, 468, 476, 486, 499, 515, 435, 434, 433, 432, 431, 
            430, 429, 428, 427, 426, 425, 424, 423, 422, 421, 420, 419, 418, 
            417, 416, 415, 414, 413, 462, 467, 475, 485, 498, 514}}], 
           Polygon[{{504, 794, 795, 461, 532, 513, 529, 497, 510, 526, 484, 
            494, 507, 523, 474, 482, 492, 505, 521, 466, 471, 479, 489, 502, 
            518, 460, 459, 458, 457, 456, 455, 454, 453, 452, 451, 450, 449, 
            448, 447, 446, 445, 444, 443, 442, 441, 440, 439, 438, 465, 470, 
            478, 488, 501, 517, 437, 473, 495, 508, 524, 481, 511, 527, 491, 
            530}}]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          Opacity[0.2]], 
         GraphicsGroup[{
           
           Polygon[{{536, 788, 789, 644, 588, 655, 636, 652, 620, 633, 649, 
            607, 617, 630, 646, 593, 601, 611, 624, 640, 560, 596, 604, 614, 
            627, 643, 587, 592, 600, 610, 623, 639, 559, 558, 557, 556, 555, 
            554, 553, 552, 551, 550, 549, 548, 547, 546, 545, 544, 543, 542, 
            541, 540, 539, 538, 537, 586, 591, 599, 609, 622, 638}}], 
           
           Polygon[{{628, 790, 791, 585, 656, 637, 653, 621, 634, 650, 608, 
            618, 631, 647, 598, 606, 616, 629, 645, 590, 595, 603, 613, 626, 
            642, 584, 583, 582, 581, 580, 579, 578, 577, 576, 575, 574, 573, 
            572, 571, 570, 569, 568, 567, 566, 565, 564, 563, 562, 589, 594, 
            602, 612, 625, 641, 561, 597, 619, 632, 648, 605, 635, 651, 615, 
            654}}]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          Opacity[0.2]], 
         GraphicsGroup[{
           
           Polygon[{{660, 784, 785, 768, 712, 779, 760, 776, 744, 757, 773, 
            731, 741, 754, 770, 717, 725, 735, 748, 764, 684, 720, 728, 738, 
            751, 767, 711, 716, 724, 734, 747, 763, 683, 682, 681, 680, 679, 
            678, 677, 676, 675, 674, 673, 672, 671, 670, 669, 668, 667, 666, 
            665, 664, 663, 662, 661, 710, 715, 723, 733, 746, 762}}], 
           
           Polygon[{{752, 786, 787, 709, 780, 761, 777, 745, 758, 774, 732, 
            742, 755, 771, 722, 730, 740, 753, 769, 714, 719, 727, 737, 750, 
            766, 708, 707, 706, 705, 704, 703, 702, 701, 700, 699, 698, 697, 
            696, 695, 694, 693, 692, 691, 690, 689, 688, 687, 686, 713, 718, 
            726, 736, 749, 765, 685, 721, 743, 756, 772, 729, 759, 775, 739, 
            778}}]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Line[{1, 158, 125, 98, 77, 61, 51, 2, 3, 4, 5, 406, 6, 7, 8, 9, 10, 
          11, 12, 13, 14, 15, 159, 126, 99, 78, 62, 52, 168, 135, 191}], 
         Line[{108, 185, 152, 87, 179, 146, 119, 71, 176, 143, 116, 95, 16, 
          160, 127, 100, 79, 63, 53, 17, 18, 19, 20, 21, 22, 23, 24, 161, 128,
           101, 80, 64, 54, 169, 136, 109, 88, 72, 25, 162, 129, 102, 81, 65, 
          174, 141, 114, 93, 182, 149, 122, 188, 155, 194, 55, 170}], 
         Line[{137, 192, 110, 186, 153, 89, 180, 147, 120, 73, 26, 163, 130, 
          103, 82, 66, 56, 27, 28, 29, 30, 31, 32, 33, 34, 164, 131, 104, 83, 
          67, 57, 171, 138, 111, 90, 74, 35, 165, 132, 105, 84, 68, 175, 142, 
          115, 94, 183, 150, 123, 189, 156, 58, 172, 139}], 
         Line[{193, 112, 187, 154, 91, 181, 148, 121, 75, 177, 144, 117, 96, 
          36, 166, 133, 106, 85, 69, 59, 37, 38, 39, 40, 41, 42, 43, 44, 45, 
          401, 46, 47, 48, 49, 167, 134, 107, 86, 70, 60, 173, 140, 113, 92, 
          76, 178, 145, 118, 97, 184, 151, 124, 190, 157, 195, 50}]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Line[{205, 362, 329, 302, 281, 265, 255, 206, 207, 208, 209, 363, 
          330, 303, 282, 266, 256, 372, 339, 395}], 
         Line[{312, 389, 356, 291, 383, 350, 323, 275, 380, 347, 320, 299, 
          210, 364, 331, 304, 283, 267, 257, 211, 212, 213, 214, 215, 216, 
          217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 365, 
          332, 305, 284, 268, 258, 373, 340, 313, 292, 276, 229, 366, 333, 
          306, 285, 269, 378, 345, 318, 297, 386, 353, 326, 392, 359, 398, 
          259, 374}], 
         Line[{341, 396, 314, 390, 357, 293, 384, 351, 324, 277, 230, 367, 
          334, 307, 286, 270, 260, 231, 232, 233, 234, 235, 236, 237, 238, 
          239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 368, 335, 308, 
          287, 271, 261, 375, 342, 315, 294, 278, 249, 369, 336, 309, 288, 
          272, 379, 346, 319, 298, 387, 354, 327, 393, 360, 399, 262, 376}], 
         Line[{343, 397, 316, 391, 358, 295, 385, 352, 325, 279, 381, 348, 
          321, 300, 250, 370, 337, 310, 289, 273, 263, 251, 252, 253, 371, 
          338, 311, 290, 274, 264, 377, 344, 317, 296, 280, 382, 349, 322, 
          301, 388, 355, 328, 394, 361, 400, 254}]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Line[{412, 514, 498, 485, 475, 467, 462, 413, 414, 415, 416, 417, 
          418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 
          431, 432, 433, 434, 435, 515, 499, 486, 476, 468, 463, 519, 503, 
          490, 480, 472, 436, 516, 500, 487, 477, 469, 522, 506, 493, 483, 
          525, 509, 496, 528, 512, 531, 464, 520}], 
         Line[{504, 530, 491, 527, 511, 481, 524, 508, 495, 473, 437, 517, 
          501, 488, 478, 470, 465, 438, 439, 440, 441, 442, 443, 444, 445, 
          446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 
          459, 460, 518, 502, 489, 479, 471, 466, 521, 505, 492, 482, 474, 
          523, 507, 494, 484, 526, 510, 497, 529, 513, 532, 461}]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Line[{536, 638, 622, 609, 599, 591, 586, 537, 538, 539, 540, 541, 
          542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 
          555, 556, 557, 558, 559, 639, 623, 610, 600, 592, 587, 643, 627, 
          614, 604, 596, 560, 640, 624, 611, 601, 593, 646, 630, 617, 607, 
          649, 633, 620, 652, 636, 655, 588, 644}], 
         Line[{628, 654, 615, 651, 635, 605, 648, 632, 619, 597, 561, 641, 
          625, 612, 602, 594, 589, 562, 563, 564, 565, 566, 567, 568, 569, 
          570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 
          583, 584, 642, 626, 613, 603, 595, 590, 645, 629, 616, 606, 598, 
          647, 631, 618, 608, 650, 634, 621, 653, 637, 656, 585}]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Line[{660, 762, 746, 733, 723, 715, 710, 661, 662, 663, 664, 665, 
          666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 
          679, 680, 681, 682, 683, 763, 747, 734, 724, 716, 711, 767, 751, 
          738, 728, 720, 684, 764, 748, 735, 725, 717, 770, 754, 741, 731, 
          773, 757, 744, 776, 760, 779, 712, 768}], 
         Line[{752, 778, 739, 775, 759, 729, 772, 756, 743, 721, 685, 765, 
          749, 736, 726, 718, 713, 686, 687, 688, 689, 690, 691, 692, 693, 
          694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 
          707, 708, 766, 750, 737, 727, 719, 714, 769, 753, 740, 730, 722, 
          771, 755, 742, 732, 774, 758, 745, 777, 761, 780, 709}]}, {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         Line[{197, 203, 196}], 
         Line[{199, 200, 198}], 
         Line[{202, 204, 201}], 
         Line[{403, 407, 402}], 
         Line[{405, 410, 404}], 
         Line[{409, 411, 408}], 
         Line[{534, 535, 533}], 
         Line[{658, 659, 657}], 
         Line[{782, 783, 781}]}}, {{}, {}, {}, {}, {}, {}, {}}}], {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0., 0.},
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
       FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
        "AxesInFront" -> True}, PlotRange -> {All, All}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]]}, {
        Rational[1, 2], 1, 2, 5, 10}, LabelStyle -> {
         GrayLevel[0], Bold, 8}, LegendLabel -> "\[Sigma]=", LegendLayout -> 
       "Column"]], {0.75, 0.55}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.676462391501348*^9, 3.6764623944690857`*^9}, 
   3.676466039505086*^9, 3.676466123612932*^9, {3.676467100576798*^9, 
   3.676467145020933*^9}, {3.684532791535241*^9, 3.684532795687173*^9}, {
   3.684532827155634*^9, 3.684532832690959*^9}, 3.684532907676325*^9, {
   3.68453295624757*^9, 3.68453296381356*^9}, {3.684533011222056*^9, 
   3.6845330308864717`*^9}, 3.684634440443005*^9, 3.684635506597316*^9, 
   3.684635584262732*^9, 3.684635659458584*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"pdfUniform", "[", 
   RowBox[{"x_", ",", "\[Mu]_", ",", "\[Sigma]_"}], "]"}], ":=", 
  TagBox[GridBox[{
     {"\[Piecewise]", GridBox[{
        {
         FractionBox["1", 
          RowBox[{"2", " ", 
           SqrtBox["3"], " ", "\[Sigma]"}]], 
         RowBox[{
          RowBox[{"\[Mu]", "-", 
           RowBox[{
            SqrtBox["3"], " ", "\[Sigma]"}]}], "\[LessEqual]", "x", 
          "\[LessEqual]", 
          RowBox[{"\[Mu]", "+", 
           RowBox[{
            SqrtBox["3"], " ", "\[Sigma]"}]}]}]},
        {"0", 
         TagBox["True",
          "PiecewiseDefault",
          AutoDelete->True]}
       },
       AllowedDimensions->{2, Automatic},
       Editable->True,
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.84]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}},
       Selectable->True]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxItemSize->{
     "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.35]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   "Piecewise",
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True,
   Selectable->False], " "}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.6764622317264*^9, {3.676462275865959*^9, 3.676462333498724*^9}, {
   3.676462386203244*^9, 3.676462388994298*^9}, {3.6764661175139837`*^9, 
   3.676466119114414*^9}, {3.684532477326845*^9, 3.6845325183824787`*^9}, 
   3.684532784316008*^9, {3.6845328299790363`*^9, 3.6845329325663357`*^9}, {
   3.6845330180277*^9, 3.684533026054028*^9}, 3.684533084708044*^9, {
   3.6845340561868877`*^9, 3.6845340618553743`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sigs", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "/", "2"}], ",", "1", ",", "2", ",", "5", ",", "10"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"pdfUniform", "[", 
       RowBox[{"x", ",", "1", ",", "\[Sigma]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "sigs"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "4"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{"sigs", ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", "Bold", ",", "8"}], "}"}]}], ",", 
        RowBox[{"LegendLabel", "\[Rule]", "\"\<\[Sigma]=\>\""}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.85", ",", "0.55"}], "}"}]}], "]"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<../abecker/SwarmPublications/JournalTorqueControl/pictures/pdf/\
Uniform.pdf\>\"", ",", "%"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6764623486045923`*^9, 3.676462394184904*^9}, {
   3.67646603305241*^9, 3.676466039085231*^9}, {3.676467095974711*^9, 
   3.676467144451521*^9}, 3.684532791002536*^9, 3.68453283228883*^9, {
   3.684532907047003*^9, 3.6845329632608023`*^9}, {3.684533010619349*^9, 
   3.684533027756667*^9}, 3.684534066579653*^9, {3.684575590777972*^9, 
   3.6845756068245077`*^9}, 3.684635481045938*^9, {3.684635522902116*^9, 
   3.684635536438566*^9}, {3.6846355877039013`*^9, 3.6846355931015177`*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJzVmGs4lmkewN9K5u0cMjMdnMYwRQo5zFK9jTEhaiZJyqToJDuda6ekuoiJ
qURqmuQuo7OdHbUdEKKntGzZ9CYVhRcb3nEaCSnZa7f3//9v//3Qh/00fZnr
dz33fT/3fXt+9RsmQWu8l/WVyWQ5fWSyf/83P8Cksre3N1em+fP+3nizIwav
kafaSaoU3VfITzafSvG26Ea+Oqtp7w+eXcibRHvzdNcO5BMxaT7HFrUjn222
sF7q3YbcWit3yJnVivz1b3bhYeWNyFEDH4XPK6hHTgqo3R3RXYvseP+i+r5C
hdwTOjhEK7gM+Y/Xtun0lCmRl5SqjL6cl4/ccWd9rr7+SeT5/T+wl6+5oAA+
2dbS0dBVqDCYFPfF6S3VinVZ5aW79pcg2ydOKa//+2PkF4cHHglbXY3cYDks
1872KbLV7f2dem5q5AibNPPj7zcjWzjtlEU1tCJnBzV3era2IT9oOqkOKWlH
HiMTKwxUHchG4TZXnGu7kP+8VFf+1xvdyIvv2FZlFb1CPpp07ILBxdd43pmN
Pr9scpdNA64qeuFm7tkHOb3KtTJicl9k0/Q053Eu/ZDvXc07uNVBC7lmW3JZ
P/P+yLtkybX3x2kjr734ReOcMe8hN1sOyhxtKke+teDY2pFmA5Abrzwyu64/
EDmlYlLy5VGDkJMm2X3oO3Qw8nNFv62WPcQ1w9pSZsiGIuvr7CrQbyNekhbX
0ts7jPazaX5E0VDyI9spK7W7IB7v6+yVHLnjw2t4n0Fl41Zu/1sxsnbiR+0O
hS+Re+0bChvzepCTrnwcHZnSi+tNrhr0eOAWev+CkJxzy3fR+62XWZRYB0Yj
+07xMM3al4Xzz/UdOtfHjdYXltUGsy1p/TObPbzj7Gl9eUl+5XTVaXx+urR0
R1x9Ps6ftfLG1Cgn+j6K3f6xLCqb5sctbXG7cJ3257JyW3ug1RFkPxPrnwN3
pON8w9q84PQWWq/CNXjIPT1a70JG/KjqoGR8fuqOr1ZmTw+y9ogm44JEGu8z
PyhxRHIuPu/oa7tl9re0fuLWtFSXChqfGhid8EhF+/WSHn5dM/cn2m/C8Va7
by/h/IBp1rHqu7Red2pnSHtfWk/Ht2XNIrfD+LzzQcgZvRrar0lo2PaGGBo/
99b9irpDOfj8I4eX/r/60fqXVFPlS4to/Ly07BWxuzLxeWjSXhOjMTQ+dUNn
qnFJHvJ2feOZJi00/9Mqn8zGVjqvSaFZbJj9cTqv15P9hhsu0vzmOmOt67S+
PCB3ZFQ3+bHcfe4Qq+iD+Dw4KfKhUTF9bxOsXK1Cw+n9vpHDwu8mZOP4jDuL
ZmZ40PrSAe309hs03i+4Y8DmnRn4fLhDm27jYBpv8dWIMH1vOu+egrqX55/S
/Mkrs55HNdP9++gmTX595Crtd8EB2c2l5OvaIL+jcZ00f7uRs9efuui+9njd
NvcwO4H8cGz3Er3f6N+H2PzP1XFZtL9YR9N1MzvovuI/kz9OOJOAz+0aHGZ/
V0D3dUn7TKTLNnp/6eLx3jd16L52jtG9aehC63usDhmak0fjH7rqlX/Th+6r
POLEbu/+ND7kakrtMB26L70Uzzmh1TT/vcurVjc+pfsqac4Y8mwk3Zf7tLPZ
QXU0v9M5+7nfs//ydWOTYsU9Oo9aFaU3OoHGq8d6rbM5RPetjm6fXvCS5nNf
+M+Hv5+/z6/oaMAI82uKkf9hpWKu+fiNU8p7FAdt3vDvtW8MNOeBvgGGvgGG
vgGGvgGGvgGGvgF+u2+UrG+UrG+UrG+UrG+UrG+UrG+UrG+UrG+UrG+UrG+U
rG+UrG+UrG+U2DfA0DfA0DfA0DfA0DfA0DfA0DfAv/e+ae35ro/6rho57mKF
9irVU/x+1Ie9nMcb1CD7H7XOUPxC92GvSK5sPE33EVa2vn7EcbqPd/XNqc6F
n10o/RX5+0p/1+qSOvr7OMB4YddyWj9iVczyTctpfd43TlrnrhkXNeD8H2IC
Czub/on7rzAyDlLVU5++q2/CN3qoPphP/so3japJmkX+aqUfOGnmTvvhfaMf
fiQw6ku63+8nVhmvKKDz8L4ZMkOc/MS/DvdrO3zxcf8BtP67+qbZVmEzI5H2
ezN3i23obtrvTf9R+T2f0nq8byIU8efT42i/ix2nySwyaL+8b24feNWu9SP9
vOQf5kUYvqD75X3jYZGVkKtD+4ksGrzA+wGtP6t3iu8MQzr/u/rGTNdpfs0V
Oq/5snFl9WdpffMJT0pW2tB5ed9kGu559NV5Oi/vGUunn5M2XKbzPRu9tq23
lc7He+bMnRDnCdb0/mOW1uejiul8vF9+fGX1h5QwWr/QtPiuVEXrv6tX8sId
mybeovOXOvaZYJxJ7/c9dPXxMSs6P+8Vn9iYVeIanZ/3SdngyNbUfNpfvYF7
amsj7Y/3iV+Ky75lCno/748x0sc/FUXTeuY7PGPHVtJ6vDfCVpS4Tz5N44c7
TAr2WEjfR4lJ10hlLc3nvTHn8Lni59/Q/De9QOP5enw//PvkPy9Y701/SAof
zfuAoUfezJcU0CPA0CPA0CPA0CPA0CPA0CPA0CPA0CPA0CPA0CPAb/eIxHpE
Yj0isR6RWI9IrEck1iMS6xGJ9YjEekRiPSKxHpFYj0isRyTWIxLrEYn1iMR6
RGI9IrEekViPSKxHJNYjEusRifWIxHpEYj0isR6RsEeAoUeAoUeAoUeAoUeA
oUfw+9D0CDD0CO5H0yPA0CP4fWh6BPej6RFg6AVg8GdixlP5+n1/QX+AwR9g
8AcY/AEGf4DBH2DwBxj8AQZ/gMEfYPAHGPwBBn+AwR9g8AcY/AEGf4DBH2Dw
Bxj8AQZ/gMEfYPAHGPwBBn+AwR9g8AcY/AEGf4DBH2DwBxj8AQZ/gMEfYPAH
GPwBBn+AwR9g8AcY/AEGf4DBH2DwBxj8we9D4w8w+IP70fgDDP7g96HxB/ej
8QcY/AF+2x/B/BHMH8H8EcwfwfwRzB/B/BHMH8H8EcwfwfwRzB/B/BHMH8H8
EcwfwfwRzB/B/BHMH8H8EcwfwfwRzB/B/BHMH8H8EcwfwfwRzB/B/BHMH8H8
EcwfwfwRzB/B/BHMH8H8EcwfwfwRzB/B/BHMH8H8EcwfwfwRzB/B/BHMH8H8
Ef/z+yT+/9P/73PoT96bwPD7MWD4fRjwvwCHSjcO
     "], {{{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[
         PolygonBox[{{112, 444, 445, 133, 101, 120, 56, 62, 32, 55, 31, 30, 
          29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 54, 19, 66, 53, 
          135}}]]}, {}, 
       {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[
         PolygonBox[{{269, 442, 443, 234, 248, 217, 228, 198, 204, 181, 197, 
          180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 
          167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 
          196, 154, 208, 195, 235, 219}}]]}, {}, 
       {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[
         PolygonBox[{{280, 440, 441, 329, 331, 328, 327, 326, 325, 324, 323, 
          322, 321, 320, 319, 318, 317, 316, 315, 314, 313, 312, 311, 310, 
          309, 308, 307, 306, 305, 304, 303, 302, 301, 300, 299, 298, 297, 
          296, 295, 294, 293, 292, 291, 290, 289, 288, 287, 286, 285, 284, 
          283, 282, 281, 330}}]]}, {}, 
       {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[
         PolygonBox[{{332, 438, 439, 381, 383, 380, 379, 378, 377, 376, 375, 
          374, 373, 372, 371, 370, 369, 368, 367, 366, 365, 364, 363, 362, 
          361, 360, 359, 358, 357, 356, 355, 354, 353, 352, 351, 350, 349, 
          348, 347, 346, 345, 344, 343, 342, 341, 340, 339, 338, 337, 336, 
          335, 334, 333, 382}}]]}, {}, 
       {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[
         PolygonBox[{{384, 436, 437, 433, 435, 432, 431, 430, 429, 428, 427, 
          426, 425, 424, 423, 422, 421, 420, 419, 418, 417, 416, 415, 414, 
          413, 412, 411, 410, 409, 408, 407, 406, 405, 404, 403, 402, 401, 
          400, 399, 398, 397, 396, 395, 394, 393, 392, 391, 390, 389, 388, 
          387, 386, 385, 
          434}}]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{1, 114, 95, 80, 69, 59, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
         272, 12, 13, 14, 15, 16, 17, 115, 96, 81, 70, 60, 52, 119, 100, 85, 
         74, 65, 18, 116, 97, 82, 71, 125, 106, 91, 61, 122, 103, 88, 130, 
         111, 77, 127, 108, 134, 93, 131}], 
        LineBox[{112, 135, 53, 66, 19, 54, 20, 21, 22, 23, 24, 25, 26, 27, 28,
          29, 30, 31, 55, 32, 62, 56, 120, 101, 133}], 
        LineBox[{86, 129, 110, 75, 126, 107, 92, 67, 123, 104, 89, 78, 33, 
         117, 98, 83, 72, 63, 57, 34, 35, 36, 37, 38, 39, 273, 40, 41, 42, 43,
          44, 45, 46, 47, 48, 49, 118, 99, 84, 73, 64, 58, 121, 102, 87, 76, 
         68, 124, 105, 90, 79, 128, 109, 94, 132, 113, 136, 50}]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{143, 253, 237, 222, 211, 201, 193, 144, 145, 146, 147, 148, 
         149, 150, 151, 152, 254, 238, 223, 212, 202, 194, 258, 242, 227, 216,
          207, 153, 255, 239, 224, 213, 263, 247, 233, 203, 260, 244, 268, 
         230, 265, 250}], 
        LineBox[{269, 219, 235, 195, 208, 154, 196, 155, 156, 157, 158, 159, 
         160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
          174, 175, 176, 177, 178, 179, 180, 197, 181, 204, 198, 228, 217, 
         248, 234}], 
        LineBox[{266, 251, 270, 209, 261, 245, 231, 220, 182, 256, 240, 225, 
         214, 205, 199, 183, 184, 185, 186, 187, 188, 189, 190, 191, 257, 241,
          226, 215, 206, 200, 259, 243, 229, 218, 210, 262, 246, 232, 221, 
         264, 249, 236, 267, 252, 271, 192}]}, 
       {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{280, 330, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 
         291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304,
          305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 
         318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 331, 329}]}, 
       {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{332, 382, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 
         343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356,
          357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 
         370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 383, 381}]}, 
       {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{384, 434, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 
         395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
          409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 
         422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 433}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], 
        LineBox[{139, 141, 138}], LineBox[{140, 142, 137}], 
        LineBox[{276, 278, 275}], 
        LineBox[{277, 279, 274}]}}, {{}, {}, {}, {}, {}, {}, {}}}], InsetBox[
     TemplateBox[{FractionBox["1", "2"],"1","2","5","10"},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox["\"\[Sigma]=\"", {
                 GrayLevel[0], FontWeight -> Bold, FontSize -> 8, FontFamily -> 
                 "Arial"}, Background -> Automatic, StripOnInput -> False]}, {
              
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontWeight -> Bold, FontSize -> 8, FontFamily -> 
          "Arial"}, Background -> Automatic, StripOnInput -> False], 
        TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold", ",", "8"}], "}"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"\[Sigma]=\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.85, 0.55}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0., 0.},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
     "AxesInFront" -> True},
   PlotRange->{All, All},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[
     GraphicsComplex[CompressedData["
1:eJzVmGs4lmkewN9K5u0cMjMdnMYwRQo5zFK9jTEhaiZJyqToJDuda6ekuoiJ
qURqmuQuo7OdHbUdEKKntGzZ9CYVhRcb3nEaCSnZa7f3//9v//3Qh/00fZnr
dz33fT/3fXt+9RsmQWu8l/WVyWQ5fWSyf/83P8Cksre3N1em+fP+3nizIwav
kafaSaoU3VfITzafSvG26Ea+Oqtp7w+eXcibRHvzdNcO5BMxaT7HFrUjn222
sF7q3YbcWit3yJnVivz1b3bhYeWNyFEDH4XPK6hHTgqo3R3RXYvseP+i+r5C
hdwTOjhEK7gM+Y/Xtun0lCmRl5SqjL6cl4/ccWd9rr7+SeT5/T+wl6+5oAA+
2dbS0dBVqDCYFPfF6S3VinVZ5aW79pcg2ydOKa//+2PkF4cHHglbXY3cYDks
1872KbLV7f2dem5q5AibNPPj7zcjWzjtlEU1tCJnBzV3era2IT9oOqkOKWlH
HiMTKwxUHchG4TZXnGu7kP+8VFf+1xvdyIvv2FZlFb1CPpp07ILBxdd43pmN
Pr9scpdNA64qeuFm7tkHOb3KtTJicl9k0/Q053Eu/ZDvXc07uNVBC7lmW3JZ
P/P+yLtkybX3x2kjr734ReOcMe8hN1sOyhxtKke+teDY2pFmA5Abrzwyu64/
EDmlYlLy5VGDkJMm2X3oO3Qw8nNFv62WPcQ1w9pSZsiGIuvr7CrQbyNekhbX
0ts7jPazaX5E0VDyI9spK7W7IB7v6+yVHLnjw2t4n0Fl41Zu/1sxsnbiR+0O
hS+Re+0bChvzepCTrnwcHZnSi+tNrhr0eOAWev+CkJxzy3fR+62XWZRYB0Yj
+07xMM3al4Xzz/UdOtfHjdYXltUGsy1p/TObPbzj7Gl9eUl+5XTVaXx+urR0
R1x9Ps6ftfLG1Cgn+j6K3f6xLCqb5sctbXG7cJ3257JyW3ug1RFkPxPrnwN3
pON8w9q84PQWWq/CNXjIPT1a70JG/KjqoGR8fuqOr1ZmTw+y9ogm44JEGu8z
PyhxRHIuPu/oa7tl9re0fuLWtFSXChqfGhid8EhF+/WSHn5dM/cn2m/C8Va7
by/h/IBp1rHqu7Red2pnSHtfWk/Ht2XNIrfD+LzzQcgZvRrar0lo2PaGGBo/
99b9irpDOfj8I4eX/r/60fqXVFPlS4to/Ly07BWxuzLxeWjSXhOjMTQ+dUNn
qnFJHvJ2feOZJi00/9Mqn8zGVjqvSaFZbJj9cTqv15P9hhsu0vzmOmOt67S+
PCB3ZFQ3+bHcfe4Qq+iD+Dw4KfKhUTF9bxOsXK1Cw+n9vpHDwu8mZOP4jDuL
ZmZ40PrSAe309hs03i+4Y8DmnRn4fLhDm27jYBpv8dWIMH1vOu+egrqX55/S
/Mkrs55HNdP9++gmTX595Crtd8EB2c2l5OvaIL+jcZ00f7uRs9efuui+9njd
NvcwO4H8cGz3Er3f6N+H2PzP1XFZtL9YR9N1MzvovuI/kz9OOJOAz+0aHGZ/
V0D3dUn7TKTLNnp/6eLx3jd16L52jtG9aehC63usDhmak0fjH7rqlX/Th+6r
POLEbu/+ND7kakrtMB26L70Uzzmh1TT/vcurVjc+pfsqac4Y8mwk3Zf7tLPZ
QXU0v9M5+7nfs//ydWOTYsU9Oo9aFaU3OoHGq8d6rbM5RPetjm6fXvCS5nNf
+M+Hv5+/z6/oaMAI82uKkf9hpWKu+fiNU8p7FAdt3vDvtW8MNOeBvgGGvgGG
vgGGvgGGvgGGvgF+u2+UrG+UrG+UrG+UrG+UrG+UrG+UrG+UrG+UrG+UrG+U
rG+UrG+UrG+U2DfA0DfA0DfA0DfA0DfA0DfA0DfAv/e+ae35ro/6rho57mKF
9irVU/x+1Ie9nMcb1CD7H7XOUPxC92GvSK5sPE33EVa2vn7EcbqPd/XNqc6F
n10o/RX5+0p/1+qSOvr7OMB4YddyWj9iVczyTctpfd43TlrnrhkXNeD8H2IC
Czub/on7rzAyDlLVU5++q2/CN3qoPphP/so3japJmkX+aqUfOGnmTvvhfaMf
fiQw6ku63+8nVhmvKKDz8L4ZMkOc/MS/DvdrO3zxcf8BtP67+qbZVmEzI5H2
ezN3i23obtrvTf9R+T2f0nq8byIU8efT42i/ix2nySwyaL+8b24feNWu9SP9
vOQf5kUYvqD75X3jYZGVkKtD+4ksGrzA+wGtP6t3iu8MQzr/u/rGTNdpfs0V
Oq/5snFl9WdpffMJT0pW2tB5ed9kGu559NV5Oi/vGUunn5M2XKbzPRu9tq23
lc7He+bMnRDnCdb0/mOW1uejiul8vF9+fGX1h5QwWr/QtPiuVEXrv6tX8sId
mybeovOXOvaZYJxJ7/c9dPXxMSs6P+8Vn9iYVeIanZ/3SdngyNbUfNpfvYF7
amsj7Y/3iV+Ky75lCno/748x0sc/FUXTeuY7PGPHVtJ6vDfCVpS4Tz5N44c7
TAr2WEjfR4lJ10hlLc3nvTHn8Lni59/Q/De9QOP5enw//PvkPy9Y701/SAof
zfuAoUfezJcU0CPA0CPA0CPA0CPA0CPA0CPA0CPA0CPA0CPA0CPAb/eIxHpE
Yj0isR6RWI9IrEck1iMS6xGJ9YjEekRiPSKxHpFYj0isRyTWIxLrEYn1iMR6
RGI9IrEekViPSKxHJNYjEusRifWIxHpEYj0isR6RsEeAoUeAoUeAoUeAoUeA
oUfw+9D0CDD0CO5H0yPA0CP4fWh6BPej6RFg6AVg8GdixlP5+n1/QX+AwR9g
8AcY/AEGf4DBH2DwBxj8AQZ/gMEfYPAHGPwBBn+AwR9g8AcY/AEGf4DBH2Dw
Bxj8AQZ/gMEfYPAHGPwBBn+AwR9g8AcY/AEGf4DBH2DwBxj8AQZ/gMEfYPAH
GPwBBn+AwR9g8AcY/AEGf4DBH2DwBxj8we9D4w8w+IP70fgDDP7g96HxB/ej
8QcY/AF+2x/B/BHMH8H8EcwfwfwRzB/B/BHMH8H8EcwfwfwRzB/B/BHMH8H8
EcwfwfwRzB/B/BHMH8H8EcwfwfwRzB/B/BHMH8H8EcwfwfwRzB/B/BHMH8H8
EcwfwfwRzB/B/BHMH8H8EcwfwfwRzB/B/BHMH8H8EcwfwfwRzB/B/BHMH8H8
Ef/z+yT+/9P/73PoT96bwPD7MWD4fRjwvwCHSjcO
      "], {{{}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroup[{
           
           Polygon[{{112, 444, 445, 133, 101, 120, 56, 62, 32, 55, 31, 30, 29,
             28, 27, 26, 25, 24, 23, 22, 21, 20, 54, 19, 66, 53, 
            135}}]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroup[{
           
           Polygon[{{269, 442, 443, 234, 248, 217, 228, 198, 204, 181, 197, 
            180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 
            167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 
            196, 154, 208, 195, 235, 219}}]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          Opacity[0.2]], 
         GraphicsGroup[{
           
           Polygon[{{280, 440, 441, 329, 331, 328, 327, 326, 325, 324, 323, 
            322, 321, 320, 319, 318, 317, 316, 315, 314, 313, 312, 311, 310, 
            309, 308, 307, 306, 305, 304, 303, 302, 301, 300, 299, 298, 297, 
            296, 295, 294, 293, 292, 291, 290, 289, 288, 287, 286, 285, 284, 
            283, 282, 281, 330}}]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          Opacity[0.2]], 
         GraphicsGroup[{
           
           Polygon[{{332, 438, 439, 381, 383, 380, 379, 378, 377, 376, 375, 
            374, 373, 372, 371, 370, 369, 368, 367, 366, 365, 364, 363, 362, 
            361, 360, 359, 358, 357, 356, 355, 354, 353, 352, 351, 350, 349, 
            348, 347, 346, 345, 344, 343, 342, 341, 340, 339, 338, 337, 336, 
            335, 334, 333, 382}}]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          Opacity[0.2]], 
         GraphicsGroup[{
           
           Polygon[{{384, 436, 437, 433, 435, 432, 431, 430, 429, 428, 427, 
            426, 425, 424, 423, 422, 421, 420, 419, 418, 417, 416, 415, 414, 
            413, 412, 411, 410, 409, 408, 407, 406, 405, 404, 403, 402, 401, 
            400, 399, 398, 397, 396, 395, 394, 393, 392, 391, 390, 389, 388, 
            387, 386, 385, 
            434}}]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Line[{1, 114, 95, 80, 69, 59, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
          272, 12, 13, 14, 15, 16, 17, 115, 96, 81, 70, 60, 52, 119, 100, 85, 
          74, 65, 18, 116, 97, 82, 71, 125, 106, 91, 61, 122, 103, 88, 130, 
          111, 77, 127, 108, 134, 93, 131}], 
         Line[{112, 135, 53, 66, 19, 54, 20, 21, 22, 23, 24, 25, 26, 27, 28, 
          29, 30, 31, 55, 32, 62, 56, 120, 101, 133}], 
         Line[{86, 129, 110, 75, 126, 107, 92, 67, 123, 104, 89, 78, 33, 117, 
          98, 83, 72, 63, 57, 34, 35, 36, 37, 38, 39, 273, 40, 41, 42, 43, 44,
           45, 46, 47, 48, 49, 118, 99, 84, 73, 64, 58, 121, 102, 87, 76, 68, 
          124, 105, 90, 79, 128, 109, 94, 132, 113, 136, 50}]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Line[{143, 253, 237, 222, 211, 201, 193, 144, 145, 146, 147, 148, 
          149, 150, 151, 152, 254, 238, 223, 212, 202, 194, 258, 242, 227, 
          216, 207, 153, 255, 239, 224, 213, 263, 247, 233, 203, 260, 244, 
          268, 230, 265, 250}], 
         Line[{269, 219, 235, 195, 208, 154, 196, 155, 156, 157, 158, 159, 
          160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 
          173, 174, 175, 176, 177, 178, 179, 180, 197, 181, 204, 198, 228, 
          217, 248, 234}], 
         Line[{266, 251, 270, 209, 261, 245, 231, 220, 182, 256, 240, 225, 
          214, 205, 199, 183, 184, 185, 186, 187, 188, 189, 190, 191, 257, 
          241, 226, 215, 206, 200, 259, 243, 229, 218, 210, 262, 246, 232, 
          221, 264, 249, 236, 267, 252, 271, 192}]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Line[{280, 330, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 
          291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 
          304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 
          317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 331, 
          329}]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Line[{332, 382, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 
          343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 
          356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 
          369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 383, 
          381}]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Line[{384, 434, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 
          395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 
          408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 
          421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 
          433}]}, {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         Line[{139, 141, 138}], 
         Line[{140, 142, 137}], 
         Line[{276, 278, 275}], 
         Line[{277, 279, 274}]}}, {{}, {}, {}, {}, {}, {}, {}}}], {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0., 0.},
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
       FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
        "AxesInFront" -> True}, PlotRange -> {All, All}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]]}, {
        Rational[1, 2], 1, 2, 5, 10}, LabelStyle -> {
         GrayLevel[0], Bold, 8}, LegendLabel -> "\[Sigma]=", LegendLayout -> 
       "Column"]], {0.85, 0.55}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.684542210063703*^9, 3.684575610164694*^9, 3.6846344406468563`*^9, {
   3.684635512935843*^9, 3.68463553970872*^9}, 3.684635595095673*^9, 
   3.6846356597728367`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "1"], 
  RowBox[{"x", " ", 
   RowBox[{"pdfTriangle", "[", 
    RowBox[{"x", ",", "\[Mu]", ",", "\[Sigma]"}], "]"}], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {"\[Mu]", 
        RowBox[{
         RowBox[{"0", "<", "\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], ">", "0"}], "&&", 
         RowBox[{"\[Sigma]", ">", "0"}]}]},
       {
        RowBox[{
         FractionBox["1", "6"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"3", " ", "\[Mu]"}], "+", 
           RowBox[{
            SqrtBox["6"], " ", "\[Sigma]"}]}], ")"}]}], 
        RowBox[{
         RowBox[{"\[Mu]", "\[Equal]", "0"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}], "&&", 
         RowBox[{"\[Sigma]", ">", "0"}]}]},
       {
        FractionBox[
         RowBox[{"2", "-", 
          RowBox[{"3", " ", "\[Mu]"}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]"}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Mu]", ">", "1"}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "-", 
             RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}]}], ")"}],
          "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
           RowBox[{"\[Sigma]", "\[GreaterEqual]", 
            FractionBox["1", 
             SqrtBox["6"]]}]}], ")"}]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"3", " ", "\[Mu]"}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]"}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", "<", "0"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], ">", 
          SqrtBox["6"]}]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"3", " ", "\[Mu]"}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Mu]", "3"]}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]"}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"0", "<", "\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"3", " ", "\[Mu]"}], "-", 
          SuperscriptBox["\[Mu]", "3"], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]"}], "-", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Mu]", "\[Equal]", "0"}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "+", 
             RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
            SqrtBox["6"]}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"0", "\[LessEqual]", "\[Mu]", "<", "1"}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "+", 
             RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
            SqrtBox["6"]}], "&&", 
           RowBox[{"\[Sigma]", "\[LessEqual]", "0"}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "-", 
             RowBox[{"6", " ", "\[Sigma]"}]}], ">", "0"}]}], ")"}]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[Mu]", "3"]}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"0", "<", "\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}], "&&", 
         RowBox[{"\[Sigma]", "\[LessEqual]", "0"}]}]},
       {
        FractionBox[
         RowBox[{
          SqrtBox["6"], "-", 
          RowBox[{
           SqrtBox["6"], " ", "\[Mu]"}], "+", 
          RowBox[{"3", " ", "\[Mu]", " ", "\[Sigma]"}], "-", 
          RowBox[{
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Sigma]", "2"]}]}], 
         RowBox[{"6", " ", "\[Sigma]"}]], 
        RowBox[{
         RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
         RowBox[{"0", "<", "\[Sigma]", "<", 
          FractionBox["1", 
           SqrtBox["6"]]}]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"3", " ", "\[Mu]"}], "-", 
          SuperscriptBox["\[Mu]", "3"], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]"}], "-", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
          RowBox[{"18", " ", "\[Mu]", " ", 
           SuperscriptBox["\[Sigma]", "2"]}], "-", 
          RowBox[{"6", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Sigma]", "3"]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"0", "<", "\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], ">", "0"}], "&&", 
         RowBox[{"\[Sigma]", ">", "0"}]}]},
       {
        FractionBox[
         RowBox[{"2", "-", 
          RowBox[{"3", " ", "\[Mu]"}], "+", 
          SuperscriptBox["\[Mu]", "3"], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]"}], "-", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
          RowBox[{"18", " ", "\[Mu]", " ", 
           SuperscriptBox["\[Sigma]", "2"]}], "-", 
          RowBox[{"6", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Sigma]", "3"]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", ">", "1"}], "&&", 
         RowBox[{"0", "<", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[Mu]", "3"]}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
          RowBox[{"18", " ", "\[Mu]", " ", 
           SuperscriptBox["\[Sigma]", "2"]}], "+", 
          RowBox[{"6", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Sigma]", "3"]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"0", "<", "\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}], "&&", 
         RowBox[{"\[Sigma]", ">", "0"}]}]},
       {
        FractionBox[
         RowBox[{
          SuperscriptBox["\[Mu]", "3"], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
          RowBox[{"18", " ", "\[Mu]", " ", 
           SuperscriptBox["\[Sigma]", "2"]}], "+", 
          RowBox[{"6", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Sigma]", "3"]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", "<", "0"}], "&&", 
         RowBox[{"0", "<", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", 
          SqrtBox["6"]}]}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.684634459123765*^9, 3.684635677562282*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Mu]", ">", "0"}], " ", "&&", 
    RowBox[{"\[Sigma]", ">", "0"}]}], ",", 
   RowBox[{"Refine", "[", 
    TagBox[GridBox[{
       {"\[Piecewise]", GridBox[{
          {"\[Mu]", 
           RowBox[{
            RowBox[{"0", "<", "\[Mu]", "<", "1"}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "+", 
              RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
             SqrtBox["6"]}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "-", 
              RowBox[{"6", " ", "\[Sigma]"}]}], ">", "0"}], "&&", 
            RowBox[{"\[Sigma]", ">", "0"}]}]},
          {
           RowBox[{
            FractionBox["1", "6"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"3", " ", "\[Mu]"}], "+", 
              RowBox[{
               SqrtBox["6"], " ", "\[Sigma]"}]}], ")"}]}], 
           RowBox[{
            RowBox[{"\[Mu]", "\[Equal]", "0"}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "+", 
              RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
             SqrtBox["6"]}], "&&", 
            RowBox[{"\[Sigma]", ">", "0"}]}]},
          {
           FractionBox[
            RowBox[{"2", "-", 
             RowBox[{"3", " ", "\[Mu]"}], "+", 
             RowBox[{"3", " ", 
              SqrtBox["6"], " ", "\[Sigma]"}]}], 
            RowBox[{"36", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Mu]", ">", "1"}], "&&", 
              RowBox[{
               RowBox[{
                RowBox[{
                 SqrtBox["6"], " ", "\[Mu]"}], "-", 
                RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}]}], 
             ")"}], "||", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
              RowBox[{"\[Sigma]", "\[GreaterEqual]", 
               FractionBox["1", 
                SqrtBox["6"]]}]}], ")"}]}]},
          {
           FractionBox[
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"3", " ", "\[Mu]"}], "+", 
             RowBox[{"3", " ", 
              SqrtBox["6"], " ", "\[Sigma]"}]}], 
            RowBox[{"36", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]], 
           RowBox[{
            RowBox[{"\[Mu]", "<", "0"}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "+", 
              RowBox[{"6", " ", "\[Sigma]"}]}], ">", 
             SqrtBox["6"]}]}]},
          {
           FractionBox[
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"3", " ", "\[Mu]"}], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Mu]", "3"]}], "+", 
             RowBox[{"3", " ", 
              SqrtBox["6"], " ", "\[Sigma]"}]}], 
            RowBox[{"36", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]], 
           RowBox[{
            RowBox[{"0", "<", "\[Mu]", "<", "1"}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "+", 
              RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
             SqrtBox["6"]}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "-", 
              RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}]}]},
          {
           FractionBox[
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"3", " ", "\[Mu]"}], "-", 
             SuperscriptBox["\[Mu]", "3"], "+", 
             RowBox[{"3", " ", 
              SqrtBox["6"], " ", "\[Sigma]"}], "-", 
             RowBox[{"3", " ", 
              SqrtBox["6"], " ", 
              SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}]}], 
            RowBox[{"36", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Mu]", "\[Equal]", "0"}], "&&", 
              RowBox[{
               RowBox[{
                RowBox[{
                 SqrtBox["6"], " ", "\[Mu]"}], "+", 
                RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
               SqrtBox["6"]}]}], ")"}], "||", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"0", "\[LessEqual]", "\[Mu]", "<", "1"}], "&&", 
              RowBox[{
               RowBox[{
                RowBox[{
                 SqrtBox["6"], " ", "\[Mu]"}], "+", 
                RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
               SqrtBox["6"]}], "&&", 
              RowBox[{"\[Sigma]", "\[LessEqual]", "0"}], "&&", 
              RowBox[{
               RowBox[{
                RowBox[{
                 SqrtBox["6"], " ", "\[Mu]"}], "-", 
                RowBox[{"6", " ", "\[Sigma]"}]}], ">", "0"}]}], ")"}]}]},
          {
           FractionBox[
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["\[Mu]", "3"]}], "+", 
             RowBox[{"3", " ", 
              SqrtBox["6"], " ", 
              SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}]}], 
            RowBox[{"36", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]], 
           RowBox[{
            RowBox[{"0", "<", "\[Mu]", "<", "1"}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "-", 
              RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "+", 
              RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
             SqrtBox["6"]}], "&&", 
            RowBox[{"\[Sigma]", "\[LessEqual]", "0"}]}]},
          {
           FractionBox[
            RowBox[{
             SqrtBox["6"], "-", 
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "+", 
             RowBox[{"3", " ", "\[Mu]", " ", "\[Sigma]"}], "-", 
             RowBox[{
              SqrtBox["6"], " ", 
              SuperscriptBox["\[Sigma]", "2"]}]}], 
            RowBox[{"6", " ", "\[Sigma]"}]], 
           RowBox[{
            RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
            RowBox[{"0", "<", "\[Sigma]", "<", 
             FractionBox["1", 
              SqrtBox["6"]]}]}]},
          {
           FractionBox[
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"3", " ", "\[Mu]"}], "-", 
             SuperscriptBox["\[Mu]", "3"], "+", 
             RowBox[{"3", " ", 
              SqrtBox["6"], " ", "\[Sigma]"}], "-", 
             RowBox[{"3", " ", 
              SqrtBox["6"], " ", 
              SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
             RowBox[{"18", " ", "\[Mu]", " ", 
              SuperscriptBox["\[Sigma]", "2"]}], "-", 
             RowBox[{"6", " ", 
              SqrtBox["6"], " ", 
              SuperscriptBox["\[Sigma]", "3"]}]}], 
            RowBox[{"36", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]], 
           RowBox[{
            RowBox[{"0", "<", "\[Mu]", "<", "1"}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "+", 
              RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
             SqrtBox["6"]}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "-", 
              RowBox[{"6", " ", "\[Sigma]"}]}], ">", "0"}], "&&", 
            RowBox[{"\[Sigma]", ">", "0"}]}]},
          {
           FractionBox[
            RowBox[{"2", "-", 
             RowBox[{"3", " ", "\[Mu]"}], "+", 
             SuperscriptBox["\[Mu]", "3"], "+", 
             RowBox[{"3", " ", 
              SqrtBox["6"], " ", "\[Sigma]"}], "-", 
             RowBox[{"3", " ", 
              SqrtBox["6"], " ", 
              SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
             RowBox[{"18", " ", "\[Mu]", " ", 
              SuperscriptBox["\[Sigma]", "2"]}], "-", 
             RowBox[{"6", " ", 
              SqrtBox["6"], " ", 
              SuperscriptBox["\[Sigma]", "3"]}]}], 
            RowBox[{"36", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]], 
           RowBox[{
            RowBox[{"\[Mu]", ">", "1"}], "&&", 
            RowBox[{"0", "<", 
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "-", 
              RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
             SqrtBox["6"]}]}]},
          {
           FractionBox[
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["\[Mu]", "3"]}], "+", 
             RowBox[{"3", " ", 
              SqrtBox["6"], " ", 
              SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
             RowBox[{"18", " ", "\[Mu]", " ", 
              SuperscriptBox["\[Sigma]", "2"]}], "+", 
             RowBox[{"6", " ", 
              SqrtBox["6"], " ", 
              SuperscriptBox["\[Sigma]", "3"]}]}], 
            RowBox[{"36", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]], 
           RowBox[{
            RowBox[{"0", "<", "\[Mu]", "<", "1"}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "+", 
              RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
             SqrtBox["6"]}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "-", 
              RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}], "&&", 
            RowBox[{"\[Sigma]", ">", "0"}]}]},
          {
           FractionBox[
            RowBox[{
             SuperscriptBox["\[Mu]", "3"], "+", 
             RowBox[{"3", " ", 
              SqrtBox["6"], " ", 
              SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
             RowBox[{"18", " ", "\[Mu]", " ", 
              SuperscriptBox["\[Sigma]", "2"]}], "+", 
             RowBox[{"6", " ", 
              SqrtBox["6"], " ", 
              SuperscriptBox["\[Sigma]", "3"]}]}], 
            RowBox[{"36", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]], 
           RowBox[{
            RowBox[{"\[Mu]", "<", "0"}], "&&", 
            RowBox[{"0", "<", 
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "+", 
              RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", 
             SqrtBox["6"]}]}]},
          {"0", 
           TagBox["True",
            "PiecewiseDefault",
            AutoDelete->True]}
         },
         AllowedDimensions->{2, Automatic},
         Editable->True,
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{1.}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.84]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}},
         Selectable->True]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.35]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     "Piecewise",
     DeleteWithContents->True,
     Editable->False,
     SelectWithContents->True,
     Selectable->False], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.684533094744566*^9, 3.6845331402863283`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {"\[Mu]", 
        RowBox[{
         RowBox[{"\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], ">", "0"}]}]},
       {
        FractionBox[
         RowBox[{"2", "-", 
          RowBox[{"3", " ", "\[Mu]"}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]"}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Mu]", ">", "1"}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "-", 
             RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}]}], ")"}],
          "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
           RowBox[{"\[Sigma]", "\[GreaterEqual]", 
            FractionBox["1", 
             SqrtBox["6"]]}]}], ")"}]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"3", " ", "\[Mu]"}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Mu]", "3"]}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]"}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}]}]},
       {
        FractionBox[
         RowBox[{
          SqrtBox["6"], "-", 
          RowBox[{
           SqrtBox["6"], " ", "\[Mu]"}], "+", 
          RowBox[{"3", " ", "\[Mu]", " ", "\[Sigma]"}], "-", 
          RowBox[{
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Sigma]", "2"]}]}], 
         RowBox[{"6", " ", "\[Sigma]"}]], 
        RowBox[{
         RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
         RowBox[{"\[Sigma]", "<", 
          FractionBox["1", 
           SqrtBox["6"]]}]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"3", " ", "\[Mu]"}], "-", 
          SuperscriptBox["\[Mu]", "3"], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]"}], "-", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
          RowBox[{"18", " ", "\[Mu]", " ", 
           SuperscriptBox["\[Sigma]", "2"]}], "-", 
          RowBox[{"6", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Sigma]", "3"]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], ">", "0"}]}]},
       {
        FractionBox[
         RowBox[{"2", "-", 
          RowBox[{"3", " ", "\[Mu]"}], "+", 
          SuperscriptBox["\[Mu]", "3"], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]"}], "-", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
          RowBox[{"18", " ", "\[Mu]", " ", 
           SuperscriptBox["\[Sigma]", "2"]}], "-", 
          RowBox[{"6", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Sigma]", "3"]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", ">", "1"}], "&&", 
         RowBox[{"0", "<", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[Mu]", "3"]}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
          RowBox[{"18", " ", "\[Mu]", " ", 
           SuperscriptBox["\[Sigma]", "2"]}], "+", 
          RowBox[{"6", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Sigma]", "3"]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}]}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.68453314145338*^9, 3.6846344595182743`*^9, 
  3.684635677966384*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {"\[Mu]", 
          RowBox[{
           RowBox[{"\[Mu]", "<", "1"}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "+", 
             RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
            SqrtBox["6"]}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "-", 
             RowBox[{"6", " ", "\[Sigma]"}]}], ">", "0"}]}]},
         {
          FractionBox[
           RowBox[{"2", "-", 
            RowBox[{"3", " ", "\[Mu]"}], "+", 
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", "\[Sigma]"}]}], 
           RowBox[{"36", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Mu]", ">", "1"}], "&&", 
             RowBox[{
              RowBox[{
               RowBox[{
                SqrtBox["6"], " ", "\[Mu]"}], "-", 
               RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}]}], 
            ")"}], "||", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
             RowBox[{"\[Sigma]", "\[GreaterEqual]", 
              FractionBox["1", 
               SqrtBox["6"]]}]}], ")"}]}]},
         {
          FractionBox[
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            RowBox[{"3", " ", "\[Mu]"}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox["\[Mu]", "3"]}], "+", 
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", "\[Sigma]"}]}], 
           RowBox[{"36", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]], 
          RowBox[{
           RowBox[{"\[Mu]", "<", "1"}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "+", 
             RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
            SqrtBox["6"]}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "-", 
             RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}]}]},
         {
          FractionBox[
           RowBox[{
            SqrtBox["6"], "-", 
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "+", 
            RowBox[{"3", " ", "\[Mu]", " ", "\[Sigma]"}], "-", 
            RowBox[{
             SqrtBox["6"], " ", 
             SuperscriptBox["\[Sigma]", "2"]}]}], 
           RowBox[{"6", " ", "\[Sigma]"}]], 
          RowBox[{
           RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
           RowBox[{"\[Sigma]", "<", 
            FractionBox["1", 
             SqrtBox["6"]]}]}]},
         {
          FractionBox[
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            RowBox[{"3", " ", "\[Mu]"}], "-", 
            SuperscriptBox["\[Mu]", "3"], "+", 
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", "\[Sigma]"}], "-", 
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", 
             SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
            RowBox[{"18", " ", "\[Mu]", " ", 
             SuperscriptBox["\[Sigma]", "2"]}], "-", 
            RowBox[{"6", " ", 
             SqrtBox["6"], " ", 
             SuperscriptBox["\[Sigma]", "3"]}]}], 
           RowBox[{"36", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]], 
          RowBox[{
           RowBox[{"\[Mu]", "<", "1"}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "+", 
             RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
            SqrtBox["6"]}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "-", 
             RowBox[{"6", " ", "\[Sigma]"}]}], ">", "0"}]}]},
         {
          FractionBox[
           RowBox[{"2", "-", 
            RowBox[{"3", " ", "\[Mu]"}], "+", 
            SuperscriptBox["\[Mu]", "3"], "+", 
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", "\[Sigma]"}], "-", 
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", 
             SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
            RowBox[{"18", " ", "\[Mu]", " ", 
             SuperscriptBox["\[Sigma]", "2"]}], "-", 
            RowBox[{"6", " ", 
             SqrtBox["6"], " ", 
             SuperscriptBox["\[Sigma]", "3"]}]}], 
           RowBox[{"36", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]], 
          RowBox[{
           RowBox[{"\[Mu]", ">", "1"}], "&&", 
           RowBox[{"0", "<", 
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "-", 
             RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
            SqrtBox["6"]}]}]},
         {
          FractionBox[
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[Mu]", "3"]}], "+", 
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", 
             SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
            RowBox[{"18", " ", "\[Mu]", " ", 
             SuperscriptBox["\[Sigma]", "2"]}], "+", 
            RowBox[{"6", " ", 
             SqrtBox["6"], " ", 
             SuperscriptBox["\[Sigma]", "3"]}]}], 
           RowBox[{"36", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]], 
          RowBox[{
           RowBox[{"\[Mu]", "<", "1"}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "+", 
             RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
            SqrtBox["6"]}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "-", 
             RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}]}]},
         {"0", 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"x", " ", "is", " ", "the", " ", "moment", " ", "arm"}], ",", " ", 
    RowBox[{
    "we", " ", "integrate", " ", "over", " ", "the", " ", "length", " ", "of",
      " ", "the", " ", "object"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.676465933957417*^9, 3.676465936137473*^9}, {
   3.676466161477537*^9, 3.6764661745402927`*^9}, {3.678013519466964*^9, 
   3.6780135355704927`*^9}, 3.684533036755126*^9, 3.684533154817479*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {"\[Mu]", 
        RowBox[{
         RowBox[{"\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           SqrtBox["6"], " ", "\[Mu]"}], ">", 
          RowBox[{"6", " ", "\[Sigma]"}]}]}]},
       {
        FractionBox[
         RowBox[{"2", "-", 
          RowBox[{"3", " ", "\[Mu]"}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]"}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Mu]", ">", "1"}], "&&", 
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "\[LessEqual]", 
            RowBox[{"6", " ", "\[Sigma]"}]}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
           RowBox[{"\[Sigma]", "\[GreaterEqual]", 
            FractionBox["1", 
             SqrtBox["6"]]}]}], ")"}]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"3", " ", "\[Mu]"}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Mu]", "3"]}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]"}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           SqrtBox["6"], " ", "\[Mu]"}], "\[LessEqual]", 
          RowBox[{"6", " ", "\[Sigma]"}]}]}]},
       {
        RowBox[{
         FractionBox["1", "2"], "-", 
         FractionBox["\[Sigma]", 
          SqrtBox["6"]]}], 
        RowBox[{
         RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
         RowBox[{"\[Sigma]", "<", 
          FractionBox["1", 
           SqrtBox["6"]]}]}]},
       {
        RowBox[{"-", 
         FractionBox[
          RowBox[{"2", "+", 
           SuperscriptBox["\[Mu]", "3"], "+", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", 
            SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", "\[Sigma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "-", 
           RowBox[{"3", " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"6", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
          RowBox[{"36", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]]}], 
        RowBox[{
         RowBox[{"\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           SqrtBox["6"], " ", "\[Mu]"}], ">", 
          RowBox[{"6", " ", "\[Sigma]"}]}]}]},
       {
        FractionBox[
         RowBox[{"2", "+", 
          SuperscriptBox["\[Mu]", "3"], "-", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "+", 
          RowBox[{"3", " ", "\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"6", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", ">", "1"}], "&&", 
         RowBox[{"0", "<", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}]}]},
       {
        RowBox[{
         FractionBox["1", "36"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"18", " ", "\[Mu]"}], "-", 
           FractionBox[
            SuperscriptBox["\[Mu]", "3"], 
            SuperscriptBox["\[Sigma]", "2"]], "+", 
           FractionBox[
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", 
             SuperscriptBox["\[Mu]", "2"]}], "\[Sigma]"], "+", 
           RowBox[{"6", " ", 
            SqrtBox["6"], " ", "\[Sigma]"}]}], ")"}]}], 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           SqrtBox["6"], " ", "\[Mu]"}], "\[LessEqual]", 
          RowBox[{"6", " ", "\[Sigma]"}]}]}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.676465889260406*^9, 3.676465937337885*^9, 3.6764661289750233`*^9, {
   3.6764661652102547`*^9, 3.676466178267062*^9}, 3.684533053449914*^9, 
   3.684533158583465*^9, 3.684634461361347*^9, 3.684635679745891*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"TorquePivot", "[", 
   RowBox[{"\[Mu]_", ",", "\[Sigma]_"}], "]"}], ":=", 
  TagBox[GridBox[{
     {"\[Piecewise]", GridBox[{
        {"\[Mu]", 
         RowBox[{
          RowBox[{"\[Mu]", "<", "1"}], "&&", 
          RowBox[{
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "+", 
            RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
           SqrtBox["6"]}], "&&", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], ">", 
           RowBox[{"6", " ", "\[Sigma]"}]}]}]},
        {
         FractionBox[
          RowBox[{"2", "-", 
           RowBox[{"3", " ", "\[Mu]"}], "+", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", "\[Sigma]"}]}], 
          RowBox[{"36", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Mu]", ">", "1"}], "&&", 
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "\[LessEqual]", 
             RowBox[{"6", " ", "\[Sigma]"}]}]}], ")"}], "||", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
            RowBox[{"\[Sigma]", "\[GreaterEqual]", 
             FractionBox["1", 
              SqrtBox["6"]]}]}], ")"}]}]},
        {
         FractionBox[
          RowBox[{
           RowBox[{"-", "2"}], "+", 
           RowBox[{"3", " ", "\[Mu]"}], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Mu]", "3"]}], "+", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", "\[Sigma]"}]}], 
          RowBox[{"36", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]], 
         RowBox[{
          RowBox[{"\[Mu]", "<", "1"}], "&&", 
          RowBox[{
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "+", 
            RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
           SqrtBox["6"]}], "&&", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "\[LessEqual]", 
           RowBox[{"6", " ", "\[Sigma]"}]}]}]},
        {
         RowBox[{
          FractionBox["1", "2"], "-", 
          FractionBox["\[Sigma]", 
           SqrtBox["6"]]}], 
         RowBox[{
          RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
          RowBox[{"\[Sigma]", "<", 
           FractionBox["1", 
            SqrtBox["6"]]}]}]},
        {
         RowBox[{"-", 
          FractionBox[
           RowBox[{"2", "+", 
            SuperscriptBox["\[Mu]", "3"], "+", 
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", 
             SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", "\[Sigma]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "-", 
            RowBox[{"3", " ", "\[Mu]", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"6", " ", 
                SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
           RowBox[{"36", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]]}], 
         RowBox[{
          RowBox[{"\[Mu]", "<", "1"}], "&&", 
          RowBox[{
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "+", 
            RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
           SqrtBox["6"]}], "&&", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], ">", 
           RowBox[{"6", " ", "\[Sigma]"}]}]}]},
        {
         FractionBox[
          RowBox[{"2", "+", 
           SuperscriptBox["\[Mu]", "3"], "-", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", 
            SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", "\[Sigma]", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "+", 
           RowBox[{"3", " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
          RowBox[{"36", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]], 
         RowBox[{
          RowBox[{"\[Mu]", ">", "1"}], "&&", 
          RowBox[{"0", "<", 
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "-", 
            RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
           SqrtBox["6"]}]}]},
        {
         RowBox[{
          FractionBox["1", "36"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"18", " ", "\[Mu]"}], "-", 
            FractionBox[
             SuperscriptBox["\[Mu]", "3"], 
             SuperscriptBox["\[Sigma]", "2"]], "+", 
            FractionBox[
             RowBox[{"3", " ", 
              SqrtBox["6"], " ", 
              SuperscriptBox["\[Mu]", "2"]}], "\[Sigma]"], "+", 
            RowBox[{"6", " ", 
             SqrtBox["6"], " ", "\[Sigma]"}]}], ")"}]}], 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "+", 
            RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
           SqrtBox["6"]}], "&&", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "\[LessEqual]", 
           RowBox[{"6", " ", "\[Sigma]"}]}]}]},
        {"0", 
         TagBox["True",
          "PiecewiseDefault",
          AutoDelete->True]}
       },
       AllowedDimensions->{2, Automatic},
       Editable->True,
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.84]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}},
       Selectable->True]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxItemSize->{
     "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.35]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   "Piecewise",
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True,
   Selectable->False]}]], "Input",
 CellChangeTimes->{{3.676467577391876*^9, 3.676467583150907*^9}, {
   3.676467620923286*^9, 3.676467642689784*^9}, 3.684533184729178*^9, {
   3.684533596596053*^9, 3.684533598039216*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"TorquePivotTriATB", "[", 
   RowBox[{"\[Mu]_", ",", "\[Sigma]_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"lowlim1", " ", "=", 
       RowBox[{"Max", "[", 
        RowBox[{"0", ",", 
         RowBox[{"\[Mu]", "-", 
          RowBox[{
           SqrtBox["6"], " ", "\[Sigma]"}]}]}], "]"}]}], ",", 
      RowBox[{"uplim1", " ", "=", "  ", 
       RowBox[{"Min", "[", 
        RowBox[{"1", ",", "\[Mu]"}], "]"}]}], ",", 
      RowBox[{"lowlim2", " ", "=", 
       RowBox[{"Max", "[", 
        RowBox[{"0", ",", "\[Mu]"}], "]"}]}], ",", 
      RowBox[{"uplim2", " ", "=", "  ", 
       RowBox[{"Min", "[", 
        RowBox[{"1", ",", 
         RowBox[{"\[Mu]", "+", 
          RowBox[{
           SqrtBox["6"], " ", "\[Sigma]"}]}]}], "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"uplim1", ">", "lowlim1"}], ",", 
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          SuperscriptBox["lowlim1", "3"]}], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["lowlim1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Mu]", "-", 
            RowBox[{
             SqrtBox["6"], " ", "\[Sigma]"}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["uplim1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "uplim1"}], "-", 
            RowBox[{"3", " ", "\[Mu]"}], "+", 
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", "\[Sigma]"}]}], ")"}]}]}], 
        RowBox[{"36", " ", 
         SuperscriptBox["\[Sigma]", "2"]}]], ",", "0"}], "]"}], "+", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"uplim2", ">", "lowlim2"}], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox["lowlim2", "3"]}], "-", 
         RowBox[{"3", " ", 
          SuperscriptBox["lowlim2", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Mu]", "+", 
            RowBox[{
             SqrtBox["6"], " ", "\[Sigma]"}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["uplim2", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "uplim2"}], "+", 
            RowBox[{"3", " ", 
             RowBox[{"(", 
              RowBox[{"\[Mu]", "+", 
               RowBox[{
                SqrtBox["6"], " ", "\[Sigma]"}]}], ")"}]}]}], ")"}]}]}], 
        RowBox[{"36", " ", 
         SuperscriptBox["\[Sigma]", "2"]}]], ",", "0"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"lowlim1", " ", "=", 
        RowBox[{"Max", "[", 
         RowBox[{"0", ",", 
          RowBox[{"\[Mu]", "-", 
           RowBox[{
            SqrtBox["6"], " ", "\[Sigma]"}]}]}], "]"}]}], ";", 
       RowBox[{"uplim1", " ", "=", "  ", 
        RowBox[{"Min", "[", 
         RowBox[{"1", ",", "\[Mu]"}], "]"}]}], ";", 
       RowBox[{"lowlim2", " ", "=", 
        RowBox[{"Max", "[", 
         RowBox[{"0", ",", "\[Mu]"}], "]"}]}], ";", 
       RowBox[{"uplim2", " ", "=", "  ", 
        RowBox[{"Min", "[", 
         RowBox[{"1", ",", 
          RowBox[{"\[Mu]", "+", 
           RowBox[{
            SqrtBox["6"], " ", "\[Sigma]"}]}]}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"uplim1", ">", "lowlim1"}], ",", 
        RowBox[{
         SubsuperscriptBox["\[Integral]", "lowlim1", "uplim1"], 
         RowBox[{"x", " ", 
          FractionBox[
           RowBox[{"x", "-", "\[Mu]", "+", 
            RowBox[{
             SqrtBox["6"], " ", "\[Sigma]"}]}], 
           RowBox[{"6", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]], 
          RowBox[{"\[DifferentialD]", "x"}]}]}], ",", "0"}], "]"}], "+", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"uplim2", ">", "lowlim2"}], ",", 
        RowBox[{
         SubsuperscriptBox["\[Integral]", "lowlim2", "uplim2"], 
         RowBox[{"x", " ", 
          FractionBox[
           RowBox[{
            RowBox[{"-", "x"}], "+", "\[Mu]", "+", 
            RowBox[{
             SqrtBox["6"], " ", "\[Sigma]"}]}], 
           RowBox[{"6", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]], 
          RowBox[{"\[DifferentialD]", "x"}]}]}], ",", "0"}], "]"}]}]}], "]"}],
    "*)"}]}]}], "Input",
 CellChangeTimes->{{3.676467577391876*^9, 3.676467583150907*^9}, {
   3.676467620923286*^9, 3.676467642689784*^9}, 3.684533184729178*^9, {
   3.684533596596053*^9, 3.684533598039216*^9}, {3.6845379966929417`*^9, 
   3.684538068930195*^9}, {3.684538106530834*^9, 3.6845382708752737`*^9}, {
   3.6845383147084846`*^9, 3.684538356260854*^9}, 3.684538387403821*^9, {
   3.684538484572762*^9, 3.684538521073769*^9}, {3.6845388666282597`*^9, 
   3.6845388668906527`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "lowlim", "uplim"], 
  RowBox[{"x", " ", 
   FractionBox["1", 
    RowBox[{"2", 
     SqrtBox["3"], " ", "\[Sigma]"}]], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.684539156942346*^9, 3.684539164426305*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    SuperscriptBox["lowlim", "2"], 
    RowBox[{"4", " ", 
     SqrtBox["3"], " ", "\[Sigma]"}]]}], "+", 
  FractionBox[
   SuperscriptBox["uplim", "2"], 
   RowBox[{"4", " ", 
    SqrtBox["3"], " ", "\[Sigma]"}]]}]], "Output",
 CellChangeTimes->{3.6845391647952223`*^9, 3.6845408854065228`*^9, 
  3.6846344615903387`*^9, 3.684635325917111*^9, 3.6846356799605722`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"TorquePivotUni", "[", 
   RowBox[{"\[Mu]_", ",", "\[Sigma]_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"lowlim", " ", "=", 
       RowBox[{"Max", "[", 
        RowBox[{"0", ",", 
         RowBox[{"\[Mu]", "-", 
          RowBox[{
           SqrtBox["3"], " ", "\[Sigma]"}]}]}], "]"}]}], ",", 
      RowBox[{"uplim", " ", "=", "  ", 
       RowBox[{"Min", "[", 
        RowBox[{"1", ",", 
         RowBox[{"\[Mu]", "+", 
          RowBox[{
           SqrtBox["3"], " ", "\[Sigma]"}]}]}], "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"uplim", ">", "lowlim"}], ",", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         SuperscriptBox["lowlim", "2"], 
         RowBox[{"4", " ", 
          SqrtBox["3"], " ", "\[Sigma]"}]]}], "+", 
       FractionBox[
        SuperscriptBox["uplim", "2"], 
        RowBox[{"4", " ", 
         SqrtBox["3"], " ", "\[Sigma]"}]]}], ",", "0"}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.684538961696658*^9, 3.684539033841741*^9}, {
   3.68453908776854*^9, 3.6845390935628242`*^9}, 3.684539169612364*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"TorquePivotNorm", "[", 
   RowBox[{"\[Mu]_", ",", "\[Sigma]_"}], "]"}], ":=", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]]}]]}], "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox[
          SuperscriptBox["\[Mu]", "2"], 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]]}]]}], ")"}], " ", "\[Sigma]"}], 
    
    SqrtBox[
     RowBox[{"2", " ", "\[Pi]"}]]], "+", 
   RowBox[{
    FractionBox["1", "2"], " ", "\[Mu]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Erf", "[", 
       FractionBox[
        RowBox[{"1", "-", "\[Mu]"}], 
        RowBox[{
         SqrtBox["2"], " ", "\[Sigma]"}]], "]"}], "+", 
      RowBox[{"Erf", "[", 
       FractionBox["\[Mu]", 
        RowBox[{
         SqrtBox["2"], " ", "\[Sigma]"}]], "]"}]}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.676467577391876*^9, 3.676467583150907*^9}, {
  3.676467620923286*^9, 3.676467642689784*^9}, {3.684540628942993*^9, 
  3.684540631070787*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sigs", " ", "=", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.1", ",", "0.5", ",", "1", ",", "2", ",", 
       RowBox[{"5", "/", 
        RowBox[{"\[Sqrt]", "3"}]}], ",", "5"}], "}"}], "/", "10"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"TODO", ":", " ", 
    RowBox[{
    "place", " ", "legend", " ", "inside", " ", "the", " ", "plot"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"TorquePivotNorm", "[", 
      RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{"\[Sigma]", "\[Rule]", "sigs"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", 
     RowBox[{"-", "2"}], ",", "4"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{"sigs", ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", "Bold", ",", "8"}], "}"}]}], ",", 
        RowBox[{"LegendLabel", "\[Rule]", "\"\<\[Sigma]=\>\""}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.75", ",", "0.55"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Mu]\>\"", ",", "\"\<Torque\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Normal distribution\>\""}], ",", " ", 
   
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"2", "/", "3"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"2", "/", "3"}], ",", "1"}], "}"}]}], "}"}], "]"}], 
     "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<../abecker/SwarmPublications/JournalTorqueControl/pictures/pdf/\
TorqueNormal.pdf\>\"", ",", "%"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.683656192718853*^9, 3.68365650959415*^9}, {
   3.684540635146593*^9, 3.684540677064104*^9}, 3.68463443016495*^9, {
   3.684634642808958*^9, 3.684634652898061*^9}, {3.684634891389399*^9, 
   3.684635015089489*^9}, {3.68463505265368*^9, 3.6846350533908997`*^9}, {
   3.684635268251931*^9, 3.684635287362721*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
eNiMft0v3PbUGMbqKu7/AKms3JU=
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxN2nk8VO8bP35bZcu+Z60USRRJzDmXlFCSkLTYlyKJsiUJSVSWkKUQoqSE
IllvIcm+b1FkzT6rbPnN5/v7Pt6+88e8Hs+57nPPNdecmTN/jIztdWMHJgYG
BhX63f/yq6XMr/X1dcTwf2/+UpoGXn83rD5kWjyzsOFsm9CYvuENR9nP636s
3vAF5/I8xwcbnvM8H9TEtWGh8CeyzyX+/WdctWo4nW8VtT2O3mkrx8s66PMq
3XjPMrLFLqpK7brAXWE4Gx538i/KuLr9Ka2KQcgzmTJ3/BgN/XEaJtzkeC2e
EZZr+sKKghpdL5/Y32m2/c3cHmV7YxJaGh5NdRma370wyqpWbriAyhklgutu
9e69RFQN9Psxg56x2hswc08p32fvCzxXN4nC0Ljinbhq1STL0UdBy6Oojs1U
c16/89ChroKpLhhGMWoK4dR2M401X05nliv9KOiV8+uGi44EIa1sg1b9fhSg
9HK8OlKjTHmTnlKSQj9ikAws2KxtV2YfeY+iMt+HeMxU5ZhuGZXVv1z2t/Pq
Qwx/JQ93jegSEhonY6qCexHDy4aV/UsRhA9PQrwiHHuRlkEUp6VmIqHRbOf5
C3q9KECC05h/fzJhfchKksTRiyrjtxdaHn5LEHm1xlAx24NSGbmo1yfyCQeu
Ph8Ja+lBWqevGFgkFhEMlA/Xns2nW7hg9UctIjhSu7NkYnpQQFkS+mhcQwgo
8Xg069GDGDRullg9aSA8u8vnWmzWg4bSQifDGNsJBcfyjO6r09crvle+3NVD
aGIzVDkjRt8vzJzt+8FfhPHmaUGJ1W4UMG55rvP5KIEhNuzv5GA3qowte9Aq
P00QO7/7RwGi10mH9cS7iQRVya/lAWndiKFr7jDBfpFgOGKbanCvG2l9azFP
yv5HuJLFcE/EgX68U5mrxRYWLOhaisPocXpdykm9Q4Ude36AoJcn142so0J4
qMK8WMFi3x4/dvr6Z9f26x4VwprLvLfqzXQhrWcivUGr4thkoOACf3MXkrbl
t4zt2o4x6X5s/5VLr2/S43niLoeJc54pfPuE7l3j6fvylDC1trl475tdKOCW
rjx7kCpmFPfY9+hZej0gz/nUPQ3M6eIeC+5DXahyuffoOckjWJB0HfwQ6UJD
1qwefnzHsaQxh+2vlztRZV+/9RcXA+xTNvOmmwOdSHqg0z1A1xhrvZ42gVd0
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
9fP3hQ==
       "]]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwUl3c8Vf8fx69rhJaIJAlFkUoqfOOc9yFFIrJlK4UiWZGUrJQ9QwghZO99
zJKdJBlZ15a95+/8/rqP5+P1er/e78/nfO69n8Nj/ETFhEwikeJoSKT/f9bp
8/Tv7u7iglVnb1ZFiki8PCGhYL+2i89ZDGl6m1yWEB9QK56e28X1wnd49+qK
SqQaeQX/GdzF/5twOkPXd1Ui4P6sbG7NLv7d60rLZf1rEnfNy7MevNnFHfS3
k7/vV5OYsdN2bT6wiy8UvVFjO20nweYbyPfh+A5+8aPWusf+Agn0cvVgPPMW
Lrm1h7o5SFKyzyEpXkVwA6cf21k5b/267HKIas5v3g08luZyr1GnWZlPJqla
9xjBMS+0ux+aSEqO3h18sG8DNxVp7Hn4wL0sUvUgt9PMOo51K3tSxZuVaZx3
iP6Us467eOA+4/7mZS3DN8OXrq7jhvPkL9ofwiT5d1c+O15ax0kneufXc4wk
nTkSCnfOEv5fjyPO3/aUFLqz00l/nMhrVkV/PQiUfFeRw3p8dw0n+XTFi4cG
Sd6IOBZ8vYZgf1VPoe0oyZi8+viG0jXchc7v5XPuFMnlVrscpbw1vPJOvTWz
RJxkAl3bD+1EggNN1wZ6EyXJtu5Mlm8IFkw2eueaJnnX/yL34iuivu149Pxu
mmR26t8LDg6EPvSmiYY1T9JwUFzJ1Yxg5VKGfKUiyYrb/3zDbhH9UWZ+i+Jy
yfVHT5Ucr63hGBNFo/lfmeTlt8tMuhKEvnJJRMq6UjK1ZjuY5yxRL5f7LJ6n
VnJk4LU6zUmCV1uSzKq+SnLv0B4Z4yD6409wPr9vkqHiByLTGAk+E+qYs9Qo
yWjDdtx6YxWv/OR7IepYm6RLOles2CTBrSL3IrZ/SK6M8Z/c/rOKu4RINaQY
/JJ8zHshqfr7Ko5NbeVo03ZJDumKCXgVr+IkgceN9mW9klrvIU0xhdBPDRRV
ug1ItvyQvcASQfDv6JaS5mHJa/uUc7q8CBb8lDGrMir5UqDDptSF6PdyLco0
dlyy6IbWlRgHgv3Skhw0JyUX7/WuuFgRfg/jrvGqacnzrw2L7pkS8zzKlp6R
mZE0i6E43jBcxQemKrc2X8xJJpSaSghoEfzAQhbPmJfkWLGqmJEl5qtJPnKz
YElSnWX51Q8gOJmUPyO9Ihkg7CiVJ/b//s7itm2rko2K2+T3FwjOIs1y/lmX
pHv0utbxNNHvS93a/e+bklJetJ66J4h5rpcbjLdtS75IfCsLR4g8g2A758Mk
pKB6PwPvQaJe5Oiahy4VMt8f2ECzZxU3bJRu31NCRoS2WX2IrwJeiYZlRQrR
IA84IhUbVlZwklPXsloJLRInxnUwfWYFx/gEptSl9yC9avFt/qME+38oLb7M
gByx5g+y/ksw3u/3bIURUfFPVVXvJPIaCtP79uxHfNPOs4q3ELpqYSWLxEGk
/ntOJ8fXFdzlepvSryYmhHpMNHy7fAXnfnJJNfcYM4LSlGoP5BP6Psm4ElcW
xIEHjtWkE8w5nm1MYkVy0ZrexESCq2x9il3ZkBkd2RivaIJTD3Tfk2ZHzjg2
GjwKJfpxKzn17+dAYnJ/Dgl7EHz3u1kEDxfyp00zgcV5BTd0v+LKdJ4bOTzT
Y7JiS9TLbzvPmvAgSnsNT/95TKxfgL9SO58XeXeGMl56fwUfGNB/84zrFFJ3
3TQ1RpfIG0lcbYjmQ0j3ph+9ViN4LfZ7zZXTiF300swNGWL9e+Vk97YIIvxv
vZXzJIk8NSGOO6lCSKctbw7PFaKf1ST14djzyBvDYhb/c4TfxyPPS18YEVdQ
ttviW8Fjn5cYJ726iIyLjXWacRF+raK63/kiSMTJl+K/2Qi/d3WMwNYlZGPj
y2b2HiL/0xWB462iyJdRab0TJMK/aPAv3lAc0W3/U+Gztoxj7gWiMfuuIvsq
rLg35pbxyhE/tic/JZDylD2uDycItrr78Uw+gliGxgx3DC7jLisNF36WAcL1
+sp16e5lnCQ1zJG5gCEuWvfojzcu44ZW8jL7VK4hF2U2zN7VELpy8/sDsTLI
0IXAxtVSov7ka7UKmhtI0LEz50zyiHy8sULxtSxybQ/u155G+Bf8q1TYbyJL
C+pzkEjwcy27yHp5JOHv9J30aGLelIQK31AFhK6Ag9XLj6jP/h6beF0ZKYzL
tl/2JJhXjZSrewcx9ZXrMn61jMeKcFzU91RB2B37/2t7towPDFtpiNWoIt/v
239ArIh5FrvrdQ6rI8+V92+nmhL9bjxRSXLSQAQlE/TZjQieV6z33tBEfFja
eRbvEMy73yL+ug6C7Jq6GcoT/cxg+hGLHjIzuUtpliZ4z++PziQDJKYz7IaE
BDGvLu+mv6cholR9Ljn5EsEv9c9oRxshpIxaBjah/+9fzeKnr8ZIVoTOI7dT
xHwlqQfVqe8jzE/fntdnJfICVaMsSh4gNbrcAY37CXb5SFcpZorYyhXOi9MR
PMtfTttihpy6fFs1aWcJr1xRrqt1foT8OjGSx7K6hJPqvpGcb1ognntfsL2e
JVjBgm/h4hNEdJXZYWZsCR9oPbNzNtoKCW/BJL53EWzIJrDw2xq5WfI7SvQH
4RdiGm1lskU2Ei13Pn0n9BM3T7/Ts0NSA2kND1Uv4bFfVi31cHtExzmq6mUJ
0Z/3S+JnMQdkn9mlk9M5Szh2y3TI8psjUqbW4K79heBrNrU9Vk4Il9Ca7OUo
guc1KnhYXyGtR/xT4kKIfo43v3e+dUFcqPn3HvQluH/12L6I14jwbNnjFx5E
fsEii32xKzLYrdoy4byEG/qo2SRNuSFBXycvaNoT+ub91QMXPRDpnNeBtZYE
z2bb9L7zRBLeZqp9NCDyPthbiLu8RcSfHTc11yTYRNzzhrQ30nTf2+mKEuFP
1mQt5/VFDFXW/UiyBPuGTL056Y8swcP4RpRYr8f6/MNPAYjXuV/5YaJLOLfJ
w1GVb4EI57Fr343OE/rmcZP2nSBEZoVrbvU4kf8cM4tKD0W6hn2oa1gJ/qTD
WHb6PfL4xwab337Cf+ehPE1pOELCTQW1aYn9kC5z22sWiYSkdSKnthfxyo9r
/CGXopAzkTJ3ZpcWcZcXPbIOnDFI2Zuc+yXTi3isauLdTuZYZMTYz1u5dxHH
xH45tSrHE+d5K+ZYB+Fv+Fhv4vMJOYCa54w2En6hDovC3gQk/mxXXXbNIm4Y
oCN/4loSInr0xp8XpYS+5ee1VfkZaaDLm5bNJThgp61JMwXRX+IhsXwh5rE9
qXKW4Qvi2brNnxK5iJMebiyaVGcgHOWPrtoGEf2pSr5tPchCMlL/KMI7It/H
vhB3zkakw2WNGF2JeTK4pIKScpBOj3zbX46L+EDBhSG/oVzE3OakV+xToj5s
RW5BJB/ZMQz88MiM8L9JGCdFFCD8khbVVNqEv+Tl8/QvxUiJQM+vJmVinlDq
j5hOKXL7yM2J93IE65QG2fKXI0M0hVvGGMEvWmOpD+KI/cIppvPiRF7Zt5N6
3pUI40DQyfULxPxGHfnfPlYhMc0ksdrThG6AStfVVSPfknv17h4h6j+nPJ+Q
r0N0w+Sf8h1cxLlXj+21TPuKzLkVuc/R/X8/YsblT9Uj7k/5w0t3FnCX5FC9
7tzvCLtByBfPlQWcRDrzLUi3EUlTION3ZgjOyNak4m5GsKtW7ZyjBOscVa7e
bUFMWRXWc34t4IaV3x8m+f5Atsgl+142L+CVnLT4o/R2JGDuNPfNOiL/tCb7
yf6fyKm/oZcOlxO6ffLk4MlfSFEjtWx/HlGvPne3+UUnolD89G5q2gLObbcb
wj31GxlI6rewSyD8jIu7PFZ/EHrX0pC9IYQ/NDQLr+lFop4IJHd6E/k2E0pq
oX8RYb33pXFuhH7tUcdXqQGkVp629bETMW/sGAeT3CCiJW4zJGZD5B/73WCh
P4RM8w0ukx8RurWz4S+PYcSFRYmhxZjI2/TllMcpSMqMoPB9FYIl7qdkPR5D
XB9Ih6jLL+AYh8LQXM84ovtXe+2GNDHfglXoQaNJ5ECLV6WACJF/2+4nfc4/
ZOx67KljgoTfdishzmUWqSwv9NrHu4DHNgt/vpU/h1injyrPHiL6v7ZUdGpc
QG7x7eQNMBCcViF0f2YRORXNerSdiqgfyNC7z7uMdPrIDObNz+OVF/lyoqtW
kUwa3etJE/M4d7/R8cXz64jXC5uU94PzuIvl16aI7A3k6uP4p89/EHp6niW+
uY2wUIp/Pfo+j5NOUSd11+0i0zo//tOrIvLeSFtK/SKhMbdIZCx7Ho/9sTJe
RSGjz2qOPLiYMo8bhuc5e1PToMoSFxp444j63zO9nSK0KPVZ/SDaQEKPeKOc
/nUP2htvt7LiNY9jN5SXr5xjQAs4fO+OuxAs/JUXSWZETRnLeButiH5XB/L0
B/ajUq4/PctMiX4ec2PTHw+iHBuTk+mGBMemKz0tY0KbJo7mBigT/RoTl9Qr
mNFEo4tHXOWIfiasyVK/WNCXf+ScbDBCT65dGNk8jAp/f3ZNQ/j/67vz8YfT
EZRByv+z7Bmi38x60UInOzpUlLT3P+55fOCMh83r6xxoaPKvn8eYCF04fFXA
6Dhqyf1PbD89sX89K4FeTCdQuXCaqJ3dOdywm3959hE3uvHm0v3B2Tk89vrG
zm9tXvTnrnx9+9gcjk141T0zOYmmPTMWqu2fwwfM2tJ7Xp1C9R8GLiW1zuEk
w8v9Jyj8qFh/slb4NyKvl/F5zoUzKJNmZdlbnPBnVQ9Y+gqg1Tdm3R9nEnnp
C7tybkLohwq6Cb3Pc8T9k9XN4fh51FaUS1HpI6FTtr6sNF9AT/Mrsor4z+FZ
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
esilXvYRfbHPYtk8exdkwsrM9RVjUF39fOM7lbvQzZu0XRjzAVV4ox1R+41Y
L9OdzSK9SFQya7tVrHUXNlQuG9QLRqCc5BsI199d8JL/cqh0Ogzdd3bSJnBk
F6Rp/ua+HghFt1T9Umn+7YKos9Es50AI2pvYeWRqcxe2Vw8Md5CC0QcPkdOZ
VCSM/3OYFIknCP3r5F9tSkvC3FwreY7fCkRbEi6t9+wjYTQ/06vW7f3RG8Ue
IaFMJEwwqffPKJUfWtH8+4LSYRLWI6Oz5R7tg2asOD2oPkbC4nTS+beo36H8
e1uoXpwgYZ+9B4qdmr3QmBPc0VdOkrDBf9NdawlvUD+52p/JgiQs1nyg2N3J
A6XTY3tifJ6EHVYa+/vE0R19+dSUkVOEhJ16JfqLyc0NtYzcJ+X/HwnLP80e
YlH4Gh3N0O+VQ0gY1b5k30uDLqh+TdYzshQJs60dUag57IIqTqtl2MkReSFi
ONsFZ7TjVamViwIJ+0N5GW2T4YTeZeG95K1MwljllPg3sefog6uzhbFaJGzJ
zLN15MMzdLpZ/fkXXRKmdcXILtDYHrUxKpMsMCRhGVNcw6vidqiL19uqRlMS
tm7i0jJ/yAal45xz63xMwmpsa9aOslijPpkaNwatSNhI3qgdH89TNKLzZOOK
AwlLMPE58LPaEuU2f+dL5UzCNv7FPJs+ZYEmbc8p7XtNwvxC6wqORT1Cc05V
dPC8JWE2se7xcXWmqHjRqfdCviTs+OFtfkb7h2jFLW9tsUASlnzHmOWL2AO0
0Vrrr0IECWM/WjFzZeoeqkKHx2pGk7DJgKn7b3uM0a4IvnvGcSSs+XKd4dgf
I5RSuTD2LIWEvRwSr1jfNEDN1bRTXdNJGH1K5sVmGX10bgx/7JtNwqRjtTde
JOii2wd85+OLSRh+5WM15ZM26h6/mJteTsK6nr5zcpTSQhlF79oXVZGwjhi6
zPh5DZRN7/Rm83cS1sj4q3jNQw2NmvMt72omYUcE+L+YmKqivO5Lr4Z/kDD1
2FaRUW0V9MKXKpr1PySMkblFie2hMlqAnvlG/ZeEdVIv92eSlVDJdr+3B4ZI
WID7QkqskiIqt65z4NQkcR5lM0Taz8mjLT7VbednSJiw4qPJ8jI5VJ1bIPi/
BRL278vppEcGsqix7MoRpQ0SJhV66AapVwYd79bt1t4hYU/WZ3dIeddQS8ua
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
dIh+09b99Wo69X+eKLgN
       "]]}, 
     {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
b3RVC+hj/g9XQvkJ
       "]]}, 
     {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVV3c41u8XtvceJWUmZVQ2Gc95jKxUEkJIyKqQSpQkJMn8JklCVpKSkYzy
ochIGfEaIXtn7/l7f3+9133dZ97nnOe9PiL2HiaXqCgoKAyoKSj+/1ttK/J3
Z2eHsJupuj6w9BP5C6kZea/uEH1tYwUr138hlT7TkqnZHaJiiM2MbvEXyr4Y
+qSzn8xrLX09vN6Ioh1n9Aq+7RABNPEfy9mbkcEBxo8Sn8n862OR/OeaEdWI
qGhK4Q7R9LUi8L/kZnTT2XwzPIOc73TA/VH5FmTl9uWD08MdwnOJ5Jjk9htx
S7UL9NzbIYzvPtU7W/YbNUzOhp312SFmbb6Y6LG2Irgqdgm77hAf1GRidgpb
kZjn4z38J8j2cxocyjwkNH3TMvAnG9n+btaJw7s60Wul6zPa9OR8T2qMD93t
RHYr4dalO9sExzA/y8fhTvTbp0Lp9ew2Yewq/SuhrAsV3zk4GdCyTcjs1t7R
uNONrqlrWqzUbxPCTej9lZluJLllVX312zaRQqN80+ZSD3rpH5lsVbhNNNm0
MyWb96LA+0tnFeK2idlbFwveHexDalrsldmRZPt2uzcSrn1okUriiMjDbSIg
hiny1ds+5BxszcDms0307bb1fCLfj4wefvs8akn272KwHjk9gHZFxBx4IUCu
7+4zk6wvQyj/dKCOB+82YeekSSrYPYxOc1130GbdJj5EsgzKXh9Goc9MX01u
bhEy69psiUdG0Mar3QLq3VtE05FPlvWfRlG8I4M6R+sWQUG7fIJZcAwpHFyz
GvqxRXBYmTb8ezCG3HO64sPLtogP1iFRH6zGUV/RS56ehC0iui+2oJ9vEvn5
Rsrn/UeOV6fEPRg+ifao3zN5EEbGLZaBpVRTyKTSLvrw7S0iQFYwmn5xClX/
2M/ib7lFzJpF/x38N42y+95QC/FtERUPxIdTU+eQblqC6AL7FmFcP/GK698c
Grz0WLOGnhxP7vfptyrzaN/klXseK5tExXOTPpff8yhq6egGQdokZF5cqY/Z
vYiki4X5Y39tEgEJnSnVlxdR7W3OYy7fN4kUgrlEt3IRUVEseHMUkf11I6l1
PJfQDaaiebunm8SHBqWlj73LiONnJqdiBBlHddv0aqygd1HPZBgfkO1tF5z9
klbQCI+ve96NTUJY51fXEcdVZCmkPkFpuklE20X9R0+1jpDC1/5ULnL+v+xa
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
       "]]}}, InsetBox[
     TemplateBox[{
      "0.010000000000000002`","0.05`",FractionBox["1", "10"],FractionBox[
       "1", "5"],FractionBox["1", 
        RowBox[{"2", " ", 
          SqrtBox["3"]}]],FractionBox["1", "2"]},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox["\"\[Sigma]=\"", {
                 GrayLevel[0], FontWeight -> Bold, FontSize -> 8, FontFamily -> 
                 "Arial"}, Background -> Automatic, StripOnInput -> False]}, {
              
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #6}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontWeight -> Bold, FontSize -> 8, FontFamily -> 
          "Arial"}, Background -> Automatic, StripOnInput -> False], 
        TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold", ",", "8"}], "}"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"\[Sigma]=\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.75, 0.55}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"\[Mu]\"", TraditionalForm], 
     FormBox["\"Torque\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Epilog->{
     LineBox[
      NCache[{{
         Rational[2, 3], 0}, {
         Rational[2, 3], 1}}, {{0.6666666666666666, 0}, {
        0.6666666666666666, 1}}]]},
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
   PlotLabel->FormBox["\"Normal distribution\"", TraditionalForm],
   PlotRange->{All, All},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
eNiMft0v3PbUGMbqKu7/AKms3JU=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1:eJxN2nk8VO8bP35bZcu+Z60USRRJzDmXlFCSkLTYlyKJsiUJSVSWkKUQoqSE
IllvIcm+b1FkzT6rbPnN5/v7Pt6+88e8Hs+57nPPNdecmTN/jIztdWMHJgYG
BhX63f/yq6XMr/X1dcTwf2/+UpoGXn83rD5kWjyzsOFsm9CYvuENR9nP636s
3vAF5/I8xwcbnvM8H9TEtWGh8CeyzyX+/WdctWo4nW8VtT2O3mkrx8s66PMq
3XjPMrLFLqpK7brAXWE4Gx538i/KuLr9Ka2KQcgzmTJ3/BgN/XEaJtzkeC2e
EZZr+sKKghpdL5/Y32m2/c3cHmV7YxJaGh5NdRma370wyqpWbriAyhklgutu
9e69RFQN9Psxg56x2hswc08p32fvCzxXN4nC0Ljinbhq1STL0UdBy6Oojs1U
c16/89ChroKpLhhGMWoK4dR2M401X05nliv9KOiV8+uGi44EIa1sg1b9fhSg
9HK8OlKjTHmTnlKSQj9ikAws2KxtV2YfeY+iMt+HeMxU5ZhuGZXVv1z2t/Pq
Qwx/JQ93jegSEhonY6qCexHDy4aV/UsRhA9PQrwiHHuRlkEUp6VmIqHRbOf5
C3q9KECC05h/fzJhfchKksTRiyrjtxdaHn5LEHm1xlAx24NSGbmo1yfyCQeu
Ph8Ja+lBWqevGFgkFhEMlA/Xns2nW7hg9UctIjhSu7NkYnpQQFkS+mhcQwgo
8Xg069GDGDRullg9aSA8u8vnWmzWg4bSQifDGNsJBcfyjO6r09crvle+3NVD
aGIzVDkjRt8vzJzt+8FfhPHmaUGJ1W4UMG55rvP5KIEhNuzv5GA3qowte9Aq
P00QO7/7RwGi10mH9cS7iQRVya/lAWndiKFr7jDBfpFgOGKbanCvG2l9azFP
yv5HuJLFcE/EgX68U5mrxRYWLOhaisPocXpdykm9Q4Ude36AoJcn142so0J4
qMK8WMFi3x4/dvr6Z9f26x4VwprLvLfqzXQhrWcivUGr4thkoOACf3MXkrbl
t4zt2o4x6X5s/5VLr2/S43niLoeJc54pfPuE7l3j6fvylDC1trl475tdKOCW
rjx7kCpmFPfY9+hZej0gz/nUPQ3M6eIeC+5DXahyuffoOckjWJB0HfwQ6UJD
1qwefnzHsaQxh+2vlztRZV+/9RcXA+xTNvOmmwOdSHqg0z1A1xhrvZ42gVd0
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
9fP3hQ==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1:eJwVV3c8Vf8fNsue2REVZYUUlXvO+1oRUkkiWVEZ1VdIUslKygzZIjubJPsg
KzshKyvZ27Wu9Tu/v96v5z7P+3k/n/e595xzRe78p3eXioKCwoSaguL/tc5U
ZHh/fx+ruEB80i8YK+12REnHeXMfm09zV5e7kix9bkS/ZG5pH3NGXf2e6WdL
Z1j4hvaN7mPZSNDRiYBK6WCrRY0v3/exUp0KLVavEelbthV5997sY6Kv7Bst
yEdPLTwx8mxl2ccSXms8IL9MO8Ud8F40RnAP46E2+jZalSmDnqkZTeTYwQ5x
sGfsBnyX++OSmqgnQcZK3lrr8pZ+kK/UnQ8I197Elm4+aqU0Ip59EkdauKi2
jvGc5S9roJtWSH6bqx9vRsJeqd3qdKK4ce7zgoSsld4KRvmfFZ2yWNn5pXE6
hQrdJSzvU3zEhOnahdvLZzxeDMxhWojNzdqOLaXXDH0eNxunMHenxHt3xMMJ
PYqUp4RLpjAKmv4reuWhBLG74v1Tn6cwIs+5dzUrIYR67NlpV78prEp912Ly
fjSB7gn/31hdvJ+3rVvgRDbBMFEl6C7gfFTnl9KRbEJ6u63SKVncT4LZnm/y
C+GSRFkoxo7za/lGsU9LCDPejHNXVycxCvr3527ZVxHeDRurjXVNYlUpbQfa
G+oI/UzeSxl1k5j7F2Et5uEfBMkLWbGORTimxP4jKbYSXtzv0iSkTWIjZyIP
caj9JLSE7ZBoIicxoj/lg6GIX4TDNcc/tfriflcaVRO7ewgPFnUuhz/D8RmZ
2vR7/YTyw0+2TG1xrMVO8j8+RGDWiks5YTyJCSuPcL6SHyWYPq27tqSN51t6
OphGP07ISZ7fLSbgWOqup9LfCcLeT64MD2k8DzZ88JnoDEF3HzHQEsLnj9y0
a4UFwkepe1ScrJNYQt7BWVe9ZcKiUWDOwP4EVsVyK46SmkQgvim6lbw0gVE8
+UYxsrBOCC4cOvBwFOc7+1CSAZkwMnrgy9lOHFtY01GI7hHkWGXM9momsAQm
0dudNykRT8JNxoYvE5j77RYL5wFqpNPm1begZFw/efw21/cDyNGINEvDDzhv
kyykwc6AONS2s4r44POoTrXc+MOM1CxvlE07T2Dmtjq2TbzsCOcRYeuC+3h/
qJ3c0whOxEpH89BzwwmM2Hygn/0BN1L4zL5K9RKO0+72haXxITRpkQ+YLuB+
FH2jBD1BRL+rirdbAudjHwZx1gsjyZTTtXECOG7ZWzkqeQxZO8X++B4T7m8T
k7f6TxS5ePu8oMzuP4zi0HWDF1TiSPhbix8b8/8w4s3tw2UBUshE0dsnVUP/
MHfr6sACHVlEcTxf5G37PyzhB6WNaORpxJe9v/Va1T9MWMA27b7CWaQXpXLl
z8f9zNVOtMqcQ04+kBD7+wnHD14cr32vhLhE6XVmhuB4gbNL3waQxnpXNyev
f9jIvaRrJePKCB8pUQJxwuepfDpebaaG2Io099DexfO0+NzPlNVASnVXPdtu
4Dj6LandSgtheCEgE3HxH1alPyL2iVYXufVZdcBMEeebXpupcFxDMnrs3pw8
ifspBi8+sb6ObFOHyS/z4thg9M9dFgNER658uIQex4dux/OzGiGxpuN+nuRx
zN1uobH1yW3EOcGsL2IWx6LTgfcFzZFrY/1i2YPjmHCeOFMKegeROm7gVNM6
jplLK9zeTLFCDtz7Wf27EtefsP1dffs+MpKmwzqfO45VJTl+Hnlgi5RNN9ym
+oTzbxz790ceIuGSqhk8IePYiAUx4e+YPWL/sHJDymscS3BS+jR0yBHRyj2v
ruI0jlGco4kUCXyCiC4Xhty8O44RLypxXLvpglDIy448MMD5pssOKa7PkX6n
TGlPDRxrNJ5dpnqFFBaJPY84h+cLceTWdfNAAjc/NWaJ4/1vpXJbSr0Q6wuC
3DX8+Lz/UoOjUR9E9UWk5W9GPK+99qgPx1tEqJIzf27nL+b+8EotO9Ef2dwP
3KNcwLFZND/SGYR0KjPo8Az/xaocBs28Zt4jWV6vo6Q6/mJEmvXVBYkwxKeO
YlK5+i+WILsRQV0QjlgcfHHmZgGO37/5zuEbhRAubXg8SML7j/lpvCmKRbj9
HNo9wv5iI0crpEnHEpCllvnDEa//YuZna0vGjiUizSw2tlnOuH+jWVicRTKS
enX8W/V9nJd+R2U6noq4h5jR/jb8iwkTb3jIFX5GbnX1681dwvMWmcsJ9Gch
Z7kNEiiV8Hn8iwxMsnkIm+HPeW4p3O9m/LvUkwXITJSOkpQg7veqJZPBpBCp
HWjwVWbB80YWSvF3FSHxgqo9BvtjWJXwYN3zDyWIq1nlsQdLY5i79y+tnM/l
iP6n8489RsewkbUkHg7mKuTU38LK8E5cH8BxOnOzGqETlWXK+j6GCaNvTjsK
1iJj9zKNqgvHsASrH0lDHvVIRbpYWk8K7rfWO8Ql/QOJnPlEmg0fw8wlZcQY
TrQgDlKCKpS+uB/ZasTHpR3ReRQZxP1sDKOQHdBM/fATEcvj/CNpi+sH5x8d
SvmFUKwESigb43lo+UbeLHUjA/IMLgY6OE//QTzBrRcpevK6zg7Bsd7cnVyD
AST4GwWnx6kxjMilV9bhPoTYbj03Dz+C9y//+b5DNYqoK21kZ7Lh+jsHW+k2
xxDhlw7bVZQ4llWvoBX9h5Ar5zV7VkYxc3nnpr2gSaSLwiZ89u8o5h5/8PEn
mEFyVcb/UnSPYiOtEvim55F33mZy3PWjWNUvR7r36kuIVX2/m+S3UUy4SSWV
+fAKgtIZtBDTcb11xEMWMRLCp/WTzyBqFCO6Hhk4aLOOkPx07tu9w/U19yt2
ZjaRttaGQvfnoxhFqLGMf8E2ks6qShX+APe/bylM2bCHeF6rvJJpgucRuv1E
jpcSvR16Pq5KF/fr4Pn+fZsKVewunOmGUSxBrjWdk5MW7eUfikmVwfmpr7Kp
kQdRV/ODl58ewfEJu+1NawZUIFV2T4MV9xtmmLzrz4yWzxrl8u6PYAnc9qe4
fdhQEzkv8+mFEYwi6laA2jMOdM85i710aAQzN7Kevp9yCI0v765514ZjGZbR
72w8KJFq39G4cgQjdt3yU6/hQ0c1TopK5eB+lke0w6oPo54B13p24nD9CdMH
IYzC6LFfrm9aA0awkb2pH2ITImgtb/K5jy9HMOHTj1/mrB1D75q2Tj96iPNH
aM70gRh6IHk9GkzwPD1LlnNNJ9H06SM6bJdx/iS9QGecJHpJ5tLuCAHvP/6D
dLLqFDrj5JCTLzWCsb1SHpAQlEP9SmPMPA/jvNEZ9WYGeVSKoo7tOhOeT9xv
gvHUWTTGb9BLY3MYE5bMf/7aXxEd4paZmPo9jFGI0taYSV1AhRM9NN99w/lp
0gGzQwh6R7orQzJiGOsojnbaEiWiycVizK3Ow9hVNh9i0rwyOqH67L9HBsPY
SO6TufR/qujJ9uafrAq4n7681zrHRdT2ltCZfK5hzHyc2WHFVRPN/mcfrrc2
hJmveTX7HtNGl+y/b652DWHuJj/8FDl10dM7XMYfCocwNivTxYD0q6jTG+sK
hbAhbClZUNvdQQ8t4ig70us4hI2cQKeK7PTRzThmz2fXhzCici55MNIAvSBu
Ps4vP4RVzU9xsOwboi8KCy6WcwxhFGEUXCNJxigGtJ9NVv5gVVJnmB4FmKJU
zTcZ93/+wZaOHJyXGzVH1QwyHibk/8HYdLfsaVPuoD6jO+3K7/9gxLiZQclw
K7TxwZXTf+3/YO7osRc7xfdQhs1PYd5X/2AUqTnR8hw2qI4XaV1UFtd/un1i
O9UODWTRMGpgxflDmXSkF4/Qn1FRZdaLgxgbpTq3cKs9ekh0TpChfRCj+O9b
fr2nA2qQh7pn5gxi5lKDb9ksndBIpfdjOoGDWPABKruVx85of/1ftYWHOF8/
QFP6xQU9rKeQFnR5EBO2lL7AJf0cNf3jSy8nPYhV6XDs8f19iSZYD9h1Mg1i
Cd1H76Y9dEf/rkq3Oc4NYMIjYQN9zJ6o2Ct3Wa6WASxvsU34XrcXas3wK6Qo
cwAzf7c63tXwGs34ILp2028AW3pC9WB76g06J+xyc8t2AKMg8EdRIu/QU1lN
JdFaOBY4bmvd6I/aKwoeJkgMYMSdzzNswUFoQc1/bn/ocf+zg52fdN6jpMs1
I27T/Zi5jdeVQVIIqtB3SFX4Rz+2tNQx3/49DHWxup9SnY7jzmzl7vJwdNeV
yZbGuh/r+I/r52+lGJSbmKHTcakfo8is0HwQG4fK0mrKxErifpL3bOp5ElCt
pn/s1sz9WFWkl2Pki0+oVZAXSX6xD7v6TlyzdS8RddMX+b3f0YexOTpXZCck
oxF8WElzQR9mTx45mW2VijYlkd0snfuwhLRzq2UmGei4daSFjCHOKwysJkRm
oXvSCmrb5/swit3B7waUuSjv6i+xBgFc/x9V2efWPFSu+DF96G4vZj9bUyx6
tgDVesk6ZzrciwmrapXxl3xBrVSy2ySqezFzldVHacZf0ciWqdAa716MYoOj
oIq2BC147+MceK8Xv362y1c4ytAWg+NGtzRx3k/D2kOjAp0QqFESk+jFRrJ0
32umY+j+iJnQCmMvFnxUrv+fQDXKm7pLUTn/GxP2fuP+5UUNetou5u/b9t9Y
Qtef6Zub39F7az3pIqG/MeLHWf5pjQbUvdTJb97pN8ZWpnGcQfgHGv2K41GJ
wW+M4ia96SOBZrRQLe/q63O/sQ5KlsN+hFa0lV5X/hr/b2ypSYd173U7OtE2
yyW404NZ6621aOx2oBRhbzen/vRgbH0eCdG6negZoboK9089WIfBKlcNoRvV
/XsnQcerB1u6yLdE96cHtU6n8OK924PZ52hKKcf0op4PP94dv9iDjYQazNo+
60djThM0807ifL5LYMqzQbRwo0/iBUMPZs5x3kbu4xDaVv6UWXOuG7OWSPpe
7DSCUml86RzO7cZ8xXhrxffH0MNM175mvu/G8m5m8lXcG0cVfi5EPHXsxhIu
0dnKTf5Dr4b7u6re6MY6BMvrBT0nURtjCRNWxW58/9WdsuenUU/hRhjg7cbM
FVJIciyzaOy/u0fTyF2Ye4DNByrqebTjv0+TaGUXxiYdOceWsYTOnIEmhoQu
7CpxKdm8fxmlIQ9m9Xh04febIsMZoVVUCHMNSrTswmQX3tLOuJBQRW9eh0fq
eH/Mx/Ws6TX06qUi/QsncL1R0YcQhw3UlkVf8QA9jifHVJm5ttCPkUE7cS2/
MPdPbx0Ws3bQYhPpYZucXxgx+F1kYsoe+vNoc/XZ4F9YFWcYpYoZBcxMWidT
OvzCrjpfMi55QQk02QfetF7/hW2aPFGUz6ICIYdkm6izeH/rsFHxAjWcU1TR
ucvzC2MzVCGbqtOCXfVL9t3+TmxqNVsnT54OOAKflkFpJ5Zwd8XNdJkeSm89
vusZ1Ylfr7GxuBZGsDhhx1rn0ol1XOFKONPADHQkq5KDhp3486m3mOIvK+RW
mVpqKXZi7n5ffHfY2MEgwJA5gLsTOynpADyqHJAspmPB0f0TO/edgy/w7yHQ
XlVnvFH4E1siqP8j6nPDCgZfI0J/YuniVcXEQR6I8j9v1u/wE5PNarg6/IIP
iEby9IJ6P7GEay6jbooCMCkq/cVM7idWFa9QHMIsCIErYiaJbD+xvPe/RuMp
jsCgH3/+ifYOTNhELJAxUQS8DA8Z2+Z0YLwPew6sNR8FCVEW2uyADmzTdLus
9uBxcKmkNDqt04FZd778vVwsBkf8tqmeSHZg5t4fvAxlT0L9zbWsbwwdGJ1V
ZFFxhThIjP2kdA1px9zVxsPJQtLg8rzuxv7VdowuR1fn4topqD9U8tmbtR2T
SpqXlXWUBUuNhGtB/m1YnrJMnHzQaSgYCU05pN2G2ZdbfeYqlAcK1zdbUfRt
mO9wd6LC9BmIzXr0KdmnFbs6tXbF7I0izKjfWRNXb8Vk5ZNbWVfOwbnhG5dy
qVsxa2P1s9fsL0A3O7Jc4t6CGZqqL8lnInA8U1YdoAWTlTz4tdoGwEHteFTt
bjPmYljdMxhPBJanjMrtrs3YgzXvZo4YFbjNth+mf74Z62pxPGCdpQoZn1em
+jaaMGsNAfbPzWqgMdgXPO7UhOfxizBW0IDwJ63jNvJNWJV340M2L00YZ6k+
t7j8A3OJslxTHLkE7srpI1uPfmBT6/GnE9p0oK0/5swr6R+Y9azY8SsWunDY
KciXZq4RG3yWVJBKfRVKUp1lWW0asVj2JEbxxmtAR7T1DjvRiJ0sHqJxLdUD
gz6TXr6JBqzW11WBpfg6rDCqux+3bMC6Zgooy3tuADHlXNdnkQbswcWL86Wb
BhCISp2UGanH9IsbKxtOGILEY86O8yb12PFzBQPrObfAsmf0yJWbddhIVHL/
X0Vz6K8W2TrAU4dtnktlv0JhAVezLTore2qxDr8vT6l/WgDBe9T7lEEtRtSh
VDL1t4SC/0RMJ7hqsZPXfqqFPrUCcWMLxY/d37FksZ2OUw/uAvfp0WnmG9+x
Fibp+jqH++AvKPK97tB3TM3lbvat19ZATW8R+7KrBiPlWtK/TbSBpeER3fnr
NRgF+6b26q4dNAWMfGnRq8b2dJ0NaD/ZA/GZcIA3RzUWsup1W9HoMXyzMr9H
6KzCXhhtFh3gdYBkpRHerGtVmK244mHZDEfgPyG8YslehTGdHsoff+kEIqJV
4YqJGHbStDtl1vAJkDuxbe5PlVjx0LprhuhTmPwMOT7ClZjmQ2/FKh4X6HLH
zNfjK7DEDZ7tv+zPIPsUVtf9sRyb4+f6c+jIczB/VxkUFluKNS5QRVklvoLL
FqgKzeFSLMzK0pj3oTtcOFdJcowpwS6MN5g1MHvAoYkKo+vRxVjIdKvBmIkn
NChXHOOILMLIqXqXS5ReQyEv0uPBU4SRUlvZwih8IGGx3Hc5/Cu2cLCondzk
A65x5fMdHwqxtoLh5WZ7Xzi1VfYtKLQAy6JPe8ZG7Q8CHUq2+xwFWKFaTdzw
uj/QpZUd/i8kH8vQDa0lLQXAqH6Zh+77PCzwirzApc0gELd4EsEvlI1tGEjz
b0iEABXrk52tw1kY2/zNIREsBAbLnSz6BDKxQ/nzlTUGoRDM6yQZyfcZm5l4
puEfHAbr7Q4YF1cKdili56SCTAT467SIXRJNxsTdDV9QdUWAyA/RwBdnkzCD
739OMr2IBJ2a3tt/b3zCHv+Z/7bQHQUqNi9JFtIxWMkwP9/r/Fh4eEf2e+Pl
KOzoL0uk0z4OIo3/vpd5FIEFNDD7est/hPnLl2R2c0Ix54PBTie+x4PsXYku
WQtf7F7gZPTw60/gczP48d4nb8yeTmRfY/UTDFxaZ2kZc8eY7OolHt1JBCYT
79C2Rgesc2Qyd109CYKFI6neWtyDEzEK+9RHU6D8QlkGufE9OIVLPF2Q/gzv
lekGQ9NDwZ6f4vn5b5/hnuYNZmnfD6DFknaboJIB7AaL/5lpREE0r/oRS5NM
+FL8nn/sTgI0ISMZe2nZQNdVN3xxNA142fLKTlzMByNanrN0/30B1sOuvpIV
RdB7kmzJufwF4rKjXz8/+g0Mdf6ECDkWgkDr0qFAXxyHJi2defoVHme0tiwY
FIOhiGyWxatvQJNw1ElzpwQMkEvHyoLKIJXakfnjvQr4XFpBp9hbDdWfTjcv
XquBlJXF9enNH3A1pEo8maMJHpcN9LwJ6YLXvi2uP/F6NhoZmGoaBBHzKPZp
vG5FMcS8eDQGx7AP2VZ4JWZFP/d7OQbSPWSvx3j1rZS4He0/Bk9QOVk3vPL+
1RIszhiDFHX63XC8Kkr5xa9OjIFcbe5+HV6fVDIm25r9hZ6OHDsuvC6PMWUb
Xh0HEWMJQeUr43BuLTbgvtk4cNcOqiiZjoP7QelHzo/G4ZqLxZb8w3Fgk7os
E+Y/Dh/6+EqF/cZB5klAfnvjOFDyIMnj9ePw8CBL0UXlfyBxTs9/C/kH05Ks
2JnTE1BdJB1JIT4BtheWlXxVJqAu9NFs/rkJmNP8VTygNwHNTlacRpoTsHA3
osDTcQJ0kLYIn/sTsBJ/JLWjEP+86N2ETsoEkDllAx4oTkKa1lDWiOAkPD/K
wVClMQkkrt3ZaKlJ2JEl+XAaToJNymlAlSZh73Kxe6nLJDTQHspWwj+n8iU6
0ZVOQu9EEetS8CQw7lw1TiZMgVnh6CrjziT4M8j3buhMwfEGnr0Suilg4eO6
oW0yBVHURaTzXFPAptCnu/JyCiSpU46kS0/BIXsLFSI2BbzPnTDa21PwwU0V
C22fgkRLgyHG+1PAHSBKmByeAqvmZpdfj3FdxvTZQIppuHbV81+czxQcHn8s
Pqg8DX2MrtyDWVMQt3I9VUZvGsKqRmcyvk6BEKXCMa8708AxQH50onIKhIXI
hyW8pmFwKzJPqG0KPkkNRr0MnYbNSZGJ0O4pOKpUyf0zaRqqqQ+XZw7i5zD0
ZHOpnQatGpXqb9NTkHLPKqC5axqoWtQ4UxenQOzJRYYj/6bhHa+ZjuTaFKR5
nXzjsDYNO1fF76uRp+BkCANNPe0MyM0JGCzsTcHnhDl3Pu4ZuPafNI0Y9TRI
5LbtPhCbAeNMlxtTB6YhqyLPtUphBuo2Z0+cZpgG6ZaQDU6NGVB9SKlPwTwN
NciVM3oGM+B2fNReinUaDHMZHwffnYGuzJD7k2zTMC/cmN3mNAMs/m/iTnFM
g2eI9wyT9wyEz1k77+OYl0b5hHboDFhYFOvf5JyG7Ce7lm8TZ+DOZedoeRyr
TJYkNOTPAFtF6+f3uL7X0PkPbfUMLEXW/XvEPg0Pm07zq3XMwB/GjYJGfD4V
YdHAc3gGzq9pusTi+SKzM0OrFmZg+kJe/OT/8x+x7tjbxc/XTApPO4jnDz7O
jDDPwlOB5x19+PkNqUYvPT88C9NT7LXP96dg3jHOp0RyFr7T1C6+w/fn+c/o
+8aFWfg3kd1Lg++X9yY3hYLWLETU9zBOLkxBdmMnwcloFkhLTEdkpqZA5ULQ
swLrWWDiqMvvH5mC3kztoqWns0AW2Xk42TsFDwXpVk+9mYWoJAH66x1TQBVU
K/MwfBa2hobVBBqmQNoB+TxdOAsnV25MFRdMQc3frX8namehckuL713aFBje
KDp679csnP4Cr3Jj8HznZGLHlmeh/jqt7KLH/7+fs73ClHOQxCnbTOuE5xNI
5zJjm4PUFyOIzV08z55w0MCpOUC7t0TZLuJ57P8086FzoP5+IujqWTzPWBSd
4eU5cB85Wv77GJ6njsOzy24OGPpXL37dm4QahfZKjudz4HL90i362UkwTPfb
vvpuDqQ3OWPieybB04/mSWv6HBh+eXw2KHMSeHer8hmL50D1n4zQZNgkZD96
uXCpAceusvpuL/Hf8bX1+/X/5iAghJ3FRmcSpHmnbmFH58HUycxGcnQCat4m
R+zKzYNAUGuMS+0EGG6bdykpz8M00UKKNm0CPIf6LhebzYO0seXCkM0E9CY3
E/Nj50GQ0HYrZ+IfeMrliiVxL0CkPfP2bsU4BATy1oSJLsCnd/fVE8PHIXLW
w8TnzAJE0VvlpeL3ydwU/TAbvQX4OOBY2H94HAb5yJSygQsQ9MtsTtnhLyhQ
qf8pp12EpEvaLlQ0YzDb2R/aQ1qEzfjPVWeq/sA2TyLPOOUSCP3+Or158w94
1Bv8u02/BP8iB9ffLA6C/7Eqd13eJVigO2krIzQISX9CvskpLMGBiAiZKtd+
6Lh2TnTz8RIcb7rxIuf8b5C44EXxenoJGhh88hZZf0LLhPnhhOUl8Edyuooz
O+BRKHqubGsJKmJpi4M0O+DL3NZ/y/TLIB6l+IqesR0I8fbDJhLLQKw/mBrO
3wJD2rrbLqeXQWLkuJWvVTO4b0ryhF1YhkRfFqWdvCaouzap26S1DEfm7nsG
X/sBujSmlQp2y2BB47B+taAelvKU+q85LoOJo8wAwl4PISZ86w+eL0Pe6l74
pEMd/C7qkk7yw/uLvbk90Vowt9GOY81aBqe4H7ZHN6qBilu8RKJwGVa5fHcv
PaiGlJoD3erly9Cb8vY3Ol4FMwI1TC9almEg7AgPfwkGjm3nXkzNLYNsDqMo
w58y4H7OHUm9tgwvbl0y/7FaCsUnSF+EdvF5Yv6zW6ylsOOeO6vPvALDrcb+
bwyLwUdezLhaegX4lcPy2MW/wskR6qeDZ1dgzUm7S8i2EJr8R0M2kBWolXnj
cT4Pf4+YiG2S1l0B9eVebkPtAoiM5LwQ/WgFGNPUjCudc+GC+vKNr84r8Lbo
bRjNxRwYXG573OG2AjlFe7aXhbJBRPvd5wNBKxDS4JuiNZ0BtRv360QiVqDt
Bufd3AH8fSdZfZQQj+ebCYp+2pMOGbsUfI65K3Ck9dZSwHgq6GQMnQn8tgJZ
xgxk340UWDAov/oZw/NcfGCnzJEC8nlPfYfbV2BWim9I2TQJyu8sbGgvrYCR
ufXhEe0EmCKWOA5urADpuyDVjEY8cB3xXnywvwKZJmyWGtQf4dEA32QAyyrY
i0YUB0THQHTJ+B0h7lVwo6w4tPQkGhoicodyBFfhqQ4LycU4CoT11XvapVah
882lxHXVCNA5zaZnfmYVespPSthcDIdnbAOtS0qrsBtJqNy99gE6W+zr2LVX
4d6hjaPBXqHgpR5beN1mFagYuYViLwVD3rH7suP2q1DvU9pQfDgIBilPZzm5
rEKf+AeBr4UBcKayIenDm1Xgi4v2MWPxA/PYkCNiQatg1xH5Q679LQS4msQU
ha9CYVcz0hjrCxMKqyG/U1YhIf1XeMJtH+DgqmSxzl6FJMmIkzy6rwFWfd9t
Fq7Ct/aPumVa3hCZK+TJV7sKS567h5mtPKE2YHr3c/MqHHxd+4bC3QOW7Qqf
Xfi1CpFfepizU9xB66TWY+OxVZCV1NT8zOcGzge45menV2E16Kz55ZgXkDQ+
bP1ieRVo+GnDMennsJPwxDyOggSoqMHpKE8XOPmKOChNR4J3V5z9OlSfgr4J
o2ElKwkqXmn3POF0hmy+T1eGhUjA3buZ93vAEfo37Jr/EyPBsZJA/te/HOBA
j4IGxSkSXF05z+b5+zGYhrSgIggJeH122p9S2cM7+4jSfDUSGBhYR1BeewTf
dO8oqOiQgGm8T2Y1/wGwMW5KWxqTIMVcaOhgrg0Qpms+r94hQeKNPlmfS9Zg
0xAg6m1LgrzRIcPotXtQ43VMMOUZCUhSZhE+r6xgwWIh8qwHCfS7/v23ZGwJ
AsSSQ/W+JEhX/nCTU+MOOO3oMk1GkIBgP/d8/qI5JPTz+T6NJ8F0uijWUWgK
rcXj1HRpJJjoN06/SLqNv6+4bp8sIkH5lMA3KDYCvevqT0sqSEATxuCUfMEQ
3OTYVi/V4bh1fFr7pwH8nk+Zse3C98FHNI5Q1AfhpqjCuEESVHrMHX07pwe2
qQFuHeMkCNVZKForvAZfPD00qedJ4Cryfqg76CrsmD7hUFgjQap2cMDtTV1Q
V7IZtN4lwYXEO3JCKzoQyGOSGkO7Bq4UwcdOMGqDcIfaBUruNTj+im1CL0wD
bLLO0ZwRWgNutzRTLcqLUOAr1XZPbA3UFzyWZd+owbaVcGTUqTWYzNNHE46r
gpryoTstCmsQM97ortqrDAGCdFL7KO7HffhPTwIRera21+Q01qBrx/HOZTIK
1gV/30bcXIPyjqRKUu8FyA/8fb3JbA3GUFvTWvI5INs2C+7eX4M9BhqtaCVF
UNXAJmXs14Cgow4fo87iz5Mv+Xdc1kCR8s4uG+cZ6N5Pff7BfQ0Od2ac0E49
DUKD0eqNvmvAoP5CrvyaHOSHefZJR63B1cB09r4eaSDbOyeZf1oDp4gDspPZ
kqB22fZh6Oc10IndUnbLEIcAcVPF+vw1WEhWfajadAJ6aPUot0rWQFPy6f4u
gxgcGVNvlqxZgzBrgeoPtsfBuvL8B9OmNRAuuW7EPnkUyM4i4rX9a/CaafGH
mYwwqF7nWl0fW4Ob73tvRC0Kgr8MfYX47Bo0NnDpxWUJQDfjrs/t1TXwusv1
bjSED4Smlq4Gba/B7PmY9fR4HrhfO85fQ70OyVP0Ry06uCAvoXecxLgOav7N
f+KPHgIVoyqXW4fXofvb49Tao+zgd7ZQJeD4Osj5StDzRbFCF3s6U5XUOv6/
KM7i7BFmEFyI6Vk5sw4ZO5rrpl0McK8pKEEUWYeVhwf8r3ylg9xUL1tD9XWY
cxyvXa88AJueT8/4XV4HhYpRyqcLNOCnZNa4ZLIOFw+siboUUkIXz/WQY/fW
gffex1iRixQgRLp42+DROmTF3aMdmdxF73dcEHvrvA6c7h87vjzdRvOyTi2V
ua1DmmL8zLLiFrrle7R0wWcdOkdyvVlFN1CVu9zeIkHrYFknEI8praFdgns8
b+LXITFW62V13zIqSF4eLUlbh5wp9QJ/4yX0Xs+/zLncdSD8F3Aue2MezS3o
e3KkeB3cTM0JSfaz6GZgK+hVrUPNoTcxXwSnUWW7avrXjfj5xLVdxskT6DuN
r7++dayDsSpHmzfNP/QwRdx9wdF1yDzE5BwfNIoK602OiE+vA+N8YUQ9+wh6
PFnulsLyOoTwMnYs3P2Dnlx//ktlax1q6wrnI0b7USnNep0rlBvAf8aEhjuk
F5WNZqs3pt8ATZPdkUuOPeiZuVtgzb4BlZ+D1iw8ulBC8KKch8gGOL1nljPh
/okSx85nBohvQOe65eMJ6XZU7Yz38Wi5DZAtuHor7L8WVNOnLS71/AbMH7WM
C5/7ger08vJ8Ud6AQP4kx+MJDehVCctg7NIGiCqfTe58XYfqv8imb7mGz5dX
7PSP+o4atm149hptgJFknFLQ72rURFhlZ9xiA+IDX42ZE6rQOw7+T5ZtNqBN
9+uZ2LcV6L3anoXdx7j++e5E/UApasstYs3gugE5B7R3f9oUo4+s7Ua5PTeg
4/dMfdmpItSh9OutY+82QH/f9+2UaCHqzETRJROyAT9l/Ab4tQtQV1Oty4Ro
XM875vMgOg91ywur10zEcd3330HCOagn1TDcyNgAu5g3377rZaI++uIlFgUb
YJ5qWH+/Lh19l+p4+lHpBkQrl5HnHVLRwM2KTNeaDdB4f0MPMUhGQ7ToRN80
bcBC7mhBum0iGh6r9zG0cwO0Wg48mchMQKMXYnkS+vF9XKMQYpf6iH4kTgZn
jW1A+s69lBmtGDQxRI6hZGYDBPwcHlZnR6Kp48+96lY2gIKyGvXXDUczFOp3
fpI3oPFtFNSdCENzfNmch6g2IbZlW9/sTAha0H9rcYZhE6SOPdAr/y8YLZJK
sd7g2ITj2nVdGpkBaKnb4ii1wCaMmFIkOde+Qys7zhuzHduEMZpq1u1jvmjN
Ue+uw5KbsHKz7qn199dovVPbZXH5TWgJ0HQZi/VCm+p5G84qbcLtWecBtkwP
tI3XkqiiugnXy1RXTna+Qjtts0t0tTchPvbd+lbyC7SnfOO08fVN4JY3nXar
f4b2s6hk3TfehNQYscfGMk/RIXN/USfLTfB92tc62OuEjhX0fHS32wSFMAJh
ttwBnaAR4Q1w3ITCzIJ3O9326IyB3fuo55twRUcikhV9hC6kf2VI9doEReYv
nCQxO3SFvO9V4LcJKgKE3zdNrdF1Ha3dytBN+PDSxTFv8C5K/hjm3ByzCQtp
ErfEYizRvaWhxd9J+LxbRSveoRYolaq4zXgmvr/QBm5DdzP0wAfHsaUvm8B8
mMhKe+42yjBZYbxbtgkar3Ytu9SMUJbzdN30tfj+wl6fs/logHL46elyt2xC
wt1nY3KIPsr9J7bhaNcmnNOKuHeDXw/ll5kkygzi/XcL3RJlrqJHPORKlcY3
wctJQJtiUQfNobEJrZjdhOHri/ynmLRQgm/CA1jF/T5KnuV5rIE2MfaqV5Px
fboFBW5yq6OGQaxHVKm2wJzCkD17QwWd4NDYrKXfArv3Ht/imZVRp3C3nxfZ
tyBkfyL0ZRqKUvEXZTTybsHMbKT7yDslNDhu3ktLeAvqqZfUWSrOoUIioiYt
J7bA9M/QQ0cFBTQr+baCrswWuFjZGMstyaMXToaxdijgenr6EeZxOfRHZvPU
NXQLcpwoHayYZFFDGeqaX+pbsPdaQlauUQqdKLgQc+MyPq/EbYOjVRx1UnBw
+q2/BWMDDAjzkRMoVenny0a3t2Anp/WsX9FxNBgZFRuw3IIpXRU03/8oKlTN
S2FitwWlHxIodGKE0Sy1q31DDltAW6oT4VEiiCo1vikwd92CIiei+F4EP9qk
jfmNeeB4P0h4qpEHNWxft7J6uwXPrOXKdlS50Am9U+hE8BasXLzp00DJiTr1
3OWxjtwC7oskn8BtNpTqVtzSdPwWaL53PeJhwIIG/+n6YZe2Be4JRyuauBlR
IQumpPmcLfx52x0ueIoOzRpXffFf0RYEiRv8FxFKi16wfn5juWILDsnQdysC
Ndo4W3DKsW4LGNq2U5rEKVGD/2YOrrVswVvHoca0qD3k34rIqHPXFlw/n1G7
o7aNODkblW4ObIFQxLFr3NqbCBU5ONT17xY8/1Vo/TpxDQl+2fhgZwa/HuTq
J+0qq4gQJcVFtxWcvzLx2eD4MpLlrXiEgrwFnAWjRm/cF5ALdP9telCS4TVH
YdO48CzS6Jf6k5qeDJu9AlOY0BRiwDqU8ZqNDMkt0h1n7P8h4yFc3gd5ybDX
3FpiyfQXceC+bPL2CBkO9d8QNJ4dQSiivRUYT5DhnUfm1VXGISRIsJw14BQZ
VmMcM0sz+xGhT6tTLApk0Kl+ZBWX8RvJOi5ZE4yQ4aOY9j+TvS7kQvqdGA51
MhyfklTtjutEGiWjncJ0yCAVM7fR7t6BGOT+vMytT4Y4VBldgVZk/DT9iUhj
MjiMml73m/6BOBQRKfgtcT9lX/GClXqE8oJLX4wtGWo+zZmtXK1FgityCwQd
yJD2suTHErkaEVKe9It/RobFY1EPKzowJKtW6K6IB34eqYoDb46VIxc0DdAk
XzJobNxb3RwpRhqbA3hEg8mgyXRHXnn3K2JwpW4pNYIMEpYr450PvyDjnTs/
TsaTQSuLyVlFPB9xMDiTlJFKBj39i1eMdHMQin67F1I5ZKj6qMekVpWBBJok
3cj5Sga5hUyL2eg05PBo/ynZCjI475sovepMRjKtOOgKaskQc5kxJuR2ImIw
4SDT00IG4dHb7JXUCQiF9S8DchcZ1PMsz0TNxSCZ0/JuQn/IEJ/+9TSPQSRi
YBeWovKPDDNVqKKj/AeEcp7Ucm8ezzsQyXrTOQTJenSD9G6NDI/62vURjmDk
5tJXgdxdMnAemMkV3vRDqBy4VX/RbsORuIIm0nVfJHvV2XaDeRsKZp8GHTjx
GjF88vu9APc25PFHr76444lQbSiWgNA2DCbmlv9efoVku0SOWIptw6uCvtNQ
+RwxJG8e9D21DcqJGlJ+XC4I1QsjmSyFbVhwbaZtnnBCsndLDDrQbQjhsLD/
IOKAGL7idyNd3AapZ2++BTz+D6GmfJ7Ce2UbKDsRIwFlOyTHc6CFcHMb0ocs
80Xi7iNGNASSudk2xHdfGjruZIXQ+MQKvL6/DY3B0zx5hRZI7sFdlc//bcP2
WMy6UYopcuutiW3r022IWvukL+l1C6FhrHy//GobTAd97UwXDJBcf6ESLt9t
4LO1v3G28zpyi+XVyPngbTi0pW/SJHwNoQkePmgauQ3rsorxZh8uI7nsRBnP
hG2Yk6V+QO9/CbkVmmCQmr4NP17pcVIzXURouSjdmvK2QeZdBeZ2UBXJC7dI
WSjG8xtWMq3fJyLGvDUtHNXboGeVk619kYAciD5KUvixDTzzr+KbLc4h+QJe
AsY/t8HqfDJLB+VZ5HbcX5VXfdvAHRHb4cZ+GjlwRM02aXQbzrDb3uAWkkHy
E5LfN0xvA6cie4FRrQRy+yhtyezyNqjk8zmcZzqBHEi+O8JK3oY/Pg/Ym1qP
Ifmi9QfPUO3A2qb3x2k6EeR2mpiMIcMO/n85+7oGCCIHxd8YvODYgZ8x0Wot
h/mQgozJlwn8O/j9+vPh+95ciImUZkrt0R14VEHHM/iaA6HLSW+ZktiBzdK1
X9OFrMgXGXoSk/wOPFfOD18TYERM820E5JR24MrDiZ/2Nw4idPJNKjdUd0Ds
UfUnLSoa5EuhhO0z7R2QucdwfFCOEjFV8Hsfd30H7kg+0fz+eJdAVzxbXG28
A44C9iOF6luEL+d1Rv5Z7sArf+toOs81gmlZ1kGGBzugzyX8rVdxhUCPMMuc
ctqBx6XvKFjnFgiFlQ8N9F7swNeqeXnu0BmCGbHtpbP3DvDpB3AqRUwQGGpO
pUT770CjDFdR1+JfwlfVoJbKsB1wUM3gaBsfIZjXLa6Oxe7ArdW4JMmfgwQG
jasCB1N2gMeu5+Jp1j7C18Y8FcnsHZA+2DDwsq2LYK7FbnvlKz6P1Sz0y+xP
AkPL4/eOFTtA/cFOqMeglfD1cmdxRN0OTCNPqJJbfxDM20+PlLXuQPKvNPfz
ZXWEprNtCwuDOxBiOvrO5BRGOBNrsysytwN35RdLKb58I9hc+eZdtroDSypq
BS/hC+EjFS3Tje0d+KS7uXC9PYtAZ5PA78uwC4eeWs2HU6QSkMMLn0Q4dmGC
RlvdjvMzwaFdSbyMbxcCg9/H5xhHEwbP/lZcOLkLp96mRLHafSLkUbHc0NfY
BduV4Sz5oGDCv6/Gg/O6u/BO2FFi634Igd/ms+Ubg1244GzOKrgfSvBuV3Mo
vbsL67dMedr8wgmGsc+DhL3xeR+ftfvefli+f3b6x1zVLtBed5e5Fnq1/My0
wjWfxl048JzEeVFFp9w61rv3SMcuGDVU+EYd0izvpBKe1BvehfKo0ezyp8rl
qe0GNCW7u/DWqfvue93T5bo2tejrC3sQZfc7+noDZ/nH2PgvgoV7cDHwvc/R
2O6ywDrVmeCyPfDRYzzXqdFZ5rYwKUzzfQ9u5kTepZ1tKzMlygbO/MT5VLOP
n7nry4TGq6y/Le6Bw6mr1FZPisriJMcEr0nuQ6zX7vn9vvCy2NLjvt6J+/A+
2r+wUd6g7PKcfs4TTQoiZcGuzAfljtKR1i0NMW1K4ov1AcVoxuCSbyNqw54E
KqLscd4LMXSqxce+5SqJq1ATqy9bygs5FRX9qqz68FyBhhj5IHP64PTRr39f
JvRTi9ESJ8VvjQf4O395Q5Ew3i1+gPjDdu3ZbRavfPtC9bnrhw8SfcsvHfq4
FpS7IMlYInCMjhgWmqThUK2T3Xwr3p5PlJ440Nt58O/TpYy50j7R71wMRFTj
y5/qc9HpiUPyCUX8jER2hKZTNHcxJVb+DK8BCxPRuTXGwzrqStIaUD+X3GUi
XjO/2H/0UmzCX9aVRC0KFmLZe0umfBu/OC72N41cKyzEkTmC0ppDYHSg4rHH
l9dZiDzlnSeV/7hH05lifK/JLMSNsww9ClkO0eSMDVsSFSuRKk5Nc3nQIHpI
zZr5FycrMZEtsoyeWSQ63eWSXvBZVmL25dMlTR8KoggjjIMMz1iJZi+zWTxu
dUV+PZDurfKSlSjbwPZxEqmPPCWtJu3qwUo02jMt9NIujhRxfeE2/ZaVyKik
J2ewGht54NC8cGM0K/Hje/w1w9EqskOj7e7rclbieJQDi/L+asSlR7YsFVWs
xO99rw1vF/6LqAk78I1Uy0o8XKj8Xsn/d8TXUZTOqpWVOMBScykspywi+nlu
hsoQK1Hujwpv20GvCM5E7euuY6zEiODo+eEPThH+jZPb+ROsxI6g/DRmlXsR
blzCl0UWWYmzVWpbR3cvRWwola8ZrrIShdN3VILYCBH2dww/Bm+wEolCPoeO
a5+KmPElXWzcZiU6RzhaVt4UjrDMDV7c32clXnV7VSidwB7xP2G1B70=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1:eJwUl3c8Vf8fx69rhJaIJAlFkUoqfOOc9yFFIrJlK4UiWZGUrJQ9QwghZO99
zJKdJBlZ15a95+/8/rqP5+P1er/e78/nfO69n8Nj/ETFhEwikeJoSKT/f9bp
8/Tv7u7iglVnb1ZFiki8PCGhYL+2i89ZDGl6m1yWEB9QK56e28X1wnd49+qK
SqQaeQX/GdzF/5twOkPXd1Ui4P6sbG7NLv7d60rLZf1rEnfNy7MevNnFHfS3
k7/vV5OYsdN2bT6wiy8UvVFjO20nweYbyPfh+A5+8aPWusf+Agn0cvVgPPMW
Lrm1h7o5SFKyzyEpXkVwA6cf21k5b/267HKIas5v3g08luZyr1GnWZlPJqla
9xjBMS+0ux+aSEqO3h18sG8DNxVp7Hn4wL0sUvUgt9PMOo51K3tSxZuVaZx3
iP6Us467eOA+4/7mZS3DN8OXrq7jhvPkL9ofwiT5d1c+O15ax0kneufXc4wk
nTkSCnfOEv5fjyPO3/aUFLqz00l/nMhrVkV/PQiUfFeRw3p8dw0n+XTFi4cG
Sd6IOBZ8vYZgf1VPoe0oyZi8+viG0jXchc7v5XPuFMnlVrscpbw1vPJOvTWz
RJxkAl3bD+1EggNN1wZ6EyXJtu5Mlm8IFkw2eueaJnnX/yL34iuivu149Pxu
mmR26t8LDg6EPvSmiYY1T9JwUFzJ1Yxg5VKGfKUiyYrb/3zDbhH9UWZ+i+Jy
yfVHT5Ucr63hGBNFo/lfmeTlt8tMuhKEvnJJRMq6UjK1ZjuY5yxRL5f7LJ6n
VnJk4LU6zUmCV1uSzKq+SnLv0B4Z4yD6409wPr9vkqHiByLTGAk+E+qYs9Qo
yWjDdtx6YxWv/OR7IepYm6RLOles2CTBrSL3IrZ/SK6M8Z/c/rOKu4RINaQY
/JJ8zHshqfr7Ko5NbeVo03ZJDumKCXgVr+IkgceN9mW9klrvIU0xhdBPDRRV
ug1ItvyQvcASQfDv6JaS5mHJa/uUc7q8CBb8lDGrMir5UqDDptSF6PdyLco0
dlyy6IbWlRgHgv3Skhw0JyUX7/WuuFgRfg/jrvGqacnzrw2L7pkS8zzKlp6R
mZE0i6E43jBcxQemKrc2X8xJJpSaSghoEfzAQhbPmJfkWLGqmJEl5qtJPnKz
YElSnWX51Q8gOJmUPyO9Ihkg7CiVJ/b//s7itm2rko2K2+T3FwjOIs1y/lmX
pHv0utbxNNHvS93a/e+bklJetJ66J4h5rpcbjLdtS75IfCsLR4g8g2A758Mk
pKB6PwPvQaJe5Oiahy4VMt8f2ECzZxU3bJRu31NCRoS2WX2IrwJeiYZlRQrR
IA84IhUbVlZwklPXsloJLRInxnUwfWYFx/gEptSl9yC9avFt/qME+38oLb7M
gByx5g+y/ksw3u/3bIURUfFPVVXvJPIaCtP79uxHfNPOs4q3ELpqYSWLxEGk
/ntOJ8fXFdzlepvSryYmhHpMNHy7fAXnfnJJNfcYM4LSlGoP5BP6Psm4ElcW
xIEHjtWkE8w5nm1MYkVy0ZrexESCq2x9il3ZkBkd2RivaIJTD3Tfk2ZHzjg2
GjwKJfpxKzn17+dAYnJ/Dgl7EHz3u1kEDxfyp00zgcV5BTd0v+LKdJ4bOTzT
Y7JiS9TLbzvPmvAgSnsNT/95TKxfgL9SO58XeXeGMl56fwUfGNB/84zrFFJ3
3TQ1RpfIG0lcbYjmQ0j3ph+9ViN4LfZ7zZXTiF300swNGWL9e+Vk97YIIvxv
vZXzJIk8NSGOO6lCSKctbw7PFaKf1ST14djzyBvDYhb/c4TfxyPPS18YEVdQ
ttviW8Fjn5cYJ726iIyLjXWacRF+raK63/kiSMTJl+K/2Qi/d3WMwNYlZGPj
y2b2HiL/0xWB462iyJdRab0TJMK/aPAv3lAc0W3/U+Gztoxj7gWiMfuuIvsq
rLg35pbxyhE/tic/JZDylD2uDycItrr78Uw+gliGxgx3DC7jLisNF36WAcL1
+sp16e5lnCQ1zJG5gCEuWvfojzcu44ZW8jL7VK4hF2U2zN7VELpy8/sDsTLI
0IXAxtVSov7ka7UKmhtI0LEz50zyiHy8sULxtSxybQ/u155G+Bf8q1TYbyJL
C+pzkEjwcy27yHp5JOHv9J30aGLelIQK31AFhK6Ag9XLj6jP/h6beF0ZKYzL
tl/2JJhXjZSrewcx9ZXrMn61jMeKcFzU91RB2B37/2t7towPDFtpiNWoIt/v
239ArIh5FrvrdQ6rI8+V92+nmhL9bjxRSXLSQAQlE/TZjQieV6z33tBEfFja
eRbvEMy73yL+ug6C7Jq6GcoT/cxg+hGLHjIzuUtpliZ4z++PziQDJKYz7IaE
BDGvLu+mv6cholR9Ljn5EsEv9c9oRxshpIxaBjah/+9fzeKnr8ZIVoTOI7dT
xHwlqQfVqe8jzE/fntdnJfICVaMsSh4gNbrcAY37CXb5SFcpZorYyhXOi9MR
PMtfTttihpy6fFs1aWcJr1xRrqt1foT8OjGSx7K6hJPqvpGcb1ognntfsL2e
JVjBgm/h4hNEdJXZYWZsCR9oPbNzNtoKCW/BJL53EWzIJrDw2xq5WfI7SvQH
4RdiGm1lskU2Ei13Pn0n9BM3T7/Ts0NSA2kND1Uv4bFfVi31cHtExzmq6mUJ
0Z/3S+JnMQdkn9mlk9M5Szh2y3TI8psjUqbW4K79heBrNrU9Vk4Il9Ca7OUo
guc1KnhYXyGtR/xT4kKIfo43v3e+dUFcqPn3HvQluH/12L6I14jwbNnjFx5E
fsEii32xKzLYrdoy4byEG/qo2SRNuSFBXycvaNoT+ub91QMXPRDpnNeBtZYE
z2bb9L7zRBLeZqp9NCDyPthbiLu8RcSfHTc11yTYRNzzhrQ30nTf2+mKEuFP
1mQt5/VFDFXW/UiyBPuGTL056Y8swcP4RpRYr8f6/MNPAYjXuV/5YaJLOLfJ
w1GVb4EI57Fr343OE/rmcZP2nSBEZoVrbvU4kf8cM4tKD0W6hn2oa1gJ/qTD
WHb6PfL4xwab337Cf+ehPE1pOELCTQW1aYn9kC5z22sWiYSkdSKnthfxyo9r
/CGXopAzkTJ3ZpcWcZcXPbIOnDFI2Zuc+yXTi3isauLdTuZYZMTYz1u5dxHH
xH45tSrHE+d5K+ZYB+Fv+Fhv4vMJOYCa54w2En6hDovC3gQk/mxXXXbNIm4Y
oCN/4loSInr0xp8XpYS+5ee1VfkZaaDLm5bNJThgp61JMwXRX+IhsXwh5rE9
qXKW4Qvi2brNnxK5iJMebiyaVGcgHOWPrtoGEf2pSr5tPchCMlL/KMI7It/H
vhB3zkakw2WNGF2JeTK4pIKScpBOj3zbX46L+EDBhSG/oVzE3OakV+xToj5s
RW5BJB/ZMQz88MiM8L9JGCdFFCD8khbVVNqEv+Tl8/QvxUiJQM+vJmVinlDq
j5hOKXL7yM2J93IE65QG2fKXI0M0hVvGGMEvWmOpD+KI/cIppvPiRF7Zt5N6
3pUI40DQyfULxPxGHfnfPlYhMc0ksdrThG6AStfVVSPfknv17h4h6j+nPJ+Q
r0N0w+Sf8h1cxLlXj+21TPuKzLkVuc/R/X8/YsblT9Uj7k/5w0t3FnCX5FC9
7tzvCLtByBfPlQWcRDrzLUi3EUlTION3ZgjOyNak4m5GsKtW7ZyjBOscVa7e
bUFMWRXWc34t4IaV3x8m+f5Atsgl+142L+CVnLT4o/R2JGDuNPfNOiL/tCb7
yf6fyKm/oZcOlxO6ffLk4MlfSFEjtWx/HlGvPne3+UUnolD89G5q2gLObbcb
wj31GxlI6rewSyD8jIu7PFZ/EHrX0pC9IYQ/NDQLr+lFop4IJHd6E/k2E0pq
oX8RYb33pXFuhH7tUcdXqQGkVp629bETMW/sGAeT3CCiJW4zJGZD5B/73WCh
P4RM8w0ukx8RurWz4S+PYcSFRYmhxZjI2/TllMcpSMqMoPB9FYIl7qdkPR5D
XB9Ih6jLL+AYh8LQXM84ovtXe+2GNDHfglXoQaNJ5ECLV6WACJF/2+4nfc4/
ZOx67KljgoTfdishzmUWqSwv9NrHu4DHNgt/vpU/h1injyrPHiL6v7ZUdGpc
QG7x7eQNMBCcViF0f2YRORXNerSdiqgfyNC7z7uMdPrIDObNz+OVF/lyoqtW
kUwa3etJE/M4d7/R8cXz64jXC5uU94PzuIvl16aI7A3k6uP4p89/EHp6niW+
uY2wUIp/Pfo+j5NOUSd11+0i0zo//tOrIvLeSFtK/SKhMbdIZCx7Ho/9sTJe
RSGjz2qOPLiYMo8bhuc5e1PToMoSFxp444j63zO9nSK0KPVZ/SDaQEKPeKOc
/nUP2htvt7LiNY9jN5SXr5xjQAs4fO+OuxAs/JUXSWZETRnLeButiH5XB/L0
B/ajUq4/PctMiX4ec2PTHw+iHBuTk+mGBMemKz0tY0KbJo7mBigT/RoTl9Qr
mNFEo4tHXOWIfiasyVK/WNCXf+ScbDBCT65dGNk8jAp/f3ZNQ/j/67vz8YfT
EZRByv+z7Bmi38x60UInOzpUlLT3P+55fOCMh83r6xxoaPKvn8eYCF04fFXA
6Dhqyf1PbD89sX89K4FeTCdQuXCaqJ3dOdywm3959hE3uvHm0v3B2Tk89vrG
zm9tXvTnrnx9+9gcjk141T0zOYmmPTMWqu2fwwfM2tJ7Xp1C9R8GLiW1zuEk
w8v9Jyj8qFh/slb4NyKvl/F5zoUzKJNmZdlbnPBnVQ9Y+gqg1Tdm3R9nEnnp
C7tybkLohwq6Cb3Pc8T9k9XN4fh51FaUS1HpI6FTtr6sNF9AT/Mrsor4z+FZ
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
esilXvYRfbHPYtk8exdkwsrM9RVjUF39fOM7lbvQzZu0XRjzAVV4ox1R+41Y
L9OdzSK9SFQya7tVrHUXNlQuG9QLRqCc5BsI199d8JL/cqh0Ogzdd3bSJnBk
F6Rp/ua+HghFt1T9Umn+7YKos9Es50AI2pvYeWRqcxe2Vw8Md5CC0QcPkdOZ
VCSM/3OYFIknCP3r5F9tSkvC3FwreY7fCkRbEi6t9+wjYTQ/06vW7f3RG8Ue
IaFMJEwwqffPKJUfWtH8+4LSYRLWI6Oz5R7tg2asOD2oPkbC4nTS+beo36H8
e1uoXpwgYZ+9B4qdmr3QmBPc0VdOkrDBf9NdawlvUD+52p/JgiQs1nyg2N3J
A6XTY3tifJ6EHVYa+/vE0R19+dSUkVOEhJ16JfqLyc0NtYzcJ+X/HwnLP80e
YlH4Gh3N0O+VQ0gY1b5k30uDLqh+TdYzshQJs60dUag57IIqTqtl2MkReSFi
ONsFZ7TjVamViwIJ+0N5GW2T4YTeZeG95K1MwljllPg3sefog6uzhbFaJGzJ
zLN15MMzdLpZ/fkXXRKmdcXILtDYHrUxKpMsMCRhGVNcw6vidqiL19uqRlMS
tm7i0jJ/yAal45xz63xMwmpsa9aOslijPpkaNwatSNhI3qgdH89TNKLzZOOK
AwlLMPE58LPaEuU2f+dL5UzCNv7FPJs+ZYEmbc8p7XtNwvxC6wqORT1Cc05V
dPC8JWE2se7xcXWmqHjRqfdCviTs+OFtfkb7h2jFLW9tsUASlnzHmOWL2AO0
0Vrrr0IECWM/WjFzZeoeqkKHx2pGk7DJgKn7b3uM0a4IvnvGcSSs+XKd4dgf
I5RSuTD2LIWEvRwSr1jfNEDN1bRTXdNJGH1K5sVmGX10bgx/7JtNwqRjtTde
JOii2wd85+OLSRh+5WM15ZM26h6/mJteTsK6nr5zcpTSQhlF79oXVZGwjhi6
zPh5DZRN7/Rm83cS1sj4q3jNQw2NmvMt72omYUcE+L+YmKqivO5Lr4Z/kDD1
2FaRUW0V9MKXKpr1PySMkblFie2hMlqAnvlG/ZeEdVIv92eSlVDJdr+3B4ZI
WID7QkqskiIqt65z4NQkcR5lM0Taz8mjLT7VbednSJiw4qPJ8jI5VJ1bIPi/
BRL278vppEcGsqix7MoRpQ0SJhV66AapVwYd79bt1t4hYU/WZ3dIeddQS8ua
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
dIh+09b99Wo69X+eKLgN
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1:eJwUl3c8V/8Xxz9mRsNXQ0ZGGRmJSJL7PjcjEiWV7GggUUKykpXIlkJGEpJQ
WZFxESWUEbJ97C17j9/9/eXxfJxzXud1zn2/r/sRuH5P5xYthUKhYaBQ/v+3
0kSgZ2triygdiJKXZpLH3PlOaToubxEe+nxJO8VPYvLUywUT01sEPmsbaqKv
gKWZ+T1v690iKJ6M2tEDitjNg4kU7XaS5esTGhDCDvQX2nxvJPPh/euj7wAL
vflPLfvbFkGlYTi0duU0dlaIOVe0iNQ/vSnpIKiE0Q4dPJiQQ/bnf7wRtqmE
PbDQXQ9M3iISfnL2YzUqmORh29t08WQ8o93wdYUqNjLi3+L8kuzXESjt9+MM
ZmBV/Mn8Kal3337s4JQ6tlv874Gux2R8KuTu3f0aWO349LNLTiRfE6nL1zqH
gY3gLfw26e9b8Z3hbi1s+QhqzDMjeQ3FP1W6gGVNXYUjBlsE/wFPJm89bUzQ
NoCT6xxZv/18hMjARaxLKtk3VJn0IzfVPZ2rg72cKZljVNwiTM/HW9WEXcKY
7Wd/zUmQ9bQvR/rMr2DlMttPWQmR9foJr3Nu6GJu80Kp1ANkfZXKOqPVVWzq
gb7Xr50kXyU0tV/pY+/k7P8pbyPnAVVdk0oDzHQp0Ojr1iZBeYVFSq8bYn+c
SuXeTW+S++OxLowywQJPtr89MLpJ4B/oVk3Wr2FnVufYInrJfPHh4Ox8Uyzf
VWTco5HkqzucXqtex+4rntZbqt4kSiUoX2i4bmBiGwaVNt/IeuZfh7GlG1ic
e/BrgxyS6Zj3qNXdwrw8Fy7JviTzu/dVetBbYaeUdpWlBZN6l/SozlJ3sHla
UUmBp2Q8XsnP97Y1ZuFjxLTTiWTR4v5p+nsYv6rjAx/bTcJ0rDf+jKwt1s4Q
2rdqSerfS9Qzm7LFNJ9+KxrW3ySojjzJlS52GIN6l6iJDsnZfrXLWvZYCdPS
yyaNTSLBVl/3ppgDJv1M7H7ZKVKv/2RuMcURG9NQ6T4hS+6D3tL3xJojlsRq
ci5TgvTnvpZBQ+OE7QsKE4o5QHKDmryrpAuWdcFL5d5e0h+DtKbrfVfsArv9
DeUdJPsZZch+c8P8Ii+/GV/fIPAr1NKoyMeYkIFqKTG/QVAPhRQXB3lg5Txy
Pc8nNohSt/BH1Xqe2NobjgOKnRsEJXa68CerNxZ1k0mRrWmDSHjXoxA5743J
iqwYDNSQ9cIp9l4jPtjd9PaowMINgl9lXjNm1hdjuVfzxTSb7KfMY6rI4oe9
ky5qkf1A6lWUx4RK+mPUvLg9Xa9IHn2q8DchAHNzDpb5HL5BeLBltS3/C8Q4
FR/rPHlG1vMwtBWcD8Z0ykxDj7iQjGYnC+NDsX/eFz/S2JH1tBsyIRZhWOAZ
pd/Nt8l41qEXoSfDscqaQ9vd9UkWPlzGsfYcux68R1znIuk39codt/EIbFOb
QUP4LDkPX/fCytALTL5l6OlveXJ+q6nxAUoU1hT1NyVRitQ/oSL7hD8au29Y
Vel4mNT7stPUROsVlkZ9T8e3n2Rij0VhfSx25u2rg3O7SGbYbfbscDzWfyvg
9I9tZL2Tkzp/6GuMZ9z68b2ldSLhA/3offU3WEGGcbzyv3XCQzXpB3VvIqZr
e76YY3idKH2EPY6aSMRCFo6uES1kvL2HNupLEiaRz88V8XudoDJtePxIT8aq
XP47afl9ncB70J5dGSkYLWXOkS2P1LfacZuoT8Xiy/tfDGSQ9YvW1goL77FT
T5py8pP/r/fo16DwB8yBJW/W9MU6QblS8mUsOwNj+5Xy3/Egsr9DDKcf20cs
IyRSivkJyXpfqdfRJ2xoj/Pdzw5kv43Ltbe+fca8/94OemJN1ptm3WR6noXx
vzJI179J9qcXrR66k43p8ymO0Vwm/RpLUxhP5WKLvRLMLedIPa77RgeP5WHh
SQcOpymTetcEbE7IfsFqRbdu6cisE6YKodclDQswJFvem8hO5qt9ZhlSKsG0
KysTaFhJXtgt+syPwG7o/rxmSkf2v/dd+YdNKebnVN91YH6NKI3aVjXYXIa9
Ym6KdZtYIxJ2JOb+96Icy3j117BjYI0wtR2Z3W70DWss6m6Lal4j8D8nr2fR
VmIDWn1RS7/IeFmCHn1/JbbUPXhV9/sawd+ZnG9X+x3joZls3v2F1He9f1a0
qAozV11rCI4i6+ciPQc5f2FOLZuhk6FrBMWYelTg/G8swIJWW9OfzL92ZrUq
uA775M/8m9mF1NsxRv+JuwEr59oRZGm3Rnj8ad0pWt+ANX9g0/xhRcY3sq8M
BDRiq784qn0MST+UFBsFriZs+zVu//5LJBdembs/2YTxTfOqK2mSfLytgutn
M6bCLvx9S5H0c/t0/v6Yv1iwrmy5Cy/p51KhYFl2B5YwfMKzbR/JD/UcnZs6
sWynU7j8LpLfCTG8pXRjra+USha2VgkK4LOBiIqNiZ95dHl5lTyvH5PEhqnY
RtFZxexpkgt0km1f9mIHe7S/2vauEqbpxpc3mPsxWdvLznVtqwS/sOWb37/7
MTUaPXnJRjIejCPjmAHM+tC1vPFyUl/hVmu/5hCWZ2GTZZ60SnjkJkeFcI1h
Vcu29ytjybhXmOZx4XGsw99BSvDFKlF69JvqWcUJjJLumtn7ZJXAbywF6PpP
YezYYxvcncwn9L8Ilv3DhH57Sbx2JPu9Knvv6zWNaUz7pxlZkPqmLwo922Yw
I8+g24XXSL2S0GW6kFnsHnvYYS49kh8f3Pvs3BwWIRuV8ledrN85m/epfR7r
ckpJ1BEj+9GzZNzSX8ZkIy5l/T1Ixg95iLNorGCBHynlRtzkPj6l3/uivIop
Dhn0mm8n/WQnMHlcWsciaJhmxulXCaru1mUtqw1snCeXcn9jheAvvszhG7CJ
vbq0i991aoXATyRfMntIQbN3i45ShlcIqllqc9V+GnT22W140kPGLSTVjpXS
oOXSbyYh9SS3M+aPCdAhXUmnuLdZZD7/tyXPE4wo86xQxuEPK0Rp8fi6665t
iOFWY1HG2xUioeNWg82/bSgnRqLzSwQZP1O7eq2KGW3/0jauGET6+RlYuVLG
gm40+q6VPVkhTNfX5ksqWBE7cy9XrSPJW8OT3MM7kJVgsNjFe6Tezcj4G9t2
oTI4pdBi8X//a9LcnGzI1vGFPlWP9HOG5+3jy/+h3/1no+YVyHxaurcyu/cg
4a3Fd84yK4QHZqLK+2cPesSV9GVTfIV8v2I9G9F7kcTFzRamA2T+mVnzKIwD
+Vh/GAraS+r/YCxp4dqPOp7qLbLvJPXdaI78R+FEz0qy9h7YWiaoCe92v+rn
Qn1t14QSl0gWEmh07+NGJxe2HxeZXiZMTdJHA8Z40Ii4xWXp3mUCvyhywZKD
D52J5n6u+o2Mj67d6FsUQPE5VYnVhctEqe5NrcLXB9FC3YOsCznLhMe53ouR
5w+hJMb6Bv3kZSLhlraeJCGI1gUe9XbHLRMUbV5Cz1MIXcLEZm68JPtrPZu7
qSGMaB182O4+Jfu9zovcNyuCDEKk+ecek6y68kOh4TD6nNZ91MmJ1LdoCkD5
osi0V/6C123ST5+d/Gq8OCo5Pxn08hzpR829S+/vUbRy5/4FZ2UybkVv6RAg
hWT9F9iMTpF+num0aUlLo7RvG88FxJcJfrr8fdyhx9Ag1fMK/SGyn0rLvO9Z
GcS/ycAxzEXW80PsPLMseiG/81U6CxnPzVLtSjiO6q+EG4bQkn58ZQX7Hsoh
Fvt9B+xWlwiKStmndd0TyCODN+HE2BJRuvG95o3kSWR98GhK+c8lwiNK2DJI
E0PvINsiuYyMf2kv22WDUJ/RCVG/ApK7psQvRAHSi4R0rfdLhPa8d9pZptPo
ec43G6k3SwQuFTUs8/E0+t2gdnR3NNmvfNFL00gJKW/Xzmr1WyJMkyIKJn4q
I3fRJvtCjyWCeuGywvgzFZR/Ru94vBOZX8K3ynBJFUl6mubfsCT1io6tRKyc
QVyLtiVTamR/4+L6gnca6MruhccNQObfi/wm8f4cCpVyPp1zguTBN3O0OZqI
8Y5nhbMIqX/W7umR4fPotB+DrxHfEiH1ZDyDk0kbuSX7qwHHElGfEle09UYb
zfSEVdNvWyL4dYYjvwxdRBIbewOHNxeJBG77uKkwHWTO9UqrenGRCD3SoX9J
+RLqvJxYHzK0SJg+SPPxLriMqn5mtXB9XyT4b+OXllauIrphuaiN4kXy/OlV
MHXpIURfqE/NJeOz/MvHq/RRNvrWmZy8SHh8pj9Il2+IpgzV4v3iyH4yIpXy
xUbosHPNtTsvFgnK3udpuTXGKD77T5/Uk0XiU8aAyBCtKWqrv5q0+9EiwTbF
dpgp2hTtmeq4teiwSNjScvM5yZqhZ4cHRgpvkvk/YzrWXK+jB3HzU2dUSL+j
Nq6bOreQsH+Ado4i2V/cY+IJqzlqcTiYJXB8kcDXwxvZqs2RvKb2g3Uhsn/7
KN+cviUaOTHccpuX9G8zrvhR/DaKPuQu/3cfWZ/KqC1Pb4VWVz+sfd5GcilH
VkD1HfRhSMmYj0LqiTfDj3xrZNTYVhK4vEBQIkb1szJtUPH7bV4WowuEh6R9
fGDWPeShd4PpQA0Zb2J79IXNDkmrrN5+9m2BYKNJ1+ZJs0N9R8NqlgoXiPpz
S0ct1O2R8jYiuDF9gdCOmKs4G+GA5mevTEPyAjHNGvBeWukBSuqeuJgRR+pr
79iWsPAAMeZx7fULXiBwO+3sYpuH6Mubz44LvmT83KeJ78eckGWQeuv1xwsE
9Um2L8umE/p50zEGs10g+K00jehSXVDg7kaBuYsLREK6Mq/xBXeEbVl6m2qQ
LN5V1nDuMZoa2xr4pbRAlD6c373vsAe6UH4kNVWGnOdaI8s3eU9Eyaxg3idB
6p9mnvP84Yk+RRve8RZcIKR4j/+XZeCF2O/7S5rsXSBsQ3wvTgV7o29G/KE1
O8h8/Wy201I+yEH9y4w8I6m/EqYV3uKDmvkGc3YvzROU9KmsqmO+KOo3fupn
6zzB76UcPHnEH539+jdWrmGeKL3jHfZizR+tJt/dfPtznsCjLc8+q3uGDB/F
lrl/Jetr//vHERCItt+WOTSRReZ32svvtg9CRZerffQ/kPknerb4rgcjXoll
NdnYeULq9BUWAfFQVMcR8v5NBMmSm/59GaHIg06YdVfQPPHJQtPnlWwY6m2/
9Hv00TwxrV69/+b5cJTk//Hy62skH2DW+ZEXgeQfHrC0ujpPaJtLfi+yeoFq
bwa4Hr9A6r043hwo+BLNg0ViDZonPDSGmJ3SIpHfkebcl3Ikd46ozjtGIR5u
5Z9mkqS/Y61GOzSikcoi7/TSAXIe7lMaI/QxqLU/kO7bXnIeR102jskYZN2w
ui94B7mfuPnkos5YFJHeggluzBEJIXvmr/6JR4PXgwO0O+fI731+xYvhb5CL
9no8d9McUbozZv6dSCLaiayyhmrI/J+M/MVliUiO80ybW+EcEUpTlppHn4Sq
GXMm1LLJ/L7yyOGMJGQyL0DZ/WGOkDoaL25rlIx86zaE37+aI2yZVlOOVKcg
ruI7Cg7hcwRlRFQ63/8dykxr04JnZJz9Yq7qhVTU8iTXodmZrC+sCDg4+R4J
K9qU0+jPER7f2ItOOWegr6IdzbXapB9djtYjdzPReY6zo5HqpN6fPxL5Vh+R
46wgm6Q86e9M/mJx8SfEQg0/tHJ0jpg24FPfp/4Zxf+inKgQIesV8KXPLZ/R
j9ROYwOOOaL+eNmQDE02MnqpcV9oFxmPrY82istG0975PtOMpN6ltzFaKAft
vxbxwXdxlpBSu5HBEZKLLPdqrmQ1z5Lvx/kEG9t8tE77dbv7r1kiIa5jfk6u
AIVOi/CfrZwlPu294eRK9xXl19Cp9eTMEji29xx8LESaBfcN0tLJfCdf2b/B
RYia0mPzIGmWoDjfCBN5UIyYvAojWCNIztN5k6dLoNh7oqktAbME9e714COi
pUjKOLLwjTfZH3dpKUsrRXry9n0n7En9//YNxRWUofdTYlI3dWYJW42OVg3m
CuRlrhRxRWOWKH1WYmWSXIGMuvWXzyiR87B+c1tUrUQ7f/uVih6bJabtO/Vl
XnxHdhlD2v/+myU8fllX+d37ic4JbeZQmWf//3uj9oZMNRKM28vZSEPqr5T/
+btejVoCVXpzZmYI05tXDITf1CIF68T7Lg0zRMJMqtUYZz3aPVDQfOcnyTTt
Tx0i6tGEYcNJ47IZ4tNSc5M9ewOKP0ehxT/PEFJX776R4mxEdOIm4QxhZH7r
8SqDy02oM/HB4qLfDGErw35GabIJ5XEFGYx4zBD8ctX7rZ81I0uWooM1tjME
/jD49UpDC6od5cwO1Z4hPGa7D6lHt6FkM2kOL/UZgmLhHul/tR25t6m72uOk
/iZ1NyN3B5L6+VBZV4qsfz0ocSqrE71Ibf7DzUb6C/QU+clORXf5J0/sYJoh
osSPOzf4UZF6FH3s5tY0wU8/92IHbS9afSpzs/ffNGFqV8n8YLMXmViEzafU
TRP1H/nrLAQG0ImeVL2oH9MEZf65sF32AGK7WlrkT0wTCWUC2rfODqLyM/98
rD9OE6HSweNWnkNIRFhr77EQUu/L0f0tgqOIEn/T+dDTacJDKm+eoW0Ute91
69rzmKxX/UO3HDaGAhk+JC/dnSbwhaXQGPYJND3AJFd8ntR7PHjyis4/BOIy
CifVpgmm9usXndmmUfB9Y5QL08Qn5eciGi7TSGLz85kMKVLvU05q+pUZZMlh
eDWOnfT7nEOJ78gc+mL8xJCTlZzn7QtcJG0OMSZ9vPaCjuznH2slKTaP1M2Y
6rlG/xFsTjKsj2UWEPHcYGY1/R9RemhtktdmCRnxf1yZjftHfDrdY7ybfhmt
ptPRjgeT+UhxMzp+Gcl9T2fvsP1H4JnXQzO7V1Dm8qZMoew/Qur5DqnTQetI
88klxWyhf4TH0o5ENuUNNPZfqsqHff+I0FFKCu/GBhIWv3glZnmK+LQDG7vs
voXijd86uhZNEdMpNxQmDWlAcWzJ3T5jijBdvZst9JMG2h01n96JnyL8OHpP
9cnTwr7QhUhDjylC6tbDFF5+OgguVys4pTJF4DLuUnK7GEDiQmyZzPEp8vuw
8R1vOANUd0z/FBeeIjzMkjMo+xmBcSG6nZuJ1Jcsjp2R2AaPRCbW1momCe3H
j//oP2IGrhycfr6I5Pf5bj2cLJCPv9g+kTFJJEjGXBguYIF5fXSgM2SSYBv9
uP6DfjtYB4aiokuThOmJiL6xHzuBhXPwTI4KWf9LbybWaxekJp+8kH58kqiX
7a74ws8GAyV912I5JolpY8YLQ4NsYDQj6+nWMUGELumpTTxjh1LPE5NHayaI
qm5zMRe63SDErqDf/3WCSE2U393nvhumjoG0xqsJwi9pZ+xj9z3g6XC2l0N/
gnCyzQkvTdwHQ/SaWjXqE4S2gUjUuAwHaLw4X+AuP0Hw3/ku51TFAXvyLoUN
ckwQVIUPhpT1/ZCyZHw6u2WcYIujzA0FcwOLn2mG+fdxor7XiP0ExgP39t/g
5MobJ0qNjO/6/uMB+ZOWMx4vxgnTqpROJ1NeqHGxe3P+8jgRtWAUsbOQH6RY
H+ygVSHzfV38rQ4JQETMQ+dcGZI3te0FggXApMjtIs/ucSI/N4baYHUQpjd8
acYaxgi/LkmaFCVBuBzsbxNXNkZMlx5exAlBKOANbNP+PEbgBpZGCUgIvCDs
85fQMaLUy6RuUFUY9nrGmD25MEZITfUPizkdBpf/4n/JA5lf9t/Zp9tFoftN
wskJyTEi9GHsE4EkUUgtT/7v0s4xgi2n6PbFLjFQoP9Uxv9rlDBlzOpwdT4C
ryOyjjQVjRLTItyiiaKSQC+UG/00neRV28iwLkn4pfr1/lTAKJH6XTM24LAU
mD6tECjSGCXY8jjC7uVIwxOWNs+rVSPE9L3f2t/kjkPLCRpJ/oIRQlsrzeD1
++MgfEu0feT9CFGvfdYql1cOvhPOx1wCRgip1ubzX3adAKYHXP2x50cINjqx
e1I7T4JeolLILSDz/d4Przw/Cal1VqckpUaIqj2LBdo8CnBWrPA58R/Z77gj
yx/ZU/Csx1Clr2mY0L5eX3fHF4P27T7TaZXDxHSfyn2qAPl6UUiPtc8bJiiZ
KXNQiqA2Yn2ePmqYaH35rHaZFocdGnHJIobDhF7NjyRlw9MQmtPNaNM7ROT7
VdeIGakAtZcx+3jjEMGfPHDOoEIFpHcdvbZZPkSUek9O20iqQuPtx19CkoYI
pyDxMlOmM7Cbj98yy2KIkLL9Mn+pSQ1uaqrvcdUbIvY7ipl5a6pDjrNtqfJZ
sl59rvvvd3W43FS6v1lsiKAeDg1nLz8LL/3Nfi5NDhK2MTyl3/+cg6E8/wel
3YOEPHNM214TTTgx8FnAv26QYNso2WoY04RWROvC9XmQmJ6tS/rCeh445xPF
MIdBwumFhoKQnDbEmgwEeK0OEBWqhyO+teqAY8K1tsjxASLwrP+1fulLcLGv
XTijc4BIb4lpeRR4CRjNG8r+lgwQlljVK/kzl8HWpmRJwnuAcApMqjKrvQIa
H0+qKjkMEHovL9bPSuuC0ExO+NVbA8S0qmCDeLQutDt8OOKlNkBIyd9KyLC+
CspuUTf+sg4Qpd9mTWMO6wNvye7PE+v9hDYHlrovVh+Wt4I3aab6idCih9Z3
/jOAdO8n0RL1/YTfIROXQhpD2BdgV+cZQeZ3VlM+rRjBWLTmKYkD/YTRocEi
txRTqOj44Xd6Zz+hIuBMlzBtCq8PKLfobvURihH9F0ZOmcHlNyfve/b2EU1s
LleXms2gOFX4XUtyHzFxJP2P2/4bEDX2Zn78ZR+RUKv65bj1DbCTOKBE49dH
tFITDGXKboDwp91d4lZ9RKDcb88d925C6BfKbk/JPqJi419hdvstsFpxNX3J
10d8Oib1l+mkOaieWsr4wNZHFPkpz1VEmcNqyaR6y2wvkXNeiN3HyAJufm93
F//SS/qft49bsIQTzTljzdBLmKZrtRraWUMrV3dMytFeIlXg9QmPOWtwMd2m
9ZCvl9ALGU1OdrSBonH9j/u3qMSn7xYbO7zvAk67ZW9YQiVqW54x+hnYQq/a
YSGJTCoRKFmy5PrWFryCLrasx1EJUw47n4BJW6jYnyQf/4hKuB35HsD65D6c
PXp2g6pIJYyuHSubK7ODMQe7zM8SVKKps+zH4T32EPA15poXD5WQ4Nl5+6WF
PcQEdHqrLfcQKoKKwWLsDpCUL7zjl2MPkRBaG/HG8QHksRfytdp3E5rtDo8x
DydYjtvh5Xypm0i9qGxQP+wECqKmA1wy3YSKKR7doe0MBDC8N57tItLZDihb
i7hAlfWFY/22XYRPrvD41JArtH/vV5my6STcWsTNr2Y/Bh4duXchWp2EL00b
I3B5gEmXH7P0kU4iMbQFZRl6QP/ckd/2Ex1E1Vhb1eleD5jgd7q6YtVB4Mm0
LOpLnrDhst2K3rKdUH8+3cN+0Qf24Wma9WfbCbaacpbbMT4gxaB+NFa8ndBs
vS2dNOQDN0O852X+tRHTY97VDY+fQPXbVfcbjm1EKd7CrVrsC1G1I8/LfVqJ
znM/Lt4x94esMF/HYPNWgqfrgTlbqT/U6grqG6i3EvW2fn1FXM9gi3qNd5a1
lbBmVliS/fMMzBdaUgWe/yWkWi5qUbUDQZa3stjjTQtRdbf0FZ9nCJzvv56g
6d1CaL82YtWYCAHLVIr3/lstBJMJRVRbIhRijimqfzrcQnz1deqwfhUKtGrZ
jT0fmwm9Z97l1EdhUH/vzTAqaSJSeR3UCq8/hztlj/7baG8kMokY+Zj0SGAP
flgIXxsJ7R+rPU83IuGrwf1bXtGNxJ5w098XL0QB0/zNgm16jcRhvoGP3gtR
kCSsacbe3EBE6LXUPdN8BZ0BXJ9F6uqJqdAuGQ/hOPDW22NolVlPtLgIBa4+
iQMxoZ0MGUH1RJJtc73VUBw4ldDoH9OsJ6rmbp2USYsHsb4GGpfwOoI6vpPl
B28CxKbffZPk+4voivUtMql+A2Oq1xdEVX8Rh9Qoc0K0iSDfc+XsR7pfxIPa
83wOConQ/B82U+BRS+z4cVE1NT0Rdj5kPV3nUkMkprn95xP5FjxOp1JX7v4k
bqvcM3r/NBlutPTyXbhaSeylEXN3bHkP7WUCK4wclcSt3u6zXHxpoJ1h1ljS
UkEoL17/d9kyDRR9en0kdSsIpf47zGHrabDvWO/ojivfCB/fgCUZiXSoDqJm
1+qUEWPP16ZjUjPB9FlJSETsV4LphOX3jO1ZoGWGlOh5vhIRlrTjYwpZoCBf
Mm8fU0CoaBxicL2dBXuGivUvvconUiOc6iJ+ZMGP08WH2KPyiLSESJfsp9kg
uVL4JeR5FiF+rjiP4MiFxTo7Yu/eZGIbmLD8e5gPgZq1wmeFkgiuUq26xfR8
EPgpFOx2/C3x5Gdu19m+fNAsbzXqv/KGCD9pstCgVQBKtx/Nmx2JIfJe//xo
dfgrSN0Sa5Iy8yOi6YcPlo4XQpFCYdpqVRgcsNK0bk4jQJ+B4zjTvWy4mjXQ
yExXAa2HV2/snskGGnSEUiNaAXqaXeG89jng7bvekqNN8vO307IPcyGxNGaI
5jXJAlLpZo+/QDzLBZFHWCXoYmcPFYYUgu713YaNnt/h/ddiphOtZfBRYDA5
XvgnJM/+Wxxd/gnXTvCVn/3zG+4XdrQ8DW8CwVcpFUzCzTChNGlwO7sJOjL2
SF+DZrCs3uzWaGoC0V76Ozl6zWDSJjC8Y18ztPLWHTIIaAaNJYul59HNoD9t
F/VsuhkOysxzJCS0QOut+x+xry3wJ227fn5mK2i2SkdWqbfC+WO8XdF1rSDu
z1Zzw6wVqguOmrlOt8L8hN7EnHMrlFbp3EbH2gB1z76ZSWuF9KEo54rcNlCo
qLqvv70NfA4KvaovagcVzaRLwbVtcPwV1jFS3QnFk3aFXHgHxC6n8kiPd8KD
3AZn0O0A2qt7TJxZu8CH0TL/vHUH1O8epzJrdsGB7SI64lEdYB0UNST2i4xr
Ch37M9UBSR5zM9Z13XDUK349OLITWHtMZHL/dYPS91250umdYIdVO2zs6oG1
TSmtgtJOwFcTloK0e+CI3I9PD0Y7odP+/EZmQw88NDmiHX2yC55lX/ZZvk0F
rcwfUopNXVBynSWZx4UKz6MajtEOd8HMf6WV+DMqOF8TufFupQv0bMW3+adR
4QvI9wfxdoPwEdpnnONUOHFE40GZeTeUp3wMUbDuBXNfpiH76W5YvHLrk4lb
L3A/pblLS9MDogzcDV6BvVCnGulj9V8PhN7wZa9J74Wmf11rldI9YMJv/MJw
shdu1r5xSLDtgZVolhi3u33AymoeEDnUA3j6K9eAR31Qf2Jy/7u5HvArETN6
FdgHeYpcSuoUKuzv1ziQn9YHZoVFs0vbSV8SAa/nhvpgOvo1YS1EBXfE7UG7
2Acsb/x09MSp8F37g+l/DP3g1sBbfVSaCroPagSOHuqHc5qxg28UqfCghDXJ
6lo/1CS1aoboUKGoPsbH+W4/eFJ7vFquUoG+X/yW36N+gD1mr5mMqRCxTVM4
JaYfQkvK2I5YUCFbOzC1928/GLc7+diTe129zuM/PdQPv4rPxO58TAWlB+m3
txb6YbgrJO25NxUao2vFDuwZAO0/aicMA6kw07c9Q097AAR6OFc6Y6kgvxAb
ZHFtAG77VqVVJFDBY9uRu453B+Bt4g37F0lUYJPQOhoROABOIgvdMx+ooIe6
dr2NGYBagQdajz5SIUHbZvpz2gBsji/ensmiwtEHQZ/rqgagJeW+2vMCKjg+
PRDe/XcA+LlsWkqLqFASnWE3OTQAFhH3P7YQVDhf8kuGlWEQEp6L9nytpILN
tp15Z04Pws2nfMnX66mQwxn/8or2IGzrGZ+pa6TCurjkw5vXBkGRv7hesJkK
gdrn5b0eDYKC075/Pm1UaLrevT8scBDyvDrpQzuowPPg7srrmEGQsxfS9+qi
wofo4K/FBYOg+eSvDU8vFWY/8MbUVg1C02uPbRV9VFAoyXTt+DsIadGS4ToD
VPCqR0ZjQ4PALOey9mOQCtV9vxVXFgYh46mZtOAwFdgXTA4wMQxB2qT6QYsR
Khhs+7exb88QyO1cLwodpUIi5+NuoUNDcLouczphjAqj4rsI2WND0KS5mR5J
nnMrhZlTfkpDADvyrvpOUGFC/U9+h84QWNxRm9CdJPdxNff40RtD4MzmepV5
igpTtyKzvOyHwOneJ984ku85OB9t8R4Cu0M9Frv/UWHayzBdNGIIDM5GjVqR
fD8ME32UNARBzdvW3pI8+5ovpT5nCBoGFgJKSLbPpDkkWDkE5UxVgV9Jni/q
f/2weQgehHhNRZL8oKaSp2ZwCEy+/0zUJXmx7V007+IQSMn3xyyS/R+O+O+z
YxyG8sG82ockLy/eeV65bxiKnesPt5P+nRnOs3GKDMO+h6ZJB0he3S0VZH1i
GPZex2SVyHldD7KzlKoNw2L/wC81ch/rUvO+u/WGYXjEzUKS3NcjaKGzsBwG
vfympQVyv5ta+R5fnYYhcJu5Yzy5/8dGrzZ2+A/DYUbdDpEhKlDuuLmYRQ/D
6E1HvnDy+dH64Q5MX4eBzW9OnJl83t4vD84YVg/D7H7D0b095H1Lpr/7sX0Y
Xvuw2NKR54OxvMpCd20YFPdMVXu0UuFpfdrAe9YRMKX7Es3WQgWmnkCzDe4R
yGObE/b8QwXWdW3DJMUR+Kz0wZn+N3keWWRalzRHgNgwBY4aKuzk3HvlnPEI
KDhvfmOpIu+TXNv52UcjkNt9mj2ijAphKoU1qsEjgB519YqWkOfpUpx6dPwI
aHhouSV8pcIeWzMlnBgBuo0QIalsKrxwVyae143A60UR/Cx5//YFCSkO94xA
pg4/pkzez/1po8eDKaNgWvJroy2RPP8D90U7T4+CRNC7hOehVIibvZRyVGcU
hrzS63ICqMBLI3fI+/oo7Bx3l/niSwV+3lUeMe9RkGTvqL/mRgVBPS82p4pR
UH2hs0vJnApHasOXdquNQSoKczCQpUI5dkFWR3cM4uFHMYsk+X74yHo/9NYY
cHPmnXwjQt6fcJ+x7T5jcIpd/oAnFxVa9Ry7GMrGYD2sY/7AZg94Dep/W1IY
h8Dxevlp3x7Yf3UfRU5jHOQPJmxJPOyBjKpGRQf9cRAfoVM/adEDrR/O5U0/
HAdqR5xG2Rny/5Ad9n40Zxx4WP/+ekFHxjf5QzokJ2CszWPM36EbbGy7ajjR
BPxqDCvsNOsG2r5oJj2tCWCycFWgu9ANRyrZvZruTMBXoYF7tYe7wSuA/sGv
1AmgPx4opdfeBUf2jxgQByeh+LNObczxLvCS/ij8dt8UCPg8WpSr64Cg4P3l
EUJTEFjM9YQzvwOixj2NfWWngN+BTaAzoQM+Jl+OuK0zBefC5zZp7Tqgk3OV
Rip4CoKt6Ad62TtAjla1q4jhH7heuBOvcKEdxhvbn7fM/4PpTnH1g7mtIKbg
TXkyOg0eLY9VDmg1Q+2QKU/CzDQ41T+r+yPZDHefI/nClWlg69ns82ZrhuyJ
lXszzDPwONX2R+OfJlB8bdtjLDYDL2y+3VcwaILz9CYlcndmgHvTy+Cd+R+w
/y3vNjIxA4l9sa5Bng1QdH1q6dz0LEwHPz/ZlV0DI3iBfefSLHw93Rnt+bgG
9vL5/LPemoW0/rQ7Wudq4G4H53DQzjk4WCUXbtxfDfyXVVvqJObALZ/31929
1eCtGptz6fYclIYIHPvuWQUahzXuG/bNwacntnvt3SvBkXHv5PjoHLiIvBec
vVAJbwd6LN1m5sCEgzY5RaAS1hMemMZR5sHkyk3sc2UFZHC+udDDOw/bDa4r
X2GrADbW5SM3DOfh3f7Sc/s+lcPfyeQxq6Z54BLYJsjCXQr81dE5cZ3zIGYj
2FVPJcAqJci9fmAeKPeu53AFErBu8oBdbmEe6G695bk6UAL89SoKNPsW4IHO
sptTTDFYZvX7R15dgNQTWVJugoXwOfjvpeprC+DOr3KEv/UrrFrVHNiwWACv
iq/ylwK/QuCh7M/XnRbg/PglQ/PFAvgc4dV2JHoB6ieFmKEhH1YdBUQr2hfg
UxySfv0mD5Qv7Z1b7FuAPCQgc9gkDwKPMheLji9A/tFROsSdB7wj09ohawtw
0WKTbldkLijplzoZ8CyC0K8cM/QiBwJOXauaNl6E9mutGk8/ZAEPJc7iQO8i
/PBXV0twzgR+nWGq6OgiyORND6vsywTBJGkDuZlFoFzR2N2dnQES6t81L9As
QWzMy8DRmXRQDP0n7SmwBDdNJTpUnD+AMb/S+oDZEgRK3PuPJicVrtsFPpi5
vQTRwztXTK+lgnlFy9TG/SUQqJtnTWRNhbuWd3r3eS0B7d38R+Xm78D9U8R3
9cQlyNJofn1VJAXi8eHQ9L4luOeSzZ5c/xYSw6VZCsaWwLYrQeuh/1tIGXD1
rpxdgjN2D+j3Kr+FTD82x27aZXjl4X4mIz8RSupPGrIdWoa0mGP+ohlvoNs0
UMjhxjKUGKdXHnJ4DX1ZLfEed5bBMrxuqm8jHoboBfYH2S+D+Nd+S1b/eJhK
zWVJ8V6Gnxfyfga+jYPN6e5/f98uQ697dzhlNAb4PKW/nhpYhubJrzsPZ0dB
Jv3t58XjyyCfbCSaoBcFin4J1jC3DIxHZP+IbUWCXsguPmXaFUh58Sf+7oVI
CI2b9NbgXwE3NrHee+svgPbrey19oxVQ2c+9aej7HEKxXuGOGytw7u2G//ip
58Bbtp9ifGcFXgWG2d+eDYdTVU+zTF1WoDrwXYjI9XBwaLnFYRm1ApYypzPv
aYbB4KxAr2PTCpyVWM6KjggGB0f9r8sdK4C/0/vixh0MtKuhz136V+CgzsO1
pbdB5PudcsZ9dgXmaBjrUgoCQXdXd9oTtlWoYQ1Msl96BlXirxwiNFdhqSJW
Q7PgKeh+bNDad3kV8hfTuRuuPoWBY8wiUYarQDciOZC55As0Ck5tMVarwBV3
VNf8lC8oqOuit36rcPTzw2mjRh/4cJOdKatiFRhzt5jhlBfoDtkdbaldhYkr
erd5hj2BYvlHd7VpFZLWtevPRXiC7p2IZKXBVaic3P0yZNYDaO32Kf9hWINF
lhCwcnsMGXOOVks71uCH7Bt5/RF30HvwN4x73xpQxnqi3+u6Q4ZTFPWG8BrM
K96KPq/wCPQec7nPn1mDNSHO5F88rkBH45q8/8IauJ5bchp/5QKZXh21ilfX
IED94EsJbheg943lfmJB1p+JXFgVcIaPgbwFe/3WIKk9BFtXewiMrw7Oy/1c
g8ypsOA7/+zhM7c3t2HDGgzei6+xCLQHo7h+pcdta3Cp8WXkfnEynpAU9mN0
DT5vSUa729iB0Tvho3os68D4xVfuI8N92Cb6VNeNfR12vvp7I/GjLWSlDT9K
4FqH+7vL9TkNbYEpM7V2RGwdJPd7by1a34PsHDEr53PrcHHbytrAujWYyAWE
xV1ah+TKlSfVFtbAlD+eX2a4Dptz7zxNmu+ASWH6NhZrsl6n44NFvhWwlEsm
vwpch1GuytbuWEswrTtGLfy1Du5TaZ9+tNyEF14eFlea1+HNP8dh2Xs3ofr4
76mpznVgExY4Zcd8E2Rjb28ITKxDp2E872nlG8B0O4HLj2UDZFxbO+/VmAHG
M/VGgH0DYq3ab8XdNwO7ulOihZwb8JrPjvEWpxl0Hv97YurwBmhUmvO8tzGF
T7Q7r1xWI9nVeCRD2wQGcw07J89vAN+DDMr5XGPguv3+xlPdDTg5qR1TymMM
PnUqdl9vbcCPMUXbf3OGoBfrGsLvswEX9u+NUyjXh63joz8nSjegklm/XL75
CsiOyl30rdoAgztGIpNmV8Ay1qeVr34DhAU5BX9NX4ZGWv5hnZ4NKFvYsTC2
5zKk1OnSF2xsQM8+s/DEBzrQ4ZUUoMOwCV7TWuZf2HXI77VZ9ontm6DKXaH4
+fNFcIkNEuDj2YTvwZc3ji1ow/nbFeiJwiZsHxS1P3DoAnjzsH/nVdqE66f2
3G52Pg/5dde08s9ugoRhTELbHy04KLdmOK63CV2z4VhgmCYs0h5zvvhwE9Td
WwS2H9OA+NjX2QdyNsFlw6YqZ00VgiuVx0ILN+HTPVfGw96q5HMb5qf/tgno
2qXY9e2qYIJLBY81bEKO25HX8SIqwDtQavnl3yb0fVgbSXioBDt33HottrQJ
FTb/Xi2zKcHmceaWuM1N6PD879G19NPQ/fSiss+OLRD8yfpVdhSHOPG+AxfF
t8DpV3DowhyCwMu+lyuObQFXU9fRMFUEbo/EAk4obMEsvmr39RUGRnV2ywfO
boGL3cExuwuKwGNP92fMfAtSr5bW5lJPQuxXQT+fxC0o9Q7dfeTFcQjsrypZ
er8F9z6evXNp/3Fw226zYPV5CyrULbg442XByCT3+sXSLWDaMFO48FkGeGjP
YLzdW1D2xzeLdUEatouP2YcNbkFcndTN+gBpWL8UnEY/uQVRcSPmfwSloTO5
hWN8bQvYTbYKLYyl4HeSzErHdgreCO//nKg7AmcKnkS8YKPgkpS79Oq8R6Dk
19+jF/ZQ8JaLKRwS9yUgc9HVvJybgu9MU7E8eFAcgtUr/qSKUfBsBb9LRZmH
gdF4373rkhS8PnC90JjrMLjft2ThOUbBVwJminF/Ebj7avvpkJMU/OFdVy8/
W2HQmric+UCdgi+EloUa3BCEpseFth6aFHxNlM3qT+chMNh9UCZAm4LTHBFz
CtA/BOYK/74k6FHwdeqa9z2jg+Dh519WY0nBU+wuM+/35QdGnmnvFmsKrmZj
+TSKgx8CP+qe6bWl4BQzLf3Yq3wQ3XKoZtGJgn+t0/0um38AsgRLmgT8KbjH
n7gVwVwukM8XjJQIouAZrPM54hQuKDkXoH8ijILTC5YWZV3ghBo7vW7NaAo+
L3Vx4u8aBwyUzg4/fE/BCxw/sxQ82QtWl/XTvDIo+DlBd5PlmT0wPUxYB32m
4ML01WazZntgY2fQTGIBBWdSfaRbrLkb9hmLrP36ScEVd5bc0z/3H8ROBxW3
/qLgQQd3KO79wwYHfeYf9zdQ8Py26HuDxmxw9EMZ/UobBZcVO3h3enknqK8Y
7hQco+Bj7YqMA3ms8DuwvF5yityPOmv45zkWuMIv+vzkLAXXGHm9J+w4C1xX
W+S4sErBXek7K5mqmMD1RaiACwsNXn4l8FeEICPQii71++ykwdNUHo6n+DKA
X5FxSgg7Db5xV25b3wQ9RPSLiSdz0eBsHUmNVpV0kCldKVsvRoM/6f+SvD2J
BmQrxZfaJWnw29lp6qmCNPBVL7xg8BgN7jdeMJuWSoEfj6+hNQUaXKxy4vSB
B1uI+mtFTfgcDe6Tv3OQY9s6kljV/Tp+nganPBE6XqK2hh4K50h81qHBbTN5
lhSCVtHOx3f/UzSgwd1fz7UpCa+gU1L97Rdv0+B6Pp3tbkGLyNcI1+KwocFF
/p36Xj6zgBr94ohOWxq8rnrPRQaDBWTZezXJwokG975R4skrN49ehtfaPHpK
g+ex/+LdzTWL+kpEqUoBNLgqz7mWDzEz6Mi4rw5TCA3+JjPpUgD/DKpQPn3i
+UsanF/6l8gvmWk0M59LeZ9MgyeVK044rk8gRYHd9nff0+Cx7+bv1x6dQH5a
toMyGTT4UO+bnx6W44g3Ray6JIcGTzVbC3YfHUWaV18/b/pG6vMfn1AVHkZR
3usMr36QPDBdRuc5hPo/6jtdq6HBF6YMpYWog8iFaY/xWCMN3nN7oeDghwH0
rsBPmNJHg198LFvEfb8PzQ4ORlUOkvM8Lm+hn+hFiF2ZNWCUBjfvav7oadWL
mqw2/u2docE12z0o7fepiJbHrkCcQovr2gbdkbvQhbTU68Rn6GjxKb3jSZbO
nSjKQSI+bxst7sf/y+rO+w509NeQ1+ldtLgXZyG3Blc7MnI31LzKS4sHS7Ie
tT/1F6Wm5ZfwHKTFOb0HZMRCW9Bcy17pPiFanLdL9UvkaDN6drR+r80RWtz4
7QUKZ1oT+kJV6fFSpMVt/JwM7UwaEVtgnlM0Totb/3jHd7q6AVmdOMz+SYUW
d2wbuPpUoQHxBrOqdmnS4pLPzjAti9Qjp5OPuue0aXG5oF7lH2frUMPA1EOW
K6Q/hm11Yed+I59TjWknjGnx/RH3SznMa1H3kLLKeTNa3EHlhvd19xokH57b
dfMWLa5HP69ExFWj8ZEotnAbWvyVhvti13QV0nl5zXHiEenH8eLDs/2VKP10
wy46L1q884NHS5ZkJWKcVHrP6UuLs7MZ8nx6XIEKlIU7zwTT4syjQg8J6W+I
/V/kA+NwWly6M33DI7wcWb9i3uXwkhavH3+Lji+XIf6ZidNv4mnx/FyrYWpD
KXKJNen4kkiLV8tn3wxVLUV/1OodfqfQ4m7rjXaqrgTyjc9+t5ZJi1+PLu5t
dihGk+dcdugStLiPzbN02e8F6MzSeIr1N1r8zC6pvKaJfJSQaIx7/6DFq47m
r1zmykeXV3D7T3W0eBKHKsMh/zyUmZS1/ccfWlz+Yes6S3Uu2qYtmNL1lxZX
lyhz2vZfLvqasq2NhUrug4eO3etTNtqj42wnMECL7wzuiE5mykZ3N8ZY5Udo
8XKj85aHzbOQwOXf6NY0Lc7X+rE0Seoz8qN5kURQ6HApt55Unc0M1JfOiFro
6fDVt7XM3WvpSFHP6e8EEx1uJ/vd/wdNOvqXacjC9R8drnn+tEGGUBpSN/j1
VmovHU7/keWrmPJ7lMgAmBonHY7v01BkskxFukYHbR0E6PBAwdyRle8p6NO2
COYAITpcfU+RTxwlBTFnM7x9I0qHx0ZO7yjFk1ER82jzb2k6/PjRuIqsP2/R
oS8fT4kq0eECvANJK+gNUlrjeLKqSof/oguZ2/85AZmCx++as3T4CtUjKVYk
AcX/0Da7e5EO3049fzxaKR4VsxakwRVS/+65tvvqcajzgsA8mz4d7igZabhb
NxZxts74ZpvS4VNt2zIqnr5C8jwG9T436fD6B5NPrn+IRrqm5Zy6luT8XaMn
B5ujUMRIePryPTq8sXuw9DuKRLtWZBqxx+Q+qvtnAgwikCQWy73Lmw430kvk
/vvxOdL0pL9F9aXDQ2M3XZ+yPEfPmJuXvILpcHt7vqv368LQey3s9OVw0v/D
qWCDk2GoKiz5mdBLOrxAtsWcKTUUMXA5HqiKo8Nb007MnxIOQYIm3ebRb+jw
9adOv914g5FS4plPVsl0+GHj/HBRviDkIcahvCODDjegXNxWKh9AvsvzLXWK
yPkFIiq5vj9FXI/5sw6VkvOM5pUMrfoi+W9+a/Pf6PBphphoXM4XOZ7TD46s
ocP37dp/tI7wQS9Cyv5a1tHhPnIj+gk7fFDOH1EBhT90+AJPpbS8mTeaMVzN
7mynw3+opGfTc3ohtoTrGxnddDi3XIxEr5snkhyoPvO4jw7vVuPp/DPogayt
Y9oExki97/euZAc+RsNuilvmK3S4W4PDiIOrK2IsS1KX36DDGc/doQgHuiBB
hh3hzDT0ePD6+595Sc7oelCXYDoTPZ5Ep5ztPPEQeTao3n20nR5/9el+mTT3
Q5SwN/PLeTZ6vOKMmVKztiPqinPXmOGgx33Ml2w36xzQeu/Q83Juerz7orPm
fk4HxCV8oes5Hz3ubrnYo2ppj/Qy+WzlREj9khzVffvt0J+S0heucvR4Skez
2YTtPVSPNeWdVKDHR3QrDjhfu4tqi4b/LmH0+HSfIQ/DVRtU8XUnl4MqPU49
peG1fO0OKj158NSxs/T4lDgGTbZWqCj/uNG0Jj0u0RBdHel/G+XmGcVbX6bH
PV5VdTQ3WKCs47aEmB49zr6LYXczxQJl5nhTRwxJPTdjo0o5c5SSlXbw1g16
XNC2/u/LvJsoMnM5xdiOnGc8RuQI5TqKOLK9ituRHpey8X3+19QMhabzjbY5
0+Muo+ds276bIr+0M+K6nvR407k+RQuVa8hH1EBzzxN6XA7b8feupAnySLWx
afSjxzULWDn/CBgj55SIj+dDyXpXuxbXQ4bIUSi1fnsEPW519ZKHuLQBsksq
nKmOpMf3+2wx7FTTR1aJfTJqr0k/vsqchs+uIsN4qXzIpMcXw3+O7LO8jPQO
qLRtfKbHS+jK9174dAldjr26WphL7tNdquTXpg7SfOWuKF9Mj199GdRUk3ER
qXOGGy+WkvvgOMQ9tOMiUolKds+poMdzBfPt3ey1EfaytlSqlh6nbfZIr4o9
jxT2Unun6ujxTk/HA199tZBcxBxtxh96vHXf3dO4iyaSDOdSFe0gz4tMR2ul
mwbiC7b8KTBGj+Paklo3h88gnh1uYz2T5HmrOpv5Yu8ZtD8whDV+hh43Xftu
yX5OFbE9y9PiWqHH2XryNearldF25uq7rev0+OYoT27vHmXE5NcV8pLCgM/G
/GsTu6WEaHzpG9mZGPDCkaPfFjhOo036/XP1rAz4gPuD1J0uOFr1Ft8TsosB
l1ipXLv+DdCsp44uKwcD7vLKTu6DJ4b6HyW00wkz4FG79u6/ZX8STblWHdwt
xoB/N/Y9+dZOHi07T1sdlGTAz/A1fMt3PYF2OuJruBwD7uvO+G3x/XG038FS
WVuBAU9s5P9m81sWHbILDbiGyHyR50f012SQ/F0qt/sZBhyPlX2paXMMKVkz
3QzSYMDjRs9ZFH6WRlpWUumx5xnwkmKXU9YbUui6uYdioS4D7uFCw7OpcxQF
mvAbL5sz4JnizkyVr8TQSyP15G13GPAip6iiIH9R9MbAdnLfPQZ8eb5Nidb7
MMrTLX10/CEDXmt8YvJShDAqvTxSqeLKgJtuo2ew+SCEanTYdl5+zICHdn94
975GEFHPm8bbPWXAad0yuSWED6ExTb8hzwByf6/nNX9eO4gWND5JhoUw4H1V
ug7ybwQQixqF+BjJgJ/y62IwVuBHxyGhZ+IdA+6ml9jznxs3wrEqkfUPDLhP
EPujFiMupHFq+h7rJ1KPnWLHdJYTmZ7AKWL5DLhw6Sz//GkOZHXcUv1kEQM+
pv2QrlVrH3ogExqqXkrOu/74/qMbe8nvJSq/RRUDzqjGsxmQtpu8f0y3HWsZ
8JQNp2Wsgx29Fpf6/KSeAbee4PFW2sOOckQ8Tie1MuCnO467rsSxoW4+/uu9
Iwz4EN3nrYBd29HIAfW06QkG/DKjk5PcIAua47ad3ZpmwK0KhxMXvzMjpv2l
XrwrDLjirJV+c/o2xL5vpPrIBgN+uG+8f8cnRnRgD9tujIYR11bwux5SzICO
sZm+NWRmxDVuWbTVL9AhxZ1+41Y7GPGbDRJstXx0SG37JxmX/0i+WIB8dWiR
EROlIoqTET9G5TZuraegp5SEgWZRRtwy/+RrOu11TDeypPP1EUa89OLi1ID0
GiYs2dV0W5oR54mIsqvlXcW+G3JVbsgz4lW5l0pY9y9jL2fli38oMuLXG+Ls
Yw4tYbf8r+aG4Yx4udJy8mv5RYz+S0SykDojHiro1x7/aB5r0sqO+3eOEQ9+
kjMwkT6HJQ00vCi4wIjLGau90R2YxZTZd/lqXWXEU8/eC1S1msG8bPzNH5gz
4g63rtBcfjGJ6dCnmoAVI267Qx59ujWBCcR812W+y4hHXXA7OX16HCutolOL
e8CI864sqenwjGKh1w6ChTMj3hdW8yOScwQzXcRPSD9ixNPUOHuYBYaxrUPu
IpU+jHiT58CTUc1B7PfXWL4QP0Zc2HZaKdp2AIu/WMihH8iIG90qUd+I7cfQ
4+Vtk88ZcZZDBnVPd/Zhbu12I3veMuKNKv+ruMwDqVq7MC7p7L0POddcFEIS
JTci2a+WIXOng1CmZIhUEiJDpYwhQygUoi6SbpIM57iGUpkqGRKZZ6KIiNB3
vr/XWu/ze9Z6/nnnORRSepHJhYT+3hwKmCgqcdKP9yAxvPBzXj6bx0D/mtSO
bsTcN11HFlFAuzIzeXK0E0U1cddQSiigaOzw8HvHZ2TtJF/eXM7mOzjcWt/a
gZbiXR8517D321/IMJlsZ6c7PEvxNQUi/2PdkuNqRymVD1N/1VGglk/YX3tH
G9o/NXAjppkCR1s+FJREtCBffVv34j4K7H+fbtfI+ID0egMcrwxR4M2iyHr/
De+R0MVUa4MxCmQLBqpFv21CxdmfjLq/UeDKbkbz6wsNKFT9p3bODwp8ahv8
Nn2sHh1tFtDwXGDfh8MrMdi4Ds2tMhS41ijQsKwxQjV9g14mnZd+vw4DD6Ed
HjJOr9EthVixlA0Y9Dubufy6Uov2Hm/k3rURg5VnxYPbW14iz+JDU+ZbMBin
l6qnlVchesMl7vOSGDB9GCqbDCvRrv7H8lEyGKQNV4+OjVegcW7+09W7MJgc
lw0asGSiN9sORX5RwiC866v/v9Ll6KHapdwFFbaeh7qT2lopcnDqHdmFMAjd
lyyw2PkCafrzbTDQwmB4fOKcWFcx2hKnK+N0CAP+ikaJFyPP0WdmvmPqYQyK
i0pND28tQiXNPdeKTTGonIxHNgbPUNLoX1kfLDDI/qh7aC2oEDH4/fo22GPA
aE1LzOf8FynK5a9JOmLgc/oyPfB+AeLR7NlKnsLALb7F0pD+GNWd1rH18sBg
f8vb25IdeSjnqm/gTS8MZkq/W/YW5qLQ5Edpeb4YlBwQsZi6k4OghtbZewWD
2tlV1uPoh0i8Q/vX0nUMTBTIOZ07D9DK1EURoQgMkhQ1n/D/m43KNnVbGMdh
0LLUl7C4fB/dVqRdPJWIgb2rxUZ1pfvIR1c76dodtr7YXzKhPRloj2deS2km
22+xslUX9z3EE/5ltuUBBoWN7WOVrDQ0eZeX71suBlzb5MmxgFSU89bniEwh
BpTMKfVVmTsotCfX42AxBvOd7hHxvLeR41zXTesyNv/OHrchrmQkLqHVFF+N
AYiJKVQIJaIVFZ+vj2sxMNBSl9675xbqMsqlvq3DoE3h9YKBeQK67bvRcLUZ
g0tRQtakdxzyiQG3Te0YiE7Z983/vInMsr0jlDsxKIh1CXSLikG87ztfnx7A
oFrwwCalkRtoaohnJHQEA46NNZ5fHkWihqWDXPcn2Hns+t5sejkChW/P0f40
i8FaamwUNz0MOWt0npz9iYFZws6qIMNQpG3Kc41nme3/605GsmkIWgvyqtLm
xEF1oiS6PeQa6r71T68dBYdgH8K7oyAYMfM+r16i4jA+/PXVueqryLdNk3zK
j8NR2rGyi2+C0NHJCzYNwjg0RQdpKjsHor0c/wSMiOKwd/5j3if+APRNgbtc
TBqH7PITo60Zfig/aOKp9A4cJkXdz6sG+yKXd29zFBTYei+fi1zwuIi6PUKT
NJRxEKbW8wh7eaOUKsdoHTUcHKxqTjwK9ULmf2ldN9bAQfNbl/hs9gXU8Gz1
vI0ODm4rR4I0V8+jcM7uU076ONQa3EkU8PVAWuZMuzPGOIBI2XQ/xzlUNu9r
HGiOQ1TgKVXCxB15H7LQDrHCAW/6O4ZFnEaKt5XVo21wcPYMaUxrd0X/qM3I
3nXCwXOsxtMq1QU5RL7f+sAVB4aU4LrLcc5oS2eB4OMzbL8lTa6jCU7oVsBp
TpY3DtZxgqUXmCcRvVF/6aUfDiqXJ2RH+xwQsUV2piEQhwPMS2MVvA4o+L/B
nq4QHLiCtsr7CNshkrembTCCzX9LFw8vsEGL9pmNk9E4XLp2d0bkqDXy4LAt
X05k8yern7veboXkTQ8Ucqaw6zloz/UCSzSStSmXeg+H28cnLjnfskC2Ou1J
og9xyLC/uI0Rao42JT2PlsrDobrlt4RIohlqHU64Ll+Aw7JiiNrXR6bIKJzu
eaCYzXOSK9j95xFE6djlql2GA0dCnV/USTqq2cFtb1SBw7DfuEnfqAnaX//W
2LoWh8GMQQa/pBGa35yj7ViHg28sI76kwwA9dQ9Vd2/CoSxWKjQ+XR/J8mjt
CGjDwYTnoHKU9SE0aCshfv0zu06cLU+h66L0J6uCUd1s3gdUiTIjHSR4hMmZ
NowD/UxEifA5LdScmbKUNY5DfH167GwyoOgZ35lHUzg8DE0TV7t6EHHeUu4t
n8fBdq3kiZgXiSoH+dprfrHz1Hd0PoTQQP7KM431KzgwixJV75aqo5m2gvJO
LgKEM7KsJtXVUMH26MIBnADSWwWe8qkiV9/TuRM8BKiOpRpoflNBvSKyyUuC
BEgqO8kLftuLUt24YtZtJsCx6rWL5u+/0dHywevEVgJGbeomBQX+Ro3WmZ6b
txNwn+M1OfBBEZno+oh0yxHwS/MXOJzYjZp2G1Zm7CJgS+SrLReWFdB7jjlu
GRUCwukZKWe8dyL65NuiUTUCQJHxwkNDDn1ovXf8kQa730ZyPkVoB2rO0ctV
1CHA5N2bjuUpGcSIF6PP6hFQi19U/TEljT76z8w/NyJAMIeTI5VLGrWYpGmr
mxFwtpRjg+7hbchM9fzEbwsCvBb82B8qSdQqoRtfeZyA/fpnN1I0JFDbj+ke
nZMEVNu8lG9y2IKOdr8MpbgQwOk15z+0VQy1v76jUO9GwLfNRSLvXmxGlk/P
tkSfJWC+QIa3K24T+pSi5U/3ZPPyiB4fChBBlteFJfl8CLD0vGt465Aw6jjz
9U2rHwEeCSUpICOEjllUn7sdSECbrfyahbEg+qyZLHj8KgGDqVJidGkBdEzO
nSUWQgA9LGzUQY8fdfIddOwNJ6BZ4W38l+t8qGt4/KlTLHvfg4UuGu9oqDuK
NPZIJ6Cu50v/Y0kqsvXh+6GURcApjKGqm4WjHrvRlLmHBOSFe/lvdMGQvT7r
YEkeu997PKT2HAX1KsWPXiogYKXB38zRcgOyF3W5qVHIvp+vjZ+5JBfqW39A
Ze05AQe+2vDVKq9HDtO8X6pL2e8bniqkK3Ci/k9D10JYBCwX6baLn1+HHKrL
5PSq2PmKkXuQmMqBBh7d/IC/IkDO4Nv6dKs/pGOio2/jG7b/+qaeVbE1cjBI
bWtsAwHOkzPqJ4pXSMdTPLWM9wTsPTVWWyb1mxw6MuAu0EJA0G7pqUC1ZdJZ
vYTvUzsBRwv1ojytfpHDUtFlKZ0EBOw4SY3ZtkiO/FShiA8QoLT9TBiX+E9y
tK7X/ME4ARlh6WYaZ+bIsbuRWXIz7P4aHterh2bJcY+9358ssvNgdu6r1cbv
5IRWN6n8h+3f7omU1YUpclIwPKqMQgUVN/PTVXIT5NexPZ8RLxV8Vlfyy4ZG
ySlm5/ZXQlRoS6++Fv9shKTGFNRMbqVCk0KYqVXVIClnd9WOX5YKwQJ/tnSO
9JN6imZL6opUODvtbP1hWw/p9Ecm+aQqFbovzvKm9XWRwc2LSjc0qcB03HDw
VXsHmZHV0FSoR4WyCOn5bJE2cje1OK3WiAoNgrQbcpmtZIVXuttnOnt+T7Rs
GEcr2aXjycVhRQWKv0yq6bGPpNCoEHnElQop1rF7B0TqSUYkyzvDjwq9R5Yq
g53qSY/jsbQ3V6lQQdd+d3ighoyRP/l4OoIKHLX7Z1ecqkmxRCP/dTFUiI3D
tMiXL8n838r6QvFUiHnPOHGzvIJ820QZIlOoUIj3LccVlZKW+2YKGfeoICmu
71QYzCKH0zuvON+ngujjrsLnYlUk5/kC0Zg8KoSvSSkWeZSRmnxmZl/K/j/f
NW3hUEIWW6TX+HdSwdZfIjOtJZfUqQyPu9lDBVWvGiF8OZ9skfW0yxqgwj3l
O0ciF56QM4vaS3UTVPiVmeO+IJZAKqSNK21apsLgs4W+xs4sMrtX+X6JKDfM
d1SZyNQHkwt9AuJh4tyw4j6nkpwaRhoNzN01l+KGLf3CRRUKUeSPoed3ZnZy
g8rzIO4mRgKpNaEcJ6/ODRP2nTkbElLI/jnlKxlW3OCuYvzi6vnECglCxTY8
iRv+NqROVjGCK+4pq2yy5OWBaPpFlwN6lhU/D64PVFjlgUPHa6ZRwfqKIdqP
bCMOXjCTrtcJMfmHJcQXUSf0gxcUO3YH0fwNWbFq0hcOL/DCvnUo7gVTn4Xb
V20OW+aFYEEL2UxRPdZy/qL7PCcN/IpY+Zq7dVi9um4bWwVo0EW0o6xOkpV3
ydAsfh8NPHUUFJoNlFhkP3c31Z8GGlN+nNtuCrJeUPJCtS/T4JVd5yR1qwBL
cbfu7oBrNPjRfX9vwBs+1raAoCsTN2jglLnmj1fysiiC05J1aTQIK6UlRC5R
WM36713CKmgw/VFvsjR1iWno4c77XzUNJuKiGsmGRebLJErpfC0NYowbVjXF
FpgvBjRx53c0cC5ZwruF5phpgU/ztXtp0LQUT/z2mGIKZBubBwzSIDup7bHP
6UlmTN3Y72ejNBiJ/pffLXKceUVI8vC27zQogxKTsp0jzEWNip/H5mjw8EbD
bHDuENPT8VhG/CINHiXe4UqGQeZk5Lxe3W8aDNgoinDP9TOdnsZ///OHBv+p
b3RVC+hj/g9XQvkJ
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1:eJwVV3c41u8XtvceJWUmZVQ2Gc95jKxUEkJIyKqQSpQkJMn8JklCVpKSkYzy
ochIGfEaIXtn7/l7f3+9133dZ97nnOe9PiL2HiaXqCgoKAyoKSj+/1ttK/J3
Z2eHsJupuj6w9BP5C6kZea/uEH1tYwUr138hlT7TkqnZHaJiiM2MbvEXyr4Y
+qSzn8xrLX09vN6Ioh1n9Aq+7RABNPEfy9mbkcEBxo8Sn8n862OR/OeaEdWI
qGhK4Q7R9LUi8L/kZnTT2XwzPIOc73TA/VH5FmTl9uWD08MdwnOJ5Jjk9htx
S7UL9NzbIYzvPtU7W/YbNUzOhp312SFmbb6Y6LG2Irgqdgm77hAf1GRidgpb
kZjn4z38J8j2cxocyjwkNH3TMvAnG9n+btaJw7s60Wul6zPa9OR8T2qMD93t
RHYr4dalO9sExzA/y8fhTvTbp0Lp9ew2Yewq/SuhrAsV3zk4GdCyTcjs1t7R
uNONrqlrWqzUbxPCTej9lZluJLllVX312zaRQqN80+ZSD3rpH5lsVbhNNNm0
MyWb96LA+0tnFeK2idlbFwveHexDalrsldmRZPt2uzcSrn1okUriiMjDbSIg
hiny1ds+5BxszcDms0307bb1fCLfj4wefvs8akn272KwHjk9gHZFxBx4IUCu
7+4zk6wvQyj/dKCOB+82YeekSSrYPYxOc1130GbdJj5EsgzKXh9Goc9MX01u
bhEy69psiUdG0Mar3QLq3VtE05FPlvWfRlG8I4M6R+sWQUG7fIJZcAwpHFyz
GvqxRXBYmTb8ezCG3HO64sPLtogP1iFRH6zGUV/RS56ehC0iui+2oJ9vEvn5
Rsrn/UeOV6fEPRg+ifao3zN5EEbGLZaBpVRTyKTSLvrw7S0iQFYwmn5xClX/
2M/ib7lFzJpF/x38N42y+95QC/FtERUPxIdTU+eQblqC6AL7FmFcP/GK698c
Grz0WLOGnhxP7vfptyrzaN/klXseK5tExXOTPpff8yhq6egGQdokZF5cqY/Z
vYiki4X5Y39tEgEJnSnVlxdR7W3OYy7fN4kUgrlEt3IRUVEseHMUkf11I6l1
PJfQDaaiebunm8SHBqWlj73LiONnJqdiBBlHddv0aqygd1HPZBgfkO1tF5z9
klbQCI+ve96NTUJY51fXEcdVZCmkPkFpuklE20X9R0+1jpDC1/5ULnL+v+xa
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
         "]]}}}, {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {"\[Mu]", "Torque"}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, Epilog -> {
        Line[{{
           Rational[2, 3], 0}, {
           Rational[2, 3], 1}}]}, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
      PlotLabel -> "Normal distribution", PlotRange -> {All, All}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]]}, {0.010000000000000002`, 0.05, 
        Rational[1, 10], 
        Rational[1, 5], Rational[1, 2] 3^Rational[-1, 2], 
        Rational[1, 2]}, LabelStyle -> {
         GrayLevel[0], Bold, 8}, LegendLabel -> "\[Sigma]=", LegendLayout -> 
       "Column"]], {0.75, 0.55}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.684540636301993*^9, 3.684540647763238*^9}, 
   3.684540677807744*^9, {3.6846344349702787`*^9, 3.684634461850379*^9}, 
   3.6846346558660507`*^9, 3.684634797252331*^9, 3.684634832733811*^9, 
   3.6846349443414288`*^9, 3.68463501884871*^9, 3.684635055904681*^9, 
   3.6846352896101913`*^9, 3.6846356802838593`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sigs", " ", "=", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.1", ",", "0.5", ",", "1", ",", "2", ",", 
       RowBox[{"5", "/", 
        RowBox[{"\[Sqrt]", "3"}]}], ",", "5"}], "}"}], "/", "10"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"TODO", ":", " ", 
    RowBox[{
    "place", " ", "legend", " ", "inside", " ", "the", " ", "plot"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"TorquePivotTriATB", "[", 
       RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "sigs"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", 
     RowBox[{"-", "1"}], ",", "4"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{"sigs", ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", "Bold", ",", "8"}], "}"}]}], ",", 
        RowBox[{"LegendLabel", "\[Rule]", "\"\<\[Sigma]=\>\""}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.75", ",", "0.55"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Mu]\>\"", ",", "\"\<Torque\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Triangular distribution\>\""}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Sqrt]", "2"}], "/", "2"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Sqrt]", "2"}], "/", "2"}], ",", "1"}], "}"}]}], "}"}], 
      "]"}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<../abecker/SwarmPublications/JournalTorqueControl/pictures/pdf/\
TorqueTri.pdf\>\"", ",", "%"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.683656192718853*^9, 3.68365650959415*^9}, {
   3.684533201990088*^9, 3.684533227629901*^9}, 3.6845336018509903`*^9, {
   3.684538398449457*^9, 3.684538398934102*^9}, {3.684538872647613*^9, 
   3.6845388887736807`*^9}, {3.6845392008597593`*^9, 3.684539232440401*^9}, {
   3.68453938540254*^9, 3.6845393866137953`*^9}, {3.684539430208269*^9, 
   3.684539435555996*^9}, {3.6845436780615*^9, 3.684543685187031*^9}, 
   3.684635142165762*^9, {3.684635208962812*^9, 3.6846352179362793`*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
b1XUD1sifYll9XF5mfT/AUn1VAA=
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxN13c8VfH/wHEjlFDJ3iOrgRaKvI0IJSFSobKTUVYKhQpRyEg2ScomZMSR
nWtvUoTrLvtGkvG738fX757v+ef1eD4+n/O5n3vuPefxOKJWrka2dDQ0NM9o
aWj+U3Ky4retrXmEZvvoeW7V50pGXez5cmxsGvVd/cllpB313Hq4mH8iauL1
aR8aRdQTvLGytC5zVHfFLkXTjc5QXU0b327jQaC6Wai24rn2NNWEIwpxmdKT
VJ+0kmtWDx+juruV3FCtOkz1S/6ItFX7Hqpv0oRoCuqjPoH1n1Y/hno03+1w
2Ho31Qc1TMsFX6FucRDs0qjsojpJn8vdPhX13WN7uF48Rc29TmPefxE1Ruhb
Z2dTJ9Vu+EpO3leo+Ypzr1tdR/3VJyU9R6ITeSSVmXb4n46qg1Yk7vd8B9J+
tZp0OfWB6t49gUdUKzuQQ3lMriLtsaqfh9zdg592ID6setweSx9VLd/aVnRd
7EBkM8puc9lXqDI6Xdni5e1AqgTfqXGsN6rmn9TVsp5sR2p7HHFzD7pVTbZO
h+XmtSN3jF/UaQuMqK63HO5evt+OtN3X0liKn1B9FyXEDRrtCC5Q0L89mKB6
3nyvRQhLO3L1jIBGxNaC6pIEXUb3QBty+hyNedb+FdWEeTKeL70NKVhxrZvc
v66qXoGVtbnThnQf3Ru7/pwW8IGDHnkn25BBo0nxjmgGiLzwrXJlC4PIEnfj
1Y4ygyJXFY1aKwYZfjKlLOe0B36O5Wo/j8Egnf2TX05lsUPQx5QXPZYYJHmF
aZO8wAlH3CN7+GUwyC1iWPjxN7zQpxLIY0tuRf6uJCVi0wXBl9HDMr+6FRE6
euKjzy5RONBl++5PcCvCWcG6cNBbHDDxV4hqRq2IXdmi0n1hSXCz1pUPFWhF
1jBefIO0MsB3RNmrd/obUpl0/NBX0cPwdeXwF4Gib0gFpoY2N0AOHGqF6Ox8
viELflf4mKKOwmdjuvDVPd+QMk+WZ7uST4Kl4O9e9ZEW5PbqmJPhsCIw4rC8
Ye9akFfq++XrlE/D5YffMgVPtSB2zk2eu70B1jWrSHb0LciDBy7njhxUhwzW
vKOF7c2In4ba0FieBiylRVZrWDUj3MwXk81XtSDHM1tWWr4ZEcx8K7eRdg5s
9BpSWTebEKVf1b33LXVhgPwnYCi+CXl0sVXwH68+RLTsI1fbNyERIesf6XkN
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
CYgq+66j9sPpL21tof4/CejLag==
       "]]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
rg==
       "]]}, 
     {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]}, 
     {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxN1nk0lO/bAPCxJGWpfCWEbFmyVbYJucZSqRCiVQsSUSKRsoRkC6EsRUiy
J1LW8tj3EB57tjEzxthF0sT7dM57mt/8M+dzrmXuue/ruWfErG+b2TLjcLh4
Jhzu7/vSK/WmjY055HTu9jbrbHPoDLHuvr00hxgnnjF23GUBH9zCR0bIc4hB
xqlP848twNmIuIx8nUMq9HNDvezOwCw9Qtw3YQ75IGDwclTrHExdJHvi1OeQ
Eu62QCFlS2g+tiPIed8cQuBqVpUttYQsZa3oUeE5RBlXwT9EuAT2HNGZlaxz
iN+v4a/aFpeBXHYY9e2cRSQGRUREj1+FcYEYRSanWeSl8IuCsvfWUL2p8pCL
1SwyOhsfGo6zgdcLU/pj5rMIm7S6pIGZDVxtIlys0pxFttj9rL6/agPDHtNB
fltmEcVrEp2Lp2yhv1dvjOntDGKqz2F+Sd4eOmIWnzEPTSNDUvu+CqU5ga9S
v9C1tmlk9ibehix8G/Y3IW/rKqeR1qr5TQvxt+EpPaw4+O00ck2+gNn+uDMY
20gPct+eRjIIil4LJ1ygZb+l+G7maUTH7U3Q9Vuu8KBZN8frBw35eUHyWtFH
V9h3TVZlmExDCpo2ZgvprhAat3LkdQsNyUptOF8ecRcM1iNvSMfQkChSWghP
uRvUt9TlK8vQkNm6cf+Xqh7gbpt7KEaQhrgHqy5IB3uA1EZ09QonVm8xqeo8
6AGPD17tLl2YQnycb4epBNwH/RdrP6F8Cik+wXX3zfADqL6uBIbGU8ixzO5L
ncXe8IXpxddrd6lI1JU/3Ak4fziYdNzqnR0VIW1GFxsO+kO6xtqP5QtUZDY7
rtzU1h8iXC8KBelQEe2oeDPvFn+4TBJ2zOKmIq3v3ywfTnwEuKZU9tnMSeTU
50/s+aceg25krt697xTko4m37HtcCBTJX+pFOijIkxSxdyIQAvuauBzZaynI
/puBLcveIcDDfDv6RTYFYZU2VBqihwDR9cBY+T0K0vJ7fCF6IxQCzhb54Hgo
SGIWr+USfzg0iFSWhhwlI9OySXW0tkhg/akqy6NBRradK63Y/yMSCO058S8V
yMgDton0XIEoKHsYdy+Hl4xsoY2RjttGQe6ok+rXcRISzNITLLIRBZGpwgXb
H5IQqWWTT6cPP4NzUp6ZccUTiM0PYW12Ugw8X5/fJZozgRQE6Jvc3xEL33qu
B2UmTSBRrScuSWnHwokgs+uljyeQTaHOW1TjY0FrUlZy8PQEwj7tzit7Kg5E
s/uSReaJyPt2UYOnjfFAVVCLeytDRLYouZU7TSXASqFdwJ7dRCTgnexPYYlE
YNZ44fKCi4hwhmwuF7BMBKGj9JPhi+NIUphl1s+2RDC5XI1z+zyOrGvia8xK
XkFRhLGDvsk4YjctwFz4Ihn8564fJt4bQ85ydirptr6Gp27x+y45jCHWXBaa
z2deQ+Lvpl29lmPIp2irmm3bUuHTZoXFZp0xhFq7N/+RWSpM7llK/8AxhoQz
V321GkwFY5OH2/2TRxHu8rtpXMtvQNVaqUEnYgQJJ14R6DNIhz5XqWIWtxFk
trqQe/lmOjx4LJxRd3EEOT01s4iPSoeKTI6g47IjSNDVgUHVgXQwmKMcNa0d
Rg7w/brP5pQBll4p9VfXviM6rPc0dr7KhEexO+ofXh9C2PsQW0+BHJDKZC/S
MRpCzsvdbknSzYHG0o23LCpDSKWOUgXNMQc4v888DmIaQtQ2ZyQxIzkQK9F8
5GniIHJbdCBGyi4XsvP965I6B5Ak6r3888g7+Na8VPtFux+hWM3GbRzLB168
db61RD9SVlyaeMAqH8687UjYzN6P2Ae7RXs/yIehh+/umH7rQ9YPcgfavMuH
SRU7UZJNH0Lvn2e+wVsAuOQBT86QXqQNnaDbUgpAybXq4MUuFNlR1qn1+HUh
hO9+mrJq14nQhvcc07tRDFdxwXrCRp3IdxUOu9rgYlAh+ZJ1DnYiv2+1frHK
LIahvDvyT+jfEBm6ru4CpRj26Z4pEY76hjzNEmO3tS+BRnvhDt2yDiTXNC8y
26kU2G6e3RAQaEPwYkbfN0WVw2JK5Bdd6wbEhk1MyYC1EtyTONi1iz8hyyu/
bsoeqAVSVGmbemsMTI907pYsaYTAYeuL+u0VULGXkh5OagUq8VTiGNoCkh5/
WLivd4CMfkqGaVY3zHJomN016cTm485O7+puSOjxNuQ72wmZv/UeZQ52QwdH
63rhpU6QKaRc3uBCoTql1n3coROkxZX43t1BwX6sQ5zjcSdI4SoC2LV6YFA8
azSwpBP2fh60Qtp6Qbx96RWLUBdMxL1rn6L0wrEStic84l2Q5vrwMB9THwTb
cIQKyXSBpJyEwC3lPrCgSWWJqWB+6dAhGN8HJfKmA3MnMXv80na36oe6wTrv
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
3Nhg+P8ApNzWTg==
       "]]}}, InsetBox[
     TemplateBox[{
      "0.010000000000000002`","0.05`",FractionBox["1", "10"],FractionBox[
       "1", "5"],FractionBox["1", 
        RowBox[{"2", " ", 
          SqrtBox["3"]}]],FractionBox["1", "2"]},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox["\"\[Sigma]=\"", {
                 GrayLevel[0], FontWeight -> Bold, FontSize -> 8, FontFamily -> 
                 "Arial"}, Background -> Automatic, StripOnInput -> False]}, {
              
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #6}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontWeight -> Bold, FontSize -> 8, FontFamily -> 
          "Arial"}, Background -> Automatic, StripOnInput -> False], 
        TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold", ",", "8"}], "}"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"\[Sigma]=\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.75, 0.55}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"\[Mu]\"", TraditionalForm], 
     FormBox["\"Torque\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Epilog->{
     LineBox[
      NCache[{{2^Rational[-1, 2], 0}, {2^Rational[-1, 2], 1}}, {{
        0.7071067811865475, 0}, {0.7071067811865475, 1}}]]},
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
   PlotLabel->FormBox["\"Triangular distribution\"", TraditionalForm],
   PlotRange->{All, All},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
b1XUD1sifYll9XF5mfT/AUn1VAA=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1:eJxN13c8VfH/wHEjlFDJ3iOrgRaKvI0IJSFSobKTUVYKhQpRyEg2ScomZMSR
nWtvUoTrLvtGkvG738fX757v+ef1eD4+n/O5n3vuPefxOKJWrka2dDQ0NM9o
aWj+U3Ky4retrXmEZvvoeW7V50pGXez5cmxsGvVd/cllpB313Hq4mH8iauL1
aR8aRdQTvLGytC5zVHfFLkXTjc5QXU0b327jQaC6Wai24rn2NNWEIwpxmdKT
VJ+0kmtWDx+juruV3FCtOkz1S/6ItFX7Hqpv0oRoCuqjPoH1n1Y/hno03+1w
2Ho31Qc1TMsFX6FucRDs0qjsojpJn8vdPhX13WN7uF48Rc29TmPefxE1Ruhb
Z2dTJ9Vu+EpO3leo+Ypzr1tdR/3VJyU9R6ITeSSVmXb4n46qg1Yk7vd8B9J+
tZp0OfWB6t49gUdUKzuQQ3lMriLtsaqfh9zdg592ID6setweSx9VLd/aVnRd
7EBkM8puc9lXqDI6Xdni5e1AqgTfqXGsN6rmn9TVsp5sR2p7HHFzD7pVTbZO
h+XmtSN3jF/UaQuMqK63HO5evt+OtN3X0liKn1B9FyXEDRrtCC5Q0L89mKB6
3nyvRQhLO3L1jIBGxNaC6pIEXUb3QBty+hyNedb+FdWEeTKeL70NKVhxrZvc
v66qXoGVtbnThnQf3Ru7/pwW8IGDHnkn25BBo0nxjmgGiLzwrXJlC4PIEnfj
1Y4ygyJXFY1aKwYZfjKlLOe0B36O5Wo/j8Egnf2TX05lsUPQx5QXPZYYJHmF
aZO8wAlH3CN7+GUwyC1iWPjxN7zQpxLIY0tuRf6uJCVi0wXBl9HDMr+6FRE6
euKjzy5RONBl++5PcCvCWcG6cNBbHDDxV4hqRq2IXdmi0n1hSXCz1pUPFWhF
1jBefIO0MsB3RNmrd/obUpl0/NBX0cPwdeXwF4Gib0gFpoY2N0AOHGqF6Ox8
viELflf4mKKOwmdjuvDVPd+QMk+WZ7uST4Kl4O9e9ZEW5PbqmJPhsCIw4rC8
Ye9akFfq++XrlE/D5YffMgVPtSB2zk2eu70B1jWrSHb0LciDBy7njhxUhwzW
vKOF7c2In4ba0FieBiylRVZrWDUj3MwXk81XtSDHM1tWWr4ZEcx8K7eRdg5s
9BpSWTebEKVf1b33LXVhgPwnYCi+CXl0sVXwH68+RLTsI1fbNyERIesf6XkN
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
CYgq+66j9sPpL21tof4/CejLag==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
rg==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1:eJxN1nk0lO/bAPCxJGWpfCWEbFmyVbYJucZSqRCiVQsSUSKRsoRkC6EsRUiy
J1LW8tj3EB57tjEzxthF0sT7dM57mt/8M+dzrmXuue/ruWfErG+b2TLjcLh4
Jhzu7/vSK/WmjY055HTu9jbrbHPoDLHuvr00hxgnnjF23GUBH9zCR0bIc4hB
xqlP848twNmIuIx8nUMq9HNDvezOwCw9Qtw3YQ75IGDwclTrHExdJHvi1OeQ
Eu62QCFlS2g+tiPIed8cQuBqVpUttYQsZa3oUeE5RBlXwT9EuAT2HNGZlaxz
iN+v4a/aFpeBXHYY9e2cRSQGRUREj1+FcYEYRSanWeSl8IuCsvfWUL2p8pCL
1SwyOhsfGo6zgdcLU/pj5rMIm7S6pIGZDVxtIlys0pxFttj9rL6/agPDHtNB
fltmEcVrEp2Lp2yhv1dvjOntDGKqz2F+Sd4eOmIWnzEPTSNDUvu+CqU5ga9S
v9C1tmlk9ibehix8G/Y3IW/rKqeR1qr5TQvxt+EpPaw4+O00ck2+gNn+uDMY
20gPct+eRjIIil4LJ1ygZb+l+G7maUTH7U3Q9Vuu8KBZN8frBw35eUHyWtFH
V9h3TVZlmExDCpo2ZgvprhAat3LkdQsNyUptOF8ecRcM1iNvSMfQkChSWghP
uRvUt9TlK8vQkNm6cf+Xqh7gbpt7KEaQhrgHqy5IB3uA1EZ09QonVm8xqeo8
6AGPD17tLl2YQnycb4epBNwH/RdrP6F8Cik+wXX3zfADqL6uBIbGU8ixzO5L
ncXe8IXpxddrd6lI1JU/3Ak4fziYdNzqnR0VIW1GFxsO+kO6xtqP5QtUZDY7
rtzU1h8iXC8KBelQEe2oeDPvFn+4TBJ2zOKmIq3v3ywfTnwEuKZU9tnMSeTU
50/s+aceg25krt697xTko4m37HtcCBTJX+pFOijIkxSxdyIQAvuauBzZaynI
/puBLcveIcDDfDv6RTYFYZU2VBqihwDR9cBY+T0K0vJ7fCF6IxQCzhb54Hgo
SGIWr+USfzg0iFSWhhwlI9OySXW0tkhg/akqy6NBRradK63Y/yMSCO058S8V
yMgDton0XIEoKHsYdy+Hl4xsoY2RjttGQe6ok+rXcRISzNITLLIRBZGpwgXb
H5IQqWWTT6cPP4NzUp6ZccUTiM0PYW12Ugw8X5/fJZozgRQE6Jvc3xEL33qu
B2UmTSBRrScuSWnHwokgs+uljyeQTaHOW1TjY0FrUlZy8PQEwj7tzit7Kg5E
s/uSReaJyPt2UYOnjfFAVVCLeytDRLYouZU7TSXASqFdwJ7dRCTgnexPYYlE
YNZ44fKCi4hwhmwuF7BMBKGj9JPhi+NIUphl1s+2RDC5XI1z+zyOrGvia8xK
XkFRhLGDvsk4YjctwFz4Ihn8564fJt4bQ85ydirptr6Gp27x+y45jCHWXBaa
z2deQ+Lvpl29lmPIp2irmm3bUuHTZoXFZp0xhFq7N/+RWSpM7llK/8AxhoQz
V321GkwFY5OH2/2TRxHu8rtpXMtvQNVaqUEnYgQJJ14R6DNIhz5XqWIWtxFk
trqQe/lmOjx4LJxRd3EEOT01s4iPSoeKTI6g47IjSNDVgUHVgXQwmKMcNa0d
Rg7w/brP5pQBll4p9VfXviM6rPc0dr7KhEexO+ofXh9C2PsQW0+BHJDKZC/S
MRpCzsvdbknSzYHG0o23LCpDSKWOUgXNMQc4v888DmIaQtQ2ZyQxIzkQK9F8
5GniIHJbdCBGyi4XsvP965I6B5Ak6r3888g7+Na8VPtFux+hWM3GbRzLB168
db61RD9SVlyaeMAqH8687UjYzN6P2Ae7RXs/yIehh+/umH7rQ9YPcgfavMuH
SRU7UZJNH0Lvn2e+wVsAuOQBT86QXqQNnaDbUgpAybXq4MUuFNlR1qn1+HUh
hO9+mrJq14nQhvcc07tRDFdxwXrCRp3IdxUOu9rgYlAh+ZJ1DnYiv2+1frHK
LIahvDvyT+jfEBm6ru4CpRj26Z4pEY76hjzNEmO3tS+BRnvhDt2yDiTXNC8y
26kU2G6e3RAQaEPwYkbfN0WVw2JK5Bdd6wbEhk1MyYC1EtyTONi1iz8hyyu/
bsoeqAVSVGmbemsMTI907pYsaYTAYeuL+u0VULGXkh5OagUq8VTiGNoCkh5/
WLivd4CMfkqGaVY3zHJomN016cTm485O7+puSOjxNuQ72wmZv/UeZQ52QwdH
63rhpU6QKaRc3uBCoTql1n3coROkxZX43t1BwX6sQ5zjcSdI4SoC2LV6YFA8
azSwpBP2fh60Qtp6Qbx96RWLUBdMxL1rn6L0wrEStic84l2Q5vrwMB9THwTb
cIQKyXSBpJyEwC3lPrCgSWWJqWB+6dAhGN8HJfKmA3MnMXv80na36oe6wTrv
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
3Nhg+P8ApNzWTg==
         "]]}}}, {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {"\[Mu]", "Torque"}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, Epilog -> {
        Line[{{2^Rational[-1, 2], 0}, {2^Rational[-1, 2], 1}}]}, 
      Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
      PlotLabel -> "Triangular distribution", PlotRange -> {All, All}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]]}, {0.010000000000000002`, 0.05, 
        Rational[1, 10], 
        Rational[1, 5], Rational[1, 2] 3^Rational[-1, 2], 
        Rational[1, 2]}, LabelStyle -> {
         GrayLevel[0], Bold, 8}, LegendLabel -> "\[Sigma]=", LegendLayout -> 
       "Column"]], {0.75, 0.55}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.684538399671235*^9, {3.68453849634173*^9, 3.68453849872439*^9}, 
   3.684538528787299*^9, {3.684538873726265*^9, 3.6845388893641148`*^9}, 
   3.684539204510564*^9, 3.684539388496564*^9, 3.684539436519663*^9, {
   3.684543675549574*^9, 3.684543692218206*^9}, 3.68463446206347*^9, {
   3.6846351646980753`*^9, 3.6846352202940073`*^9}, 3.6846356807250147`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sigs", " ", "=", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.1", ",", "0.5", ",", "1", ",", "2", ",", 
       RowBox[{"5", "/", 
        RowBox[{"\[Sqrt]", "3"}]}], ",", "5"}], "}"}], "/", "10"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"TODO", ":", " ", 
    RowBox[{
    "place", " ", "legend", " ", "inside", " ", "the", " ", "plot"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"TorquePivotUni", "[", 
       RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "sigs"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", 
     RowBox[{"-", "1"}], ",", "4"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{"sigs", ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", "Bold", ",", "8"}], "}"}]}], ",", 
        RowBox[{"LegendLabel", "\[Rule]", "\"\<\[Sigma]=\>\""}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.75", ",", "0.55"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Mu]\>\"", ",", "\"\<Torque\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Uniform distribution\>\""}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", "1"}], "}"}]}], "}"}], "]"}], 
     "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<../abecker/SwarmPublications/JournalTorqueControl/pictures/pdf/\
TorqueUni.pdf\>\"", ",", "%"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.683656192718853*^9, 3.68365650959415*^9}, {
   3.684533201990088*^9, 3.684533227629901*^9}, 3.6845336018509903`*^9, {
   3.684538398449457*^9, 3.684538398934102*^9}, {3.684538872647613*^9, 
   3.6845388887736807`*^9}, 3.684539050089514*^9, {3.6845392360343122`*^9, 
   3.68453924661322*^9}, {3.684539278578122*^9, 3.684539281301207*^9}, {
   3.684539347834256*^9, 3.684539370928897*^9}, {3.684539413266988*^9, 
   3.6845394260116*^9}, {3.6846352309790583`*^9, 3.684635250380561*^9}, {
   3.684635306044159*^9, 3.684635310225789*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
YWOD+L+b5fps
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxN0nk0VXsfx/FjCBXlkQZDhmMKV1eILq6vLrpKMlTKUB5CSoRMoSJdSUIh
mUVmwjFkiC0JjzGkTkJH4nQmjqmQ4fGstZ+922vt9V6v9dn7t/YfW9rxqqUz
J4FAoG/c/+tcmtZ/1tenEQJ69d9zfHd1DjfJ98Hnz5O4PU3HF5Bu3FMr0cSQ
FNx028kgghbuLyIJ+zk8pjC/TZiN4xxmYm7gSOp28qFhbpNoqr13ZBIzTUUz
MWffOOaDjr+3HY7+jLmvY66lQe8j5gdiMZmLF/sxz2bGNvzl2Ia5yLdw/z5V
3E7HWjIE1loxv5/7EUpOwl1/xP6IR98bzHeYKr1J+i2Ydx3qpLAlXmHu5Z+w
eM9swhwxttZcX4d7OVItJ9wKd2O9+sAhcQSzBW/f15jleswtZdxtNo9xa9oc
KpBTwy1akuFef6kO81dLj++T5BrMVitPyeU+uNtzBuuCBXGXLOreEjJ+gVkq
y9NhZLwa8yOTZwb5t3BzL3yQuyZWjTCuB/9TG3RXzy99K5/eiypk+njobWXh
cb3L1eLk+GNVCLK6trT5Awec71HJZ4xUIktxpyl5aTvAclIv4C+vSsRXQ1HA
X1ca/l4zM07irkSa1gIHixqVQHeXwx52YgXiLxwrW6ukDqr7vb8dUa5AYqz5
NZwJ2iB7JKwmrZGEmCkk8auw9WHP+fiIeQsS0rdEoJs4GwG/X85Zk4ly5MSz
P9Vi7I8BIbp6X1ZAOdImbzbxfdQM5nPaFhe3liNpTcmhr2YsgdZAbjfLKEO6
rBffJGlawcgg7UmuWhlCsG8C7kZryP600Ld8vxRRfjs7RYg4Bz462kJWH0sQ
/aBOP/KMI9i52ZG4CCXI4Ok7EiRtZzBKuWlZLl+MuLjMUt49uwi7fjY/4vcp
RO4oTlUtDF+BNaUJtbrkAkR4OKh9rvAqUG14By6+ykfMHD8H7jX1gpo6kx2v
t+UhH8XUzC09fCCT7l7heTAXkXAYjx7f7Qf3RGNPStjlIP8+PG0j0u8PNoHv
4q4XZCMT/btSvAOCYPWPc8KqhpnITGr/iHtrKHQOrLnWD6YjMUUJpPaR25Cq
blCwSyYNec7L0+O7GgZ6c52K3Q1JiFv+FLn1dDjc9h5R0p57hFDuf9YzvHwf
TvZLuyXoP0QCeQSOHmiJAmOnLqsxsRjkSQ81yVM+GqLGR86csIhAcrP7eedC
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
4iLuZnFpneAV3DeoprPr67j/C4q55Ss=
       "]]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
mDQr
       "]]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxN03k01O37wHFRUoYiTyUiJZK1iIpctpBKoVCEZElPJDQqKkqWsmWXJSpk
X8uWbkpUYxszY0sy5jNEJWuWxNfvnPnN57n/eZ/Xue5znfufW8L+iqkjJwcH
x8oVHBz/18kUtY9LS78QB+u0h9hTr0ziLrkW9vXrIG7344xp1Ix7dCF8u18S
7hGrQR8ONdwDwrEKK9xG2W6LnYjm7P3Bds2KxGYHr2G2G8VqK0P0B9kelleN
z9jFYHufvWKjdvhXtsmfJutrNLvZFtpvX2S/A7d5RlvSah7cvXfyPUzIXWx/
U3HexryAm+NJjw8hpJNtXcIR52JX3IE3yk3NTXETTsXIpIng3rzGuFO5oINt
K+Lrt11RuFMZuwtueeOWfLP6fqMWbmdZovvlnR2osyxqNOuCj2ZOAmYlsLYD
Fa/+HZl8+qPmj1VmBq9GaajyR27qUQzTVPSs22tFoSG7vTG2VePTmh79imIc
FTSUUHU5vYLKCWXHU9dkJNNQy9cojYwmAsxUEaaP+NMQr16qn4m7EBzc5dM/
6khDjO6yGctgEbgVO0yKNqKh8oQGf5VOCajltCzfr0hDFhkb2rWuSgGXe8PT
LxtoqC2q7rJJlCzof1EJvztLRY+Uvu1STlGCEKNnN6S/UJE0T1otKlOGpnIB
x6Y6KpI5GXyrZZ0arNvpd/JqJhUl8qTb2hYcBNOoUfWND6mIuGfEySNSE2KX
rKWrr1CRHbP4I5eVNnRdJgnanaKigyOBHhERumBj8GI4eysVxSTP/Rk+Zwjp
ZRtpxpxUJGgU31sxYwSYxP3ayUEKalRsbjUsPQ6XFs7HHyqioBEyxwyt0QTy
XdruDsRQ0EZhv1CwNIOxDk23oBsUdM73aG7I3CkgFoscJutQkEZ8QwBys4RK
sQdKRGkK6jQmQq7OWVh4OCsiQqCgh9s97nlLW8NdJ9qEA60dbV+XRekSsIMw
kYi0Wed29KD0qKK5pwPYcQTrbj3ejmhnr9ipJzmCCtNvUHtvO6oae/lWh+QE
vQUecg8XyMjnW+6WCl0X2K1jXrH1ERkNr1bffCjODRalTljpEMnITpLYrrx0
Bdp5DRedrMjozaYRG6kKd7hBO6BXtJOMeoMXoj32ecCHi1vbdKra0F/OScku
u2uQfHyjp/OTNkQ5mqzfu48I7nvXbQwNWJ7zdvqN83vDpgUOa5pxGzKd4IAT
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
0xHI
       "]]}, 
     {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
w/0/U4fHSg==
       "]]}, 
     {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]}}, 
    InsetBox[
     TemplateBox[{
      "0.010000000000000002`","0.05`",FractionBox["1", "10"],FractionBox[
       "1", "5"],FractionBox["1", 
        RowBox[{"2", " ", 
          SqrtBox["3"]}]],FractionBox["1", "2"]},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox["\"\[Sigma]=\"", {
                 GrayLevel[0], FontWeight -> Bold, FontSize -> 8, FontFamily -> 
                 "Arial"}, Background -> Automatic, StripOnInput -> False]}, {
              
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #6}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontWeight -> Bold, FontSize -> 8, FontFamily -> 
          "Arial"}, Background -> Automatic, StripOnInput -> False], 
        TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold", ",", "8"}], "}"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"\[Sigma]=\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.75, 0.55}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"\[Mu]\"", TraditionalForm], 
     FormBox["\"Torque\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Epilog->{
     LineBox[
      NCache[{{
         Rational[1, 2], 0}, {
         Rational[1, 2], 1}}, {{0.5, 0}, {0.5, 1}}]]},
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
   PlotLabel->FormBox["\"Uniform distribution\"", TraditionalForm],
   PlotRange->{All, All},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
YWOD+L+b5fps
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1:eJxN0nk0VXsfx/FjCBXlkQZDhmMKV1eILq6vLrpKMlTKUB5CSoRMoSJdSUIh
mUVmwjFkiC0JjzGkTkJH4nQmjqmQ4fGstZ+922vt9V6v9dn7t/YfW9rxqqUz
J4FAoG/c/+tcmtZ/1tenEQJ69d9zfHd1DjfJ98Hnz5O4PU3HF5Bu3FMr0cSQ
FNx028kgghbuLyIJ+zk8pjC/TZiN4xxmYm7gSOp28qFhbpNoqr13ZBIzTUUz
MWffOOaDjr+3HY7+jLmvY66lQe8j5gdiMZmLF/sxz2bGNvzl2Ia5yLdw/z5V
3E7HWjIE1loxv5/7EUpOwl1/xP6IR98bzHeYKr1J+i2Ydx3qpLAlXmHu5Z+w
eM9swhwxttZcX4d7OVItJ9wKd2O9+sAhcQSzBW/f15jleswtZdxtNo9xa9oc
KpBTwy1akuFef6kO81dLj++T5BrMVitPyeU+uNtzBuuCBXGXLOreEjJ+gVkq
y9NhZLwa8yOTZwb5t3BzL3yQuyZWjTCuB/9TG3RXzy99K5/eiypk+njobWXh
cb3L1eLk+GNVCLK6trT5Awec71HJZ4xUIktxpyl5aTvAclIv4C+vSsRXQ1HA
X1ca/l4zM07irkSa1gIHixqVQHeXwx52YgXiLxwrW6ukDqr7vb8dUa5AYqz5
NZwJ2iB7JKwmrZGEmCkk8auw9WHP+fiIeQsS0rdEoJs4GwG/X85Zk4ly5MSz
P9Vi7I8BIbp6X1ZAOdImbzbxfdQM5nPaFhe3liNpTcmhr2YsgdZAbjfLKEO6
rBffJGlawcgg7UmuWhlCsG8C7kZryP600Ld8vxRRfjs7RYg4Bz462kJWH0sQ
/aBOP/KMI9i52ZG4CCXI4Ok7EiRtZzBKuWlZLl+MuLjMUt49uwi7fjY/4vcp
RO4oTlUtDF+BNaUJtbrkAkR4OKh9rvAqUG14By6+ykfMHD8H7jX1gpo6kx2v
t+UhH8XUzC09fCCT7l7heTAXkXAYjx7f7Qf3RGNPStjlIP8+PG0j0u8PNoHv
4q4XZCMT/btSvAOCYPWPc8KqhpnITGr/iHtrKHQOrLnWD6YjMUUJpPaR25Cq
blCwSyYNec7L0+O7GgZ6c52K3Q1JiFv+FLn1dDjc9h5R0p57hFDuf9YzvHwf
TvZLuyXoP0QCeQSOHmiJAmOnLqsxsRjkSQ81yVM+GqLGR86csIhAcrP7eedC
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
4iLuZnFpneAV3DeoprPr67j/C4q55Ss=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
mDQr
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1:eJxN03k01O37wHFRUoYiTyUiJZK1iIpctpBKoVCEZElPJDQqKkqWsmWXJSpk
X8uWbkpUYxszY0sy5jNEJWuWxNfvnPnN57n/eZ/Xue5znfufW8L+iqkjJwcH
x8oVHBz/18kUtY9LS78QB+u0h9hTr0ziLrkW9vXrIG7344xp1Ix7dCF8u18S
7hGrQR8ONdwDwrEKK9xG2W6LnYjm7P3Bds2KxGYHr2G2G8VqK0P0B9kelleN
z9jFYHufvWKjdvhXtsmfJutrNLvZFtpvX2S/A7d5RlvSah7cvXfyPUzIXWx/
U3HexryAm+NJjw8hpJNtXcIR52JX3IE3yk3NTXETTsXIpIng3rzGuFO5oINt
K+Lrt11RuFMZuwtueeOWfLP6fqMWbmdZovvlnR2osyxqNOuCj2ZOAmYlsLYD
Fa/+HZl8+qPmj1VmBq9GaajyR27qUQzTVPSs22tFoSG7vTG2VePTmh79imIc
FTSUUHU5vYLKCWXHU9dkJNNQy9cojYwmAsxUEaaP+NMQr16qn4m7EBzc5dM/
6khDjO6yGctgEbgVO0yKNqKh8oQGf5VOCajltCzfr0hDFhkb2rWuSgGXe8PT
LxtoqC2q7rJJlCzof1EJvztLRY+Uvu1STlGCEKNnN6S/UJE0T1otKlOGpnIB
x6Y6KpI5GXyrZZ0arNvpd/JqJhUl8qTb2hYcBNOoUfWND6mIuGfEySNSE2KX
rKWrr1CRHbP4I5eVNnRdJgnanaKigyOBHhERumBj8GI4eysVxSTP/Rk+Zwjp
ZRtpxpxUJGgU31sxYwSYxP3ayUEKalRsbjUsPQ6XFs7HHyqioBEyxwyt0QTy
XdruDsRQ0EZhv1CwNIOxDk23oBsUdM73aG7I3CkgFoscJutQkEZ8QwBys4RK
sQdKRGkK6jQmQq7OWVh4OCsiQqCgh9s97nlLW8NdJ9qEA60dbV+XRekSsIMw
kYi0Wed29KD0qKK5pwPYcQTrbj3ejmhnr9ipJzmCCtNvUHtvO6oae/lWh+QE
vQUecg8XyMjnW+6WCl0X2K1jXrH1ERkNr1bffCjODRalTljpEMnITpLYrrx0
Bdp5DRedrMjozaYRG6kKd7hBO6BXtJOMeoMXoj32ecCHi1vbdKra0F/OScku
u2uQfHyjp/OTNkQ5mqzfu48I7nvXbQwNWJ7zdvqN83vDpgUOa5pxGzKd4IAT
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
0xHI
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1:eJxN2Hk0VV/0AHCRqShJKpFSoUIyD7FRNCEklanMQ0KGKCpjaNCAXqbShBTJ
TMMxFZlnj+e9+94zvEiGDA+h3/ut9fu53/vPXp91zt3rnH3O2netu9Pey8yJ
nY2NzW4VG9v/xqlU1R///o0jtv972mLsO7ymcOf538ewIdzeRv0zqBH32GKs
REgy7hGroSA2Vdz0rQlyqzzHVtyS8CeOvW90xV9WJTY6+g2vuGZ7eWmMwdCK
h2VVCG+k+1c8m+8SIb4NN7tG4pVEftyiBosn7/+hr9jEtpLN/zPuolhj9yMm
uMPGnbX6A2grfuD/dJ+NO+6Uvz82d1vjLuSW/VOni/un+FR63lrcxia3BMKe
U1ds1ZW79PcRbldr+oh/BO5QV/1vbm64C0LWXjdVxF3BpeVSvwd30z1Pc/0t
uHsF03TRmv+MH3xl47OAodxsPVp+l6f2Ty0uNWcMQ2xbzwSrJ5drs59wE7Ss
xpCk+UHxpnqStqhFw6jRWwxJeV76tsP6t7ay/YEa3VgMffhhUP7lyLw20Vey
mMMfQ3d4wuu0yOxwPVIs45sVhkZTX9fnW6wBUYIQIUoPQw6C1VcuRm2Ar5lr
o47vxdD9JuGYvDBhuFjGHrBWAEM+4XX7TcREgaNh3rlxloJcn46/T9m/E9LJ
ExYPyBTkdSmLV/Xpbjg2zjAwraagmbJNMgHm0jDChqlsfEdBPbcPCtlclIH7
gl2SnY8oKICxfHHaRh7kdzcKEwIpKPv4F5H7+QrQplzNdf4CBe0dOV08J68M
fkc/zYoYUFB7baWKapcqbD6fN9QnQ0EPB3kTj73SAOvgtO8XF8ioy0OAw8dS
B5bvE4okaGQUfS6Qp3hRF148j00fqCEjHQfDW4N5h2GoMvi2awIZre5Sq1i2
PArRHb5X9wWTkaC26b1hw+Owf8jdedSejHZ966z9YnYSvHnPG3jLk1GK/K4n
EkmnQHCbiYrCZjIKX3M1rue3CRTKHJWcXupDavcexj/ZYgYLp5S5Auv7kMlX
RvnYXXMIf7Lh+y3nPiRM3l65eeQ8SGbyFOka9aHEesWWSEsrqC3994ZDqQ8V
/Vh+8rPDGvjIvyOjVvWh+Oki43uMC/BkV53+gxQSsmE/pyip5wBqyhXKpuEk
1FmsISYv4Qgkg5I9G91JiNc/0EGJ2wl2uKdzElRJqJ6Lk1OG6gxZuWHfnrX1
orgo+5TuRncwrLxWeLG0F6kHibkVdF6C8XbvNxJpvSjpquLju3QPUGLaRqZf
7kXFEd7z0mu94KuWpn4OTy8SubV5nUDDFWitm6r+ot2DpPJte261XAUhNftc
+109KDjDVxvdCQCLNy3J3Dw9aGLSYGHkaCD03cr2MW0loi0x0le566/BTyWX
HYMORJRQ3n3TfDoY2J73BvHFdCPJfVNuz4dD4TDfcZePl7uRyBnvtp22YXD7
WrGZhVk32vbO0FmkIwz4zOP3pm3rRoeJEgKe1eGwhde4WzGnC+1T1fd4XhQJ
B3wrFKzaO5EVt73BPloM+FAPbGcr6UQi/a2O6y/fgQKjZ7xvUjrRyHBajvvC
HdCQDqKOOXWi9EDr6vCt98CArBQbNteBipKOz4FbLNgezRx+K9aBkuaWdLwz
HsH9bQ/S5lzaULfvxXV2WwlwkS36sJhRG7q72oHB5k8ApcGQIV2FNpS8Wmzj
mVYC9OX4yNxdbEXdZsX2Iveewj49ixKxR62oTiqSvmVNEtS6irXolbUgv/xI
x0GpVODyOPtv69YmtCTNr2478wJylI/rO/Q3oiMunKa+ci/hzD+Nu++zG9Eh
m/OP6S4v4fXj7ZtBrxGpeQs9aia9BN3SQTnHSw3IQ6H7Zn/NKwjm8rPN+VKH
CqUebJvKfQN/0h5+0bOvQf2dtec/fn8L7/yz5KTla5BDe3y5N1cWOJ6ofs6/
/B3R3f2TbhpkQdcUM5SY+B01u/hlRNZkwSeDCwaerd+QZ6KbpG7jO4gYlW1O
1KlGXST5ksuMbBBWq6dObK9ABM/EBOP9H6GZb9C0a7QcreM/fn2TyUeIpi1X
fiorR+FzYU85/D/Cwh2FN7ctypFzUULoGfQRvn5SbFcTRWh9kwpXy5k8MOVu
HXiw8AnNerj0iN/Jh6vP1vJoFxciTrewjH0CReBeJEqMP1GIrL6Q0221isC2
STbzF7kAxZ92+1buXgRHl08dS1xdgD7rb7i4/nsRbLGNj542zUOdOq/Xdt0s
Bj9NDUGLnmyk8LhLk3e+BJbUbYTkj6Sh+y882LgFPsPgo9Im1YYE8FI/wC/v
WAG3e5SU/9oRgE6hF2bdrADJnbnJX5lP4SEUBqgnVoBrbrqr/q4USFUoMohr
qoCrjOOhe7VeQCAmLaimUQnznKrbVOMzQMW81dZgUxWEvIiW2rszD2rfyjX7
91bDbYq91ZHmr2DCuY1vx4taGO4/lULrrIdYyr671MAWkD6SlmH6tgMIk6vN
fLI64ae4z6YblR1QzVy/RxZ1Qubfw+GZpA5Q1JOkTLZ3gnQ+w/Yffyd0v/Jj
T1zqBCmJA8LZPp2gnvR0o61pF0iyfY3gOdQF9qeXzlYtdMGezyQ71NQNJ5nq
bgvmRBggZDePMLrhc2T20qQ7EV773tISXkUEr3MygVMhRNi9f9fWy4pESK47
KS6UzXKSe4vIUyLw0TeoNHD2wO7Aee2rdj1whlwWubm0BySUNovKTvdCMGdI
togUCfQKrsT6rydBz/4TWno6JLBTamD7uo8Eb1tue/qfJ0GaUuigsR0JMhPO
Fi7fJYGY8q8c7yYSbOQ/25EySYItKki3ILMPcj82nuVGfaBWtLVgsaoPjBFa
/knsg7MqfpL6WB/Yndx9tOtPHzxR2bu2axMZqJQjn9slySCkGtfBDCODyVS/
quUDMqxXc3HRtKHAdGuiX4I9BeRKKnrCAynQ+j1f4eANChiriRo2xFFgt4bO
YyKBAvfUWuVt6iiwJyVX+UQjBdaoay7cVMUg0Wicv1QNg32lCR41Zhhrnand
H09jcFx9grLeE4M1qV/0ilgxWv1NVdprDIyGzizRWDGz9J/yMMIgtbbRkLcc
gxp1y8yDJAzs9pZoHWLFodICkeuzGBB4NrX8b+RIjTKg8VChqn1fzNI/DATJ
BbcihVkOOCw5wbKEGL1k724qnEod3tnNsoLN+j+NB6ngckQsOI9lvdRD+32A
CmsvU5TCWDYjuzkKG1FBY7OsoQHLdmKE1DJLKszq8VYuL2PgbVPdZetKBe0J
nyfvWA5JnVzPcZUKG8Tdfxiy/JC8/XhGOBWuNI9Z0pcwSBMzDDv5iArWq1ad
9GA51+bap/FnVOgoSEscWcQApaZPx72nQvdwo4ENy03kdlm1Mio4p0WbVf/F
gCK2yqWvhgphxJbP4iwvp1r17O5n5Wvkzc6fx0D/ZZVKzAQVlGVuTo3PYXAv
fX/87yUqmMk7rd7J8rYPf42LttDAQvpupB2rXvb5Du9FJGmgJVo34z2DQVZx
Pe8tRRq4FgbJ+09joFaeXH3UmAbR3Sqc1n9Y+6vmkHhvRYObF3Wea0+yzqP2
0i0BNxoUx37mEJ7AwKJVU6MnnAZTvXwyr35j4EsnfXAvpQFBgX9B5ScGZUOH
+Zu/0+Dt4DsGGsKA/dc7d8UOGixrfXmuNciq11TQnsUxGvhRVL020zHIWS2a
fH83HWIo9+4eYZ33DE/E3ORBOhR/Km/w7cHgEP/oGQugw15tFyKhG4P6TZ8F
xC3p0K3Ad+prOwY/Ja1v5z6ggw2psDSiHgP5/dX9Qql0yKTfNLb8gUHAARnd
a1l0UHlQlr27BgMutcW/ut/oIEaMqSdUYrDreMqV9gU6CO2NjmCWYOButLpZ
lacfgiyHPHyLMMgz9ZBJ2dQPkgeLxQfyMdCxPMRwlO8H/abcgVc5GNhe6rOe
deqHnBqO0ZRXGLzxOlJm6dsPB3cxpVAaBqO+7zejkH6Y22Uj15WKQVBwcFtU
cj+YbApNohMweHpf9NjW1n7YXyw94XcXg/YP1oqHDg3AHebsw1verHp/XIgs
PTYA6h0+Z2UuY0DMe0pUOTMAFlJits1urPtS2HHjoOcA9Mkv7Z+zx2Dkk2Gt
ZNoACLaO/OgwZ9W/9pDNhtWDIGsQvK5MBYPIH70fYgUGoSIG665TwICnPpCd
T2wQqg5fobXKYbCuqSCDS2UQNmzbUVgpicHWDpk/f10GgWTxzvaAMKu+VNGo
ofpB2MYRWKY0RYF8WlmPA3EQ4rIrb78do4BK/zkZ2sAgXG/SjBMaocChofhW
0tIgPPYt9WikUuDoKJ9o64EhGDtB31nH6h+2c4u5n+KG4LTcSPz4G1Z/ESD3
PrRiQFdNW+qIMQW0HdEHUTcGNCtVyGUdo8Bk8YuIzKsMEHz94aitHgUsLjjL
lT9iQFDMvQ2vlSmwM2c8dLyGAS1eBpzp2yhQdJJ9r7HST3iQVeYRPsjqg7el
AtbyD4Mt8bXma28yPO7lNSSIDENpbFzDtCsZ9OVGd+ySHoYLR8MG1e3IkNWZ
W6dxeBjuowsfXpiSwX+3xnb3a8NwuV7kFeMgGdZUGn6rHRwGXdNHa4wm+kB5
6crG219HQGNTSM8Nxz7YbXyHvK9+BGjn/I3+WvWB4POXGc3dI7AHkqo8T/fB
mE675tbJEbg15VOkqtcH6RFKju93/YIbfy8UmYr3wRY+ZkFb9C94Hi0tnt5N
gr8iwRbip0fhJsE3voX1/ahQu51YwvgNmVGT/DIzPUAh0QcvzfyG6k/Jm7WH
e2DxJiiIc4yBWbKA8xFyD6h9m6uL3D4GldaWrbLfeiDX9NKi2ZkxYP68TPON
74E0d5MLvyvHoEAygdEg3wMhKSJ7JJ6NQ5DqwN28i0QQDzlL1M+aAK2cCCXD
1C6oU3z18F/uBGRZz7cWxHaBH2PsWGnxBFw78GSHYAhr3Ph2qcy3CZDXO9aa
Zd8FV8UKkzZSJ0BYNDbEXKoLGsoEbWibJqH2RZpwTE4nBM400oJDJyF3mroj
oKAD2tyP/Mo/9weiS5qynZ+1AXNx4rXOyBQ4FlgNcoY1gFCnVEZq6gxIV/k/
OpRRAYIf6hOYr2ZAQvSo40xQBQjEeEWYZs1AS3HB2iSTCuDXKrbjLJ6BQ8WO
xPT5cuB6YyB6uWUGgrs2uzWdKIc5P6dHhzhmgU02oTmr7QuQhF4FkVxnQV69
uiBSrgR6xwzclb1moZoQEDraVgzE2pFzD/xnoSHIgbkvoBg6ghVUDofNgkDH
AEUOFUHDQMVEVvIsnPt2P8XMqBC+FlCdrjfNQktWYBuvfR68NN9uslWJCWkc
TqaevZnw+SFmclqDCdSDa7L+iGZCV0Oa6X0dJpyLMw/ceyED1ujvOr3KiAk8
E0T/HPob8FGWthh2YsIxgbTpTUMvQU9YwbqUwIQW4in2os+JYG02ZT2VygSB
VB1XfrWncDW2wEb2NRPKa4JKf+Q9gSwu1Qsvcpnw0KRV7Ep6HAgyNe1jfjBh
x8U/pBm+uyCjuGRf1cyEiybXrafmo8DA66vDUicTQvgJ+WWDEXCdoeN0hc4E
HbJYvZHvDYjfxe787ifLezpCCIcDIOdClfPgGMvcBf1+G65AbXKEi/gM632u
IEZ9qRP0d+u7nv/LBDa7yqosghksb+R2i1s1B///f2CLSa1bIzduhXsx7tzr
cBvWnrikK4TbeTWfR5AI7hCdRo/CHbgLSk557pXF3TQt4OWgiPunfJtXqjpu
0bfmVzYY4I5IPO83b4v7WaeIv6IT7pINff6XL+EejbENoAXgNr/ucP3HQ9y7
rS6HJFbitig3qbT8gTt6j9Jq0Zb/5BtfiHpGxp0fEf3g1RxuvZxXz7Ll5lds
t6r3c0US7mcZBvPDPgsrvpOMbTnPtbhiz0720KefllZs8OSmd5/rvxUf+2cd
/jyYTef/7daF/pScWbXiw6FhhXY72FdM8Jr8xMfAzQh5M/T8K8eKJ5xKHSuj
Vq945rIgd6Md54rzj9cvOstyrfiXq7wKxwxu8Xe9cVGN3Cvmqxg4kkzgwfPN
K4oQfHhXfO7qAcWE42tW7Pf9znMJwbUrvqe+X/7pL9w2IfuFUov4Vpy5hqj5
+gb/iseLf0TFnVm34jG1bVKC4uvx+RzHKAkSuO2b/BK2SuLudmji2CmLuzw2
lHpAE/fjAUai0VncKg8L+GIe4J6wpFXxxeHO2rMu6OET3OKfXIYJqbh5hkS+
p7/D3asZequ6Bnc8V47KsXrcxq29v+ubcFc5K1m3d+J+/4ihRu/H7WwtNOHE
wL1DSjdjeOQ/+T8nbZqc/E/+qJoGv5n/rM9sOnxuDnel6E7N4EXcNxhGf/79
w/0/U4fHSg==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
         "]]}}}, {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {"\[Mu]", "Torque"}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, Epilog -> {
        Line[{{
           Rational[1, 2], 0}, {
           Rational[1, 2], 1}}]}, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
      PlotLabel -> "Uniform distribution", PlotRange -> {All, All}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]]}, {0.010000000000000002`, 0.05, 
        Rational[1, 10], 
        Rational[1, 5], Rational[1, 2] 3^Rational[-1, 2], 
        Rational[1, 2]}, LabelStyle -> {
         GrayLevel[0], Bold, 8}, LegendLabel -> "\[Sigma]=", LegendLayout -> 
       "Column"]], {0.75, 0.55}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.684539050727324*^9, 3.684539172596488*^9, 3.6845392473597107`*^9, 
   3.6845392819314327`*^9, {3.684539349215146*^9, 3.684539371686418*^9}, 
   3.68453944026709*^9, 3.684634462206657*^9, {3.684635312442264*^9, 
   3.68463533878892*^9}, 3.684635681142131*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sigs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"TODO", ":", " ", 
    RowBox[{
    "place", " ", "legend", " ", "inside", " ", "the", " ", "plot"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"TorquePivotTriATB", "[", 
       RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "sigs"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", 
     RowBox[{"-", "1"}], ",", "4"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "sigs"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Mu] (pushing location)\>\"", ",", "\"\<Torque\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Triangular distribution\>\""}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Sqrt]", "2"}], "/", "2"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Sqrt]", "2"}], "/", "2"}], ",", "1"}], "}"}]}], "}"}], 
      "]"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.683656192718853*^9, 3.68365650959415*^9}, {
   3.684533201990088*^9, 3.684533227629901*^9}, 3.6845336018509903`*^9, {
   3.684538398449457*^9, 3.684538398934102*^9}, {3.684538872647613*^9, 
   3.6845388887736807`*^9}, {3.6845392008597593`*^9, 3.684539232440401*^9}, {
   3.68453938540254*^9, 3.6845393866137953`*^9}, {3.684539430208269*^9, 
   3.684539435555996*^9}, {3.6845436780615*^9, 3.684543712674811*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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

        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwV1nk4VO0bB3Ah2TKSCgnZpaKSbG/3UYifrYRU5CVRkjWkRbZslZR9KyPD
HCFFSotJvFRCZLKvY2bM2EnEyO/xx1xzfa65zv085zn3+d6z09XH5gI3FxdX
P/qsfc/lHPqyujpFWdim7vC7lARtca7tPnNTFFKXwSnuMhK8DLw/MMCYopzI
srIXeUECX0vaPKVpilIs42+rXE6CSU6CfFjWFMVFqeq4/WsSsM8ybnAdmqJ8
23/MrJJCgmHJlL3rvCcpTy3P6wV9J8H3lNkk7t5xyvHILOnfMyT4sC6jye0q
i7Kc35SWrlcADTIfq+JMGBT9jYFdnqEFwNqjnUZSpVEW7nLFjH4sgIOuGg2G
CQMUgRrLMX6BQmj9Olf34XAXpdhAdOtpi0K4v/1B7qJHG6XAO3nBPKUQZnMT
PxxxbaBsf80xYvcWQtBjIf7Dr19RlEy6Hd7IkoH+sKr50LcUqGhv4FG9SIbo
ftezRi3VsEkyJPtvERlYNOvsIWojvLWLj/BgkUHVKLfwBN4OB0ZPWFQo4zAq
67/l1qd2iHPJvBurggN5+Wgkuacd9qqOGDqq4qBazjy3upEKTXo0Ue5dOKjI
a2wt8afC0Cc35WN7cFDmqo7iN/gJoo2yjysP4KD0vseF0twBGXJfDipjOIyk
lbSwmR1Qfevy5lHk/IDb/2xd1wlKmy1O4oY4KKorSF450AlyURoLakeRMz2/
S6V3gvk32w8KJsjX/hwOcumCPa61LxbNcZDX2ia951c37BGIKlM4hcORCr+E
QEIPHCnRFR1AdtH6xlW9qweC3Xc8znDAIVcrnG7l0gOKLDlD4TM47Dg4Vurb
3ANR9F/3mI44SGhTDCvIveDjWRkR6IoDQcfDQ9+pHxqUmnawvHDY+6amK/Ja
PySku+OxV3Cw0pG2+JbUD/aF701VvHG4p9Oq6fS1H+ouHae4+OAgqKu/FHpo
ALbqzF1t9MOBJyfGZIh/EKqLhMz8gnD4m3O2S5E2CD0XXzVy3cbBOK9WO256
ECYB6w9FvlegnjyxMgilfE/mlpG3P1+2qpQYgjsNrxXmwnDQ+ZhVd8xqCGba
/SKpETgEDPc896wagrxNjIeXonF4yzi6saV+COJIfQEdyNxjzzwPtA/B1bfK
FkYxOCTO3VDiTA5BaeO9XqlYHEp5pbPuKw6D4P/q3N/FoX5QdowuezAMJni1
35d7OGiq19HEc4YhkcA5o3wfh2CN3YYhRcOgFcu/NwKZT4ezbPjfMIyLeydo
J+CgYJbt92NpGPzPxMg/eoCDpyVvyyF+GnCLnTZiIL884bU7ewsNMvLfmOkm
4oCdMWC6adLAgMLF6UE+d7nX8fcFGpTEfh/d/AgHko/R2zMBNBj5uXuTM/J4
QPE2ShgNfnymbsWRb9y82RaTRQNVznilbhIO6felTSVbaSDibKFlmYzDj+eO
BwwMRuANf8lVg1Qc7F8s3akyHQFdvSILP+TOl+md2nYjED+6JE1C7n/Vfmuf
9wj02mzMF0jDgf3O4rNy7ggEh2vp1SNf+cCWyi8egaj3QrWzyNPVsVd2Vo0A
J08BZNJx+F1TJybdNgJBAvdE/JG5Pxs4beKlw1fnW4vCGTjc+dL9PEGUDtaS
6QL7kPkbr3EL76BDb/Egvy2ySHNFIZ82HRz/+LWkIj9ssVmKPEKH3yuBKZXI
4q3TFuus6cAMkDlGRZZs3z277EEHafMfnoRMHLKpX41CrtKBfzGzZxeyTMfF
tN9hdEgtuXXQGFmxO99gJgPV+yKYF4Rc2HPkgXcBHbxu+pbfR97VNzg09pIO
P5s9nj1F1hyUjmE0IrPDLb4hlw+97TrfSQdxrn9/9SNr0xx2D43QIdnCJGwa
uWrkd+i5GTrsCno0xZWFgwEjubVnhQ5F8nmGosgU5n7F04IMYC+0BcogH2F9
D/q5lQHvsiLuqiPXsb2/nFRgwEy5SMQh5GPjwtKtGgz4l9HucAT560SRt5UB
A/o79xMskC2mTGsaTRmgty863xa5ZZqx2cyOARYpuyUckW1mo9zrXRgwUhR5
yRWZOidfddSbAd3bWGkeyA7zH4VqrjOAK+Jt3mXknt/nzh2OYYDqA7s4b+Rz
i5yyd0kMUKZvM/dFHvqTyaOby4AWNWfmmt2WdewrixmwwB3ntGYm5yf5QBUD
fLfOFa9d7/n36nLZfwwQFVxuX6s/sSpmtbeNAeTIv+1r6/uue5H7rJ8BImpn
i9f2N8ttPac6xgDxXO8za/sP5J0wLlhgQEJCav/a/S2uv5uuwMuEE5maOmv3
f32D2liuKBM0L2W6r53PCn/DPzI7mMBF3Hdp7fzCBC8kZqkxIZF5EtbOl0eY
hyahzYS3w+dGdyBHbyQeTD3CBEudsvME5Huifd2JZ5nAG5/dPIme52E3ynPp
S0zgZuSr9CDPvCZGkYOY8L/UMql6ZHtn970fHzJhyTmlMQ1ZoNyUx+IJEx5o
fI8JRX7Pp97ZUcyEN5TW7vPIO0unwqcamLA9YdxwrT/b17XZ36Ay4UaEh60Q
crRdhfoGGhM+PvVaYqP+Hudco8r8ZYJRV+cKCbnSnFvNSmsUjvM9bBREvvhk
ZKXLcBRmT706P4jet+1z9W0XrEdB7Dk7tgI5LPPuzVueoyDfbR7sgGzOEv9e
nDsKqZJYUwJ6f/8aLOTrlI6C3X2j1w7IZYldIXXvRmH/wKDKTuStOo8Ven+O
QmxcfkYJyofBaJVgoY0s6Jt8Tq5IweFRt4BFmhQLMs0ay/yRjfeOyymoskD0
7HpdDeQiatlXvaMs8BHJqH+K8ihQUU/GM4QF0iWplOsor1SvSc/NR7Ogsnz1
xW7k7sa/DeHJLMg3E5HpQ/mGBdT6ZTxnQf2DAWddZMFPFv99prPA5EZRwADK
yw9bNDJt51iQPZsmfQfZ99Imn0EuNgy2vtBRQ6aK/pRY3M6G21p7G7xQ/uY6
O3up2LDBOoyoPITy++CK3+boajao0/bphcajfLCK79vVyAZxuY4AMWSxJ3mF
LR1s+DsSb0pC82ES+6EvOcOGYOObH+vR/CiI0nIrVhiD0G1SnYto3kgIL1S0
xY7BQvmAmGQkmg9OhNvBKWOg9flaaSqaV79KVMyk88aA1zmjWwy51dqh78K7
MVh/smWILxyH+KSq9X8mxoBPKC+jLxSHZamb9rInx0HKJ2y78XWUx5eT5eqc
x4HOk+P7LATl9/ti9kWvcWjb8tZcFLniXF/oyzvj8HXq5ENqMA5eeYcLjd+M
Q8H+zGNWgSjf1dYtXt4xAdvIIk0LaF7X6ERnvGFOgPdsVK6yG/q9Z5h+eX4C
eBx9gs3P48AJhf2yPJNQxawO8Ub/D3T+W/x6R2YSOFpaK6X/on45cZljYzcJ
nTYbRiWd0Pl6Hnee+DQJzOVvD1PtUP9lSynJP56CIp6a00rGOMiGneo0LpoG
2/K6f5rlcGjzNBord5iFIe0cvU1dZFjgTOdj7DnoCeDyU0wlgzhVpTAnZx7C
l4jTyZZkyLOVOS6ptQBJes04VYAMimevhGV8WgQ1t60Lng2F8LjQ5A/Lfwk8
O7LvO90uhPisAYnTfByQ4C11kjMoBG8qd3j6uxXwu74ShM0VgElqqG/vxVWw
6r6o+OpZAZiuOkY+ucmFpc2dE1q6WACXflJm39itw+7ZJ+lnyxXA0fCIVy5y
3Nikvw1JpI8EaT4z74SZ3FjrtT1PqZkkYIaRGE+qeTCXzybsPzYkmL5Q5fYp
hhdzbmV7ThJIMH9FbEOTy3qMX7FJC2vIh3KzRo77Hj5MRlNPxzUyH8Yuamrz
zPNhlUq1LZ1YPsg+606KadqALbnFlxUvPgXhmhGjrDR+rMip9+vxV09h/s8B
qTR/AYw/12uvjddTcAjSOJBiJogxGyWUyYpP4Wp9/BN5MSHswAvrU81DeXBP
V10zfUwI2zVY13oiIw+cwtTFcyqFscTPdXdIdnlAFuzUz7+1EQvOHGyy3JwH
U6+/xCTZiWCClXrOJxuJMKmzXUVMloAJ3pXdpRZLBDKPaX+KPAGTn71wZCWa
CK7NV1MklQmY7uniM613iNBxvpln5x4C5qGiezckkggfE8IHNfQJWF2tzfiX
UCI8GmFmWJ4iYKGcO6WegUTQTqwQjntAwGavjO8vdiXC9JmhWuEktB51v3mY
CxGKlERuJKYSsJ0GIedt/yWC7DsPVloOATsuyJfMcSICP0OqvuAZASsukJ23
OE2Ebv3w23UNBMx9wOb1hDURkvlKtU0b0XomGS01VkSwau2eaGwmYCklA8wU
SyLUums5/qASsNobXhKHzYlQ/JCpM0wjYHIS0SEJJkRwdxSfvsAkYDq3vz10
NSaCnIphIYtNwKwZYkXaRqj++8wtMzOofsWT7n5DVD+m4dvVeVR/O2P2JYb2
Z/MrcnER7S9it1AMEOGT9E79mxy0Hstf4exhItxiWs6urhKw7uNV+hr/EOH/
p+7v1Q==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[Mu] (pushing location)\"", TraditionalForm], 
       FormBox["\"Torque\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0.026000000000000002`}, DisplayFunction :> Identity, 
     Epilog -> {
       LineBox[
        NCache[{{2^Rational[-1, 2], 0}, {2^Rational[-1, 2], 1}}, {{
          0.7071067811865475, 0}, {0.7071067811865475, 1}}]]}, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotLabel -> FormBox["\"Triangular distribution\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"2", "3", "4", "5"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.684543705403277*^9, 3.68454371324186*^9}, 
   3.684634462340859*^9, 3.684635681476083*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"TorquePivot", "[", 
     RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", "\[Mu]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6764676711948633`*^9, 3.676467689250969*^9}, {
   3.683655816302288*^9, 3.683655818012466*^9}, 3.6845336058575497`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {"1", 
        RowBox[{
         RowBox[{"\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], ">", "0"}]}]},
       {
        RowBox[{"-", 
         FractionBox["1", 
          RowBox[{"12", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
           RowBox[{"\[Sigma]", "\[GreaterEqual]", 
            FractionBox["1", 
             SqrtBox["6"]]}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Mu]", ">", "1"}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "-", 
             RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}]}], 
          ")"}]}]},
       {
        FractionBox[
         RowBox[{"3", "-", 
          RowBox[{"6", " ", 
           SuperscriptBox["\[Mu]", "2"]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}]}]},
       {"0", 
        RowBox[{
         RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
         RowBox[{"\[Sigma]", "<", 
          FractionBox["1", 
           SqrtBox["6"]]}]}]},
       {
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{"3", " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{"6", " ", 
            SqrtBox["6"], " ", "\[Mu]", " ", "\[Sigma]"}], "-", 
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"6", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
          RowBox[{"36", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]]}], 
        RowBox[{
         RowBox[{"\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], ">", "0"}]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"3", " ", 
           SuperscriptBox["\[Mu]", "2"]}], "-", 
          RowBox[{"6", " ", 
           SqrtBox["6"], " ", "\[Mu]", " ", "\[Sigma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"6", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", ">", "1"}], "&&", 
         RowBox[{"0", "<", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}]}]},
       {
        RowBox[{
         FractionBox["1", "36"], " ", 
         RowBox[{"(", 
          RowBox[{"18", "-", 
           FractionBox[
            RowBox[{"3", " ", 
             SuperscriptBox["\[Mu]", "2"]}], 
            SuperscriptBox["\[Sigma]", "2"]], "+", 
           FractionBox[
            RowBox[{"6", " ", 
             SqrtBox["6"], " ", "\[Mu]"}], "\[Sigma]"]}], ")"}]}], 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}]}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.676467689734181*^9, {3.683655818551602*^9, 3.6836558232819147`*^9}, 
   3.684533255979312*^9, 3.684634463538602*^9, 3.684635682692934*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FindMaximum", "[", 
  RowBox[{
   RowBox[{"TorquePivotATB", "[", 
    RowBox[{"\[Mu]", ",", "100"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", "1"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"\[Sqrt]", "2"}], "/", "2"}], "]"}]}], "Input",
 CellChangeTimes->{{3.676467904065825*^9, 3.67646791129003*^9}, {
  3.6780146322743587`*^9, 3.678014693782064*^9}, {3.6845336531426153`*^9, 
  3.68453368574295*^9}, {3.68453372267428*^9, 3.6845337504064074`*^9}, {
  3.684538788650648*^9, 3.6845388162791433`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "nrnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function value \
\[NoBreak]\\!\\(-\\(\\(TorquePivotATB[\\(\\(1.`, \
100\\)\\)]\\)\\)\\)\[NoBreak] is not a real number at \[NoBreak]\\!\\({\[Mu]}\
\\)\[NoBreak] = \[NoBreak]\\!\\({1.`}\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::nrnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634463796012*^9, 3.684635682850985*^9}],

Cell[BoxData[
 RowBox[{"FindMaximum", "[", 
  RowBox[{
   RowBox[{"TorquePivotATB", "[", 
    RowBox[{"\[Mu]", ",", "100"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", "1"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.684533736315269*^9, 3.68453375082355*^9}, {
   3.684538792200719*^9, 3.684538816693467*^9}, 3.684634463817914*^9, 
   3.684635682858906*^9}],

Cell[BoxData["0.7071067811865475`"], "Output",
 CellChangeTimes->{{3.684533736315269*^9, 3.68453375082355*^9}, {
   3.684538792200719*^9, 3.684538816693467*^9}, 3.684634463817914*^9, 
   3.6846356828639174`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Comparison Plots", "Subsection",
 CellChangeTimes->{{3.684538773093625*^9, 3.6845387789630013`*^9}, {
  3.684542352618402*^9, 3.6845423568740664`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"bestPushNorm", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ans", "=", 
        RowBox[{"FindMaximum", "[", 
         RowBox[{
          RowBox[{
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"-", 
                  FractionBox[
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], 
                   RowBox[{"2", " ", 
                    SuperscriptBox["\[Sigma]", "2"]}]]}]]}], "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"-", 
                 FractionBox[
                  SuperscriptBox["\[Mu]", "2"], 
                  RowBox[{"2", " ", 
                   SuperscriptBox["\[Sigma]", "2"]}]]}]]}], ")"}], " ", 
             "\[Sigma]"}], 
            SqrtBox[
             RowBox[{"2", " ", "\[Pi]"}]]], "+", 
           RowBox[{
            FractionBox["1", "2"], " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Erf", "[", 
               FractionBox[
                RowBox[{"1", "-", "\[Mu]"}], 
                RowBox[{
                 SqrtBox["2"], " ", "\[Sigma]"}]], "]"}], "+", 
              RowBox[{"Erf", "[", 
               FractionBox["\[Mu]", 
                RowBox[{
                 SqrtBox["2"], " ", "\[Sigma]"}]], "]"}]}], ")"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Mu]", ",", "1"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", 
         RowBox[{"First", "@", "ans"}], ",", 
         RowBox[{"ans", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
        "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "0.01", ",", "1", ",", "0.01"}], "}"}]}], 
     "]"}]}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.684539759369796*^9, 3.684539766770606*^9}, {
  3.68454237504427*^9, 3.684542375371945*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634463899085*^9, 3.684635682930705*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.13603899999999999326227850815484998748`5.154263344125738", ",", "Null"}],
   "}"}]], "Output",
 CellChangeTimes->{3.6845397674626293`*^9, 3.684542384795682*^9, 
  3.684634463979389*^9, 3.684635683010354*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"bestPushUni", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ans", "=", 
        RowBox[{"FindMaximum", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"TorquePivotUni", "[", 
            RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Mu]", ",", 
            RowBox[{"Max", "[", 
             RowBox[{
              RowBox[{"1", "-", 
               RowBox[{"\[Sigma]", 
                RowBox[{"\[Sqrt]", "3"}]}]}], ",", 
              RowBox[{"\[Sigma]", 
               RowBox[{"\[Sqrt]", "3"}]}]}], "]"}]}], "}"}]}], "]"}]}], ";", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", 
         RowBox[{"First", "@", "ans"}], ",", 
         RowBox[{"ans", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
        "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "0.01", ",", "1", ",", "0.01"}], "}"}]}], 
     "]"}]}], ";"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"bestPushUniBot", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ans", "=", 
        RowBox[{"FindMaximum", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"TorquePivotUni", "[", 
            RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Mu]", ",", 
            RowBox[{"1", "-", 
             RowBox[{"\[Sigma]", 
              RowBox[{"\[Sqrt]", "3"}]}]}]}], "}"}]}], "]"}]}], ";", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", 
         RowBox[{"First", "@", "ans"}], ",", 
         RowBox[{"ans", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
        "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "0.01", ",", "1", ",", "0.01"}], "}"}]}], 
     "]"}]}], ";"}], "]"}]}], "Input",
 CellChangeTimes->{{3.684539481796115*^9, 3.6845394881208687`*^9}, {
  3.68454136885922*^9, 3.684541404523679*^9}, {3.684541477889475*^9, 
  3.684541492077577*^9}, {3.684542377163807*^9, 3.68454237733956*^9}, {
  3.684542512842882*^9, 3.684542561507465*^9}, {3.6845426182605047`*^9, 
  3.684542634353174*^9}, {3.684543372905573*^9, 3.6845433798502083`*^9}, {
  3.6845434102664003`*^9, 3.68454342476092*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846344640481052`*^9, 3.684635683070904*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846344640481052`*^9, 3.684635683127638*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846344640481052`*^9, 3.684635683174505*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(FindMaximum :: lstol\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846344640481052`*^9, 3.684635683204335*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.21960099999999999065281031107588205487`5.362234226714751", ",", "Null"}],
   "}"}]], "Output",
 CellChangeTimes->{
  3.684539491999902*^9, {3.684541372176519*^9, 3.684541405262801*^9}, {
   3.68454148008794*^9, 3.684541492595182*^9}, 3.684542386864703*^9, {
   3.684542514601239*^9, 3.6845425621064043`*^9}, 3.6845426349628696`*^9, {
   3.68454341768991*^9, 3.684543425461896*^9}, 3.684634464230507*^9, 
   3.684635683260054*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846344640481052`*^9, 3.68463568330961*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846344640481052`*^9, 3.684635683360057*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846344640481052`*^9, 3.684635683425921*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(FindMaximum :: lstol\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846344640481052`*^9, 3.684635683431203*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "fmgz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered a gradient that is effectively zero. The \
result returned may not be a maximum; it may be a minimum or a saddle point. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FindMaximum/fmgz\\\", \
ButtonNote -> \\\"FindMaximum::fmgz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846344640481052`*^9, 3.6846356834766808`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "fmgz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered a gradient that is effectively zero. The \
result returned may not be a maximum; it may be a minimum or a saddle point. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FindMaximum/fmgz\\\", \
ButtonNote -> \\\"FindMaximum::fmgz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846344640481052`*^9, 3.68463568348217*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "fmgz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered a gradient that is effectively zero. The \
result returned may not be a maximum; it may be a minimum or a saddle point. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FindMaximum/fmgz\\\", \
ButtonNote -> \\\"FindMaximum::fmgz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846344640481052`*^9, 3.6846356835267553`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(FindMaximum :: fmgz\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846344640481052`*^9, 3.68463568353223*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.30441000000000001390887405250396113843`5.504058828373838", ",", "Null"}],
   "}"}]], "Output",
 CellChangeTimes->{
  3.684539491999902*^9, {3.684541372176519*^9, 3.684541405262801*^9}, {
   3.68454148008794*^9, 3.684541492595182*^9}, 3.684542386864703*^9, {
   3.684542514601239*^9, 3.6845425621064043`*^9}, 3.6845426349628696`*^9, {
   3.68454341768991*^9, 3.684543425461896*^9}, 3.684634464230507*^9, 
   3.684635683578281*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Last", "[", 
  RowBox[{"{", 
   RowBox[{
   "0.13768099999999999782929194225289393216`5.15947392496363", ",", "Null"}],
    "}"}], "]"}]], "Input",
 NumberMarks->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"bestPushTriATB", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ans", "=", 
        RowBox[{"FindMaximum", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"TorquePivotTriATB", "[", 
            RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Mu]", ",", "1"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", 
         RowBox[{"First", "@", "ans"}], ",", 
         RowBox[{"ans", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
        "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "0.01", ",", "1", ",", "0.01"}], "}"}]}], 
     "]"}]}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.684533733790844*^9, 3.68453373380893*^9}, {
   3.684538649827408*^9, 3.684538714949552*^9}, 3.68453892285102*^9, {
   3.684542378699654*^9, 3.68454237881138*^9}, {3.6845436590584784`*^9, 
   3.684543659444222*^9}, 3.684543720984222*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634464778311*^9, 3.684635683686736*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634464778311*^9, 3.684635683742434*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "sdprec"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Line search unable to find a sufficient increase in the \
function value with \[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digit \
precision. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/FindMaximum\\\", \
ButtonNote -> \\\"FindMaximum::sdprec\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634464778311*^9, 3.684635683792657*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634464778311*^9, 3.684635683843884*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(FindMaximum :: lstol\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634464778311*^9, 3.684635683874632*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.31546899999999999941735495667671784759`5.519556602405249", ",", "Null"}],
   "}"}]], "Output",
 CellChangeTimes->{
  3.684538715723082*^9, {3.68453892449374*^9, 3.6845389296288853`*^9}, 
   3.6845423903632307`*^9, 3.684543660180376*^9, 3.684634465051095*^9, 
   3.684635683948936*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"bestPushTri", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ans", "=", 
        RowBox[{"FindMaximum", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"TorquePivot", "[", 
             RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], "&&", 
            RowBox[{"\[Mu]", ">", "0"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Mu]", ",", "1"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", 
         RowBox[{"First", "@", "ans"}], ",", 
         RowBox[{"ans", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
        "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "0.01", ",", "1", ",", "0.01"}], "}"}]}], 
     "]"}]}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.676466416448494*^9, 3.676466470673649*^9}, {
   3.6764665929400253`*^9, 3.6764667320443153`*^9}, {3.6764667913415413`*^9, 
   3.676466813481152*^9}, {3.6764670024882803`*^9, 3.676467011715851*^9}, {
   3.684533315639995*^9, 3.6845333574782143`*^9}, {3.684533424740246*^9, 
   3.684533427664321*^9}, 3.684533609947345*^9, {3.6845386232823772`*^9, 
   3.6845386237138233`*^9}, {3.684538695860608*^9, 3.684538724948888*^9}, {
   3.684542380459647*^9, 3.6845423806275063`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634465183243*^9, 3.684635684230503*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634465183243*^9, 3.684635684468384*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634465183243*^9, 3.6846356846300373`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(FindMaximum :: lstol\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634465183243*^9, 3.684635684636799*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "7.07795899999999988949639373458921909332`6.870507955881018", ",", "Null"}],
   "}"}]], "Output",
 CellChangeTimes->{3.6845387358336267`*^9, 3.6846344708471212`*^9, 
  3.6846356912122307`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plotBestLocationPivotObject", " ", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"bestPushNorm", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
          RowBox[{"bestPushNorm", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"bestPushTriATB", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
          RowBox[{"bestPushTriATB", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"bestPushUni", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
          RowBox[{"bestPushUni", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"bestPushUniBot", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
          RowBox[{"bestPushUniBot", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}], 
        "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Sigma] of swarm\>\"", ",", 
        "\"\<Optimal push location (\[Mu])\>\""}], "}"}]}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Filling", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"3", "\[Rule]", 
        RowBox[{"{", "4", "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "Automatic", ",", "Automatic", ",", 
        RowBox[{"ColorData", "[", 
         RowBox[{"97", ",", "3"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Dashed", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"2", "/", "3"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"100", ",", 
             RowBox[{"2", "/", "3"}]}], "}"}]}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{
              RowBox[{"\[Sqrt]", "2"}], "/", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"100", ",", 
             RowBox[{
              RowBox[{"\[Sqrt]", "2"}], "/", "2"}]}], "}"}]}], "}"}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"1", "/", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"100", ",", 
             RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}], "]"}]}], 
       "\[IndentingNewLine]", "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", 
        RowBox[{"{", 
         RowBox[{"0.4", ",", "1.0"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<Normal\>\"", ",", "\"\<Triangle\>\"", ",", 
            "\"\<Uniform\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"Right", ",", "Top"}], "}"}]}], "]"}]}], ","}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Prolog", "\[Rule]", " ", 
      RowBox[{"Inset", "[", 
       RowBox[{"pivotDrawing", "[", 
        RowBox[{"1", "/", "10"}], "]"}], "]"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", "\[IndentingNewLine]", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<Where to push object pivoted at 0, length 1, to maximize \
torque\>\""}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<../abecker/SwarmPublications/JournalTorqueControl/pictures/pdf/\
BestLocationPivot.pdf\>\"", ",", "%"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotMaxTorquePivotObject", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"bestPushNorm", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
          RowBox[{"bestPushNorm", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], 
        "]"}], ",", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"bestPushTriATB", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
          RowBox[{"bestPushTriATB", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"bestPushUni", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
          RowBox[{"bestPushUni", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], 
        "]"}]}], "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Sigma] of swarm\>\"", ",", "\"\<Max Torque\>\""}], 
       "}"}]}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<Normal\>\"", ",", "\"\<Triangle\>\"", ",", "\"\<Uniform\>\""}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Right", ",", "Top"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<Maximum possible torque on object pivoted at 0, length 1\>\""}], 
     ",", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<../abecker/SwarmPublications/JournalTorqueControl/pictures/pdf/\
MaxTorquePivot.pdf\>\"", ",", "%"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GraphicsRow", "[", 
   RowBox[{"{", 
    RowBox[{"plotBestLocationPivotObject", ",", "plotMaxTorquePivotObject"}], 
    "}"}], "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.676466820390336*^9, 3.676466989524275*^9}, {
   3.676467176427374*^9, 3.676467178092044*^9}, {3.676467921880308*^9, 
   3.676467966912457*^9}, {3.676468003785376*^9, 3.6764681638781776`*^9}, {
   3.676468384380714*^9, 3.6764684153499928`*^9}, {3.676707813843314*^9, 
   3.6767079846388817`*^9}, {3.676708047904991*^9, 3.6767081476060266`*^9}, {
   3.6767082139474154`*^9, 3.6767082727058077`*^9}, {3.6767083111956387`*^9, 
   3.67670831472095*^9}, {3.6845337620296717`*^9, 3.684533764907995*^9}, {
   3.684538635321357*^9, 3.684538643391612*^9}, {3.684538747385893*^9, 
   3.6845387563731527`*^9}, {3.684539513008461*^9, 3.684539632658648*^9}, {
   3.6845396872828693`*^9, 3.684539701923581*^9}, {3.684539783126017*^9, 
   3.684539794917314*^9}, {3.684539829955718*^9, 3.684539929322253*^9}, {
   3.684539974204549*^9, 3.684539998544354*^9}, {3.684540045281748*^9, 
   3.68454009313211*^9}, {3.68454017096564*^9, 3.6845401888859377`*^9}, {
   3.6845414193238163`*^9, 3.684541433577652*^9}, 3.684541519396113*^9, 
   3.6845424131349707`*^9, {3.684542653280794*^9, 3.684542657339637*^9}, {
   3.684543360939043*^9, 3.684543366906088*^9}, {3.6845434300387774`*^9, 
   3.684543458328472*^9}, {3.684543604949129*^9, 3.684543617696163*^9}, 
   3.684543728731419*^9, {3.684635845492674*^9, 3.684635897530367*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1: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
/l9QclZ2
        
        "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwlzkdOQgEARdH/wV4Q7IigIMp+3IAJC9B12ruiYu8dOxbQkzg4uW/4ssWZ
yelIEAQhU0SNBhppopkWWmmjnQ46idFFnATd9NBLH/0MMEiSIVIMkybDCKNk
yTFGngLjRJggDP9P/kqdGj9888UnVT54541XXnjmiQqPPHDPHbfccM0Vl1xw
zhmnnHDMEYccsE+ZPXbZocQ2W2yywTprrLLCMkssssA8c8zyBxBkNkU=
             
             "]]]}, {}, {}}, {{}, {}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
             18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
            34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 
            50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 
            66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 
            82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 
            98, 99, 100}]}, 
          {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[{101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 
            112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 
            125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 
            138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 
            151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 
            164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 
            177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 
            190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200}]}, 
          {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[{201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 
            212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 
            225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 
            238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 
            251, 252, 253, 254, 255, 256, 257, 294}]}, 
          {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[{259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 
            270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 
            283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 295}]}}}], {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"\[Sigma] of swarm\"", TraditionalForm], 
        FormBox["\"Optimal push location (\[Mu])\"", TraditionalForm]},
      AxesOrigin->{0, 0.403},
      DisplayFunction->Identity,
      Epilog->{
        Dashing[{Small, Small}], 
        LineBox[
         NCache[{{0, 
            Rational[2, 3]}, {100, 
            Rational[2, 3]}}, {{0, 0.6666666666666666}, {
           100, 0.6666666666666666}}]], 
        LineBox[
         NCache[{{0, 2^Rational[-1, 2]}, {100, 2^Rational[-1, 2]}}, {{
           0, 0.7071067811865475}, {100, 0.7071067811865475}}]], 
        LineBox[
         NCache[{{0, 
            Rational[1, 2]}, {100, 
            Rational[1, 2]}}, {{0, 0.5}, {100, 0.5}}]]},
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->Medium,
      Method->{},
      PlotLabel->FormBox[
       "\"Where to push object pivoted at 0, length 1, to maximize torque\"", 
        TraditionalForm],
      PlotRange->{{0, 1.}, {0.4, 1.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Prolog->InsetBox[
        GraphicsBox[{
          RGBColor[0.6, 0.4, 0.2], 
          RectangleBox[
           NCache[{0, 
             Rational[-1, 10]}, {0, -0.1}], 
           NCache[{1, 
             Rational[1, 10]}, {1, 0.1}]], 
          RGBColor[0, 0, 1], 
          PointBox[{0, 0}], 
          RGBColor[1, 0, 0], 
          PolygonBox[
           NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
              Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
             1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]], 
          GrayLevel[0], 
          PointSize[Tiny], 
          PointBox[CompressedData["
1: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
RKCuvZxCnx/XLw5IDMKN/Rzl4Eo27jna+EYjgviPW+P63xlMXDi7+J+LTS/M
op+f824gfpx68duVrB7Q2rf9Ttw0Gn2yLtu4HhZAyfL4VWBP4aIPr6csJ9/X
qnH21TrNwMP0epF8QQc8dWvTZO8mPMF34lxy6Yfa1DlcY+L/iQuGE8YfDsIt
mSPKu6uZ6CB639HDkAfLP0ctCJdgY9VqrZ97iA/m/ffPL7OMiVItgabnUQAd
a4uSS9tYKDO359zQgT5Ipt7ZRd5m4Y4wuddtM7rh8raZZ25eYuC/oW+l+J+I
oc22QQbbm8y/q4T8z+sjMGFT3u2/nfiJFKxllLbCRIzJkczlFM4IztIwkmqC
1D1vFvpvYqL0qyPhFmZjEGu4N/OiBQNzzi2KLfMWAn+9TTLtQ2OJjv6eRzN6
YMh+zgFNRxp/VRXreh7jQcDcgnWOZN8ZZTYOLN3BA7lvYjaLTSh8dHvV2A1t
AeiIqelPfmbh4UtaA20ehMcky3fRDhSqdav+9HEVwkuniHnSC4gfb81ML3Pg
wHXWi/GatzTKqSb8WyPRBpJzw3yfnGDhtP6wX3fvC2FVdtuAozuFbj9So2bP
5cKJ9e+X7ibfv69vmwmuXcA1cN5oc5VCkckB88WEz55+NVD/1U5haPle1d+X
eWAsTmWZEt5W4+tOLY1tAdkS2zi/XzRSy09fWFjWA8c96MslO9jYt+hSYrZf
D+Ss3zN2yIiJdfXPJOb582EzN+7dvDIKY/t/t1TO5MNPxc6CRgXib8GuXqLO
ZP+NJVtZk3xTy7gcmP2oG0qycoYGbxN/kNL27FzYDpYudzpUTCnMOqk2tdh/
GKqb33h9VqdRULel8p9iM2y1dJsVWc3GWYnHO9zsBkClpT9NvY7GzCm/ku3K
+KDp573sJTkfxVl2rxff64AG9Y1Zr27R6Jp5W/S2QAhvPNoEk4Zs3DJU1XxB
sg8Sj9htTq4l5/PxUpNK9gg8qjz74egFCndeGRS/FNoPRyoH5k+TZqD7krc3
KvXa4CnbNC41gsZ9dEyGpn4L/LYqaX++goX/AzPxLDE=
           "]]}, 
         PlotRange -> {{-1, 3}, {-8, 2}}, AxesOrigin -> {0, 0}]],
      Ticks->{Automatic, Automatic}], {192., -116.80842387373012`}, 
     ImageScaled[{0.5, 0.5}], {360, 222.49223594996212`}], InsetBox[
     FormBox[
      TagBox[
       FormBox[
        GraphicsBox[{{{}, {{}, {}, 
            {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
             0.011111111111111112`], AbsoluteThickness[1.6], 
             LineBox[CompressedData["
1:eJwtlAtMU2cUxxERC4gukzp1DMTNFXUmG6CbMPgTVxDsRASHm+BwDHW+Ikhm
AAfIhjEs2zTI3NrxEGGLyAABgxARBoJQaGsf0JZ3X1BKeQUpkYljbT0nubn5
7r3fOef//53vesSdjzhua2NjE2++LPdLLhV71alZeFgyVh1tP41X61yYOG2m
Ku8p1LldMR6sK4C48kqN64VJel+C/L0/eR5vmACPa4lS2O04xX62ZgL11u8r
UGb7bKPXGSPMC/OTKix+JD68WjhO++/D61Dol00+43BUFCf4Oz5AF+ulqKzI
AGs6bj3+zdyz/chaA7bGXGsxeTYgOOjNH09mj1E/jdjqcfdW5vIxlJh3K4r/
AdMhqzEuU48Ja71mJK1ULols9fDxtsRjZGyZC8m5Okr1W2E/XSdIXzOKxyZP
c4U2+Po4/XeGNwInaz/tkIU6q3Z6jiDCWrAD4XkHyhvqdKSXj/EgbouOo4Mm
1ZKwE/xrN0pvqrXUrwCaT3dvaErRItHSXoIQnJ2uXWEuWvJHhOx26Ru+VRrY
WEMMPS/mWHK4hvSIwetfilo+q0aI2lJAAt6pwAD5r2rSJ8EzH4bXpJ8a11ss
AqQ467Q5m61TwSrXWwan69lRyl9UsMpRyDBfnbyqxE9F+ruxLeRwOrtnGO6W
dtx6UOu+3p774TD50YNu1mLzroIhnDxhCTmM2abaVQ5D5I8C9g3+SyuTB2HJ
5lKhQOuCx+Ja4wD5pUS1h+76xrgBzFvSmZRIY936ym6wn/zrxYrey6/XR/cj
wDoAfVjYU5HlPtRHfvZhqIC9xi2+D9b2rvTDjhFRw5vsJX8HkBAQve9Sai+E
AksM4LMZduWfjr3k9yBu+DSpl/KVYFobHMILbeo7CT5K8n8IqvnsdYNCBazp
Yobh9N0XHTtOK4iHCl5ldYJQBwXpUUFYERu8oUxOfFRwYMTPZh2Qkz4VPGOX
vX9xvod4qfHJLqa9orCH9KoR6Vz8bg6nh/ipwcgtn8lZ6Cb9GuwfvpPQVtpN
PDVgJzbHrovpxqt0Giw78t7mpNe6ia8Wrn3lrfwnMvJHi0ctaQuMDBnx1sKJ
U+ayabeM/NIh5IO3GEtzUuKvQ3J1cOzNain5p8PIpr98FYlSmocRGP9w49R4
ScnPEQTm+gldTRKajxH8Hnk6y75eQv6Ooq/Iu/brdAnNyygM4rQtnkES8nsU
5cZB5xBnCZ138zlNeOlWJxeT/3qEa9cnnysS0zzpMfA9r/joOTHxGMM3tbKc
dF8x8RjDby/l3CcMMfEYw8fH9fLP7z0lHub/guzOtrCDT4mHAdLKy8+j50TE
w4DBu0v3Erki4mFAw+32+IxAEfEYBytv+NG3BiHxGEd6BWchKFdI8zmOoBS9
Sh0oJB5GPPwhs81vWkA8jGA17kwJLhQQDyP8/VfsM4ULiMcEfvYuXfSzExCP
CSS5Fbavru8iHhOIYZ4NizvfRTwmcZvFzN/O6iIek5h/0Pn2MVUn8ZjEBX5r
tYnXSTymcMIv7KImqpN4TOHQi8VZV5dO4jGFrkCmbZ6UTzymsdHEFEXl8InH
NP6+ePYpO5JPPKax6vl+/lEmn3jMmOvdf8JVduB/Gv0hXg==
              "]]}, 
            {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
             0.011111111111111112`], AbsoluteThickness[1.6], 
             LineBox[CompressedData["
1:eJwtkw001XcYx6+xKDozahbSMpOkk7cts+obZx2bmrfSTpjhiKJGQzOVckov
LFnrnIpixaZykhWSiuUlL9d9d7uXq+u+eblvaCXVUc29Pc85//M/v//v/3ue
5/v9PL+lCWkR299jMBiJs4/hvW9BTZA85wh6CpcdZH45gXfrMwjRdx49mD2O
Rqd8bXhjGQIWmZ21u6en/UpYfeYe8JuZHiXnDXEVQqem9YJwHe4Y/69B0/Xg
i0MVWswuZr/8A9MP1/RdeqWh83VgrH1hYbFVg3miivS1827j2t1Y/zf1ahjT
nb+Dc7t1+36yV2N5zKnWKbd7mHvdyyvg8Bj104ythf7BP0yOonL2tKjiX/i7
XTt4JX4UOmO9B2gJSj9pLhqBr48h2mD3gUdqbNgI1W9HuuOBvGLWMNqm3GYr
dOD49zclh0KGYWnspxPpd/dE2ghUiDAW7AIjxrF9WbSK9HYjbq7QoXJECUWO
IWEPjv+5sjglS0n99uLi6rO1seZK7DG0l87C5YXthxIvKMgfNvo9/U7G+SrA
MAYXM1tDZlZz5KSHi9L216XcXXJ8IzcU4KE5o0ZnPV9O+nhYk5qyXHZDhuJW
gwA+OgM7NrtGymCU6yOAdYFp2q2XQzDKEQmw/KpdhFPIEOnvQ/Wmw75Xq6RY
YmjHSYgoW5MV0XOk5IcQFpEHzD1SHiM5yRCP8H7iw2MWgkHyR4QQ5t1c4fpB
GLItqBFhU22L38+3JOSXGKclOzY2uUvw3JBuSowz3wY+O/r3APnXj/3MrKW1
rgNYZxyAAXiGVPnNr+4nPwcwNy+uOsunH8b28iX4L7kt8UGLmPwdRKX810Xd
oWKweg0xiPkNbYeSlCLy+zH+2jK5LzNHhIXGBqWo48R4chaIyH8p/D51ttty
8xGM6WKGEK9UmykiHhEPGQ484a/Y9lxIemRIYCg/Lr0gJD4y9DivrCnYICR9
Mlg0/2Fv9aSPeMnhyhJzzMr7SK8cH7kc+yU6tI/4yVEiWTI6bdJH+hU4vVlq
29YgIJ4KPGGHz6naLcC7dAqId82wilwFxFeJ4GCHrCQ5n/xR4rH3zWf2ZXzi
rUS5Vu9WEsMnv1QYSNB08B35xF+FzDPDm+qkPPJPhYxslcmqyzyah2F4VPTK
fZJ55Ocw3L2enqtbyaP5mN23/CSnYopL/o5g/3bTvU+buTQvI/jqiL3tuRNc
8nsE096MpPxILt33UUw/dZlX68wl/0exI1T4ub2CQ/M0ig1F66Jc8jjEYwzH
syt/T3HmEI8xBLLfPuzvYBOPMVgNLK7/MZVNPMbgbfvFoMaGTTzUcMm0yU65
xyIeasTnte5lJ7OIhxrJobw084Us4qGBn8d06Zz2XuKhwRU1WPcze2k+NVAt
Lk9esqyXeGghNtdtc5IwiYcWdg6wqylmEg8tHAqri1uDmMRDh4jc0FVhDCbx
0OHWUD17Y1MP8dDByjr/9rWsHuKhR8zbrJIE7x7ioYdZzqnCnZPdxEMP94ZL
r+tvdBOPcZTsfHN/XXo38RhHsWbn5CuvbuIxjjDbQEvFsy7iMYEygUigbewi
HhOQF7yIss7tIh4TWJxR+TLo6y7iMQlp0cR3hZZd+B9XFRhO
              "]]}, 
            {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
             0.011111111111111112`], AbsoluteThickness[1.6], 
             LineBox[CompressedData["
1:eJwtkwtQVGUYhsGBkcGmkQYDCTGMHFQ05ZZDwmuJQjMocommcStCwEpQwSIB
yyYlGskJIgtxIgQTUILoujTk4F5Y2BvsLsvCsqx732WvTomNpTtxjt8/c2bn
nLPn+7/vfZ4/tuR4ftmKgICA0uWL+a0PH8gy1p3DwdqQPdHVPjy6/wqdf63+
dKfFC25MgyuP24HVFWsnCou89P4qSq2xj1WNe9B+iVl94L6xOfdCmgfD7P8H
EDmb+GVfvxvLN8tPhnAs7wW1MMZN3/+CMfGeSFOzC6Ga7hPpob9jfWbOIf8K
F9hyl4ZR82dhR9T7TmzifMFbih+BIvV1Y6p9kfq5ic0/lsUVvLaIq8tfa7pH
8cmmY0eOSxxws/vdgq6r5npTugPJScziIyn6jKdn0E77C/D5xcbtglg7+Evx
yzsIYX28+aSh1YZVbD8iZHzW9tuDYBvy2Q3H8U3glfuRp6w07wR8dX27UpwW
mOqYgmJk3R06k8exUL9SdFb+wauUm1HFtHdChvs2XvD53WbKR478Ykn2tZ9M
CGDXFG7MqZp4cSaaZwpBBTq5/msjso3MBgpwpJaw/0KMNJ8Cv+71FEbUG9DM
YwZQ4kbIh/Gt2ttgx01SYfsrd07eEuvBjqNRoSrf8GytdIHmn4Yud4izRq/D
eqadGDUe1mvT4vzzlIcaZY055W9umceRcmbNoCouQvF9qZby0eDhvuyme71z
YKqFD2gQ9J3maMU/s5TXLNRRge+k5c7iHlNuaRbtp1s+7h3UUH5zMOPuk2GR
GmSwAmhx4NURrr5xhvLU4ue/07ed96vBttcwj8MvLqja6tWUrw4Pdc8kXPZP
QyZllg7inZ1dWxqnKe8FKPZvOOUJn8YatkE9Rj5IUDb1qCh/PdJTahzcDBXY
cpzbCIlKydmqVRIPA9YlNe/tqVXSPAb4gpIyndFK4mPAe+sqi2/yFTSfAfIf
Bpy+SgXxMqL3XMPK3KcUNK8ROyLOFg1KpoifEaKagS77R1M0vwnmsKLLiuQp
4mkinpN4VM6E8s5v2zgHJ4mvmfjKKR8z+m1vDTe+LCfeZuIto7ws2Nee7ygp
kBF/C/GXUn4WFJbUyw5XSMkHK/kgoTytqFvQb3yuVUJ+WMkPCeVrQ8UTZ5da
xsTki418EVPeNjzIGlXUB4vpvNvhZ/2ZoPztCETitn8PTJBPdvJpnHg4sDFz
lJPcNU48HOTXOPFwYENsdeLbfhHxcJBvIuKxiP4Oz1Z7iYh4LJJ/IuKxiKZD
K0PDJ8eIh5N8HCMeTmTsSLhe/NIY+ekkP4XEwwWuciYvZ0RIPFzkq5B4uDAR
7I8q2SUkHm7yV0A83Jjvbr3yPE9APNzks4B4eCB71zl/dL+AeHjIbwHx8GAp
dffaawt84uEl3/nEw4uwQdnTF6v5xMNL/vOJhw9zwr4K7yo+8fDReeARDx/8
PS2nK/t4xOMOnQ8e/gdEkiPL
              "]]}}, {}}, InsetBox[
           TemplateBox[{"\"Normal\"","\"Triangle\"","\"Uniform\""},
            "PointLegend",
            DisplayFunction->(FormBox[
              StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False], TraditionalForm]& ),
            Editable->True,
            InterpretationFunction:>(RowBox[{"PointLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "True", ",", "True"}], "}"}], 
                    "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
               "]"}]& )], Scaled[{0.99, 0.99}], ImageScaled[{1, 1}],
           BaseStyle->{FontSize -> Larger},
           FormatType->StandardForm]},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{
           FormBox["\"\[Sigma] of swarm\"", TraditionalForm], 
           FormBox["\"Max Torque\"", TraditionalForm]},
         AxesOrigin->{0, 0},
         DisplayFunction->Identity,
         Frame->{{False, False}, {False, False}},
         FrameLabel->{{None, None}, {None, None}},
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImageSize->Medium,
         Method->{},
         PlotLabel->FormBox[
          "\"Maximum possible torque on object pivoted at 0, length 1\"", 
           TraditionalForm],
         PlotRange->{{0, 1.}, {0, 0.9826794919243103}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}},
         Ticks->{Automatic, Automatic}],
        TraditionalForm],
       InterpretTemplate[Legended[
         Graphics[{{}, {{{}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              Line[CompressedData["
1:eJwtlAtMU2cUxxERC4gukzp1DMTNFXUmG6CbMPgTVxDsRASHm+BwDHW+Ikhm
AAfIhjEs2zTI3NrxEGGLyAABgxARBoJQaGsf0JZ3X1BKeQUpkYljbT0nubn5
7r3fOef//53vesSdjzhua2NjE2++LPdLLhV71alZeFgyVh1tP41X61yYOG2m
Ku8p1LldMR6sK4C48kqN64VJel+C/L0/eR5vmACPa4lS2O04xX62ZgL11u8r
UGb7bKPXGSPMC/OTKix+JD68WjhO++/D61Dol00+43BUFCf4Oz5AF+ulqKzI
AGs6bj3+zdyz/chaA7bGXGsxeTYgOOjNH09mj1E/jdjqcfdW5vIxlJh3K4r/
AdMhqzEuU48Ja71mJK1ULols9fDxtsRjZGyZC8m5Okr1W2E/XSdIXzOKxyZP
c4U2+Po4/XeGNwInaz/tkIU6q3Z6jiDCWrAD4XkHyhvqdKSXj/EgbouOo4Mm
1ZKwE/xrN0pvqrXUrwCaT3dvaErRItHSXoIQnJ2uXWEuWvJHhOx26Ru+VRrY
WEMMPS/mWHK4hvSIwetfilo+q0aI2lJAAt6pwAD5r2rSJ8EzH4bXpJ8a11ss
AqQ467Q5m61TwSrXWwan69lRyl9UsMpRyDBfnbyqxE9F+ruxLeRwOrtnGO6W
dtx6UOu+3p774TD50YNu1mLzroIhnDxhCTmM2abaVQ5D5I8C9g3+SyuTB2HJ
5lKhQOuCx+Ja4wD5pUS1h+76xrgBzFvSmZRIY936ym6wn/zrxYrey6/XR/cj
wDoAfVjYU5HlPtRHfvZhqIC9xi2+D9b2rvTDjhFRw5vsJX8HkBAQve9Sai+E
AksM4LMZduWfjr3k9yBu+DSpl/KVYFobHMILbeo7CT5K8n8IqvnsdYNCBazp
Yobh9N0XHTtOK4iHCl5ldYJQBwXpUUFYERu8oUxOfFRwYMTPZh2Qkz4VPGOX
vX9xvod4qfHJLqa9orCH9KoR6Vz8bg6nh/ipwcgtn8lZ6Cb9GuwfvpPQVtpN
PDVgJzbHrovpxqt0Giw78t7mpNe6ia8Wrn3lrfwnMvJHi0ctaQuMDBnx1sKJ
U+ayabeM/NIh5IO3GEtzUuKvQ3J1cOzNain5p8PIpr98FYlSmocRGP9w49R4
ScnPEQTm+gldTRKajxH8Hnk6y75eQv6Ooq/Iu/brdAnNyygM4rQtnkES8nsU
5cZB5xBnCZ138zlNeOlWJxeT/3qEa9cnnysS0zzpMfA9r/joOTHxGMM3tbKc
dF8x8RjDby/l3CcMMfEYw8fH9fLP7z0lHub/guzOtrCDT4mHAdLKy8+j50TE
w4DBu0v3Erki4mFAw+32+IxAEfEYBytv+NG3BiHxGEd6BWchKFdI8zmOoBS9
Sh0oJB5GPPwhs81vWkA8jGA17kwJLhQQDyP8/VfsM4ULiMcEfvYuXfSzExCP
CSS5Fbavru8iHhOIYZ4NizvfRTwmcZvFzN/O6iIek5h/0Pn2MVUn8ZjEBX5r
tYnXSTymcMIv7KImqpN4TOHQi8VZV5dO4jGFrkCmbZ6UTzymsdHEFEXl8InH
NP6+ePYpO5JPPKax6vl+/lEmn3jMmOvdf8JVduB/Gv0hXg==
               "]]}, {
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              Line[CompressedData["
1:eJwtkw001XcYx6+xKDozahbSMpOkk7cts+obZx2bmrfSTpjhiKJGQzOVckov
LFnrnIpixaZykhWSiuUlL9d9d7uXq+u+eblvaCXVUc29Pc85//M/v//v/3ue
5/v9PL+lCWkR299jMBiJs4/hvW9BTZA85wh6CpcdZH45gXfrMwjRdx49mD2O
Rqd8bXhjGQIWmZ21u6en/UpYfeYe8JuZHiXnDXEVQqem9YJwHe4Y/69B0/Xg
i0MVWswuZr/8A9MP1/RdeqWh83VgrH1hYbFVg3miivS1827j2t1Y/zf1ahjT
nb+Dc7t1+36yV2N5zKnWKbd7mHvdyyvg8Bj104ythf7BP0yOonL2tKjiX/i7
XTt4JX4UOmO9B2gJSj9pLhqBr48h2mD3gUdqbNgI1W9HuuOBvGLWMNqm3GYr
dOD49zclh0KGYWnspxPpd/dE2ghUiDAW7AIjxrF9WbSK9HYjbq7QoXJECUWO
IWEPjv+5sjglS0n99uLi6rO1seZK7DG0l87C5YXthxIvKMgfNvo9/U7G+SrA
MAYXM1tDZlZz5KSHi9L216XcXXJ8IzcU4KE5o0ZnPV9O+nhYk5qyXHZDhuJW
gwA+OgM7NrtGymCU6yOAdYFp2q2XQzDKEQmw/KpdhFPIEOnvQ/Wmw75Xq6RY
YmjHSYgoW5MV0XOk5IcQFpEHzD1SHiM5yRCP8H7iw2MWgkHyR4QQ5t1c4fpB
GLItqBFhU22L38+3JOSXGKclOzY2uUvw3JBuSowz3wY+O/r3APnXj/3MrKW1
rgNYZxyAAXiGVPnNr+4nPwcwNy+uOsunH8b28iX4L7kt8UGLmPwdRKX810Xd
oWKweg0xiPkNbYeSlCLy+zH+2jK5LzNHhIXGBqWo48R4chaIyH8p/D51ttty
8xGM6WKGEK9UmykiHhEPGQ484a/Y9lxIemRIYCg/Lr0gJD4y9DivrCnYICR9
Mlg0/2Fv9aSPeMnhyhJzzMr7SK8cH7kc+yU6tI/4yVEiWTI6bdJH+hU4vVlq
29YgIJ4KPGGHz6naLcC7dAqId82wilwFxFeJ4GCHrCQ5n/xR4rH3zWf2ZXzi
rUS5Vu9WEsMnv1QYSNB08B35xF+FzDPDm+qkPPJPhYxslcmqyzyah2F4VPTK
fZJ55Ocw3L2enqtbyaP5mN23/CSnYopL/o5g/3bTvU+buTQvI/jqiL3tuRNc
8nsE096MpPxILt33UUw/dZlX68wl/0exI1T4ub2CQ/M0ig1F66Jc8jjEYwzH
syt/T3HmEI8xBLLfPuzvYBOPMVgNLK7/MZVNPMbgbfvFoMaGTTzUcMm0yU65
xyIeasTnte5lJ7OIhxrJobw084Us4qGBn8d06Zz2XuKhwRU1WPcze2k+NVAt
Lk9esqyXeGghNtdtc5IwiYcWdg6wqylmEg8tHAqri1uDmMRDh4jc0FVhDCbx
0OHWUD17Y1MP8dDByjr/9rWsHuKhR8zbrJIE7x7ioYdZzqnCnZPdxEMP94ZL
r+tvdBOPcZTsfHN/XXo38RhHsWbn5CuvbuIxjjDbQEvFsy7iMYEygUigbewi
HhOQF7yIss7tIh4TWJxR+TLo6y7iMQlp0cR3hZZd+B9XFRhO
               "]]}, {
              Hue[0.1421359549995791, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              Line[CompressedData["
1:eJwtkwtQVGUYhsGBkcGmkQYDCTGMHFQ05ZZDwmuJQjMocommcStCwEpQwSIB
yyYlGskJIgtxIgQTUILoujTk4F5Y2BvsLsvCsqx732WvTomNpTtxjt8/c2bn
nLPn+7/vfZ4/tuR4ftmKgICA0uWL+a0PH8gy1p3DwdqQPdHVPjy6/wqdf63+
dKfFC25MgyuP24HVFWsnCou89P4qSq2xj1WNe9B+iVl94L6xOfdCmgfD7P8H
EDmb+GVfvxvLN8tPhnAs7wW1MMZN3/+CMfGeSFOzC6Ga7hPpob9jfWbOIf8K
F9hyl4ZR82dhR9T7TmzifMFbih+BIvV1Y6p9kfq5ic0/lsUVvLaIq8tfa7pH
8cmmY0eOSxxws/vdgq6r5npTugPJScziIyn6jKdn0E77C/D5xcbtglg7+Evx
yzsIYX28+aSh1YZVbD8iZHzW9tuDYBvy2Q3H8U3glfuRp6w07wR8dX27UpwW
mOqYgmJk3R06k8exUL9SdFb+wauUm1HFtHdChvs2XvD53WbKR478Ykn2tZ9M
CGDXFG7MqZp4cSaaZwpBBTq5/msjso3MBgpwpJaw/0KMNJ8Cv+71FEbUG9DM
YwZQ4kbIh/Gt2ttgx01SYfsrd07eEuvBjqNRoSrf8GytdIHmn4Yud4izRq/D
eqadGDUe1mvT4vzzlIcaZY055W9umceRcmbNoCouQvF9qZby0eDhvuyme71z
YKqFD2gQ9J3maMU/s5TXLNRRge+k5c7iHlNuaRbtp1s+7h3UUH5zMOPuk2GR
GmSwAmhx4NURrr5xhvLU4ue/07ed96vBttcwj8MvLqja6tWUrw4Pdc8kXPZP
QyZllg7inZ1dWxqnKe8FKPZvOOUJn8YatkE9Rj5IUDb1qCh/PdJTahzcDBXY
cpzbCIlKydmqVRIPA9YlNe/tqVXSPAb4gpIyndFK4mPAe+sqi2/yFTSfAfIf
Bpy+SgXxMqL3XMPK3KcUNK8ROyLOFg1KpoifEaKagS77R1M0vwnmsKLLiuQp
4mkinpN4VM6E8s5v2zgHJ4mvmfjKKR8z+m1vDTe+LCfeZuIto7ws2Nee7ygp
kBF/C/GXUn4WFJbUyw5XSMkHK/kgoTytqFvQb3yuVUJ+WMkPCeVrQ8UTZ5da
xsTki418EVPeNjzIGlXUB4vpvNvhZ/2ZoPztCETitn8PTJBPdvJpnHg4sDFz
lJPcNU48HOTXOPFwYENsdeLbfhHxcJBvIuKxiP4Oz1Z7iYh4LJJ/IuKxiKZD
K0PDJ8eIh5N8HCMeTmTsSLhe/NIY+ekkP4XEwwWuciYvZ0RIPFzkq5B4uDAR
7I8q2SUkHm7yV0A83Jjvbr3yPE9APNzks4B4eCB71zl/dL+AeHjIbwHx8GAp
dffaawt84uEl3/nEw4uwQdnTF6v5xMNL/vOJhw9zwr4K7yo+8fDReeARDx/8
PS2nK/t4xOMOnQ8e/gdEkiPL
               "]]}}}, {}}, {
          DisplayFunction -> Identity, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
           PlotRange -> {{0, 1.}, {0, 0.9826794919243103}}, DisplayFunction -> 
           Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {"\[Sigma] of swarm", "Max Torque"}, 
           AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
           Frame -> {{False, False}, {False, False}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
           PlotLabel -> 
           "Maximum possible torque on object pivoted at 0, length 1", 
           PlotRange -> {{0, 1.}, {0, 0.9826794919243103}}, PlotRangeClipping -> 
           True, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
         Placed[
          Unevaluated[
           PointLegend[{
             Directive[
              PointSize[0.011111111111111112`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              PointSize[0.011111111111111112`], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              PointSize[0.011111111111111112`], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]]}, {"Normal", "Triangle", "Uniform"}, 
            Joined -> {{True, True, True}}, LabelStyle -> {}, LegendLayout -> 
            "Column", 
            LegendMarkers -> {{False, Automatic}, {False, Automatic}, {
              False, Automatic}}]], {Right, Top}, Identity]]& ],
       AutoDelete->True,
       Editable->True,
       SelectWithContents->False,
       Selectable->True],
      TraditionalForm], {576., -116.80842387373012`}, {
     Center, Center}, {360., 222.49223594996212`}]}, {}},
  ContentSelectable->True,
  ImageSize->{780., 245.61684774746024`},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.684634471318781*^9, 3.6846356917367353`*^9, 
  3.684635909148432*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1: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
3649XSc=
        
        "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwlzkdOQgEARdH/wV4Q7IigIMp+3IAJC9B12ruiYu8dOxbQkzg4uW/4ssWZ
yelIEAQhU0SNBhppopkWWmmjnQ46idFFnATd9NBLH/0MMEiSIVIMkybDCKNk
yTFGngLjRJggDP9P/kqdGj9888UnVT54541XXnjmiQqPPHDPHbfccM0Vl1xw
zhmnnHDMEYccsE+ZPXbZocQ2W2yywTprrLLCMkssssA8c8zyBxBkNkU=
             
             "]]]}, {}, {}}, {{}, {}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
             18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
            34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 
            50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 
            66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 
            82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 
            98, 99, 100}]}, 
          {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[{101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 
            112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 
            125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 
            138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 
            151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 
            164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 
            177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 
            190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200}]}, 
          {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[{201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 
            212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 
            225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 
            238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 
            251, 252, 253, 254, 255, 256, 257, 294}]}, 
          {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[{259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 
            270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 
            283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 295}]}}}], {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"\[Sigma] of swarm\"", TraditionalForm], 
        FormBox["\"Optimal push location (\[Mu])\"", TraditionalForm]},
      AxesOrigin->{0, 0.403},
      DisplayFunction->Identity,
      Epilog->{
        Dashing[{Small, Small}], 
        LineBox[
         NCache[{{0, 
            Rational[2, 3]}, {100, 
            Rational[2, 3]}}, {{0, 0.6666666666666666}, {
           100, 0.6666666666666666}}]], 
        LineBox[
         NCache[{{0, 2^Rational[-1, 2]}, {100, 2^Rational[-1, 2]}}, {{
           0, 0.7071067811865475}, {100, 0.7071067811865475}}]], 
        LineBox[
         NCache[{{0, 
            Rational[1, 2]}, {100, 
            Rational[1, 2]}}, {{0, 0.5}, {100, 0.5}}]]},
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->Medium,
      Method->{},
      PlotLabel->FormBox[
       "\"Where to push object pivoted at 0, length 1, to maximize torque\"", 
        TraditionalForm],
      PlotRange->{{0, 1.}, {0.4, 1.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Prolog->InsetBox[
        GraphicsBox[{
          RGBColor[0.6, 0.4, 0.2], 
          RectangleBox[
           NCache[{0, 
             Rational[-1, 10]}, {0, -0.1}], 
           NCache[{1, 
             Rational[1, 10]}, {1, 0.1}]], 
          RGBColor[0, 0, 1], 
          PointBox[{0, 0}], 
          RGBColor[1, 0, 0], 
          PolygonBox[
           NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
              Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
             1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]], 
          GrayLevel[0], 
          PointSize[Tiny], 
          PointBox[CompressedData["
1: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
9cjpHigyX3FcxZPC1IUPHjLvDUHb/qu713+ncFG+VUi/UCvMMFrLdJZTWHhY
b8qZ6ge+9kLby5ZkXgdGiv+pdAK7ODXF7Sbh4XvyJwI+jcKVte/+JEcy0L4s
Sd5NfwJeZH4wvHqIiZFl/vzizzrgjUvjorUPmBhQo1y5gDsMK3z/bXAbpDHz
2/3xk5L9kJrEWCHcRqNrkFV42cVu8GyXlW6MEsexrf5Dkqn98ODmtyVptQzc
qiCzpPTrFLjar8s49JzCV2U+GmEdo7BmjvquyRYafy68InoLSf6YD7axWUyU
WyMSDleGQEiy9dJYOoWXjv8yuPGIB7yDE/n5osSPtBeY39HqgUFF2PNNn4lj
2V8k9UifV849mvn9I+FDZaMTf3U64fY6I2eTUQp1lorMlzDtg9WnvlTNI/vj
mTIj1jzYC+8GDWpCyH6q5Y3Ee36bgHKBqt0idkycP5QIZ3+1g2q92LrSr0z0
ly2ZtSL6FwQU/yrYGsrES04XHfK3cWF1c0maM/F5dvb5te4LeWAdk3ozaFQc
Py045VYgwwPn+otfI55ReMw7eS0ruA0uPc8JnRphYLHl+asNF3ig3C5beEKG
xq6mXWFizT0g1FuvM4cmfHXlpKbt6lbwcS1sMrhDo9U6xVedeziQLFljknyb
wmvHVl7MuzsD973iXNx+MVHFJZ8HHp3At8H1c5EyhS8XPM431uOB6tcAgbE+
MTy/ofa68JleaJBaxTW+S+Ob1guPFlqRfNwd7zroycCLEHgqU34MzJtlfRc8
pvF+6oDs8wYe3JblBpw8yMAsCROF0sdjkGqn0+WtSvjosa6huWI3CNnp9j29
SKOKv8OizZkTMG14+pj8FvL8DZzyfZwOCFAQiYuoZ+DGjIKfZXe4sKqt1GCK
8HtwU93C721c0NX+VzZ9m4kPlD79bkoegUdfqJfuBxh4aZ2zz+Ov9fC1TW/i
LcmbO24jEguIz7/je9nlaMvE3/sOjJ70God4d881TbuZuMDWQ0w7YhherC1o
/07yx4sRXRtUzgbjSL70p+qEb+vzE0tr26DG4ejbPDPCM2aFGZI1HNAVKRX8
p8tAz5Zh7a6PbDBKOFccNEbhXdODjFVWo8SvbZQPhovjVZ+T7I6QJrCX33DK
n/DC1a1Z+63Se+GKlDo1SvhI9RN9ZWn4MOgYbfCWuUf6I1ZIdzKuGvrKXXxC
+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
NDYM+Z/PVuVAmkzIdCnp/2nj7UMOzCE4ozFAL1Ci0WX4ouV0KA+yfq62ySFf
T/M32n680Q3v106f9/FkICPg2IqOom54sMf9ykfSF47jCxvMDnDh+29nDeH/
KFTQKE9xVeiCu98WszZliuGtbqPHtN4IqL9nGUWL0ejr+7Io5D3Ju/C6uB4F
wrPfWYvl2jogNdhwmu8YhZzlq1+WARekZLe/4WtiovR5u+465Q44ecnneLco
Ey2Evu3lruoG3+sXH8bvofDRWce884XtMNv3oWPF//NzSOHC3WIeRMtH+zwz
oTFh3u9bUovZsKbWen5Mlhiq91UNTs7qAXsB/bcOYTSqBxTNJNez4aDeskvC
9kws4woNzgoYgWylxBAl0u8aP/U0D6Rwwbn3xpOJqxL4xJ5vqbABG8LGn+2Z
rKYwYMMjw5sbOXCm6DVv/mEmDsecyq7ObAb32lV/jb8xsSm0o/7yxX6wSz9+
/cMWcTxSPbpdQpwNO8z/iW0m/ea1wCVXv3gARsNWBWqfoVGxLiS/+thf+D5r
1u1/f2h8VCQUzLneB/szpbUv2VLY5CHzXlKzCzZ4ha0KKafwUv/S4lWby6Hw
s+63WrJfFZVfvSyiRsHLp2Dvho00zqfEqqu3jsM47+e810fFkaXBt69PrA/e
9t4Xjf9MI99Gu/7VhMdXjTwvKrvOxEufRy4GJE7ApcvW8vP2MrHFyGR8epjk
VWrcUMQ94ost0UfjXQfAOHYqbrYL4eMNwS/9CC+9mfqjo2XNRJd8NZdLDSOQ
t+THyWoTCus2q+RTPQNQnnTwhZcwjfrxLGkpdTYIxqxKoybIvDXxjUo4s8FE
+ais0SIK334XrVwt2gd7+7PSYib///sSUiKPk7tA8I1b8nMrJr6wmYkdaO+D
+S/SfPado/GSgeGaUtFBGH/2yuNeD8kvrS8lrPdDULhQKEvEg8Yef6s2810t
oFB8Mmn1/f//fwmj/JZvf8B6j1rH927C60I/hq7OdAPLmE/tM5m/W8t7dTcR
f/0UqDVSSZ73Cb4THRBkg51+8BLFPHL+XZ3S6lYs+LxfcX0R4Y+d9kXGa0KG
QTmjdNZZPgk851aR2bKIB1v3CWnrMpi4+03r+ZM+PCiudn/73y4ab93KN8r4
2QtbZh9NSiP+AmBuOd3KhYDPbaP10xQWWJVgR94wHNtfNi7fJo6nx0znz6rp
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
bhHX
           "]]}, PlotRange -> {{-1, 3}, {-8, 2}}, AxesOrigin -> {0, 0}]],
      
      Ticks->{Automatic, Automatic}], {191.00408802586253`, -116.80842387373012`},
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212`}], InsetBox[
     FormBox[
      TagBox[
       FormBox[
        GraphicsBox[{{{}, {{}, {}, 
            {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
             0.011111111111111112`], AbsoluteThickness[1.6], 
             LineBox[CompressedData["
1:eJwtlAtMU2cUxxERC4gukzp1DMTNFXUmG6CbMPgTVxDsRASHm+BwDHW+Ikhm
AAfIhjEs2zTI3NrxEGGLyAABgxARBoJQaGsf0JZ3X1BKeQUpkYljbT0nubn5
7r3fOef//53vesSdjzhua2NjE2++LPdLLhV71alZeFgyVh1tP41X61yYOG2m
Ku8p1LldMR6sK4C48kqN64VJel+C/L0/eR5vmACPa4lS2O04xX62ZgL11u8r
UGb7bKPXGSPMC/OTKix+JD68WjhO++/D61Dol00+43BUFCf4Oz5AF+ulqKzI
AGs6bj3+zdyz/chaA7bGXGsxeTYgOOjNH09mj1E/jdjqcfdW5vIxlJh3K4r/
AdMhqzEuU48Ja71mJK1ULols9fDxtsRjZGyZC8m5Okr1W2E/XSdIXzOKxyZP
c4U2+Po4/XeGNwInaz/tkIU6q3Z6jiDCWrAD4XkHyhvqdKSXj/EgbouOo4Mm
1ZKwE/xrN0pvqrXUrwCaT3dvaErRItHSXoIQnJ2uXWEuWvJHhOx26Ru+VRrY
WEMMPS/mWHK4hvSIwetfilo+q0aI2lJAAt6pwAD5r2rSJ8EzH4bXpJ8a11ss
AqQ467Q5m61TwSrXWwan69lRyl9UsMpRyDBfnbyqxE9F+ruxLeRwOrtnGO6W
dtx6UOu+3p774TD50YNu1mLzroIhnDxhCTmM2abaVQ5D5I8C9g3+SyuTB2HJ
5lKhQOuCx+Ja4wD5pUS1h+76xrgBzFvSmZRIY936ym6wn/zrxYrey6/XR/cj
wDoAfVjYU5HlPtRHfvZhqIC9xi2+D9b2rvTDjhFRw5vsJX8HkBAQve9Sai+E
AksM4LMZduWfjr3k9yBu+DSpl/KVYFobHMILbeo7CT5K8n8IqvnsdYNCBazp
Yobh9N0XHTtOK4iHCl5ldYJQBwXpUUFYERu8oUxOfFRwYMTPZh2Qkz4VPGOX
vX9xvod4qfHJLqa9orCH9KoR6Vz8bg6nh/ipwcgtn8lZ6Cb9GuwfvpPQVtpN
PDVgJzbHrovpxqt0Giw78t7mpNe6ia8Wrn3lrfwnMvJHi0ctaQuMDBnx1sKJ
U+ayabeM/NIh5IO3GEtzUuKvQ3J1cOzNain5p8PIpr98FYlSmocRGP9w49R4
ScnPEQTm+gldTRKajxH8Hnk6y75eQv6Ooq/Iu/brdAnNyygM4rQtnkES8nsU
5cZB5xBnCZ138zlNeOlWJxeT/3qEa9cnnysS0zzpMfA9r/joOTHxGMM3tbKc
dF8x8RjDby/l3CcMMfEYw8fH9fLP7z0lHub/guzOtrCDT4mHAdLKy8+j50TE
w4DBu0v3Erki4mFAw+32+IxAEfEYBytv+NG3BiHxGEd6BWchKFdI8zmOoBS9
Sh0oJB5GPPwhs81vWkA8jGA17kwJLhQQDyP8/VfsM4ULiMcEfvYuXfSzExCP
CSS5Fbavru8iHhOIYZ4NizvfRTwmcZvFzN/O6iIek5h/0Pn2MVUn8ZjEBX5r
tYnXSTymcMIv7KImqpN4TOHQi8VZV5dO4jGFrkCmbZ6UTzymsdHEFEXl8InH
NP6+ePYpO5JPPKax6vl+/lEmn3jMmOvdf8JVduB/Gv0hXg==
              "]]}, 
            {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
             0.011111111111111112`], AbsoluteThickness[1.6], 
             LineBox[CompressedData["
1:eJwtkwtMk2cUhuskwEAzAjIUESZjgihRLlNn0FedCxs6boILlzlHKijqRKWO
YRSJohOmsmkioqIMAgIRGQIiKk4u2lJ6pxQoll4o0AsXp4gSxLX1nOTPn+/7
/++c877P+RYnHoja9RGDwWCaHvP76LyqEFXGKYRke2dyvxrDh/UllI8+O52Z
PooG92xDZEMhphZYXXZ5OELfS7DhC9+Nf1iNoOCKOcpxy71xgyTSiPuW/6tQ
czv0en+xAaaFaecfzDgEdxZN6el8LUaD39jabtfDTlacus7uHkof7Fg7U6eD
Jd2V+yjabzz6i6sOSxMuNE/4PITNbX//jSeHqZ8mxOauDf1xfAglptOy4n+x
zqci89bPQzBa6j1BY0jqORvZIIICzdEC10+W790RMUj1W8FyO5aVx9OiZcLH
VKENOT/UyE+EaWFv6ecZDj04GOMoGUCUpSAbM/Furd7xA6SXA+bH0oUlgxqo
M8wJ25F70y8vhaWhfjtwffXl6h02Ghw0t5fKw03n1hPMa2ryh4/ulWvO7QxS
g2EJIaa3h02vFqhIjxDXWt9dFe5T4VuVuYAITYerjA5zVaRPhOC9KUuVd5TI
azYLEIO9qW3bkhglLHIDJfg0Z/aBu2/7YZEjk8Cv3CXKPayf9HeicuvJoPIy
BTzM7bhLEec0a1m8tYL8kMIu5pjN8pTnSE4yRxesmU/P2Er6yB8ZIrgPjks3
9MGcbV6VaV39eM2hu3LyqxsX5bu3NPrK8dqcbqIbl77b9Op0aS/514NjXNbi
6iW9WG8ZgF4EhZWtmVvZQ372wjZrZyUrsAeW9rLl+C+5hfnkcTf524di1W8L
OOHd4HWYow929S0nkjQy8vs5SqPHj6ZlyOBsaVCBekHCSsE8GfmvwKrPPV2i
a7pgSZfQD6ZGZ6WO6iIeSmS8EC+LfS0lPUokMjTzr16TEh8lOJ5+VTnfSEmf
EtZNF13nvOgkXir48LoFVjc6Sa8Kzl5nfo0P7yR+KuTLPYYmZ3WSfjX+2qZw
aqmXEE81xvmR1mX7JfiQTg3Zvmne+SUS4qtBaOhCVpJKTP5o8Dyg5pVroZh4
a1BoGPEpSBCTXwPoTdS3id3ExH8Ahy9pt9YqROTfANLSB2at+FtE86CFX3GH
KjBZRH5q4ev/Mr/WT0TzocUy+88yiieE5K/pXu2afeRlk5DmZRDBp1yd8s8K
ye9BvAlgJGXHCOm+D2HypZddtaeQ/B/C7nDpl65qAc3TEDafXx/nlSUgHsP4
Pb3kzxRPAfEYxtf890972vjEYxhzehfV/bSXTzyGEeC0qk/vyCceOnilOaan
POQRDx2YWc1H+Mk84qFDUrjogI0zj3josXb55FXr1g7ioUeFDrxHaR00n3po
F91I9vDuIB4GdNkYY93lXOJhwPyFcKnK4xIPA9xyK/OaQ7jEw4jo4+ErIhhc
4mFEbX8df0tjO/Ewwt4h+14Fq514jCDuPasgMaCdeIzAOuNC7p5xDvEYgW99
0bu6OxziMYr8PTOP1qdyiMco8vR7xqf8OcRjFJFOm+zVr9jEYwyFEpnE0MAm
HmNQ5ryJczjOJh5jcDtc8jZkM5t4jENxfuz7XHs2/gd7WRvo
              "]]}, 
            {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
             0.011111111111111112`], AbsoluteThickness[1.6], 
             LineBox[CompressedData["
1:eJwtkwtQVGUYhsGBkcGmkQYDCTGMHFQ05ZZDwmuJQjMocommcStCwEpQwSIB
yyYlGskJIgtxIgQTUILoujTk4F5Y2BvsLsvCsqx732WvTomNpTtxjt8/c2bn
nLPn+7/vfZ4/tuR4ftmKgICA0uWL+a0PH8gy1p3DwdqQPdHVPjy6/wqdf63+
dKfFC25MgyuP24HVFWsnCou89P4qSq2xj1WNe9B+iVl94L6xOfdCmgfD7P8H
EDmb+GVfvxvLN8tPhnAs7wW1MMZN3/+CMfGeSFOzC6Ga7hPpob9jfWbOIf8K
F9hyl4ZR82dhR9T7TmzifMFbih+BIvV1Y6p9kfq5ic0/lsUVvLaIq8tfa7pH
8cmmY0eOSxxws/vdgq6r5npTugPJScziIyn6jKdn0E77C/D5xcbtglg7+Evx
yzsIYX28+aSh1YZVbD8iZHzW9tuDYBvy2Q3H8U3glfuRp6w07wR8dX27UpwW
mOqYgmJk3R06k8exUL9SdFb+wauUm1HFtHdChvs2XvD53WbKR478Ykn2tZ9M
CGDXFG7MqZp4cSaaZwpBBTq5/msjso3MBgpwpJaw/0KMNJ8Cv+71FEbUG9DM
YwZQ4kbIh/Gt2ttgx01SYfsrd07eEuvBjqNRoSrf8GytdIHmn4Yud4izRq/D
eqadGDUe1mvT4vzzlIcaZY055W9umceRcmbNoCouQvF9qZby0eDhvuyme71z
YKqFD2gQ9J3maMU/s5TXLNRRge+k5c7iHlNuaRbtp1s+7h3UUH5zMOPuk2GR
GmSwAmhx4NURrr5xhvLU4ue/07ed96vBttcwj8MvLqja6tWUrw4Pdc8kXPZP
QyZllg7inZ1dWxqnKe8FKPZvOOUJn8YatkE9Rj5IUDb1qCh/PdJTahzcDBXY
cpzbCIlKydmqVRIPA9YlNe/tqVXSPAb4gpIyndFK4mPAe+sqi2/yFTSfAfIf
Bpy+SgXxMqL3XMPK3KcUNK8ROyLOFg1KpoifEaKagS77R1M0vwnmsKLLiuQp
4mkinpN4VM6E8s5v2zgHJ4mvmfjKKR8z+m1vDTe+LCfeZuIto7ws2Nee7ygp
kBF/C/GXUn4WFJbUyw5XSMkHK/kgoTytqFvQb3yuVUJ+WMkPCeVrQ8UTZ5da
xsTki418EVPeNjzIGlXUB4vpvNvhZ/2ZoPztCETitn8PTJBPdvJpnHg4sDFz
lJPcNU48HOTXOPFwYENsdeLbfhHxcJBvIuKxiP4Oz1Z7iYh4LJJ/IuKxiKZD
K0PDJ8eIh5N8HCMeTmTsSLhe/NIY+ekkP4XEwwWuciYvZ0RIPFzkq5B4uDAR
7I8q2SUkHm7yV0A83Jjvbr3yPE9APNzks4B4eCB71zl/dL+AeHjIbwHx8GAp
dffaawt84uEl3/nEw4uwQdnTF6v5xMNL/vOJhw9zwr4K7yo+8fDReeARDx/8
PS2nK/t4xOMOnQ8e/gdEkiPL
              "]]}}, {}}, InsetBox[
           TemplateBox[{"\"Normal\"","\"Triangle\"","\"Uniform\""},
            "PointLegend",
            DisplayFunction->(FormBox[
              StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False], TraditionalForm]& ),
            Editable->True,
            InterpretationFunction:>(RowBox[{"PointLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "True", ",", "True"}], "}"}], 
                    "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
               "]"}]& )], Scaled[{0.99, 0.99}], ImageScaled[{1, 1}],
           BaseStyle->{FontSize -> Larger},
           FormatType->StandardForm]},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{
           FormBox["\"\[Sigma] of swarm\"", TraditionalForm], 
           FormBox["\"Max Torque\"", TraditionalForm]},
         AxesOrigin->{0, 0},
         DisplayFunction->Identity,
         Frame->{{False, False}, {False, False}},
         FrameLabel->{{None, None}, {None, None}},
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImageSize->Medium,
         Method->{},
         PlotLabel->FormBox[
          "\"Maximum possible torque on object pivoted at 0, length 1\"", 
           TraditionalForm],
         PlotRange->{{0, 1.}, {0, 0.9826794919243103}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}},
         Ticks->{Automatic, Automatic}],
        TraditionalForm],
       InterpretTemplate[Legended[
         Graphics[{{}, {{{}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              Line[CompressedData["
1:eJwtlAtMU2cUxxERC4gukzp1DMTNFXUmG6CbMPgTVxDsRASHm+BwDHW+Ikhm
AAfIhjEs2zTI3NrxEGGLyAABgxARBoJQaGsf0JZ3X1BKeQUpkYljbT0nubn5
7r3fOef//53vesSdjzhua2NjE2++LPdLLhV71alZeFgyVh1tP41X61yYOG2m
Ku8p1LldMR6sK4C48kqN64VJel+C/L0/eR5vmACPa4lS2O04xX62ZgL11u8r
UGb7bKPXGSPMC/OTKix+JD68WjhO++/D61Dol00+43BUFCf4Oz5AF+ulqKzI
AGs6bj3+zdyz/chaA7bGXGsxeTYgOOjNH09mj1E/jdjqcfdW5vIxlJh3K4r/
AdMhqzEuU48Ja71mJK1ULols9fDxtsRjZGyZC8m5Okr1W2E/XSdIXzOKxyZP
c4U2+Po4/XeGNwInaz/tkIU6q3Z6jiDCWrAD4XkHyhvqdKSXj/EgbouOo4Mm
1ZKwE/xrN0pvqrXUrwCaT3dvaErRItHSXoIQnJ2uXWEuWvJHhOx26Ru+VRrY
WEMMPS/mWHK4hvSIwetfilo+q0aI2lJAAt6pwAD5r2rSJ8EzH4bXpJ8a11ss
AqQ467Q5m61TwSrXWwan69lRyl9UsMpRyDBfnbyqxE9F+ruxLeRwOrtnGO6W
dtx6UOu+3p774TD50YNu1mLzroIhnDxhCTmM2abaVQ5D5I8C9g3+SyuTB2HJ
5lKhQOuCx+Ja4wD5pUS1h+76xrgBzFvSmZRIY936ym6wn/zrxYrey6/XR/cj
wDoAfVjYU5HlPtRHfvZhqIC9xi2+D9b2rvTDjhFRw5vsJX8HkBAQve9Sai+E
AksM4LMZduWfjr3k9yBu+DSpl/KVYFobHMILbeo7CT5K8n8IqvnsdYNCBazp
Yobh9N0XHTtOK4iHCl5ldYJQBwXpUUFYERu8oUxOfFRwYMTPZh2Qkz4VPGOX
vX9xvod4qfHJLqa9orCH9KoR6Vz8bg6nh/ipwcgtn8lZ6Cb9GuwfvpPQVtpN
PDVgJzbHrovpxqt0Giw78t7mpNe6ia8Wrn3lrfwnMvJHi0ctaQuMDBnx1sKJ
U+ayabeM/NIh5IO3GEtzUuKvQ3J1cOzNain5p8PIpr98FYlSmocRGP9w49R4
ScnPEQTm+gldTRKajxH8Hnk6y75eQv6Ooq/Iu/brdAnNyygM4rQtnkES8nsU
5cZB5xBnCZ138zlNeOlWJxeT/3qEa9cnnysS0zzpMfA9r/joOTHxGMM3tbKc
dF8x8RjDby/l3CcMMfEYw8fH9fLP7z0lHub/guzOtrCDT4mHAdLKy8+j50TE
w4DBu0v3Erki4mFAw+32+IxAEfEYBytv+NG3BiHxGEd6BWchKFdI8zmOoBS9
Sh0oJB5GPPwhs81vWkA8jGA17kwJLhQQDyP8/VfsM4ULiMcEfvYuXfSzExCP
CSS5Fbavru8iHhOIYZ4NizvfRTwmcZvFzN/O6iIek5h/0Pn2MVUn8ZjEBX5r
tYnXSTymcMIv7KImqpN4TOHQi8VZV5dO4jGFrkCmbZ6UTzymsdHEFEXl8InH
NP6+ePYpO5JPPKax6vl+/lEmn3jMmOvdf8JVduB/Gv0hXg==
               "]]}, {
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              Line[CompressedData["
1:eJwtkwtMk2cUhuskwEAzAjIUESZjgihRLlNn0FedCxs6boILlzlHKijqRKWO
YRSJohOmsmkioqIMAgIRGQIiKk4u2lJ6pxQoll4o0AsXp4gSxLX1nOTPn+/7
/++c877P+RYnHoja9RGDwWCaHvP76LyqEFXGKYRke2dyvxrDh/UllI8+O52Z
PooG92xDZEMhphZYXXZ5OELfS7DhC9+Nf1iNoOCKOcpxy71xgyTSiPuW/6tQ
czv0en+xAaaFaecfzDgEdxZN6el8LUaD39jabtfDTlacus7uHkof7Fg7U6eD
Jd2V+yjabzz6i6sOSxMuNE/4PITNbX//jSeHqZ8mxOauDf1xfAglptOy4n+x
zqci89bPQzBa6j1BY0jqORvZIIICzdEC10+W790RMUj1W8FyO5aVx9OiZcLH
VKENOT/UyE+EaWFv6ecZDj04GOMoGUCUpSAbM/Furd7xA6SXA+bH0oUlgxqo
M8wJ25F70y8vhaWhfjtwffXl6h02Ghw0t5fKw03n1hPMa2ryh4/ulWvO7QxS
g2EJIaa3h02vFqhIjxDXWt9dFe5T4VuVuYAITYerjA5zVaRPhOC9KUuVd5TI
azYLEIO9qW3bkhglLHIDJfg0Z/aBu2/7YZEjk8Cv3CXKPayf9HeicuvJoPIy
BTzM7bhLEec0a1m8tYL8kMIu5pjN8pTnSE4yRxesmU/P2Er6yB8ZIrgPjks3
9MGcbV6VaV39eM2hu3LyqxsX5bu3NPrK8dqcbqIbl77b9Op0aS/514NjXNbi
6iW9WG8ZgF4EhZWtmVvZQ372wjZrZyUrsAeW9rLl+C+5hfnkcTf524di1W8L
OOHd4HWYow929S0nkjQy8vs5SqPHj6ZlyOBsaVCBekHCSsE8GfmvwKrPPV2i
a7pgSZfQD6ZGZ6WO6iIeSmS8EC+LfS0lPUokMjTzr16TEh8lOJ5+VTnfSEmf
EtZNF13nvOgkXir48LoFVjc6Sa8Kzl5nfo0P7yR+KuTLPYYmZ3WSfjX+2qZw
aqmXEE81xvmR1mX7JfiQTg3Zvmne+SUS4qtBaOhCVpJKTP5o8Dyg5pVroZh4
a1BoGPEpSBCTXwPoTdS3id3ExH8Ahy9pt9YqROTfANLSB2at+FtE86CFX3GH
KjBZRH5q4ev/Mr/WT0TzocUy+88yiieE5K/pXu2afeRlk5DmZRDBp1yd8s8K
ye9BvAlgJGXHCOm+D2HypZddtaeQ/B/C7nDpl65qAc3TEDafXx/nlSUgHsP4
Pb3kzxRPAfEYxtf890972vjEYxhzehfV/bSXTzyGEeC0qk/vyCceOnilOaan
POQRDx2YWc1H+Mk84qFDUrjogI0zj3josXb55FXr1g7ioUeFDrxHaR00n3po
F91I9vDuIB4GdNkYY93lXOJhwPyFcKnK4xIPA9xyK/OaQ7jEw4jo4+ErIhhc
4mFEbX8df0tjO/Ewwt4h+14Fq514jCDuPasgMaCdeIzAOuNC7p5xDvEYgW99
0bu6OxziMYr8PTOP1qdyiMco8vR7xqf8OcRjFJFOm+zVr9jEYwyFEpnE0MAm
HmNQ5ryJczjOJh5jcDtc8jZkM5t4jENxfuz7XHs2/gd7WRvo
               "]]}, {
              Hue[0.1421359549995791, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              Line[CompressedData["
1:eJwtkwtQVGUYhsGBkcGmkQYDCTGMHFQ05ZZDwmuJQjMocommcStCwEpQwSIB
yyYlGskJIgtxIgQTUILoujTk4F5Y2BvsLsvCsqx732WvTomNpTtxjt8/c2bn
nLPn+7/vfZ4/tuR4ftmKgICA0uWL+a0PH8gy1p3DwdqQPdHVPjy6/wqdf63+
dKfFC25MgyuP24HVFWsnCou89P4qSq2xj1WNe9B+iVl94L6xOfdCmgfD7P8H
EDmb+GVfvxvLN8tPhnAs7wW1MMZN3/+CMfGeSFOzC6Ga7hPpob9jfWbOIf8K
F9hyl4ZR82dhR9T7TmzifMFbih+BIvV1Y6p9kfq5ic0/lsUVvLaIq8tfa7pH
8cmmY0eOSxxws/vdgq6r5npTugPJScziIyn6jKdn0E77C/D5xcbtglg7+Evx
yzsIYX28+aSh1YZVbD8iZHzW9tuDYBvy2Q3H8U3glfuRp6w07wR8dX27UpwW
mOqYgmJk3R06k8exUL9SdFb+wauUm1HFtHdChvs2XvD53WbKR478Ykn2tZ9M
CGDXFG7MqZp4cSaaZwpBBTq5/msjso3MBgpwpJaw/0KMNJ8Cv+71FEbUG9DM
YwZQ4kbIh/Gt2ttgx01SYfsrd07eEuvBjqNRoSrf8GytdIHmn4Yud4izRq/D
eqadGDUe1mvT4vzzlIcaZY055W9umceRcmbNoCouQvF9qZby0eDhvuyme71z
YKqFD2gQ9J3maMU/s5TXLNRRge+k5c7iHlNuaRbtp1s+7h3UUH5zMOPuk2GR
GmSwAmhx4NURrr5xhvLU4ue/07ed96vBttcwj8MvLqja6tWUrw4Pdc8kXPZP
QyZllg7inZ1dWxqnKe8FKPZvOOUJn8YatkE9Rj5IUDb1qCh/PdJTahzcDBXY
cpzbCIlKydmqVRIPA9YlNe/tqVXSPAb4gpIyndFK4mPAe+sqi2/yFTSfAfIf
Bpy+SgXxMqL3XMPK3KcUNK8ROyLOFg1KpoifEaKagS77R1M0vwnmsKLLiuQp
4mkinpN4VM6E8s5v2zgHJ4mvmfjKKR8z+m1vDTe+LCfeZuIto7ws2Nee7ygp
kBF/C/GXUn4WFJbUyw5XSMkHK/kgoTytqFvQb3yuVUJ+WMkPCeVrQ8UTZ5da
xsTki418EVPeNjzIGlXUB4vpvNvhZ/2ZoPztCETitn8PTJBPdvJpnHg4sDFz
lJPcNU48HOTXOPFwYENsdeLbfhHxcJBvIuKxiP4Oz1Z7iYh4LJJ/IuKxiKZD
K0PDJ8eIh5N8HCMeTmTsSLhe/NIY+ekkP4XEwwWuciYvZ0RIPFzkq5B4uDAR
7I8q2SUkHm7yV0A83Jjvbr3yPE9APNzks4B4eCB71zl/dL+AeHjIbwHx8GAp
dffaawt84uEl3/nEw4uwQdnTF6v5xMNL/vOJhw9zwr4K7yo+8fDReeARDx/8
PS2nK/t4xOMOnQ8e/gdEkiPL
               "]]}}}, {}}, {
          DisplayFunction -> Identity, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
           PlotRange -> {{0, 1.}, {0, 0.9826794919243103}}, DisplayFunction -> 
           Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {"\[Sigma] of swarm", "Max Torque"}, 
           AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
           Frame -> {{False, False}, {False, False}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
           PlotLabel -> 
           "Maximum possible torque on object pivoted at 0, length 1", 
           PlotRange -> {{0, 1.}, {0, 0.9826794919243103}}, PlotRangeClipping -> 
           True, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
         Placed[
          Unevaluated[
           PointLegend[{
             Directive[
              PointSize[0.011111111111111112`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              PointSize[0.011111111111111112`], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              PointSize[0.011111111111111112`], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]]}, {"Normal", "Triangle", "Uniform"}, 
            Joined -> {{True, True, True}}, LabelStyle -> {}, LegendLayout -> 
            "Column", 
            LegendMarkers -> {{False, Automatic}, {False, Automatic}, {
              False, Automatic}}]], {Right, Top}, Identity]]& ],
       AutoDelete->True,
       Editable->True,
       SelectWithContents->False,
       Selectable->True],
      TraditionalForm], {576., -116.80842387373012`}, {
     Center, Center}, {360., 222.49223594996212`}]}, {}},
  ContentSelectable->True,
  ImagePadding->{{174.714236, 175.714236}, {1., 0.}},
  ImageSize->{780., 245.61684774746024`},
  PlotRange->{{186., 582.}, {-238.61684774746024`, 5.}},
  PlotRangePadding->Automatic]], "Input",
 CellChangeTimes->{3.684575004980954*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1: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
3649XSc=
        
        "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwlzkdOQgEARdH/wV4Q7IigIMp+3IAJC9B12ruiYu8dOxbQkzg4uW/4ssWZ
yelIEAQhU0SNBhppopkWWmmjnQ46idFFnATd9NBLH/0MMEiSIVIMkybDCKNk
yTFGngLjRJggDP9P/kqdGj9888UnVT54541XXnjmiQqPPHDPHbfccM0Vl1xw
zhmnnHDMEYccsE+ZPXbZocQ2W2yywTprrLLCMkssssA8c8zyBxBkNkU=
             
             "]]]}, {}, {}}, {{}, {}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
             18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
            34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 
            50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 
            66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 
            82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 
            98, 99, 100}]}, 
          {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[{101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 
            112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 
            125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 
            138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 
            151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 
            164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 
            177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 
            190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200}]}, 
          {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[{201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 
            212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 
            225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 
            238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 
            251, 252, 253, 254, 255, 256, 257, 294}]}, 
          {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[{259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 
            270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 
            283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 295}]}}}], {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"\[Sigma] of swarm\"", TraditionalForm], 
        FormBox["\"Optimal push location (\[Mu])\"", TraditionalForm]},
      AxesOrigin->{0, 0.403},
      DisplayFunction->Identity,
      Epilog->{
        Dashing[{Small, Small}], 
        LineBox[
         NCache[{{0, 
            Rational[2, 3]}, {100, 
            Rational[2, 3]}}, {{0, 0.6666666666666666}, {
           100, 0.6666666666666666}}]], 
        LineBox[
         NCache[{{0, 2^Rational[-1, 2]}, {100, 2^Rational[-1, 2]}}, {{
           0, 0.7071067811865475}, {100, 0.7071067811865475}}]], 
        LineBox[
         NCache[{{0, 
            Rational[1, 2]}, {100, 
            Rational[1, 2]}}, {{0, 0.5}, {100, 0.5}}]]},
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->Medium,
      Method->{},
      PlotLabel->FormBox[
       "\"Where to push object pivoted at 0, length 1, to maximize torque\"", 
        TraditionalForm],
      PlotRange->{{0, 1.}, {0.4, 1.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Prolog->InsetBox[
        GraphicsBox[{
          RGBColor[0.6, 0.4, 0.2], 
          RectangleBox[
           NCache[{0, 
             Rational[-1, 10]}, {0, -0.1}], 
           NCache[{1, 
             Rational[1, 10]}, {1, 0.1}]], 
          RGBColor[0, 0, 1], 
          PointBox[{0, 0}], 
          RGBColor[1, 0, 0], 
          PolygonBox[
           NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
              Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
             1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]], 
          GrayLevel[0], 
          PointSize[Tiny], 
          PointBox[CompressedData["
1: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
9cjpHigyX3FcxZPC1IUPHjLvDUHb/qu713+ncFG+VUi/UCvMMFrLdJZTWHhY
b8qZ6ge+9kLby5ZkXgdGiv+pdAK7ODXF7Sbh4XvyJwI+jcKVte/+JEcy0L4s
Sd5NfwJeZH4wvHqIiZFl/vzizzrgjUvjorUPmBhQo1y5gDsMK3z/bXAbpDHz
2/3xk5L9kJrEWCHcRqNrkFV42cVu8GyXlW6MEsexrf5Dkqn98ODmtyVptQzc
qiCzpPTrFLjar8s49JzCV2U+GmEdo7BmjvquyRYafy68InoLSf6YD7axWUyU
WyMSDleGQEiy9dJYOoWXjv8yuPGIB7yDE/n5osSPtBeY39HqgUFF2PNNn4lj
2V8k9UifV849mvn9I+FDZaMTf3U64fY6I2eTUQp1lorMlzDtg9WnvlTNI/vj
mTIj1jzYC+8GDWpCyH6q5Y3Ee36bgHKBqt0idkycP5QIZ3+1g2q92LrSr0z0
ly2ZtSL6FwQU/yrYGsrES04XHfK3cWF1c0maM/F5dvb5te4LeWAdk3ozaFQc
Py045VYgwwPn+otfI55ReMw7eS0ruA0uPc8JnRphYLHl+asNF3ig3C5beEKG
xq6mXWFizT0g1FuvM4cmfHXlpKbt6lbwcS1sMrhDo9U6xVedeziQLFljknyb
wmvHVl7MuzsD973iXNx+MVHFJZ8HHp3At8H1c5EyhS8XPM431uOB6tcAgbE+
MTy/ofa68JleaJBaxTW+S+Ob1guPFlqRfNwd7zroycCLEHgqU34MzJtlfRc8
pvF+6oDs8wYe3JblBpw8yMAsCROF0sdjkGqn0+WtSvjosa6huWI3CNnp9j29
SKOKv8OizZkTMG14+pj8FvL8DZzyfZwOCFAQiYuoZ+DGjIKfZXe4sKqt1GCK
8HtwU93C721c0NX+VzZ9m4kPlD79bkoegUdfqJfuBxh4aZ2zz+Ov9fC1TW/i
LcmbO24jEguIz7/je9nlaMvE3/sOjJ70God4d881TbuZuMDWQ0w7YhherC1o
/07yx4sRXRtUzgbjSL70p+qEb+vzE0tr26DG4ejbPDPCM2aFGZI1HNAVKRX8
p8tAz5Zh7a6PbDBKOFccNEbhXdODjFVWo8SvbZQPhovjVZ+T7I6QJrCX33DK
n/DC1a1Z+63Se+GKlDo1SvhI9RN9ZWn4MOgYbfCWuUf6I1ZIdzKuGvrKXXxC
+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
NDYM+Z/PVuVAmkzIdCnp/2nj7UMOzCE4ozFAL1Ci0WX4ouV0KA+yfq62ySFf
T/M32n680Q3v106f9/FkICPg2IqOom54sMf9ykfSF47jCxvMDnDh+29nDeH/
KFTQKE9xVeiCu98WszZliuGtbqPHtN4IqL9nGUWL0ejr+7Io5D3Ju/C6uB4F
wrPfWYvl2jogNdhwmu8YhZzlq1+WARekZLe/4WtiovR5u+465Q44ecnneLco
Ey2Evu3lruoG3+sXH8bvofDRWce884XtMNv3oWPF//NzSOHC3WIeRMtH+zwz
oTFh3u9bUovZsKbWen5Mlhiq91UNTs7qAXsB/bcOYTSqBxTNJNez4aDeskvC
9kws4woNzgoYgWylxBAl0u8aP/U0D6Rwwbn3xpOJqxL4xJ5vqbABG8LGn+2Z
rKYwYMMjw5sbOXCm6DVv/mEmDsecyq7ObAb32lV/jb8xsSm0o/7yxX6wSz9+
/cMWcTxSPbpdQpwNO8z/iW0m/ea1wCVXv3gARsNWBWqfoVGxLiS/+thf+D5r
1u1/f2h8VCQUzLneB/szpbUv2VLY5CHzXlKzCzZ4ha0KKafwUv/S4lWby6Hw
s+63WrJfFZVfvSyiRsHLp2Dvho00zqfEqqu3jsM47+e810fFkaXBt69PrA/e
9t4Xjf9MI99Gu/7VhMdXjTwvKrvOxEufRy4GJE7ApcvW8vP2MrHFyGR8epjk
VWrcUMQ94ost0UfjXQfAOHYqbrYL4eMNwS/9CC+9mfqjo2XNRJd8NZdLDSOQ
t+THyWoTCus2q+RTPQNQnnTwhZcwjfrxLGkpdTYIxqxKoybIvDXxjUo4s8FE
+ais0SIK334XrVwt2gd7+7PSYib///sSUiKPk7tA8I1b8nMrJr6wmYkdaO+D
+S/SfPado/GSgeGaUtFBGH/2yuNeD8kvrS8lrPdDULhQKEvEg8Yef6s2810t
oFB8Mmn1/f//fwmj/JZvf8B6j1rH927C60I/hq7OdAPLmE/tM5m/W8t7dTcR
f/0UqDVSSZ73Cb4THRBkg51+8BLFPHL+XZ3S6lYs+LxfcX0R4Y+d9kXGa0KG
QTmjdNZZPgk851aR2bKIB1v3CWnrMpi4+03r+ZM+PCiudn/73y4ab93KN8r4
2QtbZh9NSiP+AmBuOd3KhYDPbaP10xQWWJVgR94wHNtfNi7fJo6nx0znz6rp
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
bhHX
           "]]}, PlotRange -> {{-1, 3}, {-8, 2}}, AxesOrigin -> {0, 0}]],
      
      Ticks->{Automatic, Automatic}], {191.00408802586253`, -116.80842387373012`},
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212`}], InsetBox[
     FormBox[
      TagBox[
       FormBox[
        GraphicsBox[{{{}, {{}, {}, 
            {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
             0.011111111111111112`], AbsoluteThickness[1.6], 
             LineBox[CompressedData["
1:eJwtlAtMU2cUxxERC4gukzp1DMTNFXUmG6CbMPgTVxDsRASHm+BwDHW+Ikhm
AAfIhjEs2zTI3NrxEGGLyAABgxARBoJQaGsf0JZ3X1BKeQUpkYljbT0nubn5
7r3fOef//53vesSdjzhua2NjE2++LPdLLhV71alZeFgyVh1tP41X61yYOG2m
Ku8p1LldMR6sK4C48kqN64VJel+C/L0/eR5vmACPa4lS2O04xX62ZgL11u8r
UGb7bKPXGSPMC/OTKix+JD68WjhO++/D61Dol00+43BUFCf4Oz5AF+ulqKzI
AGs6bj3+zdyz/chaA7bGXGsxeTYgOOjNH09mj1E/jdjqcfdW5vIxlJh3K4r/
AdMhqzEuU48Ja71mJK1ULols9fDxtsRjZGyZC8m5Okr1W2E/XSdIXzOKxyZP
c4U2+Po4/XeGNwInaz/tkIU6q3Z6jiDCWrAD4XkHyhvqdKSXj/EgbouOo4Mm
1ZKwE/xrN0pvqrXUrwCaT3dvaErRItHSXoIQnJ2uXWEuWvJHhOx26Ru+VRrY
WEMMPS/mWHK4hvSIwetfilo+q0aI2lJAAt6pwAD5r2rSJ8EzH4bXpJ8a11ss
AqQ467Q5m61TwSrXWwan69lRyl9UsMpRyDBfnbyqxE9F+ruxLeRwOrtnGO6W
dtx6UOu+3p774TD50YNu1mLzroIhnDxhCTmM2abaVQ5D5I8C9g3+SyuTB2HJ
5lKhQOuCx+Ja4wD5pUS1h+76xrgBzFvSmZRIY936ym6wn/zrxYrey6/XR/cj
wDoAfVjYU5HlPtRHfvZhqIC9xi2+D9b2rvTDjhFRw5vsJX8HkBAQve9Sai+E
AksM4LMZduWfjr3k9yBu+DSpl/KVYFobHMILbeo7CT5K8n8IqvnsdYNCBazp
Yobh9N0XHTtOK4iHCl5ldYJQBwXpUUFYERu8oUxOfFRwYMTPZh2Qkz4VPGOX
vX9xvod4qfHJLqa9orCH9KoR6Vz8bg6nh/ipwcgtn8lZ6Cb9GuwfvpPQVtpN
PDVgJzbHrovpxqt0Giw78t7mpNe6ia8Wrn3lrfwnMvJHi0ctaQuMDBnx1sKJ
U+ayabeM/NIh5IO3GEtzUuKvQ3J1cOzNain5p8PIpr98FYlSmocRGP9w49R4
ScnPEQTm+gldTRKajxH8Hnk6y75eQv6Ooq/Iu/brdAnNyygM4rQtnkES8nsU
5cZB5xBnCZ138zlNeOlWJxeT/3qEa9cnnysS0zzpMfA9r/joOTHxGMM3tbKc
dF8x8RjDby/l3CcMMfEYw8fH9fLP7z0lHub/guzOtrCDT4mHAdLKy8+j50TE
w4DBu0v3Erki4mFAw+32+IxAEfEYBytv+NG3BiHxGEd6BWchKFdI8zmOoBS9
Sh0oJB5GPPwhs81vWkA8jGA17kwJLhQQDyP8/VfsM4ULiMcEfvYuXfSzExCP
CSS5Fbavru8iHhOIYZ4NizvfRTwmcZvFzN/O6iIek5h/0Pn2MVUn8ZjEBX5r
tYnXSTymcMIv7KImqpN4TOHQi8VZV5dO4jGFrkCmbZ6UTzymsdHEFEXl8InH
NP6+ePYpO5JPPKax6vl+/lEmn3jMmOvdf8JVduB/Gv0hXg==
              "]]}, 
            {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
             0.011111111111111112`], AbsoluteThickness[1.6], 
             LineBox[CompressedData["
1:eJwtkwtMk2cUhuskwEAzAjIUESZjgihRLlNn0FedCxs6boILlzlHKijqRKWO
YRSJohOmsmkioqIMAgIRGQIiKk4u2lJ6pxQoll4o0AsXp4gSxLX1nOTPn+/7
/++c877P+RYnHoja9RGDwWCaHvP76LyqEFXGKYRke2dyvxrDh/UllI8+O52Z
PooG92xDZEMhphZYXXZ5OELfS7DhC9+Nf1iNoOCKOcpxy71xgyTSiPuW/6tQ
czv0en+xAaaFaecfzDgEdxZN6el8LUaD39jabtfDTlacus7uHkof7Fg7U6eD
Jd2V+yjabzz6i6sOSxMuNE/4PITNbX//jSeHqZ8mxOauDf1xfAglptOy4n+x
zqci89bPQzBa6j1BY0jqORvZIIICzdEC10+W790RMUj1W8FyO5aVx9OiZcLH
VKENOT/UyE+EaWFv6ecZDj04GOMoGUCUpSAbM/Furd7xA6SXA+bH0oUlgxqo
M8wJ25F70y8vhaWhfjtwffXl6h02Ghw0t5fKw03n1hPMa2ryh4/ulWvO7QxS
g2EJIaa3h02vFqhIjxDXWt9dFe5T4VuVuYAITYerjA5zVaRPhOC9KUuVd5TI
azYLEIO9qW3bkhglLHIDJfg0Z/aBu2/7YZEjk8Cv3CXKPayf9HeicuvJoPIy
BTzM7bhLEec0a1m8tYL8kMIu5pjN8pTnSE4yRxesmU/P2Er6yB8ZIrgPjks3
9MGcbV6VaV39eM2hu3LyqxsX5bu3NPrK8dqcbqIbl77b9Op0aS/514NjXNbi
6iW9WG8ZgF4EhZWtmVvZQ372wjZrZyUrsAeW9rLl+C+5hfnkcTf524di1W8L
OOHd4HWYow929S0nkjQy8vs5SqPHj6ZlyOBsaVCBekHCSsE8GfmvwKrPPV2i
a7pgSZfQD6ZGZ6WO6iIeSmS8EC+LfS0lPUokMjTzr16TEh8lOJ5+VTnfSEmf
EtZNF13nvOgkXir48LoFVjc6Sa8Kzl5nfo0P7yR+KuTLPYYmZ3WSfjX+2qZw
aqmXEE81xvmR1mX7JfiQTg3Zvmne+SUS4qtBaOhCVpJKTP5o8Dyg5pVroZh4
a1BoGPEpSBCTXwPoTdS3id3ExH8Ahy9pt9YqROTfANLSB2at+FtE86CFX3GH
KjBZRH5q4ev/Mr/WT0TzocUy+88yiieE5K/pXu2afeRlk5DmZRDBp1yd8s8K
ye9BvAlgJGXHCOm+D2HypZddtaeQ/B/C7nDpl65qAc3TEDafXx/nlSUgHsP4
Pb3kzxRPAfEYxtf890972vjEYxhzehfV/bSXTzyGEeC0qk/vyCceOnilOaan
POQRDx2YWc1H+Mk84qFDUrjogI0zj3josXb55FXr1g7ioUeFDrxHaR00n3po
F91I9vDuIB4GdNkYY93lXOJhwPyFcKnK4xIPA9xyK/OaQ7jEw4jo4+ErIhhc
4mFEbX8df0tjO/Ewwt4h+14Fq514jCDuPasgMaCdeIzAOuNC7p5xDvEYgW99
0bu6OxziMYr8PTOP1qdyiMco8vR7xqf8OcRjFJFOm+zVr9jEYwyFEpnE0MAm
HmNQ5ryJczjOJh5jcDtc8jZkM5t4jENxfuz7XHs2/gd7WRvo
              "]]}, 
            {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
             0.011111111111111112`], AbsoluteThickness[1.6], 
             LineBox[CompressedData["
1:eJwtkwtQVGUYhsGBkcGmkQYDCTGMHFQ05ZZDwmuJQjMocommcStCwEpQwSIB
yyYlGskJIgtxIgQTUILoujTk4F5Y2BvsLsvCsqx732WvTomNpTtxjt8/c2bn
nLPn+7/vfZ4/tuR4ftmKgICA0uWL+a0PH8gy1p3DwdqQPdHVPjy6/wqdf63+
dKfFC25MgyuP24HVFWsnCou89P4qSq2xj1WNe9B+iVl94L6xOfdCmgfD7P8H
EDmb+GVfvxvLN8tPhnAs7wW1MMZN3/+CMfGeSFOzC6Ga7hPpob9jfWbOIf8K
F9hyl4ZR82dhR9T7TmzifMFbih+BIvV1Y6p9kfq5ic0/lsUVvLaIq8tfa7pH
8cmmY0eOSxxws/vdgq6r5npTugPJScziIyn6jKdn0E77C/D5xcbtglg7+Evx
yzsIYX28+aSh1YZVbD8iZHzW9tuDYBvy2Q3H8U3glfuRp6w07wR8dX27UpwW
mOqYgmJk3R06k8exUL9SdFb+wauUm1HFtHdChvs2XvD53WbKR478Ykn2tZ9M
CGDXFG7MqZp4cSaaZwpBBTq5/msjso3MBgpwpJaw/0KMNJ8Cv+71FEbUG9DM
YwZQ4kbIh/Gt2ttgx01SYfsrd07eEuvBjqNRoSrf8GytdIHmn4Yud4izRq/D
eqadGDUe1mvT4vzzlIcaZY055W9umceRcmbNoCouQvF9qZby0eDhvuyme71z
YKqFD2gQ9J3maMU/s5TXLNRRge+k5c7iHlNuaRbtp1s+7h3UUH5zMOPuk2GR
GmSwAmhx4NURrr5xhvLU4ue/07ed96vBttcwj8MvLqja6tWUrw4Pdc8kXPZP
QyZllg7inZ1dWxqnKe8FKPZvOOUJn8YatkE9Rj5IUDb1qCh/PdJTahzcDBXY
cpzbCIlKydmqVRIPA9YlNe/tqVXSPAb4gpIyndFK4mPAe+sqi2/yFTSfAfIf
Bpy+SgXxMqL3XMPK3KcUNK8ROyLOFg1KpoifEaKagS77R1M0vwnmsKLLiuQp
4mkinpN4VM6E8s5v2zgHJ4mvmfjKKR8z+m1vDTe+LCfeZuIto7ws2Nee7ygp
kBF/C/GXUn4WFJbUyw5XSMkHK/kgoTytqFvQb3yuVUJ+WMkPCeVrQ8UTZ5da
xsTki418EVPeNjzIGlXUB4vpvNvhZ/2ZoPztCETitn8PTJBPdvJpnHg4sDFz
lJPcNU48HOTXOPFwYENsdeLbfhHxcJBvIuKxiP4Oz1Z7iYh4LJJ/IuKxiKZD
K0PDJ8eIh5N8HCMeTmTsSLhe/NIY+ekkP4XEwwWuciYvZ0RIPFzkq5B4uDAR
7I8q2SUkHm7yV0A83Jjvbr3yPE9APNzks4B4eCB71zl/dL+AeHjIbwHx8GAp
dffaawt84uEl3/nEw4uwQdnTF6v5xMNL/vOJhw9zwr4K7yo+8fDReeARDx/8
PS2nK/t4xOMOnQ8e/gdEkiPL
              "]]}}, {}}, InsetBox[
           RowBox[{"Unevaluated", "[", 
            TemplateBox[{"\"Normal\"","\"Triangle\"","\"Uniform\""},
             "PointLegend",
             DisplayFunction->(FormBox[
               StyleBox[
                StyleBox[
                 PaneBox[
                  TagBox[
                   GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                  ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                  "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
                False], TraditionalForm]& ),
             Editable->True,
             InterpretationFunction:>(RowBox[{"PointLegend", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                  RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "True", ",", "True"}], "}"}], 
                    "}"}]}], ",", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                  RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
                "]"}]& )], "]"}], Scaled[{0.99, 0.99}], ImageScaled[{1, 1}],
           BaseStyle->{FontSize -> Larger},
           FormatType->StandardForm]},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{
           FormBox["\"\[Sigma] of swarm\"", TraditionalForm], 
           FormBox["\"Max Torque\"", TraditionalForm]},
         AxesOrigin->{0, 0},
         DisplayFunction->Identity,
         Frame->{{False, False}, {False, False}},
         FrameLabel->{{None, None}, {None, None}},
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImageSize->Medium,
         Method->{},
         PlotLabel->FormBox[
          "\"Maximum possible torque on object pivoted at 0, length 1\"", 
           TraditionalForm],
         PlotRange->{{0, 1.}, {0, 0.9826794919243103}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}},
         Ticks->{Automatic, Automatic}],
        TraditionalForm],
       InterpretTemplate[Legended[
         Graphics[{{}, {{{}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              Line[CompressedData["
1:eJwtlAtMU2cUxxERC4gukzp1DMTNFXUmG6CbMPgTVxDsRASHm+BwDHW+Ikhm
AAfIhjEs2zTI3NrxEGGLyAABgxARBoJQaGsf0JZ3X1BKeQUpkYljbT0nubn5
7r3fOef//53vesSdjzhua2NjE2++LPdLLhV71alZeFgyVh1tP41X61yYOG2m
Ku8p1LldMR6sK4C48kqN64VJel+C/L0/eR5vmACPa4lS2O04xX62ZgL11u8r
UGb7bKPXGSPMC/OTKix+JD68WjhO++/D61Dol00+43BUFCf4Oz5AF+ulqKzI
AGs6bj3+zdyz/chaA7bGXGsxeTYgOOjNH09mj1E/jdjqcfdW5vIxlJh3K4r/
AdMhqzEuU48Ja71mJK1ULols9fDxtsRjZGyZC8m5Okr1W2E/XSdIXzOKxyZP
c4U2+Po4/XeGNwInaz/tkIU6q3Z6jiDCWrAD4XkHyhvqdKSXj/EgbouOo4Mm
1ZKwE/xrN0pvqrXUrwCaT3dvaErRItHSXoIQnJ2uXWEuWvJHhOx26Ru+VRrY
WEMMPS/mWHK4hvSIwetfilo+q0aI2lJAAt6pwAD5r2rSJ8EzH4bXpJ8a11ss
AqQ467Q5m61TwSrXWwan69lRyl9UsMpRyDBfnbyqxE9F+ruxLeRwOrtnGO6W
dtx6UOu+3p774TD50YNu1mLzroIhnDxhCTmM2abaVQ5D5I8C9g3+SyuTB2HJ
5lKhQOuCx+Ja4wD5pUS1h+76xrgBzFvSmZRIY936ym6wn/zrxYrey6/XR/cj
wDoAfVjYU5HlPtRHfvZhqIC9xi2+D9b2rvTDjhFRw5vsJX8HkBAQve9Sai+E
AksM4LMZduWfjr3k9yBu+DSpl/KVYFobHMILbeo7CT5K8n8IqvnsdYNCBazp
Yobh9N0XHTtOK4iHCl5ldYJQBwXpUUFYERu8oUxOfFRwYMTPZh2Qkz4VPGOX
vX9xvod4qfHJLqa9orCH9KoR6Vz8bg6nh/ipwcgtn8lZ6Cb9GuwfvpPQVtpN
PDVgJzbHrovpxqt0Giw78t7mpNe6ia8Wrn3lrfwnMvJHi0ctaQuMDBnx1sKJ
U+ayabeM/NIh5IO3GEtzUuKvQ3J1cOzNain5p8PIpr98FYlSmocRGP9w49R4
ScnPEQTm+gldTRKajxH8Hnk6y75eQv6Ooq/Iu/brdAnNyygM4rQtnkES8nsU
5cZB5xBnCZ138zlNeOlWJxeT/3qEa9cnnysS0zzpMfA9r/joOTHxGMM3tbKc
dF8x8RjDby/l3CcMMfEYw8fH9fLP7z0lHub/guzOtrCDT4mHAdLKy8+j50TE
w4DBu0v3Erki4mFAw+32+IxAEfEYBytv+NG3BiHxGEd6BWchKFdI8zmOoBS9
Sh0oJB5GPPwhs81vWkA8jGA17kwJLhQQDyP8/VfsM4ULiMcEfvYuXfSzExCP
CSS5Fbavru8iHhOIYZ4NizvfRTwmcZvFzN/O6iIek5h/0Pn2MVUn8ZjEBX5r
tYnXSTymcMIv7KImqpN4TOHQi8VZV5dO4jGFrkCmbZ6UTzymsdHEFEXl8InH
NP6+ePYpO5JPPKax6vl+/lEmn3jMmOvdf8JVduB/Gv0hXg==
               "]]}, {
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              Line[CompressedData["
1:eJwtkwtMk2cUhuskwEAzAjIUESZjgihRLlNn0FedCxs6boILlzlHKijqRKWO
YRSJohOmsmkioqIMAgIRGQIiKk4u2lJ6pxQoll4o0AsXp4gSxLX1nOTPn+/7
/++c877P+RYnHoja9RGDwWCaHvP76LyqEFXGKYRke2dyvxrDh/UllI8+O52Z
PooG92xDZEMhphZYXXZ5OELfS7DhC9+Nf1iNoOCKOcpxy71xgyTSiPuW/6tQ
czv0en+xAaaFaecfzDgEdxZN6el8LUaD39jabtfDTlacus7uHkof7Fg7U6eD
Jd2V+yjabzz6i6sOSxMuNE/4PITNbX//jSeHqZ8mxOauDf1xfAglptOy4n+x
zqci89bPQzBa6j1BY0jqORvZIIICzdEC10+W790RMUj1W8FyO5aVx9OiZcLH
VKENOT/UyE+EaWFv6ecZDj04GOMoGUCUpSAbM/Furd7xA6SXA+bH0oUlgxqo
M8wJ25F70y8vhaWhfjtwffXl6h02Ghw0t5fKw03n1hPMa2ryh4/ulWvO7QxS
g2EJIaa3h02vFqhIjxDXWt9dFe5T4VuVuYAITYerjA5zVaRPhOC9KUuVd5TI
azYLEIO9qW3bkhglLHIDJfg0Z/aBu2/7YZEjk8Cv3CXKPayf9HeicuvJoPIy
BTzM7bhLEec0a1m8tYL8kMIu5pjN8pTnSE4yRxesmU/P2Er6yB8ZIrgPjks3
9MGcbV6VaV39eM2hu3LyqxsX5bu3NPrK8dqcbqIbl77b9Op0aS/514NjXNbi
6iW9WG8ZgF4EhZWtmVvZQ372wjZrZyUrsAeW9rLl+C+5hfnkcTf524di1W8L
OOHd4HWYow929S0nkjQy8vs5SqPHj6ZlyOBsaVCBekHCSsE8GfmvwKrPPV2i
a7pgSZfQD6ZGZ6WO6iIeSmS8EC+LfS0lPUokMjTzr16TEh8lOJ5+VTnfSEmf
EtZNF13nvOgkXir48LoFVjc6Sa8Kzl5nfo0P7yR+KuTLPYYmZ3WSfjX+2qZw
aqmXEE81xvmR1mX7JfiQTg3Zvmne+SUS4qtBaOhCVpJKTP5o8Dyg5pVroZh4
a1BoGPEpSBCTXwPoTdS3id3ExH8Ahy9pt9YqROTfANLSB2at+FtE86CFX3GH
KjBZRH5q4ev/Mr/WT0TzocUy+88yiieE5K/pXu2afeRlk5DmZRDBp1yd8s8K
ye9BvAlgJGXHCOm+D2HypZddtaeQ/B/C7nDpl65qAc3TEDafXx/nlSUgHsP4
Pb3kzxRPAfEYxtf890972vjEYxhzehfV/bSXTzyGEeC0qk/vyCceOnilOaan
POQRDx2YWc1H+Mk84qFDUrjogI0zj3josXb55FXr1g7ioUeFDrxHaR00n3po
F91I9vDuIB4GdNkYY93lXOJhwPyFcKnK4xIPA9xyK/OaQ7jEw4jo4+ErIhhc
4mFEbX8df0tjO/Ewwt4h+14Fq514jCDuPasgMaCdeIzAOuNC7p5xDvEYgW99
0bu6OxziMYr8PTOP1qdyiMco8vR7xqf8OcRjFJFOm+zVr9jEYwyFEpnE0MAm
HmNQ5ryJczjOJh5jcDtc8jZkM5t4jENxfuz7XHs2/gd7WRvo
               "]]}, {
              Hue[0.1421359549995791, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              Line[CompressedData["
1:eJwtkwtQVGUYhsGBkcGmkQYDCTGMHFQ05ZZDwmuJQjMocommcStCwEpQwSIB
yyYlGskJIgtxIgQTUILoujTk4F5Y2BvsLsvCsqx732WvTomNpTtxjt8/c2bn
nLPn+7/vfZ4/tuR4ftmKgICA0uWL+a0PH8gy1p3DwdqQPdHVPjy6/wqdf63+
dKfFC25MgyuP24HVFWsnCou89P4qSq2xj1WNe9B+iVl94L6xOfdCmgfD7P8H
EDmb+GVfvxvLN8tPhnAs7wW1MMZN3/+CMfGeSFOzC6Ga7hPpob9jfWbOIf8K
F9hyl4ZR82dhR9T7TmzifMFbih+BIvV1Y6p9kfq5ic0/lsUVvLaIq8tfa7pH
8cmmY0eOSxxws/vdgq6r5npTugPJScziIyn6jKdn0E77C/D5xcbtglg7+Evx
yzsIYX28+aSh1YZVbD8iZHzW9tuDYBvy2Q3H8U3glfuRp6w07wR8dX27UpwW
mOqYgmJk3R06k8exUL9SdFb+wauUm1HFtHdChvs2XvD53WbKR478Ykn2tZ9M
CGDXFG7MqZp4cSaaZwpBBTq5/msjso3MBgpwpJaw/0KMNJ8Cv+71FEbUG9DM
YwZQ4kbIh/Gt2ttgx01SYfsrd07eEuvBjqNRoSrf8GytdIHmn4Yud4izRq/D
eqadGDUe1mvT4vzzlIcaZY055W9umceRcmbNoCouQvF9qZby0eDhvuyme71z
YKqFD2gQ9J3maMU/s5TXLNRRge+k5c7iHlNuaRbtp1s+7h3UUH5zMOPuk2GR
GmSwAmhx4NURrr5xhvLU4ue/07ed96vBttcwj8MvLqja6tWUrw4Pdc8kXPZP
QyZllg7inZ1dWxqnKe8FKPZvOOUJn8YatkE9Rj5IUDb1qCh/PdJTahzcDBXY
cpzbCIlKydmqVRIPA9YlNe/tqVXSPAb4gpIyndFK4mPAe+sqi2/yFTSfAfIf
Bpy+SgXxMqL3XMPK3KcUNK8ROyLOFg1KpoifEaKagS77R1M0vwnmsKLLiuQp
4mkinpN4VM6E8s5v2zgHJ4mvmfjKKR8z+m1vDTe+LCfeZuIto7ws2Nee7ygp
kBF/C/GXUn4WFJbUyw5XSMkHK/kgoTytqFvQb3yuVUJ+WMkPCeVrQ8UTZ5da
xsTki418EVPeNjzIGlXUB4vpvNvhZ/2ZoPztCETitn8PTJBPdvJpnHg4sDFz
lJPcNU48HOTXOPFwYENsdeLbfhHxcJBvIuKxiP4Oz1Z7iYh4LJJ/IuKxiKZD
K0PDJ8eIh5N8HCMeTmTsSLhe/NIY+ekkP4XEwwWuciYvZ0RIPFzkq5B4uDAR
7I8q2SUkHm7yV0A83Jjvbr3yPE9APNzks4B4eCB71zl/dL+AeHjIbwHx8GAp
dffaawt84uEl3/nEw4uwQdnTF6v5xMNL/vOJhw9zwr4K7yo+8fDReeARDx/8
PS2nK/t4xOMOnQ8e/gdEkiPL
               "]]}}}, {}}, {
          DisplayFunction -> Identity, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
           PlotRange -> {{0, 1.}, {0, 0.9826794919243103}}, DisplayFunction -> 
           Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {"\[Sigma] of swarm", "Max Torque"}, 
           AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
           Frame -> {{False, False}, {False, False}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
           PlotLabel -> 
           "Maximum possible torque on object pivoted at 0, length 1", 
           PlotRange -> {{0, 1.}, {0, 0.9826794919243103}}, PlotRangeClipping -> 
           True, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
         Placed[
          Unevaluated[
           Unevaluated[
            PointLegend[{
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]]}, {"Normal", "Triangle", "Uniform"}, 
             Joined -> {{True, True, True}}, LabelStyle -> {}, LegendLayout -> 
             "Column", 
             LegendMarkers -> {{False, Automatic}, {False, Automatic}, {
               False, Automatic}}]]], {Right, Top}, Identity]]& ],
       AutoDelete->True,
       Editable->True,
       SelectWithContents->False,
       Selectable->True],
      TraditionalForm], {576., -116.80842387373012`}, {
     Center, Center}, {360., 222.49223594996212`}]}, {}},
  ContentSelectable->True,
  ImagePadding->{{174.714236, 175.714236}, {1., 0.}},
  ImageSize->{780., 245.61684774746024`},
  PlotRange->{{186., 582.}, {-238.61684774746024`, 5.}},
  PlotRangePadding->Automatic]], "Output",
 CellChangeTimes->{3.684634471408965*^9, 3.6846356918113127`*^9}]
}, Open  ]],

Cell["\<\
Note :  the optimal \[Mu] for uniform distribution is any value between 1 - \
\[Sigma] \[Sqrt]3 and \[Sigma] \[Sqrt]3\
\>", "Text",
 CellChangeTimes->{{3.684542993377308*^9, 3.684543075369314*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pivotDrawing", "[", "\[Sigma]_", "]"}], ":=", 
  RowBox[{"Graphics", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"Brown", ",", "\[IndentingNewLine]", 
      RowBox[{"Rectangle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{
           RowBox[{"-", "1"}], "/", "10"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", "Blue", ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
      "Red", ",", 
      RowBox[{"Polygon", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{".75", ",", 
           RowBox[{"-", "4"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.25", ",", 
           RowBox[{"-", "4"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.25", ",", 
           RowBox[{"-", "3"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.75", ",", 
           RowBox[{"-", "3"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "/", "4"}], ",", 
           RowBox[{"-", "3"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{".75", ",", 
           RowBox[{"-", "3"}]}], "}"}]}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", "Black", ",", 
      RowBox[{"PointSize", "[", "Tiny", "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{
         RowBox[{"MultinormalDistribution", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"-", "5"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\[Sigma]", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "\[Sigma]"}], "}"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"10", "^", "3"}]}], "]"}], "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "8"}], ",", "2"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"AxesOrigin", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.676708174556182*^9, 3.676708189614781*^9}, {
  3.6767082290168657`*^9, 3.676708238918744*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"Brown", ",", "\[IndentingNewLine]", 
        RowBox[{"Rectangle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{
             RowBox[{"-", "1"}], "/", "10"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", "Blue", ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
        "Red", ",", 
        RowBox[{"Polygon", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{".75", ",", 
             RowBox[{"-", "4"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.25", ",", 
             RowBox[{"-", "4"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.25", ",", 
             RowBox[{"-", "3"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.75", ",", 
             RowBox[{"-", "3"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"-", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "/", "4"}], ",", 
             RowBox[{"-", "3"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{".75", ",", 
             RowBox[{"-", "3"}]}], "}"}]}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", "Black", ",", 
        RowBox[{"PointSize", "[", "Tiny", "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{
           RowBox[{"MultinormalDistribution", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"-", "5"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\[Sigma]", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "\[Sigma]"}], "}"}]}], "}"}]}], "]"}], ",", 
           
           RowBox[{"10", "^", "3"}]}], "]"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "8"}], ",", "2"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Sigma]", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "/", "10"}], ",", 
        RowBox[{"1", "/", "2"}], ",", "1", ",", "2"}], "}"}]}], "}"}]}], 
   "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.676470766623321*^9, 3.676471003872978*^9}, {
   3.676471085936934*^9, 3.67647111513273*^9}, 3.676471326988613*^9, 
   3.67647197537925*^9, {3.676708033904203*^9, 3.6767080386069403`*^9}, 
   3.67670816978053*^9},
 CellID->70294289],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{
     {RGBColor[0.6, 0.4, 0.2], 
      RectangleBox[NCache[{0, Rational[-1, 10]}, {0, -0.1}], 
       NCache[{1, Rational[1, 10]}, {1, 0.1}]]}, 
     {RGBColor[0, 0, 1], PointBox[{0, 0}]}, 
     {RGBColor[1, 0, 0], 
      PolygonBox[
       NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
         Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
         1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]]}, 
     {GrayLevel[0], PointSize[Tiny], PointBox[CompressedData["
1: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
aGmc2c7ZSRbEeeV6ns+kopkvkkK91FHozvTjuATTUHNO6VfdtinYV2hUsOw3
7icP05HcvZMwcNaj1KeShowqxW3dlrLggFN3psQciRLWxJGz+6YgIntzcwDm
23hfQlBqbhQE6zbUDWpjPpa+lb76UTcEJCRCI0FFN0fojjvW8UBFZ+b992oK
qvh91GjiYT9kp4k8EcP9sqoj/9jZ+2zgndOefYLn6+Pe5buSWBzYKps/jC5K
IF3x716bORyw3MRbvjuSQOUPlq335vbAxq8X/hmOUFFSt+H1qiVDcM771fDe
Frz/rjLuWU9mYK4xY3kcP4mcX9rMV86yIchRlblCn4om3zm4bLr9DTZQCg0n
LXD/ubyUidk+C5d3vpV2jaCihWcSpQaaQ7C/QHRuGc5T6ubYG1bDo9A/kvkk
5zYVBf6orTekDcJXj7CJ6LdUFDH59fEi2jQU3ykQW0slUJOeX/LWZWww2PCw
6A/2/anMQJUslTE4cfeh2cdrVLTLeLUq99Y8ZD1et878HoFWLGvr0/g4Bonj
t9fPtJMoUuzPm7PDLJgvKp1wwnktEs0g713kQeCk5usQfP73DxwvLwpjQKqm
aETFaRp6KqVBexFeCa4r727Z+oRAFQbrwizyuHD3LbW1VA6/vnc/5ZDPDLD4
P8VGYl+MF1bJl0gbgSGdc2uM5rGvXL2nHfutB0Y+Tax17KWi+Yaw+83USZga
72KvNMH+aTTysOsUHcKv5k7k/sV8Mq9Kd7rIhbDSfkbCSwLJXt+3yAf3KR+9
aFdGOhWdWNKl4GvDAvVXRPIV7CuMcyNVF3UZkMxMcygcJxD6erbxxq9J+DLi
NTJlQkPZLSZb9D8xIfehv0VgGolMnj4MNXvdCq9Sji7ecYqC3NJE6l0mhkDA
hVoj7U0ih3ehbx43TcOiknqzOiUCpYiI0tf2cEBra2PzXBTmCe00kcjyUaig
3zcZdsS+NxR5oikT80x5HK95NQ3to4Q2fUVcmPh4SkoM8z9fdoeaVTIbUvIK
Fva/paFop7NRNO8eMGSu9/4USiIfYTP2fyHD4Pb8UWFCPRWdHPz3ZT2+n592
89e24vm6GW/pl6rDhvXfdFLeuhPIVL6itffkFHhd0N5DNcX5vbtmi0EUC8KP
KsUvx/5zr1nuoJoiD2Q2ffWWwjyXfaGjoSWmA1I9nweJhhNI/41jwz7RLkgf
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
W4EQzw==
       "]]}},
    AxesOrigin->{0, 0},
    PlotRange->{{-1, 3}, {-8, 2}}], ",", 
   GraphicsBox[{
     {RGBColor[0.6, 0.4, 0.2], 
      RectangleBox[NCache[{0, Rational[-1, 10]}, {0, -0.1}], 
       NCache[{1, Rational[1, 10]}, {1, 0.1}]]}, 
     {RGBColor[0, 0, 1], PointBox[{0, 0}]}, 
     {RGBColor[1, 0, 0], 
      PolygonBox[
       NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
         Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
         1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]]}, 
     {GrayLevel[0], PointSize[Tiny], PointBox[CompressedData["
1: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
       "]]}},
    AxesOrigin->{0, 0},
    PlotRange->{{-1, 3}, {-8, 2}}], ",", 
   GraphicsBox[{
     {RGBColor[0.6, 0.4, 0.2], 
      RectangleBox[NCache[{0, Rational[-1, 10]}, {0, -0.1}], 
       NCache[{1, Rational[1, 10]}, {1, 0.1}]]}, 
     {RGBColor[0, 0, 1], PointBox[{0, 0}]}, 
     {RGBColor[1, 0, 0], 
      PolygonBox[
       NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
         Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
         1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]]}, 
     {GrayLevel[0], PointSize[Tiny], PointBox[CompressedData["
1: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
       "]]}},
    AxesOrigin->{0, 0},
    PlotRange->{{-1, 3}, {-8, 2}}], ",", 
   GraphicsBox[{
     {RGBColor[0.6, 0.4, 0.2], 
      RectangleBox[NCache[{0, Rational[-1, 10]}, {0, -0.1}], 
       NCache[{1, Rational[1, 10]}, {1, 0.1}]]}, 
     {RGBColor[0, 0, 1], PointBox[{0, 0}]}, 
     {RGBColor[1, 0, 0], 
      PolygonBox[
       NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
         Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
         1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]]}, 
     {GrayLevel[0], PointSize[Tiny], PointBox[CompressedData["
1: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
bOfI8D+uRnkQ
       "]]}},
    AxesOrigin->{0, 0},
    PlotRange->{{-1, 3}, {-8, 2}}]}], "}"}]], "Output",
 CellChangeTimes->{{3.676470783775257*^9, 3.6764707939130287`*^9}, {
   3.676470829920199*^9, 3.6764708640944843`*^9}, {3.676470903722499*^9, 
   3.67647093557904*^9}, {3.6764709802999067`*^9, 3.676471004411406*^9}, {
   3.676471098371408*^9, 3.676471115749959*^9}, 3.676471327689361*^9, 
   3.676471975896736*^9, 3.6767080397143373`*^9, 3.684634471477928*^9, 
   3.684635691859378*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Problem 2:  a free object (no pivot point).  Where should swarm fit to \
generate the most torque?\
\>", "Subsection",
 CellChangeTimes->{{3.6764621771486588`*^9, 3.6764622264149523`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{"-", "1"}], "1"], 
    RowBox[{"x", " ", 
     RowBox[{"pdfTriangle", "[", 
      RowBox[{"x", ",", "\[Mu]", ",", "\[Sigma]"}], "]"}], " ", 
     RowBox[{"\[DifferentialD]", "x"}]}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "assume", " ", "the", " ", "object", " ", "COM", " ", "is", " ", "at", 
     " ", "0"}], ",", " ", 
    RowBox[{
     RowBox[{"and", " ", "the", " ", "object", " ", "extends", " ", "from"}], 
     " ", "-", 
     RowBox[{"1", " ", "to", " ", "1"}]}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.676465933957417*^9, 3.676465936137473*^9}, {
  3.676466161477537*^9, 3.6764661745402927`*^9}, {3.676468233532557*^9, 
  3.676468252757174*^9}, {3.684533543640164*^9, 3.684533573457127*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {"\[Mu]", 
        RowBox[{
         RowBox[{
          RowBox[{
           SqrtBox["6"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", "\[Mu]"}], ")"}]}], "\[GreaterEqual]", 
          RowBox[{"6", " ", "\[Sigma]"}]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}], "&&", 
         RowBox[{"\[Sigma]", ">", "0"}]}]},
       {
        RowBox[{"-", 
         FractionBox["1", 
          RowBox[{"9", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Mu]", "\[Equal]", 
            RowBox[{"-", "1"}]}], "&&", 
           RowBox[{
            RowBox[{"3", " ", "\[Sigma]"}], "\[GreaterEqual]", 
            SqrtBox["6"]}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Mu]", "<", 
            RowBox[{"-", "1"}]}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "+", 
             RowBox[{"6", " ", "\[Sigma]"}]}], ">", 
            SqrtBox["6"]}]}], ")"}]}]},
       {
        FractionBox["1", 
         RowBox[{"9", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Mu]", ">", "1"}], "&&", 
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", "\[Mu]"}], ")"}]}], "\[LessEqual]", 
            RowBox[{"6", " ", "\[Sigma]"}]}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
           RowBox[{
            RowBox[{"3", " ", "\[Sigma]"}], "\[GreaterEqual]", 
            SqrtBox["6"]}]}], ")"}]}]},
       {
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", 
             SuperscriptBox["\[Mu]", "2"]}], ")"}]}], 
          RowBox[{"18", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], "<", "\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           SqrtBox["6"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", "\[Mu]"}], ")"}]}], "<", 
          RowBox[{"6", " ", "\[Sigma]"}]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
          SqrtBox["6"]}]}]},
       {
        RowBox[{
         FractionBox["1", "2"], "-", 
         FractionBox["\[Sigma]", 
          SqrtBox["6"]]}], 
        RowBox[{
         RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
         RowBox[{"0", "<", "\[Sigma]", "<", 
          SqrtBox[
           FractionBox["2", "3"]]}]}]},
       {
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], "+", 
         FractionBox["\[Sigma]", 
          SqrtBox["6"]]}], 
        RowBox[{
         RowBox[{"\[Mu]", "\[Equal]", 
          RowBox[{"-", "1"}]}], "&&", 
         RowBox[{"0", "<", "\[Sigma]", "<", 
          SqrtBox[
           FractionBox["2", "3"]]}]}]},
       {
        RowBox[{"-", 
         FractionBox[
          RowBox[{"2", "+", 
           SuperscriptBox["\[Mu]", "3"], "+", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", 
            SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", "\[Sigma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "-", 
           RowBox[{"3", " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"6", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
          RowBox[{"36", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]]}], 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
          SqrtBox["6"]}], "&&", 
         RowBox[{"\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           SqrtBox["6"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", "\[Mu]"}], ")"}]}], "\[GreaterEqual]", 
          RowBox[{"6", " ", "\[Sigma]"}]}]}]},
       {
        FractionBox[
         RowBox[{"2", "+", 
          SuperscriptBox["\[Mu]", "3"], "-", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "+", 
          RowBox[{"3", " ", "\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"6", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", ">", "1"}], "&&", 
         RowBox[{
          RowBox[{"-", 
           SqrtBox["6"]}], "<", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}]}]},
       {
        FractionBox[
         RowBox[{"2", "-", 
          SuperscriptBox["\[Mu]", "3"], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "+", 
          RowBox[{"3", " ", "\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"6", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", ">", 
          RowBox[{"-", "1"}]}], "&&", 
         RowBox[{
          RowBox[{
           SqrtBox["6"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", "\[Mu]"}], ")"}]}], "<", 
          RowBox[{"6", " ", "\[Sigma]"}]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          SuperscriptBox["\[Mu]", "3"], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "+", 
          RowBox[{"3", " ", "\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"6", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", "<", 
          RowBox[{"-", "1"}]}], "&&", 
         RowBox[{
          RowBox[{"-", 
           SqrtBox["6"]}], "<", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", 
          SqrtBox["6"]}]}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.684634498240581*^9, 3.684635722168562*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"TorqueFreeTri", "[", 
   RowBox[{"\[Mu]_", ",", "\[Sigma]_"}], "]"}], ":=", 
  TagBox[GridBox[{
     {"\[Piecewise]", GridBox[{
        {"\[Mu]", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "\[Mu]"}], ")"}]}], "\[GreaterEqual]", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "&&", 
          RowBox[{
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "+", 
            RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
           SqrtBox["6"]}], "&&", 
          RowBox[{"\[Sigma]", ">", "0"}]}]},
        {
         RowBox[{"-", 
          FractionBox["1", 
           RowBox[{"9", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]]}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Mu]", "\[Equal]", 
             RowBox[{"-", "1"}]}], "&&", 
            RowBox[{
             RowBox[{"3", " ", "\[Sigma]"}], "\[GreaterEqual]", 
             SqrtBox["6"]}]}], ")"}], "||", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Mu]", "<", 
             RowBox[{"-", "1"}]}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "+", 
              RowBox[{"6", " ", "\[Sigma]"}]}], ">", 
             SqrtBox["6"]}]}], ")"}]}]},
        {
         FractionBox["1", 
          RowBox[{"9", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Mu]", ">", "1"}], "&&", 
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", "\[Mu]"}], ")"}]}], "\[LessEqual]", 
             RowBox[{"6", " ", "\[Sigma]"}]}]}], ")"}], "||", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
            RowBox[{
             RowBox[{"3", " ", "\[Sigma]"}], "\[GreaterEqual]", 
             SqrtBox["6"]}]}], ")"}]}]},
        {
         RowBox[{"-", 
          FractionBox[
           RowBox[{"\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", 
              SuperscriptBox["\[Mu]", "2"]}], ")"}]}], 
           RowBox[{"18", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]]}], 
         RowBox[{
          RowBox[{
           RowBox[{"-", "1"}], "<", "\[Mu]", "<", "1"}], "&&", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "\[Mu]"}], ")"}]}], "<", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "&&", 
          RowBox[{
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "+", 
            RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
           SqrtBox["6"]}]}]},
        {
         RowBox[{
          FractionBox["1", "2"], "-", 
          FractionBox["\[Sigma]", 
           SqrtBox["6"]]}], 
         RowBox[{
          RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
          RowBox[{"0", "<", "\[Sigma]", "<", 
           SqrtBox[
            FractionBox["2", "3"]]}]}]},
        {
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], "+", 
          FractionBox["\[Sigma]", 
           SqrtBox["6"]]}], 
         RowBox[{
          RowBox[{"\[Mu]", "\[Equal]", 
           RowBox[{"-", "1"}]}], "&&", 
          RowBox[{"0", "<", "\[Sigma]", "<", 
           SqrtBox[
            FractionBox["2", "3"]]}]}]},
        {
         RowBox[{"-", 
          FractionBox[
           RowBox[{"2", "+", 
            SuperscriptBox["\[Mu]", "3"], "+", 
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", 
             SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", "\[Sigma]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "-", 
            RowBox[{"3", " ", "\[Mu]", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"6", " ", 
                SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
           RowBox[{"36", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]]}], 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "+", 
            RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
           SqrtBox["6"]}], "&&", 
          RowBox[{"\[Mu]", "<", "1"}], "&&", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "\[Mu]"}], ")"}]}], "\[GreaterEqual]", 
           RowBox[{"6", " ", "\[Sigma]"}]}]}]},
        {
         FractionBox[
          RowBox[{"2", "+", 
           SuperscriptBox["\[Mu]", "3"], "-", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", 
            SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", "\[Sigma]", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "+", 
           RowBox[{"3", " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
          RowBox[{"36", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]], 
         RowBox[{
          RowBox[{"\[Mu]", ">", "1"}], "&&", 
          RowBox[{
           RowBox[{"-", 
            SqrtBox["6"]}], "<", 
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "-", 
            RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
           SqrtBox["6"]}]}]},
        {
         FractionBox[
          RowBox[{"2", "-", 
           SuperscriptBox["\[Mu]", "3"], "+", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", 
            SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", "\[Sigma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "+", 
           RowBox[{"3", " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"6", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
          RowBox[{"36", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]], 
         RowBox[{
          RowBox[{"\[Mu]", ">", 
           RowBox[{"-", "1"}]}], "&&", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "\[Mu]"}], ")"}]}], "<", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "&&", 
          RowBox[{
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "+", 
            RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
           SqrtBox["6"]}]}]},
        {
         FractionBox[
          RowBox[{
           RowBox[{"-", "2"}], "+", 
           SuperscriptBox["\[Mu]", "3"], "+", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", 
            SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", "\[Sigma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "+", 
           RowBox[{"3", " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
          RowBox[{"36", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]], 
         RowBox[{
          RowBox[{"\[Mu]", "<", 
           RowBox[{"-", "1"}]}], "&&", 
          RowBox[{
           RowBox[{"-", 
            SqrtBox["6"]}], "<", 
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "+", 
            RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", 
           SqrtBox["6"]}]}]},
        {"0", 
         TagBox["True",
          "PiecewiseDefault",
          AutoDelete->True]}
       },
       AllowedDimensions->{2, Automatic},
       Editable->True,
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.84]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}},
       Selectable->True]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxItemSize->{
     "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.35]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   "Piecewise",
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True,
   Selectable->False]}]], "Input",
 CellChangeTimes->{{3.684533818682495*^9, 3.684533823449733*^9}, {
  3.684540933564073*^9, 3.684540934072744*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"TorquePivotTriFree", "[", 
   RowBox[{"\[Mu]_", ",", "\[Sigma]_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"lowlim1", " ", "=", 
       RowBox[{"Max", "[", 
        RowBox[{
         RowBox[{"-", "1"}], ",", 
         RowBox[{"\[Mu]", "-", 
          RowBox[{
           SqrtBox["6"], " ", "\[Sigma]"}]}]}], "]"}]}], ",", 
      RowBox[{"uplim1", " ", "=", "  ", 
       RowBox[{"Min", "[", 
        RowBox[{"1", ",", "\[Mu]"}], "]"}]}], ",", 
      RowBox[{"lowlim2", " ", "=", 
       RowBox[{"Max", "[", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "\[Mu]"}], "]"}]}], ",", 
      RowBox[{"uplim2", " ", "=", "  ", 
       RowBox[{"Min", "[", 
        RowBox[{"1", ",", 
         RowBox[{"\[Mu]", "+", 
          RowBox[{
           SqrtBox["6"], " ", "\[Sigma]"}]}]}], "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"uplim1", ">", "lowlim1"}], ",", 
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          SuperscriptBox["lowlim1", "3"]}], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["lowlim1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Mu]", "-", 
            RowBox[{
             SqrtBox["6"], " ", "\[Sigma]"}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["uplim1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "uplim1"}], "-", 
            RowBox[{"3", " ", "\[Mu]"}], "+", 
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", "\[Sigma]"}]}], ")"}]}]}], 
        RowBox[{"36", " ", 
         SuperscriptBox["\[Sigma]", "2"]}]], ",", "0"}], "]"}], "+", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"uplim2", ">", "lowlim2"}], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox["lowlim2", "3"]}], "-", 
         RowBox[{"3", " ", 
          SuperscriptBox["lowlim2", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Mu]", "+", 
            RowBox[{
             SqrtBox["6"], " ", "\[Sigma]"}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["uplim2", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "uplim2"}], "+", 
            RowBox[{"3", " ", 
             RowBox[{"(", 
              RowBox[{"\[Mu]", "+", 
               RowBox[{
                SqrtBox["6"], " ", "\[Sigma]"}]}], ")"}]}]}], ")"}]}]}], 
        RowBox[{"36", " ", 
         SuperscriptBox["\[Sigma]", "2"]}]], ",", "0"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"lowlim1", " ", "=", 
        RowBox[{"Max", "[", 
         RowBox[{"0", ",", 
          RowBox[{"\[Mu]", "-", 
           RowBox[{
            SqrtBox["6"], " ", "\[Sigma]"}]}]}], "]"}]}], ";", 
       RowBox[{"uplim1", " ", "=", "  ", 
        RowBox[{"Min", "[", 
         RowBox[{"1", ",", "\[Mu]"}], "]"}]}], ";", 
       RowBox[{"lowlim2", " ", "=", 
        RowBox[{"Max", "[", 
         RowBox[{"0", ",", "\[Mu]"}], "]"}]}], ";", 
       RowBox[{"uplim2", " ", "=", "  ", 
        RowBox[{"Min", "[", 
         RowBox[{"1", ",", 
          RowBox[{"\[Mu]", "+", 
           RowBox[{
            SqrtBox["6"], " ", "\[Sigma]"}]}]}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"uplim1", ">", "lowlim1"}], ",", 
        RowBox[{
         SubsuperscriptBox["\[Integral]", "lowlim1", "uplim1"], 
         RowBox[{"x", " ", 
          FractionBox[
           RowBox[{"x", "-", "\[Mu]", "+", 
            RowBox[{
             SqrtBox["6"], " ", "\[Sigma]"}]}], 
           RowBox[{"6", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]], 
          RowBox[{"\[DifferentialD]", "x"}]}]}], ",", "0"}], "]"}], "+", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"uplim2", ">", "lowlim2"}], ",", 
        RowBox[{
         SubsuperscriptBox["\[Integral]", "lowlim2", "uplim2"], 
         RowBox[{"x", " ", 
          FractionBox[
           RowBox[{
            RowBox[{"-", "x"}], "+", "\[Mu]", "+", 
            RowBox[{
             SqrtBox["6"], " ", "\[Sigma]"}]}], 
           RowBox[{"6", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]], 
          RowBox[{"\[DifferentialD]", "x"}]}]}], ",", "0"}], "]"}]}]}], "]"}],
    "*)"}]}]}], "Input",
 CellChangeTimes->{{3.676467577391876*^9, 3.676467583150907*^9}, {
   3.676467620923286*^9, 3.676467642689784*^9}, 3.684533184729178*^9, {
   3.684533596596053*^9, 3.684533598039216*^9}, {3.6845379966929417`*^9, 
   3.684538068930195*^9}, {3.684538106530834*^9, 3.6845382708752737`*^9}, {
   3.6845383147084846`*^9, 3.684538356260854*^9}, 3.684538387403821*^9, {
   3.684538484572762*^9, 3.684538521073769*^9}, {3.6845388666282597`*^9, 
   3.6845388668906527`*^9}, {3.684540347995214*^9, 3.6845403592671824`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "lowlim", "uplim"], 
  RowBox[{"x", " ", 
   FractionBox["1", 
    RowBox[{"2", 
     SqrtBox["3"], " ", "\[Sigma]"}]], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.684539156942346*^9, 3.684539164426305*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    SuperscriptBox["lowlim", "2"], 
    RowBox[{"4", " ", 
     SqrtBox["3"], " ", "\[Sigma]"}]]}], "+", 
  FractionBox[
   SuperscriptBox["uplim", "2"], 
   RowBox[{"4", " ", 
    SqrtBox["3"], " ", "\[Sigma]"}]]}]], "Output",
 CellChangeTimes->{3.6845391647952223`*^9, 3.6845408854065228`*^9, 
  3.68454102996239*^9, 3.684634498514007*^9, 3.684635722399192*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TorquePivotFreeUni", "[", 
  RowBox[{
   RowBox[{"1", "/", "2"}], ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.684541082575522*^9, 3.684541100235766*^9}}],

Cell[BoxData[
 RowBox[{"TorquePivotFreeUni", "[", 
  RowBox[{
   FractionBox["1", "2"], ",", "2"}], "]"}]], "Output",
 CellChangeTimes->{{3.684541093148327*^9, 3.684541100708908*^9}, 
   3.684634498540916*^9, 3.684635722435773*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sigs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1.1", ",", "1.2", ",", "1.3", ",", "1.4"}], "}"}]}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"TODO", ":", " ", 
    RowBox[{
    "place", " ", "legend", " ", "inside", " ", "the", " ", "plot"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"TorquePivotFreeUni", "[", 
       RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "sigs"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", 
     RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "sigs"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Mu] (pushing location)\>\"", ",", "\"\<Torque\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Uniform distribution\>\""}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", "1"}], "}"}]}], "}"}], "]"}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.683656192718853*^9, 3.68365650959415*^9}, {
   3.684533201990088*^9, 3.684533227629901*^9}, 3.6845336018509903`*^9, {
   3.684538398449457*^9, 3.684538398934102*^9}, {3.684538872647613*^9, 
   3.6845388887736807`*^9}, 3.684539050089514*^9, {3.6845392360343122`*^9, 
   3.68453924661322*^9}, {3.684539278578122*^9, 3.684539281301207*^9}, {
   3.684539347834256*^9, 3.684539370928897*^9}, {3.684539413266988*^9, 
   3.6845394260116*^9}, {3.684541137633313*^9, 3.684541223576767*^9}}],

Cell[BoxData[
 TemplateBox[{
  GraphicsBox[{}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[Mu] (pushing location)\"", TraditionalForm], 
       FormBox["\"Torque\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Epilog -> {
       LineBox[
        NCache[{{
           Rational[1, 2], 0}, {
           Rational[1, 2], 1}}, {{0.5, 0}, {0.5, 1}}]]}, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotLabel -> FormBox["\"Uniform distribution\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"1", "1.1`", "1.2`", "1.3`", "1.4`"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.684541180427577*^9, 3.6845412241660624`*^9}, 
   3.6846344986272697`*^9, 3.684635722521311*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sigs", " ", "=", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.1", ",", "0.5", ",", "1", ",", "2", ",", 
       RowBox[{"5", "/", 
        RowBox[{"\[Sqrt]", "3"}]}], ",", "5"}], "}"}], "/", "10"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"TODO", ":", " ", 
    RowBox[{
    "place", " ", "legend", " ", "inside", " ", "the", " ", "plot"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"TorquePivotFreeUni", "[", 
       RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "sigs"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "sigs"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Mu] (pushing location)\>\"", ",", "\"\<Torque\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Uniform distribution\>\""}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", "1"}], "}"}]}], "}"}], "]"}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.683656192718853*^9, 3.68365650959415*^9}, {
   3.684533201990088*^9, 3.684533227629901*^9}, 3.6845336018509903`*^9, {
   3.684538398449457*^9, 3.684538398934102*^9}, {3.684538872647613*^9, 
   3.6845388887736807`*^9}, 3.684539050089514*^9, {3.6845392360343122`*^9, 
   3.68453924661322*^9}, {3.684539278578122*^9, 3.684539281301207*^9}, {
   3.684539347834256*^9, 3.684539370928897*^9}, {3.684539413266988*^9, 
   3.6845394260116*^9}, {3.684541137633313*^9, 3.68454116084551*^9}}],

Cell[BoxData[
 TemplateBox[{
  GraphicsBox[{}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[Mu] (pushing location)\"", TraditionalForm], 
       FormBox["\"Torque\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Epilog -> {
       LineBox[
        NCache[{{
           Rational[1, 2], 0}, {
           Rational[1, 2], 1}}, {{0.5, 0}, {0.5, 1}}]]}, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotLabel -> FormBox["\"Uniform distribution\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"0.010000000000000002`", "0.05`", 
       FractionBox["1", "10"], 
       FractionBox["1", "5"], 
       FractionBox["1", 
        RowBox[{"2", " ", 
          SqrtBox["3"]}]], 
       FractionBox["1", "2"]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6845411384377728`*^9, 3.684541161355607*^9}, 
   3.684634498736293*^9, 3.684635722626712*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"TorquePivotFreeUni", "[", 
   RowBox[{"\[Mu]_", ",", "\[Sigma]_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"lowlim", " ", "=", 
       RowBox[{"Max", "[", 
        RowBox[{
         RowBox[{"-", "1"}], ",", 
         RowBox[{"\[Mu]", "-", 
          RowBox[{
           SqrtBox["3"], " ", "\[Sigma]"}]}]}], "]"}]}], ",", 
      RowBox[{"uplim", " ", "=", "  ", 
       RowBox[{"Min", "[", 
        RowBox[{"1", ",", 
         RowBox[{"\[Mu]", "+", 
          RowBox[{
           SqrtBox["3"], " ", "\[Sigma]"}]}]}], "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"uplim", ">", "lowlim"}], ",", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         SuperscriptBox["lowlim", "2"], 
         RowBox[{"4", " ", 
          SqrtBox["3"], " ", "\[Sigma]"}]]}], "+", 
       FractionBox[
        SuperscriptBox["uplim", "2"], 
        RowBox[{"4", " ", 
         SqrtBox["3"], " ", "\[Sigma]"}]]}], ",", "0"}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.684538961696658*^9, 3.684539033841741*^9}, {
   3.68453908776854*^9, 3.6845390935628242`*^9}, 3.684539169612364*^9, {
   3.684540437551422*^9, 3.68454045745277*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"bestPushFreeNorm", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ans", "=", 
        RowBox[{"FindMaximum", "[", 
         RowBox[{
          RowBox[{
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"-", 
                  FractionBox[
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], 
                   RowBox[{"2", " ", 
                    SuperscriptBox["\[Sigma]", "2"]}]]}]]}], "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"-", 
                 FractionBox[
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Mu]"}], ")"}], "2"], 
                  RowBox[{"2", " ", 
                   SuperscriptBox["\[Sigma]", "2"]}]]}]]}], ")"}], " ", 
             "\[Sigma]"}], 
            SqrtBox[
             RowBox[{"2", " ", "\[Pi]"}]]], "+", 
           RowBox[{
            FractionBox["1", "2"], " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Erf", "[", 
               FractionBox[
                RowBox[{"1", "-", "\[Mu]"}], 
                RowBox[{
                 SqrtBox["2"], " ", "\[Sigma]"}]], "]"}], "+", 
              RowBox[{"Erf", "[", 
               FractionBox[
                RowBox[{"1", "+", "\[Mu]"}], 
                RowBox[{
                 SqrtBox["2"], " ", "\[Sigma]"}]], "]"}]}], ")"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Mu]", ",", "1"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", 
         RowBox[{"First", "@", "ans"}], ",", 
         RowBox[{"ans", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
        "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "0.01", ",", "2", ",", "0.01"}], "}"}]}], 
     "]"}]}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.684540302969158*^9, 3.684540310153585*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634498857087*^9, 3.684635722743629*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634498857087*^9, 3.684635722811303*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "sdprec"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Line search unable to find a sufficient increase in the \
function value with \[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digit \
precision. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/FindMaximum\\\", \
ButtonNote -> \\\"FindMaximum::sdprec\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634498857087*^9, 3.684635722898871*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634498857087*^9, 3.684635723044374*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(FindMaximum :: lstol\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634498857087*^9, 3.684635723081712*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.40115800000000001457323151043965481222`5.623915370721071", ",", "Null"}],
   "}"}]], "Output",
 CellChangeTimes->{3.6845403113243923`*^9, 3.684634499216339*^9, 
  3.684635723100963*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"bestPushFreeTri", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ans", "=", 
        RowBox[{"FindMaximum", "[", 
         RowBox[{
          RowBox[{"TorquePivotTriFree", "[", 
           RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Mu]", ",", 
            RowBox[{"Max", "[", 
             RowBox[{"1", ",", 
              RowBox[{
               RowBox[{
                SqrtBox["6"], "/", "2"}], "\[Sigma]"}]}], "]"}]}], "}"}]}], 
         "]"}]}], ";", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", 
         RowBox[{"First", "@", "ans"}], ",", 
         RowBox[{"ans", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
        "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "0.01", ",", "2", ",", "0.01"}], "}"}]}], 
     "]"}]}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.676466416448494*^9, 3.676466470673649*^9}, {
   3.6764665929400253`*^9, 3.6764667320443153`*^9}, {3.6764667913415413`*^9, 
   3.676466813481152*^9}, {3.6764670024882803`*^9, 3.676467011715851*^9}, {
   3.676468270631659*^9, 3.6764682776512947`*^9}, {3.684533837881112*^9, 
   3.6845338508256598`*^9}, {3.684540245279271*^9, 3.684540256086082*^9}, {
   3.684540289572055*^9, 3.68454029856402*^9}, 3.684540367414665*^9, {
   3.684541591262807*^9, 3.684541606783594*^9}, {3.684541640840365*^9, 
   3.684541686358395*^9}, {3.684541752098618*^9, 3.6845417951403437`*^9}, {
   3.684541849077037*^9, 3.684541877464965*^9}, 3.684542026268549*^9, {
   3.684542820490223*^9, 3.684542852974832*^9}, 3.6845435407925043`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499279896*^9, 3.684635723168494*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499279896*^9, 3.684635723220612*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "sdprec"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Line search unable to find a sufficient increase in the \
function value with \[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digit \
precision. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/FindMaximum\\\", \
ButtonNote -> \\\"FindMaximum::sdprec\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499279896*^9, 3.6846357232746067`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499279896*^9, 3.684635723335971*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(FindMaximum :: lstol\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499279896*^9, 3.68463572338752*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "fmgz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered a gradient that is effectively zero. The \
result returned may not be a maximum; it may be a minimum or a saddle point. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FindMaximum/fmgz\\\", \
ButtonNote -> \\\"FindMaximum::fmgz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499279896*^9, 3.684635723532835*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "fmgz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered a gradient that is effectively zero. The \
result returned may not be a maximum; it may be a minimum or a saddle point. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FindMaximum/fmgz\\\", \
ButtonNote -> \\\"FindMaximum::fmgz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499279896*^9, 3.68463572356743*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "fmgz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered a gradient that is effectively zero. The \
result returned may not be a maximum; it may be a minimum or a saddle point. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FindMaximum/fmgz\\\", \
ButtonNote -> \\\"FindMaximum::fmgz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499279896*^9, 3.6846357235875483`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(FindMaximum :: fmgz\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499279896*^9, 3.684635723616661*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.57611199999999995746691183740040287375`5.781106834643117", ",", "Null"}],
   "}"}]], "Output",
 CellChangeTimes->{
  3.684540334625102*^9, 3.684540369361082*^9, {3.684541593635766*^9, 
   3.684541608197021*^9}, {3.684541642372292*^9, 3.684541657004161*^9}, 
   3.684541687640533*^9, 3.684541769109294*^9, 3.684541812340002*^9, {
   3.684541853702668*^9, 3.684541881268992*^9}, 3.684542027637506*^9, {
   3.684542834015074*^9, 3.684542854457673*^9}, 3.6845435463866653`*^9, 
   3.684634499714438*^9, 3.6846357236951437`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"bestPushFreeTriBottom", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ans", "=", 
        RowBox[{"FindMaximum", "[", 
         RowBox[{
          RowBox[{"TorquePivotTriFree", "[", 
           RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Mu]", ",", "1"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", 
         RowBox[{"First", "@", "ans"}], ",", 
         RowBox[{"ans", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
        "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "0.01", ",", "2", ",", "0.01"}], "}"}]}], 
     "]"}]}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.684542894304944*^9, 3.684542899036315*^9}, 
   3.684543543966049*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499937738*^9, 3.684635723891653*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499937738*^9, 3.684635723942992*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "sdprec"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Line search unable to find a sufficient increase in the \
function value with \[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digit \
precision. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/FindMaximum\\\", \
ButtonNote -> \\\"FindMaximum::sdprec\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499937738*^9, 3.6846357240011*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499937738*^9, 3.684635724056382*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(FindMaximum :: lstol\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499937738*^9, 3.6846357240754633`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "fmgz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered a gradient that is effectively zero. The \
result returned may not be a maximum; it may be a minimum or a saddle point. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FindMaximum/fmgz\\\", \
ButtonNote -> \\\"FindMaximum::fmgz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499937738*^9, 3.684635724162649*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "fmgz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered a gradient that is effectively zero. The \
result returned may not be a maximum; it may be a minimum or a saddle point. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FindMaximum/fmgz\\\", \
ButtonNote -> \\\"FindMaximum::fmgz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499937738*^9, 3.6846357241972847`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "fmgz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered a gradient that is effectively zero. The \
result returned may not be a maximum; it may be a minimum or a saddle point. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FindMaximum/fmgz\\\", \
ButtonNote -> \\\"FindMaximum::fmgz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499937738*^9, 3.68463572420223*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(FindMaximum :: fmgz\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499937738*^9, 3.684635724221681*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.47518500000000002403410803708538878709`5.6974626362459295", ",", 
   "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.6845428997410173`*^9, 3.684543548713526*^9, 
  3.684634500377095*^9, 3.684635724313336*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"bestPushFreeUni", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ans", "=", 
        RowBox[{"FindMaximum", "[", 
         RowBox[{
          RowBox[{"TorquePivotFreeUni", "[", 
           RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Mu]", ",", 
            RowBox[{"1", "+", 
             RowBox[{
              RowBox[{
               SqrtBox["3"], "/", "2"}], "\[Sigma]"}]}]}], "}"}]}], "]"}]}], 
       ";", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", 
         RowBox[{"First", "@", "ans"}], ",", 
         RowBox[{"ans", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
        "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "0.01", ",", "2", ",", "0.01"}], "}"}]}], 
     "]"}]}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.684540465185493*^9, 3.684540465468801*^9}, {
   3.684540516819571*^9, 3.684540517184272*^9}, 3.684540977979784*^9, 
   3.684541012876995*^9, {3.6845412684218693`*^9, 3.684541268771349*^9}, {
   3.684541310836534*^9, 3.684541326926167*^9}, {3.684541558220834*^9, 
   3.6845415595286617`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634500440503*^9, 3.684635724384885*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634500440503*^9, 3.6846357244543343`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634500440503*^9, 3.6846357245718946`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(FindMaximum :: lstol\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634500440503*^9, 3.684635724631167*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "fmdig"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Working precision \[NoBreak]\\!\\(MachinePrecision\\)\
\[NoBreak] is insufficient to achieve the requested accuracy or precision. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FindMaximum/fmdig\\\", \
ButtonNote -> \\\"FindMaximum::fmdig\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634500440503*^9, 3.684635724714625*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.57703099999999996061461615681764669716`5.781799058787679", ",", "Null"}],
   "}"}]], "Output",
 CellChangeTimes->{
  3.684540466599551*^9, 3.68454051817599*^9, 3.684540979097865*^9, 
   3.684541014482897*^9, 3.684541269464591*^9, {3.684541311972795*^9, 
   3.684541327816001*^9}, 3.684541560253099*^9, 3.6846345007000237`*^9, 
   3.6846357249512463`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"bestPushFreeNorm", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"bestPushFreeNorm", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"bestPushFreeTri", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"bestPushFreeTri", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"bestPushFreeUni", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"bestPushFreeUni", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], 
      "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Sigma] of swarm\>\"", ",", "\"\<Max Torque\>\""}], 
     "}"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Max possible torque on  a free object (-1 to 1)\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<Normal\>\"", ",", "\"\<Triangle\>\"", ",", "\"\<Uniform\>\""}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Right", ",", "Top"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"bestPushFreeNorm", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"bestPushFreeNorm", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"bestPushFreeTri", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"bestPushFreeTri", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"bestPushFreeUni", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"bestPushFreeUni", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"bestPushFreeTriBottom", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"bestPushFreeTriBottom", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}], 
      "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[Sigma] of swarm\>\"", ",", 
      "\"\<Optimal push location (\[Mu])\>\""}], "}"}]}], ",", 
   RowBox[{"Filling", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", "\[Rule]", 
      RowBox[{"{", "4", "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", "Automatic", ",", "Automatic", ",", 
      RowBox[{"ColorData", "[", 
       RowBox[{"97", ",", "2"}], "]"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<Normal\>\"", ",", "\"\<Triangle\>\"", ",", "\"\<Uniform\>\""}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Left", ",", "Top"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "2"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"2", "/", "3"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"100", ",", 
           RowBox[{"2", "/", "3"}]}], "}"}]}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{"\[Sqrt]", "2"}], "/", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"100", ",", 
           RowBox[{
            RowBox[{"\[Sqrt]", "2"}], "/", "2"}]}], "}"}]}], "}"}], "]"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"1", "/", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"100", ",", 
           RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}], "]"}]}], 
     "\[IndentingNewLine]", "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Where to push a free object (-1 to 1) to maximize torque\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.676466820390336*^9, 3.676466989524275*^9}, {
  3.676467176427374*^9, 3.676467178092044*^9}, {3.676467921880308*^9, 
  3.676467966912457*^9}, {3.676468003785376*^9, 3.6764681638781776`*^9}, {
  3.676468291519845*^9, 3.67646830329661*^9}, {3.6764683388165216`*^9, 
  3.676468372623979*^9}, {3.684533929234049*^9, 3.684533939348472*^9}, {
  3.684540376345602*^9, 3.6845403861440163`*^9}, {3.684540478831476*^9, 
  3.684540504167663*^9}, {3.684540558946384*^9, 3.684540561457901*^9}, {
  3.684540710649729*^9, 3.684540739068645*^9}, {3.684540801207048*^9, 
  3.684540810028236*^9}, {3.6845422568892612`*^9, 3.6845423290434504`*^9}, {
  3.6845429179330807`*^9, 3.684542953671657*^9}, {3.6845430966267433`*^9, 
  3.684543119304673*^9}, {3.684543323600518*^9, 3.684543327384514*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.008333333333333333], AbsoluteThickness[1.6], LineBox[CompressedData["

1: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
GHmoWeuP+ssyosLwf1XPWsI=
        "]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.008333333333333333], AbsoluteThickness[1.6], LineBox[CompressedData["

1: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

        "]]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
       0.008333333333333333], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJwt1QdUVHcWBnBMYll1d62rMWqEoDEn1ohJloCfRIzGLirqCXFdxMQoKBLX
iGRJNuiy6LpqiB6EE2MhlKigTAVGmBl6lQEp0qT3ofcZhmX++d45HA5l3vvf
+7v3e5aup5yOvmJhYZE+9mX+7jMralP1+QvIS57pMN+rA7///BM6vwz1/bCu
HcqFF1t3K2/Dbotv0l7ndv49FHMPjZ9wOl2P4FvmKxK70r0/vWKrR6z4/yg4
+pVfjnzYhrEfxn7zBMcWncpLWdjGz0tx8PB3M2qutWJy8X1P+8kKxO4w7Te9
0gpxu1uxyPKT3Zr3jxa843JV27dUhXqrjyreb2zmeRIQNCH2zT0HmxE69uni
+2qEWJS7ncpqQpt4ngaP79eEX7Zvgs0a85WEQZsD+vDoRj4/GccvPViRbNmI
pL6lY09IgdM1b6+qwAZMEedJQ3XADYlxfAOcxAPT4XwhcXDuuXrWm4Fdh21s
17bUoea8+YaZ6LHb4LvbpY7nzcbm9X4aj9xanDYfzzMHA3etXru0vpb9ycWj
zYpNYTE1sBBXHgpPll3SWtewnjyM21OeW3mzGpurzQ/QocSpcrphUjXr00G2
Ub93jk8VrmnNBeTjwaR/Lg0sfQlR7poCrNzX+bUmsxKinOICeDpVLfbOrmD9
z1G+84nL7MpyvGk+zsJCjPiU2lqbytiPQhz13/bF394tw5dfmK8ieFrP0f3q
Vsr+FGPkk82X+yNewHy3WVHFePWX4hPuAyXsVwkK5437ynZnCfrNt+srQfC3
17+PiC5m/16gFr1/mT63GOvEAJRix36VstK/iP0shaTHfsUlUyHE8S6W4YhD
RUGQTyH7W46R8reWhZieIyfbfJUj88M79971f85+V0C33eqcftZzzBYHrET8
N8vyL4cXsP+VsF97tkm5rgDidi4vMXHe2m3LS/PpUYUFa65tDPfOZz1V6Hht
jWPL/Hz6VOHMAo/DCUk61leF3EdRLR0eOnpVI+LCxYk739Cx3mqsnuPnHJ2V
R79qpJ2Nutfom8f6a1A73TlEZ5NHzxp6PsPvt6vB0Ts/B7nsekbfWqwSvrns
Ty0eNvw91v/TXHrX0juH/arDxmCnJtc9OfSvo382+1eHva4+OUfcszkP9TCK
echiP+txrqJyycrALM5HPdzEfGSxvw1wn+HXdz01k/PSgNNiXjLZ7wYMb1Lr
fMZnct8bYRTzk8H+N2Ic3lsxvCOD89TIeUqnRxMWO6pdbO6l06OJ85VOjyZY
Wnq9d8yURo8m3BLzlkaPZjy4rV/e6JpGj2ZUi/lLo0czAj6bOHnWs1R6tHAe
U+nRAvvVy347/HEq57MFMWI+U+jRCnl+0e5tqhR6tHJeU+jRiozxpnmudin0
aINRzG8yPdpQdj/w7gfaZHq0cZ6T6aFHzvGWshPbk+mh53wn00OP3vfXvx5W
kUSPdqjEvCfRox3TonMW3fBKokc77MT8J9GjAyUpke7tU5Lo0cF90NKjA6bw
6996RGrp0Yn5Yj+0rKcT+x032hds0dKnk/uiZX2d8Nr58F/1HRp6dXJ/NKy3
E/1at8sngzT060SO2CcN6+9Cwc/yO3aOGnp2IVzsl4b96EKYp02UZY+avl1Y
JfZNzf50YV/i1e7uUDW9u7h/avarGyl3Ppf856Ca/t2oEfuoZv+6MXWKbOjp
NDXnoRsRYj8T+T7qhnWY+4OqnxK5r904IvY1kf3twbKz+3eNTk3kvPRghdjf
BPa7Bwfr5teGBCRwfnoQKfY5gf3vgSrj162+kxM4Tz04Kfb7KT16sVzZMMnr
6lN69HLfn9KjF357f2jaOPcpPXpRJvZfRY9eFI57OyUrVEWPXuwReaCiRy8e
P+nYUmKjokcf8yGeHn34oXCx5uP0eHr04RuRF/H06MPku4UldYfi6dHH/Iin
Rx9W+si/Cx6Mo0c/vhJ5EkePflSMDsgdbsTRox8nRb7E0aMf93655hFnE0eP
fuZNHD36sdUo+7yhKJYeAzCI/ImlxwBUBav0ET6x9Bj7+zpzHsXSYwAuOZ9M
a7SKpccARm+b80lJjwEYBw0r/LOV9BiEpcgrJT0GEXT0zNTT55T0GIRO5JeS
HoMInOD4+MoSJT0GYSXyTEGPQXQ5fL87rUhBj7H7iXxT0GMIV/50YsMfAhT0
GEKkyDsFPYbg9mNgLewV9Bhi/inoMYT7qVsDDvTI6TGEiyIP5fQYxh+L9511
eCCnxzC2i3yU02MYNzOi0pvd5PQYhq3ISznzZhgKv0MeDovk9BiGVOSnjB4G
SP79way/VsjoYYBC5KmMHgZc1HpZa0Nk9DDgsMhXGT0MMETPjsn9TEYPA9JF
3sroYcT//Gac2b1ARg8j81dKDyOgnhlvXyWlhxGlIo+l9DBCl1R/zD9USg8j
0kQ+S+lhRMxMryar41J6jCBT5LWUHiPwdHRYMn61lB4jyBX5LaXHCF7d5h3w
1pCEHiPoEnkuoccI5rTv0H+tldDDBKXIdwk9THhHVR3c9l8JPUz4s8h7CT1M
mPji/IYLByT0MOEjkf8SepjwhvPbhtWLJfQYxXPxPpDQYxQvb4av0XfH0GOU
74cYeozCOfqR4pEmhh6jMIj3RQw9RuG38mjYiesx9LBY/7p4f8Tg/8X5UJM=

        "]]}}, {}}, InsetBox[
     TemplateBox[{"\"Normal\"","\"Triangle\"","\"Uniform\""},
      "PointLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}], "}"}]}], 
           ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
         "]"}]& )], Scaled[{0.99, 0.99}], ImageScaled[{1, 1}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"\[Sigma] of swarm\"", TraditionalForm], 
     FormBox["\"Max Torque\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->Medium,
   Method->{},
   PlotLabel->FormBox[
    "\"Max possible torque on  a free object (-1 to 1)\"", TraditionalForm],
   PlotRange->{{0, 2.}, {0, 0.9826794882812013}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.008333333333333333], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Line[CompressedData["
1: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
GHmoWeuP+ssyosLwf1XPWsI=
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.008333333333333333], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Line[CompressedData["
1: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

          "]]}, {
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[0.008333333333333333], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Line[CompressedData["
1:eJwt1QdUVHcWBnBMYll1d62rMWqEoDEn1ohJloCfRIzGLirqCXFdxMQoKBLX
iGRJNuiy6LpqiB6EE2MhlKigTAVGmBl6lQEp0qT3ofcZhmX++d45HA5l3vvf
+7v3e5aup5yOvmJhYZE+9mX+7jMralP1+QvIS57pMN+rA7///BM6vwz1/bCu
HcqFF1t3K2/Dbotv0l7ndv49FHMPjZ9wOl2P4FvmKxK70r0/vWKrR6z4/yg4
+pVfjnzYhrEfxn7zBMcWncpLWdjGz0tx8PB3M2qutWJy8X1P+8kKxO4w7Te9
0gpxu1uxyPKT3Zr3jxa843JV27dUhXqrjyreb2zmeRIQNCH2zT0HmxE69uni
+2qEWJS7ncpqQpt4ngaP79eEX7Zvgs0a85WEQZsD+vDoRj4/GccvPViRbNmI
pL6lY09IgdM1b6+qwAZMEedJQ3XADYlxfAOcxAPT4XwhcXDuuXrWm4Fdh21s
17bUoea8+YaZ6LHb4LvbpY7nzcbm9X4aj9xanDYfzzMHA3etXru0vpb9ycWj
zYpNYTE1sBBXHgpPll3SWtewnjyM21OeW3mzGpurzQ/QocSpcrphUjXr00G2
Ub93jk8VrmnNBeTjwaR/Lg0sfQlR7poCrNzX+bUmsxKinOICeDpVLfbOrmD9
z1G+84nL7MpyvGk+zsJCjPiU2lqbytiPQhz13/bF394tw5dfmK8ieFrP0f3q
Vsr+FGPkk82X+yNewHy3WVHFePWX4hPuAyXsVwkK5437ynZnCfrNt+srQfC3
17+PiC5m/16gFr1/mT63GOvEAJRix36VstK/iP0shaTHfsUlUyHE8S6W4YhD
RUGQTyH7W46R8reWhZieIyfbfJUj88M79971f85+V0C33eqcftZzzBYHrET8
N8vyL4cXsP+VsF97tkm5rgDidi4vMXHe2m3LS/PpUYUFa65tDPfOZz1V6Hht
jWPL/Hz6VOHMAo/DCUk61leF3EdRLR0eOnpVI+LCxYk739Cx3mqsnuPnHJ2V
R79qpJ2Nutfom8f6a1A73TlEZ5NHzxp6PsPvt6vB0Ts/B7nsekbfWqwSvrns
Ty0eNvw91v/TXHrX0juH/arDxmCnJtc9OfSvo382+1eHva4+OUfcszkP9TCK
echiP+txrqJyycrALM5HPdzEfGSxvw1wn+HXdz01k/PSgNNiXjLZ7wYMb1Lr
fMZnct8bYRTzk8H+N2Ic3lsxvCOD89TIeUqnRxMWO6pdbO6l06OJ85VOjyZY
Wnq9d8yURo8m3BLzlkaPZjy4rV/e6JpGj2ZUi/lLo0czAj6bOHnWs1R6tHAe
U+nRAvvVy347/HEq57MFMWI+U+jRCnl+0e5tqhR6tHJeU+jRiozxpnmudin0
aINRzG8yPdpQdj/w7gfaZHq0cZ6T6aFHzvGWshPbk+mh53wn00OP3vfXvx5W
kUSPdqjEvCfRox3TonMW3fBKokc77MT8J9GjAyUpke7tU5Lo0cF90NKjA6bw
6996RGrp0Yn5Yj+0rKcT+x032hds0dKnk/uiZX2d8Nr58F/1HRp6dXJ/NKy3
E/1at8sngzT060SO2CcN6+9Cwc/yO3aOGnp2IVzsl4b96EKYp02UZY+avl1Y
JfZNzf50YV/i1e7uUDW9u7h/avarGyl3Ppf856Ca/t2oEfuoZv+6MXWKbOjp
NDXnoRsRYj8T+T7qhnWY+4OqnxK5r904IvY1kf3twbKz+3eNTk3kvPRghdjf
BPa7Bwfr5teGBCRwfnoQKfY5gf3vgSrj162+kxM4Tz04Kfb7KT16sVzZMMnr
6lN69HLfn9KjF357f2jaOPcpPXpRJvZfRY9eFI57OyUrVEWPXuwReaCiRy8e
P+nYUmKjokcf8yGeHn34oXCx5uP0eHr04RuRF/H06MPku4UldYfi6dHH/Iin
Rx9W+si/Cx6Mo0c/vhJ5EkePflSMDsgdbsTRox8nRb7E0aMf93655hFnE0eP
fuZNHD36sdUo+7yhKJYeAzCI/ImlxwBUBav0ET6x9Bj7+zpzHsXSYwAuOZ9M
a7SKpccARm+b80lJjwEYBw0r/LOV9BiEpcgrJT0GEXT0zNTT55T0GIRO5JeS
HoMInOD4+MoSJT0GYSXyTEGPQXQ5fL87rUhBj7H7iXxT0GMIV/50YsMfAhT0
GEKkyDsFPYbg9mNgLewV9Bhi/inoMYT7qVsDDvTI6TGEiyIP5fQYxh+L9511
eCCnxzC2i3yU02MYNzOi0pvd5PQYhq3ISznzZhgKv0MeDovk9BiGVOSnjB4G
SP79way/VsjoYYBC5KmMHgZc1HpZa0Nk9DDgsMhXGT0MMETPjsn9TEYPA9JF
3sroYcT//Gac2b1ARg8j81dKDyOgnhlvXyWlhxGlIo+l9DBCl1R/zD9USg8j
0kQ+S+lhRMxMryar41J6jCBT5LWUHiPwdHRYMn61lB4jyBX5LaXHCF7d5h3w
1pCEHiPoEnkuoccI5rTv0H+tldDDBKXIdwk9THhHVR3c9l8JPUz4s8h7CT1M
mPji/IYLByT0MOEjkf8SepjwhvPbhtWLJfQYxXPxPpDQYxQvb4av0XfH0GOU
74cYeozCOfqR4pEmhh6jMIj3RQw9RuG38mjYiesx9LBY/7p4f8Tg/8X5UJM=

          "]]}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
      PlotRange -> {{0, 2.}, {0, 0.9826794882812013}}, DisplayFunction -> 
      Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
      AxesLabel -> {"\[Sigma] of swarm", "Max Torque"}, AxesOrigin -> {0, 0}, 
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, PlotLabel -> 
      "Max possible torque on  a free object (-1 to 1)", 
      PlotRange -> {{0, 2.}, {0, 0.9826794882812013}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      PointLegend[{
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {"Normal", "Triangle", "Uniform"}, 
       Joined -> {{True, True, True}}, LabelStyle -> {}, LegendLayout -> 
       "Column", 
       LegendMarkers -> {{False, Automatic}, {False, Automatic}, {
         False, Automatic}}]], {Right, Top}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.68453389843923*^9, 3.6845339398526583`*^9, 3.684540265088787*^9, 
   3.684540386692976*^9, {3.684540505027707*^9, 3.6845405206929827`*^9}, 
   3.684540562129772*^9, 3.68454073991187*^9, 3.6845408107933702`*^9, 
   3.684540981636374*^9, 3.6845410168946857`*^9, {3.684541272726653*^9, 
   3.684541275069581*^9}, {3.6845413149953117`*^9, 3.684541330390424*^9}, 
   3.684541564380101*^9, {3.6845415972458344`*^9, 3.684541611404339*^9}, {
   3.68454164531647*^9, 3.684541659352977*^9}, 3.6845416903810062`*^9, 
   3.6845417731341143`*^9, 3.684541815751561*^9, {3.684541858016691*^9, 
   3.684541884938489*^9}, 3.684542038494244*^9, {3.684542261702969*^9, 
   3.684542329744802*^9}, {3.684542837108465*^9, 3.684542857215396*^9}, 
   3.684542954771956*^9, 3.684543120000651*^9, 3.684543327850935*^9, 
   3.684543551271291*^9, 3.684634500796878*^9, 3.684635725419922*^9}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, GraphicsComplexBox[CompressedData["
1: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
ltTofbp4DfqC+XWjerv3GvSFZ39HunipNOgLa88qrkeO1qIvmMTs7HRrtRZ9
Ie0IL6DstBZ9YWnkpnea11r0BfWuZjtbqRZ94XrwmhOetjr0hbkbv7bu9dGh
LwjWeC+8cVKHvpCwovRe6Qsd+gJ4zu+t5v/f+bHpjfmMQaH6/PglMDny9yZ9
fnSaG/nay5uL+dHCr5Px9nf6/Oj5LnxOzOQ2zI/zDlWfuHVHf97sbxVckts+
j6j86LNmn1lDnP68OXOhdpnWkIP5seDQo0SLP/T5sdF6Ss0kpj4/njfOtFyy
Qp8fLxpU+wd/0OfHtOsNN05M1edHucPythv3mJgfNx+/PebNUCbmxyVx4aF1
eJ6aBw3HzmWoOzEwP3offikfENaM+dFjjcPk31qaMD+KnF0jF/s2YX6cPf1Q
9taiRsyP8qvWHY9Pb8T8eHf2E/eUBw2YH8u3fT2eY9OA+dFiSXXRt/h6zI+V
nt96q0zqMT++dGvz6r+nDvOjdO4W/wKzOsyPViE1lulJdZgfm7rH1pwZU4/5
cadTr4u7s+oxP3rwdq9YObcB82POIXFfqGzA/Lj11Ppi64BGzI/vuu2INRY3
Yn58Opo7u+VAE+bHX6uduhX1bMb8OCtuZ+79S82YH4ec/OXIOXv9ebPB7Reu
4Zn682aBKkrj667Pj8dfjnk+vVyfHxVMzh6b9SzMj4+8gxxMBCzMj9qjLnxO
JBvzY9ad3anF3VowPx62023NuNCC+bF85f3h5205mB/vX6ptjnjMwfzISgu9
6jezFfNjauavq1w+tmJ+XDbDyWLEmjbMj5yF9p9NuW2YHz+deJ3YtoeL+XEB
965HqSkP8+PzKX49Hp3nYX48cPdxYIEZH/Nj+YBRM1+s4GN+bLrTdVh6Eh/z
41RBnNE1Jh/zo/dV29ozYwSYHzVnOVlH/hBgfuwlX3t5d5YA82PcxFN7g4yE
mB/DFie27wch5kf+jqBJC04LMT+mWMja94cQ86NLY6pknKUI8+Osur0V1u15
g8qPbk5h9/rcFWF+nHwyrn3/iDA/fig5FSyfLMb8eNj82vyWA2LMj5OPPLOv
fifG/Li+s1X3op4SzI9Ds4uYL70lmB9rhqS9vX9JgvlxbzUv+XqTBPPj6E0p
B87ZSzE/Wp+qXx0VKsX8OBe+zQjPlGJ+XFDhZ7nZQIb58d0Sfvv+lGF+DIWS
qoWxMsyP40YdzZpeLsP8+Ljv9QsTBskxP36auXy3zXo55scqpfmyfqlyzI+B
64IcTQRyzI8Gm5f3UzoqMD8WDfsi4UQqMD/mu9qW1OQqMD+uCOlzr7ibEvPj
pj39Y7KXKDE/hll03pxxQYn5cci4/XP+qVdifvxbJh5x3laF+XHPOd/Ox9rn
NZUf06w3NEU8VmF+vLC9LHuLRoX50Xt0zTW/mWrMj2ZPufs9TqgxP771DFjj
8lGN+dHOvcNUh4EazI9uA0f9MmKNBvOjjU+Uuv8NDebHqNo9laZcDebH4xZX
n6gctJgfu+ztEN+G5zcCsF4p2F6bo8X8CBNXLy011WF+NA03cXjtodOfN//5
qf39qMP8eL7EiJvy7b/zl//OX/47f/nv/OW/85f/7/yFmhPU/KRqan5SNTU/
qZqan1RNzU+qpuYnVVPzk6qp+UnVOD9JTc1PqqbmJ1VT85OqqflJ1dT8pGpq
flI1NT9xTpL5SdX0Z2p+UjU1P39en76m5ufP69XX1Pz8ef36/xNT8/Pnfuhr
an7+3B99Tc3Pn/slxJqanz/3T19T5y9UTZ2/UDV1/vJzf/XnVtT5y8/91tfU
+cvP/dfX1PnLzxzENB5iGg8xjYeYxkNM4yGm8RDTeEhoPCQ0HhIaDwmNh4TG
Q0LjIaXxkNJ4SGk8pDQeUhoPKY2HjMZDRuMho/GQ0XjIaDxkNB5yGg85jYec
xkNO4yGn8ZDTeMhpPBQ0HgoaDwWNh4LGQ0HjoaDxUNJ4KGk8lDQe+pr6f+3P
PJQ0HioaDxWNh4rGQ0XjoaLxUNF4qGk81DQeahoPNY2HmsZDTeOhpvHQ0Hho
aDw0NB4aGg8NjYeGxkNL46Gl8dDSeGhpPLQ0HloaDx2Nh47GQ0fjoaPx0NF4
6Gg8KP9on6f9rk23/1XvJdNGdQt5bqXE+sVxo9k3woVY/w+o/Ucb
      
      "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, 
        {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[None],
          GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1NVSEAAQBVDAVsBuUcHA7gTFRlAs7MAg7O7u7u52/BO7uxtU7E6sw/hw
9r7uztzZ8OQJieODAgICAhln3OM+D3jIIx7zhHQyeMoznpPJC17yite84S3v
eM8HPvKJz3zhK9/4zg9+ksUvfvOHv9lLWS6QIHKQk1zkJg95yUd+ChBMCKEU
pBCFKUJRilGcEpSkFKUpQ1nKEUZ5KlCRcCKoRGWqUJVIqlGdGtSkFrWpQ13q
UZ8GNKQRjWlCU5rRnCiiaUFLYmhFa9rQlna0pwOxdCSOeDrRmQS60JVudKcH
ifSkF73pQ1/60Z8BDGQQSQxmCEMZRjIppJLGcEYwklGMZgxjGUd2qSYwkUlM
ZgpTmcZ0ZjCTWcxmDnOZx3wWsJBFLGYJS1nGclawklWsZg1rWcd6NrCRTWxm
C1vZxnZ2sJNd7GYPe9nHfg5wkEMc5kj2zTp5NPt+mUYqKSQzjKEMYTBJDGIg
A+hPP/rSh970oieJ9KA73ehKFxLoTCfiiaMjsXSgPe1oSxta04oYWtKCaKJo
TjOa0oTGNKIhDahPPepSh9rUoiY1qE41IqlKFSpTiQjCqUgFyhNGOcpShtKU
oiQlKE4xilKEwhSiIKGEEEwB8pOPvOQhN7nISQ6CCAz8/8j+ij/85hdZ/OQH
3/nGV77wmU985APvecdb3vCaV7zkBZk85xlPySCdJzzmEQ95wH3ucZc73OYW
N7nBda5xlStc5hIXucB5znGWM5zmFCc5wXGO8Q/iDaQB
           
           "]]]}, {}, {}, {}, {}, {}, {}}, {{}, {}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.008333333333333333], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJwV01c7FgAAhuGPor2ntBRpKElDU4OGNGgXKU0qGmjRUtIgLW2kqUGivaQ/
1u3gvp7D9+iNyM5PzwsKBAL/6GgwnehMCKF0oSvd6E4PetKL3vShL/3ozwAG
MojBDGEoYQwjnOGMYCSjGE0EYxhLJFGMI5rxTGAik4hhMlOIZSpxTCOe6cxg
JrNIYDZzmMs85rOARBayiMUsIYlklrKM5awghZWksorVrGEtaaSzjvVsYCOb
2MwWtrKNDDLZThY72Ek2u9jNHvayj/3kkMsBDnKIPPI5zBGOcowCCiniOCc4
ySlOU0wJZzjLOc5zgVIucokyLlPOFa5yjetUUMkNqrjJLW5zh7tUc4/7POAh
j3jME2qopY6n1POM57zgJa94TQNveMs73tNIEx9o5iMttPKJz3zhK9/4zg9+
8ovf/KGNv7R3bDvBfzPvTQA=
          "]]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
         0.008333333333333333], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJwNz9dCSAEAANBbiDSMQkUloRSyykoDJQotDavJIz9Vf2JUymopEVFCWRkt
1Xk4H3BSmu9X3gsJgqCNBzzkEY/poJMuntBND095xnNe8JJe+uhngEFeMcQw
rxnhDW8Z5R3vGeMDHxlngk9M8pkvfGWKab7xnR/85Bcz/OYPf/nHLHPMs8Ai
/1limUA8hFBWsZo1hLGWdYSznggiiSKaDWxkE5uJIZYtbGUbccSTwHZ2kEgS
yewkhV2ksps97CWNdPaRQSb7OcBBsjjEYY5wlGNkk8NxTnCSU5wmlzPkkU8B
hZzlHOcpopgLlHCRS5RSxmWucJVyKqikimquUUMtddRznRvc5Ba3aaCRJppp
oZU73KU9NAhWAN2dTMU=
          "]]}, 
        {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
         0.008333333333333333], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJwVz0NyRAEARdGf7CRbyhIyijvo2LZt27ZtczU5GZyqO3iTFxUTik6OCIIg
TKyII54EEknifxAihVTSSCdMBplkkU0OueSRTwGFFFFMCaWUUU4FlVRRTQ21
1FFPA4000UwLrbTRTgeddNFND7300c8AgwwxzAijjDHOBJNMMc0Ms8wxzwKL
LLHMCqussc4Gm2yxzQ677LHPAYccccwJp5xxzgWXXHHNDbfccc8DjzzxzAuv
vPHOB5988c0Pv/+fIoPgD1y9S5Y=
          "]]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
         0.008333333333333333], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJwVzldbiAEAQOGvSGZlhpQys7eMhlH2DGWPkq2ySQjZe1Nk/Rk/QjYVsldl
9Lp4n+dcnoScgsz8kCAIHvFYVPKEpzzjOS94ySte84YqqqnhLe94Ty0f+Mgn
PvOFr3zjOz/4yS/qqKeB3/zhL//+T4UGQQihNKEpYTQjnOa0oCWtaE0bIogk
ira0oz0d6EgnoulMF7oSQzdiiaM78STQg570ojd96Esi/ejPAAYyiMEMYSjD
GM4IRjKK0SQxhrGMYzzJpJBKGhOYyCQmk04GU5jKNKYzg5nMYjZzmMs85pPJ
AhayiCyyWcwSlrKM5axgJatYzRpyyGUteaxjPRvYyCY2s4Wt5FNAIdvYzg52
sovd7GEv+yhiP8Uc4CCHKOEwRzhKKcc4zglOcorTnOEs5zjPBS5yictc4SrX
uM4NbnKLMsq5zR0quMs97vOAhzQCzChZhA==
          "]]}}}], {}}, InsetBox[
     TemplateBox[{"\"Normal\"","\"Triangle\"","\"Uniform\""},
      "PointLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                 "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
         "]"}]& )], Scaled[{0.01, 0.99}], ImageScaled[{0, 1}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"\[Sigma] of swarm\"", TraditionalForm], 
     FormBox["\"Optimal push location (\[Mu])\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Epilog->{
     Dashing[{Small, Small}], 
     LineBox[
      NCache[{{0, 
         Rational[2, 3]}, {100, 
         Rational[2, 3]}}, {{0, 0.6666666666666666}, {
        100, 0.6666666666666666}}]], 
     LineBox[
      NCache[{{0, 2^Rational[-1, 2]}, {100, 2^Rational[-1, 2]}}, {{
        0, 0.7071067811865475}, {100, 0.7071067811865475}}]], 
     LineBox[
      NCache[{{0, 
         Rational[1, 2]}, {100, 
         Rational[1, 2]}}, {{0, 0.5}, {100, 0.5}}]]},
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->Medium,
   Method->{},
   PlotLabel->FormBox[
    "\"Where to push a free object (-1 to 1) to maximize torque\"", 
     TraditionalForm],
   PlotRange->{{0, 2.}, {0, 2}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, 
      GraphicsComplex[CompressedData["
1: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
ltTofbp4DfqC+XWjerv3GvSFZ39HunipNOgLa88qrkeO1qIvmMTs7HRrtRZ9
Ie0IL6DstBZ9YWnkpnea11r0BfWuZjtbqRZ94XrwmhOetjr0hbkbv7bu9dGh
LwjWeC+8cVKHvpCwovRe6Qsd+gJ4zu+t5v/f+bHpjfmMQaH6/PglMDny9yZ9
fnSaG/nay5uL+dHCr5Px9nf6/Oj5LnxOzOQ2zI/zDlWfuHVHf97sbxVckts+
j6j86LNmn1lDnP68OXOhdpnWkIP5seDQo0SLP/T5sdF6Ss0kpj4/njfOtFyy
Qp8fLxpU+wd/0OfHtOsNN05M1edHucPythv3mJgfNx+/PebNUCbmxyVx4aF1
eJ6aBw3HzmWoOzEwP3offikfENaM+dFjjcPk31qaMD+KnF0jF/s2YX6cPf1Q
9taiRsyP8qvWHY9Pb8T8eHf2E/eUBw2YH8u3fT2eY9OA+dFiSXXRt/h6zI+V
nt96q0zqMT++dGvz6r+nDvOjdO4W/wKzOsyPViE1lulJdZgfm7rH1pwZU4/5
cadTr4u7s+oxP3rwdq9YObcB82POIXFfqGzA/Lj11Ppi64BGzI/vuu2INRY3
Yn58Opo7u+VAE+bHX6uduhX1bMb8OCtuZ+79S82YH4ec/OXIOXv9ebPB7Reu
4Zn682aBKkrj667Pj8dfjnk+vVyfHxVMzh6b9SzMj4+8gxxMBCzMj9qjLnxO
JBvzY9ad3anF3VowPx62023NuNCC+bF85f3h5205mB/vX6ptjnjMwfzISgu9
6jezFfNjauavq1w+tmJ+XDbDyWLEmjbMj5yF9p9NuW2YHz+deJ3YtoeL+XEB
965HqSkP8+PzKX49Hp3nYX48cPdxYIEZH/Nj+YBRM1+s4GN+bLrTdVh6Eh/z
41RBnNE1Jh/zo/dV29ozYwSYHzVnOVlH/hBgfuwlX3t5d5YA82PcxFN7g4yE
mB/DFie27wch5kf+jqBJC04LMT+mWMja94cQ86NLY6pknKUI8+Osur0V1u15
g8qPbk5h9/rcFWF+nHwyrn3/iDA/fig5FSyfLMb8eNj82vyWA2LMj5OPPLOv
fifG/Li+s1X3op4SzI9Ds4uYL70lmB9rhqS9vX9JgvlxbzUv+XqTBPPj6E0p
B87ZSzE/Wp+qXx0VKsX8OBe+zQjPlGJ+XFDhZ7nZQIb58d0Sfvv+lGF+DIWS
qoWxMsyP40YdzZpeLsP8+Ljv9QsTBskxP36auXy3zXo55scqpfmyfqlyzI+B
64IcTQRyzI8Gm5f3UzoqMD8WDfsi4UQqMD/mu9qW1OQqMD+uCOlzr7ibEvPj
pj39Y7KXKDE/hll03pxxQYn5cci4/XP+qVdifvxbJh5x3laF+XHPOd/Ox9rn
NZUf06w3NEU8VmF+vLC9LHuLRoX50Xt0zTW/mWrMj2ZPufs9TqgxP771DFjj
8lGN+dHOvcNUh4EazI9uA0f9MmKNBvOjjU+Uuv8NDebHqNo9laZcDebH4xZX
n6gctJgfu+ztEN+G5zcCsF4p2F6bo8X8CBNXLy011WF+NA03cXjtodOfN//5
qf39qMP8eL7EiJvy7b/zl//OX/47f/nv/OW/85f/7/yFmhPU/KRqan5SNTU/
qZqan1RNzU+qpuYnVVPzk6qp+UnVOD9JTc1PqqbmJ1VT85OqqflJ1dT8pGpq
flI1NT9xTpL5SdX0Z2p+UjU1P39en76m5ufP69XX1Pz8ef36/xNT8/Pnfuhr
an7+3B99Tc3Pn/slxJqanz/3T19T5y9UTZ2/UDV1/vJzf/XnVtT5y8/91tfU
+cvP/dfX1PnLzxzENB5iGg8xjYeYxkNM4yGm8RDTeEhoPCQ0HhIaDwmNh4TG
Q0LjIaXxkNJ4SGk8pDQeUhoPKY2HjMZDRuMho/GQ0XjIaDxkNB5yGg85jYec
xkNO4yGn8ZDTeMhpPBQ0HgoaDwWNh4LGQ0HjoaDxUNJ4KGk8lDQe+pr6f+3P
PJQ0HioaDxWNh4rGQ0XjoaLxUNF4qGk81DQeahoPNY2HmsZDTeOhpvHQ0Hho
aDw0NB4aGg8NjYeGxkNL46Gl8dDSeGhpPLQ0HloaDx2Nh47GQ0fjoaPx0NF4
6Gg8KP9on6f9rk23/1XvJdNGdQt5bqXE+sVxo9k3woVY/w+o/Ucb
       
       "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {
          EdgeForm[], 
          Directive[
           RGBColor[0.880722, 0.611041, 0.142051], 
           Opacity[0.2]], 
          GraphicsGroup[{
            Polygon[CompressedData["
1:eJwl1NVSEAAQBVDAVsBuUcHA7gTFRlAs7MAg7O7u7u52/BO7uxtU7E6sw/hw
9r7uztzZ8OQJieODAgICAhln3OM+D3jIIx7zhHQyeMoznpPJC17yite84S3v
eM8HPvKJz3zhK9/4zg9+ksUvfvOHv9lLWS6QIHKQk1zkJg95yUd+ChBMCKEU
pBCFKUJRilGcEpSkFKUpQ1nKEUZ5KlCRcCKoRGWqUJVIqlGdGtSkFrWpQ13q
UZ8GNKQRjWlCU5rRnCiiaUFLYmhFa9rQlna0pwOxdCSOeDrRmQS60JVudKcH
ifSkF73pQ1/60Z8BDGQQSQxmCEMZRjIppJLGcEYwklGMZgxjGUd2qSYwkUlM
ZgpTmcZ0ZjCTWcxmDnOZx3wWsJBFLGYJS1nGclawklWsZg1rWcd6NrCRTWxm
C1vZxnZ2sJNd7GYPe9nHfg5wkEMc5kj2zTp5NPt+mUYqKSQzjKEMYTBJDGIg
A+hPP/rSh970oieJ9KA73ehKFxLoTCfiiaMjsXSgPe1oSxta04oYWtKCaKJo
TjOa0oTGNKIhDahPPepSh9rUoiY1qE41IqlKFSpTiQjCqUgFyhNGOcpShtKU
oiQlKE4xilKEwhSiIKGEEEwB8pOPvOQhN7nISQ6CCAz8/8j+ij/85hdZ/OQH
3/nGV77wmU985APvecdb3vCaV7zkBZk85xlPySCdJzzmEQ95wH3ucZc73OYW
N7nBda5xlStc5hIXucB5znGWM5zmFCc5wXGO8Q/iDaQB
             
             "]]}]}, {}, {}, {}, {}, {}, {}}, {{}, {}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1:eJwV01c7FgAAhuGPor2ntBRpKElDU4OGNGgXKU0qGmjRUtIgLW2kqUGivaQ/
1u3gvp7D9+iNyM5PzwsKBAL/6GgwnehMCKF0oSvd6E4PetKL3vShL/3ozwAG
MojBDGEoYQwjnOGMYCSjGE0EYxhLJFGMI5rxTGAik4hhMlOIZSpxTCOe6cxg
JrNIYDZzmMs85rOARBayiMUsIYlklrKM5awghZWksorVrGEtaaSzjvVsYCOb
2MwWtrKNDDLZThY72Ek2u9jNHvayj/3kkMsBDnKIPPI5zBGOcowCCiniOCc4
ySlOU0wJZzjLOc5zgVIucokyLlPOFa5yjetUUMkNqrjJLW5zh7tUc4/7POAh
j3jME2qopY6n1POM57zgJa94TQNveMs73tNIEx9o5iMttPKJz3zhK9/4zg9+
8ovf/KGNv7R3bDvBfzPvTQA=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1:eJwNz9dCSAEAANBbiDSMQkUloRSyykoDJQotDavJIz9Vf2JUymopEVFCWRkt
1Xk4H3BSmu9X3gsJgqCNBzzkEY/poJMuntBND095xnNe8JJe+uhngEFeMcQw
rxnhDW8Z5R3vGeMDHxlngk9M8pkvfGWKab7xnR/85Bcz/OYPf/nHLHPMs8Ai
/1limUA8hFBWsZo1hLGWdYSznggiiSKaDWxkE5uJIZYtbGUbccSTwHZ2kEgS
yewkhV2ksps97CWNdPaRQSb7OcBBsjjEYY5wlGNkk8NxTnCSU5wmlzPkkU8B
hZzlHOcpopgLlHCRS5RSxmWucJVyKqikimquUUMtddRznRvc5Ba3aaCRJppp
oZU73KU9NAhWAN2dTMU=
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1:eJwVz0NyRAEARdGf7CRbyhIyijvo2LZt27ZtczU5GZyqO3iTFxUTik6OCIIg
TKyII54EEknifxAihVTSSCdMBplkkU0OueSRTwGFFFFMCaWUUU4FlVRRTQ21
1FFPA4000UwLrbTRTgeddNFND7300c8AgwwxzAijjDHOBJNMMc0Ms8wxzwKL
LLHMCqussc4Gm2yxzQ677LHPAYccccwJp5xxzgWXXHHNDbfccc8DjzzxzAuv
vPHOB5988c0Pv/+fIoPgD1y9S5Y=
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           AbsoluteThickness[1.6], 
           RGBColor[0.880722, 0.611041, 0.142051]], 
          Line[CompressedData["
1:eJwVzldbiAEAQOGvSGZlhpQys7eMhlH2DGWPkq2ySQjZe1Nk/Rk/QjYVsldl
9Lp4n+dcnoScgsz8kCAIHvFYVPKEpzzjOS94ySte84YqqqnhLe94Ty0f+Mgn
PvOFr3zjOz/4yS/qqKeB3/zhL//+T4UGQQihNKEpYTQjnOa0oCWtaE0bIogk
ira0oz0d6EgnoulMF7oSQzdiiaM78STQg570ojd96Esi/ejPAAYyiMEMYSjD
GM4IRjKK0SQxhrGMYzzJpJBKGhOYyCQmk04GU5jKNKYzg5nMYjZzmMs85pPJ
AhayiCyyWcwSlrKM5axgJatYzRpyyGUteaxjPRvYyCY2s4Wt5FNAIdvYzg52
sovd7GEv+yhiP8Uc4CCHKOEwRzhKKcc4zglOcorTnOEs5zjPBS5yictc4SrX
uM4NbnKLMsq5zR0quMs97vOAhzQCzChZhA==
           "]]}}}], {}}, {
     DisplayFunction -> Identity, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
      PlotRange -> {{0, 2.}, {0, 2}}, DisplayFunction -> Identity, 
      AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
      AxesLabel -> {"\[Sigma] of swarm", "Optimal push location (\[Mu])"}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, Epilog -> {
        Dashing[{Small, Small}], 
        Line[{{0, 
           Rational[2, 3]}, {100, 
           Rational[2, 3]}}], 
        Line[{{0, 2^Rational[-1, 2]}, {100, 2^Rational[-1, 2]}}], 
        Line[{{0, 
           Rational[1, 2]}, {100, 
           Rational[1, 2]}}]}, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], Method -> {}, PlotLabel -> 
      "Where to push a free object (-1 to 1) to maximize torque", 
      PlotRange -> {{0, 2.}, {0, 2}}, PlotRangeClipping -> True, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      PointLegend[{
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Directive[
         PointSize[0.008333333333333333], 
         AbsoluteThickness[1.6], 
         RGBColor[0.880722, 0.611041, 0.142051]]}, {
       "Normal", "Triangle", "Uniform"}, Joined -> {{True, True, True, True}},
        LabelStyle -> {}, LegendLayout -> "Column", 
       LegendMarkers -> {{False, Automatic}, {False, Automatic}, {
         False, Automatic}, {False, Automatic}}]], {Left, Top}, Identity]]& ],
  
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.68453389843923*^9, 3.6845339398526583`*^9, 3.684540265088787*^9, 
   3.684540386692976*^9, {3.684540505027707*^9, 3.6845405206929827`*^9}, 
   3.684540562129772*^9, 3.68454073991187*^9, 3.6845408107933702`*^9, 
   3.684540981636374*^9, 3.6845410168946857`*^9, {3.684541272726653*^9, 
   3.684541275069581*^9}, {3.6845413149953117`*^9, 3.684541330390424*^9}, 
   3.684541564380101*^9, {3.6845415972458344`*^9, 3.684541611404339*^9}, {
   3.68454164531647*^9, 3.684541659352977*^9}, 3.6845416903810062`*^9, 
   3.6845417731341143`*^9, 3.684541815751561*^9, {3.684541858016691*^9, 
   3.684541884938489*^9}, 3.684542038494244*^9, {3.684542261702969*^9, 
   3.684542329744802*^9}, {3.684542837108465*^9, 3.684542857215396*^9}, 
   3.684542954771956*^9, 3.684543120000651*^9, 3.684543327850935*^9, 
   3.684543551271291*^9, 3.684634500796878*^9, 3.684635725584972*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sigs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "1.1", ",", "1.2", ",", "1.3", ",", "1.4", ",", "1.5", ",", 
      "1.6", ",", "2"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"TODO", ":", " ", 
    RowBox[{
    "place", " ", "legend", " ", "inside", " ", "the", " ", "plot"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"TorquePivotTriFree", "[", 
       RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "sigs"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", 
     RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "sigs"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Mu] (pushing location)\>\"", ",", "\"\<Torque\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Triangular distribution\>\""}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "]"}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.683656192718853*^9, 3.68365650959415*^9}, {
   3.684533201990088*^9, 3.684533227629901*^9}, 3.6845336018509903`*^9, {
   3.684538398449457*^9, 3.684538398934102*^9}, {3.684538872647613*^9, 
   3.6845388887736807`*^9}, 3.684539050089514*^9, {3.6845392360343122`*^9, 
   3.68453924661322*^9}, {3.684539278578122*^9, 3.684539281301207*^9}, {
   3.684539347834256*^9, 3.684539370928897*^9}, {3.684539413266988*^9, 
   3.6845394260116*^9}, {3.684541137633313*^9, 3.684541223576767*^9}, {
   3.6845419473452797`*^9, 3.6845420170348797`*^9}, {3.684542119211987*^9, 
   3.684542121724435*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
YQ==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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

        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
mAJ/E1dfhliiwH+k30r48hR4Pd6UHXkRBdXnb/IdeDYFrmX5/s7wwl/P8/3L
cNMUYJ5M6A3wwfeD8gnpg1Pg0oKhikYACg7sGKBsoEyDCL08ZmgYCgyblZqr
d08DoSREa/UGCpwCY297qkyDY2y+T22iUZDTrcbRe3Ea8ES9eN91FwVYdMLb
e/7TIE6+VvtnAgp6lMcjdOOmgYXi+VxGEgr47ycTK6umwV0v+8qH6Si4debn
8m3eGeAuYbWrNRcF+SSdFxoSM+DsBNv9HQUoqKNl+vw+MgOWLx0xPV2EgjWq
wYKd4wzY9fqMh2MpCoRgNl0weAbcVDnw+EQ5ni+3JY+PiTPAJiO5aysdBVea
8qZVsBnAb/l37XwlCmIDVosZX2dA58ml971PUVAkaeyUOzkDXp0PMNB4joKG
riKJc0QGULUmeke/QMFQFHGUR4AB4CZOmWcvUUBUNst9K80ANJ0tDo1VKNgx
WnohUJMBIloyqW+qUaCWzLbroBkD5HpK8D56hQKz45b9o64MELkma3WxBgVX
F+iZGeEMcAsc6iVDFCTkbLQ6k8oAUqSKsDTcZUa2QhvLGKCZV0aZG0NBE/FZ
V00dAwwcEZ26iHu8nDvFu5sBOk6S7zzCzW578azkLANs5XNje4M7IdKKc5Y0
C/67LwKRvqjxRu5Z8N99DVgcUbykqLIev5f+Y/DRxfU4u5l6j2/Vuv23pH49
yfvz3+tz5hS548/O/Ys3fWo71po2/y9+5YPSnrv8i//8uOUY36V3f/75zpNn
BRsMVv6ZeK9N9w3b2j+PTETwHjJdW19fU+Hb44L1OHSLAVaf1+P0tOEcvuX1
eFnuSvVRVua/+JPyTe1XKExQbHi2qAF3QdVeRpYgEyhYVTa8wJ379gjHx11M
AO4Lz2fhzv58RvSvNBM0le0/5I87s8dRVVKJCXosbiXo4E4fDT5jpsEEjgZt
fFy4U+aSXG7qM4Gvckl9LX5+SavFNypMmGDDl6eFLv87X47XmYM2TLDlU8J7
Ltyxmzuf8TgxwaMfg9JZeD3c3jHzSd0bf75anW97cEftY51wCWKCgzsu9WTj
9RNxaBtLehQTKJX0KG3GHaSnpfD7ARNUHLQU/ozXn7+J5QnxfCaQji+o2IHb
x9bz8hkaE+yca6u3xevV41pmalk9E3jdNr7yGq9v19AK+vcWJmiVmtw2+Azv
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
biRc5Au2sG6l8+nWtsvr/u//Cf75/wAZFOJm
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
9/++r4H/AQz2/Hw=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxF2Xk8VN/7AHDcmSHFKBV9qIRKSGUrkee2F1KpJCFFCCVFIjuJFlFSkbIO
Zi5aSFGdW4ikTbJl35cxY/vIln738/r24695vV/Pueeee+Z5nnter7vshIvJ
SSEBAYEbggIC//2qwcKeP3+YJDdG6jzufwkddFwZOjbOJA/5rb26qvQS8rqz
YcXQv0zyhl9yrvV8b1Tca36io5dJZvdZTuameyPre49qy6qY5BWdw68Eqn1Q
5IDSx/tZTFIiXbPk8DJ/NJykS2gcY5JRXx6oSqYGojyR42fs34iT4Tk+HoYL
QpHfp8ret8fFSBY3yig+8RbqTlkktV52DhmgX/i71/w+Um7cNYtZL0omhsCp
JRLxKFkyabgmcBYZILbt+JyUJFRwtPQGAhFyQmnf6Y8vWOhrsmT/jo0iZGPY
k2PGRSzU0Gdh8llThCx1ilL68I2FRv34C+tXiZCbzJUZrB4WUkueHz8uKUJK
XUhznJBJRTFcq6daXcKkhLFXuohPKjrrM1TJiRAmbRNrAg03pCHf93o6GteE
Sa2dEgaZW9PQNWZIbN5lYVIufbmy8N40xEqQtv7gJUzmGW74HXMyDf0s2tTd
YStMxsWLn9p9Kw3tEA+dWKYjTLqvnqOU052GZB/Jyt1rZpDvR7KK7SLSUcb9
ADGdOgbZGrOic0tMOtKP6hivqWSQad3lnyST09GxsMc/ZMoYZCIsfHU7Nx0l
nt927dFzBsmuNuSINqQjpV3OI6xrDPLxottGH5TYSHMgvyxHi0HmEVFHV+ew
UVGvXJ7pWgZZKHChJvQ1G5l2XE79pcwgNxfUXqwqYiOPn3sDdeQY5D9GFzv3
VLJRXlHr+teiDPLaRWHJhyNshMfMTipspJNSd6NlSE0OMtx61PN7GJ0cRl7P
MlkcpHzO49vXYDpZr5bc2UJwkGjC7VWf/ejki66ll0SfcVDJ1MeaEnc6GTW1
/Y4G4qAdeXob3xynk0MT5Y7cSg7C1y2ZSNOhk6oh8sDHCLTUeuMBliadBMMx
24OzCDQVbspJWkMn3a0FgRAn0Gtu+NGHy+lkgl59m8YiAm1M+5N/ey6dlKAb
lCWsJpDW0mZv324aKbZUOZN3gEDzjX9XXGqjkf43Hkp6mRFo2HvRas9GGmmw
XyHwlwWBntburz//g0ZujLmzt+QkgdZGv9t06i2NjPZK8icvEIhZ1HDH7hWN
5NXJYT+9CMQbGu+zyaWRG6SW6HT6Eihjv8ZDqwwaOVDxJaoihEDKYslTB+7T
SJk30Y2C0QSapUea7o+ikYqr7pen3SdQl2NdpvFNGvmKd1VhcxyBUkvmH9t9
mUY2Grhlb08mkGLwZaTvSiPnRLTZxT0hEO1ZgpSeM428K921+HM2gVqbX7vo
2FPr9zWo5+cSKBFGlmpa0sgziTYGjDfU/k3Y+a/aTSOro08/9flAIO4P++S8
rTSyvdzb36WMQC8eO5QY6tNI9S9Be/d+IdA+O0eJMxo0UiOB+7K6gkCym500
/6ymkZu2imwMrKLWK+NsFqFEjde/GbyolkD+307HP11MI4OrTLbMbSSQEXGm
cKs0jdTZsjvGtZlA0ldcuirm0cigh0tCUCuBnui5rv0lTLmwpkWhi0AtqW6k
7iBGdg/mqYv1Eygz0L2tjIuRkwvLOdUDBPKyvCBi1UnZMsswcohAkpIX9/nX
YaRL35oPH0YI1NR30W1uFUZqC924tnuUQESJ573EbxgZXa6g/3yMQNt8LzUV
vsfIMv1zm0wnCSRxxJtm+hYjf7Faz4T9JlCdho9SZz5G2tsImadPEShN3Nfo
4nOM3G6uMpDzh0Du3b5nZz3ByFeu+SuyBDLQlkK/qBgORo7eZPZFCWYg8Uf+
L1RYGLk8NljbXigD1XoG1L2Kx0gnT49/l2MZiHUwUMA4lrqfxHbZb5TPrQlS
bLyDkcM7DeIcaBlIXzR419kIjLxGa3PkUhZtD3YWvEbth6qLhwU9A1WhyxG3
LmPkhtRdOS8oJ8eEZCv4Y2TCkU8LBRkZ6Kz7lepsL4w0UTYP16Ksty90crs7
Rrr/MRQ3pSyiEiZX5YKRmuhP6AnKFfSr2xwcMXLrlb1Z/zm+6arDmO2MnfOv
Xb96bMY60dcfy5hj5Ja/LjcMH920dybuKBiBW2+bcVlVtHW39IxXZ8b5n+sT
mr4+JPLRYUVDoel4k1uCWmWa4LRPPYhMeuAoMG0z3yMKhPwU+n8r9a46evDh
xLSdjPddbmkdnbb5+b2btLVHpn0bde1Dz4fQ5r8GoWpTNcGB6XjDvf4HL6r7
p+27ZlbrlsczfmWx0eXwsX60/a8thkxymrVnPBHmNOEkPuOkrIHrxrT+6ftF
s/l6J4b5aIuB0ZAF5Y5/J46tbOKjiN+9D9dT1tosEsT9yEcc/4PxfOr/Db4+
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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.772079, 0.431554, 0.102387], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
rfhcs4x3Ffz7vwTN+///JeD/ALwq1y0=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.363898, 0.618501, 0.782349], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
ZSWCf98noN/+/30C+D9F/EG1
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[1, 0.75, 0], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
yNYlrNgrA6eroRjxhh4cy037/HJbBmYEmGlWhfbgvEVjTmt/pmM5IeqkQks3
lhtKKUpwTccpNvHaNX904UkZhykN5TS8q3vN7Req7fT1BH2+FZKCdTHVyox9
g4ddrJ8Pf4vBBqPO7l/c72PXdt4p+ZW+WDOGJ84IqQDXcuaqvwa8oayBe/OM
41vorqYqH5+MhScWjfqbn7VBt5zixnrjFODqbKod57SBdYJGhea+FFBUzrO5
vbQdFHiyUmcDUiBqKuiwUlA7OIZWj09dSQGydGmSqNJncAg08lIXSIW6Bd5d
7093QOC/Wbp2T1Kh8e3cOF+DLrjKrWYra6TBVFWQ1KojXeC1pnLXLjINNIo/
535J6QJH/bfqXg5pkBhdVrZ7uAuKMjzfuZxLg6LsUjZl1Q2N7m7TB9vSwMti
j8y5qW64v/nnaGxMOrBKrnvvdOyFfr3HX+oaMmCy3UvouV8vzGmegtH2DBCY
r0UZxvSC/p+Rf4pwM0DGt6pJ/U4v1PuaOHAWZ8JWzWYt4Tl9ULO6fUuZSyZk
l4pMPizrg717Llwe4GXC9lte51bOHYB6HQM3L4Fs2NWxTj5bYQCOo2WeeVLZ
4LTgW4Wk9gAUG5otrVLKhoBjZwemDw6Ajtdp+WIyG3LX5Jq33BuA947B9TZn
smH01ivJRJdBeHLx1bry79lw+fY6auLBECQu3DdftTkH/BfIJfx8OQSfbUws
VnbngLGvYNhM5xC8qjSoEGHnwBf1Zjsx0WGwUn32MEY4F5QKIsQVHIbBS3XN
ZrsNuVCQWxexbXIYuncbdajF50Lwz9ue5uIj8GvXWyL5Ui6YOmbZ2yiOgFKI
6so2lAuD0j4b9pmNwJsN5xKUy3NBPZUY8ckcAdJDVD38Uy7cOu/keEmXCe2r
5u1VUKYgcnCbWZYlEwYtY7NbNCiwMV27CbkwwSo55FjIRgq4QgJSRXFMOOe5
OsB1OwXrowobHrcwodG1NnPEgwKBzgsPaphM2HGIKVF/jIL/GIbn184wgQx1
84sLpuD4T8szr9VYIMm6lXovhoL7waO6PaEsiO6qUPv7KgWxH9pUB/9iQUmK
Q1bZDQrstWsXsfJYEGOvYpF0h4JJXgZ3op4FkbLFCrwqCvR9DYvEZNlgcGz/
ZsePFIg1qqZLaLLB/uYOX+/PFLSpS55bBGzY8c1A17mHgpOD3c4KnmwQfphl
xmZTUO0WJ73+IRvU/qMtViSEoE2q88NAExu+eY2d1hNDMIk3XqJ62ZD9Tju3
UALBesUeybmSHAhvuHFAVg6BzWu919UqHOjQTnm1bDkCn8gLiccNOLBD7UjY
1EoE+e2GYl88OHDB2VhupyYCRsKl+rSTHPA//b31qRaCDv2RWIsUDtzoFPVe
uAmBTFam4IMqDkjLXkrfZoTgrz1jU4mLuFAQZrx6zBLBDSHzxybqXHDMTz5P
7kRQV54X9n0LFxrPiPb77EYwQ1hPHPbmgqRwl5rtPgTy+Po9uTNcmBs33iru
hEDf/2fgm3Qu/Aqill09iCCoqYhjwOAC14hg7ndDcOHUP6W8j1xQ+HHRJMod
QYnGXp9CFheONkswIo8gaGgrUT8gyAMBss/S3hNBf7zgkJQsD5jFPg1zvREI
6jsW1q/hgcrpmWXpPggUh+64R27lQYfGT40pXwSGmSLK2o48+LXiQYeBHwJH
04PdQ348eNCYJL3HH0HIxL28yzE8+JbdXmkagOBS/jznPTk86Pvxo3xhIIIy
O1f5eWU8iHHc2v037SbBh201dTwYWrVQk74fh5G7EtnB7TyQe4vDkmiLuno4
aIzyQOdZcWk17UvnncVHhUbh9/0ZKHXFjzRKzNppi+5RXYNZp1F9vdc8Zi3q
aNwRXjXrk0tyPu5aNMZ3/lddiVSHr3w3vWve/j53nO+gV3pqF2UmQe63C95u
lz764gd/PenWw+K51tN8C6Y1W9SKzPA/L3uztKHAXID833rLjWgVkXhBvg+U
asQd7xXi24iaa/h81Ry++y4+nlSNFeH7vsoZ1soOUb6788O05ywX4/u9umn0
ePg8ctlvr8g1VXrxRJy/nlmy/6fBr/mk4m9/wFvbHtlL8Nd9n7rMX54tybdq
uY7n0uez7ri6oFb666wfyf0YTRMj+E5P6VNctGLWif4uJeWqsz5n3aazW4Pg
n1+Ext6no1oEKf/bgWJvrVN0CHLDG8mzDNqegxaftAwJcoFQyu5C2i51de5v
SYKUyhRTD6Ftfx14/mYE+emdxeL1tK2jK09KWhOk8E9V5RZ63ra56Ije2U2Q
q+193T1pbza6m2qzjyDbNLkDffS8blimuZxzkCAra6MeWdFW/1FYnHSYIN3c
uSN59HyvaFHatMaLID13SyZ00vMvc5/Cr/wI8khzWcFc2hKXZKx8TxDkqHaB
1fJjCOYEpraIRxBkSUV1kiKdn2mbBYdLogjyj8uNofPpfH3VPM+xiKXPT/eK
XL8X/f8NRc5JuEiQxik9NY5HEbQ+/35RPYMg33wZ657wQPAm/7j8i1yCVPou
MRlJ5/vJIS/tuUUEGXLlzqbdrvQ8bOl7UlRKkHeqP5667ILglryLhVk5QUrW
2Ix9pPsit3WP65/VBFlxPuT6/P0IUh+8Yak+I0iNzoZpMbpv4tMswuoaCHLj
hrs1X/ciCN0FF4Q/EKQj73x1oi0Cv7WVS/M/EWTh4FJpQ7q/PObrFG79QpAj
k3GLWq0Q2DVoVJ8dIchHkXp6H80QWBQW7ljJI8iwM8sj9bYjIGOUPjAmCDL1
gcq1OBMEem6Ui+sUQV49Iv/gmTGC389bSOP/f94C/wUNUL0w
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[Mu] (pushing location)\"", TraditionalForm], 
       FormBox["\"Torque\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Epilog -> {
       LineBox[{{1, 0}, {1, 1}}]}, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotLabel -> FormBox["\"Triangular distribution\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"1", "1.1`", "1.2`", "1.3`", "1.4`", "1.5`", "1.6`", "2"}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 0.75, 0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.684541948297085*^9, {3.684541979631719*^9, 3.6845420339731903`*^9}, 
   3.6845421227183447`*^9, 3.684634501280901*^9, 3.684635726015329*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"Brown", ",", "\[IndentingNewLine]", 
        RowBox[{"Rectangle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{
             RowBox[{"-", "1"}], "/", "10"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", "Blue", ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
        "Red", ",", 
        RowBox[{"Polygon", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{".75", ",", 
             RowBox[{"-", "4"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.25", ",", 
             RowBox[{"-", "4"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.25", ",", 
             RowBox[{"-", "3"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.75", ",", 
             RowBox[{"-", "3"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"-", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "/", "4"}], ",", 
             RowBox[{"-", "3"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{".75", ",", 
             RowBox[{"-", "3"}]}], "}"}]}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", "Black", ",", 
        RowBox[{"PointSize", "[", "Tiny", "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{
           RowBox[{"MultinormalDistribution", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"-", "5"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\[Sigma]", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "\[Sigma]"}], "}"}]}], "}"}]}], "]"}], ",", 
           
           RowBox[{"10", "^", "3"}]}], "]"}], "]"}]}], "\[IndentingNewLine]", 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "8"}], ",", "2"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Sigma]", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "/", "50"}], ",", 
        RowBox[{"1", "/", "10"}], ",", 
        RowBox[{"1", "/", "2"}], ",", "1", ",", "2"}], "}"}]}], "}"}]}], 
   "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.676470766623321*^9, 3.676471003872978*^9}, {
   3.676471049882092*^9, 3.676471065234427*^9}, {3.676471129297615*^9, 
   3.676471149504457*^9}, {3.6764711932820797`*^9, 3.6764713150200872`*^9}, 
   3.676471922923559*^9, 3.676471966073427*^9},
 CellID->54126742],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{
     {RGBColor[0.6, 0.4, 0.2], 
      RectangleBox[NCache[{-1, Rational[-1, 10]}, {-1, -0.1}], 
       NCache[{1, Rational[1, 10]}, {1, 0.1}]]}, 
     {RGBColor[0, 0, 1], PointBox[{0, 0}]}, 
     {RGBColor[1, 0, 0], 
      PolygonBox[
       NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
         Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
         1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]]}, 
     {GrayLevel[0], PointSize[Tiny], PointBox[CompressedData["
1:eJwVmnk4VV0YxZHKUCnnSFKikqGMDUrlTabmQipEpYTIHBqkqEgqETJEZCxT
kiK0kXmWRjMZ73TOvSgVvv391ePh3nv2u9e71m+RnI2Lia0AHx/fyBw+vv//
lfZ1KEhL4ALH/9X3iwcJ5Jho2tHC9xNUPy3fcM+FQBVuiM3XR4Hqq9Gj+86S
6Ejm85M3RRjgHKe7Wr6QQAk1mYVm7FFgtNpUzl1CoIjzkaovQhlwdGey+Ukp
Asl40KsyVnJBlnPidLIxgeY7GDWm6NFgIl3DH+FAIuEaYwdZFwZ8EPnrcfsa
iWr1/KMJIR60Rmp+nYol0KJPUtbJKjzIfvDR99UhEuW5vLlw9B0NkiYXS40I
AtVaGFLFVjQs2HNRZ+0zEl391HD7J36/ncc1zuyUJNHmmKqQnlQWBDeIZm9g
kejcia/XohS58HWflDYzmUC5V3wTB8zHwLxji/qfNgKVvfgoeGEZF7x7i/0q
1pLoZTvxoNSEhnN++wNuLZRAbirT62YMmVBq6t0Ze4ZAC8Z/WkTEUvDw9fqL
7Eskylh2Jbv0CQ2huVqhDjEEeqZ1hhpv44DMKQEj0VwSmZtlZ7/WZsHmR8Lp
PQtIJLoqs/BmJwef/97sZ3kJdChhuyNbkA03FdVyS+VJlOytoJVazgUBluN5
HoNEy580n725lIatf0QUnPaTSMQwK6TEjQKZXq9PGp8J9Frhm2iQJhuGN65o
ZyWSKJH34ed7FgV/BYZ8FD1JtM3PW1FnlIb1K9dMZ5oTyOLS8YltB7iwN3CO
1YEAAp16nDuj0jMBKU3dzLc1BIrvb4qK9RuDiitvtz09QCL1ZR4z2z1puDC9
6xyN3/+WW4hScCYF6pFSkV6NBBIoKxJeyk+D3etvWwt2EIilt15gZwMDDP6o
CpW9IxD3k4H9mjgaVI6eH4rZSSD5c7nuo+o0pJPvj8xvJlDIBrvY03wcWLMk
7olhL4nyxYxlQ7aywVCmMqXqJolWD2h3ndLoh8ZlPN3zWI9pYhc3Vy3kQqQl
k3+psAR6pfLVv20eExwFngvHyUiguMU3g9o/jkHMcYevO/aSSLpaZartJwNO
iP+763iQRBv3i8yRmebCteU7Z3XaSBTtk37thzoTZoyUpXS+E6h6REDtkSoN
spdL13rsJpGuju/8NmIc6nMnZxN9sP6Cd54xCaKgmTgh9rFDHB0XMZAtj+GB
bOhERpExiVoGMk5XRI8CuVLd9TDepxMVgwtHh7B+D+QwPquTyGCFfECJCwWT
FWn6Cz4Q6OLuXxk6HWzQ5Nmu2buFRO+6w/w+qI3Bj9frG589wPs4enrL+2Ia
zm7LzI4RJZF46rGdK2/SkLbdfU3zCgnUav96943RUeg6vvX8mgQC6Q4Jn3t6
hANhy+VDlhEkGrFMUEtDXDjYPWfdRfw8M8f+eBuemYCDP9pTNDeSiN7fZ3Si
mg20W63M2gYC2VMyRKwuDWvH7QeLcwh0eSRWKNWXDZLVgwFndAhUd324SjeS
C54iYrNTvuJopZrf+3wTDsTUFqzxxPvDT0tmlbApcCl9rOeqS6JSsYta8vso
qLJe5Xd7vQSaM9+FK5BFgbngkSk9RQL1bmpZNs+AB9Xbai5WHybQkpaIMVlZ
DoyVtRQo3iXQXdbf9tDkUfj20v7BlQmsnxLpDz48HkxXs4Tu6BLIwWkHn0A7
G17YOKVdR/g+J1B+VyYTwtbuXzidSqCOqP0X+NooeJc43KQTQqBtIic+F6+h
QJHe/q4OEchp/2mRFVi/2cr+d92d8c93nrGS9mfApeR5implBLIbeVeel0nD
qZ+79HPx+7HpFp9acw7oKB8VSacItGqE/a4phIaA2D5btiaJGuwiGy7h89VN
RQ6NdGD/C6bmFmE/4qt52yTwgkBHim+nKwdSUHIz10QP+1Hxsyu01gwbHn1b
r6v4HH9ee+bjsZ88sBK+r8uH/fCHDx2jY8wGU41DY6YSJDKs3t7Uv4cB0qtO
bPboIlB/e6DorS1ceJwxUHpJhERb7m4Rj1jKhdzEvoXfi7EftJ5trdnFgVmx
eGPnaQJNVkfvU7k6CuEJVdt7irEfVC1vO+/Ahf2vpBQVLuL7iteX/5bBAO9X
EkU/fxFIUWBNxng1DYbltXcKBEi07FBd4XKs5wUBVl2mg+LonYxz32AEBxbm
z3d33CCBKk7+25z9kIZgOxs+o3QShdw/dGmnBxPs3abl7G8SKMBoTTDJ40J4
mGyw52USPfG67G8XxYJIvprd2fEEEslkdV5ppmFDvwrDM4BEEqpT60qejUG+
Gt9mzXMESpaoWnlRlQOu1HOTzFkCLZ34a/qtkwnDFlKxE7sIJFxgtfhREn6+
GD1JA3sS/U33NG5KoaDBeref4giJFBkpCjkLeWBwQ231wF7sX7aNyW1/KQjn
4/+jh/0yPSZW80IwB4Z35dwf+EkgUK+xXbx5Ah6Jhn9ag/3H6MCiqI2cURC5
E3F1BOsvkV7kc/AgE4Y2CUX0WZNo5uuBf4HFFDxKOSEpqkAiC7PHUSePs0Co
t7zYnkmglWf72PqvxyDSdtRDypFErWmJXmUXaPiWfybkO9ZLBO+S1b1nHGh5
+9z2Aw/rbV/kxtPPaejPKVvWUEegY/zhcyQXUTAwmLJbVplAPVF1ewsFmRCx
SqU3EL9/W/2rRw3uHMifMyeIwHm0j/OVI/KUBZ2fIOBLCYF2Gm1sf4AouHMi
QohpRaK6AM1YPyUajmaKhaoNkChIsF8FHDiQ/WrQXA/vO0f0HOOsLQUbm/t+
j3GxHtc8KL86Zwju7163NLaJRJffnp3MqKfhq4pSSsgGnNdZf9WP3aVhe0H3
wkgfcZQk8ven+zQF27O+pz3aTKCbTbeEp+dSsMeiXDHwHoHUSvhi7j9gwibV
H7cU9Qmk3BlT+3o5F3Rq1D4k4bz8lNbyhHkJP1+GIumE/fXP+t1bmzYwoXOV
j8xaFRKF7omlL17iwIETnC3rMJ/cMf0hwDdOwRH5KwMCT0j0/AxpdK2WAyTP
ffc0vq+ZtlF1amAUbufWOoWeIdFdg7aKi+7Yj8P4c/2tCBSeG911+vAYmGy0
exmyk0SD3wba2k6zYd2Njr4HOD+vZF/eGitKgab3WyfzjwSiDAVCs7N4ML/P
UPDlIIE0ll03ezrAAtelf5M+3CUR31D8CNOZCbNhQfFekyRSblP5vv8eDYmp
e8bP5RNozMc61zeagtdkHt+oJc6rZ/xTlB4bctlGfp0zBPrS+KfCyXwcwqRj
enfqk+h8aluGou04UKb7Ta/ifKpLNrUNm8OBwlNbYhT9SGRqR7Wva+VCWJQi
axD7aXfkHovYLiao5sSlLa4gkYDsiltiDBo63mlWvXEh0ek8q2OkERfmTUdz
E31I9DOllmm/lgcRh5yj4/B9Nr35mrfYjAMZSw6KupbjvP53PKDVh4L43jd7
3D0JtH/xltm98Tx4e0ZOXhPzyeKhlCcvwzkQtEtQWf8JgZQ6Uxed+jMGRoiP
T6SIQCklGSeVrrOgqInPpmUl5ieO6sSaeyywW8ZI0savpxQsadbCn3D8ws2p
6BUk6tpfzBILZsDqY30rvVPEkbvvZ4sN0yMwKzqbmfUG553uTKYRft4mxxPi
HMwTs12eLln2mG9MWh3IFgI191pNufNxYXALnwvzMYl8zLqbU+KZcPjsg5Pk
JpynKvp9mq8okLByP/oHn4fvHhna9GEUpO6y/1FLSPQt7VusH4MNf4TpFj+s
x51Bmtwd19igd9/5ujT2FwsL/V3VT7ggWdS/oQj7z6axqv01Q1woKL75Josm
UJbHgYHt2C9XrfKcCogSR1ubzROC1LigmZLFxxsmkJBy64mjF7D/7th19NQi
Ei3JeaR81nECPDeuGWEF4Tz5sin05DsmKHqqlSTj+6IWDua5/xiGhZ+nzm3r
JJGD7GXz+a+Y8KJmmcXBccxzStzw05cpuHYmpn1DBoEqOxOfrtgyBoIPn79V
xf762/BfTXI2fr/NSfo/PpDIKt5fbWQ+A2bGT3TuOkYinYHrKhE/KUj6jXQO
p+P9DG2aqytDgdzxEkvBLALZ9CyZHajGfaCztDyiHutx0DL6rTIbvB7uGymY
L4HuXLr/gKqiIaTbNxrtI1Gnjp7Ws9UcWB7izXf+LIECE649TsQ82zWmevHC
S7xfEm6Lr2WxQTjghfraSQIdtH06EJHFghelXu962FgfZh9tPb9TkFd+d+Ef
UQJtF3528yBFw8yq2sntYRJIbPv2SWIrCxadmu1pjcZ+b+03fbiCB75Os6Ex
vQRqt3/c+OUPBa4Ea7Mqfh6hN1Im75WGoPqWy4EyEQLd26uz8JghG7T2jCq+
xPm4KCD7Uo4PG248+6pzAOvn0/NF167ascHVTe+1N+aF+LXHGc9C2HD9ivnP
iack8p4Y0hBJoOBg5LW1HzBvmfc3KA8ljYKtS8k+rjyBmlJeaevsYcHA3gUC
3zGvCmeUCeb2cMGjsYT4147z7E71AkE8j/NTmzzzwkhk1vdF05PDhPK3l5hZ
mFdvV9/TM7/Kgg9TMTbH3QikP3BdNeLWOHQJeNuu/UOiibydDLVFLJC8dDFz
Fus1/F+a4JkrXEgcVMspsCDR4328/hAZBtxX7sntuEUgz9mjBjb1bDiWe6dw
pRqJOFTcoMYmGl75XJNzvk8g2mWj7IQpFxqG7GQf/yNQwYMpnlspBzT4ybOx
VzGfVG84djefAz8T728dw/7dYZPUphA/DCeJe9b0Zvy8d2S+K7nRMKnfs0hl
Fc5Le8eczvVsSLJ8kfEN5xFnj0SyijETNMZy6lcPkWi2qjUk3oiGetu/CRWJ
OL+IagNZFxaMaSnfE11HoPNdJ1d+H2TD7ILcD8WVJIocvvavtWQUblVeuDaJ
eS4iKsyjYT8LTj8/0sUGzAMqK6THxChYYeG6Wxbrt7woVv0uTYHeRu750un/
+0rJzvwSGvbUpf2Mx/xzKP1vXNUZfL8R6206GJjPGh4LFK7hwskH7S23sF9v
UCxRe8RkQta24cUM3LdCGGdef7jMhtScUwpTfwmkdbfDxPseBdoCg2XfT5Jo
euD8zVvYf99GHNjo504gkxk7iyL8faNSGflpaRLZxTyuK60fAtu83lmlEQKZ
eq+dGMA8mX7u0+715zGfhm/uHn3DAQ/1rSfZx3AeOl+/LidEwXTnLS8bPJ8R
XbfMA9/GQYl46v5wFOfPg81F9zVGwWL1z/Vz8ftvPWeVnkiMwrD6nR/f8L7t
S5878qCMhsz57g12uG+vfmzBaG+hYF5g7ktiOYnOcPjMXS9RcKZuaeXiWgJF
nWW8AR8aWp0D9+jjn3/+pDdz5XEO1FksEDsxI47mLVn9SzOWB2+Cx68wz2G9
OsbzhjQ5kNA+fTohn0S+N9KOHfgyDmV0VdUqZwm0wkro7P7vozDQoZTFh/Nb
2LT49f1fNLi//cAsCcP3QYTJl3qxgJOkOj3DR6Jnwq6++SIcoDKEHzS04v2c
2ueYp0tBOxqlJPH5bdNu3y2OZMK1prqKBdiP/evjd15RoMBD1S9dHfPaLbk9
rhJ4X0LSVWKnMA+VLlnh8ewpDW/XOkRmnSLRHeu+lNbPQ3D1yL6Thtgvzb7c
2Tilx4PadUc1BlgkGs/bPffqERbkJ4fXFgUTqGvv4B6FPUxYlJso9g7750xo
pNUVfsyPx93hB+6Da8V6suSuMqD7seQ8McyPta8vNOlN0xBXf2h8uJtEcRYd
K78H84D/wIWIErwf5xonfp4+ie/bdqb8dxXm58+FYm21FPTfaE3XwH3gappm
8+o1bIgcTt2ZiPNg7akK5z+qDIhM2/jDE/NaiOwm7dRjbLgTcNnuKEMcBc77
mU5FsMB2z2ZowfxjtuCOT5IqBceoXS9kXHH/ZAhVvYjjwqL13qlb8fdtyY3X
3uDP81cSeCIgh/15kcSC4bcMuPODnNu/QAI93rtfUSJqAgSTbsTm4Hl+juw1
OIX9zWzpuYxM3IdW9K9WGbvNgdMfEycry/F5i0cj52dzYPe8gNsfugm0eFd9
yaAHC567ct+1YP8z26s0Nr6EB/D8aGfDMjzfZVnmWY00/D0857kT9v+ypMpm
5TksWKAlvf3TERJdq2jneNmPgqD7sMAlfN6qROElC5XY8P5zUAXDn0Abl2S0
p7xkwaXB817rTPF93pxjsG+ADSWac3vb8Peldsc+W9KM9eAkq78C896BMOs4
xzk05KeUSi9tFkfZlPKRuXbjkBAwJ8HmJYEkvqkk9PcyQIXu7J/fj/u4eOlv
87NMWCGe/2ZrJPbve6XHz22kwMq6xaQMz2PR09/nrT6zQUM4KG23L4F+mgUc
1MX95RnBrL+8hkQiPy2XzLtBQccOytoJ7886keSWl5u4IE2fWlXohPl//b/C
lt8cKJOrshnE/vHPP0Fa5j4F24y+e/8yIdDu/qAPk3940KG34aGPIYkO34oM
DhKkYevK3Ev8mG9qYvber7s9BonHfDhDcwn0VaZ5rwrmZeXbkqdFowk09NI+
xsWYgo/eskK3FUl0rHmT3GlxFuhAKGmK81Xx/K17y5bR4HLvaciyYRJN3oyJ
ZyWw4bhm/T6pQNwHPWtK9AUpyGkyT7FUxjwid5JL2nFhUtV0CLKxPxo1OvAd
pKDw9JLEFVIkohfajl1chP14p7zDQtz/mdc989OPMMC6t6KThf0/51GLWArO
X8XMg6VnsT6q1M82OnbTIMYKCOBivztfyDCk4mmIr/t6VgU/b2ul6rILwhQs
nMvRbVcikWufqtQy3N+N25pT72O/P/pEWc3gCA92Lypf7qhOIPMPMXNzrlPA
/Bgb1RpIot67+w/FH8b5dcS8VAj7uZhPgWFjGBPi/CeWXjiN/a/EaJ2mDxeq
g7ODat4RaF7b3IdhTWyI9rZjzsH3tY32uOU+n4JRO9PAT8J4fg90q8c3sKB+
5c2ySMyLe8ZyGE7VbNDdFxR97Y84GlicGEnqjUKgpbye8wSB/AdFj6rPZUPO
alfx6ZskWiG9tm5Kkoa1Q8tKiBScb8s7du1+TMHh6fsDc9bj/BPT3/HDgAFN
brNbN+H70N73fqrRnQVNglvfXT9Aousn7G38DEahu9sqvH41iQzMKo67PqRA
VeVLpMs+AnGP7aoTfs4BYQvHs524L6u0L658IEBDXlYtm8+LRPsa2e8UXSh4
/zst96o27oter+k9CjQk7K2WrsG8Mu4hflngMRvudlupi2N9myvdeHTVaAQ0
mtb552F/LHlVJWmcxID6LrEXuU6YdwX+CLpRPJjbItWTKSaBDjw+3C6O+W33
jHFIhwSBkh4aMwtkcV8c71PIPUSieH9XxmJlLghMfDre1i2OCirHP96aHYFT
LbdWB/z/PA4sqVkpDly0DFM9nUCiUxceZHr04vxJcxyywH11++b85RumMJ+7
fXNZISiBJOS5PZ9nGFBV6pTwKBXz8BKj8dMcGvjsDrxVw/t/59D59bVdLEjf
lvPdBs/v/JU7e03vT0Kn/aoduzC/qK+KzQMLGop2nSmRKSURw8k0qz+dhra1
T7qzcZ/gfBINS/hBwfVNqTbTDiQKrjVnmNrQIHPzvdwfnAcdgcv2mfqzQPhW
gMVfzIN1yR3COqU0/GbFyf76RaAnQ/92v/n/96sbRH0dNCTQWrfTP1Vxv66p
2RbXhfvqnxCFC9kNTNiVP1qitJhEG31WOZXaj0HJFr+Y9dtINJPXIWWgyQLT
8SsHnmwn0e7XZzMyMQ/6Lvdy/L9PfONHLxqNOKC1ys/XFuuTSpB/c6qagn+7
FIoA52eB59Svw2/H4LDqChZ/DIkU+m17cjp5UKn1pKmhhETsBa2/PguPA1vt
71IBzIPyT2mhJytoGFusMSr1Ffelcz77rqkw4dTXC0nfhgj0PpDpYYb5e/W/
Ii0nSwJtnrRekruHhiUdmt57MH80IOevuddpWDDf4+H6FTjP3/9Y06zIBht3
ZNeL/SC88ENgqAkDgsSPODUtwf5kuP6ftiUTBMwO7/z+AvvvgiclLtvZ8KN4
56gGvi/la+f3+WB9Pvv88++PL+Lo/UDA985OGvuv1pZX9njeo16/+z5QYH3t
5uvHobgfd1r5vJkzDq45BcUaAuJo9WxQ09hXvF+bhKgb1XjfUmarEycpaP6t
qFaH/eXn8IEMt0wWbKrYnHZsE4HisnVefgunoeHr/G063iQ6NOr4eSSTCwNG
qz3P4n61MuJGWgPWi/VXFzRsRCKerXuNKObJ8vWeh+E97ouOn0KeXWOCkvC/
xr/YP3tPHXmhgPtwnt8/y5c7SPQ5Rr6ucJoHJ03MxSpnxZHAL7nUNC0aFnrJ
fD8Xjv37oOPlL/d5MGrfzi+A/VWslH9b4+kxWG3O9XnbQCLiRGP7lSYWmBx8
ID/nogRK+Pip8/UNLnzZqW8dc5FEw7+ZHxWFaSA99r/0iMP9Y1VqReB3Dgid
LGmwx3x1y7xW6nkWDy6eb8t4iP3rurT6u21+NKTJDKque0+iFOW0rtbdXCD/
RH8v8ydR5VbWgmxHCjzHyxJ1voujpHcu4QIt2C8c7A+2KGAeWrJq0SphNrxx
8x15jPPR6teayKNsHuSs/acoLY71JrQm9q0iC5ao5z+Xxbz9Z7+17VEhLly6
QUm15RFo/caVZesKmNBzJ2BOzxoJZLy0hqj24IGV2Y/ZAS6Byg6TsGkvBXde
tuhW8fDXLXc2n/7HA+9yRqcZ7hsG9zo4ymos6M7nE3rYQyDrExoZt1UmICPJ
62FFAoEeNS2ZqBLgQqFV3aa3VQTy2bZe5WIRGzgK8rY2k+LIaSLoY+9xCibu
vO3ofkgin3sSDq2hFBwamXNzDe4jC50kVQxTmfB+x7dJSQaJdnjKKQR3jMAe
HemsS5jvb6lm55+0Z0NZ/RPFniKcT7yqugoLCpZVP/5YiOe97OHPfggbBRZB
pFpaEahCTjLV/hsHnkTN23W/k0B9qT58ATH4vqxPWCPs30I7+QuTBNgw8+fg
6+0bSDRvjsYgb2wEApO2VQ20k+jHfIvIPZvYEPzA6uhOGcybe9f6ap5lga+f
pdUCrN/238EDeak0eCSv1dbGPMK2uYXmXKBAK8H6csJjzB9yWw6Ov6Rhe/Aq
PYeLBLrkU3jsgC8HzoBd9u2jJEpK3sb6tXEczk51Dgfj/TdTmSN7IQ/PJ3WI
v7oHzyM5rrsI92MxKX/htZnY/9becG93pmBve8wpMCCQYKCwptATClLUphVW
qBJIU/3y5Pt3I1C/pWqX4E4C6da6j3fwsUHu6YtxOQ6BvF50emyaxwZZjaiD
F/G8dDqzVhS0jIHO3cl3l+djfuAPUk7s64P1W8zesfE+FixgJvN/YMJGy9/v
HmH/dTRlnfVcPwZvNqUf8X+C9W15wvqvHM6Hcu2z7rhfdBn1q5gdo6E4q3PQ
n4X9KVPH4DKHDU+yGIY7bhBoOud2XsUKDvRIMLd/v4z55t+xGyoGPNhvZ93c
hPP1+EqfG3fP0PAv7FHAHtynL/14tcYziobwbYv3VuM8yiAiH0S+YQOv8GYb
dy9+Hune1VM0B7Z+emkkEo/9e+mOLc6SbDAJ+Jyo/oFEoVnzVT5GMyCrTa5A
CudPaegy8ftneaCcpPBs3gUCTWof6wtlMGFCqaDTmZ9AedED3BuYP42N+Jc7
4z6xPUrGRXYdB8RuLL55At+H/tLkNyd343y0kDi3fSeJ+o/n7x7D+XGmcW/y
2jASJcSUPejHPHOgpH1txW3cB9MbrRS8GKA+NaUU3UugdfGb9mibcWDbmjzW
UTwvRVbqT9lZNhzOyrj9+5s4+uLgJBJ0hA1hBYXzV2/EeSn97nu4Kc5n58rI
pQ5Yz6ueBVLpFPQa5n8oxfPkxL048e8JEwYaJbvtvXA/lV0oBE4U/PRcWj5K
YT4+mFXe7sIA5hzzzKd5+Dzhzp6CuO8NB9sVpuJ+stjg7bZAIRY43XHzPIx5
s9PF8+lfGxbYs25ydbD+HxvpCTVhfSepfX21DeeteKO7v/2DUWiOGvn+GO+/
S9WG5TPONIBz7a2kEdwXIje0qhyloX7VjvnHsT+1xyaHqTlOwJ9fCzWrDpJI
ooZv2xZ/Cvw8I4O1MQ8uRINN1SkcGA0IMc8TI5Bh3jfPdwsw3zad67sWhfep
VeTRhltsGDKIid/JFkf5laKm28a4UH5DPVwa+9l55SunzJK5sFbHt6kV81Hb
gVMnEx8wYXGIrqxdOom4tVF+e/pYMMC4cGzmFYEkd0Sb1bnToOyq9+4pfr1d
13z+TlUabuiUaWT2kuipW07C42vYn1MTQpK1SbTMcOVTeaynxOBdI4E+mOfC
A/JeVjAgX2b7+YdFBPrutkniEu7H53xb26/h/lH5oHTV2FEK4mKYcffl8fzq
WZGgwQIBYa5nNp8EelSLyve/pMBUL5nepkGgUbkFN1o+cCHd85YdY0IcBbgu
YJ7FvBruvo3ci/PZC0ounvHkQOgV/1cbsH947D7Ib2/EBEk5j5OKdbivLHgL
JmtokGrlmGzE+5v1T3+3Xw8XDE49LYxNxPo62vfx0s8J4K3J3LYU99sYzmlD
t38UPNwzMUJh/lm/b+WLME0GGDOrafNvWM91OzJbv4zATg25mUh9Er0cWMx8
zseBHcbtRBzmH8v0ONJnHwcqqh7F6WN/jxf4HBQ4y4KGxW8d/fMJdEZMae/a
iDE4frbGaT7u55a16sZXsJ+xZr2iC7FfMJ72/A07wAEIPtB8CPPL0rLbusG2
HAg3FuUdX0kiFBUrdLacCcylJykWnt8JiNITEKdgPH/5H3/c50fKP25VeEqD
7tcEnXIBzNupn72sHFhwK+tm6IgdiZRe2x0rt2DDsQr0xA33AekvG4VTm2iQ
7y/9ppWD/fBcqBDvOBvUe1t8V1wn0IucxbNfpjigfOqt46NPJKpbfSdCTHgM
Ro15yWzc59yLTSrjY1kQwlA4dLsMfz7rReDOmxT4PGspu1EhjijD5nsd39iw
gLfOuhf7VUq1oeW9UB68mKwP+oX7AFn+wrl/Pxf2XRI0tPkqjvRHCtxXncDz
OdAacu4zgYbd6soOueH821I2VITzJIUl75+zn4LzJwJVR54S6NnqqeR7mF9t
+I56XYwgUH+yQKSMxRgsl/qt0/SaQGkHNdcwLFnw8uEqxcwvBKrVWHfO+BIN
jw74VQrcJ1FLZLZRKd8YdEpLH9TA82wqHznn9ZoHpUjtyQTmKWXzjv7Bfgoq
6xce3IV5FAl4qITVU6BTrBS62hjzWb/JxWthbFhMfU6fbhBH4SpnGgyaafhA
++wNISRQfEIHJbKZAxtM2io+DxPooWv16M01PJB1cB+6IkkgXx8Re8EyPB8r
qfz1OG+r55YJbx3A/ngy1vcVzvNlpqz4xCM0+FuGG/3CetpeuNJjwegYdHv8
TZAYF0cWK0vznomx4emumKm1agTKvKzjv/tGLwwvG5MpGSHQpxh7B7E4LvQu
GXwigvONTrN+mm3KhMtWXo5mV8RRnlCi+mANA1ReH+NTxTy3rvb23pQwGuat
UtCXxDzK2KHilpDCBYXmlJcJuG+J8KZKvvSyYKPMoYEuPezHtiPnxDFf+MKF
vF3PCWSaFWO1TnQcagM/OOzD/dYr6bzj7GEeFIcrm4+bSKBb77eJZ+6g4OvQ
u9TJDqy/iHLm9iwKjrcEZl/Owv0yamVo4R0K3OY7//zII5GUgVBy0fQo9Dfc
FLnaRqCA8xdWiqRxQHNin9y3rSQS+Z1f8TCWguyb7/xrsB5D6lLGvl1lwhsL
+9uHMT9kpUiE/x7kgPkK2tJyHfZzkYxUyw4WSDkNURqNON92iFnt8KbgnTw5
Ucwl0ejgrrP8UtifwgJ3LcR8ImWvsynTngVJWl1lapj3Wnru0f1qXKBtMwRT
1EgkNBH042kXD8zaOhZtwfrsdSpeWVqDeUEr+nPoBwLtFFydGZ2J9TmdMnmx
hkSfWF4n+HgUbAoa/xqA+7XwXc3nEvO58E5783ttexK10oKX/1aPweDbtWXE
lDiql2tZ7OqL+Uovv2IY53elgt7WGyPj8EnF0zDWmkCvyoz4M3CezZM4pCyH
91lU7MpEgScb/EFHIL+SQKTc3jabGxRoVF1dkWFDIP7ydTOV+Px6WzqQaK8E
6mhcJc3MnIA5sub5hbMEOmg+bnr3Ce6rh7PEMvDzBkh5lLwRYoBWlnLviX8E
enk3VXZoAQuIAtH3Qli/S/cfWXdUnQZzXsiEsxWJ8rpmPfXeY7+cKvJ5j/N+
24VKhxlRCu72dU1tmCXR/J3Xya29HHB1cpqXhN/vhPul3DsTo2BORo7l2ZLo
nCzrjDt+/Red2aZcfhI5DZq5HGlgQHDygJcz1ouSQPaXQ7jfbV/UzJ8xgHmk
LVW7R2cMZHq6Fw0DiX7PP92toMKCXxL9f7of4Xw7HRYucokF39JdRNTwvp+6
dXazjT4F+gk31fNC8P3vO5DaUDsJq9unH62LwfMqMBynVvwE6dx1Snvx610c
NOHQCRp8ZhdHqjphnjzkpsG/jwu12puy19P4POPvOu+8HQGullNMD9avaYFT
8jiMg3mkz41avA9ee7QePeTSsOHUIeWAgwQKXj/lJH6KDQodrQFhxSR6t2RC
b3ELE7xMfeKs7pHor1qYufVuFogbBNoxsL5XBbyLWFSLebcrr4GZRKKLH3gx
Sh84oDajS/vgfezefMS5XHsMTnkGDISmYb/eOF69TJ8BGguFV1ZKEOj6yGq1
3HAuePK7XZhJJdD9wJrDVaJcyFVmSyZbYJ6tL2KVkRQExl7ZVPwL92llzcAd
C2kg3uq6UVjvX/cl/M40pMDOZGxZAuafb89nYO5BLmi+Kgz8i3nr348VjkqB
DPh8RO/3X8ybn3Ubnod54/PeNyndfoxArsY99z/UD4P/Qdl3C+Zgv1e2sLAe
pmHrhMFRO8zLkkVaQdH8FHjbxEcVncB5/zm07g32hyNixon5BThvB+TbejRZ
0BjXrPMe9/X03TtYDY95kECc8ZvGebaGucFy2I+C6R1aQdtxn/74b1eUPt5f
l73nq//tkkA/6otyA+qZcN5EMWhOPeb5zx+Nry7jQZTfWKu4CYkyjA+deBdH
Q4Tz9n4FzCvPJTfOrm2ggfVpmXgV5oODnvYcuQrMIybtLi3HSfQvx6aMeYAF
R3/Z5kpjff86l9K4b4aC+k/nv7zD+3iUY5TUhjBvaGw+/fcYfv/7mzJ1Jjkw
lpGy2AKfV+Dq3p4iJyb8jrs38QDzSFS43uflK2iw/fh1AZuNefTO5Q3HlJnw
8Zi1wYZJArVGPhE7f5EDrKJrIpZvCFTudVv84DgL/hjFBSnlkmhLDKxb7scB
nYVlZRWOOB+NEu7LO44BXVBTdvYMgRrDHSMur6PBU7fzxd3LBIrNfq26pZQB
dva7rsacx/f521m3+8ooTIy5ecb/JFBBo11FmSIXnGOkdggdxvyypq9xZJaC
FWly8x1O4v7Y3KD7ei4H2gUdiJeB2H+9HW9ss+DBxGNXhWdYL7mqnjXrksZA
yJLeNv6XQBcHJzP81SmYCY8Mn3UgUXymLUPl0hhkzFRdvyFEov2hHVaHP4yC
Bbk8ejqKRJ6vze78c2EDMSnn/8KXRE8WvPf5YcYCnw1qzZWCEshaW2vouyMb
Ng3IXl+K/fno9q1qd4PYcHtMwWkH9uPaF513vZN4sNVx8tkfDRItN4iye+7K
BbPeNMlDOvg+J/icdD+wISLr9m45zCujjZqWoiVsyDGx7StwJ9BcX0Ld+jQX
vj/YIHbtLvb/Y/wDuku4cPiF9PEflzA/lVcYBGzkwqkM70RPnEdPD24TdRmi
4MX68iU8XRIZZunOyHxlwdM3otGVMSQ64id1xydzFJIu9klq4jxnrtwsaXiG
CRcOzJ/QdicRJ7f9Y85b3L8l/Yvv4j7o2ZV3UOIQBaPRxdptbeJIrI+y9n/D
Bfsp2fRy3F+HRVguypif0zZEPOvmLkEGsk9l3O9RsO2uyBG9a/h5tkwMiFzg
QmtUv5/ocgmkIX2sLqeZC7vUkuV+KJHo1l63S2ce8CCiS89BVJ1Azq7D3h8J
HuR6bRowx3x298ql9fUONEhIFGkO1RLo16UIoqSeB4Wzm0f+DBFIS6pHsOEt
G0Qv755p6CKRb5/ckaQBJngoreyS2YL9XqB+5tVCNgwrf1epayKQ22W33WQ7
BwSdpTdsxX3ZXkvstdJRHtx6ahWhj/DneW3cQ+izQLmjztdHlETtH/WyZ+6y
INhlKkLOj0RjG6yoThEKeoIGp8+vINAH6cDj5tgP24YcvEoXS6DGm+0tTHka
xL1MpQrwfgcgr21rpHkQtOvqznou9p/rGc9aNjLhidtB4R+Y76yU6/hOWlIw
GfKU4RKE89tn+RIbIzZ8jtjVkfadQAY2r2LjR2nY1/ToXl03Pn9fZ74l7u9v
boca+2E/N6sZfjGB/Tz5d0/dZw8CDVwaY9csxn6nEPnz+CPMl4q1rwqUKaiY
87oiAveTbh3h8dZy/HlntFKahkm0VisffX0xARoRudJGuN+51n10nVvIhT/B
2T6veeKo8aqK3yLcV/XOw9xgdRJBj5j+mgkmjNiv8JF6T6DVtFmaphYHumnd
gWzcj02uWrAMJMbghuhQlj3ucyl7efLHKmgQbBL9YpxLoDmp3lKng3hwceT7
P70S3OcKeOp9V1nQ6TBc9tQX59NZ33QeiwW00K+8MMxD3M355gZLaehZ86K3
5zw+35Jnvna5THjsvN+UtZdE4YpLu7fXUBD/vKfZZoxEg2yp8ys0OHByngCk
jIkj43VvD80mcsGBWPpwXJZEMuE97YJxFCxIJ023Yr/O/KI2e9yHhrNeSa8i
T/z/99DLk9nMPrj+s0S7B+9TgZFufn46EzI+altPPsD8VPu2u12aCw2F7IGr
b8VRtVxEUdcNGr7rqsTuwXxze/km0ZhK7IfiLc4R2L/XZTTsUUjgwmbhiQk/
VxJdc35po2/HhROGr4OXYx4+c3653SshLlTOPbt2xlACkcGR3s7ZHCh4NG+a
xOc3/Ww0Q//oA6NkX1ULzL9fhsfXfapmQd7IscW12O/3n56nvdmbAw4lP6Zn
dTFPdXVAzDx8HzLHBoKtCCTRMzrjtp4Ha/osb/scwH4TJfus7jQNHX9qt6UJ
YT3oJ/2S5TKBJ3DUdziTRJfnftTQNBiDreVfimYKCHTS73rb5jUMKN5nHVqZ
TaB3ATJTDlwGaL8PqWfjPt6674H0pS0c4JiqHa2OEUcnjywSX424UFB06LlJ
CuYZ1Zpnmwxp8DqbbzGMecKzMTtPfh4DjmsH5kxvJ1Cq0v0b7XL48+YEDcza
E8jJUyrt8AsWnDNauvYXzjey1aq47QcXxOWjDjvh+xD66M9P3Mc8uu630lQz
gc4V/zu/F/ef7kmD7DWtJLpaty717QoKYnSOJNt+JFHxMiFWly0DfFXl22rx
/IpLXxgmT7MgQTp4p7gmiWreV+55fm8U+D3PHO/D/vLsiBU1S7DBRDW2c/oj
gWr0bpkgMdzv5ZZv3nOHQNkve+8tTWDBWzvjW99wf2sMiZIka5hwLH2hWDBD
HDkftTL+u4oHp1oWunthv1+mQ8y5c4cLGT5XDy3CfuNd4vY56iUD7qwRUlh3
ikBjh47UuIWPQrrKjJIo9lsh3Z4np5fTICcrNL4U91/TQ9miGyNYQLqqk71X
JVCofsX8+dgv8h/3n6y3w/lttVblSzwND/IMiu1ESPTR8ub7j7ifXXnIlFbF
eepc/GpxhhnWf9GCV9a7SGS3unQmb4wFx8mcPaxnmL/cuwwYe1gQt0vO8wL2
l/uVSjfVt3LB5eDc4Mc1BHqwq2nuqv5RcF5D7vbfQaI/3INPPhFMSLz6bUhJ
kkST1ZnLSjAfGdd3GC7F/p364Jf7HmcagqVuM17i/IkcfcqLsKZgV02/bfRb
Ak1VdvgswbzM8XW60H2AQMdHnTlSf8cgKKbjVD3mV+21mtOfvHFezfieX4r5
bkJE++oDa9x31KrGuobE0Y/NuX/f7OcAU1Hm/st23Jejvzgewvk7ZP/woc1V
AhUpQN4PBwocTUoexOA+I9NVYqtvRsOvzVaNhn+wX/GnTrVls6DerP6vchr2
s9aT1PpWGkYm0l6dwn52LZP8PEcX66dTUfJ9LM7flLOXaS7uF58eL3PF/PeR
pXfNyYAHI66N92yTcF/o1c978J2CaknnwUWUOPoTaabmOc2E1n8aygO4771s
GnNcvZeGxvziTtUzOI9NTI+aPKBBxv73+MaFBPph31PX95IHNbYrmeYJmH+0
LLKavmJ+svBNScN+fdQ2fvDhR8xbkg80czBPN/21gpVjHDgv9GxqOeYjffuw
WzOSPIBiraRDBIm2ThcMtRUxoac2zOM97n9+tlHJ/CdwXm1olivCz1v93PxL
WxIbvNovyKrin59TxTTsCKHgspjuhVu3Md9cv+vV9oGCv5+Wya8Lx3wmvsey
E9+XOhWx23En9scwjYveeJ9PpHeuWb9XHNGD5OK/uH+8aI2qv7yaRLtDt3o4
8w1D/I3dhefk8D49r/eYFWRB72j2rWYjrOfoj6/W9Y9ByGoUXoL96ddPb/rh
YRaM+a/nn1tHoIlSTmjeGBsaRC5E/c7A/nviqak2nscGiUxn4CfQleLvZh6R
2L8WXF62DO9n1vL8K5peuL+WZlR5hJOojyGo5eLIxXpIcFagCfSw1tsoK5CC
/esWCM6JI5DN8WIBNv56scPzK0a4fzo+s7RAHhTQLhEC/59v9JeKXpDsONg1
TEnFOpHo2fiT6Yp3uH/sWBo2fZZAg18mNQ6p0OCrWTb0soJAxk/c9xmVs6AS
MkQDnTHv7vDOa2tkw4kapKKVJY7EPWK04v7v6yL7rEbVJZCC6C/udjEOeEdU
Vsri+4xoLtQPjWaBtH/rRwXMc2tKOrV2D9KgLPpzfoM1iea5iBZlXMQ8l7LQ
QRD3S7NPDtcOcyn4/oWXYcwhUBUjMOefLgt873tEfJnGeVMYrtJtw4bv5srd
//8+YYuJx0thcQ4kv8vcGtVOoJX9zbqPdjAgiFLYsMsY73trUTnfcQZMe83f
y8W8G+doNxmP+cgzIi42F/eXYmHpr3OzufBIxmEkJRrziMb203ER47i/BNWv
MydQu2PK7aWHKUhSSrsR/ZBERsNPc+xCx0DM2EJlKeafl+eCAhv+jYIp83rl
11Mk6kwJefA7i4LdZ2UnV2C+Wyz1ZJ3R4Z8gG3k/bwPOU7dhE2vzuhFo/uZ4
rw73Cdf+n+CE+8uCySHyJubfmcm0fOlNQzDv3FHPVYhALXYblzRuoKF57+Yo
Idxnjkp2zdcK4QLrRP6VZTgP3O8tM8/CeftvwCBQcjOJqqXmknwMNiTI+1X+
//+9F2cY891ePAZ37gz438P7Ielg28Nxxzy8toQ5T45ExoarjE1FWDDvumHz
t1kSlbyIvay1hobZpRfyLmP/9HBjd6oI86D+sN0yDu7vq5dKaecNc0G/Ov7F
hXkS6Ox7Axfx9RRIbeL/3YH1ozRyWzLbaRCezb+uApj3Clh3Hw4qMYETLR16
d0AckdrVbnLKHOj7Zv/htCCJkpZ8/9Tzgg2zjTfEstPx/a30zPqczoYSTuu1
hXIS6Pku2c3e8li/04XNctLYvwTIub2LKVD6ltclkkGiQqWqJRv7meADHRIu
mOfCC0ij5a48uJEjbr0jmER8qRItZqk0FJkVPEt9QqIzcqyQx9j/xg1KtG4Z
kWi2tnBreTQNX1687VDC+UcGjDecGmaD58T7jLguAi1ykS3epMCCknTJJ/3O
uA9HzT1sU0jBITfeFxXcP5f8/DZ/wICGtZU7/6Xj+eYv5tuR7oj5GFTPl90k
kHVe3ydF3F+EHnRbug3i/CvYlSuH5ytb6fzKD/OdoJ7mZXOcXxqLCjY/YRDo
Cydv6uvfESh5W+4otBv3Z8m4KD57LkQ/CpPd4YX7zHr7vDrMe2ZaRmGdX3Gf
undMkFc/Br92BuzZ2o/9cnWawnAlDUkHok7LYv4bqUJSh0y4EMmWMVLB/ve5
aLRv/kEartnN61KJwvPMDWWdiKVh8LHMk+99BHoi8nH7wwEWnC5fgoSr8Hn2
U2LNuP8vkxsP+IL1dNjKtUP+NRdW2J7oaeaQ6Hfww5Yvxjy4HbBAogrPlywM
Z6/Hefax6Wn26yuYp+Ywb2r/ZMCcocnY4QTcp71nVPw1aEhpCisDzC9+Gxs0
4rEeZ5zuiC/kx/ug3hmIjvPgaNFkhf9iEvGu5MtebGHAvE2KXrWyeJ6OdeLR
7Tz49VHvzcZsEs09EPDo41oW3OE5LBxxJVCkkljie18aureaR3pFEuim9BKd
HUtHYIddKp2P/VMcTSUU7aKAeGghw8X+qHDkKVP8H+5roS9trxqQ6F3xDd/+
Ch48byrTDMc8tbW9lF5tNQqTf+3ThjoJlC6yXXHzSjboRyU7T0qRaLOTXK3u
cjaEfPeVtcHz3OxvsA+MMJ9+MHIXwv52X6NvS6YFFx6qB5bb4v5SVhRksv8h
DTuLl57/gPNNslkvvyCTDVOF+qKnjhNIT+/LvvJXHMgJ7JwXLU6gC9ln/PMv
sEFwnqC8Ku63316OeyvGjcL2OZs2vX9OIjev7m+fDbkw9w2xfgCf30Bh31Vj
Jw6UJSTMJ7zwPg5xNFfgfNdU++z3EvPptu3G+0LO8OCSg4zptpcEysuZll5x
mAum98oC1uDzF55dppMriP1kypBIvIR5WzK65tAW7HeuKZJn8DxvrL6+QRn3
owx3MzGbNwR6zUjbXjw4Dtr3G2+RWL/IuuxfTA4XdGKunGr9QaAGd/N/3x5x
oCeukLiB+37bc1+XbX8pWE2j65M4DzxlTq0x+80Ar+sM9fgrEqh7a11S1kcK
Em4oGAkm4v67Yo/ZcR0m/Grx7HpnSqIFJlavqAgKhL3jJA7P4H7au/T03ZUM
+C3/77U45vlIXYWa5BIKftbcTTV7jPOCaTDnyAIOMK7LLpjGfb3LtfvRFpx3
8icv6B1/QiDvYSMn9cPY73qM411VCFR4MJh2ecAGKjtdfwv+fHsPec0Zywm4
beDWtHojiRapG4fpCuE84P+ybekj3K9fHZDZQ1KwfHQg2KtdHBUvqssvtaKg
c1q1lY3zny9svqb9aqy3vEiyYjuJ1n9vnZWy4oG9UoBnN+Znu+yM83c9uPBX
KaqrZpxAQYvOCO1MoiBiaH74NNbPo3v9zUqqmC9Ltz3zxrymOSNwM0d7HMaM
XLXmYh5kS+8ZXLScAUuvqQpEt5FIZGkIEfEV85fTxRitgyTST4kva+T/CeMZ
6siCJBF955rzwhEObIJDkcceEmikfeXqXhsKfL8Zlg3ifBV5VGDbrEBDzmMd
O6X5BAoUuGxy9TkFyWPCa1vC/+87D+fqv6dhW+Hd6654nzdt1fp+25YFuVv2
Nzi6YP/0an+t7z0AU4eQDR/O28PFx1JcYnhQ16Ey2I3vJ/1KaJJ2HBOWWMfN
nPaVQGnxPjmAefbgwsdaeUMkOjdTpntvmILiGple1k0SnVyyNVVpDxeyM19H
ykxgP1J0O7eqiAF+6sLVsfkkariS9+tYBg+KgxSCLc9hXq4gymsCx0BV2DL7
DOZvm4EUK3HpcUAt96MaUkl0RE7J36iIgmAvwdC1Nv//PUKd1soZhDKF9T25
NiSyXLTv7Qqaxn2w4+pK3DeYW9QMP1EMeL694kZND97XTsm8a5JMeDfswUKY
TySfa7/oa8V6jwi1FLqN+TG687AGGofMO58khz+T6ML1uO9ekriva+y+K4H1
Hz+14WCSEg3vXYNrdIVJVDlnLHLHykk4cXyH51ogkc7RA4or8f3ulY3Z2bGU
RN0hNkdL77JhrFvjd85FAsX0vBb0e8sByS2lnlWY/2csjRUE+CgoC9R2oPeR
aLD3dI53HguiaitcO08SqDLZRe+EEQ173VQRXzSJVFmJBjpeY3DMO3RzDuaj
1aG7V/hp4z4QIv88BfPaTb/PgjUTDFgRs32zLeapbYcy/zgKcuCH9B7PHVj/
WywFEi+tHIdnGRnyvGLs7/xu+rYmNMzER5su7CVR9g7t9/OxfheLilCncD+6
M9BwSj6OA6u1f8jfSsb81XnfMHEjC6r2+oRzTEj0H8jXTF4=
       "]]}},
    AxesOrigin->{0, 0},
    PlotRange->{{-2, 3}, {-8, 2}}], ",", 
   GraphicsBox[{
     {RGBColor[0.6, 0.4, 0.2], 
      RectangleBox[NCache[{-1, Rational[-1, 10]}, {-1, -0.1}], 
       NCache[{1, Rational[1, 10]}, {1, 0.1}]]}, 
     {RGBColor[0, 0, 1], PointBox[{0, 0}]}, 
     {RGBColor[1, 0, 0], 
      PolygonBox[
       NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
         Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
         1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]]}, 
     {GrayLevel[0], PointSize[Tiny], PointBox[CompressedData["
1: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
       "]]}},
    AxesOrigin->{0, 0},
    PlotRange->{{-2, 3}, {-8, 2}}], ",", 
   GraphicsBox[{
     {RGBColor[0.6, 0.4, 0.2], 
      RectangleBox[NCache[{-1, Rational[-1, 10]}, {-1, -0.1}], 
       NCache[{1, Rational[1, 10]}, {1, 0.1}]]}, 
     {RGBColor[0, 0, 1], PointBox[{0, 0}]}, 
     {RGBColor[1, 0, 0], 
      PolygonBox[
       NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
         Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
         1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]]}, 
     {GrayLevel[0], PointSize[Tiny], PointBox[CompressedData["
1:eJwVmnc8le8bx+2RdfZBkiSprJJI4zqFpCIU34YkJSmEJIkSSiUjJKWhkh0t
lHAulGREyN577z1/z+8vr/M6Xud57ue+7s/n/XassbpsYs3FwcHRw83B8f+f
bg5TKf39kxB+lZukNkhC2xaZ3CG1CfBSdI8XFmCgnlO1r+HQEMyJv45QrCDj
4g7WzJnxBbiZ/4rVl0PG7x3CXZbBC0CLu5BU946EXGJRbpOBbVD9uu66/3kq
TmmutGZq9sPRUl9/doAIOo/P7lqQagaPRo99FypEUKfWWvX8/UW4MKw5uSma
hkZPRKPMpebA4UVHz2YHClrYrpxzXdEOKzq3/usMoWPTAYNfb22qgCfv7bLS
SwlUog+lBZxcgIJDFC73q2RU1SkZUWnJAfuC6wLVfTTUlfvzdah8Fvb9aip2
i2Riw5yqmVNmCQhojX1+p8jAyhVcWx79G4JVlzcvvvSm4T59z3GT7bUQ9zVX
P0+UhsE1glUTqvNQE7E5MciRjHtuW3akaI/AusyLE3WhDPRInZi0TOqC2ZaK
9xubGei80e9HzPkpeLY3LFkzmIEPuWXO6VvNwc83lfmlGySRouO5iXJyElgX
nerPRUrgfOHmNw0BIzDauWHXzRtU9NKpcG1qDWH7/2TzmHtQ8RvfQyW5myOg
HPQ0brOxAFIct4ucsJiH44fSJHw+k1HxJr15rK0GuM2Palhl0fDP6ecbuL9P
wAqDQzKze2g45yPryrc8Cw/17pcP3qBgIv3OKt/CUZgXJx2c0RdHw2sPFdx+
L4L1tPe29ZoMvLw8fnWH0Aho6rlQ1NZQsWr4ceOFbe3srQn85acMGag+YmGp
FjAKd7ljRA/epqHFoL43xawbfLtfeB4voqDkC7PESPceqM/S8F8hxEAuhUQJ
zVMdoNo7JTdKkcTzx+51f9XhZL2mLz0//pmGUuuj/SUn2yC04tJs3EUJjNpe
f1AwZR6GXN5lhQeLYcudkC8FV2cgx3uTDncFHYuP/OeiKFwC4kHCLr4sJsZp
3Pv04+4QKBYeqIq1pWJYyj/OR8Ej8Fj7zNeW9yQ8nL99p4LGEPDK3R7arknD
dd+7X6/7MwV1LkMfv/ym4dR9jgzHDRNAf6x8bYOAJCbONWdG8k2BgKlqpK4s
FceSpXf4+fVCw5JBwcgsHZNWKHlnr+sAj71rbm7jpiPH0e+ZC1VNEO5dP3X2
GwllHssEFtXGsUlGMslnLUVQ5Oxpzie/R8BwsGD5XSwZN4d6/8xjjEHnl6pa
gwE6Pt9ZHLlY3AnJcoJzIqMMjFtPkVfc2wxzd/6KvZ+iIo0y9+U7tQws+yxL
jChMVEbRHcxv09C2OivGQZWCPQuftR+Wf4exkvdd74zoSONIFm4NLYby8jW3
9iRSsLdLJCG1tgP6l71t2v6RULg27reFdCfI2J2gdAIFZVixyqJfEtiu+pw+
IVtp+PuOUM6XgmXI2qXVlahOwSbNoappt0mgzLGCdyRScae+s86lwTEoX53+
y3yRibiCI0sN00HM8Bqj4hwFM69/O6j0Kwd+1E+3nEkkI6tvo/GZ4Ubga2mX
C+ETwUOrk9Qivs3A9LONHB1txP7ZF27Qqp8D49MZu/s4aHi+z7QzmjkD7CRj
+lACA6/f7siIfD4PX52Xzro/pSGJN4V/oKUCyjwm6p+vIuHIzxzyIfokOMR3
smXyJfBN+0STjMIkbOZ/eMPJioH58vtTT2q3A4WfM/lxHA27PtzsyrrbAfuO
fy9LIOapj/EraD62FzZI60h7Etfvq7BadTurG8okI3LIb2m4JCdbLoy8rJOh
Nz3jchh4rEHA4otfBhjc3BydMk7HO6tPiIYXT4BiW6T/7jgyHlOpP2VRVc6W
hQ1ra5CKDaNCqdpHR6GDV27D5DZxdJmxvrX93zSE7ZW/2dxNQ/2HhrRPt3uA
8/7bw+onKGjYtuaxf14fYNF2+6ibZGy5aBPgvmoUXJaZvAK8krhlR/1a9Wlu
lpRk+Pt1W6hI/3dVsHVgCtoVjjc/Lqai5Zzr9wMp3WxBWZ/C9gPE/ZZeizDn
HYbkWwfCSyoZOBb7+gRTbBZe70pQXAwUx0jb3ks9Tb3QKG/caPGOjj/+M4oq
VuoArgY6T91LJrrH5sY49FeB7wcnp8vtVNQxPza8Ytsk3Mhd5653iYrJUk5h
u417Yd0hxdDIJ1T84Kio/UYvk72pLa2z4AoDF9MTrkj81wsadBWVH3x0tM7L
vm+u0Q2nphfiWVQqXloufnDqZD+orNrlm7ObiTLxPz5HrA4Hc0edLndHCWwx
0qnf6fMK5L9Li/Po0jDjfUlphmIrJMVEhlcMk7CsLr32Dasf4r+M6Vaq0on8
nLJV2sLFytx3w3lYjo5ab11KHmU3AaNySkJqJRNrvb43ePUPg3aLecGdOiaq
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
BZdbCPFKDbc76xn4P96H1CM=
       "]]}},
    AxesOrigin->{0, 0},
    PlotRange->{{-2, 3}, {-8, 2}}], ",", 
   GraphicsBox[{
     {RGBColor[0.6, 0.4, 0.2], 
      RectangleBox[NCache[{-1, Rational[-1, 10]}, {-1, -0.1}], 
       NCache[{1, Rational[1, 10]}, {1, 0.1}]]}, 
     {RGBColor[0, 0, 1], PointBox[{0, 0}]}, 
     {RGBColor[1, 0, 0], 
      PolygonBox[
       NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
         Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
         1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]]}, 
     {GrayLevel[0], PointSize[Tiny], PointBox[CompressedData["
1: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
       "]]}},
    AxesOrigin->{0, 0},
    PlotRange->{{-2, 3}, {-8, 2}}], ",", 
   GraphicsBox[{
     {RGBColor[0.6, 0.4, 0.2], 
      RectangleBox[NCache[{-1, Rational[-1, 10]}, {-1, -0.1}], 
       NCache[{1, Rational[1, 10]}, {1, 0.1}]]}, 
     {RGBColor[0, 0, 1], PointBox[{0, 0}]}, 
     {RGBColor[1, 0, 0], 
      PolygonBox[
       NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
         Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
         1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]]}, 
     {GrayLevel[0], PointSize[Tiny], PointBox[CompressedData["
1:eJwVl3c8le8bx+09zl62UNEOZd6PUtEgkb5JUlESJclqUIjsSkgqlRWiRCry
XCQjkp2Vvcne83d+f53XeZ3znPOcc133+/P+yJ27esyWi4ODY4Cbg+P/jzHV
hjH5OrUo8InK5rpzgnBlnUuvXB439m+uYqp/CwFUy3zft2yfwH3Fkaz7aQpw
iC648m92xeXXeF+duUID05JjTrMR3NiI6U4fIpUBI6lKkQ/1ppEyrh7UVU6C
Zzoqn4uZa+hF0MNXZp8ZYHvg0toj+jS6ZPQx/O5FErSKTi56h42js2Mh/gXb
yLB/5MDyccFJXLXkTkkX7wqOCb9tuHU0FD1x3/h6PJQPbDRu/ShMbEdt5fKr
S0m8MJnnnKFKXEIByZfiD6mRIHcsplrcegW1Bh2lrBcRAJ/q5reRHyeQHeWl
3ZG9VEhjMLIMBOZQuOjDpOYccYAqf6sKrhB0/emTFVVHIhx7cZcSxhxER/LX
2d5nfx7j76ND7/y6kUwqt/lgOwVGe7Ovxs6toBKnmwYbPIhgFDghJX+WGzsV
V18meJoMY4kn7tOC55DTavmSvg0BJsLSw543zqFyz+sfhahUuI8rGeta9KGC
z9e5iyNo0BC8kuoR8g9Rw79i6VkC8Fa/ojedRwS7/8Rkt76WFCjfWJ8YGziA
NEPDMvQFhYB6iKbMOriIslWe/rbYSYP+Iw9k4kuG0aXRwO1+LAkILqiZTupu
woONE5/0KZLB6PSb0rrlKdzag3iwo1ESSB0P73VpjeML/FPMxoMkONCZOdcu
xY+ZVOkcP+lFB3i8+XZKWw9y7fNZ8xwXh03XnWYf6k2iPxSsNFdNBGQ3CSnW
BQlgI9btyhY+ojBNanwqoT6NHli/J05VccNRiTziJ9EBHITzdCJu0EDcsOLv
/o29qD4lYkJljgWRIaGDK4Mz+IlbZu67QwQhnXUigWFYi0J3hayuqZHBkksq
YZzIA0Gs/1T/8RNhM6fwR/OUBbTIe2q/QgR7PpxbP4Xbr6GJHmafTzMBZA24
H0WUzaK4kr77Stk0ODotXCzKmEc/sHcGu7/wAkdVq6mazmVcmnoQnl5nAKHu
bec0uQIlMTYEJLcyYTmuuW3nCX7s+6wm7c4nOkjHOTcfTujC06Wi7L+J0KBI
72xkcHUJigRfkcZuOmRyWZp91mpEt6UcNTWqhcBGG2Xe0ZtB8TJ6XjfE2PP/
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
       "]]}},
    AxesOrigin->{0, 0},
    PlotRange->{{-2, 3}, {-8, 2}}]}], "}"}]], "Output",
 CellChangeTimes->{{3.676470783775257*^9, 3.6764707939130287`*^9}, {
   3.676470829920199*^9, 3.6764708640944843`*^9}, {3.676470903722499*^9, 
   3.67647093557904*^9}, {3.6764709802999067`*^9, 3.676471004411406*^9}, {
   3.676471050842946*^9, 3.6764710656836853`*^9}, {3.676471131653288*^9, 
   3.6764711501049232`*^9}, {3.676471297459279*^9, 3.6764713164277487`*^9}, 
   3.676471923491651*^9, 3.6764719665285807`*^9, 3.684634501349966*^9, 
   3.684635726265483*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{".75", ",", 
     RowBox[{"-", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.25", ",", 
     RowBox[{"-", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.25", ",", 
     RowBox[{"-", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.75", ",", 
     RowBox[{"-", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "/", "4"}], ",", 
     RowBox[{"-", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{".75", ",", 
     RowBox[{"-", "3"}]}], "}"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.6764713623800364`*^9, 3.676471367359054*^9}, {
  3.6764714279189*^9, 3.676471434549323*^9}, {3.676471483974584*^9, 
  3.676471491130146*^9}, {3.6764715213396587`*^9, 3.6764715220939903`*^9}, {
  3.676471886330518*^9, 3.676471958465077*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.75`", ",", 
     RowBox[{"-", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.25`", ",", 
     RowBox[{"-", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.25`", ",", 
     RowBox[{"-", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.75`", ",", 
     RowBox[{"-", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "4"], ",", 
     RowBox[{"-", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.75`", ",", 
     RowBox[{"-", "3"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6764713678019037`*^9, 3.676471434956658*^9, 
  3.676471491934902*^9, 3.676471522490788*^9, 3.6764719147354183`*^9, 
  3.6764719588293467`*^9, 3.684634501401786*^9, 3.684635726302536*^9}]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "Problem 3:  given a variance \[Sigma] if you push at location \[Mu], with \
velocity ",
 StyleBox["v",
  FontSlant->"Italic"],
 " (everyone not in contact with the object moves at velocity ",
 StyleBox["v",
  FontSlant->"Italic"],
 ") , and variance bound ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Sigma]", "max"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", how long before you need to switch to variance control mode?"
}], "Subsection",
 CellChangeTimes->{{3.676456729376965*^9, 3.676456792954073*^9}, {
  3.676462023205823*^9, 3.676462123761077*^9}, {3.676462183093297*^9, 
  3.676462186933276*^9}, {3.6764622615292883`*^9, 3.676462261794133*^9}, {
  3.6767079936854773`*^9, 3.676707994070787*^9}, {3.678013488380001*^9, 
  3.678013506864674*^9}, {3.678013813226904*^9, 3.6780138627633266`*^9}, {
  3.6780151844238043`*^9, 3.6780152766910753`*^9}}]
}, Open  ]]
},
WindowSize->{1280, 687},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification->1.5,
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September 9, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1363, 31, 498, "Section"],
Cell[CellGroupData[{
Cell[1968, 57, 684, 11, 138, "Subsection"],
Cell[CellGroupData[{
Cell[2677, 72, 294, 7, 43, "Input"],
Cell[2974, 81, 173, 4, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3184, 90, 551, 16, 59, "Input"],
Cell[3738, 108, 2382, 69, 131, "Output"]
}, Open  ]],
Cell[6135, 180, 790, 23, 106, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[6950, 207, 1457, 37, 144, "Input"],
Cell[8410, 246, 120213, 2139, 361, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[128660, 2390, 48215, 815, 361, "Input"],
Cell[176878, 3207, 48240, 815, 361, "Output"]
}, Open  ]],
Cell[225133, 4025, 2812, 76, 135, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[227970, 4105, 1779, 44, 144, "Input"],
Cell[229752, 4151, 66787, 1204, 361, "Output"]
}, Open  ]],
Cell[296554, 5358, 2446, 65, 89, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[299025, 5427, 1937, 47, 169, "Input"],
Cell[300965, 5476, 42478, 832, 364, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[343480, 6313, 233, 6, 71, "Input"],
Cell[343716, 6321, 11178, 326, 583, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[354931, 6652, 12339, 332, 625, "Input"],
Cell[367273, 6986, 7006, 206, 339, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[374316, 7197, 7852, 216, 399, "Input"],
Cell[382171, 7415, 6954, 203, 339, "Output"]
}, Open  ]],
Cell[389140, 7621, 7203, 205, 359, "Input"],
Cell[396346, 7828, 5053, 141, 511, "Input"],
Cell[CellGroupData[{
Cell[401424, 7973, 297, 8, 79, "Input"],
Cell[401724, 7983, 424, 12, 75, "Output"]
}, Open  ]],
Cell[402163, 7998, 1208, 36, 128, "Input"],
Cell[403374, 8036, 1381, 43, 126, "Input"],
Cell[CellGroupData[{
Cell[404780, 8083, 2393, 64, 201, "Input"],
Cell[407176, 8149, 237247, 4056, 395, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[644460, 12210, 2661, 68, 216, "Input"],
Cell[647124, 12280, 113073, 2018, 396, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[760234, 14303, 2636, 67, 201, "Input"],
Cell[762873, 14372, 84803, 1560, 395, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[847713, 15937, 1927, 50, 157, "Input"],
Cell[849643, 15989, 36284, 682, 326, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[885964, 16676, 343, 8, 43, "Input"],
Cell[886310, 16686, 6016, 181, 337, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[892363, 16872, 582, 13, 75, "Input"],
Cell[892948, 16887, 605, 12, 34, "Message"],
Cell[893556, 16901, 377, 9, 43, "Output"],
Cell[893936, 16912, 211, 3, 43, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[894196, 16921, 157, 2, 65, "Subsection"],
Cell[CellGroupData[{
Cell[894378, 16927, 2196, 59, 251, "Input"],
Cell[896577, 16988, 703, 13, 84, "Message"],
Cell[897283, 17003, 252, 6, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[897572, 17014, 2426, 62, 147, "Input"],
Cell[900001, 17078, 705, 13, 84, "Message"],
Cell[900709, 17093, 705, 13, 84, "Message"],
Cell[901417, 17108, 705, 13, 84, "Message"],
Cell[902125, 17123, 559, 11, 34, "Message"],
Cell[902687, 17136, 474, 10, 43, "Output"],
Cell[903164, 17148, 704, 13, 84, "Message"],
Cell[903871, 17163, 705, 13, 84, "Message"],
Cell[904579, 17178, 705, 13, 84, "Message"],
Cell[905287, 17193, 559, 11, 34, "Message"],
Cell[905849, 17206, 549, 10, 59, "Message"],
Cell[906401, 17218, 546, 10, 59, "Message"],
Cell[906950, 17230, 549, 10, 59, "Message"],
Cell[907502, 17242, 557, 11, 34, "Message"],
Cell[908062, 17255, 474, 10, 43, "Output"]
}, Open  ]],
Cell[908551, 17268, 192, 6, 43, "Input"],
Cell[CellGroupData[{
Cell[908768, 17278, 1089, 27, 69, "Input"],
Cell[909860, 17307, 703, 13, 84, "Message"],
Cell[910566, 17322, 703, 13, 84, "Message"],
Cell[911272, 17337, 545, 10, 34, "Message"],
Cell[911820, 17349, 703, 13, 84, "Message"],
Cell[912526, 17364, 557, 11, 34, "Message"],
Cell[913086, 17377, 329, 8, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[913452, 17390, 1389, 32, 69, "Input"],
Cell[914844, 17424, 703, 13, 84, "Message"],
Cell[915550, 17439, 703, 13, 84, "Message"],
Cell[916256, 17454, 705, 13, 84, "Message"],
Cell[916964, 17469, 557, 11, 34, "Message"],
Cell[917524, 17482, 234, 6, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[917795, 17493, 8552, 199, 754, "Input"],
Cell[926350, 17694, 56749, 1032, 390, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[983136, 18731, 56852, 1034, 390, "Input"],
Cell[1039991, 19767, 56991, 1036, 390, "Output"]
}, Open  ]],
Cell[1096997, 20806, 207, 4, 55, "Text"],
Cell[1097207, 20812, 2716, 78, 219, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[1099948, 20894, 3201, 89, 244, "Input",
 CellID->70294289],
Cell[1103152, 20985, 86216, 1432, 348, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1189417, 22423, 198, 4, 102, "Subsection"],
Cell[CellGroupData[{
Cell[1189640, 22431, 842, 21, 98, "Input"],
Cell[1190485, 22454, 9572, 285, 521, "Output"]
}, Open  ]],
Cell[1200072, 22742, 10006, 289, 588, "Input"],
Cell[1210081, 23033, 5152, 143, 511, "Input"],
Cell[CellGroupData[{
Cell[1215258, 23180, 297, 8, 79, "Input"],
Cell[1215558, 23190, 419, 12, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1216014, 23207, 184, 4, 43, "Input"],
Cell[1216201, 23213, 231, 5, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1216469, 23223, 1947, 49, 144, "Input"],
Cell[1218419, 23274, 20918, 430, 312, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1239374, 23709, 2037, 52, 151, "Input"],
Cell[1241414, 23763, 24553, 506, 312, "Output"]
}, Open  ]],
Cell[1265982, 24272, 1286, 38, 128, "Input"],
Cell[CellGroupData[{
Cell[1267293, 24314, 2270, 61, 251, "Input"],
Cell[1269566, 24377, 703, 13, 84, "Message"],
Cell[1270272, 24392, 703, 13, 84, "Message"],
Cell[1270978, 24407, 545, 10, 34, "Message"],
Cell[1271526, 24419, 703, 13, 84, "Message"],
Cell[1272232, 24434, 557, 11, 34, "Message"],
Cell[1272792, 24447, 230, 6, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1273059, 24458, 1717, 38, 100, "Input"],
Cell[1274779, 24498, 703, 13, 84, "Message"],
Cell[1275485, 24513, 703, 13, 84, "Message"],
Cell[1276191, 24528, 547, 10, 34, "Message"],
Cell[1276741, 24540, 703, 13, 84, "Message"],
Cell[1277447, 24555, 556, 11, 34, "Message"],
Cell[1278006, 24568, 545, 10, 59, "Message"],
Cell[1278554, 24580, 544, 10, 59, "Message"],
Cell[1279101, 24592, 547, 10, 59, "Message"],
Cell[1279651, 24604, 556, 11, 34, "Message"],
Cell[1280210, 24617, 568, 11, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1280815, 24633, 897, 24, 69, "Input"],
Cell[1281715, 24659, 703, 13, 84, "Message"],
Cell[1282421, 24674, 703, 13, 84, "Message"],
Cell[1283127, 24689, 543, 10, 34, "Message"],
Cell[1283673, 24701, 703, 13, 84, "Message"],
Cell[1284379, 24716, 559, 11, 34, "Message"],
Cell[1284941, 24729, 545, 10, 59, "Message"],
Cell[1285489, 24741, 547, 10, 59, "Message"],
Cell[1286039, 24753, 544, 10, 59, "Message"],
Cell[1286586, 24765, 556, 11, 34, "Message"],
Cell[1287145, 24778, 254, 6, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1287436, 24789, 1250, 32, 100, "Input"],
Cell[1288689, 24823, 703, 13, 84, "Message"],
Cell[1289395, 24838, 705, 13, 84, "Message"],
Cell[1290103, 24853, 705, 13, 84, "Message"],
Cell[1290811, 24868, 557, 11, 34, "Message"],
Cell[1291371, 24881, 546, 10, 34, "Message"],
Cell[1291920, 24893, 399, 9, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1292356, 24907, 6617, 162, 520, "Input"],
Cell[1298976, 25071, 34875, 665, 347, "Output"],
Cell[1333854, 25738, 41072, 792, 324, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1374963, 26535, 2032, 50, 144, "Input"],
Cell[1376998, 26587, 101897, 1824, 317, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1478932, 28416, 3322, 91, 269, "Input",
 CellID->54126742],
Cell[1482257, 28509, 107268, 1780, 348, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1589562, 30294, 914, 28, 43, "Input"],
Cell[1590479, 30324, 865, 27, 65, "Output"]
}, Open  ]]
}, Open  ]],
Cell[1591371, 30355, 888, 20, 478, "Subsection"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
