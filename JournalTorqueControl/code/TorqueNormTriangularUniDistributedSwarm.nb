(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1765986,      33560]
NotebookOptionsPosition[   1757584,      33311]
NotebookOutlinePosition[   1757968,      33328]
CellTagsIndexPosition[   1757925,      33325]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 "Problems: Torque Control With a Swarm of Norm,Triangularly,Uniform \
distributed Particles Under Global Control\n\n",
 StyleBox["Given a swarm of particles, whose positions are normally \
distributed, and a pivoted object, where should the swarm hit to generate the \
maximum torque?",
  FontSize->16],
 "\n",
 StyleBox["related problem:  shooting a railroad track switch with a shotgun. \
\nF = force provided by entire swarm\nN = number of particles\nF/N = force \
per particle\n",
  FontSize->16],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"]}], "/", 
     RowBox[{"(", 
      RowBox[{"2", 
       SuperscriptBox["\[Sigma]", "2"]}], ")"}]}]], TraditionalForm]], 
  "InlineMath"]
}], "Section",
 CellChangeTimes->{{3.676456729376965*^9, 3.676456792954073*^9}, {
  3.676462023205823*^9, 3.676462123761077*^9}, {3.676462183093297*^9, 
  3.676462186933276*^9}, {3.6764622615292883`*^9, 3.676462261794133*^9}, {
  3.6767079936854773`*^9, 3.676707994070787*^9}, {3.678013488380001*^9, 
  3.678013506864674*^9}, {3.678013813226904*^9, 3.6780138627633266`*^9}, {
  3.6780154731946793`*^9, 3.678015503683338*^9}, {3.684533968985187*^9, 
  3.684533971087208*^9}, {3.684542163365937*^9, 3.684542167980525*^9}}],

Cell[CellGroupData[{

Cell["\<\
Problem 1:  marginalizing to 1 dimension, not thinking about distributed time \
of impact
this is only a one-pass of the swarm at the object.  The kilobots are pushing \
continuously.  (math is for one step, real world is an iterative process)\
\>", "Subsection",
 CellChangeTimes->{{3.676456729376965*^9, 3.676456792954073*^9}, {
  3.676462023205823*^9, 3.676462123761077*^9}, {3.676462183093297*^9, 
  3.676462186933276*^9}, {3.6764622615292883`*^9, 3.676462261794133*^9}, {
  3.6767079936854773`*^9, 3.676707994070787*^9}, {3.678013488380001*^9, 
  3.678013506864674*^9}, {3.678013813226904*^9, 3.6780138627633266`*^9}, {
  3.6780154731946793`*^9, 3.678015502323708*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StandardDeviation", "[", 
  RowBox[{"TriangularDistribution", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Mu]", "-", "b"}], ",", 
     RowBox[{"\[Mu]", "+", "b"}]}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.684532736145203*^9, 3.684532744580744*^9}}],

Cell[BoxData[
 FractionBox["b", 
  SqrtBox["6"]]], "Output",
 CellChangeTimes->{{3.684532738975494*^9, 3.684532745205942*^9}, 
   3.68463443986845*^9, 3.684635658683772*^9, 3.684667984476264*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"PDF", "[", 
   RowBox[{
    RowBox[{"TriangularDistribution", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Mu]", "-", 
        RowBox[{
         SqrtBox["6"], "\[Sigma]"}]}], ",", 
       RowBox[{"\[Mu]", "+", 
        RowBox[{
         SqrtBox["6"], "\[Sigma]"}]}]}], "}"}], "]"}], ",", "x"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.684532574058216*^9, 3.684532603591757*^9}, {
  3.68453271452549*^9, 3.6845327153553267`*^9}, {3.684532754129568*^9, 
  3.684532765505777*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        FractionBox[
         RowBox[{"x", "-", "\[Mu]", "+", 
          RowBox[{
           SqrtBox["6"], " ", "\[Sigma]"}]}], 
         RowBox[{"6", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", "-", 
          RowBox[{
           SqrtBox["6"], " ", "\[Sigma]"}]}], "\[LessEqual]", "x", 
         "\[LessEqual]", "\[Mu]"}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"-", "x"}], "+", "\[Mu]", "+", 
          RowBox[{
           SqrtBox["6"], " ", "\[Sigma]"}]}], 
         RowBox[{"6", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{"\[Mu]", "<", "x", "\[LessEqual]", 
         RowBox[{"\[Mu]", "+", 
          RowBox[{
           SqrtBox["6"], " ", "\[Sigma]"}]}]}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.684532570795553*^9, 3.684532603974053*^9}, 
   3.684532715804618*^9, 3.68453276621266*^9, 3.684634440145928*^9, 
   3.684635658925296*^9, 3.684667984588026*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"pdfNormal", "[", 
    RowBox[{"x_", ",", "\[Mu]_", ",", "\[Sigma]_"}], "]"}], ":=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{
      SqrtBox[
       RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Sigma]"}]], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"]}], "/", 
      RowBox[{"(", 
       RowBox[{"2", 
        SuperscriptBox["\[Sigma]", "2"]}], ")"}]}]], " "}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.6764622317264*^9, {3.676462275865959*^9, 3.676462333498724*^9}, {
   3.676462386203244*^9, 3.676462388994298*^9}, {3.6764661175139837`*^9, 
   3.676466119114414*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"pdfNormal", "[", 
      RowBox[{"x", ",", "1", ",", "\[Sigma]"}], "]"}], "/.", 
     RowBox[{"\[Sigma]", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "/", "2"}], ",", "1", ",", "2", ",", "5", ",", "10"}], 
       "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "4"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{"sigs", ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", "Bold", ",", "8"}], "}"}]}], ",", 
        RowBox[{"LegendLabel", "\[Rule]", "\"\<\[Sigma]=\>\""}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.75", ",", "0.55"}], "}"}]}], "]"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<../abecker/SwarmPublications/JournalTorqueControl/pictures/pdf/Normal.\
pdf\>\"", ",", "%"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6764623486045923`*^9, 3.676462394184904*^9}, {
  3.67646603305241*^9, 3.676466039085231*^9}, {3.676467095974711*^9, 
  3.676467144451521*^9}, {3.684635469667963*^9, 3.68463547031621*^9}, {
  3.6846355483145647`*^9, 3.684635568532795*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
NJBTa/q0VoM40aX7eZS8jj1PX9NaOq1OnOdwuqLEuoZtLu6ZND5nTVzRqzY1
o17BnattdjvTQoiQdxRlRjuX8CA6L5L4J4OQCZzdZnRqAc8PnepKiaggmpz3
5AgdncPd3DNWmak9RM3V4LtHz89g05GuI+zCK4RRp8GCiuIUzo85sfz1OxeE
OhgTH4CM61Lt2sPmJECYQ9agt2AUC6blCXI5K4HINdHWoYwhPN6g/bflgz5o
97SKvGnvw9ubuNh4O6zB3Yz+3O3d3bjJ4MTIvkv3QIpWVTJerBVTtSjxpjWF
QsFlh2s+z+px2h4tEzaZBNB6Y15f0vQVr14rr8B6r0GoWjjU42gKFhenb7T5
/An0NToeCzjlAU1NlEF2VRl8k0jbp+74HdiurN8TpKiFgJKDRrEhPcB+rUIh
dLwbRlX/5LddGIBXpJ+aPUr9oP+O2SH82jB0XC96dZ96CGJGvI39ZcZhnKZA
XcV0Y36PJE4ULpLB8GLTwbZLJODa7Ttxa30KJrNitPhrB8Eq7ZFnXd8MKHX8
Vh081A8UN/7oLTUsAVOnIJ+wdQN8P/pzfLx9BQpYPlxmZKoBz/FBQZryNaBr
I41/jC+Dy5x7pIO1KBAWr2kaDf4Et0XyDmVfoETRT4JZLKhfg9XxAxzvlanQ
woMkvbiziWAGXj9/nKVGkWfaTb7cCYWaosG/8/I0yNtLfjfjSU9YcCNb7ZGg
RV2MGX01726BiERHw83DdOitTfjeit36cKjr9cGgffTIIMWJz1xaGa7VVqaJ
iTEgW7nq9IJ4cagRP1uSeIgRXbU49qb/6w5gCskqHeZnQq0zVScbzFYJte7p
OJ09zOjedMzTzqVuYv21WnkNFwvq+ClUf8n6G+H8UdFZmZYVZa3zFjyZzyRG
PwmsNNOzocMTV5XhUzDBYIJ5/ZbY0GwO55jGSRvCbD7EqGB9DVMYvGwvszEk
eq8FK1TSr+LPLfuovsp5ELl3TqET7Mv4FdP5t22WccQ9vtRPa2KLWMRyeIi5
4BMRLuWmkHd8Hg9e+ffNTb6BGB9e76tVnMX/GXfrfT9LJjT/O0t6qjqNC2X1
iAtLDODZonrXCU3idsYl34SAPdDqqvHQOnEcWwnc+Tr19gR8Fghp0coexnK6
9onfzp6Hw+ySpmtlA1ialF7x+b0FJPErNemt9+DfKnF6u/ScQVbUrI9PuhNb
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
6S3PtdfNODQkwqa3tNUct3jsmrrlLXPmvt8MiMnc8pYmB50CIorfb3lLsfHM
I1/3f9jyllKDf2J9yJ+3vKXtiWQTEcBb3tI2qzh9Z0PZ/7zlU2tSOfe3LW8Z
pj309Hlr9Za3bKr8cjkmp3bLW74YfLGj7lXdlrcMOJZFpR9dv+UtdbkvPxNW
/Z+3fNL01dNuqnHLWxZofr2rp/d3y1vyDjOZPjNq3vKWCwMpY08FW7a85b21
ad1Ej5Ytbxklocv66l7LlrdMteOWmuZr2fKWZqBzS/Ra85a31Ev53Sp55u+W
t1QSCDVn6W7c8pbRR1BrrOH/vGWBP2WtfWD9lrfcn9M4NFNUt+UtLx89EXm3
q3bLW3IX+oT4UX7f8pb84kTwA79vW96SlsxdeXyhbMtb1pdHqOxtwVveMqHA
0+q2S8GWt7QZ+f3yseaHLW/JkLzuLHwge8tbMmbfWZL4kLnlLZmF+Si4H6Vu
eUvKnIow3cIk2PSWCR1O42zPnsKmtxQMDdPlT4mATW8Z7OVyx3R/EGx6S216
2ojKBB/Y9JZFcmK/eD67w6a3rPi/62HTW+KjN6ldklxg01v2hl0U2vHdEza9
pbjgvrEXL/xg01s+dq2/oxXwCDa9pXnSJW3ubVGw6S13MQsXig3Gwqa3zFM7
HLKtJnnLW15t0eOhN0vf8pYNCjNR+n1vIChX13fhZhfc0Nj/XOJN05ZvzBui
oEzu+bvlG+NOjakUfm/e8o0zcqmkCYOWLd/YZnA0TSmgZcs3Un4jRPk3Pt/0
jQMONatuG7/f9I0PlfSt6Lr/QiIaDM/qmYe9kpEfv8U3bXlCqwnWlu8X3255
QkWqxm2ebulbnvAt5dObSdwvtjxhbLlKo7t1HGx6wtDylsv9dlGw6QnjJXs8
um+FwqYnnHjYr/zfLn/Y9IQ8uxRXdz+7D5ueMEJSizWNwxU2PaFA4em5HfVO
sOkJ0/mTGlUFPWDTE1pp19r3zzyATU8Yejq3d84sGDY9IcPEuoHko8ew6Qmp
ngfmSvA+g01PWBE4Emn6+PmWJ2whFci97X655Ql3oKTtp45mQarX9OStX52w
L+qmWY9205bfa+so7Hif+HfL7505mpOe9KR5y+/Rar/+uw21bPm9kKT48BN+
LVt+z1s+UD/JtmXL7wln27GYzTZv+T1Kms4/Q8LNYCyouNJnPg8u3vTXlWea
trxc1pOOjtq977e8nKhCA80h1owtL8cbyvN57GzKlpdjsayk5nmQAJteLlzt
etGthWjY9HJUukOP/rsSDpte7k7kDi1u9gDY9HJpckUJGge8YdPL9d1INKvX
uAObXi5DylHsUcRt2PRyvlbFj+sbvWDTyxnIv7h92O4hbHq5u3vJ5pwNYbDp
5X5FsXqNZ0VDWdq7MNlb3UBbsttlB83fLX8Wamc4syzUvOXPoi6LuX1daN7y
Zw35u1P3bpzPTX+mS6MWU7xxvjf9GZHybPWwfMv//JmN62nj2OYtr7V66uPx
k07PYNNrqekyxLisPYZNr6WrSCXz8EQIbHqtS64OnBc0fGHTa30T2ZZ7kuMe
bHot7Wsb0ym9M2x6re209cYOC46w6bXoLh0SlfnnDpteK0ufYZpd9AFsei0m
5fCz1y4HwabXusT5XyJXYwRseq0XdXP8Q6diYNNr3bfjUlFbSIJNr3U1+cjV
UtGXW15L+o8PTezV13DrUczAwdoOMD6pm52xp2nLR/FHfzvEdvfvlo/iXpI8
fMm9ectHWXhLmdEdbtnyUQprOpwJ3i1bPspt52D+tGvLlo+CQebERoaWLR9l
dE/ZGak0g1z4xGFvoXmwuCm/T0vg75ZHYrA2GQtIfb/lkQgnNc64zowtj6S8
h/3AfVLKlkfaeeasJFtcImx6pNI5F4nMiiew6ZF0aBzYn1NEwKZHumezfc6O
OxA2PZJW4iWngn/esOmRHhMLjO4ebrDpkZZtKtS/RrrCpkfKmoyTb+T1gk2P
5M3DQTXr6w+bHomvjcksICMUNj1SCL1JpVRbFIiIUwXxjnSBaJed/JGWpi3f
8/z3uY+9VM1bvuel9/w9357mLd9D83Z+75erLVu+J61gN8552LLle+xLJN2n
1Vu2fA+ejozYltu85WFG/oS2+FjHwqaH0TNiir+cFwmbHoZ3p9fxI5qPYNPD
nEEsNWOSfrDpYTS66Vcqz3vCpodpPmDNdobeBagCkDNDwSDsHWi0sMlu3vIi
1Kdkv+eda9nyIiyKzUftN/Z304ssvS/zy9o4nk2PwP3nRj3PxnrZ9AjB4ukP
rvq0bHmEAz6+fm2HWmCz3x+VKDtO2u4Em/3+C5mHrpeHOsJmv3+O30vbVskd
Nvv9LzJHi+oqfGCz3+95v05IvTUQNvv9zxoCHTTvRsBmv19eUul56q+nsNnv
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
J38Za5zK4PqpRuGcl9OtExhcP907bZ97jFEcg+unu5ulVKcMRDC4ftoT+Khp
g2cIg+unHaNy+852+DKB0yZIlRm2Mkb2j9XHQr2K64sPNTv6BXpCWl+UM4np
Pw33B1xffFWzIO2gh5DWr9T8JtpqeQpp/Spmg8sXZ9gf16/u9+evXqkjZHA9
6NZPLZ+2Vh9aj2FVL+6eDvcTXI8ZOaLpwz+4n+B6xKLRyieGuAhpPSI44WJC
JMxv9H77f6NVLkCMvm9vGM3uh/d/9P1YQd72JrifoO+HGupYDun2ZtD3Y+ak
Tm+F92P0faWimhcT4Pqg7y99uXVCNdwf0PfV+zKS6+B+gr6/+aLCtxFwP0Hf
P7nYSZ8F+6Pvt7SXTFWC8dD326eN+dgb5M2g7xttr5VeCtvR97MaZ6gthc+j
79cc/RirAr8Pfb9Jw1TvM8To++yKY9YCiNH3i9tLi1dAjL5v+qqGuwLGR9//
PnpC4FcDbwZ9//m8bV6SCbnk+9Hvvzu0T8wj369UbMg4eT+ffP/fxIqOMZ4F
5Pt/MkY+VVO8Sb7fU5ul+rWviHx/3NvzYSWVxeT76+5FDT1TXEq+37347pbc
a3fI92unJ3n/XFVGvl/o5qCWqF1Ovv93dOtNNZUK8n29TKX/FvdXkO9fvK54
0e5DJfk+d7L+vXpuFfn+yln3f8dFV5Pv2/4oWdVtfI98P3Dph9CIH/fI9y/v
t1FdlXiffH+mj05EnjyPfD/Kdll9RiKPfP9a0XL9Yb945PtZn/qcR6zgk+87
ifeM0tjLJ9/nTtj61zaCT75f9XBJ6HmI0fer/Ex2VLnzyfdzLE6UrVrFJ9//
4r7w788fPPJ9yRu+jeUneeT72XdSff1UeOT7x2eHBRw4dZ98n7W3e67373vk
+7ITN2jEbr5Hvh/V6TOafaqafD/m+a6apEdV5PsqKksFjd8qyfcP9Z+L9phU
Sb5/PC7rqNbSCvL9pE7Z77565eT7HWpjxydYl5Hvd7dfffmde4d8v69n43X/
ilLyfYvCqI0mP4vJ97/eTlvAl7xFvp9wqiLw3dqb5PsW4n2dfskF5PtWjqqN
nQ355PtXY2ZsqNPPI9+vH5wP6Pue5+Nn3TXnMPXZo22KrguYJ+tKV02045G3
e9Qkaa7n88jbw50zspYo8snbhz2vi9pqzSdv77vd23PlEJ+8/fsh98ero/jk
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
FmeTZ1Qs031nMo5NnuEuf+CYpQKbPOPc1HPVL2awyTOuzpPv9lnIJs8wM7/f
IK/NJs8Ym2yk4qjHJs/wdFk1OnYdmzzjV0uzXJkZmzwjuu5Kfaklmzxj1NVQ
p71b2eQZyVJpbf3b2eQZeVv15io6s8kzDjpO2WbuyibPmKt+VPrkbjZ5Rl9N
yowF7mzyjOs3Zhi2QYyeYfdV3/UbxOgZbycYuEyDGD1j3kM1j4swHnrGWKHb
roXwfegZO1703v7hxCbPiLva8W6hI5s8Y8uExz0b4PegZ0yYx7D+wO9Fzxho
q1023pxNnsH5+aBLCOcLPUOt/OmFHfps8oynk7IrguB8o2eYF+5b6qXOJs+4
bNYY92Ymmzyj+n1NOheuJ3rG3WlnX50czybPkJ769lkB5AN6xmKdIF0TyBf0
jLOFrRenfGaRZ0zzDWwa/pJFnnH3BxPL1LDIM265GyYqlrLIM7YnCA1+QT6j
Z8Tk7nA1TmGRZ+B8QM/YtsI9K+cEizzj2jS1gIf2bPKMUZKXgtV2sskzFr1L
M3ziwibPUFAqqo90Y5NntCybahqwh02e8bn243c2XF/0jImrjGYO82CTZyht
11zJgu3oGSOX7K/yh8+jZ2wbu8U8HMZHzzCKaPa6Ct+PnqFodVJTdHzoGecn
xRkK4fjRM3zPXr5VcJJFnvFPP9lvUwyLPENuf2kFaxubPONLr660/A42ecbp
osM2/ZD/6BmPm4c7/IB8RM+YLSX1dxQcL3pGplePnyf8HvSMgqk2X/ohRs84
1OUSVQcx9TNMsmurh8+jZ7B3nNOWh/xHz9BZ4D9s/y42ecZ4c83FEyH/0TOM
G25vGAXzFT1jYfD2H0cTWUz4tBkpj0tfMvPuXtGYDfujbwgmDHQlwXjoG2XD
FxVLi+bboG+4Ms0Sr+B40DfqCsceewTHi77xMO1T3wDE6BvVIWKRbhCjbyxZ
NPv7RPg8+kZOT2hBE5wv9I1t/hq8F3D+0TeGWrya+F80i3xjTrFVlBRcD/QN
1X3cguMwv9E3jv5YvzsOrgf6Rt3HSxtZMD76xiy7+7fq4Pegb8i61K03g+ND
37A9djmiB2L0DaOFVZeaIEbf+PtUNu0vHD/6RljlKKntMB76Rmvg1K31cP7Q
NxadmLMrHM4v+kZSTeCaNLge6Bs8D6t7X5JYzLWPZ/2rCoTMZE7XiWzIV/SO
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
Gh99ZKGz5KIV8P3oI0MG/8P6EOP/7+3/B3Z66Xg=
   "], {{{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1: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
Ag==
        "]]]}, {}, 
     {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV1He8T3UYB/Bzl5FxRVRoXKIkNEVaIk0jmVFJtG0qWhpKqSgNu+y99y6S
kTKLzJK9y969nz/e9/N8P8/v3PO6v3NeN6tpq9otU5MkSaGzH73SkqRCjiSp
yFJzwYwkWZKeJHnk+/IHMszV5BvM4BwXczftmMAxtrv+AjeYn2EA/7BEl0/e
RVvGczR2+vOUNjehP9tYrMuUd9KGcRyJnf4c15ufph9/87Mur6xEa8byX+z0
Zyllfoq+/MUiXR55B60Yw7+x05/hOvOT9GErP+lyy4q0ZDSHY6c/zbXmxvRm
Cwt1WzhFSedG9GIzC3SbOUkJ5yf4lk38qNvECa5xbsg3bIznoJvPPOYyh9nM
YiYzmM40prKR4xR3bQO+ZgNTdBs4RjHn+nzFn0zW5ZIVaMEoDsVOf5Qscz16
sp5JuvtlJ6Zzlou4nVcYycH4rM/dJ1+L+3MqnqfuLTmLC1xNXb5kHRPt35Pz
Sff+VY3nQE5zRzmNM3GO508u/Tsyn5wjU2R5mV8ukNnlyzKvHCEPxH3c4xLn
xebcsnO813KuTJWVZQG5UOaQr8pMOVmejHfM9Yvib9a9KWdynqviWZJNX0d+
wR9M8Pl35TzS7KrI15nK6bgHbzObxP42+RLD2R+/w/X3yg7x3XMi3lvdlfJx
evA743XZ5a28yDD2xU5/j2wf3y/H4z3WXSFr0521jNNlk7fwAkPZGzv9IYqa
H+Nz1jBWlyFv5nmGsCd2+oMUMdfiM1YzRjeaUYxkBMMZxlCGMJhBDGQ1Byjs
2pp8yiq+161iP5c716AbK/lOt5J9XOZcnU9YwQDdCvZyqfOjfMxv9Nely5t4
jsHsjp1+D4XMj9CVX+mnS5M30pxB7Iqdfnf8PzU/zEcsp68uVZajGQPZGTv9
rngfzQ/xIb/QR5ciy/Js/M3siJ1+JwXMD9KFZfTWJbIMTeN7YHvs9DvIb36A
D1jK/1Zc23E=
        "]]]}, {}, 
     {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0VWUUGUUgNE7AwMDUvJASYdSSjN0SCMIDKXSQwvMSCMd0t0l3SmoSCvd
oSCtSHdJ97B52Os759yXu9afKSomMjo0CIIQYkkRFgSFw4Mggkrm5PGC4B9N
qKv1b0LNw3Qxh3jJt/RnNrt4SB2a0Z3JbOYmFalAecrxOWUpQ2lKUZISFKcY
RSlCxPv/oxAFqU1TujGJTdygAJE0oSsT2ch18tOWfsxiJ/9Ti8Z0YQIbuEY+
2tCXH9nBA2rSiM6MZz1XyctQFnGQF7SmDzPZzn1q8APz2cdTGrKUI7ymE+P4
jSvkYRXHCfEOQ/Q08cwL9QDPacVZwt2Xa2L9U9/Sm6T2kxpXZ+gHuk3v8SUf
2s9pAl2hSfQvjWUQyeynNEznaSLdq09owBniuy3Rw7yiIyeI4z5W13GZz1jJ
MQLfBusC9vOMlizjKG/oxXT+4C7VGchc9vCYb/iOMfzKJT6lBT2Zxu/coRoD
mMNuHvE1MYzmFy6Sm+Z8z1S2cpsv+IpoRvEzF8hFFD2YwhZuUZX6dGAka/mP
nFShHu0ZwRrOk4PsfMLHZCMrWchMJjKSgfSkIy0fkYbUpCIllalLO4bzE//y
DgRph3o=
        "]]]}, {}, 
     {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0mUUFVUUgNGhQ7pBuksapKS7OxWkQaS7u7u7u7uRkEZBQFFRSVFROhWk
9vzY7zt3zf0x651J17JLnc4RgyCIQFw/CaMGQYHoQVCQcuY00YLgT02qu/Qa
cc0TdRM/Es25o45gJed4S11a0p8FHOc5ZSlDaUpRkhJ8QnGKUZQiFOZjClEw
fDfyk486tKAf8znGM/JSm8/pyzy+5il5qEVz+jCXozwhN18wnBV8yxtq0oze
zOEIj8lFB4axnG94TQ3Gso5LRPL/fKa9mM1hHvERE9jIZaK6116Hsoyz/E91
xrCWi0R071Pdws/EcO6pszjEQ3Kyk6vE8Xy83iKheYP+QBRzO71NYvM2TaG/
6Ac6RFPqDY2vSzWZntFXVCO18x+aRLfrh/qrxtLRmkpvagJdo8n1gkbQpvo7
icyb9Seim3vodeKZZ+pXPCAHO/iN2J6N0/V8T2TntrqVK8R0HqxLOM1LqjKK
1XxH4E4T7c4MDnKf7LRhEIs5xX9UYSSrOM87GtON6RzgHtlozUAWcZJ/qUwj
ujKN/dwlK60YwEJO8IJKNKQLU9nHP2ShIg3ozBT28jeZqUB9OjGZPdwhExnJ
QHrSkZY04R7DXYX7DncYfgfhrsJ9kzTcb/iNhLuiPPX4kkns5i/eA04PiXI=

        "]]]}, {}, 
     {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0mXYFVUUgNEL0iAhISHx0Y2EtHR3SYPS3Q0SBt0o3Z3S3Up3p5TSoXTn
mh/rvufsmef+2RPWuEO19uFDoVA44vlJETkUyhElFMpJVefs+lIz6B59SJjz
VN3GbRK599JxrOUKsc1+0A4MYQmniWReRStTiYpUoDzlKEsZSlOKkpSgOMUo
ShEK8z3tGcxiThHR/xfShrRjEIs4SQTPvtUGtGUgCznBZ54V1J6MZQ2XiWVe
X9vwKws4TnjzAtqDMazmEjHN6+lENnGd+Gat9Rfmc4xwZvl1Clu5RUKz7jqa
VfzN52Z1dQIb+Zd4Zq10B3dJ4v6zzuMoIfd8upv/SeE+WZ+SxnmL3uRL5276
nHTOf2pmva9JdZRm1ceaSldqRr2oMbSOfq0vNL3+pVn0gSbT8ZpNn2hq3aCZ
9B+Nqy31GWmdt+sdEjv/pI9I6TxXj/CRvOziP5J7Nkk3c4ME7l11J/f4yn2k
ruAC0d1r6++s5xpfmLXQAczhMB/IQxdGsJzzRPNuLf2NdVwljllz7c9sDvGe
3HRmOH9wjqjeranN6McsDvKOb+jEMJZxlije/06b0peZHOAtuejIUJZyhsje
r6FN+JEZ7OcNOalOY/ownX28JgfZgz0Guwr2Heww+A6CXQX7JkOw3+AbCXYV
fEPBPoNvItgRYVSjEb2Zxl5e8QmW5IxJ
        
        "]]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV1He4znUYBvCfnNOSlBKVspM0jIaUiChKSSpFEcomGiIUKipFGdl77wrH
PPZWRpkhyt57VOjz/PE59/O9n/O73vO+7/c6eeo0r9osQ5Ik7f3okzFJVqQk
yWc8TVb26Fay2zyYOtxHQt/Yyc95hpvYq1vFHvMQ6nI/GegXO/kFFbmZfbrV
7DUPpR4PcAX9Yyc7U4ls7Nf9wj7zMN6mCBkZEDvZhWe5hQO6X9lvHs47FCWF
gbGTX/Ic2TmoW8OgSOevqEwODunWMjjS+Wue51YO69YxJNK5Ky9wG0d06xnK
MIYzgpGMYjRjGMs4xjMhnvHsN1Thdo7qfuOAeQT1KUYqE2Mnv+VFcnJM9zsH
zSNpQHGuZFLsZDeqcgfHdWflj7xPaTboDslRNORBrmKyfoPszkvcyQndOfkT
H1CGjbrDcjSNeCjuTmqSzJbtuZp/mMZHlIvv0j5ddmCK5zfK76gWf7vdApmL
S8ykLdfql8iTfv+8/Jksug/jNeSiuJ/yybhbcq68UX4qr5PL4j7KTZ4/Yh7D
9c6N4/3KhTKrfDjuspwjb5CfyExyqbyGf5lO6zjrF8un4r6Z58mO8fl6jU3y
e14mN5eZRTtO2V+QU2lFWTbrjsqxNOGReM/8RxptKB+fvd/bLHvwCnk4rdvC
MfM4mlIi/u74nGIne/IqeTmj28rUSOdeVCcfZ3V/MI3ppDGDmcxiNnOYSzrz
mB/PeLY3r5Gfc7ptLIh0/oHXKcB53XYWRjr3oQZ3cUG3g0WRzn2pScG4R7o/
OW4eTzMeje+XxbGT/XiDu+O70u3khHkCzSlJZpbETvbnTQrFZ63bxUnzRN7l
sbgnLI2dHEAt7uGi7i9OmSfRgsfjXrIsdnIgtSkc91n3N6fNk2lJqbhnLI+d
HMRb3Bt3Jv4vc8Y8hfd4Iu51vDYz+JgKpLp/82WneH/m5TKbXOH5/wG61trs

       "]]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwN0WO8FmYYwOE3nJNr9SEtndqy27K1jJPttpZt27Zt27ZWy7Ztner6cP3+
930/H5+Qhq1DW4ULBAJhxA0KBK6zmqE0pwoliEd8EpCQX0lEYpKQlGSEkJwU
/MbvpCQVqUnDDdYwjBZUpSRpuclahtOSapTiCTuYRBcako5brGMErahOaZ6y
k8l0pRHpuc16RtKaGrzlILPpSxmesYspdKMxGbjDBkbRhpq84xBz6EdZnrOb
qXQnjNMspQkfOcp8BhIIDgTO6goycpeNjCaCt/Palq+cZDGR3C9rLd5zmOhu
czVIL+ov2l9/cIaY9uUaRa9qbC2nL9hDNPs0jagXNJb20O/8Rwz7Mo2sV7Qp
nzjGAoLdL+kgwpn/15Vk4h6bGEM7vnGKJdTmA0eYxwDK85K9TKcnf/OZ4yxk
MJm5z2bG0p46VOAV+5hBL/4hCw/Ywjg6UJeKvGY/M+lNM7LykK2MpyP1CCUb
j9jGBDpRn0r8wZ9kJwc5yUVu8pCXfOSnAAUpRGGKUJRiFOcx25lIZxpQmTcc
YBZ9+JcvnGARQwjvH87pKqKar2kc/Ut/Avjjhvk=
       "]]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV0mW4FlUUgNGPuuQlRLiE0ghKIyBId7d0CJdupESku7u7QelukO6UblBS
CcGilDU/1rz7PHN+zZ60kZ1qdIwSCoXCPRKHhUIP2MwY2vMVpfmQJCQlgmQk
JwUp+YiPSUVq0pCWdKQnAxl5yBbG0oFalOETHrGVcXSkNmXJxGO2MZ5O1KEc
f3OQ2XxPMzLzG9uZQGfqUp5/OMQcetOcT/mdHUzkG+rxP6dYwmAq8C+HmUsf
WvAZT9jJJLpQn1DMUOi0LmUIFXnFEebRlzjuXNG1tCS688/6IyMId76uG8jC
U3YxmYTe3dKuxDJf0tXBrsy/aAOimM8Eu9Jl+oHeCXalQzWeXgt2qOuD/eq9
YI9aSV9zNNi383xNpLeDfWs/jatXg/9A1wX/iP6qrYhhPq8rSGy+qyOJb76h
G8nKM3YzhW7E9v6yrqEhUZ3P6nKGUZk3HGMB/WlNmHsXdCWjyMZz9jCV7jQi
mnvn9AeGU4W3HGchA2hDdv7gJ6bRg8ZU5R0nWMRA2pKDF+xlOt/yNdXIyUv2
MYOeNKE6ufiT/czkO5pSg9x8Th7yko8vyE8BvqQghShMEYpSjOKUoCR/cYBZ
9CKSmvzHSRYziHbE9H0u6ipGk8D5pm4iwnxfU2spfQ+ClIj1
       "]]}, 
     {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV0lW4VVUUgNED0iFw6VDuJaQ7BBSRUhq9dHd3CyIhXYKAgtIi3d3d3d1I
K52CgGM/jPOvNff+zsvcEY07RLaPEgqFwvyExwyFXrGbyfSiEZFEkI70ZCAj
n5CJzGQhK9nITg5ykovc5CEv/7KHKXxPY6qQj9fsZSq9aUJVYsYKhU7pAobR
kfy8YR/T+IGmVCOW90/rQobTiQL8x36m04dmVCe298/oIkbQmYK85QAz6Etz
Enn3iq5iHDWIY3ZWFzOSLnzKOw7yB/1oQZh3r+pqxlOTuGbndAmjSON+T7fS
lWTuN3Q9E0nrfl93UIj3HGJmsCPPHml/Ujnf0c3BrpyfaUsSO18LdqVrgn3q
k2BX+ot+rP8EO9TtwX71RbBHraXx9Hywb10afBP6ONi3/qQf6d/Bd6Dbgm9E
n2s3kjvf1A3BN+T8VH8j3PmB7qQwIffD+ic/ktr9rm6hFUncr+tafqU28c0u
6DJG050UZrd0I79ThChmR3QWA2hNUrO/dB0TqMOHZhd1OWPowWdENT+qsxlI
G+qSwPySruBnvuNzPjA/pnMYRFvqUZRonh3XuQymHfX5guiendB5DKE9DSjG
lxSnBCUpRWm+4mvKUJZylKcCFalEZb4hhv8/qfMZSgcaktD8sq5kLD1JaXZb
NzGJCPeHuosszi81j36r/wOVIIvQ
       "]]}}}],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
    "AxesInFront" -> True},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.684634440244519*^9, 3.684635494330558*^9, 
  3.684635570788806*^9, 3.684635659066648*^9, 3.684667984797278*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
NJBTa/q0VoM40aX7eZS8jj1PX9NaOq1OnOdwuqLEuoZtLu6ZND5nTVzRqzY1
o17BnattdjvTQoiQdxRlRjuX8CA6L5L4J4OQCZzdZnRqAc8PnepKiaggmpz3
5AgdncPd3DNWmak9RM3V4LtHz89g05GuI+zCK4RRp8GCiuIUzo85sfz1OxeE
OhgTH4CM61Lt2sPmJECYQ9agt2AUC6blCXI5K4HINdHWoYwhPN6g/bflgz5o
97SKvGnvw9ubuNh4O6zB3Yz+3O3d3bjJ4MTIvkv3QIpWVTJerBVTtSjxpjWF
QsFlh2s+z+px2h4tEzaZBNB6Y15f0vQVr14rr8B6r0GoWjjU42gKFhenb7T5
/An0NToeCzjlAU1NlEF2VRl8k0jbp+74HdiurN8TpKiFgJKDRrEhPcB+rUIh
dLwbRlX/5LddGIBXpJ+aPUr9oP+O2SH82jB0XC96dZ96CGJGvI39ZcZhnKZA
XcV0Y36PJE4ULpLB8GLTwbZLJODa7Ttxa30KJrNitPhrB8Eq7ZFnXd8MKHX8
Vh081A8UN/7oLTUsAVOnIJ+wdQN8P/pzfLx9BQpYPlxmZKoBz/FBQZryNaBr
I41/jC+Dy5x7pIO1KBAWr2kaDf4Et0XyDmVfoETRT4JZLKhfg9XxAxzvlanQ
woMkvbiziWAGXj9/nKVGkWfaTb7cCYWaosG/8/I0yNtLfjfjSU9YcCNb7ZGg
RV2MGX01726BiERHw83DdOitTfjeit36cKjr9cGgffTIIMWJz1xaGa7VVqaJ
iTEgW7nq9IJ4cagRP1uSeIgRXbU49qb/6w5gCskqHeZnQq0zVScbzFYJte7p
OJ09zOjedMzTzqVuYv21WnkNFwvq+ClUf8n6G+H8UdFZmZYVZa3zFjyZzyRG
PwmsNNOzocMTV5XhUzDBYIJ5/ZbY0GwO55jGSRvCbD7EqGB9DVMYvGwvszEk
eq8FK1TSr+LPLfuovsp5ELl3TqET7Mv4FdP5t22WccQ9vtRPa2KLWMRyeIi5
4BMRLuWmkHd8Hg9e+ffNTb6BGB9e76tVnMX/GXfrfT9LJjT/O0t6qjqNC2X1
iAtLDODZonrXCU3idsYl34SAPdDqqvHQOnEcWwnc+Tr19gR8Fghp0coexnK6
9onfzp6Hw+ySpmtlA1ialF7x+b0FJPErNemt9+DfKnF6u/ScQVbUrI9PuhNb
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
6S3PtdfNODQkwqa3tNUct3jsmrrlLXPmvt8MiMnc8pYmB50CIorfb3lLsfHM
I1/3f9jyllKDf2J9yJ+3vKXtiWQTEcBb3tI2qzh9Z0PZ/7zlU2tSOfe3LW8Z
pj309Hlr9Za3bKr8cjkmp3bLW74YfLGj7lXdlrcMOJZFpR9dv+UtdbkvPxNW
/Z+3fNL01dNuqnHLWxZofr2rp/d3y1vyDjOZPjNq3vKWCwMpY08FW7a85b21
ad1Ej5Ytbxklocv66l7LlrdMteOWmuZr2fKWZqBzS/Ra85a31Ev53Sp55u+W
t1QSCDVn6W7c8pbRR1BrrOH/vGWBP2WtfWD9lrfcn9M4NFNUt+UtLx89EXm3
q3bLW3IX+oT4UX7f8pb84kTwA79vW96SlsxdeXyhbMtb1pdHqOxtwVveMqHA
0+q2S8GWt7QZ+f3yseaHLW/JkLzuLHwge8tbMmbfWZL4kLnlLZmF+Si4H6Vu
eUvKnIow3cIk2PSWCR1O42zPnsKmtxQMDdPlT4mATW8Z7OVyx3R/EGx6S216
2ojKBB/Y9JZFcmK/eD67w6a3rPi/62HTW+KjN6ldklxg01v2hl0U2vHdEza9
pbjgvrEXL/xg01s+dq2/oxXwCDa9pXnSJW3ubVGw6S13MQsXig3Gwqa3zFM7
HLKtJnnLW15t0eOhN0vf8pYNCjNR+n1vIChX13fhZhfc0Nj/XOJN05ZvzBui
oEzu+bvlG+NOjakUfm/e8o0zcqmkCYOWLd/YZnA0TSmgZcs3Un4jRPk3Pt/0
jQMONatuG7/f9I0PlfSt6Lr/QiIaDM/qmYe9kpEfv8U3bXlCqwnWlu8X3255
QkWqxm2ebulbnvAt5dObSdwvtjxhbLlKo7t1HGx6wtDylsv9dlGw6QnjJXs8
um+FwqYnnHjYr/zfLn/Y9IQ8uxRXdz+7D5ueMEJSizWNwxU2PaFA4em5HfVO
sOkJ0/mTGlUFPWDTE1pp19r3zzyATU8Yejq3d84sGDY9IcPEuoHko8ew6Qmp
ngfmSvA+g01PWBE4Emn6+PmWJ2whFci97X655Ql3oKTtp45mQarX9OStX52w
L+qmWY9205bfa+so7Hif+HfL7505mpOe9KR5y+/Rar/+uw21bPm9kKT48BN+
LVt+z1s+UD/JtmXL7wln27GYzTZv+T1Kms4/Q8LNYCyouNJnPg8u3vTXlWea
trxc1pOOjtq977e8nKhCA80h1owtL8cbyvN57GzKlpdjsayk5nmQAJteLlzt
etGthWjY9HJUukOP/rsSDpte7k7kDi1u9gDY9HJpckUJGge8YdPL9d1INKvX
uAObXi5DylHsUcRt2PRyvlbFj+sbvWDTyxnIv7h92O4hbHq5u3vJ5pwNYbDp
5X5FsXqNZ0VDWdq7MNlb3UBbsttlB83fLX8Wamc4syzUvOXPoi6LuX1daN7y
Zw35u1P3bpzPTX+mS6MWU7xxvjf9GZHybPWwfMv//JmN62nj2OYtr7V66uPx
k07PYNNrqekyxLisPYZNr6WrSCXz8EQIbHqtS64OnBc0fGHTa30T2ZZ7kuMe
bHot7Wsb0ym9M2x6re209cYOC46w6bXoLh0SlfnnDpteK0ufYZpd9AFsei0m
5fCz1y4HwabXusT5XyJXYwRseq0XdXP8Q6diYNNr3bfjUlFbSIJNr3U1+cjV
UtGXW15L+o8PTezV13DrUczAwdoOMD6pm52xp2nLR/FHfzvEdvfvlo/iXpI8
fMm9ectHWXhLmdEdbtnyUQprOpwJ3i1bPspt52D+tGvLlo+CQebERoaWLR9l
dE/ZGak0g1z4xGFvoXmwuCm/T0vg75ZHYrA2GQtIfb/lkQgnNc64zowtj6S8
h/3AfVLKlkfaeeasJFtcImx6pNI5F4nMiiew6ZF0aBzYn1NEwKZHumezfc6O
OxA2PZJW4iWngn/esOmRHhMLjO4ebrDpkZZtKtS/RrrCpkfKmoyTb+T1gk2P
5M3DQTXr6w+bHomvjcksICMUNj1SCL1JpVRbFIiIUwXxjnSBaJed/JGWpi3f
8/z3uY+9VM1bvuel9/w9357mLd9D83Z+75erLVu+J61gN8552LLle+xLJN2n
1Vu2fA+ejozYltu85WFG/oS2+FjHwqaH0TNiir+cFwmbHoZ3p9fxI5qPYNPD
nEEsNWOSfrDpYTS66Vcqz3vCpodpPmDNdobeBagCkDNDwSDsHWi0sMlu3vIi
1Kdkv+eda9nyIiyKzUftN/Z304ssvS/zy9o4nk2PwP3nRj3PxnrZ9AjB4ukP
rvq0bHmEAz6+fm2HWmCz3x+VKDtO2u4Em/3+C5mHrpeHOsJmv3+O30vbVskd
Nvv9LzJHi+oqfGCz3+95v05IvTUQNvv9zxoCHTTvRsBmv19eUul56q+nsNnv
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
J38Za5zK4PqpRuGcl9OtExhcP907bZ97jFEcg+unu5ulVKcMRDC4ftoT+Khp
g2cIg+unHaNy+852+DKB0yZIlRm2Mkb2j9XHQr2K64sPNTv6BXpCWl+UM4np
Pw33B1xffFWzIO2gh5DWr9T8JtpqeQpp/Spmg8sXZ9gf16/u9+evXqkjZHA9
6NZPLZ+2Vh9aj2FVL+6eDvcTXI8ZOaLpwz+4n+B6xKLRyieGuAhpPSI44WJC
JMxv9H77f6NVLkCMvm9vGM3uh/d/9P1YQd72JrifoO+HGupYDun2ZtD3Y+ak
Tm+F92P0faWimhcT4Pqg7y99uXVCNdwf0PfV+zKS6+B+gr6/+aLCtxFwP0Hf
P7nYSZ8F+6Pvt7SXTFWC8dD326eN+dgb5M2g7xttr5VeCtvR97MaZ6gthc+j
79cc/RirAr8Pfb9Jw1TvM8To++yKY9YCiNH3i9tLi1dAjL5v+qqGuwLGR9//
PnpC4FcDbwZ9//m8bV6SCbnk+9Hvvzu0T8wj369UbMg4eT+ffP/fxIqOMZ4F
5Pt/MkY+VVO8Sb7fU5ul+rWviHx/3NvzYSWVxeT76+5FDT1TXEq+37347pbc
a3fI92unJ3n/XFVGvl/o5qCWqF1Ovv93dOtNNZUK8n29TKX/FvdXkO9fvK54
0e5DJfk+d7L+vXpuFfn+yln3f8dFV5Pv2/4oWdVtfI98P3Dph9CIH/fI9y/v
t1FdlXiffH+mj05EnjyPfD/Kdll9RiKPfP9a0XL9Yb945PtZn/qcR6zgk+87
ifeM0tjLJ9/nTtj61zaCT75f9XBJ6HmI0fer/Ex2VLnzyfdzLE6UrVrFJ9//
4r7w788fPPJ9yRu+jeUneeT72XdSff1UeOT7x2eHBRw4dZ98n7W3e67373vk
+7ITN2jEbr5Hvh/V6TOafaqafD/m+a6apEdV5PsqKksFjd8qyfcP9Z+L9phU
Sb5/PC7rqNbSCvL9pE7Z77565eT7HWpjxydYl5Hvd7dfffmde4d8v69n43X/
ilLyfYvCqI0mP4vJ97/eTlvAl7xFvp9wqiLw3dqb5PsW4n2dfskF5PtWjqqN
nQ355PtXY2ZsqNPPI9+vH5wP6Pue5+Nn3TXnMPXZo22KrguYJ+tKV02045G3
e9Qkaa7n88jbw50zspYo8snbhz2vi9pqzSdv77vd23PlEJ+8/fsh98ero/jk
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
FmeTZ1Qs031nMo5NnuEuf+CYpQKbPOPc1HPVL2awyTOuzpPv9lnIJs8wM7/f
IK/NJs8Ym2yk4qjHJs/wdFk1OnYdmzzjV0uzXJkZmzwjuu5Kfaklmzxj1NVQ
p71b2eQZyVJpbf3b2eQZeVv15io6s8kzDjpO2WbuyibPmKt+VPrkbjZ5Rl9N
yowF7mzyjOs3Zhi2QYyeYfdV3/UbxOgZbycYuEyDGD1j3kM1j4swHnrGWKHb
roXwfegZO1703v7hxCbPiLva8W6hI5s8Y8uExz0b4PegZ0yYx7D+wO9Fzxho
q1023pxNnsH5+aBLCOcLPUOt/OmFHfps8oynk7IrguB8o2eYF+5b6qXOJs+4
bNYY92Ymmzyj+n1NOheuJ3rG3WlnX50czybPkJ769lkB5AN6xmKdIF0TyBf0
jLOFrRenfGaRZ0zzDWwa/pJFnnH3BxPL1LDIM265GyYqlrLIM7YnCA1+QT6j
Z8Tk7nA1TmGRZ+B8QM/YtsI9K+cEizzj2jS1gIf2bPKMUZKXgtV2sskzFr1L
M3ziwibPUFAqqo90Y5NntCybahqwh02e8bn243c2XF/0jImrjGYO82CTZyht
11zJgu3oGSOX7K/yh8+jZ2wbu8U8HMZHzzCKaPa6Ct+PnqFodVJTdHzoGecn
xRkK4fjRM3zPXr5VcJJFnvFPP9lvUwyLPENuf2kFaxubPONLr660/A42ecbp
osM2/ZD/6BmPm4c7/IB8RM+YLSX1dxQcL3pGplePnyf8HvSMgqk2X/ohRs84
1OUSVQcx9TNMsmurh8+jZ7B3nNOWh/xHz9BZ4D9s/y42ecZ4c83FEyH/0TOM
G25vGAXzFT1jYfD2H0cTWUz4tBkpj0tfMvPuXtGYDfujbwgmDHQlwXjoG2XD
FxVLi+bboG+4Ms0Sr+B40DfqCsceewTHi77xMO1T3wDE6BvVIWKRbhCjbyxZ
NPv7RPg8+kZOT2hBE5wv9I1t/hq8F3D+0TeGWrya+F80i3xjTrFVlBRcD/QN
1X3cguMwv9E3jv5YvzsOrgf6Rt3HSxtZMD76xiy7+7fq4Pegb8i61K03g+ND
37A9djmiB2L0DaOFVZeaIEbf+PtUNu0vHD/6RljlKKntMB76Rmvg1K31cP7Q
NxadmLMrHM4v+kZSTeCaNLge6Bs8D6t7X5JYzLWPZ/2rCoTMZE7XiWzIV/SO
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
Gh99ZKGz5KIV8P3oI0MG/8P6EOP/7+3/B3Z66Xg=
   "], {{{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1: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
Ag==
        "]]]}, {}, 
     {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV1He8T3UYB/Bzl5FxRVRoXKIkNEVaIk0jmVFJtG0qWhpKqSgNu+y99y6S
kTKLzJK9y969nz/e9/N8P8/v3PO6v3NeN6tpq9otU5MkSaGzH73SkqRCjiSp
yFJzwYwkWZKeJHnk+/IHMszV5BvM4BwXczftmMAxtrv+AjeYn2EA/7BEl0/e
RVvGczR2+vOUNjehP9tYrMuUd9KGcRyJnf4c15ufph9/87Mur6xEa8byX+z0
Zyllfoq+/MUiXR55B60Yw7+x05/hOvOT9GErP+lyy4q0ZDSHY6c/zbXmxvRm
Cwt1WzhFSedG9GIzC3SbOUkJ5yf4lk38qNvECa5xbsg3bIznoJvPPOYyh9nM
YiYzmM40prKR4xR3bQO+ZgNTdBs4RjHn+nzFn0zW5ZIVaMEoDsVOf5Qscz16
sp5JuvtlJ6Zzlou4nVcYycH4rM/dJ1+L+3MqnqfuLTmLC1xNXb5kHRPt35Pz
Sff+VY3nQE5zRzmNM3GO508u/Tsyn5wjU2R5mV8ukNnlyzKvHCEPxH3c4xLn
xebcsnO813KuTJWVZQG5UOaQr8pMOVmejHfM9Yvib9a9KWdynqviWZJNX0d+
wR9M8Pl35TzS7KrI15nK6bgHbzObxP42+RLD2R+/w/X3yg7x3XMi3lvdlfJx
evA743XZ5a28yDD2xU5/j2wf3y/H4z3WXSFr0521jNNlk7fwAkPZGzv9IYqa
H+Nz1jBWlyFv5nmGsCd2+oMUMdfiM1YzRjeaUYxkBMMZxlCGMJhBDGQ1Byjs
2pp8yiq+161iP5c716AbK/lOt5J9XOZcnU9YwQDdCvZyqfOjfMxv9Nely5t4
jsHsjp1+D4XMj9CVX+mnS5M30pxB7Iqdfnf8PzU/zEcsp68uVZajGQPZGTv9
rngfzQ/xIb/QR5ciy/Js/M3siJ1+JwXMD9KFZfTWJbIMTeN7YHvs9DvIb36A
D1jK/1Zc23E=
        "]]]}, {}, 
     {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0VWUUGUUgNE7AwMDUvJASYdSSjN0SCMIDKXSQwvMSCMd0t0l3SmoSCvd
oSCtSHdJ97B52Os759yXu9afKSomMjo0CIIQYkkRFgSFw4Mggkrm5PGC4B9N
qKv1b0LNw3Qxh3jJt/RnNrt4SB2a0Z3JbOYmFalAecrxOWUpQ2lKUZISFKcY
RSlCxPv/oxAFqU1TujGJTdygAJE0oSsT2ch18tOWfsxiJ/9Ti8Z0YQIbuEY+
2tCXH9nBA2rSiM6MZz1XyctQFnGQF7SmDzPZzn1q8APz2cdTGrKUI7ymE+P4
jSvkYRXHCfEOQ/Q08cwL9QDPacVZwt2Xa2L9U9/Sm6T2kxpXZ+gHuk3v8SUf
2s9pAl2hSfQvjWUQyeynNEznaSLdq09owBniuy3Rw7yiIyeI4z5W13GZz1jJ
MQLfBusC9vOMlizjKG/oxXT+4C7VGchc9vCYb/iOMfzKJT6lBT2Zxu/coRoD
mMNuHvE1MYzmFy6Sm+Z8z1S2cpsv+IpoRvEzF8hFFD2YwhZuUZX6dGAka/mP
nFShHu0ZwRrOk4PsfMLHZCMrWchMJjKSgfSkIy0fkYbUpCIllalLO4bzE//y
DgRph3o=
        "]]]}, {}, 
     {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0mUUFVUUgNGhQ7pBuksapKS7OxWkQaS7u7u7u7uRkEZBQFFRSVFROhWk
9vzY7zt3zf0x651J17JLnc4RgyCIQFw/CaMGQYHoQVCQcuY00YLgT02qu/Qa
cc0TdRM/Es25o45gJed4S11a0p8FHOc5ZSlDaUpRkhJ8QnGKUZQiFOZjClEw
fDfyk486tKAf8znGM/JSm8/pyzy+5il5qEVz+jCXozwhN18wnBV8yxtq0oze
zOEIj8lFB4axnG94TQ3Gso5LRPL/fKa9mM1hHvERE9jIZaK6116Hsoyz/E91
xrCWi0R071Pdws/EcO6pszjEQ3Kyk6vE8Xy83iKheYP+QBRzO71NYvM2TaG/
6Ac6RFPqDY2vSzWZntFXVCO18x+aRLfrh/qrxtLRmkpvagJdo8n1gkbQpvo7
icyb9Seim3vodeKZZ+pXPCAHO/iN2J6N0/V8T2TntrqVK8R0HqxLOM1LqjKK
1XxH4E4T7c4MDnKf7LRhEIs5xX9UYSSrOM87GtON6RzgHtlozUAWcZJ/qUwj
ujKN/dwlK60YwEJO8IJKNKQLU9nHP2ShIg3ozBT28jeZqUB9OjGZPdwhExnJ
QHrSkZY04R7DXYX7DncYfgfhrsJ9kzTcb/iNhLuiPPX4kkns5i/eA04PiXI=

        "]]]}, {}, 
     {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0mXYFVUUgNEL0iAhISHx0Y2EtHR3SYPS3Q0SBt0o3Z3S3Up3p5TSoXTn
mh/rvufsmef+2RPWuEO19uFDoVA44vlJETkUyhElFMpJVefs+lIz6B59SJjz
VN3GbRK599JxrOUKsc1+0A4MYQmniWReRStTiYpUoDzlKEsZSlOKkpSgOMUo
ShEK8z3tGcxiThHR/xfShrRjEIs4SQTPvtUGtGUgCznBZ54V1J6MZQ2XiWVe
X9vwKws4TnjzAtqDMazmEjHN6+lENnGd+Gat9Rfmc4xwZvl1Clu5RUKz7jqa
VfzN52Z1dQIb+Zd4Zq10B3dJ4v6zzuMoIfd8upv/SeE+WZ+SxnmL3uRL5276
nHTOf2pmva9JdZRm1ceaSldqRr2oMbSOfq0vNL3+pVn0gSbT8ZpNn2hq3aCZ
9B+Nqy31GWmdt+sdEjv/pI9I6TxXj/CRvOziP5J7Nkk3c4ME7l11J/f4yn2k
ruAC0d1r6++s5xpfmLXQAczhMB/IQxdGsJzzRPNuLf2NdVwljllz7c9sDvGe
3HRmOH9wjqjeranN6McsDvKOb+jEMJZxlije/06b0peZHOAtuejIUJZyhsje
r6FN+JEZ7OcNOalOY/ownX28JgfZgz0Guwr2Heww+A6CXQX7JkOw3+AbCXYV
fEPBPoNvItgRYVSjEb2Zxl5e8QmW5IxJ
        
        "]]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwl12WYVVUfQPGhU0G6uxSlu0G6lO7u7u4wCSVUGqRBEElBQumUVrpTCemO
97ef98Pi7LX2f2Dm3Hv2HdK37Faza6SIiIgfokREhOv+yBER0VGJ/Mqb6FP4
Gd6cZ+BN+Bz+LvJqz3he9OVXeTczS/kdPo5/zIfyrTwnLCMO+CMGKvP1vKmZ
qfwsb8Ez8qb8Rx4PI/nm8IXI5/I8XNHP3jXe3f5P/C4fz8vyYXwbzwUa8SeP
iSp8A28mTuPneEueiTfjc3l85Nde8Pzoz6/zHmaW8f/4N7wcH86389yIqh3k
sVCV/8abm5nOz/NWPDNvzufx91BAe8kLYAC/wXuaWc7v8W95eT6C7+B5EE07
xGOjGt/IW5iZwS/w1jwLb8Hn8wQoqL3iBTGQ3+S9zPzM7/MJvAIfyXeG1xbR
tcM8DqrzTbylmZn8Im/Ds/KWfAFPiELaa14Ig/g/vLeZFfwBn8gr8lF8F8+H
GNoRHhef8M28lZlZ/BJvy7PxVnwhT4TC2hteGIP5v7yPmV/4Qz6JV+Kj+e7w
eiKmdpS/g0/5Ft7azGx+mbfj7/PWfBFPjCLaW14EQ/gt3tfMSv6IT+aV+Wd8
T3g9EUs7xt9FDf47b48PzLXRFmtJUFQLb86i2lB+m36HKtrn2t7wuiG2dpzH
Q03+B++A7Obaaku0pCimRdKKacP4Hf49qmpfaPvC64M42l88PmrxrbwjPjTX
TluqJUPx8MhpxbXh/G44K1BN+1LbH14HxNX+5u+hNt/GO+Ejc+21n7TkKBF+
XK2ENoL/x6fgHZzQEqCOvp13Rg6zHbRlWgqU1KJqJbWR/B6findxUkuIuvoO
3gU5zXbUlmspUUqLppXSRvH7fBri4ZSWCPX0nbwrcpntpP2spUJpLbpWWhvN
H/DpiI/TWmLU13eFcxBlEMN8Gf0z/SGfgfdwRkuCBvrucIaFsxIxzX+sf64/
4jORAGe1pGio7wlnUTjnkBDn9GRoZG9vOD/C2YRESIwkOG8/ORqb2Ree/XCu
IJZ/r6z+hf6Yz0JSXNBSoIm+PzzD4XxAbPPl9C/1J3w2kuGilhJN9QPhWURu
s521FVpqVNTiaOW1r/hT3o+v4o/5HF6df8UPhGcPn/E/eJTw/du/5JoKzex9
aW+79Z96G+s51lf0sda7w2eSnse6i/WEcDbY+9p1J//ONQ0f5bqFTwqfga7j
Xfe6fu9aydfHda3Av3X92vxXrjv4ZNdn9vu7ruYTXZ+EzzzXPeGzy94n4WvC
96ePsd5lXdT6c+ut1lHDPTZ32TU1mts7yNva/5Ff5f14Xt6Vr+RpUTk8M1pF
bQx/zufiU22MdjCcBeE9r13hadCCHwrfbzhfwjMTfj59rP6Cz0MqXNXSoqV+
mA8I5wdSIw3S4pr9dGhl5ggfGM6E8Bz5Oyvr4/SXfD7S4bqWHq31o3xQeJ3D
c2O+Srjn+iu+AOlxQ8uANvoxPjjcy/DcmK+qf6O/5guRATe1jGirH+dDwr0I
z435auG109/wRciIf7RMaKf/xYcin9lu2iotHWqEZ0urHt47/C1fjEz4V8uM
9vrffBjym+2urdbSo2Z4/rRPwnuDh1+wlrhkxi0tCzpoJ/hwFDDbQ1ujZUCt
8Oxqn4b3Jo+EpVoW3NayoqN2ko9AQbM9tbVaRtQOz71WI7xXeWT8pNXQxmqH
wvmOrNodng2d+Ck+EoXM9dLWaZlQJ5wLWs3w7PAoWKbV1MZph8P5jmzaXf4+
OvPTfBQKm+ut/aplRt1wbmi1wrPGo2K5Vksbrx0J5z3e1/7jH6ALP8NHo4i5
Ptp6LQvqacm12toPPBoG8DX8qfXP9mvzb/jR8FmAD7R7PDvCL8JneTszc/m1
cPbworwv3xDuFeprKbQ62hQeHQP5Wv7MeoX9Ovxbfix8ZiC7dp9/iG78HG9v
Zh6/Hs4DXoz347+Fe4gGWkqtrjaVx8Agvo4/t/7Ffl0+gR/nZfCh9oB/hO78
PO9gZj6/wb/gxXl/vjHcWzQMz71WT5vGY2Iw/5W/sF5pvx6fyP/iH+Mj7SHP
gR78Au9oZgG/Gc5lXoIP4JvCfUajcIZo9bXpPBaG8PX8pfUq+/X5JP43L4sc
2iOeEz35Rd7JzEL+TziLeUk+kG8O9xmNwzmlNdBm8NgYyjfwV9ar7Tfgk/kJ
Xg45tcc8F3rxS7yzmUX83/CZwUvxQXxLuM9oEs5CraE2k8fBMP4bf229xn5D
/h0/ycsjl/aE50Zvfpl3MbOY3wqfEbw0H8x/D/cZTcMZqjXSZvG4GM438jfW
a+034t/zU7wCcmtPeR704Vd4VzNL+G0+lpfhQ/gf4T5jNP+dR0azcA7zxtaz
7b2DEXwTf2u9zn5j/gM/zSuG9xbfxqOF89l6X+T//78yj9n/Aclksnk=
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV1He4znUYBvCfnNOSlBKVspM0jIaUiChKSSpFEcomGiIUKipFGdl77wrH
PPZWRpkhyt57VOjz/PE59/O9n/O73vO+7/c6eeo0r9osQ5Ik7f3okzFJVqQk
yWc8TVb26Fay2zyYOtxHQt/Yyc95hpvYq1vFHvMQ6nI/GegXO/kFFbmZfbrV
7DUPpR4PcAX9Yyc7U4ls7Nf9wj7zMN6mCBkZEDvZhWe5hQO6X9lvHs47FCWF
gbGTX/Ic2TmoW8OgSOevqEwODunWMjjS+Wue51YO69YxJNK5Ky9wG0d06xnK
MIYzgpGMYjRjGMs4xjMhnvHsN1Thdo7qfuOAeQT1KUYqE2Mnv+VFcnJM9zsH
zSNpQHGuZFLsZDeqcgfHdWflj7xPaTboDslRNORBrmKyfoPszkvcyQndOfkT
H1CGjbrDcjSNeCjuTmqSzJbtuZp/mMZHlIvv0j5ddmCK5zfK76gWf7vdApmL
S8ykLdfql8iTfv+8/Jksug/jNeSiuJ/yybhbcq68UX4qr5PL4j7KTZ4/Yh7D
9c6N4/3KhTKrfDjuspwjb5CfyExyqbyGf5lO6zjrF8un4r6Z58mO8fl6jU3y
e14mN5eZRTtO2V+QU2lFWTbrjsqxNOGReM/8RxptKB+fvd/bLHvwCnk4rdvC
MfM4mlIi/u74nGIne/IqeTmj28rUSOdeVCcfZ3V/MI3ppDGDmcxiNnOYSzrz
mB/PeLY3r5Gfc7ptLIh0/oHXKcB53XYWRjr3oQZ3cUG3g0WRzn2pScG4R7o/
OW4eTzMeje+XxbGT/XiDu+O70u3khHkCzSlJZpbETvbnTQrFZ63bxUnzRN7l
sbgnLI2dHEAt7uGi7i9OmSfRgsfjXrIsdnIgtSkc91n3N6fNk2lJqbhnLI+d
HMRb3Bt3Jv4vc8Y8hfd4Iu51vDYz+JgKpLp/82WneH/m5TKbXOH5/wG61trs

       "]]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwN0WO8FmYYwOE3nJNr9SEtndqy27K1jJPttpZt27Zt27ZWy7Ztner6cP3+
930/H5+Qhq1DW4ULBAJhxA0KBK6zmqE0pwoliEd8EpCQX0lEYpKQlGSEkJwU
/MbvpCQVqUnDDdYwjBZUpSRpuclahtOSapTiCTuYRBcako5brGMErahOaZ6y
k8l0pRHpuc16RtKaGrzlILPpSxmesYspdKMxGbjDBkbRhpq84xBz6EdZnrOb
qXQnjNMspQkfOcp8BhIIDgTO6goycpeNjCaCt/Palq+cZDGR3C9rLd5zmOhu
czVIL+ov2l9/cIaY9uUaRa9qbC2nL9hDNPs0jagXNJb20O/8Rwz7Mo2sV7Qp
nzjGAoLdL+kgwpn/15Vk4h6bGEM7vnGKJdTmA0eYxwDK85K9TKcnf/OZ4yxk
MJm5z2bG0p46VOAV+5hBL/4hCw/Ywjg6UJeKvGY/M+lNM7LykK2MpyP1CCUb
j9jGBDpRn0r8wZ9kJwc5yUVu8pCXfOSnAAUpRGGKUJRiFOcx25lIZxpQmTcc
YBZ9+JcvnGARQwjvH87pKqKar2kc/Ut/Avjjhvk=
       "]]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV0mW4FlUUgNGPuuQlRLiE0ghKIyBId7d0CJdupESku7u7QelukO6UblBS
CcGilDU/1rz7PHN+zZ60kZ1qdIwSCoXCPRKHhUIP2MwY2vMVpfmQJCQlgmQk
JwUp+YiPSUVq0pCWdKQnAxl5yBbG0oFalOETHrGVcXSkNmXJxGO2MZ5O1KEc
f3OQ2XxPMzLzG9uZQGfqUp5/OMQcetOcT/mdHUzkG+rxP6dYwmAq8C+HmUsf
WvAZT9jJJLpQn1DMUOi0LmUIFXnFEebRlzjuXNG1tCS688/6IyMId76uG8jC
U3YxmYTe3dKuxDJf0tXBrsy/aAOimM8Eu9Jl+oHeCXalQzWeXgt2qOuD/eq9
YI9aSV9zNNi383xNpLeDfWs/jatXg/9A1wX/iP6qrYhhPq8rSGy+qyOJb76h
G8nKM3YzhW7E9v6yrqEhUZ3P6nKGUZk3HGMB/WlNmHsXdCWjyMZz9jCV7jQi
mnvn9AeGU4W3HGchA2hDdv7gJ6bRg8ZU5R0nWMRA2pKDF+xlOt/yNdXIyUv2
MYOeNKE6ufiT/czkO5pSg9x8Th7yko8vyE8BvqQghShMEYpSjOKUoCR/cYBZ
9CKSmvzHSRYziHbE9H0u6ipGk8D5pm4iwnxfU2spfQ+ClIj1
       "]]}, 
     {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV0lW4VVUUgNED0iFw6VDuJaQ7BBSRUhq9dHd3CyIhXYKAgtIi3d3d3d1I
K52CgGM/jPOvNff+zsvcEY07RLaPEgqFwvyExwyFXrGbyfSiEZFEkI70ZCAj
n5CJzGQhK9nITg5ykovc5CEv/7KHKXxPY6qQj9fsZSq9aUJVYsYKhU7pAobR
kfy8YR/T+IGmVCOW90/rQobTiQL8x36m04dmVCe298/oIkbQmYK85QAz6Etz
Enn3iq5iHDWIY3ZWFzOSLnzKOw7yB/1oQZh3r+pqxlOTuGbndAmjSON+T7fS
lWTuN3Q9E0nrfl93UIj3HGJmsCPPHml/Ujnf0c3BrpyfaUsSO18LdqVrgn3q
k2BX+ot+rP8EO9TtwX71RbBHraXx9Hywb10afBP6ONi3/qQf6d/Bd6Dbgm9E
n2s3kjvf1A3BN+T8VH8j3PmB7qQwIffD+ic/ktr9rm6hFUncr+tafqU28c0u
6DJG050UZrd0I79ThChmR3QWA2hNUrO/dB0TqMOHZhd1OWPowWdENT+qsxlI
G+qSwPySruBnvuNzPjA/pnMYRFvqUZRonh3XuQymHfX5guiendB5DKE9DSjG
lxSnBCUpRWm+4mvKUJZylKcCFalEZb4hhv8/qfMZSgcaktD8sq5kLD1JaXZb
NzGJCPeHuosszi81j36r/wOVIIvQ
       "]]}}}],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
    "AxesInFront" -> True},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Input",
 CellChangeTimes->{3.684631755048916*^9}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
NJBTa/q0VoM40aX7eZS8jj1PX9NaOq1OnOdwuqLEuoZtLu6ZND5nTVzRqzY1
o17BnattdjvTQoiQdxRlRjuX8CA6L5L4J4OQCZzdZnRqAc8PnepKiaggmpz3
5AgdncPd3DNWmak9RM3V4LtHz89g05GuI+zCK4RRp8GCiuIUzo85sfz1OxeE
OhgTH4CM61Lt2sPmJECYQ9agt2AUC6blCXI5K4HINdHWoYwhPN6g/bflgz5o
97SKvGnvw9ubuNh4O6zB3Yz+3O3d3bjJ4MTIvkv3QIpWVTJerBVTtSjxpjWF
QsFlh2s+z+px2h4tEzaZBNB6Y15f0vQVr14rr8B6r0GoWjjU42gKFhenb7T5
/An0NToeCzjlAU1NlEF2VRl8k0jbp+74HdiurN8TpKiFgJKDRrEhPcB+rUIh
dLwbRlX/5LddGIBXpJ+aPUr9oP+O2SH82jB0XC96dZ96CGJGvI39ZcZhnKZA
XcV0Y36PJE4ULpLB8GLTwbZLJODa7Ttxa30KJrNitPhrB8Eq7ZFnXd8MKHX8
Vh081A8UN/7oLTUsAVOnIJ+wdQN8P/pzfLx9BQpYPlxmZKoBz/FBQZryNaBr
I41/jC+Dy5x7pIO1KBAWr2kaDf4Et0XyDmVfoETRT4JZLKhfg9XxAxzvlanQ
woMkvbiziWAGXj9/nKVGkWfaTb7cCYWaosG/8/I0yNtLfjfjSU9YcCNb7ZGg
RV2MGX01726BiERHw83DdOitTfjeit36cKjr9cGgffTIIMWJz1xaGa7VVqaJ
iTEgW7nq9IJ4cagRP1uSeIgRXbU49qb/6w5gCskqHeZnQq0zVScbzFYJte7p
OJ09zOjedMzTzqVuYv21WnkNFwvq+ClUf8n6G+H8UdFZmZYVZa3zFjyZzyRG
PwmsNNOzocMTV5XhUzDBYIJ5/ZbY0GwO55jGSRvCbD7EqGB9DVMYvGwvszEk
eq8FK1TSr+LPLfuovsp5ELl3TqET7Mv4FdP5t22WccQ9vtRPa2KLWMRyeIi5
4BMRLuWmkHd8Hg9e+ffNTb6BGB9e76tVnMX/GXfrfT9LJjT/O0t6qjqNC2X1
iAtLDODZonrXCU3idsYl34SAPdDqqvHQOnEcWwnc+Tr19gR8Fghp0coexnK6
9onfzp6Hw+ySpmtlA1ialF7x+b0FJPErNemt9+DfKnF6u/ScQVbUrI9PuhNb
3Y4T7HL2gxuvKB7wXGvCMeWcj0YMouHEv4tn31HX4iDNjKQPwqkge6Jkxinu
M06cGCoSFs2B66oXWcUDouGOe8euDqYS8KIXt3W17YOgeUe/ule9wMbLdVHd
eAiEymVKvlcNAFXPMwb9c6NQ6kOnTt0+BN7f9PqNGMlAFX/5k3TAxvNi/0yu
wOokhHnlnrtaOgQpff9ueExOwz3OQ88i4gfAKKFX8X7LMjwet+58yfIbbsT7
Nu+uW4WAwTGRCopK8GCxmbXKXgfzu9tYA/4Uwx7fmfu9vymQSdp46q75bOh9
Z3DH9AclOnlY+QSdRSo8f2GMHlRSofkwi7EjqRvHWx6wPFNOjfRjD2paxPmB
bvylpcIPNEhTKGe34IozqJ0i2zG/p0UHvlxYXy20gJ0M75tfZdKhzOgIxV9u
52E4jm37eDo9mj5DucCXfgL+9EX4HMxiQA9/B7g0pgtBh/FAzHQqIzrh/e/W
+SEG6Eto8bz6nAm5euwYXjIiE9+YZy7tjWdGlJLvGyyONRBiR3Kcjz9iQXwc
7jr/fuQTtwRkGRr8WZFEipJ8sW8c4X+CFFrixYYayOuilQUehIS4sri7NzuK
YrZrZBc3JGpGyEE6d9bxzUNr7KmmOgSv3P0LfkGr+Gv7eNKNLCci2JJKSyNw
GaOydC7UEknQXqsvepOyiBkY9199H5BN9BgdFw34PI+nQ3bvSImrJXokI37M
F85iNdYrIRPvhgg2wipn4Mc0Rv7ah22rqWDU8PdJ49JJnC3P7aDuvguWsqip
RkInMKVcpBRVtDTY8Vzh5fs4giOfJz9IyFcFMdmseKePg3jl3Vj1IUcTWFgP
XaMc78W/KKfFjdvtIbggztRnVxeOe9tlufrNG2r09hlcVm3GlzKsg9jFH8NB
YTbaN4/qcEms+WizZDK8qaqXczYYATefS7nDbhs5sui/Hc/3TsC86tru354k
eGzMO3fr7iSk+WY9YeUlgfiI/wWGMErEwd+Y7eGdDnRjihm8/lSokSpaxif9
GWh401zr8qdGtG/PeN7NC4TwrN2kFjcadO6m9B8OWTdIvmw/xm1Hi15Hy6xm
yFqCUNw3PUZbOrRLwKq7z1cHWIgOfrnr9OhSQvihviSAXS1ZO15bMyAh66tH
95JEoLHiqVj1DUbkrP04QHXXNljYofR8vykTkl3ns9VYmCUC5qbdTpkyI8sP
WexzlG0El93aTh9tFrTmLBSonfuFsLciCBYVVnTtWFEA37kUQnbhQYW6MhvS
VyLfJK88IGIrvFPW5dmRYlufivPCFWKGSlRC6OEaNnl8v8HG4ArxJuypFKPf
CmbhUrNIlvAl2gKdpfZFL+Foo6xpvdYXxOwvl5zzeQs4xbD/gNY6JgiaQoOu
D3NY4NHa+S9hbcTSS9u1lOoZXENlu43HepYIJ+8XPFsxhbXXBvadD9wG2y59
KQrEZBzZQiOkRn8A8lE0y+ibMayaNJD3jhKARvjDs4dZJNxVeYFNMV8Hjvdl
CwX+6sd06ut19R3XQX/ZrOGUwhj4ze5r/nqABG1vk7+QvMhQEnw89OJdErRP
/nSo85yCMJro4CHtIeAJCWNOnKRBOM5kwP+aA0zvtJ9aJ9Oi6yy32Hp4TIDL
5dll1UE69G6HqcUetbPwfRFonpPo0bnKHzORe6UhmOxKzhhlQHPSY3eS+XZC
/6wMnUA3IxoyM1ykl6KGehF74+RuJiTFGSD8QmWIoBOaOcrcwoyG5a4vvxD+
SSjMXqsdrWJB7IE/LSL1c4gb9Ufr4ypZkZDmTOJ4YCRRf0dT/3AxGzq4MtWo
HOlMlEXRfZr5yo7UQ0WHeW5eIKgG9ux5nreOBS+7//6tqEXI7F+83PdjFcuZ
93k4XbMn5jv7L+l9W8bOT8MGAzvDibNBN8Hv3yKmLvoh67PzLcHkxM3vuDSP
nXYkxYarVhNG9S0lIQuz+K3TfM5d137i1u8l7lDWGaxy9UlZrDIF7Evg4q2n
nMI2D8WoA0Z5YOpPzQnOrHGwnYbJGgcSeC2I/RclOwlGAipPE06RQEGnwNha
fWM+vWhdrcZ+EH67kWdy1RjRO8YA9hoNDvCqm5cKJJhQ/r+EY7zWi8TQyHRQ
JWJGRWyPgrzF/xFBj1Lt0qVZkKt//5lUw3LCMRwZvBJmRWYGsMfqTxqxQ/+3
GYcIG7IBRcHtIQ+JuojnJoq72BGF9bmKJrEbxMHVyxU25Wv4uu3bAywaZkSV
+/aTN76tYL7cuznhvV7EGUr9ExL1S3gX2Lbc2/GcODnLcnQ/eQGflnllkR1e
SFzniz33fW4O/5diae+S/JdwVv00eYJuFgcK+1C/ejdFkB/k+5LppvHvBB+t
9FIWUI2hiV9bJ2NpMSkfRn5heGN7b/xs5SjMCYTt46clwVvZlQt7T5PhB6fl
arAvCVrV0pkqq+hR2tN9SjGFR+Gdle9JqxoG9LpNxfTDtAB0Zzz6xVDOiBY4
K7QHOmnBqGffOFUpE6oUaVq4KD1KXOeeUXlawIwibyho3XL9TXzkZBHieM2C
DN9NiLnpfSCsFo6PHU9nRbEGAQ85pJ8SWc1x0/OJbKjM9Jnhnwt3iAUzYcfj
KeyIlZ9oPmeuR6xp0aqJnN2Y582US/qjbhPpqRYTh+ImYDb3qL6aPwmuLloM
FZmyI9MFszSzu2YEVYBygXjhGDBRbrfuUSEBw94zEu+LyFB6mGz75BYJQqoG
l7MH2JH5lK1+m4Im8c10/w8N+3HQ6rBTOHmTBDFeorvQfjKERvCNbd/IC+5S
xd7XTScg/v1fT3hAgqkbzvM1iWT4Wy0QnuZMAkFVx7SWwXH4YsYyu76Rzytm
fgbSXSHDgkeH9gsvEjTwMBhPN01ADU35ocmN7dlb6CeGz7OjrLyxmGIrdcJz
9ykN14V1LEkvsvT8jRqRc95H2Y5rDWvtUj8Z/9aK0KqoeE7JvIKdSXQWSttD
CJkonZy/e5awdmHjnXcXM4hFa4fzbkoLOEO9azlzXwUhEhislSc3h8UfTdH/
p91DnLjNf8Pq0gzueyxmLpyyTPhcV4y6qDaF6Ypqx/1tuADEpGVPniFjydu9
N/h9JOCL9/ExyR+j2KdznXxFVAmajlNKCH4ewkckaRmEruiD63PTlqcjfdh0
p4xJ8UNraObrjEuT7MZS4wrcvisewI0yNerOtuKKUxznKfxCgSP0diEU1GPc
feXU6cF4aC0VWqT7rwJHvXVyFPzvNYRo1IicFU7F7BJBh5w25u/mA0tXOCdz
YeXJLGvmyzL4uO3Ho9ij3yE37KhUREMNoKzYu8H3esCM7+aCYVc3WMlOngpQ
HAD5nLiBwmP9UCZ/XuaC3jCca1DndFoehEehPGVRwuMgFfW19bERCWoGzHY9
nySD8M7f5InLJBhCn53a56eAIkWa6UHjIAh+f5aX0D4Dv25pvBSR7Qe9AUfJ
ppol+NPuZqD1sAGifbwsLzauwN7PbbqTMjUQWqE0HF64BqrTGiMVRWXQcL/Q
3kuDAs39tnMIKv4Eh5b0CkY0KRHz8MOyaeI1bAv5eOcZokLuQuaXrZ8lguLy
f35Lp6kR/p4lL/0jFOrkGz6elKVBAkXXZWnCPWH8btUezoO06JfTkJnmNhvQ
e1rSniROhyZUrSn0HfRB8/sdZjtBesQowaVj56MMmR6kd3v3MyD2A93Hlbgl
QEPZ+b/2A4woN8RJ0ZCXC+7uLZ9u4mVC19x+jCaTVom5f5wCfgLMKDT5loD1
uR7ipx222c7Bgvi/F/1Qb/xGyCy/mD9OyYqcQtID3ANeE0NXAn5tp2FD0v5X
/7aohhChx/c6nJtjQ48NHJkuj9oQ6cecJpTo13F6+1Cs39/LhEpK7J5p9lWc
/vp7tVj8XeL54HHvFu5lzLXe9c2/PZYQWZ9Ld5NexLS72sv6VT8RFzln7/+G
eTzJ8vf315Y/hPz6jQdmarOYfE0gKJyKTBSItjXWaE1jlb2BvSiIAV6aH/7P
R3USR7LYoOen9oDc8Lyn05txHPRh8myt7gnQDQ20SSgdxuXjtx6kNmpCVzdd
7tH6AczU7sRDOFvA17bKAAW2XmxFX/5zjdcZFhJYfdx0OvEJy53Z54/6gWav
xXONB034n8LB0JK90TB82mJW9HQt5gmWu6A/nQLnzAlFml0FWChvwW4/ZQ5E
KDC0R76KhORrITykjfn9xGz8I0vTPlhIovlkHdcLIUzSzfMaG3mClk8no3gA
bOw7fvASo7D/oJvJ/aYhWP7vxX99lGS4xXXqnvJGnuC+yx1DPTsJtKOPX0VV
DoErHdfYCGkabqyE/+FMH4DsnQ92Gv5eBgoPKvsrIr9BhnRM279qFc6MdmVE
iVRCSG9VyXzGOuxTYbwsupFv4smPiptrKRDd66mIM7tzIObBCm1sJSWibONo
VYhIBZX5kbRb5VRoTTRfi6srGvjuC+bs/UKNeDMJq4vNfqDPr9yymk2DwOLW
27+yLoDkq/avvKZFPS7Fgq6rFqDhENHVmUaHBG47zP0ePA8s/m2T9Sn0qDnl
wutuppPAE5UbvOcVA+oKDcePp4TAyHn7lFQy48b9/8/EVS1G0DtKfq8Vz4T0
lxWDL70mE45MO1p1Y5hRw/697x9ENxBLsyK7PQJZ0B8vl4KfSp+JQ1digyt9
WFHL+p9qqV3xhHffBYt5DzbEwFCgs6R7j/hA98pX8R472q6RudfuryHBKfaX
v+P+Og6hOpx9Z+YC4eEWKp39eGN9pntPKp1yIu40rYWPhS/jWI6enFNOkcTb
s8JvDrxexF62c11CMtlEOuRaviydx618xdeG6WuJw8pLN4PKZ/E1rZCsJMUh
wl1rJXFnwzT+ti2desyJCjj7PjdaV09ils/1RSeodoGR4LvFqYQJvDus7ZmN
hjQwBZi9uf5tBO+dtJhRMVSFVhZfcmbFIJ4Xp78yzWoCAiWc2aMrvZj92UXG
xAx7GHZ2fJt9qAt3nhBOlo7whpwIf9fQ681Yd/5kJHk1Ah7o7zC0eluHT+6t
FaqgTgaeS9wUx9RGYKeVsQOv0xAomL6983bHBLgadLF73iMB+f2pVm2nSXia
kyf/iZ8EPSWiXYrBlCjOjC0u5WM6ZCn8Zqf2oUKnMvcN144+Awn5+J3sD6hR
1eH7cg+WAyFKnKVqpysNUv6s48bh6wZPjFRf0lvTots/TyOdIEu4QPPKBKzo
kEPJe2vKKh2QOJC5JmhBj+6GS9r2sCEwC/jJn2LJgGYax6hequ4H3fYyX7pr
jEhA4OqHXJNtcDPLoJ7TkAldV8lIZjObI2RmOVduGTKjH04nnj2430b0HXH6
9u0cC3pcG+YqRl1KSL1LLF1XYEXcBj3a2z+mEEdTx2J8ERvq0Xt1nMvSlxBK
6l+qPMmOtJl9PU45XyVOKbKXZoauYVrhulxPsgWxrTZt+9FHK/itx7fEPcUP
iKoFe4eK+CU8b30kPujuCyIxr+rF98IF3Ppm7Yb9DUxQDx6LWS2ew+6vSs99
Ymwjzhb8jT/2ewYrnDBUTGCbJVaoClg8a6cwpXfDIUm0DY7/e6UfU0nGc8F0
4oup+4EvD9HMFI1hIQ3XbXseE5AUlSPeUETC2wJHqHXsdWDgY6DLl85+PCv1
6Thf9HUoC0x9unp4DDQ1PJbi95FAj2Jsyt6NDEzmCmvVHiSQPT158YPrFNz3
0Z4NMRiCXawew//GaNCKU1ri3VgHGOJXzSSP0iLBFlUvOl8TUOl0t/DspUNu
55K3z6WchdFeln7ffnp0/8/ZFG1HaahLillMHmJA/CYdmD9sJ1xlMTM17NjI
E3dN1dS8qUGpxD/sUQcTknn+LsmzaIjI2b0jX66RGRnTDpkqfvhJbPvcevtw
BQui3cm6Vzcnhzjw35OLYeWsyO+OQljJXCRRuy9fzOozG3K8UJf4j8qFOGtr
xVb8hR15MN1u/dNxgTgrzPhBtGgdr662BbTWnSdirjLIbWtYxV/2pY4n09kT
fed6YuZrl3FoxxML44fhxJRtkSTF4CJmEv7m6RP4hqi7+NgwjGoB27TlGiVV
VxGvBxSNd1PM4SWqs6lt3P1Ec28IdTnXDM5hKyzknFkn1IXX8roYN+aj5E7t
TB8eGHS9kiCUMA516zcYqu1I0KmuuXznyCSsp/9T9QQS+FO1X79yhgEZBE1S
cd89CFrhOzUnVRiR+HpNbMFTDpiyZLviIsuEXlryep7rWSSihjlZF+WY0f1P
p/qCi/8R+tq8fKOSLOia8YfvGZ/KiSONz9vjhFiRI0NJQ41mOsFOc0pGfQ8b
ys4Or7dnCCAuWdN8ZOJhR691hnb++HKDcJBT0J//voZVLIqeOA6YEofyBfmi
fq7gIt1YblZfL0LGXtftV8sS1nVfO23mn0T0tJgKv5hfwHw0LSZLrIXEoVWu
kMG1OfxLPcL8h/hfotxIMPwH6yxW3s8W4mIyRRg9UXMQZp/GikH6eWEKLGAr
OHaclWES3xsvtlit2Ac8q1+ymfNHod33YdJpChIcCDnjlylPBtW3bM2afiRY
kXEeef11Yz5pDc0+s+MYzPCmKVpUMaD1I4vBhbd3g9mX/AMqmBGxFcfpDMnS
Qa3bKcGJIiZ0dGXWS7twlODg2lFd9ZEZXayu+Ler+jfh+9frh146C2pIOHr7
dMkH4qB8jL1YCivyHTkv+iD3KZHuS1spFceGzgUzfN7edIe4LxtYvZ7IjsyW
+tYsx/UIi9AdYhe0V/HFac04erbbRPyZRZ1TIROw/kNv7dXG/o7UfwM/Q3b0
bsHntUCPGWHDHXBv4vUYjHE6UdookcDH+bHZ8Q9kuOTB5V1oSwLOF+o67j3s
6F76rsVvVOeJAqoSSUPzcTg7rH2l4zoJOOqdNSt3k+H1Ebpvdzfmf9s/OgPO
Whv33+yrR0/7kOBWARbVfUoGS/sGVydXEuwYYWAeah6H7ZWvLureJgFS4St6
ZEgG/PoaW4k3CaoLE0spqybgCXdr+6uN7c2fKprVn2ZHiueYuZj4NAg6F+bc
xm1kOP2z9zXLxvygz+v9LuLIBKwYclCzbeQRGdJ7wXgNMrxy+DyQs5Fncihr
ggQyJ+DXb0+Hxo08JSDZScqXIMPBidDfERvv/R6J8OvbTsDItcywvRv5sMvF
YaGvfwL6v5Qf37ux/eGAGZWq5Y28JubaF4PViE1v+ZMi/53QfkfY9JZ9w0cu
f810g01vaSvp+E7rqg9sektdMbSqYhQIm97StTmnmGZvBGx6y5TOjEny1aew
6S3PtdfNODQkwqa3tNUct3jsmrrlLXPmvt8MiMnc8pYmB50CIorfb3lLsfHM
I1/3f9jyllKDf2J9yJ+3vKXtiWQTEcBb3tI2qzh9Z0PZ/7zlU2tSOfe3LW8Z
pj309Hlr9Za3bKr8cjkmp3bLW74YfLGj7lXdlrcMOJZFpR9dv+UtdbkvPxNW
/Z+3fNL01dNuqnHLWxZofr2rp/d3y1vyDjOZPjNq3vKWCwMpY08FW7a85b21
ad1Ej5Ytbxklocv66l7LlrdMteOWmuZr2fKWZqBzS/Ra85a31Ev53Sp55u+W
t1QSCDVn6W7c8pbRR1BrrOH/vGWBP2WtfWD9lrfcn9M4NFNUt+UtLx89EXm3
q3bLW3IX+oT4UX7f8pb84kTwA79vW96SlsxdeXyhbMtb1pdHqOxtwVveMqHA
0+q2S8GWt7QZ+f3yseaHLW/JkLzuLHwge8tbMmbfWZL4kLnlLZmF+Si4H6Vu
eUvKnIow3cIk2PSWCR1O42zPnsKmtxQMDdPlT4mATW8Z7OVyx3R/EGx6S216
2ojKBB/Y9JZFcmK/eD67w6a3rPi/62HTW+KjN6ldklxg01v2hl0U2vHdEza9
pbjgvrEXL/xg01s+dq2/oxXwCDa9pXnSJW3ubVGw6S13MQsXig3Gwqa3zFM7
HLKtJnnLW15t0eOhN0vf8pYNCjNR+n1vIChX13fhZhfc0Nj/XOJN05ZvzBui
oEzu+bvlG+NOjakUfm/e8o0zcqmkCYOWLd/YZnA0TSmgZcs3Un4jRPk3Pt/0
jQMONatuG7/f9I0PlfSt6Lr/QiIaDM/qmYe9kpEfv8U3bXlCqwnWlu8X3255
QkWqxm2ebulbnvAt5dObSdwvtjxhbLlKo7t1HGx6wtDylsv9dlGw6QnjJXs8
um+FwqYnnHjYr/zfLn/Y9IQ8uxRXdz+7D5ueMEJSizWNwxU2PaFA4em5HfVO
sOkJ0/mTGlUFPWDTE1pp19r3zzyATU8Yejq3d84sGDY9IcPEuoHko8ew6Qmp
ngfmSvA+g01PWBE4Emn6+PmWJ2whFci97X655Ql3oKTtp45mQarX9OStX52w
L+qmWY9205bfa+so7Hif+HfL7505mpOe9KR5y+/Rar/+uw21bPm9kKT48BN+
LVt+z1s+UD/JtmXL7wln27GYzTZv+T1Kms4/Q8LNYCyouNJnPg8u3vTXlWea
trxc1pOOjtq977e8nKhCA80h1owtL8cbyvN57GzKlpdjsayk5nmQAJteLlzt
etGthWjY9HJUukOP/rsSDpte7k7kDi1u9gDY9HJpckUJGge8YdPL9d1INKvX
uAObXi5DylHsUcRt2PRyvlbFj+sbvWDTyxnIv7h92O4hbHq5u3vJ5pwNYbDp
5X5FsXqNZ0VDWdq7MNlb3UBbsttlB83fLX8Wamc4syzUvOXPoi6LuX1daN7y
Zw35u1P3bpzPTX+mS6MWU7xxvjf9GZHybPWwfMv//JmN62nj2OYtr7V66uPx
k07PYNNrqekyxLisPYZNr6WrSCXz8EQIbHqtS64OnBc0fGHTa30T2ZZ7kuMe
bHot7Wsb0ym9M2x6re209cYOC46w6bXoLh0SlfnnDpteK0ufYZpd9AFsei0m
5fCz1y4HwabXusT5XyJXYwRseq0XdXP8Q6diYNNr3bfjUlFbSIJNr3U1+cjV
UtGXW15L+o8PTezV13DrUczAwdoOMD6pm52xp2nLR/FHfzvEdvfvlo/iXpI8
fMm9ectHWXhLmdEdbtnyUQprOpwJ3i1bPspt52D+tGvLlo+CQebERoaWLR9l
dE/ZGak0g1z4xGFvoXmwuCm/T0vg75ZHYrA2GQtIfb/lkQgnNc64zowtj6S8
h/3AfVLKlkfaeeasJFtcImx6pNI5F4nMiiew6ZF0aBzYn1NEwKZHumezfc6O
OxA2PZJW4iWngn/esOmRHhMLjO4ebrDpkZZtKtS/RrrCpkfKmoyTb+T1gk2P
5M3DQTXr6w+bHomvjcksICMUNj1SCL1JpVRbFIiIUwXxjnSBaJed/JGWpi3f
8/z3uY+9VM1bvuel9/w9357mLd9D83Z+75erLVu+J61gN8552LLle+xLJN2n
1Vu2fA+ejozYltu85WFG/oS2+FjHwqaH0TNiir+cFwmbHoZ3p9fxI5qPYNPD
nEEsNWOSfrDpYTS66Vcqz3vCpodpPmDNdobeBagCkDNDwSDsHWi0sMlu3vIi
1Kdkv+eda9nyIiyKzUftN/Z304ssvS/zy9o4nk2PwP3nRj3PxnrZ9AjB4ukP
rvq0bHmEAz6+fm2HWmCz3x+VKDtO2u4Em/3+C5mHrpeHOsJmv3+O30vbVskd
Nvv9LzJHi+oqfGCz3+95v05IvTUQNvv9zxoCHTTvRsBmv19eUul56q+nsNnv
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
J38Za5zK4PqpRuGcl9OtExhcP907bZ97jFEcg+unu5ulVKcMRDC4ftoT+Khp
g2cIg+unHaNy+852+DKB0yZIlRm2Mkb2j9XHQr2K64sPNTv6BXpCWl+UM4np
Pw33B1xffFWzIO2gh5DWr9T8JtpqeQpp/Spmg8sXZ9gf16/u9+evXqkjZHA9
6NZPLZ+2Vh9aj2FVL+6eDvcTXI8ZOaLpwz+4n+B6xKLRyieGuAhpPSI44WJC
JMxv9H77f6NVLkCMvm9vGM3uh/d/9P1YQd72JrifoO+HGupYDun2ZtD3Y+ak
Tm+F92P0faWimhcT4Pqg7y99uXVCNdwf0PfV+zKS6+B+gr6/+aLCtxFwP0Hf
P7nYSZ8F+6Pvt7SXTFWC8dD326eN+dgb5M2g7xttr5VeCtvR97MaZ6gthc+j
79cc/RirAr8Pfb9Jw1TvM8To++yKY9YCiNH3i9tLi1dAjL5v+qqGuwLGR9//
PnpC4FcDbwZ9//m8bV6SCbnk+9Hvvzu0T8wj369UbMg4eT+ffP/fxIqOMZ4F
5Pt/MkY+VVO8Sb7fU5ul+rWviHx/3NvzYSWVxeT76+5FDT1TXEq+37347pbc
a3fI92unJ3n/XFVGvl/o5qCWqF1Ovv93dOtNNZUK8n29TKX/FvdXkO9fvK54
0e5DJfk+d7L+vXpuFfn+yln3f8dFV5Pv2/4oWdVtfI98P3Dph9CIH/fI9y/v
t1FdlXiffH+mj05EnjyPfD/Kdll9RiKPfP9a0XL9Yb945PtZn/qcR6zgk+87
ifeM0tjLJ9/nTtj61zaCT75f9XBJ6HmI0fer/Ex2VLnzyfdzLE6UrVrFJ9//
4r7w788fPPJ9yRu+jeUneeT72XdSff1UeOT7x2eHBRw4dZ98n7W3e67373vk
+7ITN2jEbr5Hvh/V6TOafaqafD/m+a6apEdV5PsqKksFjd8qyfcP9Z+L9phU
Sb5/PC7rqNbSCvL9pE7Z77565eT7HWpjxydYl5Hvd7dfffmde4d8v69n43X/
ilLyfYvCqI0mP4vJ97/eTlvAl7xFvp9wqiLw3dqb5PsW4n2dfskF5PtWjqqN
nQ355PtXY2ZsqNPPI9+vH5wP6Pue5+Nn3TXnMPXZo22KrguYJ+tKV02045G3
e9Qkaa7n88jbw50zspYo8snbhz2vi9pqzSdv77vd23PlEJ+8/fsh98ero/jk
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
FmeTZ1Qs031nMo5NnuEuf+CYpQKbPOPc1HPVL2awyTOuzpPv9lnIJs8wM7/f
IK/NJs8Ym2yk4qjHJs/wdFk1OnYdmzzjV0uzXJkZmzwjuu5Kfaklmzxj1NVQ
p71b2eQZyVJpbf3b2eQZeVv15io6s8kzDjpO2WbuyibPmKt+VPrkbjZ5Rl9N
yowF7mzyjOs3Zhi2QYyeYfdV3/UbxOgZbycYuEyDGD1j3kM1j4swHnrGWKHb
roXwfegZO1703v7hxCbPiLva8W6hI5s8Y8uExz0b4PegZ0yYx7D+wO9Fzxho
q1023pxNnsH5+aBLCOcLPUOt/OmFHfps8oynk7IrguB8o2eYF+5b6qXOJs+4
bNYY92Ymmzyj+n1NOheuJ3rG3WlnX50czybPkJ769lkB5AN6xmKdIF0TyBf0
jLOFrRenfGaRZ0zzDWwa/pJFnnH3BxPL1LDIM265GyYqlrLIM7YnCA1+QT6j
Z8Tk7nA1TmGRZ+B8QM/YtsI9K+cEizzj2jS1gIf2bPKMUZKXgtV2sskzFr1L
M3ziwibPUFAqqo90Y5NntCybahqwh02e8bn243c2XF/0jImrjGYO82CTZyht
11zJgu3oGSOX7K/yh8+jZ2wbu8U8HMZHzzCKaPa6Ct+PnqFodVJTdHzoGecn
xRkK4fjRM3zPXr5VcJJFnvFPP9lvUwyLPENuf2kFaxubPONLr660/A42ecbp
osM2/ZD/6BmPm4c7/IB8RM+YLSX1dxQcL3pGplePnyf8HvSMgqk2X/ohRs84
1OUSVQcx9TNMsmurh8+jZ7B3nNOWh/xHz9BZ4D9s/y42ecZ4c83FEyH/0TOM
G25vGAXzFT1jYfD2H0cTWUz4tBkpj0tfMvPuXtGYDfujbwgmDHQlwXjoG2XD
FxVLi+bboG+4Ms0Sr+B40DfqCsceewTHi77xMO1T3wDE6BvVIWKRbhCjbyxZ
NPv7RPg8+kZOT2hBE5wv9I1t/hq8F3D+0TeGWrya+F80i3xjTrFVlBRcD/QN
1X3cguMwv9E3jv5YvzsOrgf6Rt3HSxtZMD76xiy7+7fq4Pegb8i61K03g+ND
37A9djmiB2L0DaOFVZeaIEbf+PtUNu0vHD/6RljlKKntMB76Rmvg1K31cP7Q
NxadmLMrHM4v+kZSTeCaNLge6Bs8D6t7X5JYzLWPZ/2rCoTMZE7XiWzIV/SO
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
Gh99ZKGz5KIV8P3oI0MG/8P6EOP/7+3/B3Z66Xg=
   "], {{{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1: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
Ag==
        "]]]}, {}, 
     {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV1He8T3UYB/Bzl5FxRVRoXKIkNEVaIk0jmVFJtG0qWhpKqSgNu+y99y6S
kTKLzJK9y969nz/e9/N8P8/v3PO6v3NeN6tpq9otU5MkSaGzH73SkqRCjiSp
yFJzwYwkWZKeJHnk+/IHMszV5BvM4BwXczftmMAxtrv+AjeYn2EA/7BEl0/e
RVvGczR2+vOUNjehP9tYrMuUd9KGcRyJnf4c15ufph9/87Mur6xEa8byX+z0
Zyllfoq+/MUiXR55B60Yw7+x05/hOvOT9GErP+lyy4q0ZDSHY6c/zbXmxvRm
Cwt1WzhFSedG9GIzC3SbOUkJ5yf4lk38qNvECa5xbsg3bIznoJvPPOYyh9nM
YiYzmM40prKR4xR3bQO+ZgNTdBs4RjHn+nzFn0zW5ZIVaMEoDsVOf5Qscz16
sp5JuvtlJ6Zzlou4nVcYycH4rM/dJ1+L+3MqnqfuLTmLC1xNXb5kHRPt35Pz
Sff+VY3nQE5zRzmNM3GO508u/Tsyn5wjU2R5mV8ukNnlyzKvHCEPxH3c4xLn
xebcsnO813KuTJWVZQG5UOaQr8pMOVmejHfM9Yvib9a9KWdynqviWZJNX0d+
wR9M8Pl35TzS7KrI15nK6bgHbzObxP42+RLD2R+/w/X3yg7x3XMi3lvdlfJx
evA743XZ5a28yDD2xU5/j2wf3y/H4z3WXSFr0521jNNlk7fwAkPZGzv9IYqa
H+Nz1jBWlyFv5nmGsCd2+oMUMdfiM1YzRjeaUYxkBMMZxlCGMJhBDGQ1Byjs
2pp8yiq+161iP5c716AbK/lOt5J9XOZcnU9YwQDdCvZyqfOjfMxv9Nely5t4
jsHsjp1+D4XMj9CVX+mnS5M30pxB7Iqdfnf8PzU/zEcsp68uVZajGQPZGTv9
rngfzQ/xIb/QR5ciy/Js/M3siJ1+JwXMD9KFZfTWJbIMTeN7YHvs9DvIb36A
D1jK/1Zc23E=
        "]]]}, {}, 
     {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0VWUUGUUgNE7AwMDUvJASYdSSjN0SCMIDKXSQwvMSCMd0t0l3SmoSCvd
oSCtSHdJ97B52Os759yXu9afKSomMjo0CIIQYkkRFgSFw4Mggkrm5PGC4B9N
qKv1b0LNw3Qxh3jJt/RnNrt4SB2a0Z3JbOYmFalAecrxOWUpQ2lKUZISFKcY
RSlCxPv/oxAFqU1TujGJTdygAJE0oSsT2ch18tOWfsxiJ/9Ti8Z0YQIbuEY+
2tCXH9nBA2rSiM6MZz1XyctQFnGQF7SmDzPZzn1q8APz2cdTGrKUI7ymE+P4
jSvkYRXHCfEOQ/Q08cwL9QDPacVZwt2Xa2L9U9/Sm6T2kxpXZ+gHuk3v8SUf
2s9pAl2hSfQvjWUQyeynNEznaSLdq09owBniuy3Rw7yiIyeI4z5W13GZz1jJ
MQLfBusC9vOMlizjKG/oxXT+4C7VGchc9vCYb/iOMfzKJT6lBT2Zxu/coRoD
mMNuHvE1MYzmFy6Sm+Z8z1S2cpsv+IpoRvEzF8hFFD2YwhZuUZX6dGAka/mP
nFShHu0ZwRrOk4PsfMLHZCMrWchMJjKSgfSkIy0fkYbUpCIllalLO4bzE//y
DgRph3o=
        "]]]}, {}, 
     {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0mUUFVUUgNGhQ7pBuksapKS7OxWkQaS7u7u7u7uRkEZBQFFRSVFROhWk
9vzY7zt3zf0x651J17JLnc4RgyCIQFw/CaMGQYHoQVCQcuY00YLgT02qu/Qa
cc0TdRM/Es25o45gJed4S11a0p8FHOc5ZSlDaUpRkhJ8QnGKUZQiFOZjClEw
fDfyk486tKAf8znGM/JSm8/pyzy+5il5qEVz+jCXozwhN18wnBV8yxtq0oze
zOEIj8lFB4axnG94TQ3Gso5LRPL/fKa9mM1hHvERE9jIZaK6116Hsoyz/E91
xrCWi0R071Pdws/EcO6pszjEQ3Kyk6vE8Xy83iKheYP+QBRzO71NYvM2TaG/
6Ac6RFPqDY2vSzWZntFXVCO18x+aRLfrh/qrxtLRmkpvagJdo8n1gkbQpvo7
icyb9Seim3vodeKZZ+pXPCAHO/iN2J6N0/V8T2TntrqVK8R0HqxLOM1LqjKK
1XxH4E4T7c4MDnKf7LRhEIs5xX9UYSSrOM87GtON6RzgHtlozUAWcZJ/qUwj
ujKN/dwlK60YwEJO8IJKNKQLU9nHP2ShIg3ozBT28jeZqUB9OjGZPdwhExnJ
QHrSkZY04R7DXYX7DncYfgfhrsJ9kzTcb/iNhLuiPPX4kkns5i/eA04PiXI=

        "]]]}, {}, 
     {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0mXYFVUUgNEL0iAhISHx0Y2EtHR3SYPS3Q0SBt0o3Z3S3Up3p5TSoXTn
mh/rvufsmef+2RPWuEO19uFDoVA44vlJETkUyhElFMpJVefs+lIz6B59SJjz
VN3GbRK599JxrOUKsc1+0A4MYQmniWReRStTiYpUoDzlKEsZSlOKkpSgOMUo
ShEK8z3tGcxiThHR/xfShrRjEIs4SQTPvtUGtGUgCznBZ54V1J6MZQ2XiWVe
X9vwKws4TnjzAtqDMazmEjHN6+lENnGd+Gat9Rfmc4xwZvl1Clu5RUKz7jqa
VfzN52Z1dQIb+Zd4Zq10B3dJ4v6zzuMoIfd8upv/SeE+WZ+SxnmL3uRL5276
nHTOf2pmva9JdZRm1ceaSldqRr2oMbSOfq0vNL3+pVn0gSbT8ZpNn2hq3aCZ
9B+Nqy31GWmdt+sdEjv/pI9I6TxXj/CRvOziP5J7Nkk3c4ME7l11J/f4yn2k
ruAC0d1r6++s5xpfmLXQAczhMB/IQxdGsJzzRPNuLf2NdVwljllz7c9sDvGe
3HRmOH9wjqjeranN6McsDvKOb+jEMJZxlije/06b0peZHOAtuejIUJZyhsje
r6FN+JEZ7OcNOalOY/ownX28JgfZgz0Guwr2Heww+A6CXQX7JkOw3+AbCXYV
fEPBPoNvItgRYVSjEb2Zxl5e8QmW5IxJ
        
        "]]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV1He4znUYBvCfnNOSlBKVspM0jIaUiChKSSpFEcomGiIUKipFGdl77wrH
PPZWRpkhyt57VOjz/PE59/O9n/O73vO+7/c6eeo0r9osQ5Ik7f3okzFJVqQk
yWc8TVb26Fay2zyYOtxHQt/Yyc95hpvYq1vFHvMQ6nI/GegXO/kFFbmZfbrV
7DUPpR4PcAX9Yyc7U4ls7Nf9wj7zMN6mCBkZEDvZhWe5hQO6X9lvHs47FCWF
gbGTX/Ic2TmoW8OgSOevqEwODunWMjjS+Wue51YO69YxJNK5Ky9wG0d06xnK
MIYzgpGMYjRjGMs4xjMhnvHsN1Thdo7qfuOAeQT1KUYqE2Mnv+VFcnJM9zsH
zSNpQHGuZFLsZDeqcgfHdWflj7xPaTboDslRNORBrmKyfoPszkvcyQndOfkT
H1CGjbrDcjSNeCjuTmqSzJbtuZp/mMZHlIvv0j5ddmCK5zfK76gWf7vdApmL
S8ykLdfql8iTfv+8/Jksug/jNeSiuJ/yybhbcq68UX4qr5PL4j7KTZ4/Yh7D
9c6N4/3KhTKrfDjuspwjb5CfyExyqbyGf5lO6zjrF8un4r6Z58mO8fl6jU3y
e14mN5eZRTtO2V+QU2lFWTbrjsqxNOGReM/8RxptKB+fvd/bLHvwCnk4rdvC
MfM4mlIi/u74nGIne/IqeTmj28rUSOdeVCcfZ3V/MI3ppDGDmcxiNnOYSzrz
mB/PeLY3r5Gfc7ptLIh0/oHXKcB53XYWRjr3oQZ3cUG3g0WRzn2pScG4R7o/
OW4eTzMeje+XxbGT/XiDu+O70u3khHkCzSlJZpbETvbnTQrFZ63bxUnzRN7l
sbgnLI2dHEAt7uGi7i9OmSfRgsfjXrIsdnIgtSkc91n3N6fNk2lJqbhnLI+d
HMRb3Bt3Jv4vc8Y8hfd4Iu51vDYz+JgKpLp/82WneH/m5TKbXOH5/wG61trs

       "]]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwN0WO8FmYYwOE3nJNr9SEtndqy27K1jJPttpZt27Zt27ZWy7Ztner6cP3+
930/H5+Qhq1DW4ULBAJhxA0KBK6zmqE0pwoliEd8EpCQX0lEYpKQlGSEkJwU
/MbvpCQVqUnDDdYwjBZUpSRpuclahtOSapTiCTuYRBcako5brGMErahOaZ6y
k8l0pRHpuc16RtKaGrzlILPpSxmesYspdKMxGbjDBkbRhpq84xBz6EdZnrOb
qXQnjNMspQkfOcp8BhIIDgTO6goycpeNjCaCt/Palq+cZDGR3C9rLd5zmOhu
czVIL+ov2l9/cIaY9uUaRa9qbC2nL9hDNPs0jagXNJb20O/8Rwz7Mo2sV7Qp
nzjGAoLdL+kgwpn/15Vk4h6bGEM7vnGKJdTmA0eYxwDK85K9TKcnf/OZ4yxk
MJm5z2bG0p46VOAV+5hBL/4hCw/Ywjg6UJeKvGY/M+lNM7LykK2MpyP1CCUb
j9jGBDpRn0r8wZ9kJwc5yUVu8pCXfOSnAAUpRGGKUJRiFOcx25lIZxpQmTcc
YBZ9+JcvnGARQwjvH87pKqKar2kc/Ut/Avjjhvk=
       "]]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV0mW4FlUUgNGPuuQlRLiE0ghKIyBId7d0CJdupESku7u7QelukO6UblBS
CcGilDU/1rz7PHN+zZ60kZ1qdIwSCoXCPRKHhUIP2MwY2vMVpfmQJCQlgmQk
JwUp+YiPSUVq0pCWdKQnAxl5yBbG0oFalOETHrGVcXSkNmXJxGO2MZ5O1KEc
f3OQ2XxPMzLzG9uZQGfqUp5/OMQcetOcT/mdHUzkG+rxP6dYwmAq8C+HmUsf
WvAZT9jJJLpQn1DMUOi0LmUIFXnFEebRlzjuXNG1tCS688/6IyMId76uG8jC
U3YxmYTe3dKuxDJf0tXBrsy/aAOimM8Eu9Jl+oHeCXalQzWeXgt2qOuD/eq9
YI9aSV9zNNi383xNpLeDfWs/jatXg/9A1wX/iP6qrYhhPq8rSGy+qyOJb76h
G8nKM3YzhW7E9v6yrqEhUZ3P6nKGUZk3HGMB/WlNmHsXdCWjyMZz9jCV7jQi
mnvn9AeGU4W3HGchA2hDdv7gJ6bRg8ZU5R0nWMRA2pKDF+xlOt/yNdXIyUv2
MYOeNKE6ufiT/czkO5pSg9x8Th7yko8vyE8BvqQghShMEYpSjOKUoCR/cYBZ
9CKSmvzHSRYziHbE9H0u6ipGk8D5pm4iwnxfU2spfQ+ClIj1
       "]]}, 
     {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV0lW4VVUUgNED0iFw6VDuJaQ7BBSRUhq9dHd3CyIhXYKAgtIi3d3d3d1I
K52CgGM/jPOvNff+zsvcEY07RLaPEgqFwvyExwyFXrGbyfSiEZFEkI70ZCAj
n5CJzGQhK9nITg5ykovc5CEv/7KHKXxPY6qQj9fsZSq9aUJVYsYKhU7pAobR
kfy8YR/T+IGmVCOW90/rQobTiQL8x36m04dmVCe298/oIkbQmYK85QAz6Etz
Enn3iq5iHDWIY3ZWFzOSLnzKOw7yB/1oQZh3r+pqxlOTuGbndAmjSON+T7fS
lWTuN3Q9E0nrfl93UIj3HGJmsCPPHml/Ujnf0c3BrpyfaUsSO18LdqVrgn3q
k2BX+ot+rP8EO9TtwX71RbBHraXx9Hywb10afBP6ONi3/qQf6d/Bd6Dbgm9E
n2s3kjvf1A3BN+T8VH8j3PmB7qQwIffD+ic/ktr9rm6hFUncr+tafqU28c0u
6DJG050UZrd0I79ThChmR3QWA2hNUrO/dB0TqMOHZhd1OWPowWdENT+qsxlI
G+qSwPySruBnvuNzPjA/pnMYRFvqUZRonh3XuQymHfX5guiendB5DKE9DSjG
lxSnBCUpRWm+4mvKUJZylKcCFalEZb4hhv8/qfMZSgcaktD8sq5kLD1JaXZb
NzGJCPeHuosszi81j36r/wOVIIvQ
       "]]}}}],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
    "AxesInFront" -> True},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.684634440271858*^9, 3.6846356592803373`*^9, 
  3.684667985568658*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"pdfTriangle", "[", 
   RowBox[{"x_", ",", "\[Mu]_", ",", "\[Sigma]_"}], "]"}], ":=", 
  TagBox[GridBox[{
     {"\[Piecewise]", GridBox[{
        {
         FractionBox[
          RowBox[{"x", "-", "\[Mu]", "+", 
           RowBox[{
            SqrtBox["6"], " ", "\[Sigma]"}]}], 
          RowBox[{"6", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]], 
         RowBox[{
          RowBox[{"\[Mu]", "-", 
           RowBox[{
            SqrtBox["6"], " ", "\[Sigma]"}]}], "\[LessEqual]", "x", 
          "\[LessEqual]", "\[Mu]"}]},
        {
         FractionBox[
          RowBox[{
           RowBox[{"-", "x"}], "+", "\[Mu]", "+", 
           RowBox[{
            SqrtBox["6"], " ", "\[Sigma]"}]}], 
          RowBox[{"6", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]], 
         RowBox[{"\[Mu]", "<", "x", "\[LessEqual]", 
          RowBox[{"\[Mu]", "+", 
           RowBox[{
            SqrtBox["6"], " ", "\[Sigma]"}]}]}]},
        {"0", 
         TagBox["True",
          "PiecewiseDefault",
          AutoDelete->True]}
       },
       AllowedDimensions->{2, Automatic},
       Editable->True,
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.84]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}},
       Selectable->True]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxItemSize->{
     "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.35]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   "Piecewise",
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True,
   Selectable->False], " "}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.6764622317264*^9, {3.676462275865959*^9, 3.676462333498724*^9}, {
   3.676462386203244*^9, 3.676462388994298*^9}, {3.6764661175139837`*^9, 
   3.676466119114414*^9}, {3.684532477326845*^9, 3.6845325183824787`*^9}, 
   3.684532784316008*^9, {3.6845328299790363`*^9, 3.6845329325663357`*^9}, {
   3.6845330180277*^9, 3.684533026054028*^9}, 3.684533084708044*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"pdfTriangle", "[", 
       RowBox[{"x", ",", "1", ",", "\[Sigma]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", "1", ",", "2", ",", "5", ",", "10"}], 
         "}"}]}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "4"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{"sigs", ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", "Bold", ",", "8"}], "}"}]}], ",", 
        RowBox[{"LegendLabel", "\[Rule]", "\"\<\[Sigma]=\>\""}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.75", ",", "0.55"}], "}"}]}], "]"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<../abecker/SwarmPublications/JournalTorqueControl/pictures/pdf/\
Triangular.pdf\>\"", ",", "%"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6764623486045923`*^9, 3.676462394184904*^9}, {
   3.67646603305241*^9, 3.676466039085231*^9}, {3.676467095974711*^9, 
   3.676467144451521*^9}, 3.684532791002536*^9, 3.68453283228883*^9, {
   3.684532907047003*^9, 3.6845329632608023`*^9}, {3.684533010619349*^9, 
   3.684533027756667*^9}, {3.684635475603888*^9, 3.684635476052294*^9}, {
   3.6846355747047367`*^9, 3.684635582349329*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJzFmnk0VW3bwE9FRFSkolSGJlIUTdR9FGlAZUgqSqkkGYqeIhlCFJkzho6j
QcMxbJkdM+cYkpAj85SjMpQhRb79rufZ135XrXe93z/f+vqnda299+267mH/
rt85R+qMjd65mRQKRWYWhfKv/0tMpdqmp6eZlH/+LfILXBUl+QviXcqFHTSR
SYhbrj+m6cn9gDhP94vfg4PfIXZ4ODKwV2MMYroPwyD21AjEzwbkFM31vkI8
1M2/JVd3COKTw8puNz98hthTgONmVN4HcbRp9z33H90Qb63H+utRB8RTjnMt
eSyaIL5U4LxgqqkW4rMNHSsOGZUwXVtyn7+qikdjb64wxcQSmNSyntDtBkxk
zLtYhd8mFeWm+N38/oSFEr4OjnG/s9BsA4tNy1Etssv+0HAnqA5JuBra1Ou8
RyqROz/0sZvRPuaDsvzyZjQRIRB107oT3d8p6j5frANx5ecxlTf1og0j+Rr3
wrqQQmXQuKhWPzqOLRFbebgXuSsxVscvGkC7dBp8XJr6kNyO2xRP7hDiVTax
MeP2oZwzA+MHh76i3frVji9VetH7Lwn9lnUjiBXB6diQ1IWWUR5ekOwYQ4UN
O1QfjLSjFW5KWard31FtIlfD614zem4uwp9S/AOljAWyD9x9j06/2dSeXTWJ
HDf2Kn9YVotiomNTJbFfKPFyy4sXi9lI57PBK4d9FKrY7SNrMtfmo/aqCa3V
B2dQ5VgOLxw8E1B6u0abu9pMKjGfMukM1XW7Z0H8Li8/1GkLD8RdznFNs1bz
QnyHEtddv242xLaY5mf9ZXwQD8gLZi6V4Ye44nisrfiqORB/zuKsKhITgJjW
ujnutYQgxNGblZccFZ4L8Sia5SQ/RcZd877SDlCEIRZbcKdc7CsZn2UEDE5P
zyPzcTB2rxImz0f0C+tHdK8qiE/fzfMPic5iUk50Ong/xFDjr5X+HzZ8RlWu
f705FPoRfaptCm4YGURNGfuctcX70dXqbTf7Pg8jepGYwx3/j2iRyZqfVSwK
1XLUOmjR3TSkbRQbXFc0g2ooOSAU6HUefTnoKHSUSc63Wrtgs8ANMr/jlrlJ
5++Q+TXfk0he86YGYrZfe2qlXgEzf39BxSmPV8i9x7hofMcnFCKx72v61160
ZaZmSw7vIJp7239W7w0u0uUxzdtyaRjVO22/Yq/Wh1Jk8+qkfCjU/Clv2+Iv
WehBUOVl5zszqJTnBrmtXx4gvQenrn12JvN7en2/XoAKmZ+r+tP2CWsWk1L/
6ml1WSBSWNJ3nCn9BfF+fPzi49Y+VHNk26rvdkOo9uIibpk3FzmFBkg5CuDj
fzHALFYnoZnLrmTKU8jxa7Sqz3nmkOMHmA9qpRaR9dNXa5uJ1L8l32ebOrhC
hkXM0GCmKt+6Z6jx2LUW3oJ+dP1C0iyrR72oWfzHDMX7A2hVX0rpJjkuUou1
bTORG0ZfjCqG+oP6kKu3T0GFBYXaP+PBqajYXKSq2NV05CK+PvMCPDfdikMe
qrWJW03I/Fo1LITeiZL5Cf8lqP7GsYJJ8ZbSlLzuhNzv8ThUPf2MuJvn5UX1
fkTxLUHpSluGUCbPt1VOjVy0b+KEsGw/hUodNotHjSnoSab3akrnDBhv9sIv
K8sj/63+fv+M/c6D6KukFTWCxUXDI2mUZwkzqInWIm1JeT7oq6Cmq+zZMiZl
nxjlQXI0OnnrhLbRcjLfSCdG4u5WcrxEM+9gTgc5n/wj5pl8x8j3p5pHh8eG
o8VM14y8b8edHiP3II/+uR79iOtnPrf0ei9iJBiEXNQbQCmRGmuNZ3JR6ucJ
m+E5w2hCc6Hi6rw+dH7HYHrcMfz94rHsvdf3PCTsYr1A7Tj+fvk8U7xuRjxa
fl9Qs0WbzO9H4rjlyEwyv/oFO4czXSvx+dQz3hF0FCmUiLjXXfqMjh8vKh3N
/Yh8ZfJddZcMIQU9s2IDSj/a+LyAZ4JDoRpe7ZOQV8KQI/9Ck/5acj6lHG/e
4vqQ45+91n/gtvogcq2ZesR8xEXFe9S3Bj/A7x+2fhDVG4gyH19TnHexnOkq
fMYgRS0MbazqdVefR+ab1rGL37yKHE+rmRPQbc9mUraOT9QneKOssHMDCw2G
kGa6x51HSVxUZzk1KDZM5pNnqrJ6fuYgOn+pqfXKMBctfyzHzsPw9RzzkzY8
7YJuia3UkRokx9/WbpD5eYhcr6zjdufcI8j1OvzSrDavoZhJOZj3xkM2AR1j
CNoFnOtH0o/y5l8170Xhn9xMvJQH0PerQsZWA33IOnjXtuyJIUTJzXhT9K4P
HReV3nzvML5eJW1Bk3Qm+ms1tj5ZD8/neE4nfQ8dWW5dK5KkQdbPb8oU9/xB
vk+3tRnuZ8wi35czOyP4j+l8RiGXJStozz4it9KjPSfnDKHe6+HB6gvxvDxG
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

     "], {{{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[{
          PolygonBox[{{137, 802, 803, 139, 172, 58, 156, 189, 123, 150, 183, 
           94, 115, 142, 175, 68, 84, 105, 132, 165, 35, 74, 90, 111, 138, 
           171, 57, 67, 83, 104, 131, 164, 34, 33, 32, 31, 30, 29, 28, 27, 56,
            66, 82, 103, 130, 163, 26, 73, 120, 147, 180, 89, 153, 186, 110, 
           192}}], PolygonBox[{{108, 800, 801, 170, 55, 194, 155, 188, 122, 
           149, 182, 93, 114, 141, 174, 65, 81, 102, 129, 162, 25, 72, 88, 
           109, 136, 169, 54, 64, 80, 101, 128, 161, 24, 23, 22, 21, 20, 19, 
           18, 17, 53, 63, 79, 100, 127, 160, 16, 95, 116, 143, 176, 71, 119, 
           146, 179, 87, 152, 185}}]}]}, {}, 
       {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[{
          PolygonBox[{{341, 798, 799, 376, 262, 399, 360, 393, 327, 354, 387, 
           298, 319, 346, 379, 272, 288, 309, 336, 369, 249, 278, 294, 315, 
           342, 375, 261, 271, 287, 308, 335, 368, 248, 247, 246, 245, 244, 
           243, 242, 241, 240, 239, 238, 237, 236, 235, 234, 233, 232, 231, 
           260, 270, 286, 307, 334, 367, 230, 277, 324, 351, 384, 293, 357, 
           390, 314, 396}}], 
          PolygonBox[{{312, 796, 797, 374, 259, 398, 359, 392, 326, 353, 386, 
           297, 318, 345, 378, 269, 285, 306, 333, 366, 229, 276, 292, 313, 
           340, 373, 258, 268, 284, 305, 332, 365, 228, 227, 226, 225, 224, 
           223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 213, 212, 211, 
           257, 267, 283, 304, 331, 364, 210, 299, 320, 347, 380, 275, 323, 
           350, 383, 291, 356, 389}}]}]}, {}, 
       {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[{
          PolygonBox[{{412, 792, 793, 520, 464, 531, 512, 528, 496, 509, 525, 
           483, 493, 506, 522, 469, 477, 487, 500, 516, 436, 472, 480, 490, 
           503, 519, 463, 468, 476, 486, 499, 515, 435, 434, 433, 432, 431, 
           430, 429, 428, 427, 426, 425, 424, 423, 422, 421, 420, 419, 418, 
           417, 416, 415, 414, 413, 462, 467, 475, 485, 498, 514}}], 
          PolygonBox[{{504, 794, 795, 461, 532, 513, 529, 497, 510, 526, 484, 
           494, 507, 523, 474, 482, 492, 505, 521, 466, 471, 479, 489, 502, 
           518, 460, 459, 458, 457, 456, 455, 454, 453, 452, 451, 450, 449, 
           448, 447, 446, 445, 444, 443, 442, 441, 440, 439, 438, 465, 470, 
           478, 488, 501, 517, 437, 473, 495, 508, 524, 481, 511, 527, 491, 
           530}}]}]}, {}, 
       {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[{
          PolygonBox[{{536, 788, 789, 644, 588, 655, 636, 652, 620, 633, 649, 
           607, 617, 630, 646, 593, 601, 611, 624, 640, 560, 596, 604, 614, 
           627, 643, 587, 592, 600, 610, 623, 639, 559, 558, 557, 556, 555, 
           554, 553, 552, 551, 550, 549, 548, 547, 546, 545, 544, 543, 542, 
           541, 540, 539, 538, 537, 586, 591, 599, 609, 622, 638}}], 
          PolygonBox[{{628, 790, 791, 585, 656, 637, 653, 621, 634, 650, 608, 
           618, 631, 647, 598, 606, 616, 629, 645, 590, 595, 603, 613, 626, 
           642, 584, 583, 582, 581, 580, 579, 578, 577, 576, 575, 574, 573, 
           572, 571, 570, 569, 568, 567, 566, 565, 564, 563, 562, 589, 594, 
           602, 612, 625, 641, 561, 597, 619, 632, 648, 605, 635, 651, 615, 
           654}}]}]}, {}, 
       {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[{
          PolygonBox[{{660, 784, 785, 768, 712, 779, 760, 776, 744, 757, 773, 
           731, 741, 754, 770, 717, 725, 735, 748, 764, 684, 720, 728, 738, 
           751, 767, 711, 716, 724, 734, 747, 763, 683, 682, 681, 680, 679, 
           678, 677, 676, 675, 674, 673, 672, 671, 670, 669, 668, 667, 666, 
           665, 664, 663, 662, 661, 710, 715, 723, 733, 746, 762}}], 
          PolygonBox[{{752, 786, 787, 709, 780, 761, 777, 745, 758, 774, 732, 
           742, 755, 771, 722, 730, 740, 753, 769, 714, 719, 727, 737, 750, 
           766, 708, 707, 706, 705, 704, 703, 702, 701, 700, 699, 698, 697, 
           696, 695, 694, 693, 692, 691, 690, 689, 688, 687, 686, 713, 718, 
           726, 736, 749, 765, 685, 721, 743, 756, 772, 729, 759, 775, 739, 
           778}}]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{1, 158, 125, 98, 77, 61, 51, 2, 3, 4, 5, 406, 6, 7, 8, 9, 10,
          11, 12, 13, 14, 15, 159, 126, 99, 78, 62, 52, 168, 135, 191}], 
        LineBox[{108, 185, 152, 87, 179, 146, 119, 71, 176, 143, 116, 95, 16, 
         160, 127, 100, 79, 63, 53, 17, 18, 19, 20, 21, 22, 23, 24, 161, 128, 
         101, 80, 64, 54, 169, 136, 109, 88, 72, 25, 162, 129, 102, 81, 65, 
         174, 141, 114, 93, 182, 149, 122, 188, 155, 194, 55, 170}], 
        LineBox[{137, 192, 110, 186, 153, 89, 180, 147, 120, 73, 26, 163, 130,
          103, 82, 66, 56, 27, 28, 29, 30, 31, 32, 33, 34, 164, 131, 104, 83, 
         67, 57, 171, 138, 111, 90, 74, 35, 165, 132, 105, 84, 68, 175, 142, 
         115, 94, 183, 150, 123, 189, 156, 58, 172, 139}], 
        LineBox[{193, 112, 187, 154, 91, 181, 148, 121, 75, 177, 144, 117, 96,
          36, 166, 133, 106, 85, 69, 59, 37, 38, 39, 40, 41, 42, 43, 44, 45, 
         401, 46, 47, 48, 49, 167, 134, 107, 86, 70, 60, 173, 140, 113, 92, 
         76, 178, 145, 118, 97, 184, 151, 124, 190, 157, 195, 50}]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{205, 362, 329, 302, 281, 265, 255, 206, 207, 208, 209, 363, 
         330, 303, 282, 266, 256, 372, 339, 395}], 
        LineBox[{312, 389, 356, 291, 383, 350, 323, 275, 380, 347, 320, 299, 
         210, 364, 331, 304, 283, 267, 257, 211, 212, 213, 214, 215, 216, 217,
          218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 365, 332, 
         305, 284, 268, 258, 373, 340, 313, 292, 276, 229, 366, 333, 306, 285,
          269, 378, 345, 318, 297, 386, 353, 326, 392, 359, 398, 259, 374}], 
        LineBox[{341, 396, 314, 390, 357, 293, 384, 351, 324, 277, 230, 367, 
         334, 307, 286, 270, 260, 231, 232, 233, 234, 235, 236, 237, 238, 239,
          240, 241, 242, 243, 244, 245, 246, 247, 248, 368, 335, 308, 287, 
         271, 261, 375, 342, 315, 294, 278, 249, 369, 336, 309, 288, 272, 379,
          346, 319, 298, 387, 354, 327, 393, 360, 399, 262, 376}], 
        LineBox[{343, 397, 316, 391, 358, 295, 385, 352, 325, 279, 381, 348, 
         321, 300, 250, 370, 337, 310, 289, 273, 263, 251, 252, 253, 371, 338,
          311, 290, 274, 264, 377, 344, 317, 296, 280, 382, 349, 322, 301, 
         388, 355, 328, 394, 361, 400, 254}]}, 
       {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{412, 514, 498, 485, 475, 467, 462, 413, 414, 415, 416, 417, 
         418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431,
          432, 433, 434, 435, 515, 499, 486, 476, 468, 463, 519, 503, 490, 
         480, 472, 436, 516, 500, 487, 477, 469, 522, 506, 493, 483, 525, 509,
          496, 528, 512, 531, 464, 520}], 
        LineBox[{504, 530, 491, 527, 511, 481, 524, 508, 495, 473, 437, 517, 
         501, 488, 478, 470, 465, 438, 439, 440, 441, 442, 443, 444, 445, 446,
          447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 
         460, 518, 502, 489, 479, 471, 466, 521, 505, 492, 482, 474, 523, 507,
          494, 484, 526, 510, 497, 529, 513, 532, 461}]}, 
       {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{536, 638, 622, 609, 599, 591, 586, 537, 538, 539, 540, 541, 
         542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555,
          556, 557, 558, 559, 639, 623, 610, 600, 592, 587, 643, 627, 614, 
         604, 596, 560, 640, 624, 611, 601, 593, 646, 630, 617, 607, 649, 633,
          620, 652, 636, 655, 588, 644}], 
        LineBox[{628, 654, 615, 651, 635, 605, 648, 632, 619, 597, 561, 641, 
         625, 612, 602, 594, 589, 562, 563, 564, 565, 566, 567, 568, 569, 570,
          571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 
         584, 642, 626, 613, 603, 595, 590, 645, 629, 616, 606, 598, 647, 631,
          618, 608, 650, 634, 621, 653, 637, 656, 585}]}, 
       {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{660, 762, 746, 733, 723, 715, 710, 661, 662, 663, 664, 665, 
         666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679,
          680, 681, 682, 683, 763, 747, 734, 724, 716, 711, 767, 751, 738, 
         728, 720, 684, 764, 748, 735, 725, 717, 770, 754, 741, 731, 773, 757,
          744, 776, 760, 779, 712, 768}], 
        LineBox[{752, 778, 739, 775, 759, 729, 772, 756, 743, 721, 685, 765, 
         749, 736, 726, 718, 713, 686, 687, 688, 689, 690, 691, 692, 693, 694,
          695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 
         708, 766, 750, 737, 727, 719, 714, 769, 753, 740, 730, 722, 771, 755,
          742, 732, 774, 758, 745, 777, 761, 780, 709}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], 
        LineBox[{197, 203, 196}], LineBox[{199, 200, 198}], 
        LineBox[{202, 204, 201}], LineBox[{403, 407, 402}], 
        LineBox[{405, 410, 404}], LineBox[{409, 411, 408}], 
        LineBox[{534, 535, 533}], LineBox[{658, 659, 657}], 
        LineBox[{782, 783, 781}]}}, {{}, {}, {}, {}, {}, {}, {}}}], InsetBox[
     TemplateBox[{"1","1.1`","1.2`","1.3`","1.4`","1.5`","1.6`","2"},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox["\"\[Sigma]=\"", {
                 GrayLevel[0], FontWeight -> Bold, FontSize -> 8, FontFamily -> 
                 "Arial"}, Background -> Automatic, StripOnInput -> False]}, {
              
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontWeight -> Bold, FontSize -> 8, FontFamily -> 
          "Arial"}, Background -> Automatic, StripOnInput -> False], 
        TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold", ",", "8"}], "}"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"\[Sigma]=\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.75, 0.55}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0., 0.},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
     "AxesInFront" -> True},
   PlotRange->{All, All},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[
     GraphicsComplex[CompressedData["
1:eJzFmnk0VW3bwE9FRFSkolSGJlIUTdR9FGlAZUgqSqkkGYqeIhlCFJkzho6j
QcMxbJkdM+cYkpAj85SjMpQhRb79rufZ135XrXe93z/f+vqnda299+267mH/
rt85R+qMjd65mRQKRWYWhfKv/0tMpdqmp6eZlH/+LfILXBUl+QviXcqFHTSR
SYhbrj+m6cn9gDhP94vfg4PfIXZ4ODKwV2MMYroPwyD21AjEzwbkFM31vkI8
1M2/JVd3COKTw8puNz98hthTgONmVN4HcbRp9z33H90Qb63H+utRB8RTjnMt
eSyaIL5U4LxgqqkW4rMNHSsOGZUwXVtyn7+qikdjb64wxcQSmNSyntDtBkxk
zLtYhd8mFeWm+N38/oSFEr4OjnG/s9BsA4tNy1Etssv+0HAnqA5JuBra1Ou8
RyqROz/0sZvRPuaDsvzyZjQRIRB107oT3d8p6j5frANx5ecxlTf1og0j+Rr3
wrqQQmXQuKhWPzqOLRFbebgXuSsxVscvGkC7dBp8XJr6kNyO2xRP7hDiVTax
MeP2oZwzA+MHh76i3frVji9VetH7Lwn9lnUjiBXB6diQ1IWWUR5ekOwYQ4UN
O1QfjLSjFW5KWard31FtIlfD614zem4uwp9S/AOljAWyD9x9j06/2dSeXTWJ
HDf2Kn9YVotiomNTJbFfKPFyy4sXi9lI57PBK4d9FKrY7SNrMtfmo/aqCa3V
B2dQ5VgOLxw8E1B6u0abu9pMKjGfMukM1XW7Z0H8Li8/1GkLD8RdznFNs1bz
QnyHEtddv242xLaY5mf9ZXwQD8gLZi6V4Ye44nisrfiqORB/zuKsKhITgJjW
ujnutYQgxNGblZccFZ4L8Sia5SQ/RcZd877SDlCEIRZbcKdc7CsZn2UEDE5P
zyPzcTB2rxImz0f0C+tHdK8qiE/fzfMPic5iUk50Ong/xFDjr5X+HzZ8RlWu
f705FPoRfaptCm4YGURNGfuctcX70dXqbTf7Pg8jepGYwx3/j2iRyZqfVSwK
1XLUOmjR3TSkbRQbXFc0g2ooOSAU6HUefTnoKHSUSc63Wrtgs8ANMr/jlrlJ
5++Q+TXfk0he86YGYrZfe2qlXgEzf39BxSmPV8i9x7hofMcnFCKx72v61160
ZaZmSw7vIJp7239W7w0u0uUxzdtyaRjVO22/Yq/Wh1Jk8+qkfCjU/Clv2+Iv
WehBUOVl5zszqJTnBrmtXx4gvQenrn12JvN7en2/XoAKmZ+r+tP2CWsWk1L/
6ml1WSBSWNJ3nCn9BfF+fPzi49Y+VHNk26rvdkOo9uIibpk3FzmFBkg5CuDj
fzHALFYnoZnLrmTKU8jxa7Sqz3nmkOMHmA9qpRaR9dNXa5uJ1L8l32ebOrhC
hkXM0GCmKt+6Z6jx2LUW3oJ+dP1C0iyrR72oWfzHDMX7A2hVX0rpJjkuUou1
bTORG0ZfjCqG+oP6kKu3T0GFBYXaP+PBqajYXKSq2NV05CK+PvMCPDfdikMe
qrWJW03I/Fo1LITeiZL5Cf8lqP7GsYJJ8ZbSlLzuhNzv8ThUPf2MuJvn5UX1
fkTxLUHpSluGUCbPt1VOjVy0b+KEsGw/hUodNotHjSnoSab3akrnDBhv9sIv
K8sj/63+fv+M/c6D6KukFTWCxUXDI2mUZwkzqInWIm1JeT7oq6Cmq+zZMiZl
nxjlQXI0OnnrhLbRcjLfSCdG4u5WcrxEM+9gTgc5n/wj5pl8x8j3p5pHh8eG
o8VM14y8b8edHiP3II/+uR79iOtnPrf0ei9iJBiEXNQbQCmRGmuNZ3JR6ucJ
m+E5w2hCc6Hi6rw+dH7HYHrcMfz94rHsvdf3PCTsYr1A7Tj+fvk8U7xuRjxa
fl9Qs0WbzO9H4rjlyEwyv/oFO4czXSvx+dQz3hF0FCmUiLjXXfqMjh8vKh3N
/Yh8ZfJddZcMIQU9s2IDSj/a+LyAZ4JDoRpe7ZOQV8KQI/9Ck/5acj6lHG/e
4vqQ45+91n/gtvogcq2ZesR8xEXFe9S3Bj/A7x+2fhDVG4gyH19TnHexnOkq
fMYgRS0MbazqdVefR+ab1rGL37yKHE+rmRPQbc9mUraOT9QneKOssHMDCw2G
kGa6x51HSVxUZzk1KDZM5pNnqrJ6fuYgOn+pqfXKMBctfyzHzsPw9RzzkzY8
7YJuia3UkRokx9/WbpD5eYhcr6zjdufcI8j1OvzSrDavoZhJOZj3xkM2AR1j
CNoFnOtH0o/y5l8170Xhn9xMvJQH0PerQsZWA33IOnjXtuyJIUTJzXhT9K4P
HReV3nzvML5eJW1Bk3Qm+ms1tj5ZD8/neE4nfQ8dWW5dK5KkQdbPb8oU9/xB
vk+3tRnuZ8wi35czOyP4j+l8RiGXJStozz4it9KjPSfnDKHe6+HB6gvxvDxG
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

      "], {{{}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroup[{
           
           Polygon[{{137, 802, 803, 139, 172, 58, 156, 189, 123, 150, 183, 94,
             115, 142, 175, 68, 84, 105, 132, 165, 35, 74, 90, 111, 138, 171, 
            57, 67, 83, 104, 131, 164, 34, 33, 32, 31, 30, 29, 28, 27, 56, 66,
             82, 103, 130, 163, 26, 73, 120, 147, 180, 89, 153, 186, 110, 
            192}}], 
           
           Polygon[{{108, 800, 801, 170, 55, 194, 155, 188, 122, 149, 182, 93,
             114, 141, 174, 65, 81, 102, 129, 162, 25, 72, 88, 109, 136, 169, 
            54, 64, 80, 101, 128, 161, 24, 23, 22, 21, 20, 19, 18, 17, 53, 63,
             79, 100, 127, 160, 16, 95, 116, 143, 176, 71, 119, 146, 179, 87, 
            152, 185}}]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroup[{
           
           Polygon[{{341, 798, 799, 376, 262, 399, 360, 393, 327, 354, 387, 
            298, 319, 346, 379, 272, 288, 309, 336, 369, 249, 278, 294, 315, 
            342, 375, 261, 271, 287, 308, 335, 368, 248, 247, 246, 245, 244, 
            243, 242, 241, 240, 239, 238, 237, 236, 235, 234, 233, 232, 231, 
            260, 270, 286, 307, 334, 367, 230, 277, 324, 351, 384, 293, 357, 
            390, 314, 396}}], 
           
           Polygon[{{312, 796, 797, 374, 259, 398, 359, 392, 326, 353, 386, 
            297, 318, 345, 378, 269, 285, 306, 333, 366, 229, 276, 292, 313, 
            340, 373, 258, 268, 284, 305, 332, 365, 228, 227, 226, 225, 224, 
            223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 213, 212, 211, 
            257, 267, 283, 304, 331, 364, 210, 299, 320, 347, 380, 275, 323, 
            350, 383, 291, 356, 389}}]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          Opacity[0.2]], 
         GraphicsGroup[{
           
           Polygon[{{412, 792, 793, 520, 464, 531, 512, 528, 496, 509, 525, 
            483, 493, 506, 522, 469, 477, 487, 500, 516, 436, 472, 480, 490, 
            503, 519, 463, 468, 476, 486, 499, 515, 435, 434, 433, 432, 431, 
            430, 429, 428, 427, 426, 425, 424, 423, 422, 421, 420, 419, 418, 
            417, 416, 415, 414, 413, 462, 467, 475, 485, 498, 514}}], 
           
           Polygon[{{504, 794, 795, 461, 532, 513, 529, 497, 510, 526, 484, 
            494, 507, 523, 474, 482, 492, 505, 521, 466, 471, 479, 489, 502, 
            518, 460, 459, 458, 457, 456, 455, 454, 453, 452, 451, 450, 449, 
            448, 447, 446, 445, 444, 443, 442, 441, 440, 439, 438, 465, 470, 
            478, 488, 501, 517, 437, 473, 495, 508, 524, 481, 511, 527, 491, 
            530}}]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          Opacity[0.2]], 
         GraphicsGroup[{
           
           Polygon[{{536, 788, 789, 644, 588, 655, 636, 652, 620, 633, 649, 
            607, 617, 630, 646, 593, 601, 611, 624, 640, 560, 596, 604, 614, 
            627, 643, 587, 592, 600, 610, 623, 639, 559, 558, 557, 556, 555, 
            554, 553, 552, 551, 550, 549, 548, 547, 546, 545, 544, 543, 542, 
            541, 540, 539, 538, 537, 586, 591, 599, 609, 622, 638}}], 
           
           Polygon[{{628, 790, 791, 585, 656, 637, 653, 621, 634, 650, 608, 
            618, 631, 647, 598, 606, 616, 629, 645, 590, 595, 603, 613, 626, 
            642, 584, 583, 582, 581, 580, 579, 578, 577, 576, 575, 574, 573, 
            572, 571, 570, 569, 568, 567, 566, 565, 564, 563, 562, 589, 594, 
            602, 612, 625, 641, 561, 597, 619, 632, 648, 605, 635, 651, 615, 
            654}}]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          Opacity[0.2]], 
         GraphicsGroup[{
           
           Polygon[{{660, 784, 785, 768, 712, 779, 760, 776, 744, 757, 773, 
            731, 741, 754, 770, 717, 725, 735, 748, 764, 684, 720, 728, 738, 
            751, 767, 711, 716, 724, 734, 747, 763, 683, 682, 681, 680, 679, 
            678, 677, 676, 675, 674, 673, 672, 671, 670, 669, 668, 667, 666, 
            665, 664, 663, 662, 661, 710, 715, 723, 733, 746, 762}}], 
           
           Polygon[{{752, 786, 787, 709, 780, 761, 777, 745, 758, 774, 732, 
            742, 755, 771, 722, 730, 740, 753, 769, 714, 719, 727, 737, 750, 
            766, 708, 707, 706, 705, 704, 703, 702, 701, 700, 699, 698, 697, 
            696, 695, 694, 693, 692, 691, 690, 689, 688, 687, 686, 713, 718, 
            726, 736, 749, 765, 685, 721, 743, 756, 772, 729, 759, 775, 739, 
            778}}]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Line[{1, 158, 125, 98, 77, 61, 51, 2, 3, 4, 5, 406, 6, 7, 8, 9, 10, 
          11, 12, 13, 14, 15, 159, 126, 99, 78, 62, 52, 168, 135, 191}], 
         Line[{108, 185, 152, 87, 179, 146, 119, 71, 176, 143, 116, 95, 16, 
          160, 127, 100, 79, 63, 53, 17, 18, 19, 20, 21, 22, 23, 24, 161, 128,
           101, 80, 64, 54, 169, 136, 109, 88, 72, 25, 162, 129, 102, 81, 65, 
          174, 141, 114, 93, 182, 149, 122, 188, 155, 194, 55, 170}], 
         Line[{137, 192, 110, 186, 153, 89, 180, 147, 120, 73, 26, 163, 130, 
          103, 82, 66, 56, 27, 28, 29, 30, 31, 32, 33, 34, 164, 131, 104, 83, 
          67, 57, 171, 138, 111, 90, 74, 35, 165, 132, 105, 84, 68, 175, 142, 
          115, 94, 183, 150, 123, 189, 156, 58, 172, 139}], 
         Line[{193, 112, 187, 154, 91, 181, 148, 121, 75, 177, 144, 117, 96, 
          36, 166, 133, 106, 85, 69, 59, 37, 38, 39, 40, 41, 42, 43, 44, 45, 
          401, 46, 47, 48, 49, 167, 134, 107, 86, 70, 60, 173, 140, 113, 92, 
          76, 178, 145, 118, 97, 184, 151, 124, 190, 157, 195, 50}]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Line[{205, 362, 329, 302, 281, 265, 255, 206, 207, 208, 209, 363, 
          330, 303, 282, 266, 256, 372, 339, 395}], 
         Line[{312, 389, 356, 291, 383, 350, 323, 275, 380, 347, 320, 299, 
          210, 364, 331, 304, 283, 267, 257, 211, 212, 213, 214, 215, 216, 
          217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 365, 
          332, 305, 284, 268, 258, 373, 340, 313, 292, 276, 229, 366, 333, 
          306, 285, 269, 378, 345, 318, 297, 386, 353, 326, 392, 359, 398, 
          259, 374}], 
         Line[{341, 396, 314, 390, 357, 293, 384, 351, 324, 277, 230, 367, 
          334, 307, 286, 270, 260, 231, 232, 233, 234, 235, 236, 237, 238, 
          239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 368, 335, 308, 
          287, 271, 261, 375, 342, 315, 294, 278, 249, 369, 336, 309, 288, 
          272, 379, 346, 319, 298, 387, 354, 327, 393, 360, 399, 262, 376}], 
         Line[{343, 397, 316, 391, 358, 295, 385, 352, 325, 279, 381, 348, 
          321, 300, 250, 370, 337, 310, 289, 273, 263, 251, 252, 253, 371, 
          338, 311, 290, 274, 264, 377, 344, 317, 296, 280, 382, 349, 322, 
          301, 388, 355, 328, 394, 361, 400, 254}]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Line[{412, 514, 498, 485, 475, 467, 462, 413, 414, 415, 416, 417, 
          418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 
          431, 432, 433, 434, 435, 515, 499, 486, 476, 468, 463, 519, 503, 
          490, 480, 472, 436, 516, 500, 487, 477, 469, 522, 506, 493, 483, 
          525, 509, 496, 528, 512, 531, 464, 520}], 
         Line[{504, 530, 491, 527, 511, 481, 524, 508, 495, 473, 437, 517, 
          501, 488, 478, 470, 465, 438, 439, 440, 441, 442, 443, 444, 445, 
          446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 
          459, 460, 518, 502, 489, 479, 471, 466, 521, 505, 492, 482, 474, 
          523, 507, 494, 484, 526, 510, 497, 529, 513, 532, 461}]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Line[{536, 638, 622, 609, 599, 591, 586, 537, 538, 539, 540, 541, 
          542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 
          555, 556, 557, 558, 559, 639, 623, 610, 600, 592, 587, 643, 627, 
          614, 604, 596, 560, 640, 624, 611, 601, 593, 646, 630, 617, 607, 
          649, 633, 620, 652, 636, 655, 588, 644}], 
         Line[{628, 654, 615, 651, 635, 605, 648, 632, 619, 597, 561, 641, 
          625, 612, 602, 594, 589, 562, 563, 564, 565, 566, 567, 568, 569, 
          570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 
          583, 584, 642, 626, 613, 603, 595, 590, 645, 629, 616, 606, 598, 
          647, 631, 618, 608, 650, 634, 621, 653, 637, 656, 585}]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Line[{660, 762, 746, 733, 723, 715, 710, 661, 662, 663, 664, 665, 
          666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 
          679, 680, 681, 682, 683, 763, 747, 734, 724, 716, 711, 767, 751, 
          738, 728, 720, 684, 764, 748, 735, 725, 717, 770, 754, 741, 731, 
          773, 757, 744, 776, 760, 779, 712, 768}], 
         Line[{752, 778, 739, 775, 759, 729, 772, 756, 743, 721, 685, 765, 
          749, 736, 726, 718, 713, 686, 687, 688, 689, 690, 691, 692, 693, 
          694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 
          707, 708, 766, 750, 737, 727, 719, 714, 769, 753, 740, 730, 722, 
          771, 755, 742, 732, 774, 758, 745, 777, 761, 780, 709}]}, {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         Line[{197, 203, 196}], 
         Line[{199, 200, 198}], 
         Line[{202, 204, 201}], 
         Line[{403, 407, 402}], 
         Line[{405, 410, 404}], 
         Line[{409, 411, 408}], 
         Line[{534, 535, 533}], 
         Line[{658, 659, 657}], 
         Line[{782, 783, 781}]}}, {{}, {}, {}, {}, {}, {}, {}}}], {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0., 0.},
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
       FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
        "AxesInFront" -> True}, PlotRange -> {All, All}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]]}, {1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 2}, 
       LabelStyle -> {
         GrayLevel[0], Bold, 8}, LegendLabel -> "\[Sigma]=", LegendLayout -> 
       "Column"]], {0.75, 0.55}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.676462391501348*^9, 3.6764623944690857`*^9}, 
   3.676466039505086*^9, 3.676466123612932*^9, {3.676467100576798*^9, 
   3.676467145020933*^9}, {3.684532791535241*^9, 3.684532795687173*^9}, {
   3.684532827155634*^9, 3.684532832690959*^9}, 3.684532907676325*^9, {
   3.68453295624757*^9, 3.68453296381356*^9}, {3.684533011222056*^9, 
   3.6845330308864717`*^9}, 3.684634440443005*^9, 3.684635506597316*^9, 
   3.684635584262732*^9, 3.684635659458584*^9, 3.6846679858282948`*^9, 
   3.684674328663357*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"pdfUniform", "[", 
   RowBox[{"x_", ",", "\[Mu]_", ",", "\[Sigma]_"}], "]"}], ":=", 
  TagBox[GridBox[{
     {"\[Piecewise]", GridBox[{
        {
         FractionBox["1", 
          RowBox[{"2", " ", 
           SqrtBox["3"], " ", "\[Sigma]"}]], 
         RowBox[{
          RowBox[{"\[Mu]", "-", 
           RowBox[{
            SqrtBox["3"], " ", "\[Sigma]"}]}], "\[LessEqual]", "x", 
          "\[LessEqual]", 
          RowBox[{"\[Mu]", "+", 
           RowBox[{
            SqrtBox["3"], " ", "\[Sigma]"}]}]}]},
        {"0", 
         TagBox["True",
          "PiecewiseDefault",
          AutoDelete->True]}
       },
       AllowedDimensions->{2, Automatic},
       Editable->True,
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.84]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}},
       Selectable->True]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxItemSize->{
     "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.35]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   "Piecewise",
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True,
   Selectable->False], " "}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.6764622317264*^9, {3.676462275865959*^9, 3.676462333498724*^9}, {
   3.676462386203244*^9, 3.676462388994298*^9}, {3.6764661175139837`*^9, 
   3.676466119114414*^9}, {3.684532477326845*^9, 3.6845325183824787`*^9}, 
   3.684532784316008*^9, {3.6845328299790363`*^9, 3.6845329325663357`*^9}, {
   3.6845330180277*^9, 3.684533026054028*^9}, 3.684533084708044*^9, {
   3.6845340561868877`*^9, 3.6845340618553743`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sigs", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "/", "2"}], ",", "1", ",", "2", ",", "5", ",", "10"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"pdfUniform", "[", 
       RowBox[{"x", ",", "1", ",", "\[Sigma]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "sigs"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "4"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{"sigs", ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", "Bold", ",", "8"}], "}"}]}], ",", 
        RowBox[{"LegendLabel", "\[Rule]", "\"\<\[Sigma]=\>\""}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.85", ",", "0.55"}], "}"}]}], "]"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<../abecker/SwarmPublications/JournalTorqueControl/pictures/pdf/\
Uniform.pdf\>\"", ",", "%"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6764623486045923`*^9, 3.676462394184904*^9}, {
   3.67646603305241*^9, 3.676466039085231*^9}, {3.676467095974711*^9, 
   3.676467144451521*^9}, 3.684532791002536*^9, 3.68453283228883*^9, {
   3.684532907047003*^9, 3.6845329632608023`*^9}, {3.684533010619349*^9, 
   3.684533027756667*^9}, 3.684534066579653*^9, {3.684575590777972*^9, 
   3.6845756068245077`*^9}, 3.684635481045938*^9, {3.684635522902116*^9, 
   3.684635536438566*^9}, {3.6846355877039013`*^9, 3.6846355931015177`*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJzVmGs4lmkewN9K5u0cMjMdnMYwRQo5zFK9jTEhaiZJyqToJDuda6ekuoiJ
qURqmuQuo7OdHbUdEKKntGzZ9CYVhRcb3nEaCSnZa7f3//9v//3Qh/00fZnr
dz33fT/3fXt+9RsmQWu8l/WVyWQ5fWSyf/83P8Cksre3N1em+fP+3nizIwav
kafaSaoU3VfITzafSvG26Ea+Oqtp7w+eXcibRHvzdNcO5BMxaT7HFrUjn222
sF7q3YbcWit3yJnVivz1b3bhYeWNyFEDH4XPK6hHTgqo3R3RXYvseP+i+r5C
hdwTOjhEK7gM+Y/Xtun0lCmRl5SqjL6cl4/ccWd9rr7+SeT5/T+wl6+5oAA+
2dbS0dBVqDCYFPfF6S3VinVZ5aW79pcg2ydOKa//+2PkF4cHHglbXY3cYDks
1872KbLV7f2dem5q5AibNPPj7zcjWzjtlEU1tCJnBzV3era2IT9oOqkOKWlH
HiMTKwxUHchG4TZXnGu7kP+8VFf+1xvdyIvv2FZlFb1CPpp07ILBxdd43pmN
Pr9scpdNA64qeuFm7tkHOb3KtTJicl9k0/Q053Eu/ZDvXc07uNVBC7lmW3JZ
P/P+yLtkybX3x2kjr734ReOcMe8hN1sOyhxtKke+teDY2pFmA5Abrzwyu64/
EDmlYlLy5VGDkJMm2X3oO3Qw8nNFv62WPcQ1w9pSZsiGIuvr7CrQbyNekhbX
0ts7jPazaX5E0VDyI9spK7W7IB7v6+yVHLnjw2t4n0Fl41Zu/1sxsnbiR+0O
hS+Re+0bChvzepCTrnwcHZnSi+tNrhr0eOAWev+CkJxzy3fR+62XWZRYB0Yj
+07xMM3al4Xzz/UdOtfHjdYXltUGsy1p/TObPbzj7Gl9eUl+5XTVaXx+urR0
R1x9Ps6ftfLG1Cgn+j6K3f6xLCqb5sctbXG7cJ3257JyW3ug1RFkPxPrnwN3
pON8w9q84PQWWq/CNXjIPT1a70JG/KjqoGR8fuqOr1ZmTw+y9ogm44JEGu8z
PyhxRHIuPu/oa7tl9re0fuLWtFSXChqfGhid8EhF+/WSHn5dM/cn2m/C8Va7
by/h/IBp1rHqu7Red2pnSHtfWk/Ht2XNIrfD+LzzQcgZvRrar0lo2PaGGBo/
99b9irpDOfj8I4eX/r/60fqXVFPlS4to/Ly07BWxuzLxeWjSXhOjMTQ+dUNn
qnFJHvJ2feOZJi00/9Mqn8zGVjqvSaFZbJj9cTqv15P9hhsu0vzmOmOt67S+
PCB3ZFQ3+bHcfe4Qq+iD+Dw4KfKhUTF9bxOsXK1Cw+n9vpHDwu8mZOP4jDuL
ZmZ40PrSAe309hs03i+4Y8DmnRn4fLhDm27jYBpv8dWIMH1vOu+egrqX55/S
/Mkrs55HNdP9++gmTX595Crtd8EB2c2l5OvaIL+jcZ00f7uRs9efuui+9njd
NvcwO4H8cGz3Er3f6N+H2PzP1XFZtL9YR9N1MzvovuI/kz9OOJOAz+0aHGZ/
V0D3dUn7TKTLNnp/6eLx3jd16L52jtG9aehC63usDhmak0fjH7rqlX/Th+6r
POLEbu/+ND7kakrtMB26L70Uzzmh1TT/vcurVjc+pfsqac4Y8mwk3Zf7tLPZ
QXU0v9M5+7nfs//ydWOTYsU9Oo9aFaU3OoHGq8d6rbM5RPetjm6fXvCS5nNf
+M+Hv5+/z6/oaMAI82uKkf9hpWKu+fiNU8p7FAdt3vDvtW8MNOeBvgGGvgGG
vgGGvgGGvgGGvgF+u2+UrG+UrG+UrG+UrG+UrG+UrG+UrG+UrG+UrG+UrG+U
rG+UrG+UrG+U2DfA0DfA0DfA0DfA0DfA0DfA0DfAv/e+ae35ro/6rho57mKF
9irVU/x+1Ie9nMcb1CD7H7XOUPxC92GvSK5sPE33EVa2vn7EcbqPd/XNqc6F
n10o/RX5+0p/1+qSOvr7OMB4YddyWj9iVczyTctpfd43TlrnrhkXNeD8H2IC
Czub/on7rzAyDlLVU5++q2/CN3qoPphP/so3japJmkX+aqUfOGnmTvvhfaMf
fiQw6ku63+8nVhmvKKDz8L4ZMkOc/MS/DvdrO3zxcf8BtP67+qbZVmEzI5H2
ezN3i23obtrvTf9R+T2f0nq8byIU8efT42i/ix2nySwyaL+8b24feNWu9SP9
vOQf5kUYvqD75X3jYZGVkKtD+4ksGrzA+wGtP6t3iu8MQzr/u/rGTNdpfs0V
Oq/5snFl9WdpffMJT0pW2tB5ed9kGu559NV5Oi/vGUunn5M2XKbzPRu9tq23
lc7He+bMnRDnCdb0/mOW1uejiul8vF9+fGX1h5QwWr/QtPiuVEXrv6tX8sId
mybeovOXOvaZYJxJ7/c9dPXxMSs6P+8Vn9iYVeIanZ/3SdngyNbUfNpfvYF7
amsj7Y/3iV+Ky75lCno/748x0sc/FUXTeuY7PGPHVtJ6vDfCVpS4Tz5N44c7
TAr2WEjfR4lJ10hlLc3nvTHn8Lni59/Q/De9QOP5enw//PvkPy9Y701/SAof
zfuAoUfezJcU0CPA0CPA0CPA0CPA0CPA0CPA0CPA0CPA0CPA0CPAb/eIxHpE
Yj0isR6RWI9IrEck1iMS6xGJ9YjEekRiPSKxHpFYj0isRyTWIxLrEYn1iMR6
RGI9IrEekViPSKxHJNYjEusRifWIxHpEYj0isR6RsEeAoUeAoUeAoUeAoUeA
oUfw+9D0CDD0CO5H0yPA0CP4fWh6BPej6RFg6AVg8GdixlP5+n1/QX+AwR9g
8AcY/AEGf4DBH2DwBxj8AQZ/gMEfYPAHGPwBBn+AwR9g8AcY/AEGf4DBH2Dw
Bxj8AQZ/gMEfYPAHGPwBBn+AwR9g8AcY/AEGf4DBH2DwBxj8AQZ/gMEfYPAH
GPwBBn+AwR9g8AcY/AEGf4DBH2DwBxj8we9D4w8w+IP70fgDDP7g96HxB/ej
8QcY/AF+2x/B/BHMH8H8EcwfwfwRzB/B/BHMH8H8EcwfwfwRzB/B/BHMH8H8
EcwfwfwRzB/B/BHMH8H8EcwfwfwRzB/B/BHMH8H8EcwfwfwRzB/B/BHMH8H8
EcwfwfwRzB/B/BHMH8H8EcwfwfwRzB/B/BHMH8H8EcwfwfwRzB/B/BHMH8H8
Ef/z+yT+/9P/73PoT96bwPD7MWD4fRjwvwCHSjcO
     "], {{{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[
         PolygonBox[{{112, 444, 445, 133, 101, 120, 56, 62, 32, 55, 31, 30, 
          29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 54, 19, 66, 53, 
          135}}]]}, {}, 
       {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[
         PolygonBox[{{269, 442, 443, 234, 248, 217, 228, 198, 204, 181, 197, 
          180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 
          167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 
          196, 154, 208, 195, 235, 219}}]]}, {}, 
       {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[
         PolygonBox[{{280, 440, 441, 329, 331, 328, 327, 326, 325, 324, 323, 
          322, 321, 320, 319, 318, 317, 316, 315, 314, 313, 312, 311, 310, 
          309, 308, 307, 306, 305, 304, 303, 302, 301, 300, 299, 298, 297, 
          296, 295, 294, 293, 292, 291, 290, 289, 288, 287, 286, 285, 284, 
          283, 282, 281, 330}}]]}, {}, 
       {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[
         PolygonBox[{{332, 438, 439, 381, 383, 380, 379, 378, 377, 376, 375, 
          374, 373, 372, 371, 370, 369, 368, 367, 366, 365, 364, 363, 362, 
          361, 360, 359, 358, 357, 356, 355, 354, 353, 352, 351, 350, 349, 
          348, 347, 346, 345, 344, 343, 342, 341, 340, 339, 338, 337, 336, 
          335, 334, 333, 382}}]]}, {}, 
       {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[
         PolygonBox[{{384, 436, 437, 433, 435, 432, 431, 430, 429, 428, 427, 
          426, 425, 424, 423, 422, 421, 420, 419, 418, 417, 416, 415, 414, 
          413, 412, 411, 410, 409, 408, 407, 406, 405, 404, 403, 402, 401, 
          400, 399, 398, 397, 396, 395, 394, 393, 392, 391, 390, 389, 388, 
          387, 386, 385, 
          434}}]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{1, 114, 95, 80, 69, 59, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
         272, 12, 13, 14, 15, 16, 17, 115, 96, 81, 70, 60, 52, 119, 100, 85, 
         74, 65, 18, 116, 97, 82, 71, 125, 106, 91, 61, 122, 103, 88, 130, 
         111, 77, 127, 108, 134, 93, 131}], 
        LineBox[{112, 135, 53, 66, 19, 54, 20, 21, 22, 23, 24, 25, 26, 27, 28,
          29, 30, 31, 55, 32, 62, 56, 120, 101, 133}], 
        LineBox[{86, 129, 110, 75, 126, 107, 92, 67, 123, 104, 89, 78, 33, 
         117, 98, 83, 72, 63, 57, 34, 35, 36, 37, 38, 39, 273, 40, 41, 42, 43,
          44, 45, 46, 47, 48, 49, 118, 99, 84, 73, 64, 58, 121, 102, 87, 76, 
         68, 124, 105, 90, 79, 128, 109, 94, 132, 113, 136, 50}]}, 
       {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{143, 253, 237, 222, 211, 201, 193, 144, 145, 146, 147, 148, 
         149, 150, 151, 152, 254, 238, 223, 212, 202, 194, 258, 242, 227, 216,
          207, 153, 255, 239, 224, 213, 263, 247, 233, 203, 260, 244, 268, 
         230, 265, 250}], 
        LineBox[{269, 219, 235, 195, 208, 154, 196, 155, 156, 157, 158, 159, 
         160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
          174, 175, 176, 177, 178, 179, 180, 197, 181, 204, 198, 228, 217, 
         248, 234}], 
        LineBox[{266, 251, 270, 209, 261, 245, 231, 220, 182, 256, 240, 225, 
         214, 205, 199, 183, 184, 185, 186, 187, 188, 189, 190, 191, 257, 241,
          226, 215, 206, 200, 259, 243, 229, 218, 210, 262, 246, 232, 221, 
         264, 249, 236, 267, 252, 271, 192}]}, 
       {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{280, 330, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 
         291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304,
          305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 
         318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 331, 329}]}, 
       {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{332, 382, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 
         343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356,
          357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 
         370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 383, 381}]}, 
       {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], 
        Opacity[1.], 
        LineBox[{384, 434, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 
         395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
          409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 
         422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 433}]}, 
       {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], 
        LineBox[{139, 141, 138}], LineBox[{140, 142, 137}], 
        LineBox[{276, 278, 275}], 
        LineBox[{277, 279, 274}]}}, {{}, {}, {}, {}, {}, {}, {}}}], InsetBox[
     TemplateBox[{FractionBox["1", "2"],"1","2","5","10"},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox["\"\[Sigma]=\"", {
                 GrayLevel[0], FontWeight -> Bold, FontSize -> 8, FontFamily -> 
                 "Arial"}, Background -> Automatic, StripOnInput -> False]}, {
              
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #5}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontWeight -> Bold, FontSize -> 8, FontFamily -> 
          "Arial"}, Background -> Automatic, StripOnInput -> False], 
        TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold", ",", "8"}], "}"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"\[Sigma]=\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.85, 0.55}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0., 0.},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
     "AxesInFront" -> True},
   PlotRange->{All, All},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[
     GraphicsComplex[CompressedData["
1:eJzVmGs4lmkewN9K5u0cMjMdnMYwRQo5zFK9jTEhaiZJyqToJDuda6ekuoiJ
qURqmuQuo7OdHbUdEKKntGzZ9CYVhRcb3nEaCSnZa7f3//9v//3Qh/00fZnr
dz33fT/3fXt+9RsmQWu8l/WVyWQ5fWSyf/83P8Cksre3N1em+fP+3nizIwav
kafaSaoU3VfITzafSvG26Ea+Oqtp7w+eXcibRHvzdNcO5BMxaT7HFrUjn222
sF7q3YbcWit3yJnVivz1b3bhYeWNyFEDH4XPK6hHTgqo3R3RXYvseP+i+r5C
hdwTOjhEK7gM+Y/Xtun0lCmRl5SqjL6cl4/ccWd9rr7+SeT5/T+wl6+5oAA+
2dbS0dBVqDCYFPfF6S3VinVZ5aW79pcg2ydOKa//+2PkF4cHHglbXY3cYDks
1872KbLV7f2dem5q5AibNPPj7zcjWzjtlEU1tCJnBzV3era2IT9oOqkOKWlH
HiMTKwxUHchG4TZXnGu7kP+8VFf+1xvdyIvv2FZlFb1CPpp07ILBxdd43pmN
Pr9scpdNA64qeuFm7tkHOb3KtTJicl9k0/Q053Eu/ZDvXc07uNVBC7lmW3JZ
P/P+yLtkybX3x2kjr734ReOcMe8hN1sOyhxtKke+teDY2pFmA5Abrzwyu64/
EDmlYlLy5VGDkJMm2X3oO3Qw8nNFv62WPcQ1w9pSZsiGIuvr7CrQbyNekhbX
0ts7jPazaX5E0VDyI9spK7W7IB7v6+yVHLnjw2t4n0Fl41Zu/1sxsnbiR+0O
hS+Re+0bChvzepCTrnwcHZnSi+tNrhr0eOAWev+CkJxzy3fR+62XWZRYB0Yj
+07xMM3al4Xzz/UdOtfHjdYXltUGsy1p/TObPbzj7Gl9eUl+5XTVaXx+urR0
R1x9Ps6ftfLG1Cgn+j6K3f6xLCqb5sctbXG7cJ3257JyW3ug1RFkPxPrnwN3
pON8w9q84PQWWq/CNXjIPT1a70JG/KjqoGR8fuqOr1ZmTw+y9ogm44JEGu8z
PyhxRHIuPu/oa7tl9re0fuLWtFSXChqfGhid8EhF+/WSHn5dM/cn2m/C8Va7
by/h/IBp1rHqu7Red2pnSHtfWk/Ht2XNIrfD+LzzQcgZvRrar0lo2PaGGBo/
99b9irpDOfj8I4eX/r/60fqXVFPlS4to/Ly07BWxuzLxeWjSXhOjMTQ+dUNn
qnFJHvJ2feOZJi00/9Mqn8zGVjqvSaFZbJj9cTqv15P9hhsu0vzmOmOt67S+
PCB3ZFQ3+bHcfe4Qq+iD+Dw4KfKhUTF9bxOsXK1Cw+n9vpHDwu8mZOP4jDuL
ZmZ40PrSAe309hs03i+4Y8DmnRn4fLhDm27jYBpv8dWIMH1vOu+egrqX55/S
/Mkrs55HNdP9++gmTX595Crtd8EB2c2l5OvaIL+jcZ00f7uRs9efuui+9njd
NvcwO4H8cGz3Er3f6N+H2PzP1XFZtL9YR9N1MzvovuI/kz9OOJOAz+0aHGZ/
V0D3dUn7TKTLNnp/6eLx3jd16L52jtG9aehC63usDhmak0fjH7rqlX/Th+6r
POLEbu/+ND7kakrtMB26L70Uzzmh1TT/vcurVjc+pfsqac4Y8mwk3Zf7tLPZ
QXU0v9M5+7nfs//ydWOTYsU9Oo9aFaU3OoHGq8d6rbM5RPetjm6fXvCS5nNf
+M+Hv5+/z6/oaMAI82uKkf9hpWKu+fiNU8p7FAdt3vDvtW8MNOeBvgGGvgGG
vgGGvgGGvgGGvgF+u2+UrG+UrG+UrG+UrG+UrG+UrG+UrG+UrG+UrG+UrG+U
rG+UrG+UrG+U2DfA0DfA0DfA0DfA0DfA0DfA0DfAv/e+ae35ro/6rho57mKF
9irVU/x+1Ie9nMcb1CD7H7XOUPxC92GvSK5sPE33EVa2vn7EcbqPd/XNqc6F
n10o/RX5+0p/1+qSOvr7OMB4YddyWj9iVczyTctpfd43TlrnrhkXNeD8H2IC
Czub/on7rzAyDlLVU5++q2/CN3qoPphP/so3japJmkX+aqUfOGnmTvvhfaMf
fiQw6ku63+8nVhmvKKDz8L4ZMkOc/MS/DvdrO3zxcf8BtP67+qbZVmEzI5H2
ezN3i23obtrvTf9R+T2f0nq8byIU8efT42i/ix2nySwyaL+8b24feNWu9SP9
vOQf5kUYvqD75X3jYZGVkKtD+4ksGrzA+wGtP6t3iu8MQzr/u/rGTNdpfs0V
Oq/5snFl9WdpffMJT0pW2tB5ed9kGu559NV5Oi/vGUunn5M2XKbzPRu9tq23
lc7He+bMnRDnCdb0/mOW1uejiul8vF9+fGX1h5QwWr/QtPiuVEXrv6tX8sId
mybeovOXOvaZYJxJ7/c9dPXxMSs6P+8Vn9iYVeIanZ/3SdngyNbUfNpfvYF7
amsj7Y/3iV+Ky75lCno/748x0sc/FUXTeuY7PGPHVtJ6vDfCVpS4Tz5N44c7
TAr2WEjfR4lJ10hlLc3nvTHn8Lni59/Q/De9QOP5enw//PvkPy9Y701/SAof
zfuAoUfezJcU0CPA0CPA0CPA0CPA0CPA0CPA0CPA0CPA0CPA0CPAb/eIxHpE
Yj0isR6RWI9IrEck1iMS6xGJ9YjEekRiPSKxHpFYj0isRyTWIxLrEYn1iMR6
RGI9IrEekViPSKxHJNYjEusRifWIxHpEYj0isR6RsEeAoUeAoUeAoUeAoUeA
oUfw+9D0CDD0CO5H0yPA0CP4fWh6BPej6RFg6AVg8GdixlP5+n1/QX+AwR9g
8AcY/AEGf4DBH2DwBxj8AQZ/gMEfYPAHGPwBBn+AwR9g8AcY/AEGf4DBH2Dw
Bxj8AQZ/gMEfYPAHGPwBBn+AwR9g8AcY/AEGf4DBH2DwBxj8AQZ/gMEfYPAH
GPwBBn+AwR9g8AcY/AEGf4DBH2DwBxj8we9D4w8w+IP70fgDDP7g96HxB/ej
8QcY/AF+2x/B/BHMH8H8EcwfwfwRzB/B/BHMH8H8EcwfwfwRzB/B/BHMH8H8
EcwfwfwRzB/B/BHMH8H8EcwfwfwRzB/B/BHMH8H8EcwfwfwRzB/B/BHMH8H8
EcwfwfwRzB/B/BHMH8H8EcwfwfwRzB/B/BHMH8H8EcwfwfwRzB/B/BHMH8H8
Ef/z+yT+/9P/73PoT96bwPD7MWD4fRjwvwCHSjcO
      "], {{{}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         GraphicsGroup[{
           
           Polygon[{{112, 444, 445, 133, 101, 120, 56, 62, 32, 55, 31, 30, 29,
             28, 27, 26, 25, 24, 23, 22, 21, 20, 54, 19, 66, 53, 
            135}}]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.880722, 0.611041, 0.142051], 
          Opacity[0.2]], 
         GraphicsGroup[{
           
           Polygon[{{269, 442, 443, 234, 248, 217, 228, 198, 204, 181, 197, 
            180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 
            167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 
            196, 154, 208, 195, 235, 219}}]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.560181, 0.691569, 0.194885], 
          Opacity[0.2]], 
         GraphicsGroup[{
           
           Polygon[{{280, 440, 441, 329, 331, 328, 327, 326, 325, 324, 323, 
            322, 321, 320, 319, 318, 317, 316, 315, 314, 313, 312, 311, 310, 
            309, 308, 307, 306, 305, 304, 303, 302, 301, 300, 299, 298, 297, 
            296, 295, 294, 293, 292, 291, 290, 289, 288, 287, 286, 285, 284, 
            283, 282, 281, 330}}]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.922526, 0.385626, 0.209179], 
          Opacity[0.2]], 
         GraphicsGroup[{
           
           Polygon[{{332, 438, 439, 381, 383, 380, 379, 378, 377, 376, 375, 
            374, 373, 372, 371, 370, 369, 368, 367, 366, 365, 364, 363, 362, 
            361, 360, 359, 358, 357, 356, 355, 354, 353, 352, 351, 350, 349, 
            348, 347, 346, 345, 344, 343, 342, 341, 340, 339, 338, 337, 336, 
            335, 334, 333, 382}}]}]}, {}, {
         EdgeForm[], 
         Directive[
          RGBColor[0.528488, 0.470624, 0.701351], 
          Opacity[0.2]], 
         GraphicsGroup[{
           
           Polygon[{{384, 436, 437, 433, 435, 432, 431, 430, 429, 428, 427, 
            426, 425, 424, 423, 422, 421, 420, 419, 418, 417, 416, 415, 414, 
            413, 412, 411, 410, 409, 408, 407, 406, 405, 404, 403, 402, 401, 
            400, 399, 398, 397, 396, 395, 394, 393, 392, 391, 390, 389, 388, 
            387, 386, 385, 
            434}}]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Line[{1, 114, 95, 80, 69, 59, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
          272, 12, 13, 14, 15, 16, 17, 115, 96, 81, 70, 60, 52, 119, 100, 85, 
          74, 65, 18, 116, 97, 82, 71, 125, 106, 91, 61, 122, 103, 88, 130, 
          111, 77, 127, 108, 134, 93, 131}], 
         Line[{112, 135, 53, 66, 19, 54, 20, 21, 22, 23, 24, 25, 26, 27, 28, 
          29, 30, 31, 55, 32, 62, 56, 120, 101, 133}], 
         Line[{86, 129, 110, 75, 126, 107, 92, 67, 123, 104, 89, 78, 33, 117, 
          98, 83, 72, 63, 57, 34, 35, 36, 37, 38, 39, 273, 40, 41, 42, 43, 44,
           45, 46, 47, 48, 49, 118, 99, 84, 73, 64, 58, 121, 102, 87, 76, 68, 
          124, 105, 90, 79, 128, 109, 94, 132, 113, 136, 50}]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Line[{143, 253, 237, 222, 211, 201, 193, 144, 145, 146, 147, 148, 
          149, 150, 151, 152, 254, 238, 223, 212, 202, 194, 258, 242, 227, 
          216, 207, 153, 255, 239, 224, 213, 263, 247, 233, 203, 260, 244, 
          268, 230, 265, 250}], 
         Line[{269, 219, 235, 195, 208, 154, 196, 155, 156, 157, 158, 159, 
          160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 
          173, 174, 175, 176, 177, 178, 179, 180, 197, 181, 204, 198, 228, 
          217, 248, 234}], 
         Line[{266, 251, 270, 209, 261, 245, 231, 220, 182, 256, 240, 225, 
          214, 205, 199, 183, 184, 185, 186, 187, 188, 189, 190, 191, 257, 
          241, 226, 215, 206, 200, 259, 243, 229, 218, 210, 262, 246, 232, 
          221, 264, 249, 236, 267, 252, 271, 192}]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Line[{280, 330, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 
          291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 
          304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 
          317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 331, 
          329}]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         Line[{332, 382, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 
          343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 
          356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 
          369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 383, 
          381}]}, {
         Directive[
          Opacity[1.], 
          RGBColor[0.528488, 0.470624, 0.701351], 
          AbsoluteThickness[1.6]], 
         Line[{384, 434, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 
          395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 
          408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 
          421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 
          433}]}, {
         Directive[
          RGBColor[0.368417, 0.506779, 0.709798], 
          Opacity[0.2]], 
         Line[{139, 141, 138}], 
         Line[{140, 142, 137}], 
         Line[{276, 278, 275}], 
         Line[{277, 279, 274}]}}, {{}, {}, {}, {}, {}, {}, {}}}], {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0., 0.},
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
       FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
        "AxesInFront" -> True}, PlotRange -> {All, All}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]]}, {
        Rational[1, 2], 1, 2, 5, 10}, LabelStyle -> {
         GrayLevel[0], Bold, 8}, LegendLabel -> "\[Sigma]=", LegendLayout -> 
       "Column"]], {0.85, 0.55}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.684542210063703*^9, 3.684575610164694*^9, 3.6846344406468563`*^9, {
   3.684635512935843*^9, 3.68463553970872*^9}, 3.684635595095673*^9, 
   3.6846356597728367`*^9, 3.684667986219694*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "1"], 
  RowBox[{"x", " ", 
   RowBox[{"pdfTriangle", "[", 
    RowBox[{"x", ",", "\[Mu]", ",", "\[Sigma]"}], "]"}], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {"\[Mu]", 
        RowBox[{
         RowBox[{"0", "<", "\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], ">", "0"}], "&&", 
         RowBox[{"\[Sigma]", ">", "0"}]}]},
       {
        RowBox[{
         FractionBox["1", "6"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"3", " ", "\[Mu]"}], "+", 
           RowBox[{
            SqrtBox["6"], " ", "\[Sigma]"}]}], ")"}]}], 
        RowBox[{
         RowBox[{"\[Mu]", "\[Equal]", "0"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}], "&&", 
         RowBox[{"\[Sigma]", ">", "0"}]}]},
       {
        FractionBox[
         RowBox[{"2", "-", 
          RowBox[{"3", " ", "\[Mu]"}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]"}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Mu]", ">", "1"}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "-", 
             RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}]}], ")"}],
          "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
           RowBox[{"\[Sigma]", "\[GreaterEqual]", 
            FractionBox["1", 
             SqrtBox["6"]]}]}], ")"}]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"3", " ", "\[Mu]"}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]"}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", "<", "0"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], ">", 
          SqrtBox["6"]}]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"3", " ", "\[Mu]"}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Mu]", "3"]}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]"}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"0", "<", "\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"3", " ", "\[Mu]"}], "-", 
          SuperscriptBox["\[Mu]", "3"], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]"}], "-", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Mu]", "\[Equal]", "0"}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "+", 
             RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
            SqrtBox["6"]}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"0", "\[LessEqual]", "\[Mu]", "<", "1"}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "+", 
             RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
            SqrtBox["6"]}], "&&", 
           RowBox[{"\[Sigma]", "\[LessEqual]", "0"}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "-", 
             RowBox[{"6", " ", "\[Sigma]"}]}], ">", "0"}]}], ")"}]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[Mu]", "3"]}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"0", "<", "\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}], "&&", 
         RowBox[{"\[Sigma]", "\[LessEqual]", "0"}]}]},
       {
        FractionBox[
         RowBox[{
          SqrtBox["6"], "-", 
          RowBox[{
           SqrtBox["6"], " ", "\[Mu]"}], "+", 
          RowBox[{"3", " ", "\[Mu]", " ", "\[Sigma]"}], "-", 
          RowBox[{
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Sigma]", "2"]}]}], 
         RowBox[{"6", " ", "\[Sigma]"}]], 
        RowBox[{
         RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
         RowBox[{"0", "<", "\[Sigma]", "<", 
          FractionBox["1", 
           SqrtBox["6"]]}]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"3", " ", "\[Mu]"}], "-", 
          SuperscriptBox["\[Mu]", "3"], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]"}], "-", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
          RowBox[{"18", " ", "\[Mu]", " ", 
           SuperscriptBox["\[Sigma]", "2"]}], "-", 
          RowBox[{"6", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Sigma]", "3"]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"0", "<", "\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], ">", "0"}], "&&", 
         RowBox[{"\[Sigma]", ">", "0"}]}]},
       {
        FractionBox[
         RowBox[{"2", "-", 
          RowBox[{"3", " ", "\[Mu]"}], "+", 
          SuperscriptBox["\[Mu]", "3"], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]"}], "-", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
          RowBox[{"18", " ", "\[Mu]", " ", 
           SuperscriptBox["\[Sigma]", "2"]}], "-", 
          RowBox[{"6", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Sigma]", "3"]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", ">", "1"}], "&&", 
         RowBox[{"0", "<", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[Mu]", "3"]}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
          RowBox[{"18", " ", "\[Mu]", " ", 
           SuperscriptBox["\[Sigma]", "2"]}], "+", 
          RowBox[{"6", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Sigma]", "3"]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"0", "<", "\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}], "&&", 
         RowBox[{"\[Sigma]", ">", "0"}]}]},
       {
        FractionBox[
         RowBox[{
          SuperscriptBox["\[Mu]", "3"], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
          RowBox[{"18", " ", "\[Mu]", " ", 
           SuperscriptBox["\[Sigma]", "2"]}], "+", 
          RowBox[{"6", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Sigma]", "3"]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", "<", "0"}], "&&", 
         RowBox[{"0", "<", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", 
          SqrtBox["6"]}]}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.684634459123765*^9, 3.684635677562282*^9, 
  3.6846680046643047`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Mu]", ">", "0"}], " ", "&&", 
    RowBox[{"\[Sigma]", ">", "0"}]}], ",", 
   RowBox[{"Refine", "[", 
    TagBox[GridBox[{
       {"\[Piecewise]", GridBox[{
          {"\[Mu]", 
           RowBox[{
            RowBox[{"0", "<", "\[Mu]", "<", "1"}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "+", 
              RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
             SqrtBox["6"]}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "-", 
              RowBox[{"6", " ", "\[Sigma]"}]}], ">", "0"}], "&&", 
            RowBox[{"\[Sigma]", ">", "0"}]}]},
          {
           RowBox[{
            FractionBox["1", "6"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"3", " ", "\[Mu]"}], "+", 
              RowBox[{
               SqrtBox["6"], " ", "\[Sigma]"}]}], ")"}]}], 
           RowBox[{
            RowBox[{"\[Mu]", "\[Equal]", "0"}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "+", 
              RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
             SqrtBox["6"]}], "&&", 
            RowBox[{"\[Sigma]", ">", "0"}]}]},
          {
           FractionBox[
            RowBox[{"2", "-", 
             RowBox[{"3", " ", "\[Mu]"}], "+", 
             RowBox[{"3", " ", 
              SqrtBox["6"], " ", "\[Sigma]"}]}], 
            RowBox[{"36", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Mu]", ">", "1"}], "&&", 
              RowBox[{
               RowBox[{
                RowBox[{
                 SqrtBox["6"], " ", "\[Mu]"}], "-", 
                RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}]}], 
             ")"}], "||", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
              RowBox[{"\[Sigma]", "\[GreaterEqual]", 
               FractionBox["1", 
                SqrtBox["6"]]}]}], ")"}]}]},
          {
           FractionBox[
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"3", " ", "\[Mu]"}], "+", 
             RowBox[{"3", " ", 
              SqrtBox["6"], " ", "\[Sigma]"}]}], 
            RowBox[{"36", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]], 
           RowBox[{
            RowBox[{"\[Mu]", "<", "0"}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "+", 
              RowBox[{"6", " ", "\[Sigma]"}]}], ">", 
             SqrtBox["6"]}]}]},
          {
           FractionBox[
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"3", " ", "\[Mu]"}], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Mu]", "3"]}], "+", 
             RowBox[{"3", " ", 
              SqrtBox["6"], " ", "\[Sigma]"}]}], 
            RowBox[{"36", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]], 
           RowBox[{
            RowBox[{"0", "<", "\[Mu]", "<", "1"}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "+", 
              RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
             SqrtBox["6"]}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "-", 
              RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}]}]},
          {
           FractionBox[
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"3", " ", "\[Mu]"}], "-", 
             SuperscriptBox["\[Mu]", "3"], "+", 
             RowBox[{"3", " ", 
              SqrtBox["6"], " ", "\[Sigma]"}], "-", 
             RowBox[{"3", " ", 
              SqrtBox["6"], " ", 
              SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}]}], 
            RowBox[{"36", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Mu]", "\[Equal]", "0"}], "&&", 
              RowBox[{
               RowBox[{
                RowBox[{
                 SqrtBox["6"], " ", "\[Mu]"}], "+", 
                RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
               SqrtBox["6"]}]}], ")"}], "||", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"0", "\[LessEqual]", "\[Mu]", "<", "1"}], "&&", 
              RowBox[{
               RowBox[{
                RowBox[{
                 SqrtBox["6"], " ", "\[Mu]"}], "+", 
                RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
               SqrtBox["6"]}], "&&", 
              RowBox[{"\[Sigma]", "\[LessEqual]", "0"}], "&&", 
              RowBox[{
               RowBox[{
                RowBox[{
                 SqrtBox["6"], " ", "\[Mu]"}], "-", 
                RowBox[{"6", " ", "\[Sigma]"}]}], ">", "0"}]}], ")"}]}]},
          {
           FractionBox[
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["\[Mu]", "3"]}], "+", 
             RowBox[{"3", " ", 
              SqrtBox["6"], " ", 
              SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}]}], 
            RowBox[{"36", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]], 
           RowBox[{
            RowBox[{"0", "<", "\[Mu]", "<", "1"}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "-", 
              RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "+", 
              RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
             SqrtBox["6"]}], "&&", 
            RowBox[{"\[Sigma]", "\[LessEqual]", "0"}]}]},
          {
           FractionBox[
            RowBox[{
             SqrtBox["6"], "-", 
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "+", 
             RowBox[{"3", " ", "\[Mu]", " ", "\[Sigma]"}], "-", 
             RowBox[{
              SqrtBox["6"], " ", 
              SuperscriptBox["\[Sigma]", "2"]}]}], 
            RowBox[{"6", " ", "\[Sigma]"}]], 
           RowBox[{
            RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
            RowBox[{"0", "<", "\[Sigma]", "<", 
             FractionBox["1", 
              SqrtBox["6"]]}]}]},
          {
           FractionBox[
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"3", " ", "\[Mu]"}], "-", 
             SuperscriptBox["\[Mu]", "3"], "+", 
             RowBox[{"3", " ", 
              SqrtBox["6"], " ", "\[Sigma]"}], "-", 
             RowBox[{"3", " ", 
              SqrtBox["6"], " ", 
              SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
             RowBox[{"18", " ", "\[Mu]", " ", 
              SuperscriptBox["\[Sigma]", "2"]}], "-", 
             RowBox[{"6", " ", 
              SqrtBox["6"], " ", 
              SuperscriptBox["\[Sigma]", "3"]}]}], 
            RowBox[{"36", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]], 
           RowBox[{
            RowBox[{"0", "<", "\[Mu]", "<", "1"}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "+", 
              RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
             SqrtBox["6"]}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "-", 
              RowBox[{"6", " ", "\[Sigma]"}]}], ">", "0"}], "&&", 
            RowBox[{"\[Sigma]", ">", "0"}]}]},
          {
           FractionBox[
            RowBox[{"2", "-", 
             RowBox[{"3", " ", "\[Mu]"}], "+", 
             SuperscriptBox["\[Mu]", "3"], "+", 
             RowBox[{"3", " ", 
              SqrtBox["6"], " ", "\[Sigma]"}], "-", 
             RowBox[{"3", " ", 
              SqrtBox["6"], " ", 
              SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
             RowBox[{"18", " ", "\[Mu]", " ", 
              SuperscriptBox["\[Sigma]", "2"]}], "-", 
             RowBox[{"6", " ", 
              SqrtBox["6"], " ", 
              SuperscriptBox["\[Sigma]", "3"]}]}], 
            RowBox[{"36", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]], 
           RowBox[{
            RowBox[{"\[Mu]", ">", "1"}], "&&", 
            RowBox[{"0", "<", 
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "-", 
              RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
             SqrtBox["6"]}]}]},
          {
           FractionBox[
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["\[Mu]", "3"]}], "+", 
             RowBox[{"3", " ", 
              SqrtBox["6"], " ", 
              SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
             RowBox[{"18", " ", "\[Mu]", " ", 
              SuperscriptBox["\[Sigma]", "2"]}], "+", 
             RowBox[{"6", " ", 
              SqrtBox["6"], " ", 
              SuperscriptBox["\[Sigma]", "3"]}]}], 
            RowBox[{"36", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]], 
           RowBox[{
            RowBox[{"0", "<", "\[Mu]", "<", "1"}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "+", 
              RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
             SqrtBox["6"]}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "-", 
              RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}], "&&", 
            RowBox[{"\[Sigma]", ">", "0"}]}]},
          {
           FractionBox[
            RowBox[{
             SuperscriptBox["\[Mu]", "3"], "+", 
             RowBox[{"3", " ", 
              SqrtBox["6"], " ", 
              SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
             RowBox[{"18", " ", "\[Mu]", " ", 
              SuperscriptBox["\[Sigma]", "2"]}], "+", 
             RowBox[{"6", " ", 
              SqrtBox["6"], " ", 
              SuperscriptBox["\[Sigma]", "3"]}]}], 
            RowBox[{"36", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]], 
           RowBox[{
            RowBox[{"\[Mu]", "<", "0"}], "&&", 
            RowBox[{"0", "<", 
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "+", 
              RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", 
             SqrtBox["6"]}]}]},
          {"0", 
           TagBox["True",
            "PiecewiseDefault",
            AutoDelete->True]}
         },
         AllowedDimensions->{2, Automatic},
         Editable->True,
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{1.}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.84]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}},
         Selectable->True]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.35]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     "Piecewise",
     DeleteWithContents->True,
     Editable->False,
     SelectWithContents->True,
     Selectable->False], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.684533094744566*^9, 3.6845331402863283`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {"\[Mu]", 
        RowBox[{
         RowBox[{"\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], ">", "0"}]}]},
       {
        FractionBox[
         RowBox[{"2", "-", 
          RowBox[{"3", " ", "\[Mu]"}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]"}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Mu]", ">", "1"}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "-", 
             RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}]}], ")"}],
          "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
           RowBox[{"\[Sigma]", "\[GreaterEqual]", 
            FractionBox["1", 
             SqrtBox["6"]]}]}], ")"}]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"3", " ", "\[Mu]"}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Mu]", "3"]}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]"}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}]}]},
       {
        FractionBox[
         RowBox[{
          SqrtBox["6"], "-", 
          RowBox[{
           SqrtBox["6"], " ", "\[Mu]"}], "+", 
          RowBox[{"3", " ", "\[Mu]", " ", "\[Sigma]"}], "-", 
          RowBox[{
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Sigma]", "2"]}]}], 
         RowBox[{"6", " ", "\[Sigma]"}]], 
        RowBox[{
         RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
         RowBox[{"\[Sigma]", "<", 
          FractionBox["1", 
           SqrtBox["6"]]}]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"3", " ", "\[Mu]"}], "-", 
          SuperscriptBox["\[Mu]", "3"], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]"}], "-", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
          RowBox[{"18", " ", "\[Mu]", " ", 
           SuperscriptBox["\[Sigma]", "2"]}], "-", 
          RowBox[{"6", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Sigma]", "3"]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], ">", "0"}]}]},
       {
        FractionBox[
         RowBox[{"2", "-", 
          RowBox[{"3", " ", "\[Mu]"}], "+", 
          SuperscriptBox["\[Mu]", "3"], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]"}], "-", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
          RowBox[{"18", " ", "\[Mu]", " ", 
           SuperscriptBox["\[Sigma]", "2"]}], "-", 
          RowBox[{"6", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Sigma]", "3"]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", ">", "1"}], "&&", 
         RowBox[{"0", "<", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[Mu]", "3"]}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
          RowBox[{"18", " ", "\[Mu]", " ", 
           SuperscriptBox["\[Sigma]", "2"]}], "+", 
          RowBox[{"6", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Sigma]", "3"]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}]}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.68453314145338*^9, 3.6846344595182743`*^9, 
  3.684635677966384*^9, 3.6846680051858797`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {"\[Mu]", 
          RowBox[{
           RowBox[{"\[Mu]", "<", "1"}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "+", 
             RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
            SqrtBox["6"]}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "-", 
             RowBox[{"6", " ", "\[Sigma]"}]}], ">", "0"}]}]},
         {
          FractionBox[
           RowBox[{"2", "-", 
            RowBox[{"3", " ", "\[Mu]"}], "+", 
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", "\[Sigma]"}]}], 
           RowBox[{"36", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Mu]", ">", "1"}], "&&", 
             RowBox[{
              RowBox[{
               RowBox[{
                SqrtBox["6"], " ", "\[Mu]"}], "-", 
               RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}]}], 
            ")"}], "||", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
             RowBox[{"\[Sigma]", "\[GreaterEqual]", 
              FractionBox["1", 
               SqrtBox["6"]]}]}], ")"}]}]},
         {
          FractionBox[
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            RowBox[{"3", " ", "\[Mu]"}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox["\[Mu]", "3"]}], "+", 
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", "\[Sigma]"}]}], 
           RowBox[{"36", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]], 
          RowBox[{
           RowBox[{"\[Mu]", "<", "1"}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "+", 
             RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
            SqrtBox["6"]}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "-", 
             RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}]}]},
         {
          FractionBox[
           RowBox[{
            SqrtBox["6"], "-", 
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "+", 
            RowBox[{"3", " ", "\[Mu]", " ", "\[Sigma]"}], "-", 
            RowBox[{
             SqrtBox["6"], " ", 
             SuperscriptBox["\[Sigma]", "2"]}]}], 
           RowBox[{"6", " ", "\[Sigma]"}]], 
          RowBox[{
           RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
           RowBox[{"\[Sigma]", "<", 
            FractionBox["1", 
             SqrtBox["6"]]}]}]},
         {
          FractionBox[
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            RowBox[{"3", " ", "\[Mu]"}], "-", 
            SuperscriptBox["\[Mu]", "3"], "+", 
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", "\[Sigma]"}], "-", 
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", 
             SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
            RowBox[{"18", " ", "\[Mu]", " ", 
             SuperscriptBox["\[Sigma]", "2"]}], "-", 
            RowBox[{"6", " ", 
             SqrtBox["6"], " ", 
             SuperscriptBox["\[Sigma]", "3"]}]}], 
           RowBox[{"36", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]], 
          RowBox[{
           RowBox[{"\[Mu]", "<", "1"}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "+", 
             RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
            SqrtBox["6"]}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "-", 
             RowBox[{"6", " ", "\[Sigma]"}]}], ">", "0"}]}]},
         {
          FractionBox[
           RowBox[{"2", "-", 
            RowBox[{"3", " ", "\[Mu]"}], "+", 
            SuperscriptBox["\[Mu]", "3"], "+", 
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", "\[Sigma]"}], "-", 
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", 
             SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
            RowBox[{"18", " ", "\[Mu]", " ", 
             SuperscriptBox["\[Sigma]", "2"]}], "-", 
            RowBox[{"6", " ", 
             SqrtBox["6"], " ", 
             SuperscriptBox["\[Sigma]", "3"]}]}], 
           RowBox[{"36", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]], 
          RowBox[{
           RowBox[{"\[Mu]", ">", "1"}], "&&", 
           RowBox[{"0", "<", 
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "-", 
             RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
            SqrtBox["6"]}]}]},
         {
          FractionBox[
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[Mu]", "3"]}], "+", 
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", 
             SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
            RowBox[{"18", " ", "\[Mu]", " ", 
             SuperscriptBox["\[Sigma]", "2"]}], "+", 
            RowBox[{"6", " ", 
             SqrtBox["6"], " ", 
             SuperscriptBox["\[Sigma]", "3"]}]}], 
           RowBox[{"36", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]], 
          RowBox[{
           RowBox[{"\[Mu]", "<", "1"}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "+", 
             RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
            SqrtBox["6"]}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "-", 
             RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}]}]},
         {"0", 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"x", " ", "is", " ", "the", " ", "moment", " ", "arm"}], ",", " ", 
    RowBox[{
    "we", " ", "integrate", " ", "over", " ", "the", " ", "length", " ", "of",
      " ", "the", " ", "object"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.676465933957417*^9, 3.676465936137473*^9}, {
   3.676466161477537*^9, 3.6764661745402927`*^9}, {3.678013519466964*^9, 
   3.6780135355704927`*^9}, 3.684533036755126*^9, 3.684533154817479*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {"\[Mu]", 
        RowBox[{
         RowBox[{"\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           SqrtBox["6"], " ", "\[Mu]"}], ">", 
          RowBox[{"6", " ", "\[Sigma]"}]}]}]},
       {
        FractionBox[
         RowBox[{"2", "-", 
          RowBox[{"3", " ", "\[Mu]"}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]"}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Mu]", ">", "1"}], "&&", 
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "\[LessEqual]", 
            RowBox[{"6", " ", "\[Sigma]"}]}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
           RowBox[{"\[Sigma]", "\[GreaterEqual]", 
            FractionBox["1", 
             SqrtBox["6"]]}]}], ")"}]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"3", " ", "\[Mu]"}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Mu]", "3"]}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]"}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           SqrtBox["6"], " ", "\[Mu]"}], "\[LessEqual]", 
          RowBox[{"6", " ", "\[Sigma]"}]}]}]},
       {
        RowBox[{
         FractionBox["1", "2"], "-", 
         FractionBox["\[Sigma]", 
          SqrtBox["6"]]}], 
        RowBox[{
         RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
         RowBox[{"\[Sigma]", "<", 
          FractionBox["1", 
           SqrtBox["6"]]}]}]},
       {
        RowBox[{"-", 
         FractionBox[
          RowBox[{"2", "+", 
           SuperscriptBox["\[Mu]", "3"], "+", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", 
            SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", "\[Sigma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "-", 
           RowBox[{"3", " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"6", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
          RowBox[{"36", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]]}], 
        RowBox[{
         RowBox[{"\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           SqrtBox["6"], " ", "\[Mu]"}], ">", 
          RowBox[{"6", " ", "\[Sigma]"}]}]}]},
       {
        FractionBox[
         RowBox[{"2", "+", 
          SuperscriptBox["\[Mu]", "3"], "-", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "+", 
          RowBox[{"3", " ", "\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"6", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", ">", "1"}], "&&", 
         RowBox[{"0", "<", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}]}]},
       {
        RowBox[{
         FractionBox["1", "36"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"18", " ", "\[Mu]"}], "-", 
           FractionBox[
            SuperscriptBox["\[Mu]", "3"], 
            SuperscriptBox["\[Sigma]", "2"]], "+", 
           FractionBox[
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", 
             SuperscriptBox["\[Mu]", "2"]}], "\[Sigma]"], "+", 
           RowBox[{"6", " ", 
            SqrtBox["6"], " ", "\[Sigma]"}]}], ")"}]}], 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           SqrtBox["6"], " ", "\[Mu]"}], "\[LessEqual]", 
          RowBox[{"6", " ", "\[Sigma]"}]}]}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.676465889260406*^9, 3.676465937337885*^9, 3.6764661289750233`*^9, {
   3.6764661652102547`*^9, 3.676466178267062*^9}, 3.684533053449914*^9, 
   3.684533158583465*^9, 3.684634461361347*^9, 3.684635679745891*^9, 
   3.684668007049415*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"TorquePivot", "[", 
   RowBox[{"\[Mu]_", ",", "\[Sigma]_"}], "]"}], ":=", 
  TagBox[GridBox[{
     {"\[Piecewise]", GridBox[{
        {"\[Mu]", 
         RowBox[{
          RowBox[{"\[Mu]", "<", "1"}], "&&", 
          RowBox[{
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "+", 
            RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
           SqrtBox["6"]}], "&&", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], ">", 
           RowBox[{"6", " ", "\[Sigma]"}]}]}]},
        {
         FractionBox[
          RowBox[{"2", "-", 
           RowBox[{"3", " ", "\[Mu]"}], "+", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", "\[Sigma]"}]}], 
          RowBox[{"36", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Mu]", ">", "1"}], "&&", 
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "\[LessEqual]", 
             RowBox[{"6", " ", "\[Sigma]"}]}]}], ")"}], "||", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
            RowBox[{"\[Sigma]", "\[GreaterEqual]", 
             FractionBox["1", 
              SqrtBox["6"]]}]}], ")"}]}]},
        {
         FractionBox[
          RowBox[{
           RowBox[{"-", "2"}], "+", 
           RowBox[{"3", " ", "\[Mu]"}], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Mu]", "3"]}], "+", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", "\[Sigma]"}]}], 
          RowBox[{"36", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]], 
         RowBox[{
          RowBox[{"\[Mu]", "<", "1"}], "&&", 
          RowBox[{
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "+", 
            RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
           SqrtBox["6"]}], "&&", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "\[LessEqual]", 
           RowBox[{"6", " ", "\[Sigma]"}]}]}]},
        {
         RowBox[{
          FractionBox["1", "2"], "-", 
          FractionBox["\[Sigma]", 
           SqrtBox["6"]]}], 
         RowBox[{
          RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
          RowBox[{"\[Sigma]", "<", 
           FractionBox["1", 
            SqrtBox["6"]]}]}]},
        {
         RowBox[{"-", 
          FractionBox[
           RowBox[{"2", "+", 
            SuperscriptBox["\[Mu]", "3"], "+", 
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", 
             SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", "\[Sigma]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "-", 
            RowBox[{"3", " ", "\[Mu]", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"6", " ", 
                SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
           RowBox[{"36", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]]}], 
         RowBox[{
          RowBox[{"\[Mu]", "<", "1"}], "&&", 
          RowBox[{
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "+", 
            RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
           SqrtBox["6"]}], "&&", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], ">", 
           RowBox[{"6", " ", "\[Sigma]"}]}]}]},
        {
         FractionBox[
          RowBox[{"2", "+", 
           SuperscriptBox["\[Mu]", "3"], "-", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", 
            SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", "\[Sigma]", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "+", 
           RowBox[{"3", " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
          RowBox[{"36", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]], 
         RowBox[{
          RowBox[{"\[Mu]", ">", "1"}], "&&", 
          RowBox[{"0", "<", 
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "-", 
            RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
           SqrtBox["6"]}]}]},
        {
         RowBox[{
          FractionBox["1", "36"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"18", " ", "\[Mu]"}], "-", 
            FractionBox[
             SuperscriptBox["\[Mu]", "3"], 
             SuperscriptBox["\[Sigma]", "2"]], "+", 
            FractionBox[
             RowBox[{"3", " ", 
              SqrtBox["6"], " ", 
              SuperscriptBox["\[Mu]", "2"]}], "\[Sigma]"], "+", 
            RowBox[{"6", " ", 
             SqrtBox["6"], " ", "\[Sigma]"}]}], ")"}]}], 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "+", 
            RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
           SqrtBox["6"]}], "&&", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "\[LessEqual]", 
           RowBox[{"6", " ", "\[Sigma]"}]}]}]},
        {"0", 
         TagBox["True",
          "PiecewiseDefault",
          AutoDelete->True]}
       },
       AllowedDimensions->{2, Automatic},
       Editable->True,
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.84]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}},
       Selectable->True]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxItemSize->{
     "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.35]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   "Piecewise",
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True,
   Selectable->False]}]], "Input",
 CellChangeTimes->{{3.676467577391876*^9, 3.676467583150907*^9}, {
   3.676467620923286*^9, 3.676467642689784*^9}, 3.684533184729178*^9, {
   3.684533596596053*^9, 3.684533598039216*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"TorquePivotTriATB", "[", 
   RowBox[{"\[Mu]_", ",", "\[Sigma]_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"lowlim1", " ", "=", 
       RowBox[{"Max", "[", 
        RowBox[{"0", ",", 
         RowBox[{"\[Mu]", "-", 
          RowBox[{
           SqrtBox["6"], " ", "\[Sigma]"}]}]}], "]"}]}], ",", 
      RowBox[{"uplim1", " ", "=", "  ", 
       RowBox[{"Min", "[", 
        RowBox[{"1", ",", "\[Mu]"}], "]"}]}], ",", 
      RowBox[{"lowlim2", " ", "=", 
       RowBox[{"Max", "[", 
        RowBox[{"0", ",", "\[Mu]"}], "]"}]}], ",", 
      RowBox[{"uplim2", " ", "=", "  ", 
       RowBox[{"Min", "[", 
        RowBox[{"1", ",", 
         RowBox[{"\[Mu]", "+", 
          RowBox[{
           SqrtBox["6"], " ", "\[Sigma]"}]}]}], "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"uplim1", ">", "lowlim1"}], ",", 
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          SuperscriptBox["lowlim1", "3"]}], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["lowlim1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Mu]", "-", 
            RowBox[{
             SqrtBox["6"], " ", "\[Sigma]"}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["uplim1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "uplim1"}], "-", 
            RowBox[{"3", " ", "\[Mu]"}], "+", 
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", "\[Sigma]"}]}], ")"}]}]}], 
        RowBox[{"36", " ", 
         SuperscriptBox["\[Sigma]", "2"]}]], ",", "0"}], "]"}], "+", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"uplim2", ">", "lowlim2"}], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox["lowlim2", "3"]}], "-", 
         RowBox[{"3", " ", 
          SuperscriptBox["lowlim2", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Mu]", "+", 
            RowBox[{
             SqrtBox["6"], " ", "\[Sigma]"}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["uplim2", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "uplim2"}], "+", 
            RowBox[{"3", " ", 
             RowBox[{"(", 
              RowBox[{"\[Mu]", "+", 
               RowBox[{
                SqrtBox["6"], " ", "\[Sigma]"}]}], ")"}]}]}], ")"}]}]}], 
        RowBox[{"36", " ", 
         SuperscriptBox["\[Sigma]", "2"]}]], ",", "0"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"lowlim1", " ", "=", 
        RowBox[{"Max", "[", 
         RowBox[{"0", ",", 
          RowBox[{"\[Mu]", "-", 
           RowBox[{
            SqrtBox["6"], " ", "\[Sigma]"}]}]}], "]"}]}], ";", 
       RowBox[{"uplim1", " ", "=", "  ", 
        RowBox[{"Min", "[", 
         RowBox[{"1", ",", "\[Mu]"}], "]"}]}], ";", 
       RowBox[{"lowlim2", " ", "=", 
        RowBox[{"Max", "[", 
         RowBox[{"0", ",", "\[Mu]"}], "]"}]}], ";", 
       RowBox[{"uplim2", " ", "=", "  ", 
        RowBox[{"Min", "[", 
         RowBox[{"1", ",", 
          RowBox[{"\[Mu]", "+", 
           RowBox[{
            SqrtBox["6"], " ", "\[Sigma]"}]}]}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"uplim1", ">", "lowlim1"}], ",", 
        RowBox[{
         SubsuperscriptBox["\[Integral]", "lowlim1", "uplim1"], 
         RowBox[{"x", " ", 
          FractionBox[
           RowBox[{"x", "-", "\[Mu]", "+", 
            RowBox[{
             SqrtBox["6"], " ", "\[Sigma]"}]}], 
           RowBox[{"6", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]], 
          RowBox[{"\[DifferentialD]", "x"}]}]}], ",", "0"}], "]"}], "+", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"uplim2", ">", "lowlim2"}], ",", 
        RowBox[{
         SubsuperscriptBox["\[Integral]", "lowlim2", "uplim2"], 
         RowBox[{"x", " ", 
          FractionBox[
           RowBox[{
            RowBox[{"-", "x"}], "+", "\[Mu]", "+", 
            RowBox[{
             SqrtBox["6"], " ", "\[Sigma]"}]}], 
           RowBox[{"6", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]], 
          RowBox[{"\[DifferentialD]", "x"}]}]}], ",", "0"}], "]"}]}]}], "]"}],
    "*)"}]}]}], "Input",
 CellChangeTimes->{{3.676467577391876*^9, 3.676467583150907*^9}, {
   3.676467620923286*^9, 3.676467642689784*^9}, 3.684533184729178*^9, {
   3.684533596596053*^9, 3.684533598039216*^9}, {3.6845379966929417`*^9, 
   3.684538068930195*^9}, {3.684538106530834*^9, 3.6845382708752737`*^9}, {
   3.6845383147084846`*^9, 3.684538356260854*^9}, 3.684538387403821*^9, {
   3.684538484572762*^9, 3.684538521073769*^9}, {3.6845388666282597`*^9, 
   3.6845388668906527`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "lowlim", "uplim"], 
  RowBox[{"x", " ", 
   FractionBox["1", 
    RowBox[{"2", 
     SqrtBox["3"], " ", "\[Sigma]"}]], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.684539156942346*^9, 3.684539164426305*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    SuperscriptBox["lowlim", "2"], 
    RowBox[{"4", " ", 
     SqrtBox["3"], " ", "\[Sigma]"}]]}], "+", 
  FractionBox[
   SuperscriptBox["uplim", "2"], 
   RowBox[{"4", " ", 
    SqrtBox["3"], " ", "\[Sigma]"}]]}]], "Output",
 CellChangeTimes->{3.6845391647952223`*^9, 3.6845408854065228`*^9, 
  3.6846344615903387`*^9, 3.684635325917111*^9, 3.6846356799605722`*^9, 
  3.684668007241962*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"TorquePivotUni", "[", 
   RowBox[{"\[Mu]_", ",", "\[Sigma]_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"lowlim", " ", "=", 
       RowBox[{"Max", "[", 
        RowBox[{"0", ",", 
         RowBox[{"\[Mu]", "-", 
          RowBox[{
           SqrtBox["3"], " ", "\[Sigma]"}]}]}], "]"}]}], ",", 
      RowBox[{"uplim", " ", "=", "  ", 
       RowBox[{"Min", "[", 
        RowBox[{"1", ",", 
         RowBox[{"\[Mu]", "+", 
          RowBox[{
           SqrtBox["3"], " ", "\[Sigma]"}]}]}], "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"uplim", ">", "lowlim"}], ",", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         SuperscriptBox["lowlim", "2"], 
         RowBox[{"4", " ", 
          SqrtBox["3"], " ", "\[Sigma]"}]]}], "+", 
       FractionBox[
        SuperscriptBox["uplim", "2"], 
        RowBox[{"4", " ", 
         SqrtBox["3"], " ", "\[Sigma]"}]]}], ",", "0"}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.684538961696658*^9, 3.684539033841741*^9}, {
   3.68453908776854*^9, 3.6845390935628242`*^9}, 3.684539169612364*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"TorquePivotNorm", "[", 
   RowBox[{"\[Mu]_", ",", "\[Sigma]_"}], "]"}], ":=", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]]}]]}], "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox[
          SuperscriptBox["\[Mu]", "2"], 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]]}]]}], ")"}], " ", "\[Sigma]"}], 
    
    SqrtBox[
     RowBox[{"2", " ", "\[Pi]"}]]], "+", 
   RowBox[{
    FractionBox["1", "2"], " ", "\[Mu]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Erf", "[", 
       FractionBox[
        RowBox[{"1", "-", "\[Mu]"}], 
        RowBox[{
         SqrtBox["2"], " ", "\[Sigma]"}]], "]"}], "+", 
      RowBox[{"Erf", "[", 
       FractionBox["\[Mu]", 
        RowBox[{
         SqrtBox["2"], " ", "\[Sigma]"}]], "]"}]}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.676467577391876*^9, 3.676467583150907*^9}, {
  3.676467620923286*^9, 3.676467642689784*^9}, {3.684540628942993*^9, 
  3.684540631070787*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sigs", " ", "=", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.1", ",", "0.5", ",", "1", ",", "2", ",", 
       RowBox[{"5", "/", 
        RowBox[{"\[Sqrt]", "3"}]}], ",", "5"}], "}"}], "/", "10"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"TODO", ":", " ", 
    RowBox[{
    "place", " ", "legend", " ", "inside", " ", "the", " ", "plot"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"TorquePivotNorm", "[", 
      RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{"\[Sigma]", "\[Rule]", "sigs"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", 
     RowBox[{"-", "2"}], ",", "4"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{"sigs", ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", "Bold", ",", "8"}], "}"}]}], ",", 
        RowBox[{"LegendLabel", "\[Rule]", "\"\<\[Sigma]=\>\""}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.75", ",", "0.55"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Mu]\>\"", ",", "\"\<Torque\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Normal distribution\>\""}], ",", " ", 
   
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"2", "/", "3"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"2", "/", "3"}], ",", "1"}], "}"}]}], "}"}], "]"}], 
     "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<../abecker/SwarmPublications/JournalTorqueControl/pictures/pdf/\
TorqueNormal.pdf\>\"", ",", "%"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.683656192718853*^9, 3.68365650959415*^9}, {
   3.684540635146593*^9, 3.684540677064104*^9}, 3.68463443016495*^9, {
   3.684634642808958*^9, 3.684634652898061*^9}, {3.684634891389399*^9, 
   3.684635015089489*^9}, {3.68463505265368*^9, 3.6846350533908997`*^9}, {
   3.684635268251931*^9, 3.684635287362721*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
eNiMft0v3PbUGMbqKu7/AKms3JU=
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxN2nk8VO8bP35bZcu+Z60USRRJzDmXlFCSkLTYlyKJsiUJSVSWkKUQoqSE
IllvIcm+b1FkzT6rbPnN5/v7Pt6+88e8Hs+57nPPNdecmTN/jIztdWMHJgYG
BhX63f/yq6XMr/X1dcTwf2/+UpoGXn83rD5kWjyzsOFsm9CYvuENR9nP636s
3vAF5/I8xwcbnvM8H9TEtWGh8CeyzyX+/WdctWo4nW8VtT2O3mkrx8s66PMq
3XjPMrLFLqpK7brAXWE4Gx538i/KuLr9Ka2KQcgzmTJ3/BgN/XEaJtzkeC2e
EZZr+sKKghpdL5/Y32m2/c3cHmV7YxJaGh5NdRma370wyqpWbriAyhklgutu
9e69RFQN9Psxg56x2hswc08p32fvCzxXN4nC0Ljinbhq1STL0UdBy6Oojs1U
c16/89ChroKpLhhGMWoK4dR2M401X05nliv9KOiV8+uGi44EIa1sg1b9fhSg
9HK8OlKjTHmTnlKSQj9ikAws2KxtV2YfeY+iMt+HeMxU5ZhuGZXVv1z2t/Pq
Qwx/JQ93jegSEhonY6qCexHDy4aV/UsRhA9PQrwiHHuRlkEUp6VmIqHRbOf5
C3q9KECC05h/fzJhfchKksTRiyrjtxdaHn5LEHm1xlAx24NSGbmo1yfyCQeu
Ph8Ja+lBWqevGFgkFhEMlA/Xns2nW7hg9UctIjhSu7NkYnpQQFkS+mhcQwgo
8Xg069GDGDRullg9aSA8u8vnWmzWg4bSQifDGNsJBcfyjO6r09crvle+3NVD
aGIzVDkjRt8vzJzt+8FfhPHmaUGJ1W4UMG55rvP5KIEhNuzv5GA3qowte9Aq
P00QO7/7RwGi10mH9cS7iQRVya/lAWndiKFr7jDBfpFgOGKbanCvG2l9azFP
yv5HuJLFcE/EgX68U5mrxRYWLOhaisPocXpdykm9Q4Ude36AoJcn142so0J4
qMK8WMFi3x4/dvr6Z9f26x4VwprLvLfqzXQhrWcivUGr4thkoOACf3MXkrbl
t4zt2o4x6X5s/5VLr2/S43niLoeJc54pfPuE7l3j6fvylDC1trl475tdKOCW
rjx7kCpmFPfY9+hZej0gz/nUPQ3M6eIeC+5DXahyuffoOckjWJB0HfwQ6UJD
1qwefnzHsaQxh+2vlztRZV+/9RcXA+xTNvOmmwOdSHqg0z1A1xhrvZ42gVd0
Igb/cQF333PYlCrUs6d2Ii1tVS9eSUuMZXngXXcg/fjmPZtCTthhksg3Mt2O
vn6gQzry/RXsULDIDVcden09eNg/7DpmpP/JVGN3JwrYUjhxVsoDc+YyPbSZ
je7nB96QM25hwR1E0fapDpQ6SrrceyYAS0mIXE1u7EDW56RiQyuCsc8Wir+c
3ncgLdNDzEFnH2Jt2xu+HIyiW1PVyy8/CpuauJLBeKMDVVaEeMxsf4qx5Gx+
0GRCr3fv+X645BkmeSPDKfEg3S67Rj2GUjH1Q9oGDsL0/S+HXJbRz8SMV3/t
27/UjrQibJUqW7Kxq1/u8K71tyPpvKGpA4N5GF+EdymUtCOG7f45txMKsZIL
7g5Bie1oSC+c2pNUitnsvsr91Ydef99+3Dj1C8ZKsS/eYt6OAhzt/Vh9arHc
Sku7E4fo9dPdtqqJjZhZuPnWcKF2VDl+V2f33nZs7bxxUQu1DTGw3lI6w92D
ZewysOHronskri350CB2kqzDcbagDWnV2CGN278xEoLC+Jg2lKro6edkPoEl
Pj5s1X+jDQ2VfycNu89iWudV2CSM6eunOjt8HpKwCVnFj1b76ft9t7weaLSI
RZB2WaTz0OvWryI7ddawg0h6y9h8K2IID3O1Pc+EDzwSy9/d0oqkj+kx8//d
jN8zF7jo/L4VpXpvPeteyInvkeXalBPeirSiSB38U7x4G3FL7rwLfb3nBdce
YyHcp4Lx/AGDVmR9yF+pqHYbLvVohclToRXxhHI3SR6RwWvPUd8VsbeiADuZ
H8GXZfEfej9zKB0tiOFN7UX83h58z+82Rt/oFqQ1wN2m4aCM+9z+enbdqAUN
FbWlXABVvFag+E0wN91Py6ZjF9Vxgffv1tiam1HqSmrl63Ict9NNPRP5uBnl
WRoefjCmjX8YiskUONmMtO5U2rgd0MUZfB8sJbI1I+mbhRTm6wa4If/tU1J1
Tci65uGEp+MZPOmda1pGSBNK5e3qqz16Fp/SsaXK6zQhBm9azhTpPK7+66x+
LnMTkv5y6uSuFCs8xEc/WbWqEQVYPLcZ0bTDu3gxYnFAI+K5+U3lm8VlfOdb
ZR2ARmR9y6ptn7kLfuPYzsSatQaUV3dcLHSPO145KDyrX9aAKrWvRTBVe+Bc
3hxHWnzpLhtZrue7hV/iWY81PdyAGOrrFy8S/PHsN6TJvsV6xLDmYCajGoT/
1R4nWH2qR0aaL1m5Ru7jugN9UaMe9Shvwrztx/GHeJxn06iTSj0KqB45fCAg
Eh/l+qI+T/yOKnv/+j/vj8YPZBU89sj7jqwztmaphMXhAUeyhpZc6XW5wvRv
Y8/w5v7nqncVv6Oh24pf1Lek4uIekaEsM3XImpR1lZv/Je689d5AWHYdGvpY
GJOe/QovfuWlzO1EN5Phb7OxbJxVyzk4dncdkhbzrFX8mYub9Vn0io5/Q24n
WM/u6P+AZ9w4s/dFxjcU8FtzpUjnE07i0AnYafcNLcymIfvjJbhWpnrnG5lv
qFWnmamcXIFH4HvllIZq0VBq8BVL1Sp8oEfKryCF7v0pSNz2K77Hnb/1sEUt
YlDZcj5X4Dvuw75lJ9pWi7SGea6LWzfhtS+XvY/1f0Wse0XjYxTbcAFsruF7
wlc0dGgbVzt3J27XPSx1+txXZFTEu+zs0IP3f5FZ2iz8FUXxKJESFX7gRjk2
7RXdNSjAUmfP46BfeG1C2luvuBqkbu5yYSv8xgnBw8H7zGpQXa9N03GxMfzD
dRnLccEapOXlW+xqNYnLX7Q5lNJVjVKP3FC9Iz6Dpx5P4zF7Wo3MnwpjIcoL
uNCB4T9bz1ajv9Zh0kdekPDHEjLVXwWqkY+sGp+kPRVnZrNJutNZhfTWuVJ/
hf3FfSmpngdjq1AAX/ZDT/FVfOHXkOGsSRWKSuAjPxJgAMcGablM/ipUR878
u9+KCQY/WTNadHxBekZbTTEaC5imp/YLxHxBlfw/w6J+b4H68KGPjcZfUKqh
lQJRkQO0bkmHB/PRLY1/Fh3hgiJ7a0dCeyVyu/tSYTyEF/YZpQLlSSVS7spU
ujnIDxmaQyLvzlSivAAPEw0/IRDbLU2y461ErEUpuqPOoiAjWxl3KB0hhqdX
BmvzxYFrFfRfyyAUmlsh/HevNCy3oxWhtAqkdax0c6Ladph4A+9DpCvo1wOR
FqHbO6EzAFnTXpSjhdSUp0oMu6HyHPA7SpUj1sVNzIKN8pCzD33tSimjv589
GjfG9sKzTeCjI1mG3gkkjH+WV4aQgYo9hcmlKKrkSeMw1wG4+REf3ClRigRK
DE6c2aUK1g8rImOTStCV3aNq1zzU4JQNrs0iXoL0bBv8xtfUQUO9gnLzeTFi
LazOK/2mCbu58dcjYsVosiM6ULMHB4Hx8vMmzz4jLb94P2bRI8BYjnFWi35G
lY9nqtnmtWEuprziQGIR6k0putK9cAz6nTH3dJEiJPchSqxURhe+HSnfwZfw
CXm4tjOr3deHAhGsO1D4E2LNYiKQJA0gdb4slBhXiC5NZnDUkQwhvJagaSNU
iFpZOv0tmc6Ab3LZbOvTAlRnZT0Y+M4YLnsQUrUEC5BIYHzX2i1TMD1ZZpwX
+xFlMbYrilwzg31LpUWRMR/Q3gr/yuymC7CtVdN5ne8Dkpa8ZyOiZQGsr0vF
r0fnI+s3KW+2/rYCyh3Nlp+8+WhAPKJd7KINDJuWBho+yUNJdfkur37ZQrOC
pmoFTx56PCvByBNgD16bvJouSueixk62s18xR5C38YwXk8xBow6FyVNCzsDE
7bm6JP4OmX6TbzU56AIDZR42fdveojoWvvNLXq7wydmj9rNYNjJ4cjsoz9UN
okQ8FBJE3yBfMyZltkJ3cK69GeUtkoXep6/UnuC+CUc9blLNhF+jGqdU9sP+
HkBruYEEBTNRdCOzmWyyNzw2aNylL5uBhO48i81TvgUy32Uj/A6+RGVqNyK+
9fqCQVXvpZGzaShhT8r92Sv+MIwfqBFyTEUzHPxHueUDYNZL+FzsTAraZhIk
xy0fCNpOdyg2is9RtCPV97TBPbhmq1xddyoRVXAwBXC5BUPCxZEnSq7x6PxD
9Vf7U+/D7Cl9pbX3MUiDLFxzd1coKDvs6VS2CUWNhTcs3FvDIeRclPu/tGDU
8dufJflSJPzQp3E1/g5ALcw5llq3o4DTIjimue4G0rGMkB6Tj4Yo6QSmMBtH
2Ko6FDXV/xSSFQKOy+feAO5UnZNZvXFAOl7AEaHoC+uBgSmWg/HQjHM1KDwN
hlh5BcW4lUQo0yjNXq57Au1DLvy9YSnw5AjrQExWDExsOz7CV/ECHPXOblUM
fQrasEvtsl8q8JrNX7fSTYR6PbGTHyrT4OPnJ2K/bVNhi6y0yOq1DGDt/Prr
+PBr4KOeHm8xyIYb51x8+Nuy4O6pDNYs/rcw2M/HO1T5BpyuCRnlDbyFD8NW
2rdS34LKmk0To2cOWMwvZby1yoVPK/qZYJkH5zcJH2S9/hGSiQeVdzR8hF65
ZTt+4kfgOdl4T0KnAMwNBqMlbxZAzTvx2wWI7piXC6rehcC8reZt9KdCMJdR
fmdztwjWNUu7xLOLwAzT31EaWQrqUglFjOml8KaknPVQ7xd4Ub9d8l7fF8gk
zdP+/P0OtYp9x2fo6V76o/tBdCeIDP7/efAZ9mOyfuC/XEpkf+7n+vu//KPA
jVQPjMPQmbaK/6WzBlEzVHscsK60/5Mzeh2ffxiPw74H1/5PzjnEfwi6OQ4R
m4n5/0vSC6lXrQXj8Innasb/cplfOdzl0ASoWegH/S85Vo0uZhAmYYKJgecl
PR+zq/QuGkzCltcOR2n05BIVPHvSYhJexWpd1qcnj1qfIenOJAzJ6t+cp6eA
m422FpoEfndJMQ16io+6yw8c+QOD+acSvtBTsTF6kV93Cnx/5+ik60xBFXZa
1dhsCkwC76llmU6BeS6He5TDFDAvFKi/spuCoOjgKc7gKbAxHdUOCZyCXnOv
wU1fpkDacrfgh7IpuFZ/QOxY6xS88JftM22YAibCvFnQrylIvJyaNdI3BYpS
V1r/rU2BQmYhWxmNvt/Y+epFjWnwtJ5OYVWaBpFzQgxqJ6bBSUC2r5wwDTl1
7QSP89PQ6TUUqEN/vPftyU8L3tNwd5BiWGw/DdckWMn7HkwDz+Revufu08AU
WaN0LW4aiq3TvTT8p0HxBvbmT8E0LNGa0xLoj1eNLI3trpmG76cnvPXTp8H8
7Kftjh3ToPHMlzkpZxqC1JWSfhOn4X7g0XyWano/2dO90owz8CdRIoe1id7P
tixBK54Z0B84z/awm97PP+nIH/tmQDPXXbF/gt6P22CDKD4Dpx+VCEbP0/v5
nchqfmoGHFZFnyfSpiHBxEwn7tIM9NX+rhxZpff3lS+o8+oMzJk8mrJlmoEq
tZYKvtszcEbGeYB1ywyYZz1aMXo4A8mZV8tr2WdgVlRPPTJxBmYOd4qGb52B
oEcsnk1ZM+A3IjVxknsGRNYq8zk+zwB5jCeMRHeO6505/W8z4Nq52nOdbu2h
wwqh3TPgb+co94F+fO8Z2uXasRmQe7Bg8pq+/7XqDxksVPrx1wqrCZtngOng
9WFtllm4kMPmZ8UwAwmvFCQD+WehzjNffvUvvX+RyQto+yxYTzxUXqe/3qqw
jPi1/bOAZ+WUmo7R57ti3al5ZBb4clabJ3unYdZFgtfXaBYMqndceF1Pn/fP
vlOfrWZh+CfNwK+EPm+juIc011mI9pPNMcmiz/uL8TdV/1mISlLOEY2dBm0V
bpab4bMguhxeU3KHPv+MBq38pFnoJfyq2+FAn79Q6J35t7PQuCLFqk0/X5hC
j5Uols4CT/QbO2ZF+vyXGBav1s8CG9vkVbOt9P6vlqtk983C25p4vz3T9PN/
4Jbb5OQsRGhY912vpZ//hmo5u/7OwtG+pHrhF/TzdX/urpdCc7C7pfH0Bb0p
CI8QqYqVnYOP3U07O0SnIGE60CJEdQ7qSW2iSZN/IDfTNNbJeA4SOVsKGP3/
QAlThdJFmznIvLx9LubYH6i12t1g4DYHFPmKBBvWPzAgusyoHDEHh9m2W+c8
oH/uveySZZLngO/764NKRyeB1NGozv9uDkw9EtkpKxPAFvHiOu37HHA+L6+x
c6B/bzDpDJZtmofb9sXZoqLjcMTqvc97gXk4/cs2YASNgUGZsEDqjnkokpDq
srIfAzuvqRP3jsyD/rL4zuZXoxA1FflZ/848yEdE59wWGIHp9v6Ybso8EB00
fNetfsGKcLrwKOMC1EsLxj0L+AmBtWZjl9gWQOYP12R/6iA83lEZYCiyAE+9
ZYcih3/Ay8Hoov1qC8CemPj2kUsvyD3WvZ+NLcC/L10+XDE98F5j1XiHzgKc
uvIo6nVpN5TEO8wJmC6A17HbqqoCXdB6Rl32r/sCrP6IkKj40wZmDLMkt1sL
kCnYf59Nrg1+vE+r/BOwAB7Z/SsnnFthnIPj0o/IBdBzuPWwhNYELiVI3jR+
AS5nE4qpsY1AuuKx2JiyAM2fjwycJjTA2tfB6IqcBWgvKHur+boOgjyirQ8V
LoD9Ke7wXVe/AesO3X15ZQtwrYE2+1u9FgQC8r6nNdCf/6HCsAKpGvZo3GO4
/2cBBmjTmagYQeO4tXgqcQEWVj0fZBeXg2sMrl66tACE2z/cX7WWwseZpetE
NiIY8VInorQ/g1lizyNOPiIc94gfLE36BH91Cl/vFiOCxyaFlRuchUB44fbL
Yg8Rvly/Qbu95wP8PGm44nOA7hvoVH5PHgT8VRCO1SACF2uJio9yLmzPZFPJ
1SaCfyaH1WL3O/h6ZsKw/gQRfB9m74xNy4Yr/2qcx4yJkM/jK7QckQXsb9ND
GC4SQchjr1Nz8iswZLGsULtKhCmy1bajYi9hIU+z/8xNIgyyGcVI3U+DaAtR
msttIrAJ+QiMc6SCKvsib+g9IjhuVmq8fiEZej51Kr58RIS/j3c882h5Br52
H/QrYojQFpL/UckjAcR5ohz6nhPhyZ40BebjcWDtdDKZ+x0RWLZ9j6tzjAYm
IfniPQVEIDq68rflRUFm1eYunTJ6f1t5qEcJEaB3fXTBuoYIN3Tz7Inmj2Bq
WxWnXyMRMKEv4mc+hsLjuhdy8Z30flhobId0Q2Cf551jHwaIsPOSikMmTzC0
yly0bholghnjwsUmjiC42azuNzlDhOUiYxvugwEgdFsogZlKhLEBBUsa7x34
vJvyUXKNCD5GOcsprL5wobOt5fAmEsTGzi2QdL1hNSB32nQrCZa2W/3dXe8B
KYrhW9wESUAbu3ewKewGHOl33vFIggRyWwlzdYFuMBqiB69kSZDUNTb89sI1
CFHZdfGLIgkqaH5ejDzOIDfE7D1wkAS3Oh706G27DPWPh6MXMRJ8K+YQbPGw
B5fD6D3fcRKsvvln5y5oC9zjSfWKhiQ4phfzcO+sFXyI9h3XMyMBp7blrlM7
L4EpmDPZW5Igxmcb+9av5kCbPih515EE4mwfrkt8PQsJCfwaz1zp/egLRrFv
MwENHeLZQi8SsNwJ5NlXYQQDxGb3Vn8SpImv+hw9dQr8U96FT4eQIOLQZQ2H
Z/ogc/Lhm82RJAj4ObCYZXYcahYvf5WJJ9F/Rx78pOB1FBwzdIYJL0hgVWY8
KDenBaxndqyde02CbTN3neucMMheYxC9mUuC+p2nSfL3DoNB9k/ViCISUCzF
OTNE1GDOrMzoDSLBtN3K6X/bVCCK+ZlLzTcSzFaOs3sHKINKnnforxYSoMSg
xGOee6H70tmM5R4SdJ54ohsXIAc+bCqVgkMkGOTdu5DDIwtin3gGlCdJkPfX
dfas4HYos51bPLlAgmd92WOnGKRgUqv45sAiCUZktF0YWsVAUCp43mWdBDIM
nJwTcsKgvWZ4dW0zGXbahYZELfOD6w/RiXAuMqw+tYNLarzwrHjUVlKIDLdm
38clpGyFb/G5P99LkMHFfCL/0002oHj6XgBZMixMtl1717MJpE11ulv2kkF8
/Y2P+2cmMDjAY2ytSoaTK6n52zYzwC2eH00LmmQ4rhVjeMJhBX81l6kfeJQM
CeXdW6/bLeLtjW5feU+SIW1Jb/fSAhn/l615JN2YDJ7r5YHjywv4nrDN5Qcu
kCFGepP2zuEZ3Oxym3q1DRlSynCnwZBJ/J5OUoGJExnc3rklRTWN4nk7LiuP
upFhfXofLvpiGB9gPPDOw4cMD+8KPLdvHcRZh1Z3bwogQ3pxuZimch+uWvHt
5dMHZIgeOzySpdWFWydFS+2KJMNeVZ3qe5NteLivxfNPcWQYrWb8yr2zGS8x
lxPWTSFDzWFG7g7T7/i4Gjm6J5MMjZyZHhPaX3E+wQquKzlkMJ0Z67Fv/4ID
OfTh3wIyKFJ4Mp93l+MubSabw8rIQLlQRBQkfcYTciWDRGvIoN07PzHTUYDX
hP9Ze9NAhvgHufiMRT5OvFpwS6ODvt6oivPhzDtc8sRdan0/GbL6PctHt2bh
J+ROuF/8TQZm16h79ssvca/NgrPTf8gQhdwYpaNT8Zejv674Eenv11qbxtLN
53hrVfYo5xIZAnJsv68UxuGrqZ7WyQwU0GiKzTlfHY3L3dUaUGSlQPDWPxZG
tAjc1ILDvIKbAp2pem6H74XhAZrdHYbCFFDdZzAR/S8YzxFNO/1LkgKt++RY
prUC8f7Fqw3Xd1HgsYtuqKqxH765W02XYR8FCFFxJs/UvPEDBYzVUQcpEERR
KrZjuIlbRjfiMhgFjAsFh/l4r+MP3eJL8o9RQGCBeXbwkhNeZGirpm1AgYxr
4FWeY4+P7lX80G5CAdn+JwoXu61xHo6/inYXKeDqo5W8bnMRJ/ypekO2pYC9
uPdyDsEMd/oWLhvsTAFOBdLpOlZjPC7TPE3gBgXM7LaF3lc7hVfd2yGReYsC
3S8Ct29J08XnbOYSDgZSQPKtW62e0FF8m1axQG0oBfgWL8U9b8BxPcngKLMo
CricSx4xblHHPVYNOSfiKfAuyALjoangqf2iod4vKKB0Ov7NDJsy3vR5lJn1
NQXk/CdpruXy+HJc7t2E9xTo87ib+SB1J77L03dF7hMFHKeU//wLlMaNTXS8
i8spEBH9p1PcTgz3389D1v9KgcNbxB1KuAXxbO4frv2NFPjFp9T6/TsP3jOb
OeXcSYGaF0PCt0vYcen6xILkAQo4hde//9LDgju/CvdvHaXAgIeFraEGA/4x
KFCPeZYC2t4Jd75rLGGrlp58alQKiEittJBiyZiOptPAlTUKjH5Lt7h4fg6L
ELZ49XwTFbyEK0p0bk9gPWQjt+atVDDLuhhQsuM3Jt16TINRiArew/EPL6z8
wJzeqbOoSlIhZdg41O5xF/YhdG+z4y4q2KgtWLg+acVW7KUTEvdRQdp/EuN2
+44dOyJg26hGBU1lYRb9u9VYuATr3nWcCnNxifMmPeVY99IKdb8uFapk3jMS
Gz9hUt3zyP40FSpfXLNvs8/HrnwYCYs/R4VjCbllMnezsfyIHpN6Kyr9+pfE
6LwrA1t2bpBYu0yF7COGcqcTU7CjumhCyY0KCyfsxS0OxGOPd3zMt/WhgqXY
CY6qiCdY1/qr208DqMDT2LPFPewhJjnwTKculAoZ7x2lyzYFY1c+R3CvRFHB
zvAXJX+PP5YfG9SnmEifD7UlpT7PC1t283ppnUaFyMgT7YfY3bFjp5yvxbyh
glGg8iGJcCcsXN7yUG0+FVi1xyNUZOyw7k3GjEvFVFCfP3LaLeESJvVbp0Gh
igpiR6p3Gp87i12pOPzUsp4KJ1XWcO6G01j+M0WrJ+1UQIscijGvdbFlLxn5
mn4q4HgZ08noI9hRE0Ey7Td9HtRYWwceDeyxElu5/DQVQvJyNKtOqmBdHGsh
l8hU0HvzgMYXtheTnFwwilyhwo2Khgc1nLLY5ZpRsSpmGqyvu3//xCWF5aX2
jlI4aCDp35HxfUAIW/JrfL9bgO6nZ+6dr+HBtM9X+lwQp4FYd+V953hW7NHB
Au3wnTR4IExzT2Ziwjp5szgr99KAyc4FYz+7TJCYe95NUqWB+94JqfvCZIJj
fWSqLEYDvtIdq8ZompD76p6zuQ4N0oMcV3MsRgl/g7xVH52igfSZIa3pkUGC
ttXVf+VnaUD21U+TY+kmPNK0qluwoEH2D2YGOfZWQqewSfQORxrYDyeLJD/7
SpCkHL9k5koD19YnY2n3EeFyq8auMC8a5F0/ZXaV9TMh792+hVJ/er9VjPtv
suQSlkK3l8yF0OCxa+a3tY+vCdoOQsEykTRYzAzUDIlJIXRK/BN+8IIGuKbb
svPBCILEMnG4+DUNTrpHG/zTfkJw7B57O5NLA9uEzlO8HdGEvxFNYFxJg4kk
T2+jx1Zl4gzJlyWGaTC1OALvpbXKpI0nhuT/0CB1wV6ob1WtbGfG/gtqRBq8
ClyfCr2oXLZXr9bgNOMiPO1wz+O9I11GiJrfHyizCIPFZCulGwxlFtLaq6M2
i/TXf0f4qm1FaYrWRNS734tgst2d9ehxlVKpwP0lmqN/oex48+5uElPJW3s+
1g81y0B4GjKSdcipyLrlwFBp0yrYvzpk8oW8pSAl6cVHiYJ/kBVMurQ1/nze
qRnT9556DFpu2NqjD3Za74aalnR3nWTUYg5xWb8iDq+Lho79CiIwaYntPnAR
mrjSdxTlasprM2uJBbBHxHcMPu+oqHx6W41Fa8uml95dTBFPR+6k9jPv2qS1
TP1486jZz4gHDKmjXfKbtYaqB+qjSFwP3Ap0ZkzEt2j9938HBY7ibTtY/3PD
hRduorJs/3mmpE+2WpD9P6f/VEn9JMbxn5NUVEXMuDj/MxWYbyusbXiEm5R+
goHrPwvyPqgTJG044tAO91O0DbNaItH7yxtezl50pjBx/+efx65s7eDfcJaP
vnHUwQ0ThjgG2G9tuHBzVrD2nQ3vUzym6Bu4YRlfP/8/YRveLDArXfdsw626
zQ73yzas7+rMVV654arYzUWUmv/n+YZxVvumDT+7nZut/XPD/OknTXx/b/hx
3cRK/viG/QWlT8nMb3hRs4xqTt6wm615StTihqdCKcfrVjZslxs1v76+4f8P
9fP3hQ==
       "]]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwUl3c8Vf8fx69rhJaIJAlFkUoqfOOc9yFFIrJlK4UiWZGUrJQ9QwghZO99
zJKdJBlZ15a95+/8/rqP5+P1er/e78/nfO69n8Nj/ETFhEwikeJoSKT/f9bp
8/Tv7u7iglVnb1ZFiki8PCGhYL+2i89ZDGl6m1yWEB9QK56e28X1wnd49+qK
SqQaeQX/GdzF/5twOkPXd1Ui4P6sbG7NLv7d60rLZf1rEnfNy7MevNnFHfS3
k7/vV5OYsdN2bT6wiy8UvVFjO20nweYbyPfh+A5+8aPWusf+Agn0cvVgPPMW
Lrm1h7o5SFKyzyEpXkVwA6cf21k5b/267HKIas5v3g08luZyr1GnWZlPJqla
9xjBMS+0ux+aSEqO3h18sG8DNxVp7Hn4wL0sUvUgt9PMOo51K3tSxZuVaZx3
iP6Us467eOA+4/7mZS3DN8OXrq7jhvPkL9ofwiT5d1c+O15ax0kneufXc4wk
nTkSCnfOEv5fjyPO3/aUFLqz00l/nMhrVkV/PQiUfFeRw3p8dw0n+XTFi4cG
Sd6IOBZ8vYZgf1VPoe0oyZi8+viG0jXchc7v5XPuFMnlVrscpbw1vPJOvTWz
RJxkAl3bD+1EggNN1wZ6EyXJtu5Mlm8IFkw2eueaJnnX/yL34iuivu149Pxu
mmR26t8LDg6EPvSmiYY1T9JwUFzJ1Yxg5VKGfKUiyYrb/3zDbhH9UWZ+i+Jy
yfVHT5Ucr63hGBNFo/lfmeTlt8tMuhKEvnJJRMq6UjK1ZjuY5yxRL5f7LJ6n
VnJk4LU6zUmCV1uSzKq+SnLv0B4Z4yD6409wPr9vkqHiByLTGAk+E+qYs9Qo
yWjDdtx6YxWv/OR7IepYm6RLOles2CTBrSL3IrZ/SK6M8Z/c/rOKu4RINaQY
/JJ8zHshqfr7Ko5NbeVo03ZJDumKCXgVr+IkgceN9mW9klrvIU0xhdBPDRRV
ug1ItvyQvcASQfDv6JaS5mHJa/uUc7q8CBb8lDGrMir5UqDDptSF6PdyLco0
dlyy6IbWlRgHgv3Skhw0JyUX7/WuuFgRfg/jrvGqacnzrw2L7pkS8zzKlp6R
mZE0i6E43jBcxQemKrc2X8xJJpSaSghoEfzAQhbPmJfkWLGqmJEl5qtJPnKz
YElSnWX51Q8gOJmUPyO9Ihkg7CiVJ/b//s7itm2rko2K2+T3FwjOIs1y/lmX
pHv0utbxNNHvS93a/e+bklJetJ66J4h5rpcbjLdtS75IfCsLR4g8g2A758Mk
pKB6PwPvQaJe5Oiahy4VMt8f2ECzZxU3bJRu31NCRoS2WX2IrwJeiYZlRQrR
IA84IhUbVlZwklPXsloJLRInxnUwfWYFx/gEptSl9yC9avFt/qME+38oLb7M
gByx5g+y/ksw3u/3bIURUfFPVVXvJPIaCtP79uxHfNPOs4q3ELpqYSWLxEGk
/ntOJ8fXFdzlepvSryYmhHpMNHy7fAXnfnJJNfcYM4LSlGoP5BP6Psm4ElcW
xIEHjtWkE8w5nm1MYkVy0ZrexESCq2x9il3ZkBkd2RivaIJTD3Tfk2ZHzjg2
GjwKJfpxKzn17+dAYnJ/Dgl7EHz3u1kEDxfyp00zgcV5BTd0v+LKdJ4bOTzT
Y7JiS9TLbzvPmvAgSnsNT/95TKxfgL9SO58XeXeGMl56fwUfGNB/84zrFFJ3
3TQ1RpfIG0lcbYjmQ0j3ph+9ViN4LfZ7zZXTiF300swNGWL9e+Vk97YIIvxv
vZXzJIk8NSGOO6lCSKctbw7PFaKf1ST14djzyBvDYhb/c4TfxyPPS18YEVdQ
ttviW8Fjn5cYJ726iIyLjXWacRF+raK63/kiSMTJl+K/2Qi/d3WMwNYlZGPj
y2b2HiL/0xWB462iyJdRab0TJMK/aPAv3lAc0W3/U+Gztoxj7gWiMfuuIvsq
rLg35pbxyhE/tic/JZDylD2uDycItrr78Uw+gliGxgx3DC7jLisNF36WAcL1
+sp16e5lnCQ1zJG5gCEuWvfojzcu44ZW8jL7VK4hF2U2zN7VELpy8/sDsTLI
0IXAxtVSov7ka7UKmhtI0LEz50zyiHy8sULxtSxybQ/u155G+Bf8q1TYbyJL
C+pzkEjwcy27yHp5JOHv9J30aGLelIQK31AFhK6Ag9XLj6jP/h6beF0ZKYzL
tl/2JJhXjZSrewcx9ZXrMn61jMeKcFzU91RB2B37/2t7towPDFtpiNWoIt/v
239ArIh5FrvrdQ6rI8+V92+nmhL9bjxRSXLSQAQlE/TZjQieV6z33tBEfFja
eRbvEMy73yL+ug6C7Jq6GcoT/cxg+hGLHjIzuUtpliZ4z++PziQDJKYz7IaE
BDGvLu+mv6cholR9Ljn5EsEv9c9oRxshpIxaBjah/+9fzeKnr8ZIVoTOI7dT
xHwlqQfVqe8jzE/fntdnJfICVaMsSh4gNbrcAY37CXb5SFcpZorYyhXOi9MR
PMtfTttihpy6fFs1aWcJr1xRrqt1foT8OjGSx7K6hJPqvpGcb1ognntfsL2e
JVjBgm/h4hNEdJXZYWZsCR9oPbNzNtoKCW/BJL53EWzIJrDw2xq5WfI7SvQH
4RdiGm1lskU2Ei13Pn0n9BM3T7/Ts0NSA2kND1Uv4bFfVi31cHtExzmq6mUJ
0Z/3S+JnMQdkn9mlk9M5Szh2y3TI8psjUqbW4K79heBrNrU9Vk4Il9Ca7OUo
guc1KnhYXyGtR/xT4kKIfo43v3e+dUFcqPn3HvQluH/12L6I14jwbNnjFx5E
fsEii32xKzLYrdoy4byEG/qo2SRNuSFBXycvaNoT+ub91QMXPRDpnNeBtZYE
z2bb9L7zRBLeZqp9NCDyPthbiLu8RcSfHTc11yTYRNzzhrQ30nTf2+mKEuFP
1mQt5/VFDFXW/UiyBPuGTL056Y8swcP4RpRYr8f6/MNPAYjXuV/5YaJLOLfJ
w1GVb4EI57Fr343OE/rmcZP2nSBEZoVrbvU4kf8cM4tKD0W6hn2oa1gJ/qTD
WHb6PfL4xwab337Cf+ehPE1pOELCTQW1aYn9kC5z22sWiYSkdSKnthfxyo9r
/CGXopAzkTJ3ZpcWcZcXPbIOnDFI2Zuc+yXTi3isauLdTuZYZMTYz1u5dxHH
xH45tSrHE+d5K+ZYB+Fv+Fhv4vMJOYCa54w2En6hDovC3gQk/mxXXXbNIm4Y
oCN/4loSInr0xp8XpYS+5ee1VfkZaaDLm5bNJThgp61JMwXRX+IhsXwh5rE9
qXKW4Qvi2brNnxK5iJMebiyaVGcgHOWPrtoGEf2pSr5tPchCMlL/KMI7It/H
vhB3zkakw2WNGF2JeTK4pIKScpBOj3zbX46L+EDBhSG/oVzE3OakV+xToj5s
RW5BJB/ZMQz88MiM8L9JGCdFFCD8khbVVNqEv+Tl8/QvxUiJQM+vJmVinlDq
j5hOKXL7yM2J93IE65QG2fKXI0M0hVvGGMEvWmOpD+KI/cIppvPiRF7Zt5N6
3pUI40DQyfULxPxGHfnfPlYhMc0ksdrThG6AStfVVSPfknv17h4h6j+nPJ+Q
r0N0w+Sf8h1cxLlXj+21TPuKzLkVuc/R/X8/YsblT9Uj7k/5w0t3FnCX5FC9
7tzvCLtByBfPlQWcRDrzLUi3EUlTION3ZgjOyNak4m5GsKtW7ZyjBOscVa7e
bUFMWRXWc34t4IaV3x8m+f5Atsgl+142L+CVnLT4o/R2JGDuNPfNOiL/tCb7
yf6fyKm/oZcOlxO6ffLk4MlfSFEjtWx/HlGvPne3+UUnolD89G5q2gLObbcb
wj31GxlI6rewSyD8jIu7PFZ/EHrX0pC9IYQ/NDQLr+lFop4IJHd6E/k2E0pq
oX8RYb33pXFuhH7tUcdXqQGkVp629bETMW/sGAeT3CCiJW4zJGZD5B/73WCh
P4RM8w0ukx8RurWz4S+PYcSFRYmhxZjI2/TllMcpSMqMoPB9FYIl7qdkPR5D
XB9Ih6jLL+AYh8LQXM84ovtXe+2GNDHfglXoQaNJ5ECLV6WACJF/2+4nfc4/
ZOx67KljgoTfdishzmUWqSwv9NrHu4DHNgt/vpU/h1injyrPHiL6v7ZUdGpc
QG7x7eQNMBCcViF0f2YRORXNerSdiqgfyNC7z7uMdPrIDObNz+OVF/lyoqtW
kUwa3etJE/M4d7/R8cXz64jXC5uU94PzuIvl16aI7A3k6uP4p89/EHp6niW+
uY2wUIp/Pfo+j5NOUSd11+0i0zo//tOrIvLeSFtK/SKhMbdIZCx7Ho/9sTJe
RSGjz2qOPLiYMo8bhuc5e1PToMoSFxp444j63zO9nSK0KPVZ/SDaQEKPeKOc
/nUP2htvt7LiNY9jN5SXr5xjQAs4fO+OuxAs/JUXSWZETRnLeButiH5XB/L0
B/ajUq4/PctMiX4ec2PTHw+iHBuTk+mGBMemKz0tY0KbJo7mBigT/RoTl9Qr
mNFEo4tHXOWIfiasyVK/WNCXf+ScbDBCT65dGNk8jAp/f3ZNQ/j/67vz8YfT
EZRByv+z7Bmi38x60UInOzpUlLT3P+55fOCMh83r6xxoaPKvn8eYCF04fFXA
6Dhqyf1PbD89sX89K4FeTCdQuXCaqJ3dOdywm3959hE3uvHm0v3B2Tk89vrG
zm9tXvTnrnx9+9gcjk141T0zOYmmPTMWqu2fwwfM2tJ7Xp1C9R8GLiW1zuEk
w8v9Jyj8qFh/slb4NyKvl/F5zoUzKJNmZdlbnPBnVQ9Y+gqg1Tdm3R9nEnnp
C7tybkLohwq6Cb3Pc8T9k9XN4fh51FaUS1HpI6FTtr6sNF9AT/Mrsor4z+FZ
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
esilXvYRfbHPYtk8exdkwsrM9RVjUF39fOM7lbvQzZu0XRjzAVV4ox1R+41Y
L9OdzSK9SFQya7tVrHUXNlQuG9QLRqCc5BsI199d8JL/cqh0Ogzdd3bSJnBk
F6Rp/ua+HghFt1T9Umn+7YKos9Es50AI2pvYeWRqcxe2Vw8Md5CC0QcPkdOZ
VCSM/3OYFIknCP3r5F9tSkvC3FwreY7fCkRbEi6t9+wjYTQ/06vW7f3RG8Ue
IaFMJEwwqffPKJUfWtH8+4LSYRLWI6Oz5R7tg2asOD2oPkbC4nTS+beo36H8
e1uoXpwgYZ+9B4qdmr3QmBPc0VdOkrDBf9NdawlvUD+52p/JgiQs1nyg2N3J
A6XTY3tifJ6EHVYa+/vE0R19+dSUkVOEhJ16JfqLyc0NtYzcJ+X/HwnLP80e
YlH4Gh3N0O+VQ0gY1b5k30uDLqh+TdYzshQJs60dUag57IIqTqtl2MkReSFi
ONsFZ7TjVamViwIJ+0N5GW2T4YTeZeG95K1MwljllPg3sefog6uzhbFaJGzJ
zLN15MMzdLpZ/fkXXRKmdcXILtDYHrUxKpMsMCRhGVNcw6vidqiL19uqRlMS
tm7i0jJ/yAal45xz63xMwmpsa9aOslijPpkaNwatSNhI3qgdH89TNKLzZOOK
AwlLMPE58LPaEuU2f+dL5UzCNv7FPJs+ZYEmbc8p7XtNwvxC6wqORT1Cc05V
dPC8JWE2se7xcXWmqHjRqfdCviTs+OFtfkb7h2jFLW9tsUASlnzHmOWL2AO0
0Vrrr0IECWM/WjFzZeoeqkKHx2pGk7DJgKn7b3uM0a4IvnvGcSSs+XKd4dgf
I5RSuTD2LIWEvRwSr1jfNEDN1bRTXdNJGH1K5sVmGX10bgx/7JtNwqRjtTde
JOii2wd85+OLSRh+5WM15ZM26h6/mJteTsK6nr5zcpTSQhlF79oXVZGwjhi6
zPh5DZRN7/Rm83cS1sj4q3jNQw2NmvMt72omYUcE+L+YmKqivO5Lr4Z/kDD1
2FaRUW0V9MKXKpr1PySMkblFie2hMlqAnvlG/ZeEdVIv92eSlVDJdr+3B4ZI
WID7QkqskiIqt65z4NQkcR5lM0Taz8mjLT7VbednSJiw4qPJ8jI5VJ1bIPi/
BRL278vppEcGsqix7MoRpQ0SJhV66AapVwYd79bt1t4hYU/WZ3dIeddQS8ua
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
dIh+09b99Wo69X+eKLgN
       "]]}, 
     {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
b3RVC+hj/g9XQvkJ
       "]]}, 
     {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVV3c41u8XtvceJWUmZVQ2Gc95jKxUEkJIyKqQSpQkJMn8JklCVpKSkYzy
ochIGfEaIXtn7/l7f3+9133dZ97nnOe9PiL2HiaXqCgoKAyoKSj+/1ttK/J3
Z2eHsJupuj6w9BP5C6kZea/uEH1tYwUr138hlT7TkqnZHaJiiM2MbvEXyr4Y
+qSzn8xrLX09vN6Ioh1n9Aq+7RABNPEfy9mbkcEBxo8Sn8n862OR/OeaEdWI
qGhK4Q7R9LUi8L/kZnTT2XwzPIOc73TA/VH5FmTl9uWD08MdwnOJ5Jjk9htx
S7UL9NzbIYzvPtU7W/YbNUzOhp312SFmbb6Y6LG2Irgqdgm77hAf1GRidgpb
kZjn4z38J8j2cxocyjwkNH3TMvAnG9n+btaJw7s60Wul6zPa9OR8T2qMD93t
RHYr4dalO9sExzA/y8fhTvTbp0Lp9ew2Yewq/SuhrAsV3zk4GdCyTcjs1t7R
uNONrqlrWqzUbxPCTej9lZluJLllVX312zaRQqN80+ZSD3rpH5lsVbhNNNm0
MyWb96LA+0tnFeK2idlbFwveHexDalrsldmRZPt2uzcSrn1okUriiMjDbSIg
hiny1ds+5BxszcDms0307bb1fCLfj4wefvs8akn272KwHjk9gHZFxBx4IUCu
7+4zk6wvQyj/dKCOB+82YeekSSrYPYxOc1130GbdJj5EsgzKXh9Goc9MX01u
bhEy69psiUdG0Mar3QLq3VtE05FPlvWfRlG8I4M6R+sWQUG7fIJZcAwpHFyz
GvqxRXBYmTb8ezCG3HO64sPLtogP1iFRH6zGUV/RS56ehC0iui+2oJ9vEvn5
Rsrn/UeOV6fEPRg+ifao3zN5EEbGLZaBpVRTyKTSLvrw7S0iQFYwmn5xClX/
2M/ib7lFzJpF/x38N42y+95QC/FtERUPxIdTU+eQblqC6AL7FmFcP/GK698c
Grz0WLOGnhxP7vfptyrzaN/klXseK5tExXOTPpff8yhq6egGQdokZF5cqY/Z
vYiki4X5Y39tEgEJnSnVlxdR7W3OYy7fN4kUgrlEt3IRUVEseHMUkf11I6l1
PJfQDaaiebunm8SHBqWlj73LiONnJqdiBBlHddv0aqygd1HPZBgfkO1tF5z9
klbQCI+ve96NTUJY51fXEcdVZCmkPkFpuklE20X9R0+1jpDC1/5ULnL+v+xa
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
       "]]}}, InsetBox[
     TemplateBox[{
      "0.010000000000000002`","0.05`",FractionBox["1", "10"],FractionBox[
       "1", "5"],FractionBox["1", 
        RowBox[{"2", " ", 
          SqrtBox["3"]}]],FractionBox["1", "2"]},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox["\"\[Sigma]=\"", {
                 GrayLevel[0], FontWeight -> Bold, FontSize -> 8, FontFamily -> 
                 "Arial"}, Background -> Automatic, StripOnInput -> False]}, {
              
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #6}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontWeight -> Bold, FontSize -> 8, FontFamily -> 
          "Arial"}, Background -> Automatic, StripOnInput -> False], 
        TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold", ",", "8"}], "}"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"\[Sigma]=\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.75, 0.55}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"\[Mu]\"", TraditionalForm], 
     FormBox["\"Torque\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Epilog->{
     LineBox[
      NCache[{{
         Rational[2, 3], 0}, {
         Rational[2, 3], 1}}, {{0.6666666666666666, 0}, {
        0.6666666666666666, 1}}]]},
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
   PlotLabel->FormBox["\"Normal distribution\"", TraditionalForm],
   PlotRange->{All, All},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
eNiMft0v3PbUGMbqKu7/AKms3JU=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1:eJxN2nk8VO8bP35bZcu+Z60USRRJzDmXlFCSkLTYlyKJsiUJSVSWkKUQoqSE
IllvIcm+b1FkzT6rbPnN5/v7Pt6+88e8Hs+57nPPNdecmTN/jIztdWMHJgYG
BhX63f/yq6XMr/X1dcTwf2/+UpoGXn83rD5kWjyzsOFsm9CYvuENR9nP636s
3vAF5/I8xwcbnvM8H9TEtWGh8CeyzyX+/WdctWo4nW8VtT2O3mkrx8s66PMq
3XjPMrLFLqpK7brAXWE4Gx538i/KuLr9Ka2KQcgzmTJ3/BgN/XEaJtzkeC2e
EZZr+sKKghpdL5/Y32m2/c3cHmV7YxJaGh5NdRma370wyqpWbriAyhklgutu
9e69RFQN9Psxg56x2hswc08p32fvCzxXN4nC0Ljinbhq1STL0UdBy6Oojs1U
c16/89ChroKpLhhGMWoK4dR2M401X05nliv9KOiV8+uGi44EIa1sg1b9fhSg
9HK8OlKjTHmTnlKSQj9ikAws2KxtV2YfeY+iMt+HeMxU5ZhuGZXVv1z2t/Pq
Qwx/JQ93jegSEhonY6qCexHDy4aV/UsRhA9PQrwiHHuRlkEUp6VmIqHRbOf5
C3q9KECC05h/fzJhfchKksTRiyrjtxdaHn5LEHm1xlAx24NSGbmo1yfyCQeu
Ph8Ja+lBWqevGFgkFhEMlA/Xns2nW7hg9UctIjhSu7NkYnpQQFkS+mhcQwgo
8Xg069GDGDRullg9aSA8u8vnWmzWg4bSQifDGNsJBcfyjO6r09crvle+3NVD
aGIzVDkjRt8vzJzt+8FfhPHmaUGJ1W4UMG55rvP5KIEhNuzv5GA3qowte9Aq
P00QO7/7RwGi10mH9cS7iQRVya/lAWndiKFr7jDBfpFgOGKbanCvG2l9azFP
yv5HuJLFcE/EgX68U5mrxRYWLOhaisPocXpdykm9Q4Ude36AoJcn142so0J4
qMK8WMFi3x4/dvr6Z9f26x4VwprLvLfqzXQhrWcivUGr4thkoOACf3MXkrbl
t4zt2o4x6X5s/5VLr2/S43niLoeJc54pfPuE7l3j6fvylDC1trl475tdKOCW
rjx7kCpmFPfY9+hZej0gz/nUPQ3M6eIeC+5DXahyuffoOckjWJB0HfwQ6UJD
1qwefnzHsaQxh+2vlztRZV+/9RcXA+xTNvOmmwOdSHqg0z1A1xhrvZ42gVd0
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
9fP3hQ==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1:eJwUl3c8Vf8fx69rhJaIJAlFkUoqfOOc9yFFIrJlK4UiWZGUrJQ9QwghZO99
zJKdJBlZ15a95+/8/rqP5+P1er/e78/nfO69n8Nj/ETFhEwikeJoSKT/f9bp
8/Tv7u7iglVnb1ZFiki8PCGhYL+2i89ZDGl6m1yWEB9QK56e28X1wnd49+qK
SqQaeQX/GdzF/5twOkPXd1Ui4P6sbG7NLv7d60rLZf1rEnfNy7MevNnFHfS3
k7/vV5OYsdN2bT6wiy8UvVFjO20nweYbyPfh+A5+8aPWusf+Agn0cvVgPPMW
Lrm1h7o5SFKyzyEpXkVwA6cf21k5b/267HKIas5v3g08luZyr1GnWZlPJqla
9xjBMS+0ux+aSEqO3h18sG8DNxVp7Hn4wL0sUvUgt9PMOo51K3tSxZuVaZx3
iP6Us467eOA+4/7mZS3DN8OXrq7jhvPkL9ofwiT5d1c+O15ax0kneufXc4wk
nTkSCnfOEv5fjyPO3/aUFLqz00l/nMhrVkV/PQiUfFeRw3p8dw0n+XTFi4cG
Sd6IOBZ8vYZgf1VPoe0oyZi8+viG0jXchc7v5XPuFMnlVrscpbw1vPJOvTWz
RJxkAl3bD+1EggNN1wZ6EyXJtu5Mlm8IFkw2eueaJnnX/yL34iuivu149Pxu
mmR26t8LDg6EPvSmiYY1T9JwUFzJ1Yxg5VKGfKUiyYrb/3zDbhH9UWZ+i+Jy
yfVHT5Ucr63hGBNFo/lfmeTlt8tMuhKEvnJJRMq6UjK1ZjuY5yxRL5f7LJ6n
VnJk4LU6zUmCV1uSzKq+SnLv0B4Z4yD6409wPr9vkqHiByLTGAk+E+qYs9Qo
yWjDdtx6YxWv/OR7IepYm6RLOles2CTBrSL3IrZ/SK6M8Z/c/rOKu4RINaQY
/JJ8zHshqfr7Ko5NbeVo03ZJDumKCXgVr+IkgceN9mW9klrvIU0xhdBPDRRV
ug1ItvyQvcASQfDv6JaS5mHJa/uUc7q8CBb8lDGrMir5UqDDptSF6PdyLco0
dlyy6IbWlRgHgv3Skhw0JyUX7/WuuFgRfg/jrvGqacnzrw2L7pkS8zzKlp6R
mZE0i6E43jBcxQemKrc2X8xJJpSaSghoEfzAQhbPmJfkWLGqmJEl5qtJPnKz
YElSnWX51Q8gOJmUPyO9Ihkg7CiVJ/b//s7itm2rko2K2+T3FwjOIs1y/lmX
pHv0utbxNNHvS93a/e+bklJetJ66J4h5rpcbjLdtS75IfCsLR4g8g2A758Mk
pKB6PwPvQaJe5Oiahy4VMt8f2ECzZxU3bJRu31NCRoS2WX2IrwJeiYZlRQrR
IA84IhUbVlZwklPXsloJLRInxnUwfWYFx/gEptSl9yC9avFt/qME+38oLb7M
gByx5g+y/ksw3u/3bIURUfFPVVXvJPIaCtP79uxHfNPOs4q3ELpqYSWLxEGk
/ntOJ8fXFdzlepvSryYmhHpMNHy7fAXnfnJJNfcYM4LSlGoP5BP6Psm4ElcW
xIEHjtWkE8w5nm1MYkVy0ZrexESCq2x9il3ZkBkd2RivaIJTD3Tfk2ZHzjg2
GjwKJfpxKzn17+dAYnJ/Dgl7EHz3u1kEDxfyp00zgcV5BTd0v+LKdJ4bOTzT
Y7JiS9TLbzvPmvAgSnsNT/95TKxfgL9SO58XeXeGMl56fwUfGNB/84zrFFJ3
3TQ1RpfIG0lcbYjmQ0j3ph+9ViN4LfZ7zZXTiF300swNGWL9e+Vk97YIIvxv
vZXzJIk8NSGOO6lCSKctbw7PFaKf1ST14djzyBvDYhb/c4TfxyPPS18YEVdQ
ttviW8Fjn5cYJ726iIyLjXWacRF+raK63/kiSMTJl+K/2Qi/d3WMwNYlZGPj
y2b2HiL/0xWB462iyJdRab0TJMK/aPAv3lAc0W3/U+Gztoxj7gWiMfuuIvsq
rLg35pbxyhE/tic/JZDylD2uDycItrr78Uw+gliGxgx3DC7jLisNF36WAcL1
+sp16e5lnCQ1zJG5gCEuWvfojzcu44ZW8jL7VK4hF2U2zN7VELpy8/sDsTLI
0IXAxtVSov7ka7UKmhtI0LEz50zyiHy8sULxtSxybQ/u155G+Bf8q1TYbyJL
C+pzkEjwcy27yHp5JOHv9J30aGLelIQK31AFhK6Ag9XLj6jP/h6beF0ZKYzL
tl/2JJhXjZSrewcx9ZXrMn61jMeKcFzU91RB2B37/2t7towPDFtpiNWoIt/v
239ArIh5FrvrdQ6rI8+V92+nmhL9bjxRSXLSQAQlE/TZjQieV6z33tBEfFja
eRbvEMy73yL+ug6C7Jq6GcoT/cxg+hGLHjIzuUtpliZ4z++PziQDJKYz7IaE
BDGvLu+mv6cholR9Ljn5EsEv9c9oRxshpIxaBjah/+9fzeKnr8ZIVoTOI7dT
xHwlqQfVqe8jzE/fntdnJfICVaMsSh4gNbrcAY37CXb5SFcpZorYyhXOi9MR
PMtfTttihpy6fFs1aWcJr1xRrqt1foT8OjGSx7K6hJPqvpGcb1ognntfsL2e
JVjBgm/h4hNEdJXZYWZsCR9oPbNzNtoKCW/BJL53EWzIJrDw2xq5WfI7SvQH
4RdiGm1lskU2Ei13Pn0n9BM3T7/Ts0NSA2kND1Uv4bFfVi31cHtExzmq6mUJ
0Z/3S+JnMQdkn9mlk9M5Szh2y3TI8psjUqbW4K79heBrNrU9Vk4Il9Ca7OUo
guc1KnhYXyGtR/xT4kKIfo43v3e+dUFcqPn3HvQluH/12L6I14jwbNnjFx5E
fsEii32xKzLYrdoy4byEG/qo2SRNuSFBXycvaNoT+ub91QMXPRDpnNeBtZYE
z2bb9L7zRBLeZqp9NCDyPthbiLu8RcSfHTc11yTYRNzzhrQ30nTf2+mKEuFP
1mQt5/VFDFXW/UiyBPuGTL056Y8swcP4RpRYr8f6/MNPAYjXuV/5YaJLOLfJ
w1GVb4EI57Fr343OE/rmcZP2nSBEZoVrbvU4kf8cM4tKD0W6hn2oa1gJ/qTD
WHb6PfL4xwab337Cf+ehPE1pOELCTQW1aYn9kC5z22sWiYSkdSKnthfxyo9r
/CGXopAzkTJ3ZpcWcZcXPbIOnDFI2Zuc+yXTi3isauLdTuZYZMTYz1u5dxHH
xH45tSrHE+d5K+ZYB+Fv+Fhv4vMJOYCa54w2En6hDovC3gQk/mxXXXbNIm4Y
oCN/4loSInr0xp8XpYS+5ee1VfkZaaDLm5bNJThgp61JMwXRX+IhsXwh5rE9
qXKW4Qvi2brNnxK5iJMebiyaVGcgHOWPrtoGEf2pSr5tPchCMlL/KMI7It/H
vhB3zkakw2WNGF2JeTK4pIKScpBOj3zbX46L+EDBhSG/oVzE3OakV+xToj5s
RW5BJB/ZMQz88MiM8L9JGCdFFCD8khbVVNqEv+Tl8/QvxUiJQM+vJmVinlDq
j5hOKXL7yM2J93IE65QG2fKXI0M0hVvGGMEvWmOpD+KI/cIppvPiRF7Zt5N6
3pUI40DQyfULxPxGHfnfPlYhMc0ksdrThG6AStfVVSPfknv17h4h6j+nPJ+Q
r0N0w+Sf8h1cxLlXj+21TPuKzLkVuc/R/X8/YsblT9Uj7k/5w0t3FnCX5FC9
7tzvCLtByBfPlQWcRDrzLUi3EUlTION3ZgjOyNak4m5GsKtW7ZyjBOscVa7e
bUFMWRXWc34t4IaV3x8m+f5Atsgl+142L+CVnLT4o/R2JGDuNPfNOiL/tCb7
yf6fyKm/oZcOlxO6ffLk4MlfSFEjtWx/HlGvPne3+UUnolD89G5q2gLObbcb
wj31GxlI6rewSyD8jIu7PFZ/EHrX0pC9IYQ/NDQLr+lFop4IJHd6E/k2E0pq
oX8RYb33pXFuhH7tUcdXqQGkVp629bETMW/sGAeT3CCiJW4zJGZD5B/73WCh
P4RM8w0ukx8RurWz4S+PYcSFRYmhxZjI2/TllMcpSMqMoPB9FYIl7qdkPR5D
XB9Ih6jLL+AYh8LQXM84ovtXe+2GNDHfglXoQaNJ5ECLV6WACJF/2+4nfc4/
ZOx67KljgoTfdishzmUWqSwv9NrHu4DHNgt/vpU/h1injyrPHiL6v7ZUdGpc
QG7x7eQNMBCcViF0f2YRORXNerSdiqgfyNC7z7uMdPrIDObNz+OVF/lyoqtW
kUwa3etJE/M4d7/R8cXz64jXC5uU94PzuIvl16aI7A3k6uP4p89/EHp6niW+
uY2wUIp/Pfo+j5NOUSd11+0i0zo//tOrIvLeSFtK/SKhMbdIZCx7Ho/9sTJe
RSGjz2qOPLiYMo8bhuc5e1PToMoSFxp444j63zO9nSK0KPVZ/SDaQEKPeKOc
/nUP2htvt7LiNY9jN5SXr5xjQAs4fO+OuxAs/JUXSWZETRnLeButiH5XB/L0
B/ajUq4/PctMiX4ec2PTHw+iHBuTk+mGBMemKz0tY0KbJo7mBigT/RoTl9Qr
mNFEo4tHXOWIfiasyVK/WNCXf+ScbDBCT65dGNk8jAp/f3ZNQ/j/67vz8YfT
EZRByv+z7Bmi38x60UInOzpUlLT3P+55fOCMh83r6xxoaPKvn8eYCF04fFXA
6Dhqyf1PbD89sX89K4FeTCdQuXCaqJ3dOdywm3959hE3uvHm0v3B2Tk89vrG
zm9tXvTnrnx9+9gcjk141T0zOYmmPTMWqu2fwwfM2tJ7Xp1C9R8GLiW1zuEk
w8v9Jyj8qFh/slb4NyKvl/F5zoUzKJNmZdlbnPBnVQ9Y+gqg1Tdm3R9nEnnp
C7tybkLohwq6Cb3Pc8T9k9XN4fh51FaUS1HpI6FTtr6sNF9AT/Mrsor4z+FZ
OVdVb5deREkx9x1PviF0ftnehCIRtJv1Rd/hV0S+5VBNcs0l1If2S+KqJTH/
m4WlSFpR1MS5mmHiATHPvne+h1AxFF3+Y9GtT9Sr6h+XfSOOzlHoRctvE/V1
YRVPlCRQOHvp6n+yczj3Zen1ynxJ1O+pHpoPhL86K7X9HIoK7WTfSBeew9sU
Cl6qfMFQJ5leeQEBwv/6y+9Idym04R2dUiIP4a94NxFsKo2aHtHRjGYm9ufK
44oEFRm0UM9D5+hewl+cUvVD+zpKl5BpEEpN9A884NZtcQOVM6Jv45iYxQdi
NQ3mK+TQ0X+6Xczds3jstL28/PZN1P159gBj4yxxn1+8yHrrFooH353fSJvF
XXxaNKeO3EZ1uTPXF6JncZKnTp1LuBK6kUZNnvKbxecuXYltCVVGRb+mMfdY
EXlJnatPb6igHSpUx34azeIBL82Cn55XRa371U82qhD5r1UF3/GooRlrO5dK
LxN5wXL32c5qoAoeqpK5fLPEfn5Lj5XWRCcPJct8YSP85mMVTx9qofxn76h/
WJvBK8/PcOj03EVrCxP1gidmcO5eWcaKs7qoscyGiXf3DB5bMBC27a2Hxuh9
sncqm8Hbwuh/vwBDVHJy9aVN+gyelei/E8NghHbbK7x5FDODY5f8fcX6jFC2
gOX3Oi4zeIAIZ6lb/D00j1M+VvXpDD5wRfTEidD7qEpKTPItY8Jf9vIPKdgE
9auWLZaQIfSiEORjzkNUSCmq6tKVGZz0qL7K4pcp2tAz9/0s/wzucqekOonW
HKVbjug+Rk/Uo19XywMeowmvZ4ZY1v/hWPytm/3TFqj0gWtTeyf/4aSI713z
Wk9Q59PTm5uN/3BheZ9D/Refohx5GM1S2T98oOPjzQ0qa7QIC903nU7oqTm8
3j3W6JI2erzXn6hn1HpdmGaLBo0G8XW4/MMDahh2RBLtUGGbsXNNT4l+94fv
UZLt0cc+AWiZ6j+c+yryoO+nA8p4dORGngyhq5ScFtpyRJMT/1NKu/KPuA/9
fI1fdEIpFUMGUUf+4YZy+5/tfnVGXW+JmYbQ/8NjaXNaBk6/Qrm7vK181qfx
NjlFTXEFF1R3/vLrFz3TONPJZcWkX6/Rytdi/y40TuPKfFwiscWuKB/zVe3h
kmncxXCm0CPZDZ0RgYvykdN4lqrpc/YUD1S1Rip6++00bmUQfrmz1BMtUpVh
yHYk/E5HqOJ63qCvbW8OHtGexmPH6X5UybxDR2kUFBvlpnFu+0fqd/29UfnQ
28UvxQn/8xh7jwkf9HCBauDIEYJ3ew4+bPVHHW5obIfvmcYr7/y7pZgRgPZ1
apkprE7hlQL3y8+9DESTVvWkcjun8Nj+tUgLiWCU0csw/cHXKTxg9tu3dIEQ
9An7vaMcBVM4t/Wblyu8oaj4f6bzLqFTuMvB0vfh4u/R6O/mepc9pnCMvPZ5
Qz0cJd+1+D5mO4UPmNfSPXOJQBufW8fdViPyj4ZbHNj9gArvtdtPliF0d+ST
oVo0GvLhmWP+JUI3cN+UKI5B9cte3OFkIfrfvO7M2x2LViu8Km8lT+HCXiMz
s4lx6Om+1wJuC5O4i3uUzezzeHRu25Nq8sckbsU8vp9TOgFV83trEV01iQ8o
+p04cSURLeby+aOcPYkbSo14ky4loa4QmF0YMImTZoZEJe4ko2OtwccfuUzi
ba163/ysU1AFw7C3XFaTOOa9mJUfm4qyvv5g5KFE5KWvxqXypaPPD8U0i8Mk
8T60shPlnIH+jYv9b/o8Mc+Zr9++UDLR5OrEQ6oHJvGAo9Tiak+z0as0WVXc
zRN4pXZR9OeuPPRjSM65jrIJnGSXUBfWkI/S8OVHvEkjePymwMrXArT5esnT
Ge8JPCuk16t8oAgV6Szri3OawNteu+zu3S1Gwx7gN9UfTeCxZrcX3wuUooZv
annK5CfwASapwQeJ5WjtkW++T64S/VQYxPNXK1CB5O/rvIITuEvzx/1CQpXo
Qn3Lj7cMEziTI4+v3acq1IPxz2vN+nGcKYw5R3O5Fu0UozrPXTyOk/68vOrV
Vofymwh0j6eM49y//BfF8r6iX3FHkefe47jLkQlW9bB6lO1f3F/pF+N4rEWk
gVnod/QhR8O7vRbjuHLw+a/yMQ0ovR3HcNTtcdwqyMdjqKUJ1YqX9jeBcXxO
dUxfc7UZTW41lzgvPI63+cd7sp1tRW8Klgbjh8ZxbChTm7GnDX3XryMz1DGG
K9N2+HDl/kS797nPpdYRTBaQ8n3egZ69mhZlUzCGD+jYJz29+QttCtlaogkf
w7ET/tYpO50oZ/WpuGavMZz7UK3i25Hf6ONZBcUwxzG8zax9eLWjC90vH514
WmcMjz3yqTi3pRvVf1Z3Z+4Wkb/HSD/2Tw+akfBvu0hyDA+QfJl2d6YXvb2L
aMhzjeGGYksFwaL9aEDeXzqLwVG8LfLEQw7+IXRgkC73SvsobkXDwdj8ewi9
ePCCwU71KHHfE0sZ8x9G281eFfonjOJMB0ZPXTo8gvK+/3xPK3QUN/x81Pb3
wAhqXdt6kMeT8P/hKW/IG0VZTnCb5jwcxQMot7gibMbR+wpyh520RnFsJ9Bm
RX8CzXO0qrx2k6hfqdL8rDKJqnVUsv8SJPKbvnlxqU2jYW+Nvq/+G8Er++Si
Gu/NoaMFb+0q/47gWdev9/XszKFilGyet60jeDiLSKnix3m0CyU/58gewYVf
ndvLML+AnnksyD8cN4IHCGXzZcYvog4RKu1fgoj6D75gdXcJPboUL4jYjuBM
z0TW9/Yto+Y8jZ20JkT9UI/L7eQVtOT2omuL+gjOrZY66fR8Fb2bcq3HQGwE
b7s3SO9weR2N0qd4u25Q8MrBC+Z2tNuofazBn/dTFBz7Nr4gxrCD3hnq5k/v
peBMnFr9Dqy7KN2DH1W/Kwj/VigNJJBg4LPCwX+ZFFz8DJvliBgVlE580yXH
UfDkBzSpqm1UYGVRsSrkRuin84I4mKhBPvO/69K2FNw0pv8KXkgNfPN5QZom
FHx8D1dCzX0a6Lb9cs5VloJbeby75N9KC9dehN/7vZeCz10MnhuZpgeuCpbs
6a1hPPZ9W7BoLQOs7frtUM0M40xwiupWPCOkuXlECLUN49yJnmQvm33gWUca
k6oaxueC2MXZH+4Hoz0vLmvmDOPKa4ZvJYwPAJu3devrkGFcuInqxz5xJphr
+sf53mMYF2exeP2pigkaD5iZp9kP48l7tw3tlQ6BS5AB7W+tYdxK9JfhLQdm
mIxQkBA6Poxn5QYPipNZobbnm5fUAaK+7tgTkWxW+Hj8WqfG7hDu0DJw29qE
DdTi/nv6enAIP6MUeuzu3yNQnsz/uTNxCOemvd7DxHYMwifjlqbChnAr9YIR
58VjYC10XJrKawjH6Dt+2vzmBP4slr6z5kN4JZOGVUYuFwQUklhenx/C63P/
i79mxAPm606GYSeG8LYj759nTPPAdYnV9C9MQ3gXE/NR7he8sFHxT65zYRAn
TT/66vb5JNz/2v3ybOEgnqyu4nP/Ej+g9BpNWPIgPiC6yHN0iB+Oyv84qhEx
iHuhmlAeehpamr/luTgN4kVvyFzq+wRA7Ffe5C8YxMXXj0xZXxWCLo6/H5Iu
EH5b0bGjp8/Bc8M9is9ODOJMMR3G3RznoWxKO5N9dwA3pIxRi+4TBoy8a6NT
QfD1q3GF4iIwKHuGTyhjAOd237cg0SICrr53OreiB3Cv2R1NbtNLUMueIB7j
PICbsgZ8fplyGW5euLk9IDmA00+a9U2aiMGkrXVGthCRl1xPU8cjDt4lHwxc
OQfwcI5fJzeHxOGDd6+b7Fo/Hl6x15HO/iokFPHvb7bvxwPKB58HDiEwes3x
iaVGP26VLX0PbUbhTGvjj4Oi/Th3yj21pxUA6SNWYSrLf/Gi1OBUz24MCphL
T3TZ/MXpW1LMKZvSsBa939VR9S9eOfwtP9H3GlwVMKRwXCJYP5lD+6QM4ECb
orfQh8sZMvCs3L0O9Y+VRIat+vCu9get1duywLgWF+Ku3IfThxbYNGbLgYLb
0gqfcB+utV5gFGR+E35ERJSazvbiWp/WXjdMykP312GZGYtefNww9cU+gdvA
qSL62V+xFxdvG40SolMC/T4vhovnenHl7/iD1XElGF4812Iz3YOnJQdl0g0o
wzS3g+a6eQ9OqpCNnOlRgfNpDcWR8j3EffNZ4JqxKliJHeeUFOzB1U7Rphr8
U4UlxeqBlxPduJXw62y/feqw/XyfOY1pN24qtSDqZq8JbFiqQtvNbnzNYJPX
8qAWCNPKXYg6241zY56Pm75owX1/t6VLs39wrdXlfP5ZbWj4tPHynv0f4v2/
QeC/eF2gmIYbXdD6g2e1m+gkaOnBzjlRmc3//uBnLOIDmFj04WLRU4bg7S7c
YWYlWizEAMKbxoOr3bvwudPnJ2bvG0FOoKe934MunLOhx1b8hxE0aZzSvivX
hXe5iT5rA2PYHTDgWthL1Bd9/c1+6h48WO5M5gn+jXccy5IVZzSBy1x15S5x
nXhTwjN+Xw0zuD1sHKvg1olPlx633J02A9Nkkhu7SSfuk7Se5+BpDh9EJOWy
znTiLuSPUznVj4Asm9ven/kLnzO4Y5JlZAmc++7kfwn8hUumc7HXHnoCoj9m
3j+z+YWHd9QUyNY9ATMdQb2DYr/wtODFEfMPVtD2JG4MrejAwwsuyzXyWsPk
ZWhgjO3A3aFpQeutNdBs9KZ1vu7ASWOOlr/nrUHMnd3a8noHrmbzMaC23gZi
wv23opt+4gHx5dKX/O3gUZXzoe3udvwMPVeKmIcjMPs9K4WSdjyv0iiPmeM5
lNx9auIa0Y5X0tePN2Q/B/ql+8V7tNrxuWXxqe0JJ0jgVzBi/vUDv98sUxr7
8iXcWry+Vz3vB850xbM37OwrWMAh/33wD1x4H8Pz6p5XgGlfYjiu8gPfZ/9z
ZDHeBXq9ObJPt7bh9r91eTR5XMFN67COeUYbHh6o8uGmhysI8h2gTfdtw4OK
Eg1pp1zBoYJKW0SBYNqagrlSNxAc+kH1PKgVNw8OSABbD4hKs4xL8GzGExQW
Zblk3sLkdeNlgevNeNDIvsrX396CeL/6zUxqQn90S+6Q4jv4dQiZL3Zpwrlw
t51mfW848GyvVOvzRtz4BdO+p9G+oMu0G6L2XyN+4Hr7zJiIH6SmLIz/WW3A
SReC+Csa/EC2908AxbYB51U6d+UHKQBcpJIH1i2/4zPqFrmvbgRCS/eHy6/O
fcdd+h+SWT4EAqetvxfNdD2uIhf/d3YuEIqT7IUPmtXjNxxKLgbHBsHC3usu
p+59w9PuXKjtPhgC9zoHTyhp1uFdPMvNyMX30F3Fs053pA5nnvV4uhzxHpTT
jdorOmvxbt+N7WM04SDpPuh+XqMW5zr8MqGqNxzYRAYn9qvX4JN36kSrPkZC
g+9AbpNKFb4k+9OO9UkMYI7cvu7MVfi7i2gj21wMFN43fCDZXonnjQ8F5Fl/
hASJAfa0O5V4tMkhFlM0Fjba8U22uAp88O/taFOVODB8V+EfElWCP1E2/Hv0
0ydQNEKlaThLcDZ6fnn2+U9wVbxiyeZDMf6we2tgDRLg8Gi5tmpkEd4gm8lg
MpAA36TKTzKHF+BrV33T9gglwfn10kL/4Bw8q4U68u5sMqy0WuOsrIn4ZPPF
Ek2hTPBRaOK/yZeAn8YHfnAGZgLPdz6/F1c+4Rp+tp/KVzJBobpLd1g9Dr9r
Fbl90zgLpM2cl4zOfcCxgfCw21eyQdhEsEPYyAtfMJydvTCXA2VXS1M36gNh
P9Nx1rbiAgiUou8NTg6Gsyqvc7g3CuCBnPr+c16hICKq1DhwtRAOacw+MZCN
ABUWBurM8kLILQrkGDKOhSMr44dc6ouAvqOu/8bgZ/ggoyz5Y6EEtGmPXKF/
kgvNZeXa0eE4dJ3ZuMcynwtflybPHP2Hg5ZCXxCXTR7UO5e57+GpBK3gT3OX
n+XDLWMGr1x7gnmE04xeFQKDBfeBvlNVoIHcPFnqXwqzQ08y//OphpSScnqx
rioISxqT3HSvg8SF2ZWJte8QxbKp3s7YBAVMjb6RVxqgp7oo9DjaBF/PJ526
Zd0A0VR+hu+eNsG4ua5K2lQDpLrGI9+6mkBouD7d8m8jeN3ziKpNboa8n3H3
F2uawTxigdr1disYdwuYvfzWBmGGl26paf6Ap6U9nW+COuDwyzivp7874Eok
0jPe0Asufw+z8Sb2QtRaMufFqV6wD1S58rSmF8iah/Ud9/bBR+Hw7MLBXmhj
mRpgUOiDv2rrdgJcffDYN3xUsLkPwqathsPC+iDBZXH+cetfKD776eYtj7/w
LlfNfc1sAJrrHcLzzg5AhTFjIufzASgZcwxZ+W8A5g9V1mHvBiCk8vXoObkB
0LI6u+dt6gAU2PUFOd0fAP5z5HdHpwYgmf33Pp+oAahOyvS/+ngQHjeqzd5g
HIT1CMYPLyyH4H2v3FO+7kHA0iKdvJ2HIODSwlj+yCB4VQjqRvoMwcRBme3L
84PAPix/vCh1CDaf3Bzd3jMEYkLeHxdHh6BZ1aY65/IQ2FXsTTA3GIai1Buq
D98NQVnbB3dHy2GwHu1mxkOGgGb4rImX8zBwvQ0pIX0cgpA9CvxJH4ZhSL7N
Fcsdglxln+TB38OQOX/7REr3EMwP7UvXUqZAkpmRZeepYRBfjvJ9aEABmn0B
mknnhsFlzzlLe0sKXJl22bgrOgxMQooXQnwoMG9Cw/ZUdhgu2Plmt9ZTIFDy
urCs6TDYvzke9Pc3BVqzbtpfshqGioh063+jFLhb0VdJ5TAMtyuaL+2lHQGT
E59pr70ZBos9BwpuSI2AiqBu/u2EYcg7GhOmrjwCotFxXlJfhmHr7Pln9w1G
4L/tk/EsOcPgo3xb3NV5BBTF2OXU8GH4EuFXUl48Ahom0rVI1zAsfOH60FQ/
Audf0J/n+TsMVysynHp+jwCvvDv34PAwNAy1SK4vj8DdUPtryzPDMHH2IH5Z
ZBRKXGUYTKgpYH51XsJLehS+dHZUvaGnwLTcz6IelVHoocsOc95PgRmT9zmu
NqOQl8wxOsBGgSe2jhc63UaBg8n1neIxCsy56qQJhIyCVN9WjPcJCix8PJHU
ljcK9kpsNs9PU8Amg+rkqbpRcD9BMhY8S4GlsuGPz36NguH45xOp5ylg11jH
2TgyCk1o4fX1ixRY+fM5gmtlFO76F1keuUKBZ+Nv2azpxuCAHY8ojTgF1lYe
BdexjcGH43ri+FUKONLeZjp6egwWizuZ5RAKbLAI+z4WI/wb1PdjgAJOvMyM
lbJjgAc9aaySosCW8JIni9YYKDbVTGRfo4AzdFI/NB2DL+y/DC2vU2BHscil
xGEM1jLTfq7coMAr3cjt/W/HYK9I8Ki8HAVIj148N4oYg7Zbx8D8JgVeO+qv
5qWMAa2BkLuaPAXIXpgtfckYsJ3dr89wiwJuYbzzOg1j0GBnae9FME0ijWVm
9xjI5dg5/CDYI3d0kjw1BgKJ35goBNNV1z/U2BwDQZrgfzjBb9pSKSl7x4GZ
6UPFfYLp+32Mto+Ng9lp6SvtRL93/yz/KguNg7tyCA09wXu3lHUSJMfhRfGd
QVpiPh/GS12rCuMQJbT+ulGWAgeOsqrf0huH2mftMVrE+vxPr/6IsRgHxbq1
+TQZCjCJ/rm94DwOK5T7YvXSxDmXKW287jcOym6rQqkYBZhVo+UiYsZB6LZb
kApKgWCjV3XTGeMQTvNboEqCAoetjKQxfBzqrb4VLBPPK/TlNTy4dRz85f/b
nSWeJ5svn+RY/zjgpLONmSIUYE+duOJHmoA3itLsr4jzEVHUmDPINAEPpyUu
+xHnh+Nb+oUrPBNgec2KwfgkBTgpTwV6pSYgl47lvCYHBaIXVJMuqEyAgEOU
oAMrBbioRE+6GU+A+oPkq3pMFODm2uAUdJsAG5MJBhtaCsQJ9UY4B0/AUt+H
t592h4FXooLtx6cJUDnWG/1+fRhOabkyOdROwCehHu6G6WFIfHDft7FjAiK5
X9+nHx0GfrsbjCdGJqCQN2iUoX8YzgQx0nylnYTN8X+PNdqG4VxT0CqL7CRM
93V5H84ahmpE6bKKxiT4NFWmkpKHQStz79MAk0mw7a9IL/w4DK5B7pP73Cdh
SfC0o6ffMHRp2ffRVk1Cizh2J9mM+L1oEOGQaZuEZ1fl0qeJ30Gy5KyGa/8k
qKo81t5SJ/qdMG3b2Z6EWO1W8kspIm9Eu2b16hTwN9fg+9mGgV2TjSQqP0Xs
j09OJuMwpNe3S9pqT4HB9+8Lx3eHoOvLrYK5Z1MgvFeZznBsCM5ZIykTeVMQ
qDCR9Cqf0He4/XvOT8PNOYtBPbkhsLDqazyKTkPE0bVXff8NAXkogl5LcRoO
9/07de4sUV/H7NrxaBrWb1+rQvYPgas3jV1z8jR4sWu8ONc6COfYx+/ivP+A
4sy1L1x+EFwvZvJ/YpuB2K5evkDeAfD1Y68O4ZuBe9IPPMQPDkD41Gs9z8sz
wNtvZPVytR8yE9VCzFRm4IRIicmf5H7oPbpBJew3A4wLmocz6PtBlHy9r4x2
FoQ/t3U3lvfBVHt3cOfSLLy0ZBNhpesBwatuJI+JOXDv+jZTrvYLmkYNOWPn
56A75iEtevIXWAaj4qXrcxBmkkxqnu+A3On1J/MM80CnmZZ43L8DJD9a9esJ
zsNW1tf9uQ0/4TaNfoXoo3moRKf2zd5oB5sW8Rfj0/Owkt2Z0FvcAmxObOHU
y/Pg8pnuMcWgBYpOL+Vybc9D7OP2/bp0LbDlkjmltn8BThXfaY1XawbPS/w6
VecWoHo/p3/NSiOEh7NcjbRcgH7K2vgfle9QZjyzemtuAZ6/tTMxta2FcazY
pnd1AUJLv7NoCNcC6wn32ce7CyBrEvWtYboGLHuOjvkeWAQtxlDjWw9rgFvt
emer0CLoOb2KLzCuBrfrUXmqZovwdKJo0cOmErJOPhSmWC1C+D7jQ4fFK6GX
SiTN1mERhB4dCdTdwOFyxbdPoW8W4TZtud8BZhxGRReDficuAj6vVP3+djnI
n5F/qjO0CJQQWfajW8VgT8f6b2piETTSswrSworhE6Xf9MX8IiTNIllqIsWw
FWtnGE1agiIS16H+x0WQfjROqZ9rCWjO7CTUzxQA0961c/d0luDMQHUsH18e
SE5UpywaL0HAvNbPiLZcMPvmy+duvgSj5nqnWJxzodrt5PFExyXgCDHfz/Qn
B2y3bu8be78Eko1ns/dHZ8Pvf4mT5h1L4BmlsPDlcwZwN0TkRfcuQdrDDNSa
OQPMk3xftlGWoNNF7daDV+mwpW/HLLq8BBuJV158NUgD7jaZq1Rsy8CkTILp
/1LBLE2c5jLXMii8y1hNzE+BHC+hlgf8y7BiNtBtdikFZKQOGzeJLkOgPo/n
9uVkMM0ZfvtecxluLwYptSklQbbfb9UGg2XY6Y120+xJhA3zxuPbD5fhCM9O
d7VpIviczM02dliGNvGzT0XeJkB2iOufcxHLEPRxz+ep/njYsOcRqO1eBrfA
+qq/lR/hmirr4srQMtx6YxHYdvAj+FxgKBeYWgYHrn9bU0YxwDU+p+y/uQwL
byJ+PzsYDdLalQ53OVegxGlksNkvEryv5En7nloBa62hryvLEdBxKHlfpdAK
nPVmvrBhEAEPGvxj+ZAVcBK/72omGQ7eEgb1c3or0Ptg+VQPaxh0HFENOvlg
BbBwzt76oFDgWrqhq2G5AhvytmwyzKGQlXZ+rvTlCqDv+uzK2UOg4/jOkTcf
V+Dd11thhdJBwEmKfnh8cAXytZyZcmn9gFtlbEBgYgXwf3rsbAq+cCrh4l3R
+RXIku7LUg7zASG5rwpKVKtAatNC94t6g2TA7MXXPKvgZ7dqPhfrBdjQf198
BVbBZ/5xnA6NF8hcdj8VeXEVMrTjnE4+egMKXexHcqVWYaPtg42ftCfocUtv
UYxW4ccFHzM44g7G1j5282arUGnbmrwV7AYPajtntp+uQnl9uEQiixtYmj4a
ZHNdhXf5p1Jcj7nCy6yQr3Lxq2CQnh25e8sFXMn9oJ66CrGHryfdLn8FnmoC
xUY5qzCZlns+aewl+K2Vf3levQpbUfdv7LvlDDHYWEDa0Cp0F30KOy7/HOKD
LjIWT67Cfiobv8OhjpBEcXKrW1gF5r0b2toUB8jwYrL/S16DtYzN63b+z6Ci
7T8dppNrkM+4ty2R1Q6qed07OM+uQUd4in+Riy18tW1RFLi0BkzCO4PWszbQ
wn4Pk762Brb/rk8H/LaGv4Y+fLb31kDr0739D9qsYCinM8bl0RrUthgXJmlY
wSgND7uvzRro/RmjXcOfwExyPmOSG+G3LGKXWrWAnbm/s78/rQGj5QvWvanm
QL4mYEb5sgZ9n+vKrlLMgC7UZmgudw3UP9vqBJ00gwP/0f9iqF2DCXHZC9ey
H8KJ1xdLJChrYFy0dM2H1gQyaMyCy6fWYG5vfJut1X2Q9Ip9DItr8Cr7M93R
/nug5X/wxDXyOiQhg+ZS34whIPqfmzz3OpA2Fa4PVhoCFw+fXtPpdRBy8cuw
kTWEtARd0dsX1qHmhvx++XgD+P6lcfwOug6SIkcc/+vRA3JJiqK27jq8vaHk
tRZ4FwKQQf6ee+vwrkXUC5q1gauKnaT3aB3KTSvOFezXBon6NzmGz9cB0RIS
L4zWBNtOkyOm4evw7PAkd+OKGpDvRs9NfFyH+EudPxS11CCgr+P7o8/rMBcm
NsteoQpplGsvnhSsg/IVyxcnwlRgZIFn0L5jHTiep34VslMGW3vtkrWedSg+
dKlBZ1oJyBsBwc+H1+F1gSX9g+XbxH2HdOPlwjok2ylRDR5TBI2Df1M9mDaA
fygfa8i/CZQgVvc97Bvg7rjOZDAlB9ZsinpvT2wAqfemTxa/HPgfLzvoe34D
svlmHi2l34D6s5G2IQobgLqciTq6eQ00Mn8osqltwJkHQu8/370GFBGG0+E6
G9Bsb1TWWyENVFcd/nww34BIixfnKkOkIKA8M+e49QawZa2ziNBJAZfUmPdH
xw1gOc2r2u6EwVU5DfST1wak7Fy4qD2KQn2j7xG+gA1gCKK+YTCBgIZS3VzS
+w04NPvz4OiiJFhrXP6UmrQBZud5v33mkoAv95npc2o3oF20Rj+6Tgw0Rq0v
dDZtwP7Lzg/rZ0SBZPpTY6NjA4KQCC+qE6Kg8SgkUXpkAwz7PfGvwZeB6t9S
04N/G3Ducmz55O9LkGapvvRueQMYx++HKPBeArI127WftJsQM7yZSP/9IqQv
2puv7t8Er+TqAFq+i6Bl9zvwGNsmMMb+TfDwFIZ0h/CBe/ybwOA+VVGbcx60
XnG8XLqxCV33lDMFbQWBmsopkV1pE5A4eZKakwBkuPY0SWoS/sjJm3u9zwCN
Z9Qxj4eb8EeOVYKphh8y92xLpzzZBGuuUKo/k3xw962eefOzTVAPZxrl4+CD
TB+uYlavTVCBE981/E7C3QOvBv4L2AT/sqOhte28QBPQv0c/fBN0GU5SNxzn
hbvBsRpJyZuQb9M7VvWVG+gieZdEv2+CZ3lwU2A5J2Qfczum82MT2unrFkIT
joFu9LD0qz+b8KH6o3Z2KAdkxyYEfpvYhOUPV6i7QthBl5e2eGp+E8J7u76j
8UeALsFk4ODGJlx6F5tvU8QGup/5L2gxboGpzu7W0Z3DsEfgjcYL5i0oNrM9
tSF0GHJSx5xjObbgkprzuMc9FqDPSG4aF9wCJn8r2rDRQ5CbJ2jueGsLEuKA
3tPpAOiLegdGq27BAbpddtEb+4G+aKqoSmcLrlhdOuLEuQ/0S9P2MD7eApk7
DDJnJhmAAdl/4bztFkTxK4w0DNBDXoWFhsqLLTBYyD/zbHAPMFafT4z02YIp
BaYyt11ayL/m31QRsgWHnA4tinLSgmHd7OJQ1Bas3bSwjJCigfz6LOmz6Vsg
XfPRXDiRDIatIgOlzVugIKJ/mN9/Fw11dXmo/msLLhbpcvZr7aANV1pmZnqJ
vGArjpFz2+jlKLNtnuktkJg4IKi0toGaKRW6ly5uwQmrhdCV6XU0hky7T31z
C5ZaVl8+nVpD6c1iObwYt+EdXWehF80qinDOxPEwb8PH3z33X3GtoNatEgKl
R7dhtv889w62jPZe+S02c2YbeN/+d9wkZhHNIh9QV5PdBixozPBo7hw6kq/T
++/2Nix4sBq8ZJhDOcxS7r3R2AY6V2O+0KYZ1L1VxrrEZBuK775rMbo/jRa7
Bq2rWmwD6cz3pUKpKXTmyoDLP9ttWK4oZuYWnES1opz8ud23YWbpW14gxzjq
q/SdrcR7G9avUFn94RlDq8lHYlSDt8FRNkEnU2QUFTLLSfOM34ZIlhNXE59Q
0N0rE9+nK7chza9Qq1hxEL08IXrHs34bDmtMWeuGD6CmUe5dJ9q2IfeBpoxQ
Rz/aTuYeU+nfhrCf32w8rvWhewosLKdHifW7Tt54fKAXlTQrXfaY2QYhmYqt
1yPdaFKrBk3x9jZcjlz78qigC+1xTfBWod2BegdHf+PM3yiT6ALz9L4dUKYJ
GW3O6USfR/nynODcgQ8f622f/u5Ab5vVoh5Xd+BWHQdzqe8P1I2T+SuX9A5c
SaQeZ2hrQ4taDRSLbu5A0BHNE9QcbSiv6KbOlNYOxKW90gl+04xqTsgNuxvu
EO/FB92YbjShPlFh5lymOyAntpf686FGdIUs4njn2Q4kNvc5c7bUo2cLXpGm
Xu6AZZn2U9qKb6ihWfMbd88dmCqx0j1W/BVtaDUNKwzdAXtFJnXm1lo0Jupj
7vG8HXi7axw0aVmF+tVdmwwo3YFcmmMQnlWJvpwZ46ap2YGclBoh7iUc1ceE
/SZ/7MD65wNHVW+UE+vrqNX7swPheZ9/PaEpQ9Egh822AYJT7Fx+tpagXJRK
08LZHRA3f7ap61OEHthv8lFwdQdEXR63eLwoRHeuMHRG7+zAiEW05OazAvTv
mzvX3PfvQp8j6S2Nfx4afXbo+J2zu+BscfLVHpFs1EfNU61WZBfk1G9aTFll
oS+cBb3Fru6Cq/CZm1NPMlHdVuu14zd34ZasIKt+SRqqsMZ2IVB5F5rbAt1e
2n1BJXlKTWi0duEUIiz8BE1FOW2of04+2AWRguECz9XP6L6ozwz6lrvAWXd7
X8xoErpVewv7YbcLVSMlFx4MJqK9bCHphe67QIvrcvKufUKbQJwi6LMLPxoQ
nfMsn9Ay016OmOBdYNEeXj8mHo9GlZzyco/fhbGSt8lb0bGoz3B9xWrKLtww
esilXvYRfbHPYtk8exdkwsrM9RVjUF39fOM7lbvQzZu0XRjzAVV4ox1R+41Y
L9OdzSK9SFQya7tVrHUXNlQuG9QLRqCc5BsI199d8JL/cqh0Ogzdd3bSJnBk
F6Rp/ua+HghFt1T9Umn+7YKos9Es50AI2pvYeWRqcxe2Vw8Md5CC0QcPkdOZ
VCSM/3OYFIknCP3r5F9tSkvC3FwreY7fCkRbEi6t9+wjYTQ/06vW7f3RG8Ue
IaFMJEwwqffPKJUfWtH8+4LSYRLWI6Oz5R7tg2asOD2oPkbC4nTS+beo36H8
e1uoXpwgYZ+9B4qdmr3QmBPc0VdOkrDBf9NdawlvUD+52p/JgiQs1nyg2N3J
A6XTY3tifJ6EHVYa+/vE0R19+dSUkVOEhJ16JfqLyc0NtYzcJ+X/HwnLP80e
YlH4Gh3N0O+VQ0gY1b5k30uDLqh+TdYzshQJs60dUag57IIqTqtl2MkReSFi
ONsFZ7TjVamViwIJ+0N5GW2T4YTeZeG95K1MwljllPg3sefog6uzhbFaJGzJ
zLN15MMzdLpZ/fkXXRKmdcXILtDYHrUxKpMsMCRhGVNcw6vidqiL19uqRlMS
tm7i0jJ/yAal45xz63xMwmpsa9aOslijPpkaNwatSNhI3qgdH89TNKLzZOOK
AwlLMPE58LPaEuU2f+dL5UzCNv7FPJs+ZYEmbc8p7XtNwvxC6wqORT1Cc05V
dPC8JWE2se7xcXWmqHjRqfdCviTs+OFtfkb7h2jFLW9tsUASlnzHmOWL2AO0
0Vrrr0IECWM/WjFzZeoeqkKHx2pGk7DJgKn7b3uM0a4IvnvGcSSs+XKd4dgf
I5RSuTD2LIWEvRwSr1jfNEDN1bRTXdNJGH1K5sVmGX10bgx/7JtNwqRjtTde
JOii2wd85+OLSRh+5WM15ZM26h6/mJteTsK6nr5zcpTSQhlF79oXVZGwjhi6
zPh5DZRN7/Rm83cS1sj4q3jNQw2NmvMt72omYUcE+L+YmKqivO5Lr4Z/kDD1
2FaRUW0V9MKXKpr1PySMkblFie2hMlqAnvlG/ZeEdVIv92eSlVDJdr+3B4ZI
WID7QkqskiIqt65z4NQkcR5lM0Taz8mjLT7VbednSJiw4qPJ8jI5VJ1bIPi/
BRL278vppEcGsqix7MoRpQ0SJhV66AapVwYd79bt1t4hYU/WZ3dIeddQS8ua
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
dIh+09b99Wo69X+eKLgN
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1:eJwUl3c8V/8Xxz9mRsNXQ0ZGGRmJSJL7PjcjEiWV7GggUUKykpXIlkJGEpJQ
WZFxESWUEbJ97C17j9/9/eXxfJxzXud1zn2/r/sRuH5P5xYthUKhYaBQ/v+3
0kSgZ2triygdiJKXZpLH3PlOaToubxEe+nxJO8VPYvLUywUT01sEPmsbaqKv
gKWZ+T1v690iKJ6M2tEDitjNg4kU7XaS5esTGhDCDvQX2nxvJPPh/euj7wAL
vflPLfvbFkGlYTi0duU0dlaIOVe0iNQ/vSnpIKiE0Q4dPJiQQ/bnf7wRtqmE
PbDQXQ9M3iISfnL2YzUqmORh29t08WQ8o93wdYUqNjLi3+L8kuzXESjt9+MM
ZmBV/Mn8Kal3337s4JQ6tlv874Gux2R8KuTu3f0aWO349LNLTiRfE6nL1zqH
gY3gLfw26e9b8Z3hbi1s+QhqzDMjeQ3FP1W6gGVNXYUjBlsE/wFPJm89bUzQ
NoCT6xxZv/18hMjARaxLKtk3VJn0IzfVPZ2rg72cKZljVNwiTM/HW9WEXcKY
7Wd/zUmQ9bQvR/rMr2DlMttPWQmR9foJr3Nu6GJu80Kp1ANkfZXKOqPVVWzq
gb7Xr50kXyU0tV/pY+/k7P8pbyPnAVVdk0oDzHQp0Ojr1iZBeYVFSq8bYn+c
SuXeTW+S++OxLowywQJPtr89MLpJ4B/oVk3Wr2FnVufYInrJfPHh4Ox8Uyzf
VWTco5HkqzucXqtex+4rntZbqt4kSiUoX2i4bmBiGwaVNt/IeuZfh7GlG1ic
e/BrgxyS6Zj3qNXdwrw8Fy7JviTzu/dVetBbYaeUdpWlBZN6l/SozlJ3sHla
UUmBp2Q8XsnP97Y1ZuFjxLTTiWTR4v5p+nsYv6rjAx/bTcJ0rDf+jKwt1s4Q
2rdqSerfS9Qzm7LFNJ9+KxrW3ySojjzJlS52GIN6l6iJDsnZfrXLWvZYCdPS
yyaNTSLBVl/3ppgDJv1M7H7ZKVKv/2RuMcURG9NQ6T4hS+6D3tL3xJojlsRq
ci5TgvTnvpZBQ+OE7QsKE4o5QHKDmryrpAuWdcFL5d5e0h+DtKbrfVfsArv9
DeUdJPsZZch+c8P8Ii+/GV/fIPAr1NKoyMeYkIFqKTG/QVAPhRQXB3lg5Txy
Pc8nNohSt/BH1Xqe2NobjgOKnRsEJXa68CerNxZ1k0mRrWmDSHjXoxA5743J
iqwYDNSQ9cIp9l4jPtjd9PaowMINgl9lXjNm1hdjuVfzxTSb7KfMY6rI4oe9
ky5qkf1A6lWUx4RK+mPUvLg9Xa9IHn2q8DchAHNzDpb5HL5BeLBltS3/C8Q4
FR/rPHlG1vMwtBWcD8Z0ykxDj7iQjGYnC+NDsX/eFz/S2JH1tBsyIRZhWOAZ
pd/Nt8l41qEXoSfDscqaQ9vd9UkWPlzGsfYcux68R1znIuk39codt/EIbFOb
QUP4LDkPX/fCytALTL5l6OlveXJ+q6nxAUoU1hT1NyVRitQ/oSL7hD8au29Y
Vel4mNT7stPUROsVlkZ9T8e3n2Rij0VhfSx25u2rg3O7SGbYbfbscDzWfyvg
9I9tZL2Tkzp/6GuMZ9z68b2ldSLhA/3offU3WEGGcbzyv3XCQzXpB3VvIqZr
e76YY3idKH2EPY6aSMRCFo6uES1kvL2HNupLEiaRz88V8XudoDJtePxIT8aq
XP47afl9ncB70J5dGSkYLWXOkS2P1LfacZuoT8Xiy/tfDGSQ9YvW1goL77FT
T5py8pP/r/fo16DwB8yBJW/W9MU6QblS8mUsOwNj+5Xy3/Egsr9DDKcf20cs
IyRSivkJyXpfqdfRJ2xoj/Pdzw5kv43Ltbe+fca8/94OemJN1ptm3WR6noXx
vzJI179J9qcXrR66k43p8ymO0Vwm/RpLUxhP5WKLvRLMLedIPa77RgeP5WHh
SQcOpymTetcEbE7IfsFqRbdu6cisE6YKodclDQswJFvem8hO5qt9ZhlSKsG0
KysTaFhJXtgt+syPwG7o/rxmSkf2v/dd+YdNKebnVN91YH6NKI3aVjXYXIa9
Ym6KdZtYIxJ2JOb+96Icy3j117BjYI0wtR2Z3W70DWss6m6Lal4j8D8nr2fR
VmIDWn1RS7/IeFmCHn1/JbbUPXhV9/sawd+ZnG9X+x3joZls3v2F1He9f1a0
qAozV11rCI4i6+ciPQc5f2FOLZuhk6FrBMWYelTg/G8swIJWW9OfzL92ZrUq
uA775M/8m9mF1NsxRv+JuwEr59oRZGm3Rnj8ad0pWt+ANX9g0/xhRcY3sq8M
BDRiq784qn0MST+UFBsFriZs+zVu//5LJBdembs/2YTxTfOqK2mSfLytgutn
M6bCLvx9S5H0c/t0/v6Yv1iwrmy5Cy/p51KhYFl2B5YwfMKzbR/JD/UcnZs6
sWynU7j8LpLfCTG8pXRjra+USha2VgkK4LOBiIqNiZ95dHl5lTyvH5PEhqnY
RtFZxexpkgt0km1f9mIHe7S/2vauEqbpxpc3mPsxWdvLznVtqwS/sOWb37/7
MTUaPXnJRjIejCPjmAHM+tC1vPFyUl/hVmu/5hCWZ2GTZZ60SnjkJkeFcI1h
Vcu29ytjybhXmOZx4XGsw99BSvDFKlF69JvqWcUJjJLumtn7ZJXAbywF6PpP
YezYYxvcncwn9L8Ilv3DhH57Sbx2JPu9Knvv6zWNaUz7pxlZkPqmLwo922Yw
I8+g24XXSL2S0GW6kFnsHnvYYS49kh8f3Pvs3BwWIRuV8ledrN85m/epfR7r
ckpJ1BEj+9GzZNzSX8ZkIy5l/T1Ixg95iLNorGCBHynlRtzkPj6l3/uivIop
Dhn0mm8n/WQnMHlcWsciaJhmxulXCaru1mUtqw1snCeXcn9jheAvvszhG7CJ
vbq0i991aoXATyRfMntIQbN3i45ShlcIqllqc9V+GnT22W140kPGLSTVjpXS
oOXSbyYh9SS3M+aPCdAhXUmnuLdZZD7/tyXPE4wo86xQxuEPK0Rp8fi6665t
iOFWY1HG2xUioeNWg82/bSgnRqLzSwQZP1O7eq2KGW3/0jauGET6+RlYuVLG
gm40+q6VPVkhTNfX5ksqWBE7cy9XrSPJW8OT3MM7kJVgsNjFe6Tezcj4G9t2
oTI4pdBi8X//a9LcnGzI1vGFPlWP9HOG5+3jy/+h3/1no+YVyHxaurcyu/cg
4a3Fd84yK4QHZqLK+2cPesSV9GVTfIV8v2I9G9F7kcTFzRamA2T+mVnzKIwD
+Vh/GAraS+r/YCxp4dqPOp7qLbLvJPXdaI78R+FEz0qy9h7YWiaoCe92v+rn
Qn1t14QSl0gWEmh07+NGJxe2HxeZXiZMTdJHA8Z40Ii4xWXp3mUCvyhywZKD
D52J5n6u+o2Mj67d6FsUQPE5VYnVhctEqe5NrcLXB9FC3YOsCznLhMe53ouR
5w+hJMb6Bv3kZSLhlraeJCGI1gUe9XbHLRMUbV5Cz1MIXcLEZm68JPtrPZu7
qSGMaB182O4+Jfu9zovcNyuCDEKk+ecek6y68kOh4TD6nNZ91MmJ1LdoCkD5
osi0V/6C123ST5+d/Gq8OCo5Pxn08hzpR829S+/vUbRy5/4FZ2UybkVv6RAg
hWT9F9iMTpF+num0aUlLo7RvG88FxJcJfrr8fdyhx9Ag1fMK/SGyn0rLvO9Z
GcS/ycAxzEXW80PsPLMseiG/81U6CxnPzVLtSjiO6q+EG4bQkn58ZQX7Hsoh
Fvt9B+xWlwiKStmndd0TyCODN+HE2BJRuvG95o3kSWR98GhK+c8lwiNK2DJI
E0PvINsiuYyMf2kv22WDUJ/RCVG/ApK7psQvRAHSi4R0rfdLhPa8d9pZptPo
ec43G6k3SwQuFTUs8/E0+t2gdnR3NNmvfNFL00gJKW/Xzmr1WyJMkyIKJn4q
I3fRJvtCjyWCeuGywvgzFZR/Ru94vBOZX8K3ynBJFUl6mubfsCT1io6tRKyc
QVyLtiVTamR/4+L6gnca6MruhccNQObfi/wm8f4cCpVyPp1zguTBN3O0OZqI
8Y5nhbMIqX/W7umR4fPotB+DrxHfEiH1ZDyDk0kbuSX7qwHHElGfEle09UYb
zfSEVdNvWyL4dYYjvwxdRBIbewOHNxeJBG77uKkwHWTO9UqrenGRCD3SoX9J
+RLqvJxYHzK0SJg+SPPxLriMqn5mtXB9XyT4b+OXllauIrphuaiN4kXy/OlV
MHXpIURfqE/NJeOz/MvHq/RRNvrWmZy8SHh8pj9Il2+IpgzV4v3iyH4yIpXy
xUbosHPNtTsvFgnK3udpuTXGKD77T5/Uk0XiU8aAyBCtKWqrv5q0+9EiwTbF
dpgp2hTtmeq4teiwSNjScvM5yZqhZ4cHRgpvkvk/YzrWXK+jB3HzU2dUSL+j
Nq6bOreQsH+Ado4i2V/cY+IJqzlqcTiYJXB8kcDXwxvZqs2RvKb2g3Uhsn/7
KN+cviUaOTHccpuX9G8zrvhR/DaKPuQu/3cfWZ/KqC1Pb4VWVz+sfd5GcilH
VkD1HfRhSMmYj0LqiTfDj3xrZNTYVhK4vEBQIkb1szJtUPH7bV4WowuEh6R9
fGDWPeShd4PpQA0Zb2J79IXNDkmrrN5+9m2BYKNJ1+ZJs0N9R8NqlgoXiPpz
S0ct1O2R8jYiuDF9gdCOmKs4G+GA5mevTEPyAjHNGvBeWukBSuqeuJgRR+pr
79iWsPAAMeZx7fULXiBwO+3sYpuH6Mubz44LvmT83KeJ78eckGWQeuv1xwsE
9Um2L8umE/p50zEGs10g+K00jehSXVDg7kaBuYsLREK6Mq/xBXeEbVl6m2qQ
LN5V1nDuMZoa2xr4pbRAlD6c373vsAe6UH4kNVWGnOdaI8s3eU9Eyaxg3idB
6p9mnvP84Yk+RRve8RZcIKR4j/+XZeCF2O/7S5rsXSBsQ3wvTgV7o29G/KE1
O8h8/Wy201I+yEH9y4w8I6m/EqYV3uKDmvkGc3YvzROU9KmsqmO+KOo3fupn
6zzB76UcPHnEH539+jdWrmGeKL3jHfZizR+tJt/dfPtznsCjLc8+q3uGDB/F
lrl/Jetr//vHERCItt+WOTSRReZ32svvtg9CRZerffQ/kPknerb4rgcjXoll
NdnYeULq9BUWAfFQVMcR8v5NBMmSm/59GaHIg06YdVfQPPHJQtPnlWwY6m2/
9Hv00TwxrV69/+b5cJTk//Hy62skH2DW+ZEXgeQfHrC0ujpPaJtLfi+yeoFq
bwa4Hr9A6r043hwo+BLNg0ViDZonPDSGmJ3SIpHfkebcl3Ikd46ozjtGIR5u
5Z9mkqS/Y61GOzSikcoi7/TSAXIe7lMaI/QxqLU/kO7bXnIeR102jskYZN2w
ui94B7mfuPnkos5YFJHeggluzBEJIXvmr/6JR4PXgwO0O+fI731+xYvhb5CL
9no8d9McUbozZv6dSCLaiayyhmrI/J+M/MVliUiO80ybW+EcEUpTlppHn4Sq
GXMm1LLJ/L7yyOGMJGQyL0DZ/WGOkDoaL25rlIx86zaE37+aI2yZVlOOVKcg
ruI7Cg7hcwRlRFQ63/8dykxr04JnZJz9Yq7qhVTU8iTXodmZrC+sCDg4+R4J
K9qU0+jPER7f2ItOOWegr6IdzbXapB9djtYjdzPReY6zo5HqpN6fPxL5Vh+R
46wgm6Q86e9M/mJx8SfEQg0/tHJ0jpg24FPfp/4Zxf+inKgQIesV8KXPLZ/R
j9ROYwOOOaL+eNmQDE02MnqpcV9oFxmPrY82istG0975PtOMpN6ltzFaKAft
vxbxwXdxlpBSu5HBEZKLLPdqrmQ1z5Lvx/kEG9t8tE77dbv7r1kiIa5jfk6u
AIVOi/CfrZwlPu294eRK9xXl19Cp9eTMEji29xx8LESaBfcN0tLJfCdf2b/B
RYia0mPzIGmWoDjfCBN5UIyYvAojWCNIztN5k6dLoNh7oqktAbME9e714COi
pUjKOLLwjTfZH3dpKUsrRXry9n0n7En9//YNxRWUofdTYlI3dWYJW42OVg3m
CuRlrhRxRWOWKH1WYmWSXIGMuvWXzyiR87B+c1tUrUQ7f/uVih6bJabtO/Vl
XnxHdhlD2v/+myU8fllX+d37ic4JbeZQmWf//3uj9oZMNRKM28vZSEPqr5T/
+btejVoCVXpzZmYI05tXDITf1CIF68T7Lg0zRMJMqtUYZz3aPVDQfOcnyTTt
Tx0i6tGEYcNJ47IZ4tNSc5M9ewOKP0ehxT/PEFJX776R4mxEdOIm4QxhZH7r
8SqDy02oM/HB4qLfDGErw35GabIJ5XEFGYx4zBD8ctX7rZ81I0uWooM1tjME
/jD49UpDC6od5cwO1Z4hPGa7D6lHt6FkM2kOL/UZgmLhHul/tR25t6m72uOk
/iZ1NyN3B5L6+VBZV4qsfz0ocSqrE71Ibf7DzUb6C/QU+clORXf5J0/sYJoh
osSPOzf4UZF6FH3s5tY0wU8/92IHbS9afSpzs/ffNGFqV8n8YLMXmViEzafU
TRP1H/nrLAQG0ImeVL2oH9MEZf65sF32AGK7WlrkT0wTCWUC2rfODqLyM/98
rD9OE6HSweNWnkNIRFhr77EQUu/L0f0tgqOIEn/T+dDTacJDKm+eoW0Ute91
69rzmKxX/UO3HDaGAhk+JC/dnSbwhaXQGPYJND3AJFd8ntR7PHjyis4/BOIy
CifVpgmm9usXndmmUfB9Y5QL08Qn5eciGi7TSGLz85kMKVLvU05q+pUZZMlh
eDWOnfT7nEOJ78gc+mL8xJCTlZzn7QtcJG0OMSZ9vPaCjuznH2slKTaP1M2Y
6rlG/xFsTjKsj2UWEPHcYGY1/R9RemhtktdmCRnxf1yZjftHfDrdY7ybfhmt
ptPRjgeT+UhxMzp+Gcl9T2fvsP1H4JnXQzO7V1Dm8qZMoew/Qur5DqnTQetI
88klxWyhf4TH0o5ENuUNNPZfqsqHff+I0FFKCu/GBhIWv3glZnmK+LQDG7vs
voXijd86uhZNEdMpNxQmDWlAcWzJ3T5jijBdvZst9JMG2h01n96JnyL8OHpP
9cnTwr7QhUhDjylC6tbDFF5+OgguVys4pTJF4DLuUnK7GEDiQmyZzPEp8vuw
8R1vOANUd0z/FBeeIjzMkjMo+xmBcSG6nZuJ1Jcsjp2R2AaPRCbW1momCe3H
j//oP2IGrhycfr6I5Pf5bj2cLJCPv9g+kTFJJEjGXBguYIF5fXSgM2SSYBv9
uP6DfjtYB4aiokuThOmJiL6xHzuBhXPwTI4KWf9LbybWaxekJp+8kH58kqiX
7a74ws8GAyV912I5JolpY8YLQ4NsYDQj6+nWMUGELumpTTxjh1LPE5NHayaI
qm5zMRe63SDErqDf/3WCSE2U393nvhumjoG0xqsJwi9pZ+xj9z3g6XC2l0N/
gnCyzQkvTdwHQ/SaWjXqE4S2gUjUuAwHaLw4X+AuP0Hw3/ku51TFAXvyLoUN
ckwQVIUPhpT1/ZCyZHw6u2WcYIujzA0FcwOLn2mG+fdxor7XiP0ExgP39t/g
5MobJ0qNjO/6/uMB+ZOWMx4vxgnTqpROJ1NeqHGxe3P+8jgRtWAUsbOQH6RY
H+ygVSHzfV38rQ4JQETMQ+dcGZI3te0FggXApMjtIs/ucSI/N4baYHUQpjd8
acYaxgi/LkmaFCVBuBzsbxNXNkZMlx5exAlBKOANbNP+PEbgBpZGCUgIvCDs
85fQMaLUy6RuUFUY9nrGmD25MEZITfUPizkdBpf/4n/JA5lf9t/Zp9tFoftN
wskJyTEi9GHsE4EkUUgtT/7v0s4xgi2n6PbFLjFQoP9Uxv9rlDBlzOpwdT4C
ryOyjjQVjRLTItyiiaKSQC+UG/00neRV28iwLkn4pfr1/lTAKJH6XTM24LAU
mD6tECjSGCXY8jjC7uVIwxOWNs+rVSPE9L3f2t/kjkPLCRpJ/oIRQlsrzeD1
++MgfEu0feT9CFGvfdYql1cOvhPOx1wCRgip1ubzX3adAKYHXP2x50cINjqx
e1I7T4JeolLILSDz/d4Przw/Cal1VqckpUaIqj2LBdo8CnBWrPA58R/Z77gj
yx/ZU/Csx1Clr2mY0L5eX3fHF4P27T7TaZXDxHSfyn2qAPl6UUiPtc8bJiiZ
KXNQiqA2Yn2ePmqYaH35rHaZFocdGnHJIobDhF7NjyRlw9MQmtPNaNM7ROT7
VdeIGakAtZcx+3jjEMGfPHDOoEIFpHcdvbZZPkSUek9O20iqQuPtx19CkoYI
pyDxMlOmM7Cbj98yy2KIkLL9Mn+pSQ1uaqrvcdUbIvY7ipl5a6pDjrNtqfJZ
sl59rvvvd3W43FS6v1lsiKAeDg1nLz8LL/3Nfi5NDhK2MTyl3/+cg6E8/wel
3YOEPHNM214TTTgx8FnAv26QYNso2WoY04RWROvC9XmQmJ6tS/rCeh445xPF
MIdBwumFhoKQnDbEmgwEeK0OEBWqhyO+teqAY8K1tsjxASLwrP+1fulLcLGv
XTijc4BIb4lpeRR4CRjNG8r+lgwQlljVK/kzl8HWpmRJwnuAcApMqjKrvQIa
H0+qKjkMEHovL9bPSuuC0ExO+NVbA8S0qmCDeLQutDt8OOKlNkBIyd9KyLC+
CspuUTf+sg4Qpd9mTWMO6wNvye7PE+v9hDYHlrovVh+Wt4I3aab6idCih9Z3
/jOAdO8n0RL1/YTfIROXQhpD2BdgV+cZQeZ3VlM+rRjBWLTmKYkD/YTRocEi
txRTqOj44Xd6Zz+hIuBMlzBtCq8PKLfobvURihH9F0ZOmcHlNyfve/b2EU1s
LleXms2gOFX4XUtyHzFxJP2P2/4bEDX2Zn78ZR+RUKv65bj1DbCTOKBE49dH
tFITDGXKboDwp91d4lZ9RKDcb88d925C6BfKbk/JPqJi419hdvstsFpxNX3J
10d8Oib1l+mkOaieWsr4wNZHFPkpz1VEmcNqyaR6y2wvkXNeiN3HyAJufm93
F//SS/qft49bsIQTzTljzdBLmKZrtRraWUMrV3dMytFeIlXg9QmPOWtwMd2m
9ZCvl9ALGU1OdrSBonH9j/u3qMSn7xYbO7zvAk67ZW9YQiVqW54x+hnYQq/a
YSGJTCoRKFmy5PrWFryCLrasx1EJUw47n4BJW6jYnyQf/4hKuB35HsD65D6c
PXp2g6pIJYyuHSubK7ODMQe7zM8SVKKps+zH4T32EPA15poXD5WQ4Nl5+6WF
PcQEdHqrLfcQKoKKwWLsDpCUL7zjl2MPkRBaG/HG8QHksRfytdp3E5rtDo8x
DydYjtvh5Xypm0i9qGxQP+wECqKmA1wy3YSKKR7doe0MBDC8N57tItLZDihb
i7hAlfWFY/22XYRPrvD41JArtH/vV5my6STcWsTNr2Y/Bh4duXchWp2EL00b
I3B5gEmXH7P0kU4iMbQFZRl6QP/ckd/2Ex1E1Vhb1eleD5jgd7q6YtVB4Mm0
LOpLnrDhst2K3rKdUH8+3cN+0Qf24Wma9WfbCbaacpbbMT4gxaB+NFa8ndBs
vS2dNOQDN0O852X+tRHTY97VDY+fQPXbVfcbjm1EKd7CrVrsC1G1I8/LfVqJ
znM/Lt4x94esMF/HYPNWgqfrgTlbqT/U6grqG6i3EvW2fn1FXM9gi3qNd5a1
lbBmVliS/fMMzBdaUgWe/yWkWi5qUbUDQZa3stjjTQtRdbf0FZ9nCJzvv56g
6d1CaL82YtWYCAHLVIr3/lstBJMJRVRbIhRijimqfzrcQnz1deqwfhUKtGrZ
jT0fmwm9Z97l1EdhUH/vzTAqaSJSeR3UCq8/hztlj/7baG8kMokY+Zj0SGAP
flgIXxsJ7R+rPU83IuGrwf1bXtGNxJ5w098XL0QB0/zNgm16jcRhvoGP3gtR
kCSsacbe3EBE6LXUPdN8BZ0BXJ9F6uqJqdAuGQ/hOPDW22NolVlPtLgIBa4+
iQMxoZ0MGUH1RJJtc73VUBw4ldDoH9OsJ6rmbp2USYsHsb4GGpfwOoI6vpPl
B28CxKbffZPk+4voivUtMql+A2Oq1xdEVX8Rh9Qoc0K0iSDfc+XsR7pfxIPa
83wOConQ/B82U+BRS+z4cVE1NT0Rdj5kPV3nUkMkprn95xP5FjxOp1JX7v4k
bqvcM3r/NBlutPTyXbhaSeylEXN3bHkP7WUCK4wclcSt3u6zXHxpoJ1h1ljS
UkEoL17/d9kyDRR9en0kdSsIpf47zGHrabDvWO/ojivfCB/fgCUZiXSoDqJm
1+qUEWPP16ZjUjPB9FlJSETsV4LphOX3jO1ZoGWGlOh5vhIRlrTjYwpZoCBf
Mm8fU0CoaBxicL2dBXuGivUvvconUiOc6iJ+ZMGP08WH2KPyiLSESJfsp9kg
uVL4JeR5FiF+rjiP4MiFxTo7Yu/eZGIbmLD8e5gPgZq1wmeFkgiuUq26xfR8
EPgpFOx2/C3x5Gdu19m+fNAsbzXqv/KGCD9pstCgVQBKtx/Nmx2JIfJe//xo
dfgrSN0Sa5Iy8yOi6YcPlo4XQpFCYdpqVRgcsNK0bk4jQJ+B4zjTvWy4mjXQ
yExXAa2HV2/snskGGnSEUiNaAXqaXeG89jng7bvekqNN8vO307IPcyGxNGaI
5jXJAlLpZo+/QDzLBZFHWCXoYmcPFYYUgu713YaNnt/h/ddiphOtZfBRYDA5
XvgnJM/+Wxxd/gnXTvCVn/3zG+4XdrQ8DW8CwVcpFUzCzTChNGlwO7sJOjL2
SF+DZrCs3uzWaGoC0V76Ozl6zWDSJjC8Y18ztPLWHTIIaAaNJYul59HNoD9t
F/VsuhkOysxzJCS0QOut+x+xry3wJ227fn5mK2i2SkdWqbfC+WO8XdF1rSDu
z1Zzw6wVqguOmrlOt8L8hN7EnHMrlFbp3EbH2gB1z76ZSWuF9KEo54rcNlCo
qLqvv70NfA4KvaovagcVzaRLwbVtcPwV1jFS3QnFk3aFXHgHxC6n8kiPd8KD
3AZn0O0A2qt7TJxZu8CH0TL/vHUH1O8epzJrdsGB7SI64lEdYB0UNST2i4xr
Ch37M9UBSR5zM9Z13XDUK349OLITWHtMZHL/dYPS91250umdYIdVO2zs6oG1
TSmtgtJOwFcTloK0e+CI3I9PD0Y7odP+/EZmQw88NDmiHX2yC55lX/ZZvk0F
rcwfUopNXVBynSWZx4UKz6MajtEOd8HMf6WV+DMqOF8TufFupQv0bMW3+adR
4QvI9wfxdoPwEdpnnONUOHFE40GZeTeUp3wMUbDuBXNfpiH76W5YvHLrk4lb
L3A/pblLS9MDogzcDV6BvVCnGulj9V8PhN7wZa9J74Wmf11rldI9YMJv/MJw
shdu1r5xSLDtgZVolhi3u33AymoeEDnUA3j6K9eAR31Qf2Jy/7u5HvArETN6
FdgHeYpcSuoUKuzv1ziQn9YHZoVFs0vbSV8SAa/nhvpgOvo1YS1EBXfE7UG7
2Acsb/x09MSp8F37g+l/DP3g1sBbfVSaCroPagSOHuqHc5qxg28UqfCghDXJ
6lo/1CS1aoboUKGoPsbH+W4/eFJ7vFquUoG+X/yW36N+gD1mr5mMqRCxTVM4
JaYfQkvK2I5YUCFbOzC1928/GLc7+diTe129zuM/PdQPv4rPxO58TAWlB+m3
txb6YbgrJO25NxUao2vFDuwZAO0/aicMA6kw07c9Q097AAR6OFc6Y6kgvxAb
ZHFtAG77VqVVJFDBY9uRu453B+Bt4g37F0lUYJPQOhoROABOIgvdMx+ooIe6
dr2NGYBagQdajz5SIUHbZvpz2gBsji/ensmiwtEHQZ/rqgagJeW+2vMCKjg+
PRDe/XcA+LlsWkqLqFASnWE3OTQAFhH3P7YQVDhf8kuGlWEQEp6L9nytpILN
tp15Z04Pws2nfMnX66mQwxn/8or2IGzrGZ+pa6TCurjkw5vXBkGRv7hesJkK
gdrn5b0eDYKC075/Pm1UaLrevT8scBDyvDrpQzuowPPg7srrmEGQsxfS9+qi
wofo4K/FBYOg+eSvDU8vFWY/8MbUVg1C02uPbRV9VFAoyXTt+DsIadGS4ToD
VPCqR0ZjQ4PALOey9mOQCtV9vxVXFgYh46mZtOAwFdgXTA4wMQxB2qT6QYsR
Khhs+7exb88QyO1cLwodpUIi5+NuoUNDcLouczphjAqj4rsI2WND0KS5mR5J
nnMrhZlTfkpDADvyrvpOUGFC/U9+h84QWNxRm9CdJPdxNff40RtD4MzmepV5
igpTtyKzvOyHwOneJ984ku85OB9t8R4Cu0M9Frv/UWHayzBdNGIIDM5GjVqR
fD8ME32UNARBzdvW3pI8+5ovpT5nCBoGFgJKSLbPpDkkWDkE5UxVgV9Jni/q
f/2weQgehHhNRZL8oKaSp2ZwCEy+/0zUJXmx7V007+IQSMn3xyyS/R+O+O+z
YxyG8sG82ockLy/eeV65bxiKnesPt5P+nRnOs3GKDMO+h6ZJB0he3S0VZH1i
GPZex2SVyHldD7KzlKoNw2L/wC81ch/rUvO+u/WGYXjEzUKS3NcjaKGzsBwG
vfympQVyv5ta+R5fnYYhcJu5Yzy5/8dGrzZ2+A/DYUbdDpEhKlDuuLmYRQ/D
6E1HvnDy+dH64Q5MX4eBzW9OnJl83t4vD84YVg/D7H7D0b095H1Lpr/7sX0Y
Xvuw2NKR54OxvMpCd20YFPdMVXu0UuFpfdrAe9YRMKX7Es3WQgWmnkCzDe4R
yGObE/b8QwXWdW3DJMUR+Kz0wZn+N3keWWRalzRHgNgwBY4aKuzk3HvlnPEI
KDhvfmOpIu+TXNv52UcjkNt9mj2ijAphKoU1qsEjgB519YqWkOfpUpx6dPwI
aHhouSV8pcIeWzMlnBgBuo0QIalsKrxwVyae143A60UR/Cx5//YFCSkO94xA
pg4/pkzez/1po8eDKaNgWvJroy2RPP8D90U7T4+CRNC7hOehVIibvZRyVGcU
hrzS63ICqMBLI3fI+/oo7Bx3l/niSwV+3lUeMe9RkGTvqL/mRgVBPS82p4pR
UH2hs0vJnApHasOXdquNQSoKczCQpUI5dkFWR3cM4uFHMYsk+X74yHo/9NYY
cHPmnXwjQt6fcJ+x7T5jcIpd/oAnFxVa9Ry7GMrGYD2sY/7AZg94Dep/W1IY
h8Dxevlp3x7Yf3UfRU5jHOQPJmxJPOyBjKpGRQf9cRAfoVM/adEDrR/O5U0/
HAdqR5xG2Rny/5Ad9n40Zxx4WP/+ekFHxjf5QzokJ2CszWPM36EbbGy7ajjR
BPxqDCvsNOsG2r5oJj2tCWCycFWgu9ANRyrZvZruTMBXoYF7tYe7wSuA/sGv
1AmgPx4opdfeBUf2jxgQByeh+LNObczxLvCS/ij8dt8UCPg8WpSr64Cg4P3l
EUJTEFjM9YQzvwOixj2NfWWngN+BTaAzoQM+Jl+OuK0zBefC5zZp7Tqgk3OV
Rip4CoKt6Ad62TtAjla1q4jhH7heuBOvcKEdxhvbn7fM/4PpTnH1g7mtIKbg
TXkyOg0eLY9VDmg1Q+2QKU/CzDQ41T+r+yPZDHefI/nClWlg69ns82ZrhuyJ
lXszzDPwONX2R+OfJlB8bdtjLDYDL2y+3VcwaILz9CYlcndmgHvTy+Cd+R+w
/y3vNjIxA4l9sa5Bng1QdH1q6dz0LEwHPz/ZlV0DI3iBfefSLHw93Rnt+bgG
9vL5/LPemoW0/rQ7Wudq4G4H53DQzjk4WCUXbtxfDfyXVVvqJObALZ/31929
1eCtGptz6fYclIYIHPvuWQUahzXuG/bNwacntnvt3SvBkXHv5PjoHLiIvBec
vVAJbwd6LN1m5sCEgzY5RaAS1hMemMZR5sHkyk3sc2UFZHC+udDDOw/bDa4r
X2GrADbW5SM3DOfh3f7Sc/s+lcPfyeQxq6Z54BLYJsjCXQr81dE5cZ3zIGYj
2FVPJcAqJci9fmAeKPeu53AFErBu8oBdbmEe6G695bk6UAL89SoKNPsW4IHO
sptTTDFYZvX7R15dgNQTWVJugoXwOfjvpeprC+DOr3KEv/UrrFrVHNiwWACv
iq/ylwK/QuCh7M/XnRbg/PglQ/PFAvgc4dV2JHoB6ieFmKEhH1YdBUQr2hfg
UxySfv0mD5Qv7Z1b7FuAPCQgc9gkDwKPMheLji9A/tFROsSdB7wj09ohawtw
0WKTbldkLijplzoZ8CyC0K8cM/QiBwJOXauaNl6E9mutGk8/ZAEPJc7iQO8i
/PBXV0twzgR+nWGq6OgiyORND6vsywTBJGkDuZlFoFzR2N2dnQES6t81L9As
QWzMy8DRmXRQDP0n7SmwBDdNJTpUnD+AMb/S+oDZEgRK3PuPJicVrtsFPpi5
vQTRwztXTK+lgnlFy9TG/SUQqJtnTWRNhbuWd3r3eS0B7d38R+Xm78D9U8R3
9cQlyNJofn1VJAXi8eHQ9L4luOeSzZ5c/xYSw6VZCsaWwLYrQeuh/1tIGXD1
rpxdgjN2D+j3Kr+FTD82x27aZXjl4X4mIz8RSupPGrIdWoa0mGP+ohlvoNs0
UMjhxjKUGKdXHnJ4DX1ZLfEed5bBMrxuqm8jHoboBfYH2S+D+Nd+S1b/eJhK
zWVJ8V6Gnxfyfga+jYPN6e5/f98uQ697dzhlNAb4PKW/nhpYhubJrzsPZ0dB
Jv3t58XjyyCfbCSaoBcFin4J1jC3DIxHZP+IbUWCXsguPmXaFUh58Sf+7oVI
CI2b9NbgXwE3NrHee+svgPbrey19oxVQ2c+9aej7HEKxXuGOGytw7u2G//ip
58Bbtp9ifGcFXgWG2d+eDYdTVU+zTF1WoDrwXYjI9XBwaLnFYRm1ApYypzPv
aYbB4KxAr2PTCpyVWM6KjggGB0f9r8sdK4C/0/vixh0MtKuhz136V+CgzsO1
pbdB5PudcsZ9dgXmaBjrUgoCQXdXd9oTtlWoYQ1Msl96BlXirxwiNFdhqSJW
Q7PgKeh+bNDad3kV8hfTuRuuPoWBY8wiUYarQDciOZC55As0Ck5tMVarwBV3
VNf8lC8oqOuit36rcPTzw2mjRh/4cJOdKatiFRhzt5jhlBfoDtkdbaldhYkr
erd5hj2BYvlHd7VpFZLWtevPRXiC7p2IZKXBVaic3P0yZNYDaO32Kf9hWINF
lhCwcnsMGXOOVks71uCH7Bt5/RF30HvwN4x73xpQxnqi3+u6Q4ZTFPWG8BrM
K96KPq/wCPQec7nPn1mDNSHO5F88rkBH45q8/8IauJ5bchp/5QKZXh21ilfX
IED94EsJbheg943lfmJB1p+JXFgVcIaPgbwFe/3WIKk9BFtXewiMrw7Oy/1c
g8ypsOA7/+zhM7c3t2HDGgzei6+xCLQHo7h+pcdta3Cp8WXkfnEynpAU9mN0
DT5vSUa729iB0Tvho3os68D4xVfuI8N92Cb6VNeNfR12vvp7I/GjLWSlDT9K
4FqH+7vL9TkNbYEpM7V2RGwdJPd7by1a34PsHDEr53PrcHHbytrAujWYyAWE
xV1ah+TKlSfVFtbAlD+eX2a4Dptz7zxNmu+ASWH6NhZrsl6n44NFvhWwlEsm
vwpch1GuytbuWEswrTtGLfy1Du5TaZ9+tNyEF14eFlea1+HNP8dh2Xs3ofr4
76mpznVgExY4Zcd8E2Rjb28ITKxDp2E872nlG8B0O4HLj2UDZFxbO+/VmAHG
M/VGgH0DYq3ab8XdNwO7ulOihZwb8JrPjvEWpxl0Hv97YurwBmhUmvO8tzGF
T7Q7r1xWI9nVeCRD2wQGcw07J89vAN+DDMr5XGPguv3+xlPdDTg5qR1TymMM
PnUqdl9vbcCPMUXbf3OGoBfrGsLvswEX9u+NUyjXh63joz8nSjegklm/XL75
CsiOyl30rdoAgztGIpNmV8Ay1qeVr34DhAU5BX9NX4ZGWv5hnZ4NKFvYsTC2
5zKk1OnSF2xsQM8+s/DEBzrQ4ZUUoMOwCV7TWuZf2HXI77VZ9ontm6DKXaH4
+fNFcIkNEuDj2YTvwZc3ji1ow/nbFeiJwiZsHxS1P3DoAnjzsH/nVdqE66f2
3G52Pg/5dde08s9ugoRhTELbHy04KLdmOK63CV2z4VhgmCYs0h5zvvhwE9Td
WwS2H9OA+NjX2QdyNsFlw6YqZ00VgiuVx0ILN+HTPVfGw96q5HMb5qf/tgno
2qXY9e2qYIJLBY81bEKO25HX8SIqwDtQavnl3yb0fVgbSXioBDt33HottrQJ
FTb/Xi2zKcHmceaWuM1N6PD879G19NPQ/fSiss+OLRD8yfpVdhSHOPG+AxfF
t8DpV3DowhyCwMu+lyuObQFXU9fRMFUEbo/EAk4obMEsvmr39RUGRnV2ywfO
boGL3cExuwuKwGNP92fMfAtSr5bW5lJPQuxXQT+fxC0o9Q7dfeTFcQjsrypZ
er8F9z6evXNp/3Fw226zYPV5CyrULbg442XByCT3+sXSLWDaMFO48FkGeGjP
YLzdW1D2xzeLdUEatouP2YcNbkFcndTN+gBpWL8UnEY/uQVRcSPmfwSloTO5
hWN8bQvYTbYKLYyl4HeSzErHdgreCO//nKg7AmcKnkS8YKPgkpS79Oq8R6Dk
19+jF/ZQ8JaLKRwS9yUgc9HVvJybgu9MU7E8eFAcgtUr/qSKUfBsBb9LRZmH
gdF4373rkhS8PnC90JjrMLjft2ThOUbBVwJminF/Ebj7avvpkJMU/OFdVy8/
W2HQmric+UCdgi+EloUa3BCEpseFth6aFHxNlM3qT+chMNh9UCZAm4LTHBFz
CtA/BOYK/74k6FHwdeqa9z2jg+Dh519WY0nBU+wuM+/35QdGnmnvFmsKrmZj
+TSKgx8CP+qe6bWl4BQzLf3Yq3wQ3XKoZtGJgn+t0/0um38AsgRLmgT8KbjH
n7gVwVwukM8XjJQIouAZrPM54hQuKDkXoH8ijILTC5YWZV3ghBo7vW7NaAo+
L3Vx4u8aBwyUzg4/fE/BCxw/sxQ82QtWl/XTvDIo+DlBd5PlmT0wPUxYB32m
4ML01WazZntgY2fQTGIBBWdSfaRbrLkb9hmLrP36ScEVd5bc0z/3H8ROBxW3
/qLgQQd3KO79wwYHfeYf9zdQ8Py26HuDxmxw9EMZ/UobBZcVO3h3enknqK8Y
7hQco+Bj7YqMA3ms8DuwvF5yityPOmv45zkWuMIv+vzkLAXXGHm9J+w4C1xX
W+S4sErBXek7K5mqmMD1RaiACwsNXn4l8FeEICPQii71++ykwdNUHo6n+DKA
X5FxSgg7Db5xV25b3wQ9RPSLiSdz0eBsHUmNVpV0kCldKVsvRoM/6f+SvD2J
BmQrxZfaJWnw29lp6qmCNPBVL7xg8BgN7jdeMJuWSoEfj6+hNQUaXKxy4vSB
B1uI+mtFTfgcDe6Tv3OQY9s6kljV/Tp+nganPBE6XqK2hh4K50h81qHBbTN5
lhSCVtHOx3f/UzSgwd1fz7UpCa+gU1L97Rdv0+B6Pp3tbkGLyNcI1+KwocFF
/p36Xj6zgBr94ohOWxq8rnrPRQaDBWTZezXJwokG975R4skrN49ehtfaPHpK
g+ex/+LdzTWL+kpEqUoBNLgqz7mWDzEz6Mi4rw5TCA3+JjPpUgD/DKpQPn3i
+UsanF/6l8gvmWk0M59LeZ9MgyeVK044rk8gRYHd9nff0+Cx7+bv1x6dQH5a
toMyGTT4UO+bnx6W44g3Ray6JIcGTzVbC3YfHUWaV18/b/pG6vMfn1AVHkZR
3usMr36QPDBdRuc5hPo/6jtdq6HBF6YMpYWog8iFaY/xWCMN3nN7oeDghwH0
rsBPmNJHg198LFvEfb8PzQ4ORlUOkvM8Lm+hn+hFiF2ZNWCUBjfvav7oadWL
mqw2/u2docE12z0o7fepiJbHrkCcQovr2gbdkbvQhbTU68Rn6GjxKb3jSZbO
nSjKQSI+bxst7sf/y+rO+w509NeQ1+ldtLgXZyG3Blc7MnI31LzKS4sHS7Ie
tT/1F6Wm5ZfwHKTFOb0HZMRCW9Bcy17pPiFanLdL9UvkaDN6drR+r80RWtz4
7QUKZ1oT+kJV6fFSpMVt/JwM7UwaEVtgnlM0Totb/3jHd7q6AVmdOMz+SYUW
d2wbuPpUoQHxBrOqdmnS4pLPzjAti9Qjp5OPuue0aXG5oF7lH2frUMPA1EOW
K6Q/hm11Yed+I59TjWknjGnx/RH3SznMa1H3kLLKeTNa3EHlhvd19xokH57b
dfMWLa5HP69ExFWj8ZEotnAbWvyVhvti13QV0nl5zXHiEenH8eLDs/2VKP10
wy46L1q884NHS5ZkJWKcVHrP6UuLs7MZ8nx6XIEKlIU7zwTT4syjQg8J6W+I
/V/kA+NwWly6M33DI7wcWb9i3uXwkhavH3+Lji+XIf6ZidNv4mnx/FyrYWpD
KXKJNen4kkiLV8tn3wxVLUV/1OodfqfQ4m7rjXaqrgTyjc9+t5ZJi1+PLu5t
dihGk+dcdugStLiPzbN02e8F6MzSeIr1N1r8zC6pvKaJfJSQaIx7/6DFq47m
r1zmykeXV3D7T3W0eBKHKsMh/zyUmZS1/ccfWlz+Yes6S3Uu2qYtmNL1lxZX
lyhz2vZfLvqasq2NhUrug4eO3etTNtqj42wnMECL7wzuiE5mykZ3N8ZY5Udo
8XKj85aHzbOQwOXf6NY0Lc7X+rE0Seoz8qN5kURQ6HApt55Unc0M1JfOiFro
6fDVt7XM3WvpSFHP6e8EEx1uJ/vd/wdNOvqXacjC9R8drnn+tEGGUBpSN/j1
VmovHU7/keWrmPJ7lMgAmBonHY7v01BkskxFukYHbR0E6PBAwdyRle8p6NO2
COYAITpcfU+RTxwlBTFnM7x9I0qHx0ZO7yjFk1ER82jzb2k6/PjRuIqsP2/R
oS8fT4kq0eECvANJK+gNUlrjeLKqSof/oguZ2/85AZmCx++as3T4CtUjKVYk
AcX/0Da7e5EO3049fzxaKR4VsxakwRVS/+65tvvqcajzgsA8mz4d7igZabhb
NxZxts74ZpvS4VNt2zIqnr5C8jwG9T436fD6B5NPrn+IRrqm5Zy6luT8XaMn
B5ujUMRIePryPTq8sXuw9DuKRLtWZBqxx+Q+qvtnAgwikCQWy73Lmw430kvk
/vvxOdL0pL9F9aXDQ2M3XZ+yPEfPmJuXvILpcHt7vqv368LQey3s9OVw0v/D
qWCDk2GoKiz5mdBLOrxAtsWcKTUUMXA5HqiKo8Nb007MnxIOQYIm3ebRb+jw
9adOv914g5FS4plPVsl0+GHj/HBRviDkIcahvCODDjegXNxWKh9AvsvzLXWK
yPkFIiq5vj9FXI/5sw6VkvOM5pUMrfoi+W9+a/Pf6PBphphoXM4XOZ7TD46s
ocP37dp/tI7wQS9Cyv5a1tHhPnIj+gk7fFDOH1EBhT90+AJPpbS8mTeaMVzN
7mynw3+opGfTc3ohtoTrGxnddDi3XIxEr5snkhyoPvO4jw7vVuPp/DPogayt
Y9oExki97/euZAc+RsNuilvmK3S4W4PDiIOrK2IsS1KX36DDGc/doQgHuiBB
hh3hzDT0ePD6+595Sc7oelCXYDoTPZ5Ep5ztPPEQeTao3n20nR5/9el+mTT3
Q5SwN/PLeTZ6vOKMmVKztiPqinPXmOGgx33Ml2w36xzQeu/Q83Juerz7orPm
fk4HxCV8oes5Hz3ubrnYo2ppj/Qy+WzlREj9khzVffvt0J+S0heucvR4Skez
2YTtPVSPNeWdVKDHR3QrDjhfu4tqi4b/LmH0+HSfIQ/DVRtU8XUnl4MqPU49
peG1fO0OKj158NSxs/T4lDgGTbZWqCj/uNG0Jj0u0RBdHel/G+XmGcVbX6bH
PV5VdTQ3WKCs47aEmB49zr6LYXczxQJl5nhTRwxJPTdjo0o5c5SSlXbw1g16
XNC2/u/LvJsoMnM5xdiOnGc8RuQI5TqKOLK9ituRHpey8X3+19QMhabzjbY5
0+Muo+ds276bIr+0M+K6nvR407k+RQuVa8hH1EBzzxN6XA7b8feupAnySLWx
afSjxzULWDn/CBgj55SIj+dDyXpXuxbXQ4bIUSi1fnsEPW519ZKHuLQBsksq
nKmOpMf3+2wx7FTTR1aJfTJqr0k/vsqchs+uIsN4qXzIpMcXw3+O7LO8jPQO
qLRtfKbHS+jK9174dAldjr26WphL7tNdquTXpg7SfOWuKF9Mj199GdRUk3ER
qXOGGy+WkvvgOMQ9tOMiUolKds+poMdzBfPt3ey1EfaytlSqlh6nbfZIr4o9
jxT2Unun6ujxTk/HA199tZBcxBxtxh96vHXf3dO4iyaSDOdSFe0gz4tMR2ul
mwbiC7b8KTBGj+Paklo3h88gnh1uYz2T5HmrOpv5Yu8ZtD8whDV+hh43Xftu
yX5OFbE9y9PiWqHH2XryNearldF25uq7rev0+OYoT27vHmXE5NcV8pLCgM/G
/GsTu6WEaHzpG9mZGPDCkaPfFjhOo036/XP1rAz4gPuD1J0uOFr1Ft8TsosB
l1ipXLv+DdCsp44uKwcD7vLKTu6DJ4b6HyW00wkz4FG79u6/ZX8STblWHdwt
xoB/N/Y9+dZOHi07T1sdlGTAz/A1fMt3PYF2OuJruBwD7uvO+G3x/XG038FS
WVuBAU9s5P9m81sWHbILDbiGyHyR50f012SQ/F0qt/sZBhyPlX2paXMMKVkz
3QzSYMDjRs9ZFH6WRlpWUumx5xnwkmKXU9YbUui6uYdioS4D7uFCw7OpcxQF
mvAbL5sz4JnizkyVr8TQSyP15G13GPAip6iiIH9R9MbAdnLfPQZ8eb5Nidb7
MMrTLX10/CEDXmt8YvJShDAqvTxSqeLKgJtuo2ew+SCEanTYdl5+zICHdn94
975GEFHPm8bbPWXAad0yuSWED6ExTb8hzwByf6/nNX9eO4gWND5JhoUw4H1V
ug7ybwQQixqF+BjJgJ/y62IwVuBHxyGhZ+IdA+6ml9jznxs3wrEqkfUPDLhP
EPujFiMupHFq+h7rJ1KPnWLHdJYTmZ7AKWL5DLhw6Sz//GkOZHXcUv1kEQM+
pv2QrlVrH3ogExqqXkrOu/74/qMbe8nvJSq/RRUDzqjGsxmQtpu8f0y3HWsZ
8JQNp2Wsgx29Fpf6/KSeAbee4PFW2sOOckQ8Tie1MuCnO467rsSxoW4+/uu9
Iwz4EN3nrYBd29HIAfW06QkG/DKjk5PcIAua47ad3ZpmwK0KhxMXvzMjpv2l
XrwrDLjirJV+c/o2xL5vpPrIBgN+uG+8f8cnRnRgD9tujIYR11bwux5SzICO
sZm+NWRmxDVuWbTVL9AhxZ1+41Y7GPGbDRJstXx0SG37JxmX/0i+WIB8dWiR
EROlIoqTET9G5TZuraegp5SEgWZRRtwy/+RrOu11TDeypPP1EUa89OLi1ID0
GiYs2dV0W5oR54mIsqvlXcW+G3JVbsgz4lW5l0pY9y9jL2fli38oMuLXG+Ls
Yw4tYbf8r+aG4Yx4udJy8mv5RYz+S0SykDojHiro1x7/aB5r0sqO+3eOEQ9+
kjMwkT6HJQ00vCi4wIjLGau90R2YxZTZd/lqXWXEU8/eC1S1msG8bPzNH5gz
4g63rtBcfjGJ6dCnmoAVI267Qx59ujWBCcR812W+y4hHXXA7OX16HCutolOL
e8CI864sqenwjGKh1w6ChTMj3hdW8yOScwQzXcRPSD9ixNPUOHuYBYaxrUPu
IpU+jHiT58CTUc1B7PfXWL4QP0Zc2HZaKdp2AIu/WMihH8iIG90qUd+I7cfQ
4+Vtk88ZcZZDBnVPd/Zhbu12I3veMuKNKv+ruMwDqVq7MC7p7L0POddcFEIS
JTci2a+WIXOng1CmZIhUEiJDpYwhQygUoi6SbpIM57iGUpkqGRKZZ6KIiNB3
vr/XWu/ze9Z6/nnnORRSepHJhYT+3hwKmCgqcdKP9yAxvPBzXj6bx0D/mtSO
bsTcN11HFlFAuzIzeXK0E0U1cddQSiigaOzw8HvHZ2TtJF/eXM7mOzjcWt/a
gZbiXR8517D321/IMJlsZ6c7PEvxNQUi/2PdkuNqRymVD1N/1VGglk/YX3tH
G9o/NXAjppkCR1s+FJREtCBffVv34j4K7H+fbtfI+ID0egMcrwxR4M2iyHr/
De+R0MVUa4MxCmQLBqpFv21CxdmfjLq/UeDKbkbz6wsNKFT9p3bODwp8ahv8
Nn2sHh1tFtDwXGDfh8MrMdi4Ds2tMhS41ijQsKwxQjV9g14mnZd+vw4DD6Ed
HjJOr9EthVixlA0Y9Dubufy6Uov2Hm/k3rURg5VnxYPbW14iz+JDU+ZbMBin
l6qnlVchesMl7vOSGDB9GCqbDCvRrv7H8lEyGKQNV4+OjVegcW7+09W7MJgc
lw0asGSiN9sORX5RwiC866v/v9Ll6KHapdwFFbaeh7qT2lopcnDqHdmFMAjd
lyyw2PkCafrzbTDQwmB4fOKcWFcx2hKnK+N0CAP+ikaJFyPP0WdmvmPqYQyK
i0pND28tQiXNPdeKTTGonIxHNgbPUNLoX1kfLDDI/qh7aC2oEDH4/fo22GPA
aE1LzOf8FynK5a9JOmLgc/oyPfB+AeLR7NlKnsLALb7F0pD+GNWd1rH18sBg
f8vb25IdeSjnqm/gTS8MZkq/W/YW5qLQ5Edpeb4YlBwQsZi6k4OghtbZewWD
2tlV1uPoh0i8Q/vX0nUMTBTIOZ07D9DK1EURoQgMkhQ1n/D/m43KNnVbGMdh
0LLUl7C4fB/dVqRdPJWIgb2rxUZ1pfvIR1c76dodtr7YXzKhPRloj2deS2km
22+xslUX9z3EE/5ltuUBBoWN7WOVrDQ0eZeX71suBlzb5MmxgFSU89bniEwh
BpTMKfVVmTsotCfX42AxBvOd7hHxvLeR41zXTesyNv/OHrchrmQkLqHVFF+N
AYiJKVQIJaIVFZ+vj2sxMNBSl9675xbqMsqlvq3DoE3h9YKBeQK67bvRcLUZ
g0tRQtakdxzyiQG3Te0YiE7Z983/vInMsr0jlDsxKIh1CXSLikG87ztfnx7A
oFrwwCalkRtoaohnJHQEA46NNZ5fHkWihqWDXPcn2Hns+t5sejkChW/P0f40
i8FaamwUNz0MOWt0npz9iYFZws6qIMNQpG3Kc41nme3/605GsmkIWgvyqtLm
xEF1oiS6PeQa6r71T68dBYdgH8K7oyAYMfM+r16i4jA+/PXVueqryLdNk3zK
j8NR2rGyi2+C0NHJCzYNwjg0RQdpKjsHor0c/wSMiOKwd/5j3if+APRNgbtc
TBqH7PITo60Zfig/aOKp9A4cJkXdz6sG+yKXd29zFBTYei+fi1zwuIi6PUKT
NJRxEKbW8wh7eaOUKsdoHTUcHKxqTjwK9ULmf2ldN9bAQfNbl/hs9gXU8Gz1
vI0ODm4rR4I0V8+jcM7uU076ONQa3EkU8PVAWuZMuzPGOIBI2XQ/xzlUNu9r
HGiOQ1TgKVXCxB15H7LQDrHCAW/6O4ZFnEaKt5XVo21wcPYMaUxrd0X/qM3I
3nXCwXOsxtMq1QU5RL7f+sAVB4aU4LrLcc5oS2eB4OMzbL8lTa6jCU7oVsBp
TpY3DtZxgqUXmCcRvVF/6aUfDiqXJ2RH+xwQsUV2piEQhwPMS2MVvA4o+L/B
nq4QHLiCtsr7CNshkrembTCCzX9LFw8vsEGL9pmNk9E4XLp2d0bkqDXy4LAt
X05k8yern7veboXkTQ8Ucqaw6zloz/UCSzSStSmXeg+H28cnLjnfskC2Ou1J
og9xyLC/uI0Rao42JT2PlsrDobrlt4RIohlqHU64Ll+Aw7JiiNrXR6bIKJzu
eaCYzXOSK9j95xFE6djlql2GA0dCnV/USTqq2cFtb1SBw7DfuEnfqAnaX//W
2LoWh8GMQQa/pBGa35yj7ViHg28sI76kwwA9dQ9Vd2/CoSxWKjQ+XR/J8mjt
CGjDwYTnoHKU9SE0aCshfv0zu06cLU+h66L0J6uCUd1s3gdUiTIjHSR4hMmZ
NowD/UxEifA5LdScmbKUNY5DfH167GwyoOgZ35lHUzg8DE0TV7t6EHHeUu4t
n8fBdq3kiZgXiSoH+dprfrHz1Hd0PoTQQP7KM431KzgwixJV75aqo5m2gvJO
LgKEM7KsJtXVUMH26MIBnADSWwWe8qkiV9/TuRM8BKiOpRpoflNBvSKyyUuC
BEgqO8kLftuLUt24YtZtJsCx6rWL5u+/0dHywevEVgJGbeomBQX+Ro3WmZ6b
txNwn+M1OfBBEZno+oh0yxHwS/MXOJzYjZp2G1Zm7CJgS+SrLReWFdB7jjlu
GRUCwukZKWe8dyL65NuiUTUCQJHxwkNDDn1ovXf8kQa730ZyPkVoB2rO0ctV
1CHA5N2bjuUpGcSIF6PP6hFQi19U/TEljT76z8w/NyJAMIeTI5VLGrWYpGmr
mxFwtpRjg+7hbchM9fzEbwsCvBb82B8qSdQqoRtfeZyA/fpnN1I0JFDbj+ke
nZMEVNu8lG9y2IKOdr8MpbgQwOk15z+0VQy1v76jUO9GwLfNRSLvXmxGlk/P
tkSfJWC+QIa3K24T+pSi5U/3ZPPyiB4fChBBlteFJfl8CLD0vGt465Aw6jjz
9U2rHwEeCSUpICOEjllUn7sdSECbrfyahbEg+qyZLHj8KgGDqVJidGkBdEzO
nSUWQgA9LGzUQY8fdfIddOwNJ6BZ4W38l+t8qGt4/KlTLHvfg4UuGu9oqDuK
NPZIJ6Cu50v/Y0kqsvXh+6GURcApjKGqm4WjHrvRlLmHBOSFe/lvdMGQvT7r
YEkeu997PKT2HAX1KsWPXiogYKXB38zRcgOyF3W5qVHIvp+vjZ+5JBfqW39A
Ze05AQe+2vDVKq9HDtO8X6pL2e8bniqkK3Ci/k9D10JYBCwX6baLn1+HHKrL
5PSq2PmKkXuQmMqBBh7d/IC/IkDO4Nv6dKs/pGOio2/jG7b/+qaeVbE1cjBI
bWtsAwHOkzPqJ4pXSMdTPLWM9wTsPTVWWyb1mxw6MuAu0EJA0G7pqUC1ZdJZ
vYTvUzsBRwv1ojytfpHDUtFlKZ0EBOw4SY3ZtkiO/FShiA8QoLT9TBiX+E9y
tK7X/ME4ARlh6WYaZ+bIsbuRWXIz7P4aHterh2bJcY+9358ssvNgdu6r1cbv
5IRWN6n8h+3f7omU1YUpclIwPKqMQgUVN/PTVXIT5NexPZ8RLxV8Vlfyy4ZG
ySlm5/ZXQlRoS6++Fv9shKTGFNRMbqVCk0KYqVXVIClnd9WOX5YKwQJ/tnSO
9JN6imZL6opUODvtbP1hWw/p9Ecm+aQqFbovzvKm9XWRwc2LSjc0qcB03HDw
VXsHmZHV0FSoR4WyCOn5bJE2cje1OK3WiAoNgrQbcpmtZIVXuttnOnt+T7Rs
GEcr2aXjycVhRQWKv0yq6bGPpNCoEHnElQop1rF7B0TqSUYkyzvDjwq9R5Yq
g53qSY/jsbQ3V6lQQdd+d3ighoyRP/l4OoIKHLX7Z1ecqkmxRCP/dTFUiI3D
tMiXL8n838r6QvFUiHnPOHGzvIJ820QZIlOoUIj3LccVlZKW+2YKGfeoICmu
71QYzCKH0zuvON+ngujjrsLnYlUk5/kC0Zg8KoSvSSkWeZSRmnxmZl/K/j/f
NW3hUEIWW6TX+HdSwdZfIjOtJZfUqQyPu9lDBVWvGiF8OZ9skfW0yxqgwj3l
O0ciF56QM4vaS3UTVPiVmeO+IJZAKqSNK21apsLgs4W+xs4sMrtX+X6JKDfM
d1SZyNQHkwt9AuJh4tyw4j6nkpwaRhoNzN01l+KGLf3CRRUKUeSPoed3ZnZy
g8rzIO4mRgKpNaEcJ6/ODRP2nTkbElLI/jnlKxlW3OCuYvzi6vnECglCxTY8
iRv+NqROVjGCK+4pq2yy5OWBaPpFlwN6lhU/D64PVFjlgUPHa6ZRwfqKIdqP
bCMOXjCTrtcJMfmHJcQXUSf0gxcUO3YH0fwNWbFq0hcOL/DCvnUo7gVTn4Xb
V20OW+aFYEEL2UxRPdZy/qL7PCcN/IpY+Zq7dVi9um4bWwVo0EW0o6xOkpV3
ydAsfh8NPHUUFJoNlFhkP3c31Z8GGlN+nNtuCrJeUPJCtS/T4JVd5yR1qwBL
cbfu7oBrNPjRfX9vwBs+1raAoCsTN2jglLnmj1fysiiC05J1aTQIK6UlRC5R
WM36713CKmgw/VFvsjR1iWno4c77XzUNJuKiGsmGRebLJErpfC0NYowbVjXF
FpgvBjRx53c0cC5ZwruF5phpgU/ztXtp0LQUT/z2mGIKZBubBwzSIDup7bHP
6UlmTN3Y72ejNBiJ/pffLXKceUVI8vC27zQogxKTsp0jzEWNip/H5mjw8EbD
bHDuENPT8VhG/CINHiXe4UqGQeZk5Lxe3W8aDNgoinDP9TOdnsZ///OHBv+p
b3RVC+hj/g9XQvkJ
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1:eJwVV3c41u8XtvceJWUmZVQ2Gc95jKxUEkJIyKqQSpQkJMn8JklCVpKSkYzy
ochIGfEaIXtn7/l7f3+9133dZ97nnOe9PiL2HiaXqCgoKAyoKSj+/1ttK/J3
Z2eHsJupuj6w9BP5C6kZea/uEH1tYwUr138hlT7TkqnZHaJiiM2MbvEXyr4Y
+qSzn8xrLX09vN6Ioh1n9Aq+7RABNPEfy9mbkcEBxo8Sn8n862OR/OeaEdWI
qGhK4Q7R9LUi8L/kZnTT2XwzPIOc73TA/VH5FmTl9uWD08MdwnOJ5Jjk9htx
S7UL9NzbIYzvPtU7W/YbNUzOhp312SFmbb6Y6LG2Irgqdgm77hAf1GRidgpb
kZjn4z38J8j2cxocyjwkNH3TMvAnG9n+btaJw7s60Wul6zPa9OR8T2qMD93t
RHYr4dalO9sExzA/y8fhTvTbp0Lp9ew2Yewq/SuhrAsV3zk4GdCyTcjs1t7R
uNONrqlrWqzUbxPCTej9lZluJLllVX312zaRQqN80+ZSD3rpH5lsVbhNNNm0
MyWb96LA+0tnFeK2idlbFwveHexDalrsldmRZPt2uzcSrn1okUriiMjDbSIg
hiny1ds+5BxszcDms0307bb1fCLfj4wefvs8akn272KwHjk9gHZFxBx4IUCu
7+4zk6wvQyj/dKCOB+82YeekSSrYPYxOc1130GbdJj5EsgzKXh9Goc9MX01u
bhEy69psiUdG0Mar3QLq3VtE05FPlvWfRlG8I4M6R+sWQUG7fIJZcAwpHFyz
GvqxRXBYmTb8ezCG3HO64sPLtogP1iFRH6zGUV/RS56ehC0iui+2oJ9vEvn5
Rsrn/UeOV6fEPRg+ifao3zN5EEbGLZaBpVRTyKTSLvrw7S0iQFYwmn5xClX/
2M/ib7lFzJpF/x38N42y+95QC/FtERUPxIdTU+eQblqC6AL7FmFcP/GK698c
Grz0WLOGnhxP7vfptyrzaN/klXseK5tExXOTPpff8yhq6egGQdokZF5cqY/Z
vYiki4X5Y39tEgEJnSnVlxdR7W3OYy7fN4kUgrlEt3IRUVEseHMUkf11I6l1
PJfQDaaiebunm8SHBqWlj73LiONnJqdiBBlHddv0aqygd1HPZBgfkO1tF5z9
klbQCI+ve96NTUJY51fXEcdVZCmkPkFpuklE20X9R0+1jpDC1/5ULnL+v+xa
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
         "]]}}}, {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {"\[Mu]", "Torque"}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, Epilog -> {
        Line[{{
           Rational[2, 3], 0}, {
           Rational[2, 3], 1}}]}, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
      PlotLabel -> "Normal distribution", PlotRange -> {All, All}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]]}, {0.010000000000000002`, 0.05, 
        Rational[1, 10], 
        Rational[1, 5], Rational[1, 2] 3^Rational[-1, 2], 
        Rational[1, 2]}, LabelStyle -> {
         GrayLevel[0], Bold, 8}, LegendLabel -> "\[Sigma]=", LegendLayout -> 
       "Column"]], {0.75, 0.55}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.684540636301993*^9, 3.684540647763238*^9}, 
   3.684540677807744*^9, {3.6846344349702787`*^9, 3.684634461850379*^9}, 
   3.6846346558660507`*^9, 3.684634797252331*^9, 3.684634832733811*^9, 
   3.6846349443414288`*^9, 3.68463501884871*^9, 3.684635055904681*^9, 
   3.6846352896101913`*^9, 3.6846356802838593`*^9, 3.684668007498163*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sigs", " ", "=", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.1", ",", "0.5", ",", "1", ",", "2", ",", 
       RowBox[{"5", "/", 
        RowBox[{"\[Sqrt]", "3"}]}], ",", "5"}], "}"}], "/", "10"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"TODO", ":", " ", 
    RowBox[{
    "place", " ", "legend", " ", "inside", " ", "the", " ", "plot"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"TorquePivotTriATB", "[", 
       RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "sigs"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", 
     RowBox[{"-", "1"}], ",", "4"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{"sigs", ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", "Bold", ",", "8"}], "}"}]}], ",", 
        RowBox[{"LegendLabel", "\[Rule]", "\"\<\[Sigma]=\>\""}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.75", ",", "0.55"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Mu]\>\"", ",", "\"\<Torque\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Triangular distribution\>\""}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Sqrt]", "2"}], "/", "2"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Sqrt]", "2"}], "/", "2"}], ",", "1"}], "}"}]}], "}"}], 
      "]"}], "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<../abecker/SwarmPublications/JournalTorqueControl/pictures/pdf/\
TorqueTri.pdf\>\"", ",", "%"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.683656192718853*^9, 3.68365650959415*^9}, {
   3.684533201990088*^9, 3.684533227629901*^9}, 3.6845336018509903`*^9, {
   3.684538398449457*^9, 3.684538398934102*^9}, {3.684538872647613*^9, 
   3.6845388887736807`*^9}, {3.6845392008597593`*^9, 3.684539232440401*^9}, {
   3.68453938540254*^9, 3.6845393866137953`*^9}, {3.684539430208269*^9, 
   3.684539435555996*^9}, {3.6845436780615*^9, 3.684543685187031*^9}, 
   3.684635142165762*^9, {3.684635208962812*^9, 3.6846352179362793`*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
b1XUD1sifYll9XF5mfT/AUn1VAA=
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxN13c8VfH/wHEjlFDJ3iOrgRaKvI0IJSFSobKTUVYKhQpRyEg2ScomZMSR
nWtvUoTrLvtGkvG738fX757v+ef1eD4+n/O5n3vuPefxOKJWrka2dDQ0NM9o
aWj+U3Ky4retrXmEZvvoeW7V50pGXez5cmxsGvVd/cllpB313Hq4mH8iauL1
aR8aRdQTvLGytC5zVHfFLkXTjc5QXU0b327jQaC6Wai24rn2NNWEIwpxmdKT
VJ+0kmtWDx+juruV3FCtOkz1S/6ItFX7Hqpv0oRoCuqjPoH1n1Y/hno03+1w
2Ho31Qc1TMsFX6FucRDs0qjsojpJn8vdPhX13WN7uF48Rc29TmPefxE1Ruhb
Z2dTJ9Vu+EpO3leo+Ypzr1tdR/3VJyU9R6ITeSSVmXb4n46qg1Yk7vd8B9J+
tZp0OfWB6t49gUdUKzuQQ3lMriLtsaqfh9zdg592ID6setweSx9VLd/aVnRd
7EBkM8puc9lXqDI6Xdni5e1AqgTfqXGsN6rmn9TVsp5sR2p7HHFzD7pVTbZO
h+XmtSN3jF/UaQuMqK63HO5evt+OtN3X0liKn1B9FyXEDRrtCC5Q0L89mKB6
3nyvRQhLO3L1jIBGxNaC6pIEXUb3QBty+hyNedb+FdWEeTKeL70NKVhxrZvc
v66qXoGVtbnThnQf3Ru7/pwW8IGDHnkn25BBo0nxjmgGiLzwrXJlC4PIEnfj
1Y4ygyJXFY1aKwYZfjKlLOe0B36O5Wo/j8Egnf2TX05lsUPQx5QXPZYYJHmF
aZO8wAlH3CN7+GUwyC1iWPjxN7zQpxLIY0tuRf6uJCVi0wXBl9HDMr+6FRE6
euKjzy5RONBl++5PcCvCWcG6cNBbHDDxV4hqRq2IXdmi0n1hSXCz1pUPFWhF
1jBefIO0MsB3RNmrd/obUpl0/NBX0cPwdeXwF4Gib0gFpoY2N0AOHGqF6Ox8
viELflf4mKKOwmdjuvDVPd+QMk+WZ7uST4Kl4O9e9ZEW5PbqmJPhsCIw4rC8
Ye9akFfq++XrlE/D5YffMgVPtSB2zk2eu70B1jWrSHb0LciDBy7njhxUhwzW
vKOF7c2In4ba0FieBiylRVZrWDUj3MwXk81XtSDHM1tWWr4ZEcx8K7eRdg5s
9BpSWTebEKVf1b33LXVhgPwnYCi+CXl0sVXwH68+RLTsI1fbNyERIesf6XkN
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
CYgq+66j9sPpL21tof4/CejLag==
       "]]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
rg==
       "]]}, 
     {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]}, 
     {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxN1nk0lO/bAPCxJGWpfCWEbFmyVbYJucZSqRCiVQsSUSKRsoRkC6EsRUiy
J1LW8tj3EB57tjEzxthF0sT7dM57mt/8M+dzrmXuue/ruWfErG+b2TLjcLh4
Jhzu7/vSK/WmjY055HTu9jbrbHPoDLHuvr00hxgnnjF23GUBH9zCR0bIc4hB
xqlP848twNmIuIx8nUMq9HNDvezOwCw9Qtw3YQ75IGDwclTrHExdJHvi1OeQ
Eu62QCFlS2g+tiPIed8cQuBqVpUttYQsZa3oUeE5RBlXwT9EuAT2HNGZlaxz
iN+v4a/aFpeBXHYY9e2cRSQGRUREj1+FcYEYRSanWeSl8IuCsvfWUL2p8pCL
1SwyOhsfGo6zgdcLU/pj5rMIm7S6pIGZDVxtIlys0pxFttj9rL6/agPDHtNB
fltmEcVrEp2Lp2yhv1dvjOntDGKqz2F+Sd4eOmIWnzEPTSNDUvu+CqU5ga9S
v9C1tmlk9ibehix8G/Y3IW/rKqeR1qr5TQvxt+EpPaw4+O00ck2+gNn+uDMY
20gPct+eRjIIil4LJ1ygZb+l+G7maUTH7U3Q9Vuu8KBZN8frBw35eUHyWtFH
V9h3TVZlmExDCpo2ZgvprhAat3LkdQsNyUptOF8ecRcM1iNvSMfQkChSWghP
uRvUt9TlK8vQkNm6cf+Xqh7gbpt7KEaQhrgHqy5IB3uA1EZ09QonVm8xqeo8
6AGPD17tLl2YQnycb4epBNwH/RdrP6F8Cik+wXX3zfADqL6uBIbGU8ixzO5L
ncXe8IXpxddrd6lI1JU/3Ak4fziYdNzqnR0VIW1GFxsO+kO6xtqP5QtUZDY7
rtzU1h8iXC8KBelQEe2oeDPvFn+4TBJ2zOKmIq3v3ywfTnwEuKZU9tnMSeTU
50/s+aceg25krt697xTko4m37HtcCBTJX+pFOijIkxSxdyIQAvuauBzZaynI
/puBLcveIcDDfDv6RTYFYZU2VBqihwDR9cBY+T0K0vJ7fCF6IxQCzhb54Hgo
SGIWr+USfzg0iFSWhhwlI9OySXW0tkhg/akqy6NBRradK63Y/yMSCO058S8V
yMgDton0XIEoKHsYdy+Hl4xsoY2RjttGQe6ok+rXcRISzNITLLIRBZGpwgXb
H5IQqWWTT6cPP4NzUp6ZccUTiM0PYW12Ugw8X5/fJZozgRQE6Jvc3xEL33qu
B2UmTSBRrScuSWnHwokgs+uljyeQTaHOW1TjY0FrUlZy8PQEwj7tzit7Kg5E
s/uSReaJyPt2UYOnjfFAVVCLeytDRLYouZU7TSXASqFdwJ7dRCTgnexPYYlE
YNZ44fKCi4hwhmwuF7BMBKGj9JPhi+NIUphl1s+2RDC5XI1z+zyOrGvia8xK
XkFRhLGDvsk4YjctwFz4Ihn8564fJt4bQ85ydirptr6Gp27x+y45jCHWXBaa
z2deQ+Lvpl29lmPIp2irmm3bUuHTZoXFZp0xhFq7N/+RWSpM7llK/8AxhoQz
V321GkwFY5OH2/2TRxHu8rtpXMtvQNVaqUEnYgQJJ14R6DNIhz5XqWIWtxFk
trqQe/lmOjx4LJxRd3EEOT01s4iPSoeKTI6g47IjSNDVgUHVgXQwmKMcNa0d
Rg7w/brP5pQBll4p9VfXviM6rPc0dr7KhEexO+ofXh9C2PsQW0+BHJDKZC/S
MRpCzsvdbknSzYHG0o23LCpDSKWOUgXNMQc4v888DmIaQtQ2ZyQxIzkQK9F8
5GniIHJbdCBGyi4XsvP965I6B5Ak6r3888g7+Na8VPtFux+hWM3GbRzLB168
db61RD9SVlyaeMAqH8687UjYzN6P2Ae7RXs/yIehh+/umH7rQ9YPcgfavMuH
SRU7UZJNH0Lvn2e+wVsAuOQBT86QXqQNnaDbUgpAybXq4MUuFNlR1qn1+HUh
hO9+mrJq14nQhvcc07tRDFdxwXrCRp3IdxUOu9rgYlAh+ZJ1DnYiv2+1frHK
LIahvDvyT+jfEBm6ru4CpRj26Z4pEY76hjzNEmO3tS+BRnvhDt2yDiTXNC8y
26kU2G6e3RAQaEPwYkbfN0WVw2JK5Bdd6wbEhk1MyYC1EtyTONi1iz8hyyu/
bsoeqAVSVGmbemsMTI907pYsaYTAYeuL+u0VULGXkh5OagUq8VTiGNoCkh5/
WLivd4CMfkqGaVY3zHJomN016cTm485O7+puSOjxNuQ72wmZv/UeZQ52QwdH
63rhpU6QKaRc3uBCoTql1n3coROkxZX43t1BwX6sQ5zjcSdI4SoC2LV6YFA8
azSwpBP2fh60Qtp6Qbx96RWLUBdMxL1rn6L0wrEStic84l2Q5vrwMB9THwTb
cIQKyXSBpJyEwC3lPrCgSWWJqWB+6dAhGN8HJfKmA3MnMXv80na36oe6wTrv
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
3Nhg+P8ApNzWTg==
       "]]}}, InsetBox[
     TemplateBox[{
      "0.010000000000000002`","0.05`",FractionBox["1", "10"],FractionBox[
       "1", "5"],FractionBox["1", 
        RowBox[{"2", " ", 
          SqrtBox["3"]}]],FractionBox["1", "2"]},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox["\"\[Sigma]=\"", {
                 GrayLevel[0], FontWeight -> Bold, FontSize -> 8, FontFamily -> 
                 "Arial"}, Background -> Automatic, StripOnInput -> False]}, {
              
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #6}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontWeight -> Bold, FontSize -> 8, FontFamily -> 
          "Arial"}, Background -> Automatic, StripOnInput -> False], 
        TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold", ",", "8"}], "}"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"\[Sigma]=\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.75, 0.55}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"\[Mu]\"", TraditionalForm], 
     FormBox["\"Torque\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Epilog->{
     LineBox[
      NCache[{{2^Rational[-1, 2], 0}, {2^Rational[-1, 2], 1}}, {{
        0.7071067811865475, 0}, {0.7071067811865475, 1}}]]},
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
   PlotLabel->FormBox["\"Triangular distribution\"", TraditionalForm],
   PlotRange->{All, All},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
b1XUD1sifYll9XF5mfT/AUn1VAA=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1:eJxN13c8VfH/wHEjlFDJ3iOrgRaKvI0IJSFSobKTUVYKhQpRyEg2ScomZMSR
nWtvUoTrLvtGkvG738fX757v+ef1eD4+n/O5n3vuPefxOKJWrka2dDQ0NM9o
aWj+U3Ky4retrXmEZvvoeW7V50pGXez5cmxsGvVd/cllpB313Hq4mH8iauL1
aR8aRdQTvLGytC5zVHfFLkXTjc5QXU0b327jQaC6Wai24rn2NNWEIwpxmdKT
VJ+0kmtWDx+juruV3FCtOkz1S/6ItFX7Hqpv0oRoCuqjPoH1n1Y/hno03+1w
2Ho31Qc1TMsFX6FucRDs0qjsojpJn8vdPhX13WN7uF48Rc29TmPefxE1Ruhb
Z2dTJ9Vu+EpO3leo+Ypzr1tdR/3VJyU9R6ITeSSVmXb4n46qg1Yk7vd8B9J+
tZp0OfWB6t49gUdUKzuQQ3lMriLtsaqfh9zdg592ID6setweSx9VLd/aVnRd
7EBkM8puc9lXqDI6Xdni5e1AqgTfqXGsN6rmn9TVsp5sR2p7HHFzD7pVTbZO
h+XmtSN3jF/UaQuMqK63HO5evt+OtN3X0liKn1B9FyXEDRrtCC5Q0L89mKB6
3nyvRQhLO3L1jIBGxNaC6pIEXUb3QBty+hyNedb+FdWEeTKeL70NKVhxrZvc
v66qXoGVtbnThnQf3Ru7/pwW8IGDHnkn25BBo0nxjmgGiLzwrXJlC4PIEnfj
1Y4ygyJXFY1aKwYZfjKlLOe0B36O5Wo/j8Egnf2TX05lsUPQx5QXPZYYJHmF
aZO8wAlH3CN7+GUwyC1iWPjxN7zQpxLIY0tuRf6uJCVi0wXBl9HDMr+6FRE6
euKjzy5RONBl++5PcCvCWcG6cNBbHDDxV4hqRq2IXdmi0n1hSXCz1pUPFWhF
1jBefIO0MsB3RNmrd/obUpl0/NBX0cPwdeXwF4Gib0gFpoY2N0AOHGqF6Ox8
viELflf4mKKOwmdjuvDVPd+QMk+WZ7uST4Kl4O9e9ZEW5PbqmJPhsCIw4rC8
Ye9akFfq++XrlE/D5YffMgVPtSB2zk2eu70B1jWrSHb0LciDBy7njhxUhwzW
vKOF7c2In4ba0FieBiylRVZrWDUj3MwXk81XtSDHM1tWWr4ZEcx8K7eRdg5s
9BpSWTebEKVf1b33LXVhgPwnYCi+CXl0sVXwH68+RLTsI1fbNyERIesf6XkN
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
CYgq+66j9sPpL21tof4/CejLag==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
rg==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1:eJxN1nk0lO/bAPCxJGWpfCWEbFmyVbYJucZSqRCiVQsSUSKRsoRkC6EsRUiy
J1LW8tj3EB57tjEzxthF0sT7dM57mt/8M+dzrmXuue/ruWfErG+b2TLjcLh4
Jhzu7/vSK/WmjY055HTu9jbrbHPoDLHuvr00hxgnnjF23GUBH9zCR0bIc4hB
xqlP848twNmIuIx8nUMq9HNDvezOwCw9Qtw3YQ75IGDwclTrHExdJHvi1OeQ
Eu62QCFlS2g+tiPIed8cQuBqVpUttYQsZa3oUeE5RBlXwT9EuAT2HNGZlaxz
iN+v4a/aFpeBXHYY9e2cRSQGRUREj1+FcYEYRSanWeSl8IuCsvfWUL2p8pCL
1SwyOhsfGo6zgdcLU/pj5rMIm7S6pIGZDVxtIlys0pxFttj9rL6/agPDHtNB
fltmEcVrEp2Lp2yhv1dvjOntDGKqz2F+Sd4eOmIWnzEPTSNDUvu+CqU5ga9S
v9C1tmlk9ibehix8G/Y3IW/rKqeR1qr5TQvxt+EpPaw4+O00ck2+gNn+uDMY
20gPct+eRjIIil4LJ1ygZb+l+G7maUTH7U3Q9Vuu8KBZN8frBw35eUHyWtFH
V9h3TVZlmExDCpo2ZgvprhAat3LkdQsNyUptOF8ecRcM1iNvSMfQkChSWghP
uRvUt9TlK8vQkNm6cf+Xqh7gbpt7KEaQhrgHqy5IB3uA1EZ09QonVm8xqeo8
6AGPD17tLl2YQnycb4epBNwH/RdrP6F8Cik+wXX3zfADqL6uBIbGU8ixzO5L
ncXe8IXpxddrd6lI1JU/3Ak4fziYdNzqnR0VIW1GFxsO+kO6xtqP5QtUZDY7
rtzU1h8iXC8KBelQEe2oeDPvFn+4TBJ2zOKmIq3v3ywfTnwEuKZU9tnMSeTU
50/s+aceg25krt697xTko4m37HtcCBTJX+pFOijIkxSxdyIQAvuauBzZaynI
/puBLcveIcDDfDv6RTYFYZU2VBqihwDR9cBY+T0K0vJ7fCF6IxQCzhb54Hgo
SGIWr+USfzg0iFSWhhwlI9OySXW0tkhg/akqy6NBRradK63Y/yMSCO058S8V
yMgDton0XIEoKHsYdy+Hl4xsoY2RjttGQe6ok+rXcRISzNITLLIRBZGpwgXb
H5IQqWWTT6cPP4NzUp6ZccUTiM0PYW12Ugw8X5/fJZozgRQE6Jvc3xEL33qu
B2UmTSBRrScuSWnHwokgs+uljyeQTaHOW1TjY0FrUlZy8PQEwj7tzit7Kg5E
s/uSReaJyPt2UYOnjfFAVVCLeytDRLYouZU7TSXASqFdwJ7dRCTgnexPYYlE
YNZ44fKCi4hwhmwuF7BMBKGj9JPhi+NIUphl1s+2RDC5XI1z+zyOrGvia8xK
XkFRhLGDvsk4YjctwFz4Ihn8564fJt4bQ85ydirptr6Gp27x+y45jCHWXBaa
z2deQ+Lvpl29lmPIp2irmm3bUuHTZoXFZp0xhFq7N/+RWSpM7llK/8AxhoQz
V321GkwFY5OH2/2TRxHu8rtpXMtvQNVaqUEnYgQJJ14R6DNIhz5XqWIWtxFk
trqQe/lmOjx4LJxRd3EEOT01s4iPSoeKTI6g47IjSNDVgUHVgXQwmKMcNa0d
Rg7w/brP5pQBll4p9VfXviM6rPc0dr7KhEexO+ofXh9C2PsQW0+BHJDKZC/S
MRpCzsvdbknSzYHG0o23LCpDSKWOUgXNMQc4v888DmIaQtQ2ZyQxIzkQK9F8
5GniIHJbdCBGyi4XsvP965I6B5Ak6r3888g7+Na8VPtFux+hWM3GbRzLB168
db61RD9SVlyaeMAqH8687UjYzN6P2Ae7RXs/yIehh+/umH7rQ9YPcgfavMuH
SRU7UZJNH0Lvn2e+wVsAuOQBT86QXqQNnaDbUgpAybXq4MUuFNlR1qn1+HUh
hO9+mrJq14nQhvcc07tRDFdxwXrCRp3IdxUOu9rgYlAh+ZJ1DnYiv2+1frHK
LIahvDvyT+jfEBm6ru4CpRj26Z4pEY76hjzNEmO3tS+BRnvhDt2yDiTXNC8y
26kU2G6e3RAQaEPwYkbfN0WVw2JK5Bdd6wbEhk1MyYC1EtyTONi1iz8hyyu/
bsoeqAVSVGmbemsMTI907pYsaYTAYeuL+u0VULGXkh5OagUq8VTiGNoCkh5/
WLivd4CMfkqGaVY3zHJomN016cTm485O7+puSOjxNuQ72wmZv/UeZQ52QwdH
63rhpU6QKaRc3uBCoTql1n3coROkxZX43t1BwX6sQ5zjcSdI4SoC2LV6YFA8
azSwpBP2fh60Qtp6Qbx96RWLUBdMxL1rn6L0wrEStic84l2Q5vrwMB9THwTb
cIQKyXSBpJyEwC3lPrCgSWWJqWB+6dAhGN8HJfKmA3MnMXv80na36oe6wTrv
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
3Nhg+P8ApNzWTg==
         "]]}}}, {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {"\[Mu]", "Torque"}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, Epilog -> {
        Line[{{2^Rational[-1, 2], 0}, {2^Rational[-1, 2], 1}}]}, 
      Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
      PlotLabel -> "Triangular distribution", PlotRange -> {All, All}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]]}, {0.010000000000000002`, 0.05, 
        Rational[1, 10], 
        Rational[1, 5], Rational[1, 2] 3^Rational[-1, 2], 
        Rational[1, 2]}, LabelStyle -> {
         GrayLevel[0], Bold, 8}, LegendLabel -> "\[Sigma]=", LegendLayout -> 
       "Column"]], {0.75, 0.55}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.684538399671235*^9, {3.68453849634173*^9, 3.68453849872439*^9}, 
   3.684538528787299*^9, {3.684538873726265*^9, 3.6845388893641148`*^9}, 
   3.684539204510564*^9, 3.684539388496564*^9, 3.684539436519663*^9, {
   3.684543675549574*^9, 3.684543692218206*^9}, 3.68463446206347*^9, {
   3.6846351646980753`*^9, 3.6846352202940073`*^9}, 3.6846356807250147`*^9, 
   3.684668007960554*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sigs", " ", "=", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.1", ",", "0.5", ",", "1", ",", "2", ",", 
       RowBox[{"5", "/", 
        RowBox[{"\[Sqrt]", "3"}]}], ",", "5"}], "}"}], "/", "10"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"TODO", ":", " ", 
    RowBox[{
    "place", " ", "legend", " ", "inside", " ", "the", " ", "plot"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"TorquePivotUni", "[", 
       RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "sigs"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", 
     RowBox[{"-", "1"}], ",", "4"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{"sigs", ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", "Bold", ",", "8"}], "}"}]}], ",", 
        RowBox[{"LegendLabel", "\[Rule]", "\"\<\[Sigma]=\>\""}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.75", ",", "0.55"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Mu]\>\"", ",", "\"\<Torque\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Uniform distribution\>\""}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", "1"}], "}"}]}], "}"}], "]"}], 
     "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<../abecker/SwarmPublications/JournalTorqueControl/pictures/pdf/\
TorqueUni.pdf\>\"", ",", "%"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.683656192718853*^9, 3.68365650959415*^9}, {
   3.684533201990088*^9, 3.684533227629901*^9}, 3.6845336018509903`*^9, {
   3.684538398449457*^9, 3.684538398934102*^9}, {3.684538872647613*^9, 
   3.6845388887736807`*^9}, 3.684539050089514*^9, {3.6845392360343122`*^9, 
   3.68453924661322*^9}, {3.684539278578122*^9, 3.684539281301207*^9}, {
   3.684539347834256*^9, 3.684539370928897*^9}, {3.684539413266988*^9, 
   3.6845394260116*^9}, {3.6846352309790583`*^9, 3.684635250380561*^9}, {
   3.684635306044159*^9, 3.684635310225789*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
YWOD+L+b5fps
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxN0nk0VXsfx/FjCBXlkQZDhmMKV1eILq6vLrpKMlTKUB5CSoRMoSJdSUIh
mUVmwjFkiC0JjzGkTkJH4nQmjqmQ4fGstZ+922vt9V6v9dn7t/YfW9rxqqUz
J4FAoG/c/+tcmtZ/1tenEQJ69d9zfHd1DjfJ98Hnz5O4PU3HF5Bu3FMr0cSQ
FNx028kgghbuLyIJ+zk8pjC/TZiN4xxmYm7gSOp28qFhbpNoqr13ZBIzTUUz
MWffOOaDjr+3HY7+jLmvY66lQe8j5gdiMZmLF/sxz2bGNvzl2Ia5yLdw/z5V
3E7HWjIE1loxv5/7EUpOwl1/xP6IR98bzHeYKr1J+i2Ydx3qpLAlXmHu5Z+w
eM9swhwxttZcX4d7OVItJ9wKd2O9+sAhcQSzBW/f15jleswtZdxtNo9xa9oc
KpBTwy1akuFef6kO81dLj++T5BrMVitPyeU+uNtzBuuCBXGXLOreEjJ+gVkq
y9NhZLwa8yOTZwb5t3BzL3yQuyZWjTCuB/9TG3RXzy99K5/eiypk+njobWXh
cb3L1eLk+GNVCLK6trT5Awec71HJZ4xUIktxpyl5aTvAclIv4C+vSsRXQ1HA
X1ca/l4zM07irkSa1gIHixqVQHeXwx52YgXiLxwrW6ukDqr7vb8dUa5AYqz5
NZwJ2iB7JKwmrZGEmCkk8auw9WHP+fiIeQsS0rdEoJs4GwG/X85Zk4ly5MSz
P9Vi7I8BIbp6X1ZAOdImbzbxfdQM5nPaFhe3liNpTcmhr2YsgdZAbjfLKEO6
rBffJGlawcgg7UmuWhlCsG8C7kZryP600Ld8vxRRfjs7RYg4Bz462kJWH0sQ
/aBOP/KMI9i52ZG4CCXI4Ok7EiRtZzBKuWlZLl+MuLjMUt49uwi7fjY/4vcp
RO4oTlUtDF+BNaUJtbrkAkR4OKh9rvAqUG14By6+ykfMHD8H7jX1gpo6kx2v
t+UhH8XUzC09fCCT7l7heTAXkXAYjx7f7Qf3RGNPStjlIP8+PG0j0u8PNoHv
4q4XZCMT/btSvAOCYPWPc8KqhpnITGr/iHtrKHQOrLnWD6YjMUUJpPaR25Cq
blCwSyYNec7L0+O7GgZ6c52K3Q1JiFv+FLn1dDjc9h5R0p57hFDuf9YzvHwf
TvZLuyXoP0QCeQSOHmiJAmOnLqsxsRjkSQ81yVM+GqLGR86csIhAcrP7eedC
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
4iLuZnFpneAV3DeoprPr67j/C4q55Ss=
       "]]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
mDQr
       "]]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxN03k01O37wHFRUoYiTyUiJZK1iIpctpBKoVCEZElPJDQqKkqWsmWXJSpk
X8uWbkpUYxszY0sy5jNEJWuWxNfvnPnN57n/eZ/Xue5znfufW8L+iqkjJwcH
x8oVHBz/18kUtY9LS78QB+u0h9hTr0ziLrkW9vXrIG7344xp1Ix7dCF8u18S
7hGrQR8ONdwDwrEKK9xG2W6LnYjm7P3Bds2KxGYHr2G2G8VqK0P0B9kelleN
z9jFYHufvWKjdvhXtsmfJutrNLvZFtpvX2S/A7d5RlvSah7cvXfyPUzIXWx/
U3HexryAm+NJjw8hpJNtXcIR52JX3IE3yk3NTXETTsXIpIng3rzGuFO5oINt
K+Lrt11RuFMZuwtueeOWfLP6fqMWbmdZovvlnR2osyxqNOuCj2ZOAmYlsLYD
Fa/+HZl8+qPmj1VmBq9GaajyR27qUQzTVPSs22tFoSG7vTG2VePTmh79imIc
FTSUUHU5vYLKCWXHU9dkJNNQy9cojYwmAsxUEaaP+NMQr16qn4m7EBzc5dM/
6khDjO6yGctgEbgVO0yKNqKh8oQGf5VOCajltCzfr0hDFhkb2rWuSgGXe8PT
LxtoqC2q7rJJlCzof1EJvztLRY+Uvu1STlGCEKNnN6S/UJE0T1otKlOGpnIB
x6Y6KpI5GXyrZZ0arNvpd/JqJhUl8qTb2hYcBNOoUfWND6mIuGfEySNSE2KX
rKWrr1CRHbP4I5eVNnRdJgnanaKigyOBHhERumBj8GI4eysVxSTP/Rk+Zwjp
ZRtpxpxUJGgU31sxYwSYxP3ayUEKalRsbjUsPQ6XFs7HHyqioBEyxwyt0QTy
XdruDsRQ0EZhv1CwNIOxDk23oBsUdM73aG7I3CkgFoscJutQkEZ8QwBys4RK
sQdKRGkK6jQmQq7OWVh4OCsiQqCgh9s97nlLW8NdJ9qEA60dbV+XRekSsIMw
kYi0Wed29KD0qKK5pwPYcQTrbj3ejmhnr9ipJzmCCtNvUHtvO6oae/lWh+QE
vQUecg8XyMjnW+6WCl0X2K1jXrH1ERkNr1bffCjODRalTljpEMnITpLYrrx0
Bdp5DRedrMjozaYRG6kKd7hBO6BXtJOMeoMXoj32ecCHi1vbdKra0F/OScku
u2uQfHyjp/OTNkQ5mqzfu48I7nvXbQwNWJ7zdvqN83vDpgUOa5pxGzKd4IAT
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
0xHI
       "]]}, 
     {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
w/0/U4fHSg==
       "]]}, 
     {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]}}, 
    InsetBox[
     TemplateBox[{
      "0.010000000000000002`","0.05`",FractionBox["1", "10"],FractionBox[
       "1", "5"],FractionBox["1", 
        RowBox[{"2", " ", 
          SqrtBox["3"]}]],FractionBox["1", "2"]},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox["\"\[Sigma]=\"", {
                 GrayLevel[0], FontWeight -> Bold, FontSize -> 8, FontFamily -> 
                 "Arial"}, Background -> Automatic, StripOnInput -> False]}, {
              
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #6}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontWeight -> Bold, FontSize -> 8, FontFamily -> 
          "Arial"}, Background -> Automatic, StripOnInput -> False], 
        TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold", ",", "8"}], "}"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"\[Sigma]=\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.75, 0.55}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"\[Mu]\"", TraditionalForm], 
     FormBox["\"Torque\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Epilog->{
     LineBox[
      NCache[{{
         Rational[1, 2], 0}, {
         Rational[1, 2], 1}}, {{0.5, 0}, {0.5, 1}}]]},
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
   PlotLabel->FormBox["\"Uniform distribution\"", TraditionalForm],
   PlotRange->{All, All},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
YWOD+L+b5fps
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1:eJxN0nk0VXsfx/FjCBXlkQZDhmMKV1eILq6vLrpKMlTKUB5CSoRMoSJdSUIh
mUVmwjFkiC0JjzGkTkJH4nQmjqmQ4fGstZ+922vt9V6v9dn7t/YfW9rxqqUz
J4FAoG/c/+tcmtZ/1tenEQJ69d9zfHd1DjfJ98Hnz5O4PU3HF5Bu3FMr0cSQ
FNx028kgghbuLyIJ+zk8pjC/TZiN4xxmYm7gSOp28qFhbpNoqr13ZBIzTUUz
MWffOOaDjr+3HY7+jLmvY66lQe8j5gdiMZmLF/sxz2bGNvzl2Ia5yLdw/z5V
3E7HWjIE1loxv5/7EUpOwl1/xP6IR98bzHeYKr1J+i2Ydx3qpLAlXmHu5Z+w
eM9swhwxttZcX4d7OVItJ9wKd2O9+sAhcQSzBW/f15jleswtZdxtNo9xa9oc
KpBTwy1akuFef6kO81dLj++T5BrMVitPyeU+uNtzBuuCBXGXLOreEjJ+gVkq
y9NhZLwa8yOTZwb5t3BzL3yQuyZWjTCuB/9TG3RXzy99K5/eiypk+njobWXh
cb3L1eLk+GNVCLK6trT5Awec71HJZ4xUIktxpyl5aTvAclIv4C+vSsRXQ1HA
X1ca/l4zM07irkSa1gIHixqVQHeXwx52YgXiLxwrW6ukDqr7vb8dUa5AYqz5
NZwJ2iB7JKwmrZGEmCkk8auw9WHP+fiIeQsS0rdEoJs4GwG/X85Zk4ly5MSz
P9Vi7I8BIbp6X1ZAOdImbzbxfdQM5nPaFhe3liNpTcmhr2YsgdZAbjfLKEO6
rBffJGlawcgg7UmuWhlCsG8C7kZryP600Ld8vxRRfjs7RYg4Bz462kJWH0sQ
/aBOP/KMI9i52ZG4CCXI4Ok7EiRtZzBKuWlZLl+MuLjMUt49uwi7fjY/4vcp
RO4oTlUtDF+BNaUJtbrkAkR4OKh9rvAqUG14By6+ykfMHD8H7jX1gpo6kx2v
t+UhH8XUzC09fCCT7l7heTAXkXAYjx7f7Qf3RGNPStjlIP8+PG0j0u8PNoHv
4q4XZCMT/btSvAOCYPWPc8KqhpnITGr/iHtrKHQOrLnWD6YjMUUJpPaR25Cq
blCwSyYNec7L0+O7GgZ6c52K3Q1JiFv+FLn1dDjc9h5R0p57hFDuf9YzvHwf
TvZLuyXoP0QCeQSOHmiJAmOnLqsxsRjkSQ81yVM+GqLGR86csIhAcrP7eedC
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
4iLuZnFpneAV3DeoprPr67j/C4q55Ss=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1:eJxN1nkwVf0fwHFLCdEiyRZZslSWsi/58IREG0qLpbKFohIelbJUSCX7mi1K
RJdr5+Fc99pFIUIp673upbiWLEk/v5nznPOcmTPvec33O59zvjPnjyNhf83C
iY2FhWV67f5/Z1M0mv/8mUJY0Kvzkf3Ha7O4id5Pv32j4r5+bGQeacP9YyVc
MiAZN8OaeodFA/ewUKwiq8cPzB9iZ6LZvkxirmZNbHP0omNuFCNVPDKmYqYr
qMe/lBvBrGav1GgQ/g1zR8tsXbVeH+anIs/SFy93Yp5Jj6j+y74R8xvvXEU5
ZdyOpnVpvKsNmHtmFwJ7E3E/a9o6W30Zt0nKXsdMNdxsnkbdoewNyFz/sN9f
AmS9KuMLxh4d9YiWe5ZYMp2q5yVyq8wyrR55d+AW4VHlLz3F6Sg5Lfd6pDCb
8+zqIy6g1eUliunUI6cyjbOOXOSH9MQG7nVc9QiPzsuPgaSdcM5j8A69pw4J
4I342uUpDXyHlifbs+qQhIzPbwdoe6B1B79dsWcdQstLUiCI74cHkwrvE/Xr
kC3J7cxcXTU4WHtY339THWKazCU93KIFP2MvFTp+oSCR+WZ1p1r0gOB2R9I0
l4LMu5i6Bu78C1wgNlrJl4LIPfCU9dlkBBL8hHXbjSmIvVzqc05NE+gfb/Je
3kZBsk63NWkmmcGxqJUz9QQyErdbRErrgTlwXBZozr1LRihc5a0HwyyBpKOs
HWFGRpyJPSci807DgTEHUWtaLXLCPJEhbXweJiruPtUvqUUeHT7I6lRtA1nh
8au779cih9kcZmdPXgABzdbBabFa5PWwkJq/sz285xkz75kkIe+cry380+8A
oUOr5KpKEqLS9lBW0tYJlsMOvAy2IiGN+vMf7J+4QE2VSpemKIIsk7+aVMdc
A2WnyyXs5TVIXF6Krkj1dcjclBzfblmDtLvkPZ4ovQGhl9hsHB9XI1mqV443
IjfBfEPH6LPlKuSzkIfzFRlfqCtY13g+rgpZ+p5WUm9+C9TPa+bsPlCF6KgQ
q1Qe3Abh/DT3KtdKRHKr76Tpqh+MWnj8pPaWI9pPDaeJUoHgk7qRU6+sBMna
f5ErWyAE3EpFe2NMSxC+whaXoJ8hYNeu8HpioBjR+/R4Irg/FA6vnjBJXFeM
9Ozgs95ICANBu5jQOXMissFNcZg1LBy8dLT5rPryEQV5y6bO+9Fgc8WGyM6S
jwynVkdxbY8Bo+R7FoUyecji5a4fp17HgMAvchSPVy5iMMdiI98dC+WVZtso
m7IRy3kH7ubDCfBby5Zf2TAduZl4pGwkIgVau1ZdqrpTEVkj1+cOh1Lhucqh
HAGpFETDUHXb4kIq6M22yrdVJyL6YtTzBJV0CPIc2KM9G4U0cAddjiRkwJ46
1uKTvt7Ih+JmuUN9WTAWWdGu8S4WvhxNMLOdewPBfapqvy7Fw7msxzUVznkg
I1GQXLOQAMxILcPVvjxwKXjlYiT1HG4o1YcAJR98aEcC5Q9mQMnN5KkX6QRY
Wq8hohGTDZlbJDN8KIUQkBEqKy9BBHNOylIjSym43JRlTQomQvV2qt3fJqVw
0qihn3uSCFoezm1JEaUgQWcPnywtgjMs/g0HJcuArOw/RzhaAho5m+XnTMuB
neRdq+5bDt68BIIksRKCv9pbG76vAZ5dVHLwJwT2dX6yKj2AAOMZhY9NgAQd
9Uct5OIQsA6SDPbVJ0G4VbJ0sCIJqDUbi3jiSNB78KGI2zwJ0uIe7+48VAtX
ec5xHbhPhlSSvntHDhnicljGalPr4eNqQEhGWj3QR048H+puhQm0cobp2eY5
H0EeraTqDlGFuX7YjXY1xbpPemQQfqPtItio6OqOQg9aq8LlhxUmeHuJCb3q
p9fW0X4t+Xh3v8coDKBlVB1tkkkfhQm0bE26tlvXjQErWuVB0RBq6xgooi0a
quxz6B2DUrTqI2f3DY2OgSpaXWpMx+ffY6CN9vAkj2iHEhWOoLVbXCmoiqaC
LdonWwb6I6xpEIZWzxEhiLriZZZlPHjtQ4N5tFYXnBVJkXgl3k4FTjXSQBpt
qRmb/HHVcShB65I2+rvPYByc0YrMNnQ6nRgHMbQBSY/97rqNwz20ZnT+D3np
43AM7WCw7N8beekwgDaqn+tovDAdnqE1UpzcJSVHBxO0ud0FLdqH6JCD1lta
W8ztFh1uoZXzFZ2dD6aDDNr+1tXGwBg69KHVv0m5kUiggx5abvLR+qYxOnCh
rd6ulHRqlg4I2uuuW68NsjCwdm/pEVwUYUA/2lDH8u/35RkQgla7PIm8WYMB
WmjTL1y4KmvBgBS0FkUGBkUX8K7fIC0A7gzgRFt+nmOi5TYDzkS237F1Y4Db
23HEKpQBV5vKzJGTDNjJ1hozHMuAL+TBxC1r8z+cznf1yGRAVsCRU+Y7GaD2
+8a24BoGHDfuF8+g00H6eNjAnlYGRBBvy17poANf2ovs95/WnqeqSZGpoMMP
/S4dIebaOXy4yzxD6fDqgapjntQEvF/aGGErQwdBnoXiztAJ8FwK2uB/YRx+
CftZiVtOgtCAPg+zgQq1msGJ5bTvMKK2cjXSbQTEA870GuVOw5abWlMC5T3Q
opIZ8adgGtbJXR2N8+oBL9oPk4qyaeCM+676U3lt/Xhwxb76aVh5/oVmkdMN
PjtLkrYNrq2fuRL7IOEjvKvksx3azoS8O2abm693gu9825BfIBNe8yqs5G19
B1I5QknqoUxQLtevvB/UCu02ThbT4UwgfWQqCs22gFTdCtnhORNYHPfpBnQ1
Q3vU3izTMiak97NR9SIbYbfyI2fB70z4IKf29z0WCnS6GU4UnZ2BLVF24rw2
RSC8c6/Yst0MRMSnkSsNiODwfqu5vtMMsAwB+adMIcypfCt9d2MG9AN181UG
80Hg962gsbAZSHfIyhZczgI7wsWSvZEzcLFQuPhczQvIvnR4/Eb8zNp3f+JW
WWA6aDbwH1/NnAFSHN06amMCBPr+CjDMXZvv1aK9/CQaWvYMF4UVzEAA5aSA
hlA48A00UT+UrrmWI2mS/yFYPyMI7ahe209yZ90j7AtZBnFHbSlrXuG0DOI9
C5Ozfv6ZzWv+9//vlQOR/h73vbOmY0o9uBu49wv6fMG9uXqH2T/DuNMlxgpM
pnCPd7WOhM/j3h9MFOj+hZvM8Pe7xDmLebRI2OS2BO59zqx3SLK4vQXH8zkU
cXPcLdkWrY1b3vjktzeWuD16H/oMPMS9sDKdpc/AfbZ3SXATE3d5EdvTzwu4
fd34vX3Wz2Fe/qRhlLcL9yrx3tiOM7g5XHlkpii4+btls1NS5jG/OCV2Ukh1
AbO0tXtAInkRc2q28RLdcxlzWPI3wXMcK/h5utkCE6p+YzaOu3f9i8sfzCZ/
bO6n+bHo/2vXHmSm/DQr5kOBQSWXdrFhjr/GrOKh4aYFvKSm1bBjnnaqcCSH
rMM87863oe3SesxFR1pXnBU4ME+4KKuzz+MWf9MfHdK2ATNP7ahhcjwnPm9J
RTjekwvzWR8lldgj3Ji9GsLSJPk2Yn6itVc5YQK3bcBe/pRSHsyvuXt1su7y
Yp4qaw6JPr0J8w9NEVk+8c34fnaTr7GSuO3bvWKFZHB/cmhnl1DATQoPHFTS
wR01Sks8dga3ekQxz6NnuKfPD1F4onHn7t50JyIOt3jVZXp8Cm5OqnDDqze4
+3UC/esaccdwvFU3acV9vKP/e2s7boqzqk1XN+68SJrm8AhuZxv+aSca7l2y
Btl0xn/m/5O0ncn8z/yQxnde8/95P4u5+4uLuMmiEjp+K7jv0o7N/PmD+38D
mDQr
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1:eJxN03k01O37wHFRUoYiTyUiJZK1iIpctpBKoVCEZElPJDQqKkqWsmWXJSpk
X8uWbkpUYxszY0sy5jNEJWuWxNfvnPnN57n/eZ/Xue5znfufW8L+iqkjJwcH
x8oVHBz/18kUtY9LS78QB+u0h9hTr0ziLrkW9vXrIG7344xp1Ix7dCF8u18S
7hGrQR8ONdwDwrEKK9xG2W6LnYjm7P3Bds2KxGYHr2G2G8VqK0P0B9kelleN
z9jFYHufvWKjdvhXtsmfJutrNLvZFtpvX2S/A7d5RlvSah7cvXfyPUzIXWx/
U3HexryAm+NJjw8hpJNtXcIR52JX3IE3yk3NTXETTsXIpIng3rzGuFO5oINt
K+Lrt11RuFMZuwtueeOWfLP6fqMWbmdZovvlnR2osyxqNOuCj2ZOAmYlsLYD
Fa/+HZl8+qPmj1VmBq9GaajyR27qUQzTVPSs22tFoSG7vTG2VePTmh79imIc
FTSUUHU5vYLKCWXHU9dkJNNQy9cojYwmAsxUEaaP+NMQr16qn4m7EBzc5dM/
6khDjO6yGctgEbgVO0yKNqKh8oQGf5VOCajltCzfr0hDFhkb2rWuSgGXe8PT
LxtoqC2q7rJJlCzof1EJvztLRY+Uvu1STlGCEKNnN6S/UJE0T1otKlOGpnIB
x6Y6KpI5GXyrZZ0arNvpd/JqJhUl8qTb2hYcBNOoUfWND6mIuGfEySNSE2KX
rKWrr1CRHbP4I5eVNnRdJgnanaKigyOBHhERumBj8GI4eysVxSTP/Rk+Zwjp
ZRtpxpxUJGgU31sxYwSYxP3ayUEKalRsbjUsPQ6XFs7HHyqioBEyxwyt0QTy
XdruDsRQ0EZhv1CwNIOxDk23oBsUdM73aG7I3CkgFoscJutQkEZ8QwBys4RK
sQdKRGkK6jQmQq7OWVh4OCsiQqCgh9s97nlLW8NdJ9qEA60dbV+XRekSsIMw
kYi0Wed29KD0qKK5pwPYcQTrbj3ejmhnr9ipJzmCCtNvUHtvO6oae/lWh+QE
vQUecg8XyMjnW+6WCl0X2K1jXrH1ERkNr1bffCjODRalTljpEMnITpLYrrx0
Bdp5DRedrMjozaYRG6kKd7hBO6BXtJOMeoMXoj32ecCHi1vbdKra0F/OScku
u2uQfHyjp/OTNkQ5mqzfu48I7nvXbQwNWJ7zdvqN83vDpgUOa5pxGzKd4IAT
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
0xHI
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
w/0/U4fHSg==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
         "]]}}}, {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {"\[Mu]", "Torque"}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, Epilog -> {
        Line[{{
           Rational[1, 2], 0}, {
           Rational[1, 2], 1}}]}, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
      PlotLabel -> "Uniform distribution", PlotRange -> {All, All}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]]}, {0.010000000000000002`, 0.05, 
        Rational[1, 10], 
        Rational[1, 5], Rational[1, 2] 3^Rational[-1, 2], 
        Rational[1, 2]}, LabelStyle -> {
         GrayLevel[0], Bold, 8}, LegendLabel -> "\[Sigma]=", LegendLayout -> 
       "Column"]], {0.75, 0.55}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.684539050727324*^9, 3.684539172596488*^9, 3.6845392473597107`*^9, 
   3.6845392819314327`*^9, {3.684539349215146*^9, 3.684539371686418*^9}, 
   3.68453944026709*^9, 3.684634462206657*^9, {3.684635312442264*^9, 
   3.68463533878892*^9}, 3.684635681142131*^9, 3.684668008413847*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sigs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"TODO", ":", " ", 
    RowBox[{
    "place", " ", "legend", " ", "inside", " ", "the", " ", "plot"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"TorquePivotTriATB", "[", 
       RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "sigs"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", 
     RowBox[{"-", "1"}], ",", "4"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "sigs"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Mu] (pushing location)\>\"", ",", "\"\<Torque\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Triangular distribution\>\""}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Sqrt]", "2"}], "/", "2"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Sqrt]", "2"}], "/", "2"}], ",", "1"}], "}"}]}], "}"}], 
      "]"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.683656192718853*^9, 3.68365650959415*^9}, {
   3.684533201990088*^9, 3.684533227629901*^9}, 3.6845336018509903`*^9, {
   3.684538398449457*^9, 3.684538398934102*^9}, {3.684538872647613*^9, 
   3.6845388887736807`*^9}, {3.6845392008597593`*^9, 3.684539232440401*^9}, {
   3.68453938540254*^9, 3.6845393866137953`*^9}, {3.684539430208269*^9, 
   3.684539435555996*^9}, {3.6845436780615*^9, 3.684543712674811*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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

        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
p+7v1Q==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwV1nk4VN8bAHBbkjARhUSWLBUJSZH3WuObaFMS+tXXlopESnZClCKEMMa4
4SskqQhNZCmK7FvJMnPHjJ2sKb/jj/vc5/Oce8+9533e875H9pLHSScuDg6O
fnSt3WfTD3xeXZ2kGb477vVNiAqtUZfaPWYnaXWLnQt+JCoU34z5+ZOYpJkf
sPdX2kSF68eG52hfJ2nHSy6HBwpTYWLloVxw6iTNvjA0aY8oFdjnCT+OA5M0
X2pJ+T0JKgxJJKpxuk/QiqLFeQwUqPAtcSae6/sYTeb8QMLLg1So5Ez56ujN
oimGFwqouVKhXvpDWZQpQaNU1tMT46nAUtVOeqY8TLupGlAj/54K+y/trTd4
+JPmo+i5bDFGhZaG2ZpK/R4aS7Uo9uLWLIjZ9oiy6NJKi3qvGiBsmgUzlNhK
w0v1tNCII55MryzwIW/k03/7mjZpl1+bS84CRlxZ04EviXBhdG8pz9csiOi/
dN64+T2YeVkFNy5kAWvYKm2woxE6Sh3fVsjgoGxMyTnxXzv0LDRLLJriMCJz
Qyyguh0ufXCcCjqCQ+5vo7DcvnaoNrfwWG+Gnn/FdFgV7AAlNzdHMXMclOT2
bim40QGnPAx3qB7FQZHj/V0+vU4oXLIPOWqFw86Kvou0pi6wCVXkNDiLAz2p
oJnN7ALNT9tFK5Fxr6DDWzi7oUVJulrHBgeF3fIS1zS7wW81dlztHPJTt2+S
yd1gRSb7bDmPfHtJ3+diD9zmO/OrxQEHOa2tUqq/euEtl8SbBSccDEs8H94k
9cGNaPdMD2ccLmp94Xi/qw9mVPx4mcgUrRCG5cU+uCybptvugsP2/aOF15v6
IJVfzSj3Mg7i2jSDktzvQL0neUL7Gg4kHRcXXft+0DGzKyG8cFArreoJu90P
o6lG3yy8cbDUkbL4Et8P9Ni508XID3Ra1O0b+mGoOfWJ300c+A/qLgce+Aln
38mN8d7CgTs90nSQbwBKubMuc9zB4W/6+R6F4QFwDHi1fCcIBxPqR+2oqQFg
h7jmNSI/yN6dMP4H+atY6bZgHLa9+G35RnwQirttRsuQdT6k1hyxHAROjsCs
iRAcvIb6XriVDUJRgxpb5y4O7wgjwea6QfidYnc4CJlr9LmbZvsgGMiFEDXI
sbN+O1cmBmHzcoGOZTgOhTxSqTEKQxAqmNBkE4HyQdEuoujREEQt+h0/dg8H
9d01w6LpQ0DN21B/D/nW3j0GvnlDsD/ywf2PyLw6K78NaodA2c5zRTsKB3nz
NM+25SHoKS/xEIvGwe0YT/MBvmGw52MdOYpcfOLqnjSxYZAsFXYLRsZs9ZiO
6sNA/QHRI8gOV77bzTsNQ1ikwJ6i+zg88zB+Z+s1DF5agyYDyGNe+VtpwcPg
EPDfM9IDHPz8/VsjU4chJEh0/1Xk5BgpM4mWYXh6/0S4VAwObS/sNPX06KC2
eMLv3EMczrxcDi8zo4PPS91jfsjdxcnd2tZ0+LzFyScNuf91e8A+dzqcM+36
8h2ZXW7xSZFCB6GffYHWj3C4VsmWxPPp4EV2WvVEnnp/75psGR0eNE62xSDP
V9WISLXSobjZ6dZHZK5PevbCPAzI2+mXphiLQ/jn3hcPNzEgdjHv5WFkvsbb
XALbGdCxnLr1NLJQU0kOrzYDbCdk2wOR45pPLocZMoBnE1MlHlm0ZcqC04oB
RNXXpmxkifY9M79dGKB84H88X5DTOhqMfb0ZMLVLL+EHsnSXa9J8MAPqSE89
J5AVenG96RQGeAvqbRaKwyGnz/CRezYDXp8p6pRC3vVjYHC0mAF907zELmT1
AalIopEBuYHlhDHyq8F3Pf92M+AdxbzrOLL2sM2eQToDIm9Kitghl9HnAx2m
GWAkVvfEGVmPSGjp+8OAncl0x+vINKaGwjl+Ai5tEfL3RTZkffPp3EKAem5v
XwhyDdv98yl5AqqdhsKikI+MCUi17CXgpEulVyxyw3ieu6UeASK13M+fIFtM
mlU1mhFwKOmYShpy8xSx2dyagD9zGhMU5JMzd53rLhLweOnoEo7cMStXZuRO
wN536v/kItvMfdhYdYcA/uO+A3nIffMODvqRBJxtqyzPR3ZYXCkqjyfAwu5J
XwHy4NJT7oMUAqS5U6EQ2fG3zpk3+QTwDPzLXBtnrnTmapYRoLkxqnXtfbe/
3r+LagkYSKNyPEceXxWxVGslwLDAzHPt+9c5X1Ke9xPw8PRmhWfIM1xWs8qj
BCzmPRXPRL7JM26SvUBA6Scfy7X1La67nyzPwwSuOqhdW/+d9SqjlE1M4C+P
8V+Lzx+++sPS25E/LHqtxS+Y3yk2VYUJWuPiz9fiyy3APSyuzQSabYTsWvwj
BDP3PzFkwsCOnk4P5AebfvTGnmdC+dZHK7bI+o60F1KXmSDmUulqiTz9NvNu
rg8TEmWaJzHkMxec1T7EMWEmJNpCHnnDKzNuiwwmfOHdLbsZuYJ3d3dXPhMq
8tKEuJBlCydDJuuZ0L9ucN9afrZztp7x62ACX3Ke82fkCOuS3euHmaC/qlFc
gjy2crtD+i8Tarnc799DfnOUS8VSawTGugR0diK7ZtD/9BiMwC6BY6L8yNtm
61qdrEbAIUSJewLtv+Cn9/0D3EYgjZ685RXyUZbot3zKCIjfG1+ngfxXbwHX
KRyB4sogVxJyUWyPb005mo8S2TOK9v8WHbL8984RyJMl6JnIAxFKtzYKsiB5
k8NjLuTHvRsskiRZ0Ja93bYb1RsTtbEd8sos6LJW21OAnNdR1HDIiAXKJerj
p5BvKhySdvNlAfXKwfZEVK+Ub0vNzkWwoK6Kc+Bf5N7Gv/UhCSxIS5ufVkfG
vD56prxgwT9PTil+QvWPv9qi9hODBW7xttVsVC8rxfY+PT3LAhrf+uki5OuX
hT0GONhQ6F4u64PcsalTfHEbG45Uq0T+QfWZcuHCVaWTbFAOTTvFgbz/j+fm
iPdsENboDexA9V/BMvrHrkY2cIXyhscii2RQc5q72OB7uCr7H+QJrE1XYpoN
jGoN3QrUP7Lvajnmy4+CXqpuWgLqL+ICCyWt90ZBQjpuQCIU9Qd7UtCtxFGw
FpC6Vof61a8CJXMp6ig0J94WuoHcYmXzw6l8FLxNF2LqUH+Lji9btzQ+Cssv
MW9H1A9/S/qfkTk1BuqWRUFe/qgeX0nYUXNhDBw6vygKI3dX5LNdr45BpMrf
vgI/HEocfgQWh4/B65VJdzrqt1ep+jkmpWMgxDbZbeqL6rsK5+KV7eNA+Ltk
9KF+XaUTkVLKHIcGRyL0qDsa7xtiXJkbh8L/PQMaOg+sBIKGDPcEhOzw/7YP
Wad2sSFcegJmT1hc3XwV5cuJKysnrSfgjOmtgE/oPEFxO35hvHoCuOvnYpYc
Uf6lSe6UI09C2NvIHC9bHGSCz3ab5E1BmodE3j4jHFrdjEdf2cyA30Y/ITMx
HBZWpnCMPQsjyXEiXuwsEO1QyklPnwOV9MsfuCqygHpa+riE1gIsPp4XzInN
AoXz14JTqhfh6gnmqZ3OWUDOMV1i3ViGkogUIz6dLIhO/Sl+jncFogs42lYF
ssC9gyskufwPaB1VEbDrp4Lpk8Dr311XIezl68OPi6hgtmoXluHPgV3csCD0
I5wKlztpM6XWnJhw91LUg7NUMAoJfX1xBxd2PPklfnwPFZI8pssFmFyYluzX
txOcVGAGPyMy3nNj4zvyvKfbMmHKqcyxOpIH0xDRa+H7LxPmroms/3pxHWZx
51HX3TuZ8Mq8ccVZlRf71ZYUIGaVCaOu6trcc7yYwTy3VLBCJsg8742P/Loe
u/Ron6PVPAUEqujGqUl8mLCkqIVmIwXmljQlk25swBK2lf7wS6OAjc9ezURz
fqyCQXMhu1PAuy46Q05kI3Yj0z+uw4gCDw7uVk8e3Yj9aVt29BSjgH3wbtH0
NwKY8tT5IqP2DMjl79bFAwQx6ueoSJugDJh8+zky3loIq4k9VKwtnwETOtuU
RGRIGJeutZT+VzLkcpv1J8qRMP88F933jWS41OSdKKFIwuYl7tjqN5Ch698m
bllVEsZeJCfr15Phw8OQgb26JKzlzYgoVJHhMZ2ZcuwsCaNo+Atir8mgHVsi
EPWIhGG7sv4apJNhynbwo0A8CStLeb29OpWMzhFCfrFPSJjmhk96hk/JIFPu
wkpKJ2FKI2N3DJPIwEdI1mU/J2GkbO0Fwzgy9OqGBNXUk7B+2YZJo3AyJPAW
aps1kjCbuO9CNWFksGzpHW9sImGtHJOqxqFk+OisZdfWQcLqfm6+ahxEhvw4
ps7QMAkrTLcfMfYlg7Od6JQTk4QpC15fX3uLDDuUDHJYbBJG9Q9VNPFB81c8
FZueJmGJ53McTbzQ/JH1X7znSNimxrKwWk/0fyd/hS0ukrDoQ1+oJtfJUC0l
q+u/QsK48/qrat3JEMA8NrO6SsICJKYHTK6R4f8g4Oom
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[Mu] (pushing location)\"", TraditionalForm], 
       FormBox["\"Torque\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0.026000000000000002`}, DisplayFunction :> Identity, 
     Epilog -> {
       LineBox[
        NCache[{{2^Rational[-1, 2], 0}, {2^Rational[-1, 2], 1}}, {{
          0.7071067811865475, 0}, {0.7071067811865475, 1}}]]}, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotLabel -> FormBox["\"Triangular distribution\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"2", "3", "4", "5"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.684543705403277*^9, 3.68454371324186*^9}, 
   3.684634462340859*^9, 3.684635681476083*^9, 3.684668008758712*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"TorquePivot", "[", 
     RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", "\[Mu]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6764676711948633`*^9, 3.676467689250969*^9}, {
   3.683655816302288*^9, 3.683655818012466*^9}, 3.6845336058575497`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {"1", 
        RowBox[{
         RowBox[{"\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], ">", "0"}]}]},
       {
        RowBox[{"-", 
         FractionBox["1", 
          RowBox[{"12", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
           RowBox[{"\[Sigma]", "\[GreaterEqual]", 
            FractionBox["1", 
             SqrtBox["6"]]}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Mu]", ">", "1"}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "-", 
             RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}]}], 
          ")"}]}]},
       {
        FractionBox[
         RowBox[{"3", "-", 
          RowBox[{"6", " ", 
           SuperscriptBox["\[Mu]", "2"]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}]}]},
       {"0", 
        RowBox[{
         RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
         RowBox[{"\[Sigma]", "<", 
          FractionBox["1", 
           SqrtBox["6"]]}]}]},
       {
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{"3", " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{"6", " ", 
            SqrtBox["6"], " ", "\[Mu]", " ", "\[Sigma]"}], "-", 
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"6", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
          RowBox[{"36", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]]}], 
        RowBox[{
         RowBox[{"\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], ">", "0"}]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"3", " ", 
           SuperscriptBox["\[Mu]", "2"]}], "-", 
          RowBox[{"6", " ", 
           SqrtBox["6"], " ", "\[Mu]", " ", "\[Sigma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"6", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", ">", "1"}], "&&", 
         RowBox[{"0", "<", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}]}]},
       {
        RowBox[{
         FractionBox["1", "36"], " ", 
         RowBox[{"(", 
          RowBox[{"18", "-", 
           FractionBox[
            RowBox[{"3", " ", 
             SuperscriptBox["\[Mu]", "2"]}], 
            SuperscriptBox["\[Sigma]", "2"]], "+", 
           FractionBox[
            RowBox[{"6", " ", 
             SqrtBox["6"], " ", "\[Mu]"}], "\[Sigma]"]}], ")"}]}], 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}]}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.676467689734181*^9, {3.683655818551602*^9, 3.6836558232819147`*^9}, 
   3.684533255979312*^9, 3.684634463538602*^9, 3.684635682692934*^9, 
   3.684668009986906*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FindMaximum", "[", 
  RowBox[{
   RowBox[{"TorquePivotATB", "[", 
    RowBox[{"\[Mu]", ",", "100"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", "1"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"\[Sqrt]", "2"}], "/", "2"}], "]"}]}], "Input",
 CellChangeTimes->{{3.676467904065825*^9, 3.67646791129003*^9}, {
  3.6780146322743587`*^9, 3.678014693782064*^9}, {3.6845336531426153`*^9, 
  3.68453368574295*^9}, {3.68453372267428*^9, 3.6845337504064074`*^9}, {
  3.684538788650648*^9, 3.6845388162791433`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "nrnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function value \
\[NoBreak]\\!\\(-\\(\\(TorquePivotATB[\\(\\(1.`, \
100\\)\\)]\\)\\)\\)\[NoBreak] is not a real number at \[NoBreak]\\!\\({\[Mu]}\
\\)\[NoBreak] = \[NoBreak]\\!\\({1.`}\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::nrnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634463796012*^9, 3.684635682850985*^9, 
  3.684668010214738*^9}],

Cell[BoxData[
 RowBox[{"FindMaximum", "[", 
  RowBox[{
   RowBox[{"TorquePivotATB", "[", 
    RowBox[{"\[Mu]", ",", "100"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", "1"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.684533736315269*^9, 3.68453375082355*^9}, {
   3.684538792200719*^9, 3.684538816693467*^9}, 3.684634463817914*^9, 
   3.684635682858906*^9, 3.684668010224049*^9}],

Cell[BoxData["0.7071067811865475`"], "Output",
 CellChangeTimes->{{3.684533736315269*^9, 3.68453375082355*^9}, {
   3.684538792200719*^9, 3.684538816693467*^9}, 3.684634463817914*^9, 
   3.684635682858906*^9, 3.684668010230359*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Comparison Plots", "Subsection",
 CellChangeTimes->{{3.684538773093625*^9, 3.6845387789630013`*^9}, {
  3.684542352618402*^9, 3.6845423568740664`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"bestPushNorm", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ans", "=", 
        RowBox[{"FindMaximum", "[", 
         RowBox[{
          RowBox[{
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"-", 
                  FractionBox[
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], 
                   RowBox[{"2", " ", 
                    SuperscriptBox["\[Sigma]", "2"]}]]}]]}], "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"-", 
                 FractionBox[
                  SuperscriptBox["\[Mu]", "2"], 
                  RowBox[{"2", " ", 
                   SuperscriptBox["\[Sigma]", "2"]}]]}]]}], ")"}], " ", 
             "\[Sigma]"}], 
            SqrtBox[
             RowBox[{"2", " ", "\[Pi]"}]]], "+", 
           RowBox[{
            FractionBox["1", "2"], " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Erf", "[", 
               FractionBox[
                RowBox[{"1", "-", "\[Mu]"}], 
                RowBox[{
                 SqrtBox["2"], " ", "\[Sigma]"}]], "]"}], "+", 
              RowBox[{"Erf", "[", 
               FractionBox["\[Mu]", 
                RowBox[{
                 SqrtBox["2"], " ", "\[Sigma]"}]], "]"}]}], ")"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Mu]", ",", "1"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", 
         RowBox[{"First", "@", "ans"}], ",", 
         RowBox[{"ans", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
        "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "0.01", ",", "1", ",", "0.01"}], "}"}]}], 
     "]"}]}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.684539759369796*^9, 3.684539766770606*^9}, {
  3.68454237504427*^9, 3.684542375371945*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634463899085*^9, 3.684635682930705*^9, 
  3.684668010384075*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.17111599999999999033306607998383697122`5.253890532913272", ",", "Null"}],
   "}"}]], "Output",
 CellChangeTimes->{3.6845397674626293`*^9, 3.684542384795682*^9, 
  3.684634463979389*^9, 3.684635683010354*^9, 3.6846680104677887`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"bestPushUni", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ans", "=", 
        RowBox[{"FindMaximum", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"TorquePivotUni", "[", 
            RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Mu]", ",", 
            RowBox[{"Max", "[", 
             RowBox[{
              RowBox[{"1", "-", 
               RowBox[{"\[Sigma]", 
                RowBox[{"\[Sqrt]", "3"}]}]}], ",", 
              RowBox[{"\[Sigma]", 
               RowBox[{"\[Sqrt]", "3"}]}]}], "]"}]}], "}"}]}], "]"}]}], ";", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", 
         RowBox[{"First", "@", "ans"}], ",", 
         RowBox[{"ans", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
        "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "0.01", ",", "1", ",", "0.01"}], "}"}]}], 
     "]"}]}], ";"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"bestPushUniBot", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ans", "=", 
        RowBox[{"FindMaximum", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"TorquePivotUni", "[", 
            RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Mu]", ",", 
            RowBox[{"1", "-", 
             RowBox[{"\[Sigma]", 
              RowBox[{"\[Sqrt]", "3"}]}]}]}], "}"}]}], "]"}]}], ";", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", 
         RowBox[{"First", "@", "ans"}], ",", 
         RowBox[{"ans", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
        "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "0.01", ",", "1", ",", "0.01"}], "}"}]}], 
     "]"}]}], ";"}], "]"}]}], "Input",
 CellChangeTimes->{{3.684539481796115*^9, 3.6845394881208687`*^9}, {
  3.68454136885922*^9, 3.684541404523679*^9}, {3.684541477889475*^9, 
  3.684541492077577*^9}, {3.684542377163807*^9, 3.68454237733956*^9}, {
  3.684542512842882*^9, 3.684542561507465*^9}, {3.6845426182605047`*^9, 
  3.684542634353174*^9}, {3.684543372905573*^9, 3.6845433798502083`*^9}, {
  3.6845434102664003`*^9, 3.68454342476092*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846344640481052`*^9, 3.684635683070904*^9, 
  3.6846680105347633`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846344640481052`*^9, 3.684635683070904*^9, 
  3.684668010588019*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846344640481052`*^9, 3.684635683070904*^9, 
  3.684668010648327*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(FindMaximum :: lstol\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846344640481052`*^9, 3.684635683070904*^9, 
  3.684668010682682*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.23534499999999999864108701785880839452`5.3923048892578", ",", "Null"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.684539491999902*^9, {3.684541372176519*^9, 3.684541405262801*^9}, {
   3.68454148008794*^9, 3.684541492595182*^9}, 3.684542386864703*^9, {
   3.684542514601239*^9, 3.6845425621064043`*^9}, 3.6845426349628696`*^9, {
   3.68454341768991*^9, 3.684543425461896*^9}, 3.684634464230507*^9, 
   3.684635683260054*^9, 3.684668010717383*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846344640481052`*^9, 3.684635683070904*^9, 
  3.684668010772695*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846344640481052`*^9, 3.684635683070904*^9, 
  3.68466801083142*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846344640481052`*^9, 3.684635683070904*^9, 
  3.684668010889151*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(FindMaximum :: lstol\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846344640481052`*^9, 3.684635683070904*^9, 
  3.6846680109108467`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "fmgz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered a gradient that is effectively zero. The \
result returned may not be a maximum; it may be a minimum or a saddle point. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FindMaximum/fmgz\\\", \
ButtonNote -> \\\"FindMaximum::fmgz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846344640481052`*^9, 3.684635683070904*^9, 
  3.6846680109582663`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "fmgz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered a gradient that is effectively zero. The \
result returned may not be a maximum; it may be a minimum or a saddle point. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FindMaximum/fmgz\\\", \
ButtonNote -> \\\"FindMaximum::fmgz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846344640481052`*^9, 3.684635683070904*^9, 
  3.684668010979288*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "fmgz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered a gradient that is effectively zero. The \
result returned may not be a maximum; it may be a minimum or a saddle point. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FindMaximum/fmgz\\\", \
ButtonNote -> \\\"FindMaximum::fmgz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846344640481052`*^9, 3.684635683070904*^9, 
  3.6846680110173264`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(FindMaximum :: fmgz\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846344640481052`*^9, 3.684635683070904*^9, 
  3.684668011025033*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.32327699999999998103916709624172654003`5.53017472049431", ",", "Null"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.684539491999902*^9, {3.684541372176519*^9, 3.684541405262801*^9}, {
   3.68454148008794*^9, 3.684541492595182*^9}, 3.684542386864703*^9, {
   3.684542514601239*^9, 3.6845425621064043`*^9}, 3.6845426349628696`*^9, {
   3.68454341768991*^9, 3.684543425461896*^9}, 3.684634464230507*^9, 
   3.684635683260054*^9, 3.6846680110679493`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Last", "[", 
  RowBox[{"{", 
   RowBox[{
   "0.13768099999999999782929194225289393216`5.15947392496363", ",", "Null"}],
    "}"}], "]"}]], "Input",
 NumberMarks->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"bestPushTriATB", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ans", "=", 
        RowBox[{"FindMaximum", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"TorquePivotTriATB", "[", 
            RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Mu]", ",", "1"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", 
         RowBox[{"First", "@", "ans"}], ",", 
         RowBox[{"ans", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
        "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "0.01", ",", "1", ",", "0.01"}], "}"}]}], 
     "]"}]}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.684533733790844*^9, 3.68453373380893*^9}, {
   3.684538649827408*^9, 3.684538714949552*^9}, 3.68453892285102*^9, {
   3.684542378699654*^9, 3.68454237881138*^9}, {3.6845436590584784`*^9, 
   3.684543659444222*^9}, 3.684543720984222*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634464778311*^9, 3.684635683686736*^9, 
  3.684668011271706*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634464778311*^9, 3.684635683686736*^9, 
  3.6846680113404512`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "sdprec"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Line search unable to find a sufficient increase in the \
function value with \[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digit \
precision. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/FindMaximum\\\", \
ButtonNote -> \\\"FindMaximum::sdprec\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634464778311*^9, 3.684635683686736*^9, 
  3.684668011401389*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634464778311*^9, 3.684635683686736*^9, 
  3.684668011459023*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(FindMaximum :: lstol\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634464778311*^9, 3.684635683686736*^9, 
  3.68466801150146*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.36085299999999997933031181673868559301`5.577930233494073", ",", "Null"}],
   "}"}]], "Output",
 CellChangeTimes->{
  3.684538715723082*^9, {3.68453892449374*^9, 3.6845389296288853`*^9}, 
   3.6845423903632307`*^9, 3.684543660180376*^9, 3.684634465051095*^9, 
   3.684635683948936*^9, 3.684668011570998*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"bestPushTri", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ans", "=", 
        RowBox[{"FindMaximum", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"TorquePivot", "[", 
             RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], "&&", 
            RowBox[{"\[Mu]", ">", "0"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Mu]", ",", "1"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", 
         RowBox[{"First", "@", "ans"}], ",", 
         RowBox[{"ans", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
        "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "0.01", ",", "1", ",", "0.01"}], "}"}]}], 
     "]"}]}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.676466416448494*^9, 3.676466470673649*^9}, {
   3.6764665929400253`*^9, 3.6764667320443153`*^9}, {3.6764667913415413`*^9, 
   3.676466813481152*^9}, {3.6764670024882803`*^9, 3.676467011715851*^9}, {
   3.684533315639995*^9, 3.6845333574782143`*^9}, {3.684533424740246*^9, 
   3.684533427664321*^9}, 3.684533609947345*^9, {3.6845386232823772`*^9, 
   3.6845386237138233`*^9}, {3.684538695860608*^9, 3.684538724948888*^9}, {
   3.684542380459647*^9, 3.6845423806275063`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634465183243*^9, 3.684635684230503*^9, 
  3.684668011698328*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634465183243*^9, 3.684635684230503*^9, 
  3.6846680119175177`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634465183243*^9, 3.684635684230503*^9, 
  3.6846680120345716`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(FindMaximum :: lstol\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634465183243*^9, 3.684635684230503*^9, 
  3.684668012084395*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "6.39067999999999969418240652885288000107`6.826146984980336", ",", "Null"}],
   "}"}]], "Output",
 CellChangeTimes->{3.6845387358336267`*^9, 3.6846344708471212`*^9, 
  3.6846356912122307`*^9, 3.684668017922505*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plotBestLocationPivotObject", " ", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"bestPushNorm", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
          RowBox[{"bestPushNorm", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"bestPushTriATB", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
          RowBox[{"bestPushTriATB", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"bestPushUni", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
          RowBox[{"bestPushUni", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"bestPushUniBot", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
          RowBox[{"bestPushUniBot", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}], 
        "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Sigma] of swarm\>\"", ",", 
        "\"\<Optimal push location (\[Mu])\>\""}], "}"}]}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Filling", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"3", "\[Rule]", 
        RowBox[{"{", "4", "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "Automatic", ",", "Automatic", ",", 
        RowBox[{"ColorData", "[", 
         RowBox[{"97", ",", "3"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Dashed", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"2", "/", "3"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"100", ",", 
             RowBox[{"2", "/", "3"}]}], "}"}]}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{
              RowBox[{"\[Sqrt]", "2"}], "/", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"100", ",", 
             RowBox[{
              RowBox[{"\[Sqrt]", "2"}], "/", "2"}]}], "}"}]}], "}"}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"1", "/", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"100", ",", 
             RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}], "]"}]}], 
       "\[IndentingNewLine]", "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", 
        RowBox[{"{", 
         RowBox[{"0.4", ",", "1.0"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<Normal\>\"", ",", "\"\<Triangle\>\"", ",", 
            "\"\<Uniform\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"Right", ",", "Top"}], "}"}]}], "]"}]}], ","}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Prolog", "\[Rule]", " ", 
      RowBox[{"Inset", "[", 
       RowBox[{"pivotDrawing", "[", 
        RowBox[{"1", "/", "10"}], "]"}], "]"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", "\[IndentingNewLine]", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<Where to push object pivoted at 0, length 1, to maximize \
torque\>\""}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<../abecker/SwarmPublications/JournalTorqueControl/pictures/pdf/\
BestLocationPivot.pdf\>\"", ",", "%"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotMaxTorquePivotObject", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"bestPushNorm", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
          RowBox[{"bestPushNorm", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], 
        "]"}], ",", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"bestPushTriATB", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
          RowBox[{"bestPushTriATB", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"bestPushUni", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
          RowBox[{"bestPushUni", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], 
        "]"}]}], "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Sigma] of swarm\>\"", ",", "\"\<Max Torque\>\""}], 
       "}"}]}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<Normal\>\"", ",", "\"\<Triangle\>\"", ",", "\"\<Uniform\>\""}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Right", ",", "Top"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<Maximum possible torque on object pivoted at 0, length 1\>\""}], 
     ",", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<../abecker/SwarmPublications/JournalTorqueControl/pictures/pdf/\
MaxTorquePivot.pdf\>\"", ",", "%"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GraphicsRow", "[", 
   RowBox[{"{", 
    RowBox[{"plotBestLocationPivotObject", ",", "plotMaxTorquePivotObject"}], 
    "}"}], "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.676466820390336*^9, 3.676466989524275*^9}, {
   3.676467176427374*^9, 3.676467178092044*^9}, {3.676467921880308*^9, 
   3.676467966912457*^9}, {3.676468003785376*^9, 3.6764681638781776`*^9}, {
   3.676468384380714*^9, 3.6764684153499928`*^9}, {3.676707813843314*^9, 
   3.6767079846388817`*^9}, {3.676708047904991*^9, 3.6767081476060266`*^9}, {
   3.6767082139474154`*^9, 3.6767082727058077`*^9}, {3.6767083111956387`*^9, 
   3.67670831472095*^9}, {3.6845337620296717`*^9, 3.684533764907995*^9}, {
   3.684538635321357*^9, 3.684538643391612*^9}, {3.684538747385893*^9, 
   3.6845387563731527`*^9}, {3.684539513008461*^9, 3.684539632658648*^9}, {
   3.6845396872828693`*^9, 3.684539701923581*^9}, {3.684539783126017*^9, 
   3.684539794917314*^9}, {3.684539829955718*^9, 3.684539929322253*^9}, {
   3.684539974204549*^9, 3.684539998544354*^9}, {3.684540045281748*^9, 
   3.68454009313211*^9}, {3.68454017096564*^9, 3.6845401888859377`*^9}, {
   3.6845414193238163`*^9, 3.684541433577652*^9}, 3.684541519396113*^9, 
   3.6845424131349707`*^9, {3.684542653280794*^9, 3.684542657339637*^9}, {
   3.684543360939043*^9, 3.684543366906088*^9}, {3.6845434300387774`*^9, 
   3.684543458328472*^9}, {3.684543604949129*^9, 3.684543617696163*^9}, 
   3.684543728731419*^9, {3.684635845492674*^9, 3.684635897530367*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1: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
/l9QclZ2
        
        "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwlzkdOQgEARdH/wV4Q7IigIMp+3IAJC9B12ruiYu8dOxbQkzg4uW/4ssWZ
yelIEAQhU0SNBhppopkWWmmjnQ46idFFnATd9NBLH/0MMEiSIVIMkybDCKNk
yTFGngLjRJggDP9P/kqdGj9888UnVT54541XXnjmiQqPPHDPHbfccM0Vl1xw
zhmnnHDMEYccsE+ZPXbZocQ2W2yywTprrLLCMkssssA8c8zyBxBkNkU=
             
             "]]]}, {}, {}}, {{}, {}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
             18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
            34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 
            50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 
            66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 
            82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 
            98, 99, 100}]}, 
          {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[{101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 
            112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 
            125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 
            138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 
            151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 
            164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 
            177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 
            190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200}]}, 
          {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[{201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 
            212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 
            225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 
            238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 
            251, 252, 253, 254, 255, 256, 257, 294}]}, 
          {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[{259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 
            270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 
            283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 295}]}}}], {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"\[Sigma] of swarm\"", TraditionalForm], 
        FormBox["\"Optimal push location (\[Mu])\"", TraditionalForm]},
      AxesOrigin->{0, 0.403},
      DisplayFunction->Identity,
      Epilog->{
        Dashing[{Small, Small}], 
        LineBox[
         NCache[{{0, 
            Rational[2, 3]}, {100, 
            Rational[2, 3]}}, {{0, 0.6666666666666666}, {
           100, 0.6666666666666666}}]], 
        LineBox[
         NCache[{{0, 2^Rational[-1, 2]}, {100, 2^Rational[-1, 2]}}, {{
           0, 0.7071067811865475}, {100, 0.7071067811865475}}]], 
        LineBox[
         NCache[{{0, 
            Rational[1, 2]}, {100, 
            Rational[1, 2]}}, {{0, 0.5}, {100, 0.5}}]]},
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->Medium,
      Method->{},
      PlotLabel->FormBox[
       "\"Where to push object pivoted at 0, length 1, to maximize torque\"", 
        TraditionalForm],
      PlotRange->{{0, 1.}, {0.4, 1.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Prolog->InsetBox[
        GraphicsBox[{
          RGBColor[0.6, 0.4, 0.2], 
          RectangleBox[
           NCache[{0, 
             Rational[-1, 10]}, {0, -0.1}], 
           NCache[{1, 
             Rational[1, 10]}, {1, 0.1}]], 
          RGBColor[0, 0, 1], 
          PointBox[{0, 0}], 
          RGBColor[1, 0, 0], 
          PolygonBox[
           NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
              Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
             1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]], 
          GrayLevel[0], 
          PointSize[Tiny], 
          PointBox[CompressedData["
1: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

           "]]}, PlotRange -> {{-1, 3}, {-8, 2}}, AxesOrigin -> {0, 0}]],
      Ticks->{Automatic, Automatic}], {192., -116.80842387373012`}, 
     ImageScaled[{0.5, 0.5}], {360, 222.49223594996212`}], InsetBox[
     FormBox[
      TagBox[
       FormBox[
        GraphicsBox[{{{}, {{}, {}, 
            {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
             0.011111111111111112`], AbsoluteThickness[1.6], 
             LineBox[CompressedData["
1:eJwtlAtMU2cUxxERC4gukzp1DMTNFXUmG6CbMPgTVxDsRASHm+BwDHW+Ikhm
AAfIhjEs2zTI3NrxEGGLyAABgxARBoJQaGsf0JZ3X1BKeQUpkYljbT0nubn5
7r3fOef//53vesSdjzhua2NjE2++LPdLLhV71alZeFgyVh1tP41X61yYOG2m
Ku8p1LldMR6sK4C48kqN64VJel+C/L0/eR5vmACPa4lS2O04xX62ZgL11u8r
UGb7bKPXGSPMC/OTKix+JD68WjhO++/D61Dol00+43BUFCf4Oz5AF+ulqKzI
AGs6bj3+zdyz/chaA7bGXGsxeTYgOOjNH09mj1E/jdjqcfdW5vIxlJh3K4r/
AdMhqzEuU48Ja71mJK1ULols9fDxtsRjZGyZC8m5Okr1W2E/XSdIXzOKxyZP
c4U2+Po4/XeGNwInaz/tkIU6q3Z6jiDCWrAD4XkHyhvqdKSXj/EgbouOo4Mm
1ZKwE/xrN0pvqrXUrwCaT3dvaErRItHSXoIQnJ2uXWEuWvJHhOx26Ru+VRrY
WEMMPS/mWHK4hvSIwetfilo+q0aI2lJAAt6pwAD5r2rSJ8EzH4bXpJ8a11ss
AqQ467Q5m61TwSrXWwan69lRyl9UsMpRyDBfnbyqxE9F+ruxLeRwOrtnGO6W
dtx6UOu+3p774TD50YNu1mLzroIhnDxhCTmM2abaVQ5D5I8C9g3+SyuTB2HJ
5lKhQOuCx+Ja4wD5pUS1h+76xrgBzFvSmZRIY936ym6wn/zrxYrey6/XR/cj
wDoAfVjYU5HlPtRHfvZhqIC9xi2+D9b2rvTDjhFRw5vsJX8HkBAQve9Sai+E
AksM4LMZduWfjr3k9yBu+DSpl/KVYFobHMILbeo7CT5K8n8IqvnsdYNCBazp
Yobh9N0XHTtOK4iHCl5ldYJQBwXpUUFYERu8oUxOfFRwYMTPZh2Qkz4VPGOX
vX9xvod4qfHJLqa9orCH9KoR6Vz8bg6nh/ipwcgtn8lZ6Cb9GuwfvpPQVtpN
PDVgJzbHrovpxqt0Giw78t7mpNe6ia8Wrn3lrfwnMvJHi0ctaQuMDBnx1sKJ
U+ayabeM/NIh5IO3GEtzUuKvQ3J1cOzNain5p8PIpr98FYlSmocRGP9w49R4
ScnPEQTm+gldTRKajxH8Hnk6y75eQv6Ooq/Iu/brdAnNyygM4rQtnkES8nsU
5cZB5xBnCZ138zlNeOlWJxeT/3qEa9cnnysS0zzpMfA9r/joOTHxGMM3tbKc
dF8x8RjDby/l3CcMMfEYw8fH9fLP7z0lHub/guzOtrCDT4mHAdLKy8+j50TE
w4DBu0v3Erki4mFAw+32+IxAEfEYBytv+NG3BiHxGEd6BWchKFdI8zmOoBS9
Sh0oJB5GPPwhs81vWkA8jGA17kwJLhQQDyP8/VfsM4ULiMcEfvYuXfSzExCP
CSS5Fbavru8iHhOIYZ4NizvfRTwmcZvFzN/O6iIek5h/0Pn2MVUn8ZjEBX5r
tYnXSTymcMIv7KImqpN4TOHQi8VZV5dO4jGFrkCmbZ6UTzymsdHEFEXl8InH
NP6+ePYpO5JPPKax6vl+/lEmn3jMmOvdf8JVduB/Gv0hXg==
              "]]}, 
            {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
             0.011111111111111112`], AbsoluteThickness[1.6], 
             LineBox[CompressedData["
1:eJwtkw001XcYx6+xKDozahbSMpOkk7cts+obZx2bmrfSTpjhiKJGQzOVckov
LFnrnIpixaZykhWSiuUlL9d9d7uXq+u+eblvaCXVUc29Pc85//M/v//v/3ue
5/v9PL+lCWkR299jMBiJs4/hvW9BTZA85wh6CpcdZH45gXfrMwjRdx49mD2O
Rqd8bXhjGQIWmZ21u6en/UpYfeYe8JuZHiXnDXEVQqem9YJwHe4Y/69B0/Xg
i0MVWswuZr/8A9MP1/RdeqWh83VgrH1hYbFVg3miivS1827j2t1Y/zf1ahjT
nb+Dc7t1+36yV2N5zKnWKbd7mHvdyyvg8Bj104ythf7BP0yOonL2tKjiX/i7
XTt4JX4UOmO9B2gJSj9pLhqBr48h2mD3gUdqbNgI1W9HuuOBvGLWMNqm3GYr
dOD49zclh0KGYWnspxPpd/dE2ghUiDAW7AIjxrF9WbSK9HYjbq7QoXJECUWO
IWEPjv+5sjglS0n99uLi6rO1seZK7DG0l87C5YXthxIvKMgfNvo9/U7G+SrA
MAYXM1tDZlZz5KSHi9L216XcXXJ8IzcU4KE5o0ZnPV9O+nhYk5qyXHZDhuJW
gwA+OgM7NrtGymCU6yOAdYFp2q2XQzDKEQmw/KpdhFPIEOnvQ/Wmw75Xq6RY
YmjHSYgoW5MV0XOk5IcQFpEHzD1SHiM5yRCP8H7iw2MWgkHyR4QQ5t1c4fpB
GLItqBFhU22L38+3JOSXGKclOzY2uUvw3JBuSowz3wY+O/r3APnXj/3MrKW1
rgNYZxyAAXiGVPnNr+4nPwcwNy+uOsunH8b28iX4L7kt8UGLmPwdRKX810Xd
oWKweg0xiPkNbYeSlCLy+zH+2jK5LzNHhIXGBqWo48R4chaIyH8p/D51ttty
8xGM6WKGEK9UmykiHhEPGQ484a/Y9lxIemRIYCg/Lr0gJD4y9DivrCnYICR9
Mlg0/2Fv9aSPeMnhyhJzzMr7SK8cH7kc+yU6tI/4yVEiWTI6bdJH+hU4vVlq
29YgIJ4KPGGHz6naLcC7dAqId82wilwFxFeJ4GCHrCQ5n/xR4rH3zWf2ZXzi
rUS5Vu9WEsMnv1QYSNB08B35xF+FzDPDm+qkPPJPhYxslcmqyzyah2F4VPTK
fZJ55Ocw3L2enqtbyaP5mN23/CSnYopL/o5g/3bTvU+buTQvI/jqiL3tuRNc
8nsE096MpPxILt33UUw/dZlX68wl/0exI1T4ub2CQ/M0ig1F66Jc8jjEYwzH
syt/T3HmEI8xBLLfPuzvYBOPMVgNLK7/MZVNPMbgbfvFoMaGTTzUcMm0yU65
xyIeasTnte5lJ7OIhxrJobw084Us4qGBn8d06Zz2XuKhwRU1WPcze2k+NVAt
Lk9esqyXeGghNtdtc5IwiYcWdg6wqylmEg8tHAqri1uDmMRDh4jc0FVhDCbx
0OHWUD17Y1MP8dDByjr/9rWsHuKhR8zbrJIE7x7ioYdZzqnCnZPdxEMP94ZL
r+tvdBOPcZTsfHN/XXo38RhHsWbn5CuvbuIxjjDbQEvFsy7iMYEygUigbewi
HhOQF7yIss7tIh4TWJxR+TLo6y7iMQlp0cR3hZZd+B9XFRhO
              "]]}, 
            {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
             0.011111111111111112`], AbsoluteThickness[1.6], 
             LineBox[CompressedData["
1:eJwtkwtQVGUYhsGBkcGmkQYDCTGMHFQ05ZZDwmuJQjMocommcStCwEpQwSIB
yyYlGskJIgtxIgQTUILoujTk4F5Y2BvsLsvCsqx732WvTomNpTtxjt8/c2bn
nLPn+7/vfZ4/tuR4ftmKgICA0uWL+a0PH8gy1p3DwdqQPdHVPjy6/wqdf63+
dKfFC25MgyuP24HVFWsnCou89P4qSq2xj1WNe9B+iVl94L6xOfdCmgfD7P8H
EDmb+GVfvxvLN8tPhnAs7wW1MMZN3/+CMfGeSFOzC6Ga7hPpob9jfWbOIf8K
F9hyl4ZR82dhR9T7TmzifMFbih+BIvV1Y6p9kfq5ic0/lsUVvLaIq8tfa7pH
8cmmY0eOSxxws/vdgq6r5npTugPJScziIyn6jKdn0E77C/D5xcbtglg7+Evx
yzsIYX28+aSh1YZVbD8iZHzW9tuDYBvy2Q3H8U3glfuRp6w07wR8dX27UpwW
mOqYgmJk3R06k8exUL9SdFb+wauUm1HFtHdChvs2XvD53WbKR478Ykn2tZ9M
CGDXFG7MqZp4cSaaZwpBBTq5/msjso3MBgpwpJaw/0KMNJ8Cv+71FEbUG9DM
YwZQ4kbIh/Gt2ttgx01SYfsrd07eEuvBjqNRoSrf8GytdIHmn4Yud4izRq/D
eqadGDUe1mvT4vzzlIcaZY055W9umceRcmbNoCouQvF9qZby0eDhvuyme71z
YKqFD2gQ9J3maMU/s5TXLNRRge+k5c7iHlNuaRbtp1s+7h3UUH5zMOPuk2GR
GmSwAmhx4NURrr5xhvLU4ue/07ed96vBttcwj8MvLqja6tWUrw4Pdc8kXPZP
QyZllg7inZ1dWxqnKe8FKPZvOOUJn8YatkE9Rj5IUDb1qCh/PdJTahzcDBXY
cpzbCIlKydmqVRIPA9YlNe/tqVXSPAb4gpIyndFK4mPAe+sqi2/yFTSfAfIf
Bpy+SgXxMqL3XMPK3KcUNK8ROyLOFg1KpoifEaKagS77R1M0vwnmsKLLiuQp
4mkinpN4VM6E8s5v2zgHJ4mvmfjKKR8z+m1vDTe+LCfeZuIto7ws2Nee7ygp
kBF/C/GXUn4WFJbUyw5XSMkHK/kgoTytqFvQb3yuVUJ+WMkPCeVrQ8UTZ5da
xsTki418EVPeNjzIGlXUB4vpvNvhZ/2ZoPztCETitn8PTJBPdvJpnHg4sDFz
lJPcNU48HOTXOPFwYENsdeLbfhHxcJBvIuKxiP4Oz1Z7iYh4LJJ/IuKxiKZD
K0PDJ8eIh5N8HCMeTmTsSLhe/NIY+ekkP4XEwwWuciYvZ0RIPFzkq5B4uDAR
7I8q2SUkHm7yV0A83Jjvbr3yPE9APNzks4B4eCB71zl/dL+AeHjIbwHx8GAp
dffaawt84uEl3/nEw4uwQdnTF6v5xMNL/vOJhw9zwr4K7yo+8fDReeARDx/8
PS2nK/t4xOMOnQ8e/gdEkiPL
              "]]}}, {}}, InsetBox[
           TemplateBox[{"\"Normal\"","\"Triangle\"","\"Uniform\""},
            "PointLegend",
            DisplayFunction->(FormBox[
              StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False], TraditionalForm]& ),
            Editable->True,
            InterpretationFunction:>(RowBox[{"PointLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "True", ",", "True"}], "}"}], 
                    "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
               "]"}]& )], Scaled[{0.99, 0.99}], ImageScaled[{1, 1}],
           BaseStyle->{FontSize -> Larger},
           FormatType->StandardForm]},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{
           FormBox["\"\[Sigma] of swarm\"", TraditionalForm], 
           FormBox["\"Max Torque\"", TraditionalForm]},
         AxesOrigin->{0, 0},
         DisplayFunction->Identity,
         Frame->{{False, False}, {False, False}},
         FrameLabel->{{None, None}, {None, None}},
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImageSize->Medium,
         Method->{},
         PlotLabel->FormBox[
          "\"Maximum possible torque on object pivoted at 0, length 1\"", 
           TraditionalForm],
         PlotRange->{{0, 1.}, {0, 0.9826794919243103}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}},
         Ticks->{Automatic, Automatic}],
        TraditionalForm],
       InterpretTemplate[Legended[
         Graphics[{{}, {{{}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              Line[CompressedData["
1:eJwtlAtMU2cUxxERC4gukzp1DMTNFXUmG6CbMPgTVxDsRASHm+BwDHW+Ikhm
AAfIhjEs2zTI3NrxEGGLyAABgxARBoJQaGsf0JZ3X1BKeQUpkYljbT0nubn5
7r3fOef//53vesSdjzhua2NjE2++LPdLLhV71alZeFgyVh1tP41X61yYOG2m
Ku8p1LldMR6sK4C48kqN64VJel+C/L0/eR5vmACPa4lS2O04xX62ZgL11u8r
UGb7bKPXGSPMC/OTKix+JD68WjhO++/D61Dol00+43BUFCf4Oz5AF+ulqKzI
AGs6bj3+zdyz/chaA7bGXGsxeTYgOOjNH09mj1E/jdjqcfdW5vIxlJh3K4r/
AdMhqzEuU48Ja71mJK1ULols9fDxtsRjZGyZC8m5Okr1W2E/XSdIXzOKxyZP
c4U2+Po4/XeGNwInaz/tkIU6q3Z6jiDCWrAD4XkHyhvqdKSXj/EgbouOo4Mm
1ZKwE/xrN0pvqrXUrwCaT3dvaErRItHSXoIQnJ2uXWEuWvJHhOx26Ru+VRrY
WEMMPS/mWHK4hvSIwetfilo+q0aI2lJAAt6pwAD5r2rSJ8EzH4bXpJ8a11ss
AqQ467Q5m61TwSrXWwan69lRyl9UsMpRyDBfnbyqxE9F+ruxLeRwOrtnGO6W
dtx6UOu+3p774TD50YNu1mLzroIhnDxhCTmM2abaVQ5D5I8C9g3+SyuTB2HJ
5lKhQOuCx+Ja4wD5pUS1h+76xrgBzFvSmZRIY936ym6wn/zrxYrey6/XR/cj
wDoAfVjYU5HlPtRHfvZhqIC9xi2+D9b2rvTDjhFRw5vsJX8HkBAQve9Sai+E
AksM4LMZduWfjr3k9yBu+DSpl/KVYFobHMILbeo7CT5K8n8IqvnsdYNCBazp
Yobh9N0XHTtOK4iHCl5ldYJQBwXpUUFYERu8oUxOfFRwYMTPZh2Qkz4VPGOX
vX9xvod4qfHJLqa9orCH9KoR6Vz8bg6nh/ipwcgtn8lZ6Cb9GuwfvpPQVtpN
PDVgJzbHrovpxqt0Giw78t7mpNe6ia8Wrn3lrfwnMvJHi0ctaQuMDBnx1sKJ
U+ayabeM/NIh5IO3GEtzUuKvQ3J1cOzNain5p8PIpr98FYlSmocRGP9w49R4
ScnPEQTm+gldTRKajxH8Hnk6y75eQv6Ooq/Iu/brdAnNyygM4rQtnkES8nsU
5cZB5xBnCZ138zlNeOlWJxeT/3qEa9cnnysS0zzpMfA9r/joOTHxGMM3tbKc
dF8x8RjDby/l3CcMMfEYw8fH9fLP7z0lHub/guzOtrCDT4mHAdLKy8+j50TE
w4DBu0v3Erki4mFAw+32+IxAEfEYBytv+NG3BiHxGEd6BWchKFdI8zmOoBS9
Sh0oJB5GPPwhs81vWkA8jGA17kwJLhQQDyP8/VfsM4ULiMcEfvYuXfSzExCP
CSS5Fbavru8iHhOIYZ4NizvfRTwmcZvFzN/O6iIek5h/0Pn2MVUn8ZjEBX5r
tYnXSTymcMIv7KImqpN4TOHQi8VZV5dO4jGFrkCmbZ6UTzymsdHEFEXl8InH
NP6+ePYpO5JPPKax6vl+/lEmn3jMmOvdf8JVduB/Gv0hXg==
               "]]}, {
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              Line[CompressedData["
1:eJwtkw001XcYx6+xKDozahbSMpOkk7cts+obZx2bmrfSTpjhiKJGQzOVckov
LFnrnIpixaZykhWSiuUlL9d9d7uXq+u+eblvaCXVUc29Pc85//M/v//v/3ue
5/v9PL+lCWkR299jMBiJs4/hvW9BTZA85wh6CpcdZH45gXfrMwjRdx49mD2O
Rqd8bXhjGQIWmZ21u6en/UpYfeYe8JuZHiXnDXEVQqem9YJwHe4Y/69B0/Xg
i0MVWswuZr/8A9MP1/RdeqWh83VgrH1hYbFVg3miivS1827j2t1Y/zf1ahjT
nb+Dc7t1+36yV2N5zKnWKbd7mHvdyyvg8Bj104ythf7BP0yOonL2tKjiX/i7
XTt4JX4UOmO9B2gJSj9pLhqBr48h2mD3gUdqbNgI1W9HuuOBvGLWMNqm3GYr
dOD49zclh0KGYWnspxPpd/dE2ghUiDAW7AIjxrF9WbSK9HYjbq7QoXJECUWO
IWEPjv+5sjglS0n99uLi6rO1seZK7DG0l87C5YXthxIvKMgfNvo9/U7G+SrA
MAYXM1tDZlZz5KSHi9L216XcXXJ8IzcU4KE5o0ZnPV9O+nhYk5qyXHZDhuJW
gwA+OgM7NrtGymCU6yOAdYFp2q2XQzDKEQmw/KpdhFPIEOnvQ/Wmw75Xq6RY
YmjHSYgoW5MV0XOk5IcQFpEHzD1SHiM5yRCP8H7iw2MWgkHyR4QQ5t1c4fpB
GLItqBFhU22L38+3JOSXGKclOzY2uUvw3JBuSowz3wY+O/r3APnXj/3MrKW1
rgNYZxyAAXiGVPnNr+4nPwcwNy+uOsunH8b28iX4L7kt8UGLmPwdRKX810Xd
oWKweg0xiPkNbYeSlCLy+zH+2jK5LzNHhIXGBqWo48R4chaIyH8p/D51ttty
8xGM6WKGEK9UmykiHhEPGQ484a/Y9lxIemRIYCg/Lr0gJD4y9DivrCnYICR9
Mlg0/2Fv9aSPeMnhyhJzzMr7SK8cH7kc+yU6tI/4yVEiWTI6bdJH+hU4vVlq
29YgIJ4KPGGHz6naLcC7dAqId82wilwFxFeJ4GCHrCQ5n/xR4rH3zWf2ZXzi
rUS5Vu9WEsMnv1QYSNB08B35xF+FzDPDm+qkPPJPhYxslcmqyzyah2F4VPTK
fZJ55Ocw3L2enqtbyaP5mN23/CSnYopL/o5g/3bTvU+buTQvI/jqiL3tuRNc
8nsE096MpPxILt33UUw/dZlX68wl/0exI1T4ub2CQ/M0ig1F66Jc8jjEYwzH
syt/T3HmEI8xBLLfPuzvYBOPMVgNLK7/MZVNPMbgbfvFoMaGTTzUcMm0yU65
xyIeasTnte5lJ7OIhxrJobw084Us4qGBn8d06Zz2XuKhwRU1WPcze2k+NVAt
Lk9esqyXeGghNtdtc5IwiYcWdg6wqylmEg8tHAqri1uDmMRDh4jc0FVhDCbx
0OHWUD17Y1MP8dDByjr/9rWsHuKhR8zbrJIE7x7ioYdZzqnCnZPdxEMP94ZL
r+tvdBOPcZTsfHN/XXo38RhHsWbn5CuvbuIxjjDbQEvFsy7iMYEygUigbewi
HhOQF7yIss7tIh4TWJxR+TLo6y7iMQlp0cR3hZZd+B9XFRhO
               "]]}, {
              Hue[0.1421359549995791, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              Line[CompressedData["
1:eJwtkwtQVGUYhsGBkcGmkQYDCTGMHFQ05ZZDwmuJQjMocommcStCwEpQwSIB
yyYlGskJIgtxIgQTUILoujTk4F5Y2BvsLsvCsqx732WvTomNpTtxjt8/c2bn
nLPn+7/vfZ4/tuR4ftmKgICA0uWL+a0PH8gy1p3DwdqQPdHVPjy6/wqdf63+
dKfFC25MgyuP24HVFWsnCou89P4qSq2xj1WNe9B+iVl94L6xOfdCmgfD7P8H
EDmb+GVfvxvLN8tPhnAs7wW1MMZN3/+CMfGeSFOzC6Ga7hPpob9jfWbOIf8K
F9hyl4ZR82dhR9T7TmzifMFbih+BIvV1Y6p9kfq5ic0/lsUVvLaIq8tfa7pH
8cmmY0eOSxxws/vdgq6r5npTugPJScziIyn6jKdn0E77C/D5xcbtglg7+Evx
yzsIYX28+aSh1YZVbD8iZHzW9tuDYBvy2Q3H8U3glfuRp6w07wR8dX27UpwW
mOqYgmJk3R06k8exUL9SdFb+wauUm1HFtHdChvs2XvD53WbKR478Ykn2tZ9M
CGDXFG7MqZp4cSaaZwpBBTq5/msjso3MBgpwpJaw/0KMNJ8Cv+71FEbUG9DM
YwZQ4kbIh/Gt2ttgx01SYfsrd07eEuvBjqNRoSrf8GytdIHmn4Yud4izRq/D
eqadGDUe1mvT4vzzlIcaZY055W9umceRcmbNoCouQvF9qZby0eDhvuyme71z
YKqFD2gQ9J3maMU/s5TXLNRRge+k5c7iHlNuaRbtp1s+7h3UUH5zMOPuk2GR
GmSwAmhx4NURrr5xhvLU4ue/07ed96vBttcwj8MvLqja6tWUrw4Pdc8kXPZP
QyZllg7inZ1dWxqnKe8FKPZvOOUJn8YatkE9Rj5IUDb1qCh/PdJTahzcDBXY
cpzbCIlKydmqVRIPA9YlNe/tqVXSPAb4gpIyndFK4mPAe+sqi2/yFTSfAfIf
Bpy+SgXxMqL3XMPK3KcUNK8ROyLOFg1KpoifEaKagS77R1M0vwnmsKLLiuQp
4mkinpN4VM6E8s5v2zgHJ4mvmfjKKR8z+m1vDTe+LCfeZuIto7ws2Nee7ygp
kBF/C/GXUn4WFJbUyw5XSMkHK/kgoTytqFvQb3yuVUJ+WMkPCeVrQ8UTZ5da
xsTki418EVPeNjzIGlXUB4vpvNvhZ/2ZoPztCETitn8PTJBPdvJpnHg4sDFz
lJPcNU48HOTXOPFwYENsdeLbfhHxcJBvIuKxiP4Oz1Z7iYh4LJJ/IuKxiKZD
K0PDJ8eIh5N8HCMeTmTsSLhe/NIY+ekkP4XEwwWuciYvZ0RIPFzkq5B4uDAR
7I8q2SUkHm7yV0A83Jjvbr3yPE9APNzks4B4eCB71zl/dL+AeHjIbwHx8GAp
dffaawt84uEl3/nEw4uwQdnTF6v5xMNL/vOJhw9zwr4K7yo+8fDReeARDx/8
PS2nK/t4xOMOnQ8e/gdEkiPL
               "]]}}}, {}}, {
          DisplayFunction -> Identity, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
           PlotRange -> {{0, 1.}, {0, 0.9826794919243103}}, DisplayFunction -> 
           Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {"\[Sigma] of swarm", "Max Torque"}, 
           AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
           Frame -> {{False, False}, {False, False}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
           PlotLabel -> 
           "Maximum possible torque on object pivoted at 0, length 1", 
           PlotRange -> {{0, 1.}, {0, 0.9826794919243103}}, PlotRangeClipping -> 
           True, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
         Placed[
          Unevaluated[
           PointLegend[{
             Directive[
              PointSize[0.011111111111111112`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              PointSize[0.011111111111111112`], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              PointSize[0.011111111111111112`], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]]}, {"Normal", "Triangle", "Uniform"}, 
            Joined -> {{True, True, True}}, LabelStyle -> {}, LegendLayout -> 
            "Column", 
            LegendMarkers -> {{False, Automatic}, {False, Automatic}, {
              False, Automatic}}]], {Right, Top}, Identity]]& ],
       AutoDelete->True,
       Editable->True,
       SelectWithContents->False,
       Selectable->True],
      TraditionalForm], {576., -116.80842387373012`}, {
     Center, Center}, {360., 222.49223594996212`}]}, {}},
  ContentSelectable->True,
  ImageSize->{780., 245.61684774746024`},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.684634471318781*^9, 3.6846356917367353`*^9, 
  3.684635909148432*^9, 3.684668018890717*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1: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
3649XSc=
        
        "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwlzkdOQgEARdH/wV4Q7IigIMp+3IAJC9B12ruiYu8dOxbQkzg4uW/4ssWZ
yelIEAQhU0SNBhppopkWWmmjnQ46idFFnATd9NBLH/0MMEiSIVIMkybDCKNk
yTFGngLjRJggDP9P/kqdGj9888UnVT54541XXnjmiQqPPHDPHbfccM0Vl1xw
zhmnnHDMEYccsE+ZPXbZocQ2W2yywTprrLLCMkssssA8c8zyBxBkNkU=
             
             "]]]}, {}, {}}, {{}, {}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
             18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
            34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 
            50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 
            66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 
            82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 
            98, 99, 100}]}, 
          {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[{101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 
            112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 
            125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 
            138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 
            151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 
            164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 
            177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 
            190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200}]}, 
          {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[{201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 
            212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 
            225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 
            238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 
            251, 252, 253, 254, 255, 256, 257, 294}]}, 
          {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[{259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 
            270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 
            283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 295}]}}}], {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"\[Sigma] of swarm\"", TraditionalForm], 
        FormBox["\"Optimal push location (\[Mu])\"", TraditionalForm]},
      AxesOrigin->{0, 0.403},
      DisplayFunction->Identity,
      Epilog->{
        Dashing[{Small, Small}], 
        LineBox[
         NCache[{{0, 
            Rational[2, 3]}, {100, 
            Rational[2, 3]}}, {{0, 0.6666666666666666}, {
           100, 0.6666666666666666}}]], 
        LineBox[
         NCache[{{0, 2^Rational[-1, 2]}, {100, 2^Rational[-1, 2]}}, {{
           0, 0.7071067811865475}, {100, 0.7071067811865475}}]], 
        LineBox[
         NCache[{{0, 
            Rational[1, 2]}, {100, 
            Rational[1, 2]}}, {{0, 0.5}, {100, 0.5}}]]},
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->Medium,
      Method->{},
      PlotLabel->FormBox[
       "\"Where to push object pivoted at 0, length 1, to maximize torque\"", 
        TraditionalForm],
      PlotRange->{{0, 1.}, {0.4, 1.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Prolog->InsetBox[
        GraphicsBox[{
          RGBColor[0.6, 0.4, 0.2], 
          RectangleBox[
           NCache[{0, 
             Rational[-1, 10]}, {0, -0.1}], 
           NCache[{1, 
             Rational[1, 10]}, {1, 0.1}]], 
          RGBColor[0, 0, 1], 
          PointBox[{0, 0}], 
          RGBColor[1, 0, 0], 
          PolygonBox[
           NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
              Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
             1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]], 
          GrayLevel[0], 
          PointSize[Tiny], 
          PointBox[CompressedData["
1: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
9cjpHigyX3FcxZPC1IUPHjLvDUHb/qu713+ncFG+VUi/UCvMMFrLdJZTWHhY
b8qZ6ge+9kLby5ZkXgdGiv+pdAK7ODXF7Sbh4XvyJwI+jcKVte/+JEcy0L4s
Sd5NfwJeZH4wvHqIiZFl/vzizzrgjUvjorUPmBhQo1y5gDsMK3z/bXAbpDHz
2/3xk5L9kJrEWCHcRqNrkFV42cVu8GyXlW6MEsexrf5Dkqn98ODmtyVptQzc
qiCzpPTrFLjar8s49JzCV2U+GmEdo7BmjvquyRYafy68InoLSf6YD7axWUyU
WyMSDleGQEiy9dJYOoWXjv8yuPGIB7yDE/n5osSPtBeY39HqgUFF2PNNn4lj
2V8k9UifV849mvn9I+FDZaMTf3U64fY6I2eTUQp1lorMlzDtg9WnvlTNI/vj
mTIj1jzYC+8GDWpCyH6q5Y3Ee36bgHKBqt0idkycP5QIZ3+1g2q92LrSr0z0
ly2ZtSL6FwQU/yrYGsrES04XHfK3cWF1c0maM/F5dvb5te4LeWAdk3ozaFQc
Py045VYgwwPn+otfI55ReMw7eS0ruA0uPc8JnRphYLHl+asNF3ig3C5beEKG
xq6mXWFizT0g1FuvM4cmfHXlpKbt6lbwcS1sMrhDo9U6xVedeziQLFljknyb
wmvHVl7MuzsD973iXNx+MVHFJZ8HHp3At8H1c5EyhS8XPM431uOB6tcAgbE+
MTy/ofa68JleaJBaxTW+S+Ob1guPFlqRfNwd7zroycCLEHgqU34MzJtlfRc8
pvF+6oDs8wYe3JblBpw8yMAsCROF0sdjkGqn0+WtSvjosa6huWI3CNnp9j29
SKOKv8OizZkTMG14+pj8FvL8DZzyfZwOCFAQiYuoZ+DGjIKfZXe4sKqt1GCK
8HtwU93C721c0NX+VzZ9m4kPlD79bkoegUdfqJfuBxh4aZ2zz+Ov9fC1TW/i
LcmbO24jEguIz7/je9nlaMvE3/sOjJ70God4d881TbuZuMDWQ0w7YhherC1o
/07yx4sRXRtUzgbjSL70p+qEb+vzE0tr26DG4ejbPDPCM2aFGZI1HNAVKRX8
p8tAz5Zh7a6PbDBKOFccNEbhXdODjFVWo8SvbZQPhovjVZ+T7I6QJrCX33DK
n/DC1a1Z+63Se+GKlDo1SvhI9RN9ZWn4MOgYbfCWuUf6I1ZIdzKuGvrKXXxC
+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
NDYM+Z/PVuVAmkzIdCnp/2nj7UMOzCE4ozFAL1Ci0WX4ouV0KA+yfq62ySFf
T/M32n680Q3v106f9/FkICPg2IqOom54sMf9ykfSF47jCxvMDnDh+29nDeH/
KFTQKE9xVeiCu98WszZliuGtbqPHtN4IqL9nGUWL0ejr+7Io5D3Ju/C6uB4F
wrPfWYvl2jogNdhwmu8YhZzlq1+WARekZLe/4WtiovR5u+465Q44ecnneLco
Ey2Evu3lruoG3+sXH8bvofDRWce884XtMNv3oWPF//NzSOHC3WIeRMtH+zwz
oTFh3u9bUovZsKbWen5Mlhiq91UNTs7qAXsB/bcOYTSqBxTNJNez4aDeskvC
9kws4woNzgoYgWylxBAl0u8aP/U0D6Rwwbn3xpOJqxL4xJ5vqbABG8LGn+2Z
rKYwYMMjw5sbOXCm6DVv/mEmDsecyq7ObAb32lV/jb8xsSm0o/7yxX6wSz9+
/cMWcTxSPbpdQpwNO8z/iW0m/ea1wCVXv3gARsNWBWqfoVGxLiS/+thf+D5r
1u1/f2h8VCQUzLneB/szpbUv2VLY5CHzXlKzCzZ4ha0KKafwUv/S4lWby6Hw
s+63WrJfFZVfvSyiRsHLp2Dvho00zqfEqqu3jsM47+e810fFkaXBt69PrA/e
9t4Xjf9MI99Gu/7VhMdXjTwvKrvOxEufRy4GJE7ApcvW8vP2MrHFyGR8epjk
VWrcUMQ94ost0UfjXQfAOHYqbrYL4eMNwS/9CC+9mfqjo2XNRJd8NZdLDSOQ
t+THyWoTCus2q+RTPQNQnnTwhZcwjfrxLGkpdTYIxqxKoybIvDXxjUo4s8FE
+ais0SIK334XrVwt2gd7+7PSYib///sSUiKPk7tA8I1b8nMrJr6wmYkdaO+D
+S/SfPado/GSgeGaUtFBGH/2yuNeD8kvrS8lrPdDULhQKEvEg8Yef6s2810t
oFB8Mmn1/f//fwmj/JZvf8B6j1rH927C60I/hq7OdAPLmE/tM5m/W8t7dTcR
f/0UqDVSSZ73Cb4THRBkg51+8BLFPHL+XZ3S6lYs+LxfcX0R4Y+d9kXGa0KG
QTmjdNZZPgk851aR2bKIB1v3CWnrMpi4+03r+ZM+PCiudn/73y4ab93KN8r4
2QtbZh9NSiP+AmBuOd3KhYDPbaP10xQWWJVgR94wHNtfNi7fJo6nx0znz6rp
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
bhHX
           "]]}, PlotRange -> {{-1, 3}, {-8, 2}}, AxesOrigin -> {0, 0}]],
      
      Ticks->{Automatic, Automatic}], {191.00408802586253`, -116.80842387373012`},
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212`}], InsetBox[
     FormBox[
      TagBox[
       FormBox[
        GraphicsBox[{{{}, {{}, {}, 
            {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
             0.011111111111111112`], AbsoluteThickness[1.6], 
             LineBox[CompressedData["
1:eJwtlAtMU2cUxxERC4gukzp1DMTNFXUmG6CbMPgTVxDsRASHm+BwDHW+Ikhm
AAfIhjEs2zTI3NrxEGGLyAABgxARBoJQaGsf0JZ3X1BKeQUpkYljbT0nubn5
7r3fOef//53vesSdjzhua2NjE2++LPdLLhV71alZeFgyVh1tP41X61yYOG2m
Ku8p1LldMR6sK4C48kqN64VJel+C/L0/eR5vmACPa4lS2O04xX62ZgL11u8r
UGb7bKPXGSPMC/OTKix+JD68WjhO++/D61Dol00+43BUFCf4Oz5AF+ulqKzI
AGs6bj3+zdyz/chaA7bGXGsxeTYgOOjNH09mj1E/jdjqcfdW5vIxlJh3K4r/
AdMhqzEuU48Ja71mJK1ULols9fDxtsRjZGyZC8m5Okr1W2E/XSdIXzOKxyZP
c4U2+Po4/XeGNwInaz/tkIU6q3Z6jiDCWrAD4XkHyhvqdKSXj/EgbouOo4Mm
1ZKwE/xrN0pvqrXUrwCaT3dvaErRItHSXoIQnJ2uXWEuWvJHhOx26Ru+VRrY
WEMMPS/mWHK4hvSIwetfilo+q0aI2lJAAt6pwAD5r2rSJ8EzH4bXpJ8a11ss
AqQ467Q5m61TwSrXWwan69lRyl9UsMpRyDBfnbyqxE9F+ruxLeRwOrtnGO6W
dtx6UOu+3p774TD50YNu1mLzroIhnDxhCTmM2abaVQ5D5I8C9g3+SyuTB2HJ
5lKhQOuCx+Ja4wD5pUS1h+76xrgBzFvSmZRIY936ym6wn/zrxYrey6/XR/cj
wDoAfVjYU5HlPtRHfvZhqIC9xi2+D9b2rvTDjhFRw5vsJX8HkBAQve9Sai+E
AksM4LMZduWfjr3k9yBu+DSpl/KVYFobHMILbeo7CT5K8n8IqvnsdYNCBazp
Yobh9N0XHTtOK4iHCl5ldYJQBwXpUUFYERu8oUxOfFRwYMTPZh2Qkz4VPGOX
vX9xvod4qfHJLqa9orCH9KoR6Vz8bg6nh/ipwcgtn8lZ6Cb9GuwfvpPQVtpN
PDVgJzbHrovpxqt0Giw78t7mpNe6ia8Wrn3lrfwnMvJHi0ctaQuMDBnx1sKJ
U+ayabeM/NIh5IO3GEtzUuKvQ3J1cOzNain5p8PIpr98FYlSmocRGP9w49R4
ScnPEQTm+gldTRKajxH8Hnk6y75eQv6Ooq/Iu/brdAnNyygM4rQtnkES8nsU
5cZB5xBnCZ138zlNeOlWJxeT/3qEa9cnnysS0zzpMfA9r/joOTHxGMM3tbKc
dF8x8RjDby/l3CcMMfEYw8fH9fLP7z0lHub/guzOtrCDT4mHAdLKy8+j50TE
w4DBu0v3Erki4mFAw+32+IxAEfEYBytv+NG3BiHxGEd6BWchKFdI8zmOoBS9
Sh0oJB5GPPwhs81vWkA8jGA17kwJLhQQDyP8/VfsM4ULiMcEfvYuXfSzExCP
CSS5Fbavru8iHhOIYZ4NizvfRTwmcZvFzN/O6iIek5h/0Pn2MVUn8ZjEBX5r
tYnXSTymcMIv7KImqpN4TOHQi8VZV5dO4jGFrkCmbZ6UTzymsdHEFEXl8InH
NP6+ePYpO5JPPKax6vl+/lEmn3jMmOvdf8JVduB/Gv0hXg==
              "]]}, 
            {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
             0.011111111111111112`], AbsoluteThickness[1.6], 
             LineBox[CompressedData["
1:eJwtkwtMk2cUhuskwEAzAjIUESZjgihRLlNn0FedCxs6boILlzlHKijqRKWO
YRSJohOmsmkioqIMAgIRGQIiKk4u2lJ6pxQoll4o0AsXp4gSxLX1nOTPn+/7
/++c877P+RYnHoja9RGDwWCaHvP76LyqEFXGKYRke2dyvxrDh/UllI8+O52Z
PooG92xDZEMhphZYXXZ5OELfS7DhC9+Nf1iNoOCKOcpxy71xgyTSiPuW/6tQ
czv0en+xAaaFaecfzDgEdxZN6el8LUaD39jabtfDTlacus7uHkof7Fg7U6eD
Jd2V+yjabzz6i6sOSxMuNE/4PITNbX//jSeHqZ8mxOauDf1xfAglptOy4n+x
zqci89bPQzBa6j1BY0jqORvZIIICzdEC10+W790RMUj1W8FyO5aVx9OiZcLH
VKENOT/UyE+EaWFv6ecZDj04GOMoGUCUpSAbM/Furd7xA6SXA+bH0oUlgxqo
M8wJ25F70y8vhaWhfjtwffXl6h02Ghw0t5fKw03n1hPMa2ryh4/ulWvO7QxS
g2EJIaa3h02vFqhIjxDXWt9dFe5T4VuVuYAITYerjA5zVaRPhOC9KUuVd5TI
azYLEIO9qW3bkhglLHIDJfg0Z/aBu2/7YZEjk8Cv3CXKPayf9HeicuvJoPIy
BTzM7bhLEec0a1m8tYL8kMIu5pjN8pTnSE4yRxesmU/P2Er6yB8ZIrgPjks3
9MGcbV6VaV39eM2hu3LyqxsX5bu3NPrK8dqcbqIbl77b9Op0aS/514NjXNbi
6iW9WG8ZgF4EhZWtmVvZQ372wjZrZyUrsAeW9rLl+C+5hfnkcTf524di1W8L
OOHd4HWYow929S0nkjQy8vs5SqPHj6ZlyOBsaVCBekHCSsE8GfmvwKrPPV2i
a7pgSZfQD6ZGZ6WO6iIeSmS8EC+LfS0lPUokMjTzr16TEh8lOJ5+VTnfSEmf
EtZNF13nvOgkXir48LoFVjc6Sa8Kzl5nfo0P7yR+KuTLPYYmZ3WSfjX+2qZw
aqmXEE81xvmR1mX7JfiQTg3Zvmne+SUS4qtBaOhCVpJKTP5o8Dyg5pVroZh4
a1BoGPEpSBCTXwPoTdS3id3ExH8Ahy9pt9YqROTfANLSB2at+FtE86CFX3GH
KjBZRH5q4ev/Mr/WT0TzocUy+88yiieE5K/pXu2afeRlk5DmZRDBp1yd8s8K
ye9BvAlgJGXHCOm+D2HypZddtaeQ/B/C7nDpl65qAc3TEDafXx/nlSUgHsP4
Pb3kzxRPAfEYxtf890972vjEYxhzehfV/bSXTzyGEeC0qk/vyCceOnilOaan
POQRDx2YWc1H+Mk84qFDUrjogI0zj3josXb55FXr1g7ioUeFDrxHaR00n3po
F91I9vDuIB4GdNkYY93lXOJhwPyFcKnK4xIPA9xyK/OaQ7jEw4jo4+ErIhhc
4mFEbX8df0tjO/Ewwt4h+14Fq514jCDuPasgMaCdeIzAOuNC7p5xDvEYgW99
0bu6OxziMYr8PTOP1qdyiMco8vR7xqf8OcRjFJFOm+zVr9jEYwyFEpnE0MAm
HmNQ5ryJczjOJh5jcDtc8jZkM5t4jENxfuz7XHs2/gd7WRvo
              "]]}, 
            {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
             0.011111111111111112`], AbsoluteThickness[1.6], 
             LineBox[CompressedData["
1:eJwtkwtQVGUYhsGBkcGmkQYDCTGMHFQ05ZZDwmuJQjMocommcStCwEpQwSIB
yyYlGskJIgtxIgQTUILoujTk4F5Y2BvsLsvCsqx732WvTomNpTtxjt8/c2bn
nLPn+7/vfZ4/tuR4ftmKgICA0uWL+a0PH8gy1p3DwdqQPdHVPjy6/wqdf63+
dKfFC25MgyuP24HVFWsnCou89P4qSq2xj1WNe9B+iVl94L6xOfdCmgfD7P8H
EDmb+GVfvxvLN8tPhnAs7wW1MMZN3/+CMfGeSFOzC6Ga7hPpob9jfWbOIf8K
F9hyl4ZR82dhR9T7TmzifMFbih+BIvV1Y6p9kfq5ic0/lsUVvLaIq8tfa7pH
8cmmY0eOSxxws/vdgq6r5npTugPJScziIyn6jKdn0E77C/D5xcbtglg7+Evx
yzsIYX28+aSh1YZVbD8iZHzW9tuDYBvy2Q3H8U3glfuRp6w07wR8dX27UpwW
mOqYgmJk3R06k8exUL9SdFb+wauUm1HFtHdChvs2XvD53WbKR478Ykn2tZ9M
CGDXFG7MqZp4cSaaZwpBBTq5/msjso3MBgpwpJaw/0KMNJ8Cv+71FEbUG9DM
YwZQ4kbIh/Gt2ttgx01SYfsrd07eEuvBjqNRoSrf8GytdIHmn4Yud4izRq/D
eqadGDUe1mvT4vzzlIcaZY055W9umceRcmbNoCouQvF9qZby0eDhvuyme71z
YKqFD2gQ9J3maMU/s5TXLNRRge+k5c7iHlNuaRbtp1s+7h3UUH5zMOPuk2GR
GmSwAmhx4NURrr5xhvLU4ue/07ed96vBttcwj8MvLqja6tWUrw4Pdc8kXPZP
QyZllg7inZ1dWxqnKe8FKPZvOOUJn8YatkE9Rj5IUDb1qCh/PdJTahzcDBXY
cpzbCIlKydmqVRIPA9YlNe/tqVXSPAb4gpIyndFK4mPAe+sqi2/yFTSfAfIf
Bpy+SgXxMqL3XMPK3KcUNK8ROyLOFg1KpoifEaKagS77R1M0vwnmsKLLiuQp
4mkinpN4VM6E8s5v2zgHJ4mvmfjKKR8z+m1vDTe+LCfeZuIto7ws2Nee7ygp
kBF/C/GXUn4WFJbUyw5XSMkHK/kgoTytqFvQb3yuVUJ+WMkPCeVrQ8UTZ5da
xsTki418EVPeNjzIGlXUB4vpvNvhZ/2ZoPztCETitn8PTJBPdvJpnHg4sDFz
lJPcNU48HOTXOPFwYENsdeLbfhHxcJBvIuKxiP4Oz1Z7iYh4LJJ/IuKxiKZD
K0PDJ8eIh5N8HCMeTmTsSLhe/NIY+ekkP4XEwwWuciYvZ0RIPFzkq5B4uDAR
7I8q2SUkHm7yV0A83Jjvbr3yPE9APNzks4B4eCB71zl/dL+AeHjIbwHx8GAp
dffaawt84uEl3/nEw4uwQdnTF6v5xMNL/vOJhw9zwr4K7yo+8fDReeARDx/8
PS2nK/t4xOMOnQ8e/gdEkiPL
              "]]}}, {}}, InsetBox[
           TemplateBox[{"\"Normal\"","\"Triangle\"","\"Uniform\""},
            "PointLegend",
            DisplayFunction->(FormBox[
              StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False], TraditionalForm]& ),
            Editable->True,
            InterpretationFunction:>(RowBox[{"PointLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "True", ",", "True"}], "}"}], 
                    "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
               "]"}]& )], Scaled[{0.99, 0.99}], ImageScaled[{1, 1}],
           BaseStyle->{FontSize -> Larger},
           FormatType->StandardForm]},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{
           FormBox["\"\[Sigma] of swarm\"", TraditionalForm], 
           FormBox["\"Max Torque\"", TraditionalForm]},
         AxesOrigin->{0, 0},
         DisplayFunction->Identity,
         Frame->{{False, False}, {False, False}},
         FrameLabel->{{None, None}, {None, None}},
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImageSize->Medium,
         Method->{},
         PlotLabel->FormBox[
          "\"Maximum possible torque on object pivoted at 0, length 1\"", 
           TraditionalForm],
         PlotRange->{{0, 1.}, {0, 0.9826794919243103}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}},
         Ticks->{Automatic, Automatic}],
        TraditionalForm],
       InterpretTemplate[Legended[
         Graphics[{{}, {{{}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              Line[CompressedData["
1:eJwtlAtMU2cUxxERC4gukzp1DMTNFXUmG6CbMPgTVxDsRASHm+BwDHW+Ikhm
AAfIhjEs2zTI3NrxEGGLyAABgxARBoJQaGsf0JZ3X1BKeQUpkYljbT0nubn5
7r3fOef//53vesSdjzhua2NjE2++LPdLLhV71alZeFgyVh1tP41X61yYOG2m
Ku8p1LldMR6sK4C48kqN64VJel+C/L0/eR5vmACPa4lS2O04xX62ZgL11u8r
UGb7bKPXGSPMC/OTKix+JD68WjhO++/D61Dol00+43BUFCf4Oz5AF+ulqKzI
AGs6bj3+zdyz/chaA7bGXGsxeTYgOOjNH09mj1E/jdjqcfdW5vIxlJh3K4r/
AdMhqzEuU48Ja71mJK1ULols9fDxtsRjZGyZC8m5Okr1W2E/XSdIXzOKxyZP
c4U2+Po4/XeGNwInaz/tkIU6q3Z6jiDCWrAD4XkHyhvqdKSXj/EgbouOo4Mm
1ZKwE/xrN0pvqrXUrwCaT3dvaErRItHSXoIQnJ2uXWEuWvJHhOx26Ru+VRrY
WEMMPS/mWHK4hvSIwetfilo+q0aI2lJAAt6pwAD5r2rSJ8EzH4bXpJ8a11ss
AqQ467Q5m61TwSrXWwan69lRyl9UsMpRyDBfnbyqxE9F+ruxLeRwOrtnGO6W
dtx6UOu+3p774TD50YNu1mLzroIhnDxhCTmM2abaVQ5D5I8C9g3+SyuTB2HJ
5lKhQOuCx+Ja4wD5pUS1h+76xrgBzFvSmZRIY936ym6wn/zrxYrey6/XR/cj
wDoAfVjYU5HlPtRHfvZhqIC9xi2+D9b2rvTDjhFRw5vsJX8HkBAQve9Sai+E
AksM4LMZduWfjr3k9yBu+DSpl/KVYFobHMILbeo7CT5K8n8IqvnsdYNCBazp
Yobh9N0XHTtOK4iHCl5ldYJQBwXpUUFYERu8oUxOfFRwYMTPZh2Qkz4VPGOX
vX9xvod4qfHJLqa9orCH9KoR6Vz8bg6nh/ipwcgtn8lZ6Cb9GuwfvpPQVtpN
PDVgJzbHrovpxqt0Giw78t7mpNe6ia8Wrn3lrfwnMvJHi0ctaQuMDBnx1sKJ
U+ayabeM/NIh5IO3GEtzUuKvQ3J1cOzNain5p8PIpr98FYlSmocRGP9w49R4
ScnPEQTm+gldTRKajxH8Hnk6y75eQv6Ooq/Iu/brdAnNyygM4rQtnkES8nsU
5cZB5xBnCZ138zlNeOlWJxeT/3qEa9cnnysS0zzpMfA9r/joOTHxGMM3tbKc
dF8x8RjDby/l3CcMMfEYw8fH9fLP7z0lHub/guzOtrCDT4mHAdLKy8+j50TE
w4DBu0v3Erki4mFAw+32+IxAEfEYBytv+NG3BiHxGEd6BWchKFdI8zmOoBS9
Sh0oJB5GPPwhs81vWkA8jGA17kwJLhQQDyP8/VfsM4ULiMcEfvYuXfSzExCP
CSS5Fbavru8iHhOIYZ4NizvfRTwmcZvFzN/O6iIek5h/0Pn2MVUn8ZjEBX5r
tYnXSTymcMIv7KImqpN4TOHQi8VZV5dO4jGFrkCmbZ6UTzymsdHEFEXl8InH
NP6+ePYpO5JPPKax6vl+/lEmn3jMmOvdf8JVduB/Gv0hXg==
               "]]}, {
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              Line[CompressedData["
1:eJwtkwtMk2cUhuskwEAzAjIUESZjgihRLlNn0FedCxs6boILlzlHKijqRKWO
YRSJohOmsmkioqIMAgIRGQIiKk4u2lJ6pxQoll4o0AsXp4gSxLX1nOTPn+/7
/++c877P+RYnHoja9RGDwWCaHvP76LyqEFXGKYRke2dyvxrDh/UllI8+O52Z
PooG92xDZEMhphZYXXZ5OELfS7DhC9+Nf1iNoOCKOcpxy71xgyTSiPuW/6tQ
czv0en+xAaaFaecfzDgEdxZN6el8LUaD39jabtfDTlacus7uHkof7Fg7U6eD
Jd2V+yjabzz6i6sOSxMuNE/4PITNbX//jSeHqZ8mxOauDf1xfAglptOy4n+x
zqci89bPQzBa6j1BY0jqORvZIIICzdEC10+W790RMUj1W8FyO5aVx9OiZcLH
VKENOT/UyE+EaWFv6ecZDj04GOMoGUCUpSAbM/Furd7xA6SXA+bH0oUlgxqo
M8wJ25F70y8vhaWhfjtwffXl6h02Ghw0t5fKw03n1hPMa2ryh4/ulWvO7QxS
g2EJIaa3h02vFqhIjxDXWt9dFe5T4VuVuYAITYerjA5zVaRPhOC9KUuVd5TI
azYLEIO9qW3bkhglLHIDJfg0Z/aBu2/7YZEjk8Cv3CXKPayf9HeicuvJoPIy
BTzM7bhLEec0a1m8tYL8kMIu5pjN8pTnSE4yRxesmU/P2Er6yB8ZIrgPjks3
9MGcbV6VaV39eM2hu3LyqxsX5bu3NPrK8dqcbqIbl77b9Op0aS/514NjXNbi
6iW9WG8ZgF4EhZWtmVvZQ372wjZrZyUrsAeW9rLl+C+5hfnkcTf524di1W8L
OOHd4HWYow929S0nkjQy8vs5SqPHj6ZlyOBsaVCBekHCSsE8GfmvwKrPPV2i
a7pgSZfQD6ZGZ6WO6iIeSmS8EC+LfS0lPUokMjTzr16TEh8lOJ5+VTnfSEmf
EtZNF13nvOgkXir48LoFVjc6Sa8Kzl5nfo0P7yR+KuTLPYYmZ3WSfjX+2qZw
aqmXEE81xvmR1mX7JfiQTg3Zvmne+SUS4qtBaOhCVpJKTP5o8Dyg5pVroZh4
a1BoGPEpSBCTXwPoTdS3id3ExH8Ahy9pt9YqROTfANLSB2at+FtE86CFX3GH
KjBZRH5q4ev/Mr/WT0TzocUy+88yiieE5K/pXu2afeRlk5DmZRDBp1yd8s8K
ye9BvAlgJGXHCOm+D2HypZddtaeQ/B/C7nDpl65qAc3TEDafXx/nlSUgHsP4
Pb3kzxRPAfEYxtf890972vjEYxhzehfV/bSXTzyGEeC0qk/vyCceOnilOaan
POQRDx2YWc1H+Mk84qFDUrjogI0zj3josXb55FXr1g7ioUeFDrxHaR00n3po
F91I9vDuIB4GdNkYY93lXOJhwPyFcKnK4xIPA9xyK/OaQ7jEw4jo4+ErIhhc
4mFEbX8df0tjO/Ewwt4h+14Fq514jCDuPasgMaCdeIzAOuNC7p5xDvEYgW99
0bu6OxziMYr8PTOP1qdyiMco8vR7xqf8OcRjFJFOm+zVr9jEYwyFEpnE0MAm
HmNQ5ryJczjOJh5jcDtc8jZkM5t4jENxfuz7XHs2/gd7WRvo
               "]]}, {
              Hue[0.1421359549995791, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              Line[CompressedData["
1:eJwtkwtQVGUYhsGBkcGmkQYDCTGMHFQ05ZZDwmuJQjMocommcStCwEpQwSIB
yyYlGskJIgtxIgQTUILoujTk4F5Y2BvsLsvCsqx732WvTomNpTtxjt8/c2bn
nLPn+7/vfZ4/tuR4ftmKgICA0uWL+a0PH8gy1p3DwdqQPdHVPjy6/wqdf63+
dKfFC25MgyuP24HVFWsnCou89P4qSq2xj1WNe9B+iVl94L6xOfdCmgfD7P8H
EDmb+GVfvxvLN8tPhnAs7wW1MMZN3/+CMfGeSFOzC6Ga7hPpob9jfWbOIf8K
F9hyl4ZR82dhR9T7TmzifMFbih+BIvV1Y6p9kfq5ic0/lsUVvLaIq8tfa7pH
8cmmY0eOSxxws/vdgq6r5npTugPJScziIyn6jKdn0E77C/D5xcbtglg7+Evx
yzsIYX28+aSh1YZVbD8iZHzW9tuDYBvy2Q3H8U3glfuRp6w07wR8dX27UpwW
mOqYgmJk3R06k8exUL9SdFb+wauUm1HFtHdChvs2XvD53WbKR478Ykn2tZ9M
CGDXFG7MqZp4cSaaZwpBBTq5/msjso3MBgpwpJaw/0KMNJ8Cv+71FEbUG9DM
YwZQ4kbIh/Gt2ttgx01SYfsrd07eEuvBjqNRoSrf8GytdIHmn4Yud4izRq/D
eqadGDUe1mvT4vzzlIcaZY055W9umceRcmbNoCouQvF9qZby0eDhvuyme71z
YKqFD2gQ9J3maMU/s5TXLNRRge+k5c7iHlNuaRbtp1s+7h3UUH5zMOPuk2GR
GmSwAmhx4NURrr5xhvLU4ue/07ed96vBttcwj8MvLqja6tWUrw4Pdc8kXPZP
QyZllg7inZ1dWxqnKe8FKPZvOOUJn8YatkE9Rj5IUDb1qCh/PdJTahzcDBXY
cpzbCIlKydmqVRIPA9YlNe/tqVXSPAb4gpIyndFK4mPAe+sqi2/yFTSfAfIf
Bpy+SgXxMqL3XMPK3KcUNK8ROyLOFg1KpoifEaKagS77R1M0vwnmsKLLiuQp
4mkinpN4VM6E8s5v2zgHJ4mvmfjKKR8z+m1vDTe+LCfeZuIto7ws2Nee7ygp
kBF/C/GXUn4WFJbUyw5XSMkHK/kgoTytqFvQb3yuVUJ+WMkPCeVrQ8UTZ5da
xsTki418EVPeNjzIGlXUB4vpvNvhZ/2ZoPztCETitn8PTJBPdvJpnHg4sDFz
lJPcNU48HOTXOPFwYENsdeLbfhHxcJBvIuKxiP4Oz1Z7iYh4LJJ/IuKxiKZD
K0PDJ8eIh5N8HCMeTmTsSLhe/NIY+ekkP4XEwwWuciYvZ0RIPFzkq5B4uDAR
7I8q2SUkHm7yV0A83Jjvbr3yPE9APNzks4B4eCB71zl/dL+AeHjIbwHx8GAp
dffaawt84uEl3/nEw4uwQdnTF6v5xMNL/vOJhw9zwr4K7yo+8fDReeARDx/8
PS2nK/t4xOMOnQ8e/gdEkiPL
               "]]}}}, {}}, {
          DisplayFunction -> Identity, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
           PlotRange -> {{0, 1.}, {0, 0.9826794919243103}}, DisplayFunction -> 
           Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {"\[Sigma] of swarm", "Max Torque"}, 
           AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
           Frame -> {{False, False}, {False, False}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
           PlotLabel -> 
           "Maximum possible torque on object pivoted at 0, length 1", 
           PlotRange -> {{0, 1.}, {0, 0.9826794919243103}}, PlotRangeClipping -> 
           True, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
         Placed[
          Unevaluated[
           PointLegend[{
             Directive[
              PointSize[0.011111111111111112`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              PointSize[0.011111111111111112`], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              PointSize[0.011111111111111112`], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]]}, {"Normal", "Triangle", "Uniform"}, 
            Joined -> {{True, True, True}}, LabelStyle -> {}, LegendLayout -> 
            "Column", 
            LegendMarkers -> {{False, Automatic}, {False, Automatic}, {
              False, Automatic}}]], {Right, Top}, Identity]]& ],
       AutoDelete->True,
       Editable->True,
       SelectWithContents->False,
       Selectable->True],
      TraditionalForm], {576., -116.80842387373012`}, {
     Center, Center}, {360., 222.49223594996212`}]}, {}},
  ContentSelectable->True,
  ImagePadding->{{174.714236, 175.714236}, {1., 0.}},
  ImageSize->{780., 245.61684774746024`},
  PlotRange->{{186., 582.}, {-238.61684774746024`, 5.}},
  PlotRangePadding->Automatic]], "Input",
 CellChangeTimes->{3.684575004980954*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1: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
3649XSc=
        
        "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwlzkdOQgEARdH/wV4Q7IigIMp+3IAJC9B12ruiYu8dOxbQkzg4uW/4ssWZ
yelIEAQhU0SNBhppopkWWmmjnQ46idFFnATd9NBLH/0MMEiSIVIMkybDCKNk
yTFGngLjRJggDP9P/kqdGj9888UnVT54541XXnjmiQqPPHDPHbfccM0Vl1xw
zhmnnHDMEYccsE+ZPXbZocQ2W2yywTprrLLCMkssssA8c8zyBxBkNkU=
             
             "]]]}, {}, {}}, {{}, {}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
             18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
            34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 
            50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 
            66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 
            82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 
            98, 99, 100}]}, 
          {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[{101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 
            112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 
            125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 
            138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 
            151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 
            164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 
            177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 
            190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200}]}, 
          {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[{201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 
            212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 
            225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 
            238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 
            251, 252, 253, 254, 255, 256, 257, 294}]}, 
          {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[{259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 
            270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 
            283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 295}]}}}], {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"\[Sigma] of swarm\"", TraditionalForm], 
        FormBox["\"Optimal push location (\[Mu])\"", TraditionalForm]},
      AxesOrigin->{0, 0.403},
      DisplayFunction->Identity,
      Epilog->{
        Dashing[{Small, Small}], 
        LineBox[
         NCache[{{0, 
            Rational[2, 3]}, {100, 
            Rational[2, 3]}}, {{0, 0.6666666666666666}, {
           100, 0.6666666666666666}}]], 
        LineBox[
         NCache[{{0, 2^Rational[-1, 2]}, {100, 2^Rational[-1, 2]}}, {{
           0, 0.7071067811865475}, {100, 0.7071067811865475}}]], 
        LineBox[
         NCache[{{0, 
            Rational[1, 2]}, {100, 
            Rational[1, 2]}}, {{0, 0.5}, {100, 0.5}}]]},
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->Medium,
      Method->{},
      PlotLabel->FormBox[
       "\"Where to push object pivoted at 0, length 1, to maximize torque\"", 
        TraditionalForm],
      PlotRange->{{0, 1.}, {0.4, 1.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Prolog->InsetBox[
        GraphicsBox[{
          RGBColor[0.6, 0.4, 0.2], 
          RectangleBox[
           NCache[{0, 
             Rational[-1, 10]}, {0, -0.1}], 
           NCache[{1, 
             Rational[1, 10]}, {1, 0.1}]], 
          RGBColor[0, 0, 1], 
          PointBox[{0, 0}], 
          RGBColor[1, 0, 0], 
          PolygonBox[
           NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
              Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
             1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]], 
          GrayLevel[0], 
          PointSize[Tiny], 
          PointBox[CompressedData["
1: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
9cjpHigyX3FcxZPC1IUPHjLvDUHb/qu713+ncFG+VUi/UCvMMFrLdJZTWHhY
b8qZ6ge+9kLby5ZkXgdGiv+pdAK7ODXF7Sbh4XvyJwI+jcKVte/+JEcy0L4s
Sd5NfwJeZH4wvHqIiZFl/vzizzrgjUvjorUPmBhQo1y5gDsMK3z/bXAbpDHz
2/3xk5L9kJrEWCHcRqNrkFV42cVu8GyXlW6MEsexrf5Dkqn98ODmtyVptQzc
qiCzpPTrFLjar8s49JzCV2U+GmEdo7BmjvquyRYafy68InoLSf6YD7axWUyU
WyMSDleGQEiy9dJYOoWXjv8yuPGIB7yDE/n5osSPtBeY39HqgUFF2PNNn4lj
2V8k9UifV849mvn9I+FDZaMTf3U64fY6I2eTUQp1lorMlzDtg9WnvlTNI/vj
mTIj1jzYC+8GDWpCyH6q5Y3Ee36bgHKBqt0idkycP5QIZ3+1g2q92LrSr0z0
ly2ZtSL6FwQU/yrYGsrES04XHfK3cWF1c0maM/F5dvb5te4LeWAdk3ozaFQc
Py045VYgwwPn+otfI55ReMw7eS0ruA0uPc8JnRphYLHl+asNF3ig3C5beEKG
xq6mXWFizT0g1FuvM4cmfHXlpKbt6lbwcS1sMrhDo9U6xVedeziQLFljknyb
wmvHVl7MuzsD973iXNx+MVHFJZ8HHp3At8H1c5EyhS8XPM431uOB6tcAgbE+
MTy/ofa68JleaJBaxTW+S+Ob1guPFlqRfNwd7zroycCLEHgqU34MzJtlfRc8
pvF+6oDs8wYe3JblBpw8yMAsCROF0sdjkGqn0+WtSvjosa6huWI3CNnp9j29
SKOKv8OizZkTMG14+pj8FvL8DZzyfZwOCFAQiYuoZ+DGjIKfZXe4sKqt1GCK
8HtwU93C721c0NX+VzZ9m4kPlD79bkoegUdfqJfuBxh4aZ2zz+Ov9fC1TW/i
LcmbO24jEguIz7/je9nlaMvE3/sOjJ70God4d881TbuZuMDWQ0w7YhherC1o
/07yx4sRXRtUzgbjSL70p+qEb+vzE0tr26DG4ejbPDPCM2aFGZI1HNAVKRX8
p8tAz5Zh7a6PbDBKOFccNEbhXdODjFVWo8SvbZQPhovjVZ+T7I6QJrCX33DK
n/DC1a1Z+63Se+GKlDo1SvhI9RN9ZWn4MOgYbfCWuUf6I1ZIdzKuGvrKXXxC
+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
NDYM+Z/PVuVAmkzIdCnp/2nj7UMOzCE4ozFAL1Ci0WX4ouV0KA+yfq62ySFf
T/M32n680Q3v106f9/FkICPg2IqOom54sMf9ykfSF47jCxvMDnDh+29nDeH/
KFTQKE9xVeiCu98WszZliuGtbqPHtN4IqL9nGUWL0ejr+7Io5D3Ju/C6uB4F
wrPfWYvl2jogNdhwmu8YhZzlq1+WARekZLe/4WtiovR5u+465Q44ecnneLco
Ey2Evu3lruoG3+sXH8bvofDRWce884XtMNv3oWPF//NzSOHC3WIeRMtH+zwz
oTFh3u9bUovZsKbWen5Mlhiq91UNTs7qAXsB/bcOYTSqBxTNJNez4aDeskvC
9kws4woNzgoYgWylxBAl0u8aP/U0D6Rwwbn3xpOJqxL4xJ5vqbABG8LGn+2Z
rKYwYMMjw5sbOXCm6DVv/mEmDsecyq7ObAb32lV/jb8xsSm0o/7yxX6wSz9+
/cMWcTxSPbpdQpwNO8z/iW0m/ea1wCVXv3gARsNWBWqfoVGxLiS/+thf+D5r
1u1/f2h8VCQUzLneB/szpbUv2VLY5CHzXlKzCzZ4ha0KKafwUv/S4lWby6Hw
s+63WrJfFZVfvSyiRsHLp2Dvho00zqfEqqu3jsM47+e810fFkaXBt69PrA/e
9t4Xjf9MI99Gu/7VhMdXjTwvKrvOxEufRy4GJE7ApcvW8vP2MrHFyGR8epjk
VWrcUMQ94ost0UfjXQfAOHYqbrYL4eMNwS/9CC+9mfqjo2XNRJd8NZdLDSOQ
t+THyWoTCus2q+RTPQNQnnTwhZcwjfrxLGkpdTYIxqxKoybIvDXxjUo4s8FE
+ais0SIK334XrVwt2gd7+7PSYib///sSUiKPk7tA8I1b8nMrJr6wmYkdaO+D
+S/SfPado/GSgeGaUtFBGH/2yuNeD8kvrS8lrPdDULhQKEvEg8Yef6s2810t
oFB8Mmn1/f//fwmj/JZvf8B6j1rH927C60I/hq7OdAPLmE/tM5m/W8t7dTcR
f/0UqDVSSZ73Cb4THRBkg51+8BLFPHL+XZ3S6lYs+LxfcX0R4Y+d9kXGa0KG
QTmjdNZZPgk851aR2bKIB1v3CWnrMpi4+03r+ZM+PCiudn/73y4ab93KN8r4
2QtbZh9NSiP+AmBuOd3KhYDPbaP10xQWWJVgR94wHNtfNi7fJo6nx0znz6rp
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
bhHX
           "]]}, PlotRange -> {{-1, 3}, {-8, 2}}, AxesOrigin -> {0, 0}]],
      
      Ticks->{Automatic, Automatic}], {191.00408802586253`, -116.80842387373012`},
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212`}], InsetBox[
     FormBox[
      TagBox[
       FormBox[
        GraphicsBox[{{{}, {{}, {}, 
            {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
             0.011111111111111112`], AbsoluteThickness[1.6], 
             LineBox[CompressedData["
1:eJwtlAtMU2cUxxERC4gukzp1DMTNFXUmG6CbMPgTVxDsRASHm+BwDHW+Ikhm
AAfIhjEs2zTI3NrxEGGLyAABgxARBoJQaGsf0JZ3X1BKeQUpkYljbT0nubn5
7r3fOef//53vesSdjzhua2NjE2++LPdLLhV71alZeFgyVh1tP41X61yYOG2m
Ku8p1LldMR6sK4C48kqN64VJel+C/L0/eR5vmACPa4lS2O04xX62ZgL11u8r
UGb7bKPXGSPMC/OTKix+JD68WjhO++/D61Dol00+43BUFCf4Oz5AF+ulqKzI
AGs6bj3+zdyz/chaA7bGXGsxeTYgOOjNH09mj1E/jdjqcfdW5vIxlJh3K4r/
AdMhqzEuU48Ja71mJK1ULols9fDxtsRjZGyZC8m5Okr1W2E/XSdIXzOKxyZP
c4U2+Po4/XeGNwInaz/tkIU6q3Z6jiDCWrAD4XkHyhvqdKSXj/EgbouOo4Mm
1ZKwE/xrN0pvqrXUrwCaT3dvaErRItHSXoIQnJ2uXWEuWvJHhOx26Ru+VRrY
WEMMPS/mWHK4hvSIwetfilo+q0aI2lJAAt6pwAD5r2rSJ8EzH4bXpJ8a11ss
AqQ467Q5m61TwSrXWwan69lRyl9UsMpRyDBfnbyqxE9F+ruxLeRwOrtnGO6W
dtx6UOu+3p774TD50YNu1mLzroIhnDxhCTmM2abaVQ5D5I8C9g3+SyuTB2HJ
5lKhQOuCx+Ja4wD5pUS1h+76xrgBzFvSmZRIY936ym6wn/zrxYrey6/XR/cj
wDoAfVjYU5HlPtRHfvZhqIC9xi2+D9b2rvTDjhFRw5vsJX8HkBAQve9Sai+E
AksM4LMZduWfjr3k9yBu+DSpl/KVYFobHMILbeo7CT5K8n8IqvnsdYNCBazp
Yobh9N0XHTtOK4iHCl5ldYJQBwXpUUFYERu8oUxOfFRwYMTPZh2Qkz4VPGOX
vX9xvod4qfHJLqa9orCH9KoR6Vz8bg6nh/ipwcgtn8lZ6Cb9GuwfvpPQVtpN
PDVgJzbHrovpxqt0Giw78t7mpNe6ia8Wrn3lrfwnMvJHi0ctaQuMDBnx1sKJ
U+ayabeM/NIh5IO3GEtzUuKvQ3J1cOzNain5p8PIpr98FYlSmocRGP9w49R4
ScnPEQTm+gldTRKajxH8Hnk6y75eQv6Ooq/Iu/brdAnNyygM4rQtnkES8nsU
5cZB5xBnCZ138zlNeOlWJxeT/3qEa9cnnysS0zzpMfA9r/joOTHxGMM3tbKc
dF8x8RjDby/l3CcMMfEYw8fH9fLP7z0lHub/guzOtrCDT4mHAdLKy8+j50TE
w4DBu0v3Erki4mFAw+32+IxAEfEYBytv+NG3BiHxGEd6BWchKFdI8zmOoBS9
Sh0oJB5GPPwhs81vWkA8jGA17kwJLhQQDyP8/VfsM4ULiMcEfvYuXfSzExCP
CSS5Fbavru8iHhOIYZ4NizvfRTwmcZvFzN/O6iIek5h/0Pn2MVUn8ZjEBX5r
tYnXSTymcMIv7KImqpN4TOHQi8VZV5dO4jGFrkCmbZ6UTzymsdHEFEXl8InH
NP6+ePYpO5JPPKax6vl+/lEmn3jMmOvdf8JVduB/Gv0hXg==
              "]]}, 
            {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
             0.011111111111111112`], AbsoluteThickness[1.6], 
             LineBox[CompressedData["
1:eJwtkwtMk2cUhuskwEAzAjIUESZjgihRLlNn0FedCxs6boILlzlHKijqRKWO
YRSJohOmsmkioqIMAgIRGQIiKk4u2lJ6pxQoll4o0AsXp4gSxLX1nOTPn+/7
/++c877P+RYnHoja9RGDwWCaHvP76LyqEFXGKYRke2dyvxrDh/UllI8+O52Z
PooG92xDZEMhphZYXXZ5OELfS7DhC9+Nf1iNoOCKOcpxy71xgyTSiPuW/6tQ
czv0en+xAaaFaecfzDgEdxZN6el8LUaD39jabtfDTlacus7uHkof7Fg7U6eD
Jd2V+yjabzz6i6sOSxMuNE/4PITNbX//jSeHqZ8mxOauDf1xfAglptOy4n+x
zqci89bPQzBa6j1BY0jqORvZIIICzdEC10+W790RMUj1W8FyO5aVx9OiZcLH
VKENOT/UyE+EaWFv6ecZDj04GOMoGUCUpSAbM/Furd7xA6SXA+bH0oUlgxqo
M8wJ25F70y8vhaWhfjtwffXl6h02Ghw0t5fKw03n1hPMa2ryh4/ulWvO7QxS
g2EJIaa3h02vFqhIjxDXWt9dFe5T4VuVuYAITYerjA5zVaRPhOC9KUuVd5TI
azYLEIO9qW3bkhglLHIDJfg0Z/aBu2/7YZEjk8Cv3CXKPayf9HeicuvJoPIy
BTzM7bhLEec0a1m8tYL8kMIu5pjN8pTnSE4yRxesmU/P2Er6yB8ZIrgPjks3
9MGcbV6VaV39eM2hu3LyqxsX5bu3NPrK8dqcbqIbl77b9Op0aS/514NjXNbi
6iW9WG8ZgF4EhZWtmVvZQ372wjZrZyUrsAeW9rLl+C+5hfnkcTf524di1W8L
OOHd4HWYow929S0nkjQy8vs5SqPHj6ZlyOBsaVCBekHCSsE8GfmvwKrPPV2i
a7pgSZfQD6ZGZ6WO6iIeSmS8EC+LfS0lPUokMjTzr16TEh8lOJ5+VTnfSEmf
EtZNF13nvOgkXir48LoFVjc6Sa8Kzl5nfo0P7yR+KuTLPYYmZ3WSfjX+2qZw
aqmXEE81xvmR1mX7JfiQTg3Zvmne+SUS4qtBaOhCVpJKTP5o8Dyg5pVroZh4
a1BoGPEpSBCTXwPoTdS3id3ExH8Ahy9pt9YqROTfANLSB2at+FtE86CFX3GH
KjBZRH5q4ev/Mr/WT0TzocUy+88yiieE5K/pXu2afeRlk5DmZRDBp1yd8s8K
ye9BvAlgJGXHCOm+D2HypZddtaeQ/B/C7nDpl65qAc3TEDafXx/nlSUgHsP4
Pb3kzxRPAfEYxtf890972vjEYxhzehfV/bSXTzyGEeC0qk/vyCceOnilOaan
POQRDx2YWc1H+Mk84qFDUrjogI0zj3josXb55FXr1g7ioUeFDrxHaR00n3po
F91I9vDuIB4GdNkYY93lXOJhwPyFcKnK4xIPA9xyK/OaQ7jEw4jo4+ErIhhc
4mFEbX8df0tjO/Ewwt4h+14Fq514jCDuPasgMaCdeIzAOuNC7p5xDvEYgW99
0bu6OxziMYr8PTOP1qdyiMco8vR7xqf8OcRjFJFOm+zVr9jEYwyFEpnE0MAm
HmNQ5ryJczjOJh5jcDtc8jZkM5t4jENxfuz7XHs2/gd7WRvo
              "]]}, 
            {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
             0.011111111111111112`], AbsoluteThickness[1.6], 
             LineBox[CompressedData["
1:eJwtkwtQVGUYhsGBkcGmkQYDCTGMHFQ05ZZDwmuJQjMocommcStCwEpQwSIB
yyYlGskJIgtxIgQTUILoujTk4F5Y2BvsLsvCsqx732WvTomNpTtxjt8/c2bn
nLPn+7/vfZ4/tuR4ftmKgICA0uWL+a0PH8gy1p3DwdqQPdHVPjy6/wqdf63+
dKfFC25MgyuP24HVFWsnCou89P4qSq2xj1WNe9B+iVl94L6xOfdCmgfD7P8H
EDmb+GVfvxvLN8tPhnAs7wW1MMZN3/+CMfGeSFOzC6Ga7hPpob9jfWbOIf8K
F9hyl4ZR82dhR9T7TmzifMFbih+BIvV1Y6p9kfq5ic0/lsUVvLaIq8tfa7pH
8cmmY0eOSxxws/vdgq6r5npTugPJScziIyn6jKdn0E77C/D5xcbtglg7+Evx
yzsIYX28+aSh1YZVbD8iZHzW9tuDYBvy2Q3H8U3glfuRp6w07wR8dX27UpwW
mOqYgmJk3R06k8exUL9SdFb+wauUm1HFtHdChvs2XvD53WbKR478Ykn2tZ9M
CGDXFG7MqZp4cSaaZwpBBTq5/msjso3MBgpwpJaw/0KMNJ8Cv+71FEbUG9DM
YwZQ4kbIh/Gt2ttgx01SYfsrd07eEuvBjqNRoSrf8GytdIHmn4Yud4izRq/D
eqadGDUe1mvT4vzzlIcaZY055W9umceRcmbNoCouQvF9qZby0eDhvuyme71z
YKqFD2gQ9J3maMU/s5TXLNRRge+k5c7iHlNuaRbtp1s+7h3UUH5zMOPuk2GR
GmSwAmhx4NURrr5xhvLU4ue/07ed96vBttcwj8MvLqja6tWUrw4Pdc8kXPZP
QyZllg7inZ1dWxqnKe8FKPZvOOUJn8YatkE9Rj5IUDb1qCh/PdJTahzcDBXY
cpzbCIlKydmqVRIPA9YlNe/tqVXSPAb4gpIyndFK4mPAe+sqi2/yFTSfAfIf
Bpy+SgXxMqL3XMPK3KcUNK8ROyLOFg1KpoifEaKagS77R1M0vwnmsKLLiuQp
4mkinpN4VM6E8s5v2zgHJ4mvmfjKKR8z+m1vDTe+LCfeZuIto7ws2Nee7ygp
kBF/C/GXUn4WFJbUyw5XSMkHK/kgoTytqFvQb3yuVUJ+WMkPCeVrQ8UTZ5da
xsTki418EVPeNjzIGlXUB4vpvNvhZ/2ZoPztCETitn8PTJBPdvJpnHg4sDFz
lJPcNU48HOTXOPFwYENsdeLbfhHxcJBvIuKxiP4Oz1Z7iYh4LJJ/IuKxiKZD
K0PDJ8eIh5N8HCMeTmTsSLhe/NIY+ekkP4XEwwWuciYvZ0RIPFzkq5B4uDAR
7I8q2SUkHm7yV0A83Jjvbr3yPE9APNzks4B4eCB71zl/dL+AeHjIbwHx8GAp
dffaawt84uEl3/nEw4uwQdnTF6v5xMNL/vOJhw9zwr4K7yo+8fDReeARDx/8
PS2nK/t4xOMOnQ8e/gdEkiPL
              "]]}}, {}}, InsetBox[
           RowBox[{"Unevaluated", "[", 
            TemplateBox[{"\"Normal\"","\"Triangle\"","\"Uniform\""},
             "PointLegend",
             DisplayFunction->(FormBox[
               StyleBox[
                StyleBox[
                 PaneBox[
                  TagBox[
                   GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                  ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                  "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
                False], TraditionalForm]& ),
             Editable->True,
             InterpretationFunction:>(RowBox[{"PointLegend", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                  RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "True", ",", "True"}], "}"}], 
                    "}"}]}], ",", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                  RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
                "]"}]& )], "]"}], Scaled[{0.99, 0.99}], ImageScaled[{1, 1}],
           BaseStyle->{FontSize -> Larger},
           FormatType->StandardForm]},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{
           FormBox["\"\[Sigma] of swarm\"", TraditionalForm], 
           FormBox["\"Max Torque\"", TraditionalForm]},
         AxesOrigin->{0, 0},
         DisplayFunction->Identity,
         Frame->{{False, False}, {False, False}},
         FrameLabel->{{None, None}, {None, None}},
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImageSize->Medium,
         Method->{},
         PlotLabel->FormBox[
          "\"Maximum possible torque on object pivoted at 0, length 1\"", 
           TraditionalForm],
         PlotRange->{{0, 1.}, {0, 0.9826794919243103}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}},
         Ticks->{Automatic, Automatic}],
        TraditionalForm],
       InterpretTemplate[Legended[
         Graphics[{{}, {{{}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              Line[CompressedData["
1:eJwtlAtMU2cUxxERC4gukzp1DMTNFXUmG6CbMPgTVxDsRASHm+BwDHW+Ikhm
AAfIhjEs2zTI3NrxEGGLyAABgxARBoJQaGsf0JZ3X1BKeQUpkYljbT0nubn5
7r3fOef//53vesSdjzhua2NjE2++LPdLLhV71alZeFgyVh1tP41X61yYOG2m
Ku8p1LldMR6sK4C48kqN64VJel+C/L0/eR5vmACPa4lS2O04xX62ZgL11u8r
UGb7bKPXGSPMC/OTKix+JD68WjhO++/D61Dol00+43BUFCf4Oz5AF+ulqKzI
AGs6bj3+zdyz/chaA7bGXGsxeTYgOOjNH09mj1E/jdjqcfdW5vIxlJh3K4r/
AdMhqzEuU48Ja71mJK1ULols9fDxtsRjZGyZC8m5Okr1W2E/XSdIXzOKxyZP
c4U2+Po4/XeGNwInaz/tkIU6q3Z6jiDCWrAD4XkHyhvqdKSXj/EgbouOo4Mm
1ZKwE/xrN0pvqrXUrwCaT3dvaErRItHSXoIQnJ2uXWEuWvJHhOx26Ru+VRrY
WEMMPS/mWHK4hvSIwetfilo+q0aI2lJAAt6pwAD5r2rSJ8EzH4bXpJ8a11ss
AqQ467Q5m61TwSrXWwan69lRyl9UsMpRyDBfnbyqxE9F+ruxLeRwOrtnGO6W
dtx6UOu+3p774TD50YNu1mLzroIhnDxhCTmM2abaVQ5D5I8C9g3+SyuTB2HJ
5lKhQOuCx+Ja4wD5pUS1h+76xrgBzFvSmZRIY936ym6wn/zrxYrey6/XR/cj
wDoAfVjYU5HlPtRHfvZhqIC9xi2+D9b2rvTDjhFRw5vsJX8HkBAQve9Sai+E
AksM4LMZduWfjr3k9yBu+DSpl/KVYFobHMILbeo7CT5K8n8IqvnsdYNCBazp
Yobh9N0XHTtOK4iHCl5ldYJQBwXpUUFYERu8oUxOfFRwYMTPZh2Qkz4VPGOX
vX9xvod4qfHJLqa9orCH9KoR6Vz8bg6nh/ipwcgtn8lZ6Cb9GuwfvpPQVtpN
PDVgJzbHrovpxqt0Giw78t7mpNe6ia8Wrn3lrfwnMvJHi0ctaQuMDBnx1sKJ
U+ayabeM/NIh5IO3GEtzUuKvQ3J1cOzNain5p8PIpr98FYlSmocRGP9w49R4
ScnPEQTm+gldTRKajxH8Hnk6y75eQv6Ooq/Iu/brdAnNyygM4rQtnkES8nsU
5cZB5xBnCZ138zlNeOlWJxeT/3qEa9cnnysS0zzpMfA9r/joOTHxGMM3tbKc
dF8x8RjDby/l3CcMMfEYw8fH9fLP7z0lHub/guzOtrCDT4mHAdLKy8+j50TE
w4DBu0v3Erki4mFAw+32+IxAEfEYBytv+NG3BiHxGEd6BWchKFdI8zmOoBS9
Sh0oJB5GPPwhs81vWkA8jGA17kwJLhQQDyP8/VfsM4ULiMcEfvYuXfSzExCP
CSS5Fbavru8iHhOIYZ4NizvfRTwmcZvFzN/O6iIek5h/0Pn2MVUn8ZjEBX5r
tYnXSTymcMIv7KImqpN4TOHQi8VZV5dO4jGFrkCmbZ6UTzymsdHEFEXl8InH
NP6+ePYpO5JPPKax6vl+/lEmn3jMmOvdf8JVduB/Gv0hXg==
               "]]}, {
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              Line[CompressedData["
1:eJwtkwtMk2cUhuskwEAzAjIUESZjgihRLlNn0FedCxs6boILlzlHKijqRKWO
YRSJohOmsmkioqIMAgIRGQIiKk4u2lJ6pxQoll4o0AsXp4gSxLX1nOTPn+/7
/++c877P+RYnHoja9RGDwWCaHvP76LyqEFXGKYRke2dyvxrDh/UllI8+O52Z
PooG92xDZEMhphZYXXZ5OELfS7DhC9+Nf1iNoOCKOcpxy71xgyTSiPuW/6tQ
czv0en+xAaaFaecfzDgEdxZN6el8LUaD39jabtfDTlacus7uHkof7Fg7U6eD
Jd2V+yjabzz6i6sOSxMuNE/4PITNbX//jSeHqZ8mxOauDf1xfAglptOy4n+x
zqci89bPQzBa6j1BY0jqORvZIIICzdEC10+W790RMUj1W8FyO5aVx9OiZcLH
VKENOT/UyE+EaWFv6ecZDj04GOMoGUCUpSAbM/Furd7xA6SXA+bH0oUlgxqo
M8wJ25F70y8vhaWhfjtwffXl6h02Ghw0t5fKw03n1hPMa2ryh4/ulWvO7QxS
g2EJIaa3h02vFqhIjxDXWt9dFe5T4VuVuYAITYerjA5zVaRPhOC9KUuVd5TI
azYLEIO9qW3bkhglLHIDJfg0Z/aBu2/7YZEjk8Cv3CXKPayf9HeicuvJoPIy
BTzM7bhLEec0a1m8tYL8kMIu5pjN8pTnSE4yRxesmU/P2Er6yB8ZIrgPjks3
9MGcbV6VaV39eM2hu3LyqxsX5bu3NPrK8dqcbqIbl77b9Op0aS/514NjXNbi
6iW9WG8ZgF4EhZWtmVvZQ372wjZrZyUrsAeW9rLl+C+5hfnkcTf524di1W8L
OOHd4HWYow929S0nkjQy8vs5SqPHj6ZlyOBsaVCBekHCSsE8GfmvwKrPPV2i
a7pgSZfQD6ZGZ6WO6iIeSmS8EC+LfS0lPUokMjTzr16TEh8lOJ5+VTnfSEmf
EtZNF13nvOgkXir48LoFVjc6Sa8Kzl5nfo0P7yR+KuTLPYYmZ3WSfjX+2qZw
aqmXEE81xvmR1mX7JfiQTg3Zvmne+SUS4qtBaOhCVpJKTP5o8Dyg5pVroZh4
a1BoGPEpSBCTXwPoTdS3id3ExH8Ahy9pt9YqROTfANLSB2at+FtE86CFX3GH
KjBZRH5q4ev/Mr/WT0TzocUy+88yiieE5K/pXu2afeRlk5DmZRDBp1yd8s8K
ye9BvAlgJGXHCOm+D2HypZddtaeQ/B/C7nDpl65qAc3TEDafXx/nlSUgHsP4
Pb3kzxRPAfEYxtf890972vjEYxhzehfV/bSXTzyGEeC0qk/vyCceOnilOaan
POQRDx2YWc1H+Mk84qFDUrjogI0zj3josXb55FXr1g7ioUeFDrxHaR00n3po
F91I9vDuIB4GdNkYY93lXOJhwPyFcKnK4xIPA9xyK/OaQ7jEw4jo4+ErIhhc
4mFEbX8df0tjO/Ewwt4h+14Fq514jCDuPasgMaCdeIzAOuNC7p5xDvEYgW99
0bu6OxziMYr8PTOP1qdyiMco8vR7xqf8OcRjFJFOm+zVr9jEYwyFEpnE0MAm
HmNQ5ryJczjOJh5jcDtc8jZkM5t4jENxfuz7XHs2/gd7WRvo
               "]]}, {
              Hue[0.1421359549995791, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              Line[CompressedData["
1:eJwtkwtQVGUYhsGBkcGmkQYDCTGMHFQ05ZZDwmuJQjMocommcStCwEpQwSIB
yyYlGskJIgtxIgQTUILoujTk4F5Y2BvsLsvCsqx732WvTomNpTtxjt8/c2bn
nLPn+7/vfZ4/tuR4ftmKgICA0uWL+a0PH8gy1p3DwdqQPdHVPjy6/wqdf63+
dKfFC25MgyuP24HVFWsnCou89P4qSq2xj1WNe9B+iVl94L6xOfdCmgfD7P8H
EDmb+GVfvxvLN8tPhnAs7wW1MMZN3/+CMfGeSFOzC6Ga7hPpob9jfWbOIf8K
F9hyl4ZR82dhR9T7TmzifMFbih+BIvV1Y6p9kfq5ic0/lsUVvLaIq8tfa7pH
8cmmY0eOSxxws/vdgq6r5npTugPJScziIyn6jKdn0E77C/D5xcbtglg7+Evx
yzsIYX28+aSh1YZVbD8iZHzW9tuDYBvy2Q3H8U3glfuRp6w07wR8dX27UpwW
mOqYgmJk3R06k8exUL9SdFb+wauUm1HFtHdChvs2XvD53WbKR478Ykn2tZ9M
CGDXFG7MqZp4cSaaZwpBBTq5/msjso3MBgpwpJaw/0KMNJ8Cv+71FEbUG9DM
YwZQ4kbIh/Gt2ttgx01SYfsrd07eEuvBjqNRoSrf8GytdIHmn4Yud4izRq/D
eqadGDUe1mvT4vzzlIcaZY055W9umceRcmbNoCouQvF9qZby0eDhvuyme71z
YKqFD2gQ9J3maMU/s5TXLNRRge+k5c7iHlNuaRbtp1s+7h3UUH5zMOPuk2GR
GmSwAmhx4NURrr5xhvLU4ue/07ed96vBttcwj8MvLqja6tWUrw4Pdc8kXPZP
QyZllg7inZ1dWxqnKe8FKPZvOOUJn8YatkE9Rj5IUDb1qCh/PdJTahzcDBXY
cpzbCIlKydmqVRIPA9YlNe/tqVXSPAb4gpIyndFK4mPAe+sqi2/yFTSfAfIf
Bpy+SgXxMqL3XMPK3KcUNK8ROyLOFg1KpoifEaKagS77R1M0vwnmsKLLiuQp
4mkinpN4VM6E8s5v2zgHJ4mvmfjKKR8z+m1vDTe+LCfeZuIto7ws2Nee7ygp
kBF/C/GXUn4WFJbUyw5XSMkHK/kgoTytqFvQb3yuVUJ+WMkPCeVrQ8UTZ5da
xsTki418EVPeNjzIGlXUB4vpvNvhZ/2ZoPztCETitn8PTJBPdvJpnHg4sDFz
lJPcNU48HOTXOPFwYENsdeLbfhHxcJBvIuKxiP4Oz1Z7iYh4LJJ/IuKxiKZD
K0PDJ8eIh5N8HCMeTmTsSLhe/NIY+ekkP4XEwwWuciYvZ0RIPFzkq5B4uDAR
7I8q2SUkHm7yV0A83Jjvbr3yPE9APNzks4B4eCB71zl/dL+AeHjIbwHx8GAp
dffaawt84uEl3/nEw4uwQdnTF6v5xMNL/vOJhw9zwr4K7yo+8fDReeARDx/8
PS2nK/t4xOMOnQ8e/gdEkiPL
               "]]}}}, {}}, {
          DisplayFunction -> Identity, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
           PlotRange -> {{0, 1.}, {0, 0.9826794919243103}}, DisplayFunction -> 
           Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {"\[Sigma] of swarm", "Max Torque"}, 
           AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
           Frame -> {{False, False}, {False, False}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
           PlotLabel -> 
           "Maximum possible torque on object pivoted at 0, length 1", 
           PlotRange -> {{0, 1.}, {0, 0.9826794919243103}}, PlotRangeClipping -> 
           True, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
         Placed[
          Unevaluated[
           Unevaluated[
            PointLegend[{
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]]}, {"Normal", "Triangle", "Uniform"}, 
             Joined -> {{True, True, True}}, LabelStyle -> {}, LegendLayout -> 
             "Column", 
             LegendMarkers -> {{False, Automatic}, {False, Automatic}, {
               False, Automatic}}]]], {Right, Top}, Identity]]& ],
       AutoDelete->True,
       Editable->True,
       SelectWithContents->False,
       Selectable->True],
      TraditionalForm], {576., -116.80842387373012`}, {
     Center, Center}, {360., 222.49223594996212`}]}, {}},
  ContentSelectable->True,
  ImagePadding->{{174.714236, 175.714236}, {1., 0.}},
  ImageSize->{780., 245.61684774746024`},
  PlotRange->{{186., 582.}, {-238.61684774746024`, 5.}},
  PlotRangePadding->Automatic]], "Output",
 CellChangeTimes->{3.684634471408965*^9, 3.6846356918113127`*^9, 
  3.684668018966415*^9}]
}, Open  ]],

Cell["\<\
Note :  the optimal \[Mu] for uniform distribution is any value between 1 - \
\[Sigma] \[Sqrt]3 and \[Sigma] \[Sqrt]3\
\>", "Text",
 CellChangeTimes->{{3.684542993377308*^9, 3.684543075369314*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pivotDrawing", "[", "\[Sigma]_", "]"}], ":=", 
  RowBox[{"Graphics", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"Brown", ",", "\[IndentingNewLine]", 
      RowBox[{"Rectangle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{
           RowBox[{"-", "1"}], "/", "10"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", "Blue", ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
      "Red", ",", 
      RowBox[{"Polygon", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{".75", ",", 
           RowBox[{"-", "4"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.25", ",", 
           RowBox[{"-", "4"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.25", ",", 
           RowBox[{"-", "3"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.75", ",", 
           RowBox[{"-", "3"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "/", "4"}], ",", 
           RowBox[{"-", "3"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{".75", ",", 
           RowBox[{"-", "3"}]}], "}"}]}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", "Black", ",", 
      RowBox[{"PointSize", "[", "Tiny", "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{
         RowBox[{"MultinormalDistribution", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"-", "5"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\[Sigma]", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "\[Sigma]"}], "}"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"10", "^", "3"}]}], "]"}], "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "8"}], ",", "2"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"AxesOrigin", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.676708174556182*^9, 3.676708189614781*^9}, {
  3.6767082290168657`*^9, 3.676708238918744*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"Brown", ",", "\[IndentingNewLine]", 
        RowBox[{"Rectangle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{
             RowBox[{"-", "1"}], "/", "10"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", "Blue", ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
        "Red", ",", 
        RowBox[{"Polygon", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{".75", ",", 
             RowBox[{"-", "4"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.25", ",", 
             RowBox[{"-", "4"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.25", ",", 
             RowBox[{"-", "3"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.75", ",", 
             RowBox[{"-", "3"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"-", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "/", "4"}], ",", 
             RowBox[{"-", "3"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{".75", ",", 
             RowBox[{"-", "3"}]}], "}"}]}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", "Black", ",", 
        RowBox[{"PointSize", "[", "Tiny", "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{
           RowBox[{"MultinormalDistribution", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"-", "5"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\[Sigma]", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "\[Sigma]"}], "}"}]}], "}"}]}], "]"}], ",", 
           
           RowBox[{"10", "^", "3"}]}], "]"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "8"}], ",", "2"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Sigma]", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "/", "10"}], ",", 
        RowBox[{"1", "/", "2"}], ",", "1", ",", "2"}], "}"}]}], "}"}]}], 
   "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.676470766623321*^9, 3.676471003872978*^9}, {
   3.676471085936934*^9, 3.67647111513273*^9}, 3.676471326988613*^9, 
   3.67647197537925*^9, {3.676708033904203*^9, 3.6767080386069403`*^9}, 
   3.67670816978053*^9},
 CellID->70294289],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{
     {RGBColor[0.6, 0.4, 0.2], 
      RectangleBox[NCache[{0, Rational[-1, 10]}, {0, -0.1}], 
       NCache[{1, Rational[1, 10]}, {1, 0.1}]]}, 
     {RGBColor[0, 0, 1], PointBox[{0, 0}]}, 
     {RGBColor[1, 0, 0], 
      PolygonBox[
       NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
         Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
         1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]]}, 
     {GrayLevel[0], PointSize[Tiny], PointBox[CompressedData["
1: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
A4/8CltIofq5Rz4xChxYplnlKuAjjnyTe76mZHfBMofFU19qaXw1teit7LZu
CE90i5IjvmWvMEM19eww3JlpJvMmQxz1duIBxUly362NQd6EB54905Gp8+aC
cJqe/OpucVzu2FzjpV0DK9HqeZI04XeVhDnsfxzQSpKw30p8TOtfYPxyFzbA
2BrB/O0sXLbjwokDn6agOZT/hZkajclzlSy5nsMwvv5OXIowCydfSKr8E+LA
Zr79WfOIXxkk5b3bXFQHsb8Vlp0/RGNT3sEC+VOjEKN9+UZEHI2CBbN2yriN
gVWdp/NSeRrzdP3h1KN++C0vb3NLh4Wr/s6I2FrZDcbCGf+so0jeGwkIb50a
granK9/vnGDh9J8jw38JXx5RLNLZQO7jleCOrSNNXeDoEbpoQpB8/25djvwX
LnQ2cPn/jTBoXeN6K3UbG34KOfWLq9DY0fBpU+0cHhSwbCYkv1M4u+PJLjWS
55M+9K5w8j4qFu+eTpZ3g3JZWVsMyeeRopki3sRXMlN2m+JdGi/cU3owTfh3
ICdrQtaT5NPh8ahl6mOwTLjucB3J9yWe61+E9vfDieWa+f0HaWxc+ko/JHAS
OoR4qabhLMz2nA5KzubArGutspvIeV23SxFfETUOXZxzNTU0jUF2JfP0lvfD
0IZP8kXvCC8qCq0J2t0N3DmlWctQHCtPnl77xZkLORma1WcCCD/0Z8vvJL5+
5/HZ7LxPDGZ7Vw89SPgDfc9kyq4Qnok/ZGy8Mr0VlpvJiF0nvJ+poppfv5sL
v9492ZtA/MMrNL5ipsgofCvnLTAh59N3T/LTv+8c2DjhQG+4z+Bg3ebff3+y
4ZJ/YuPpFNLP7rcj8U4r1Afu+N5I8lHs2PN3pyWmgP9q9NFl5H3f3dzT+pPM
z+vsynO5ahL44VXcbQenEVj31TXxBfE17xXG+Qs+/AGx8Vf3ktwpnPtYOjxm
ExtW6Il+XU72NzD4YVm75AAkNUUubxVm8NbmtFCTVzyYyHgxzm0QR5N36/R3
rfwFlGvaFoNGMRRxETXJYHfBl9nxW+crSKAK21yWY98Hmr7TszZeJPkmJjek
f3QEVFgvVBbVEj75PStUzXkIPvBHCS4qIL48+sdRgumDLV/V/CpTGLxoJJZZ
uLwZLhTlzAj4zKDtVvtjBW+HoCrh0Kj2XwatsqWpYuNG+LVB8PdpHRp9N6XL
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
25wnHEhdqvHWW14My2aHtHouGQKhYZ9170+TeXmgn6I/cwgeVQ89+UX657eI
xsyiuj4QLjp7qSCfwgTXKe0z8ztAKrB2gG+QvN/YKd2l7b3wvFqoyGk3yc+T
eYLv14+D8X4L5v/zdkv53Epf52aQ2G9wJ1GQheVFG9uUt7KhzmyvmOUq4gNB
oSN8ARz49sr1oYAzjZ1r1n5okR2F7n3HjQuWiCLnpkPZmHU3PL4z6DhEfGmV
UvQ/z3guXDh34JkyRfji5dra3Qf7QdTg/LjvewbTrAv2Fe9thFujylLcKBpX
CnecqfrGhd3+lW8ORtC4d0M6n2FJFwhMZ3+5lEo+/2HWkRKpEZg6Urf4+z0W
/lhlmieTSvLgZGa34SsaPY9Z890OmQDZkf/G4ixYWP/QtuCNzCT8OJKppX2D
Rh2jIwEr9UZB51KSAuQxKBE9vtPtzCRIzdORTI6TxG0CbfXxMX0grt5zL/0q
uc+ieUXe/oPArppVYG9N4aqpdKNngp2wT5leHkb454TR7v9itAahKDDcDJ5T
yJe9c2DMZARCjL683nmfhfuuztgULt4B7GGlYo9xBqmFlxuXmjeBksq1tunz
DD4/m9yelT4C/N91pJt5FF5b7ly7KLkJrsseCt0kx8Jf/LcnhgT+gm94tWLj
bpJvrLsnLiiOg1zd3tuST2mMKF9tJarGgT38BctiQxgsDmhZ5DvAhk0W/YXq
mjTxJ3dfbk87WHRMxuf8IO/f9nxVVPEw3Mj/9qM4lcIv4amqct0jsOpwjv9u
wqc/lpofe9E4DDHKJhK8TMLLAsHLth2qgACvQzO71jFoufbagH1uD4it8lq0
ivBj4lYjv1cl/WCzKc3M2p7GjFhkxY+SPP2ydemXWTReP6905dtlNuw00rph
W0xj87ns4bvGbBC99yn87yGSB+KH9A6+7IUPN9vqtP9QuMLuynfPcQ48H/5R
b9/Owq3375b3bhqGKy9hU/NqMp8qlZdDdDhwWbEhlqVFY0Mi2+ujBxvccj7v
6HwqgXFOXhoSazhgvirm8gbC44seSWf+lm+FB/z9OcrzaXTQvmDEHefCyeNa
aS+2SGLcyZyAy8X90Lw+oexEhTiar3nadb6TA+PpAZTqOcI7mS5HZyn0Qv+K
I0FjGYS/fkZtyHYj/WZyU01BgMYe23d2jePExz1vhdHBpF+KRjxbN3Lg1IpQ
k69+kqh+tfXXnq9t8CJYsGWeIYMG5+5GyxZ0wE//RW2T5PnLuHHaepFs+O7p
WXTpDY0meaajl1oGoLS3krWU+NpO15u8DByBw2f6zp0i/P9B9Kpr8D42NP9e
tlGmmPgR64tlzbdhmC3Z43xjLQtV6Rf/qR/kws3J4NG5BaQPVOXyJw60Aa3c
WC+cKYFzDQqXPO3kwsUDRwzYNIOjF3fGGJ3tgP+O2c6Uk2HQRMzScurQAFh+
/Sntkkx8h8r/5T7RBIreh6t1pGnUKjNWbpybDulZTV9fjFB4Z1Bs2b1343Au
+sKdt8TPVBR82WrNo6CxO7F680MaX+HHlV+kSV57pLKoeRLIufRFdN7fCbgf
ulDzmi0LL/jMfhm9exSKRbZb3iR8qRkUVK9lxgarebf3ehEfFFBNNzkT0As7
7G7I1fYwOFNJusRxzgRcWWazVmMTgyt9sxrfbR6Be+Fni+KcCJ8v0Nkx/W0U
pD4Vmrx9xmDQxIlTeQZt8Med1SsTxUKTtVZqU4fb4a6tgr63Eo0ve2vk2hf2
w38TNW0ZvSRPO/I3BPq0w6Fp+Ly/hPhWjJWGc8wgiCrx8zi3GSxxTG4SutEF
3+tzWjTNGFQ2TXyUfYQLixaLTX06RWH0lkqXZ1k8+LqWcnAdIfl3V177jGEr
4UWvf7uJrz3Qabm2qH8UOP6dAcFJDEbet9yW/bMLPPYrCVgQ/+ob0W1psOiC
1OOt0xcDaVxn1ZI9fmQM2sIDp46Q/lIdEbqfX8gG3vF60zl6FDYop/lkK45A
sWfbLZUhBrulj812+J0HNupbeCmkv3N+ODt89OsEvm9zexokadS30d7/MXYM
vC7KzS/fyuDnWqnLGx8NwkMFg90WpP9VdgcZOe8cBkwNFMkYFMOSlFPKP8h8
Rkt+M+bEiqOZ4pdOVJmElMiQQseDDKouORkmc44LZwX4A0YFJdAsflXTxCse
HFU1eZMvTeHwIbO8CHseXPiq2+NO/NrHNuV78/AwcMr2Z3peZ/B3acwgz5kH
pcoGY0kkr4bWPqUPvm0H6cJvgnWSFDZqPMiYmdYFcw5VKex7R3wuVog6TXyh
Uj82fZcOC3lZPQcuiXAg9mS9vFM2jcKj9ReECP/nRDkcMSc+YfxNl8+2eQTE
KjpdtBdLYMnjFfHd+h3Q0DLj/cW7pB8yEqx3x9ZDy4Z9lo8Ijwfu971/W48N
7LGE+AIxFs48e2VlzfUOOJh0Zc8oyc/O7K2YrNAJVR/WLjghQub7jqDjcb4W
+Hlov1KHqyRKJCg57BEehG2qeNd9iQQ+3bEnT0VkAoYSPqTFWhB++EHJfM7g
wcWYNZUJe8Txz9rPRtohHfBVOvfrAMlz3rHNrvLfR0FWQTV75QYWJvpEb5az
6IVRvXM33M5KoOW4Hvf9jA6QDMxZPipO+umym+jz3EEwPO+Vsl+K+NKOtKin
9xrBdcVO50+XaDx61MCofX0XGNrV3wzzYPD+NrFkmUfEf9XfCggTv6pgykSC
wrhgpr5e0WUWg+k/j9tEPeJB9NBB/jVk3s9ufTk17jkMOiZRga/307jsivVn
STU2VFZZnu/TYXDh4s8lJ3idMJVtu3kV4YskmZJNsvlcKF19SWnjGQnUy1nS
6lpVA1Hf+JftWkT6rsNd181qCrT944av2REfPpJ9f5YQBxjWDA29BMLXEdoL
Bnd1Qnop9/aYNwtLFHk3jslyQVVlu0GYIQvVX1fpfqbZoH4zdOkVwveZxzca
5E8OAVwe+cpaSGHrm4ZGbsgwtN6d6tX9TRM//CH36VALJAj+jW2/QGO/je0X
f6YHXmuOXZtNfGf3HHNTav4g/Kv+s/yVJgvPvLZy9DccBqMs9faHvwmf1ckN
P3PugpG09yvl2ykM0FPWfxdJ+OWi2/uwEzQG5G0I/RszCVEeNy82GlLYPnpH
W79jAn6IsJVyJYiPrfe39NfjQFfEdct9bAZzh2e6+ikNwDnTCyk/ZWk8a045
y/aw4abUlYcCv8SwvqjMIUp0DJyXeFz08CN8Jt2S0XOBDT+7V7xwI/62bOUa
Z82BQSjb/CZpnR8LH7zcnP9Vrweiv9oW6K0TRfUfXnE/tvPg+f1tX/iTaaz+
b/CKVRUbnuTXX3L1p7HyzX44vID4WuSe15FrWOglIP3l4O8xeO7xN148hcK6
UtMLocTnXvtL2K+eweAcrRx1CZthEIz7ExfpS+ZDJb5EVnsYWPunszbtosl5
Ze5c5tkCOjV2+n+sWagVuFm8YqANyhLXCss9oPFvzsodIyIVwArbynGnKJSW
61rqH8CGnngRyw/2DAqqPbRxPNwNo5s2TB2YK4F2a1P4Y0UHoPJR3nAl8cc9
/2oP2SwcBeP0Bu05hCfrjqqZc661wEG3KfOIchqlDKa+hgVXQ/Mfz7y3s0k+
rnt1Nq56EArkC80e6rNwIKTTMep+D1xZkzM3cJT4aBv/f5xzoxCwaWNglScL
VfK42gr7x8D+dZ/2ZxMaryzoWyDD6YJNwe/GTyTS6K5v6BIk1gxu1+L0wggf
PZ8M+OtS0QsvxH2ExRtJH//pXxmuOwJhlx+lSJiTvKE+TW/40QoNf2fjEh8G
xbknun5wBsBYKzpKoojG3km//LcnJ8HY2WrqsCmNby33H1m6cxQ+3LtwIJ5H
46YZFs/lrzZA/NGQF7PtJZCh5R//FW8BJqUosu4whXovt1j9/NQCzXqphnpt
ZB+sLpoYTBO+gh3X/JaJo+Is95eBYT3QBaePdVoymOpiYXHWtxuCDvx+ODue
weiT20UWzxmFJsea7B+nKfQVu7VsXVUnvCl0mnNyjEKWwFymYoLwj7SaRmEf
4RGtkShBVR782Nk14nCd+GHUzAXbbg3AEfeBtGCK8FjC/M6HyVyIyh/5NvEf
jZ/z7aQ2nhuAHyccfGMPEp4v35/ooTgIGwz/OYXcJfNrM+Zz5CQHNk/38d05
Q+aLMvvVU8mBHxZfP5Qf/f/vj5RIBNVwYP76tWO7C8TxqFpEopQjF+aVrT9S
l0Xjs2vckSTZAfjtrxdospeFW7LcDrhvH4CGkJxw/VKSf9d1j7yJHIA8q+wj
1+7TWHJAbqP+IOmj5HazjY2Ed558+tGfQfbZMH/W+dUMcuOats1IroGJT9nc
3LMMhis/2TD6nANBF3U/mGkwuLxP6tP9I1VwdKo9s43wx8sl/xI6Zw/B3eMG
7WpNNF77Z6p2bC3xw9rfPj77CB9IF9nsYvWDfk/ybZcjErg8YRNPw+4TrBs7
k/yH+KXO2OnT1R954L/Ezev4FRoXVam2Nh7kgKbFuXylxeIoM+/++2NRY+C5
z8kiTZic56/87jKFfmg97hK7oJ/BpXEHDErWDcJunQy/yTwaSwOC5DhZbBhI
pvlvnRRHy/MeijcMemFXxtiEvT8LT6zxk+jL6oWflHTXDXLew3VsPekNw/Cr
LSqS95nCczPcxx2T0mHxOp+5U5oMbrf7IxL6pReS9j2SSf5C4e2o4IyQ5j7g
XVDNd/7HYMHSh69sN3cAjz63WCGMQW2BG+/avIZhiYbOPUs3BtWUPt1OJD8/
SefqujdtNJb72mQdftYKLNEZBwciGLz3bNnyUnUOKLgHfW2YTaHqsineBnL/
aqM1cUb/aIz8vv2LD90KVYZBlkGE97sdnia03B0Fa0cnl7kkjxVFdPgk1nVB
6N6Y4x3k/ZM9FSsizg/DRFT+YZG5LNQtMXfSWMmFlpzz4s8yGLQSy74jQZ4v
5tXODafWMLhkY0LOmq3N8PJa73A9w+B0YpFA1tVh8L+YtHrRagpD2Q3Dj5Wa
gV5tcdH1Ggu7N5obu42WwJq/Xr9uXKbxZHpe+gnzZsjPtxFSPcPCYwbPjaxs
umHCtwgdCW9cnt86dn9pD+x95zI1h/D6hZtD6zbZd8LNJalVXEsK5wnNSnoY
zgUqemnr3Fyy73mujYEa7TDnrd678noaQ17riE/c44G55c+sBOITXXEBTx8v
7AXPV1/lm1NpbL2brBJjNAx64nFTkmI0NuZ0zZl/ux/+XvMRjrMgfn/2r2eD
6TiUrl/w8E87je8vXLtTET4A5Yv5Kh37KPT4eerX2mkueHFjK88/ZtBVL33G
9qAR2BqVxrr6UQJ/uJ9L/3a+A/bFcnrfvyY+tk+4JzqhG6qqy4WW3GJhypYD
GZuvT8DS+0tUfSRYqBC6y6googskc82LhYgPhDcOmwRzOPCCW2P0RIzBr9si
OIkz+uFqgey7VhuSj1fnvn7VMQx29Mwerzs0KnxxOWdjXAyN2xsGW4m/lC96
vCZVqxtkrLVyygMoLNRvUNMb6oF0U1bJJhXCy/J+3MLiPijdVWJy8ockRlkJ
X50WqoUJxS93lpJ+tAjOmWG4lg39fvXKR3bQuPMYq0qAPM+vhhD/+4SfPYvO
r/h+kQPdC3021hwhfrwvxrj2Eg8+BoH9AzkKdTrvaP7044Ka9r/F+bEMOsX1
XaNL2QDunltKD7FQ9Pjlf9/mdoKCXKK0ziMxVEjZqLec5IFvmlNJwWUGhcuM
18tx2kC3JW7uh0fiaEwzumJG7eBKSyu9E5DAHNNdL99OtEDm/S51pR4aDyru
OM6/vhcM187wtiH3p/vHdF7amRGgvVgLGwnPLf5eteLD8h6gs9pefxUiPJ34
4cSMxx3QbZAxvPwICy9WCJSlBU9B9rLM+/vkiO+krTTLt+4HE4sX5caLGWy9
dazHld0P90M2n+Ahg08ravzeSI3AyFbX636uNN6La55u1x4B/f3xiW8HxTHg
wuSlCwwHtoVbzgom+1RYdzK++OkwfOrOrKU8KORJ+XifvjIIsZ7afKWOLDzX
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
       "]]}},
    AxesOrigin->{0, 0},
    PlotRange->{{-1, 3}, {-8, 2}}], ",", 
   GraphicsBox[{
     {RGBColor[0.6, 0.4, 0.2], 
      RectangleBox[NCache[{0, Rational[-1, 10]}, {0, -0.1}], 
       NCache[{1, Rational[1, 10]}, {1, 0.1}]]}, 
     {RGBColor[0, 0, 1], PointBox[{0, 0}]}, 
     {RGBColor[1, 0, 0], 
      PolygonBox[
       NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
         Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
         1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]]}, 
     {GrayLevel[0], PointSize[Tiny], PointBox[CompressedData["
1:eJwVmnc8le8bx+2VcfaxiiQhCZERrpMoiZKiVIRUkiQkDVEqkS/SUhrSRFa0
JOcSSVa2jLL3Pvb+Pb+/zh/nvF7P89z3dX8+7/frPCtdTtsc5eHi4urh5eL6
/2ecV43UdcZbsPE0vL49XxIfvBYbnPjAw3KWUdzeLUvFOMNVql5Gg9AlnsPX
IyaJNMuNaeK7iuD8n5Op9o/oqCbsLr5/qg+COU/r7kkzUcR094sH6a3weK0b
6VECHQ9ZzX9asVGQZWj2dfTDbjrWaRX//Fc2Au1tKupJOlQsj4i8llWAbAV1
x/Q9H+k4XTommjsyC+HDGYFSZnTk2G0RN5qZAuMATc3y8ySsXF5+TTCLi+Wn
umJSz04M33mtOX/g2hicrthospVKx90dN3ofrhoDryX1Sp88Kor65O/+2jwJ
1i+yzl22JWOD8TbTveat4K//tfyJABNzvG3HlJhzUBWQlBXSxUS+zJCnC04d
bM9Ed6XN2gyMEVmpdyWCi7XWSKtxkPi9RQezf6xuBEzXb4s7GEHBksG70hob
q+FZ61priRQ6Sre4VmV85mIFdd+6Pa5HxWdCW49cj5yCK83fvyu+lMSwnsQ5
yng/ZLedb5rUlUSNuztWKzhMw5CJ7smWRhKuuOVuz6s9BZzSAxNXvOj4Osw0
X5U1Dm45lq3+ozTkwjJd46vPQf5Oi+R4MAPjwpr3n9yD7J2O5E6TWjrauj7Y
EO7ExSo0+6p27w4TZ5vgwY2vrWz5LA2L1yIkVGzZSmniTIDsHZuSSBsaxj9/
YLtfvh8kFEWUSG5UFH7lOdVzcxi2ZO5eribBxGek99mHqzngo3XSaiSKih8u
m+Ur5bWCOvfnVfs2k3G/bjFXl/Jv9q+MY5F6w9LI8Nl8RLyHi2XpX/lzZTwT
hUbJ2nZblyDTKbRo7WZpjHK3aeW0tMAmunWFmzEdM4ceJz980M4++v5A5Ogh
GvL9fflC8fF3eC2sxh8XSkXrTeN/5t91QS517uUiLwUjRGLU34/0wm8XmN0X
TMUVh2YfHL4wD/pbvT9tcxVDx9StAn8O87Ns11AtXB7Q0c45WEhdpQekjc/u
MNnAxCZ5L/JFbAHz5uinr9OoGPIiJTasagy492iq1qtLoUf82Je9rH5o0w2P
7P1DxZr5L9s1czjgvc81m0dGDI9kyi7+pnfB4adbNpUwKPjO2sH2auIC7Jdd
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
6NmmL/3Mh4z/A3rquQw=
       "]]}},
    AxesOrigin->{0, 0},
    PlotRange->{{-1, 3}, {-8, 2}}], ",", 
   GraphicsBox[{
     {RGBColor[0.6, 0.4, 0.2], 
      RectangleBox[NCache[{0, Rational[-1, 10]}, {0, -0.1}], 
       NCache[{1, Rational[1, 10]}, {1, 0.1}]]}, 
     {RGBColor[0, 0, 1], PointBox[{0, 0}]}, 
     {RGBColor[1, 0, 0], 
      PolygonBox[
       NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
         Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
         1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]]}, 
     {GrayLevel[0], PointSize[Tiny], PointBox[CompressedData["
1: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
i2YbMaBFqejeMZpDEVd43t8lC4Hrzbj0yxt9aB88CY7fJMBDa4XtUkuj6EvF
6JVUCU44TNZZf7C2ggJHyjF2FhJQPnhmHJQrQTpHEncKzRHgVfdeF9biUVT7
mE/V4h8Zyup33jXrYMP23mMaaBigwAvlCGdL6yWkvrlPyPmcIFyx/JLl57KI
qI7Sg/oyosCy8zLvIcF59Ovsh8535jSItm8SZlUdQqSd3wtu0vOs6qdJ1rBf
P4qmrGb30vd3MlnOY25sFA00HhttLqPCxzwC3zmpZWT+Mj2Wd4oK/Gt1t6m8
qygkIYDJVoIEasMv33S87kZn2mIf+ryh9x3/KVdOiW7U3BFgKi5Ng/YziJnC
NI2Piu7+PVlJhXXprYA9WwzYg92HSMoUQfhU9Jp9i2cQlxtwVypwocEZi1f9
3FYbyOjSzcYecX54VqX+UDqwEz+kV2TTFi4ETVs/mY8Us2Cv1ZkyfejrLf8Y
vlFjP4WsbirvfPqWA2qeBXZ9eziEn9PQFnFMp0L58UB3HbktdNpSRcJpnxD8
6D7fNrRvGBnVvVJWTqDC1/JV5nm/Dlyna2Up5zAZFu9Hxw2VMWP2iYcPoAAS
mLY7ZOndrkeBoV/SGK24wLz15EAraQnJx7m4KZRQQbhe0ZRtdBrP6+Li9VgQ
gBjBzZ4mZQZM2jvoRDMTmc7DpSeiJmLQC82mjNUaMoi/6xvbY7SFPxyY2kDD
QpDdGc+nUDuKohwphn7rVPANtk9csgA8z6Hs9KgCBbpXhn4cOpKGs/4MO/CP
gwr2t6BgKWoezQZf/+Bwmx/UhdpBteonipTd0i0ZEIbLw5ZqW7m1eJrDoZCn
rylQc2rX0PvMFfReuLb4qxEPPPkpJ/J2bARN69Uz6QySQHG3tqU0dQUdr/7H
GJZCA7T9T2NWfzda8vvzL+kbCe7fKhr/wtKCws+xqNpm0/1r6Vl2v2U/Wq1l
WcnsosHQxX1sAV0jKEzszMsset+ynuc9JfpuAi13BG+63BGEe38Gx/RcZhEh
uZyvdY0Mxc9uRIUgRsyYxfy6XDoRqHYZPA0UJqxfSay1kVUUDJK3BkNkNpEr
z/mB3GkaaFdP6jT3ziCJx4OeKY6ssHNb0s6O2FoUfu/9hO1OKlDe/irMOsuA
BaY9Uj0QSwaOpp3EB9GjyJ533bjbWxykgoVMfPqZMGl3WpD4SwqoXzz8/VpW
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
       "]]}},
    AxesOrigin->{0, 0},
    PlotRange->{{-1, 3}, {-8, 2}}], ",", 
   GraphicsBox[{
     {RGBColor[0.6, 0.4, 0.2], 
      RectangleBox[NCache[{0, Rational[-1, 10]}, {0, -0.1}], 
       NCache[{1, Rational[1, 10]}, {1, 0.1}]]}, 
     {RGBColor[0, 0, 1], PointBox[{0, 0}]}, 
     {RGBColor[1, 0, 0], 
      PolygonBox[
       NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
         Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
         1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]]}, 
     {GrayLevel[0], PointSize[Tiny], PointBox[CompressedData["
1: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
qBs4Sm86xI+VJLyf0Gthwv8AuIO7Bg==
       "]]}},
    AxesOrigin->{0, 0},
    PlotRange->{{-1, 3}, {-8, 2}}]}], "}"}]], "Output",
 CellChangeTimes->{{3.676470783775257*^9, 3.6764707939130287`*^9}, {
   3.676470829920199*^9, 3.6764708640944843`*^9}, {3.676470903722499*^9, 
   3.67647093557904*^9}, {3.6764709802999067`*^9, 3.676471004411406*^9}, {
   3.676471098371408*^9, 3.676471115749959*^9}, 3.676471327689361*^9, 
   3.676471975896736*^9, 3.6767080397143373`*^9, 3.684634471477928*^9, 
   3.684635691859378*^9, 3.684668019205863*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Problem 2:  a free object (no pivot point).  Where should swarm fit to \
generate the most torque?\
\>", "Subsection",
 CellChangeTimes->{{3.6764621771486588`*^9, 3.6764622264149523`*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"TorqueFreeNorm", "[", 
     RowBox[{"\[Mu]_", ",", "\[Sigma]_"}], "]"}], " ", ":=", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", 
            FractionBox[
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]]}]]}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           FractionBox[
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "\[Mu]"}], ")"}], "2"], 
            RowBox[{"2", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]]}]]}], ")"}], " ", 
       "\[Sigma]"}], 
      SqrtBox[
       RowBox[{"2", " ", "\[Pi]"}]]], "+", 
     RowBox[{
      FractionBox["1", "2"], " ", "\[Mu]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Erf", "[", 
         FractionBox[
          RowBox[{"1", "-", "\[Mu]"}], 
          RowBox[{
           SqrtBox["2"], " ", "\[Sigma]"}]], "]"}], "+", 
        RowBox[{"Erf", "[", 
         FractionBox[
          RowBox[{"1", "+", "\[Mu]"}], 
          RowBox[{
           SqrtBox["2"], " ", "\[Sigma]"}]], "]"}]}], ")"}]}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", "1"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.684673826522071*^9, 3.684673850270439*^9}},
 EmphasizeSyntaxErrors->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{"-", "1"}], "1"], 
    RowBox[{"x", " ", 
     RowBox[{"pdfTriangle", "[", 
      RowBox[{"x", ",", "\[Mu]", ",", "\[Sigma]"}], "]"}], " ", 
     RowBox[{"\[DifferentialD]", "x"}]}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "assume", " ", "the", " ", "object", " ", "COM", " ", "is", " ", "at", 
     " ", "0"}], ",", " ", 
    RowBox[{
     RowBox[{"and", " ", "the", " ", "object", " ", "extends", " ", "from"}], 
     " ", "-", 
     RowBox[{"1", " ", "to", " ", "1"}]}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.676465933957417*^9, 3.676465936137473*^9}, {
  3.676466161477537*^9, 3.6764661745402927`*^9}, {3.676468233532557*^9, 
  3.676468252757174*^9}, {3.684533543640164*^9, 3.684533573457127*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {"\[Mu]", 
        RowBox[{
         RowBox[{
          RowBox[{
           SqrtBox["6"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", "\[Mu]"}], ")"}]}], "\[GreaterEqual]", 
          RowBox[{"6", " ", "\[Sigma]"}]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}], "&&", 
         RowBox[{"\[Sigma]", ">", "0"}]}]},
       {
        RowBox[{"-", 
         FractionBox["1", 
          RowBox[{"9", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Mu]", "\[Equal]", 
            RowBox[{"-", "1"}]}], "&&", 
           RowBox[{
            RowBox[{"3", " ", "\[Sigma]"}], "\[GreaterEqual]", 
            SqrtBox["6"]}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Mu]", "<", 
            RowBox[{"-", "1"}]}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "+", 
             RowBox[{"6", " ", "\[Sigma]"}]}], ">", 
            SqrtBox["6"]}]}], ")"}]}]},
       {
        FractionBox["1", 
         RowBox[{"9", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Mu]", ">", "1"}], "&&", 
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", "\[Mu]"}], ")"}]}], "\[LessEqual]", 
            RowBox[{"6", " ", "\[Sigma]"}]}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
           RowBox[{
            RowBox[{"3", " ", "\[Sigma]"}], "\[GreaterEqual]", 
            SqrtBox["6"]}]}], ")"}]}]},
       {
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", 
             SuperscriptBox["\[Mu]", "2"]}], ")"}]}], 
          RowBox[{"18", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], "<", "\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           SqrtBox["6"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", "\[Mu]"}], ")"}]}], "<", 
          RowBox[{"6", " ", "\[Sigma]"}]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
          SqrtBox["6"]}]}]},
       {
        RowBox[{
         FractionBox["1", "2"], "-", 
         FractionBox["\[Sigma]", 
          SqrtBox["6"]]}], 
        RowBox[{
         RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
         RowBox[{"0", "<", "\[Sigma]", "<", 
          SqrtBox[
           FractionBox["2", "3"]]}]}]},
       {
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], "+", 
         FractionBox["\[Sigma]", 
          SqrtBox["6"]]}], 
        RowBox[{
         RowBox[{"\[Mu]", "\[Equal]", 
          RowBox[{"-", "1"}]}], "&&", 
         RowBox[{"0", "<", "\[Sigma]", "<", 
          SqrtBox[
           FractionBox["2", "3"]]}]}]},
       {
        RowBox[{"-", 
         FractionBox[
          RowBox[{"2", "+", 
           SuperscriptBox["\[Mu]", "3"], "+", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", 
            SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", "\[Sigma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "-", 
           RowBox[{"3", " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"6", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
          RowBox[{"36", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]]}], 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
          SqrtBox["6"]}], "&&", 
         RowBox[{"\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           SqrtBox["6"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", "\[Mu]"}], ")"}]}], "\[GreaterEqual]", 
          RowBox[{"6", " ", "\[Sigma]"}]}]}]},
       {
        FractionBox[
         RowBox[{"2", "+", 
          SuperscriptBox["\[Mu]", "3"], "-", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "+", 
          RowBox[{"3", " ", "\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"6", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", ">", "1"}], "&&", 
         RowBox[{
          RowBox[{"-", 
           SqrtBox["6"]}], "<", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}]}]},
       {
        FractionBox[
         RowBox[{"2", "-", 
          SuperscriptBox["\[Mu]", "3"], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "+", 
          RowBox[{"3", " ", "\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"6", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", ">", 
          RowBox[{"-", "1"}]}], "&&", 
         RowBox[{
          RowBox[{
           SqrtBox["6"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", "\[Mu]"}], ")"}]}], "<", 
          RowBox[{"6", " ", "\[Sigma]"}]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          SuperscriptBox["\[Mu]", "3"], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "+", 
          RowBox[{"3", " ", "\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"6", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", "<", 
          RowBox[{"-", "1"}]}], "&&", 
         RowBox[{
          RowBox[{"-", 
           SqrtBox["6"]}], "<", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", 
          SqrtBox["6"]}]}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.684634498240581*^9, 3.684635722168562*^9, 
  3.684668046372229*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"TorqueFreeTri", "[", 
   RowBox[{"\[Mu]_", ",", "\[Sigma]_"}], "]"}], ":=", 
  TagBox[GridBox[{
     {"\[Piecewise]", GridBox[{
        {"\[Mu]", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "\[Mu]"}], ")"}]}], "\[GreaterEqual]", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "&&", 
          RowBox[{
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "+", 
            RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
           SqrtBox["6"]}], "&&", 
          RowBox[{"\[Sigma]", ">", "0"}]}]},
        {
         RowBox[{"-", 
          FractionBox["1", 
           RowBox[{"9", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]]}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Mu]", "\[Equal]", 
             RowBox[{"-", "1"}]}], "&&", 
            RowBox[{
             RowBox[{"3", " ", "\[Sigma]"}], "\[GreaterEqual]", 
             SqrtBox["6"]}]}], ")"}], "||", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Mu]", "<", 
             RowBox[{"-", "1"}]}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "+", 
              RowBox[{"6", " ", "\[Sigma]"}]}], ">", 
             SqrtBox["6"]}]}], ")"}]}]},
        {
         FractionBox["1", 
          RowBox[{"9", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Mu]", ">", "1"}], "&&", 
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", "\[Mu]"}], ")"}]}], "\[LessEqual]", 
             RowBox[{"6", " ", "\[Sigma]"}]}]}], ")"}], "||", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
            RowBox[{
             RowBox[{"3", " ", "\[Sigma]"}], "\[GreaterEqual]", 
             SqrtBox["6"]}]}], ")"}]}]},
        {
         RowBox[{"-", 
          FractionBox[
           RowBox[{"\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", 
              SuperscriptBox["\[Mu]", "2"]}], ")"}]}], 
           RowBox[{"18", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]]}], 
         RowBox[{
          RowBox[{
           RowBox[{"-", "1"}], "<", "\[Mu]", "<", "1"}], "&&", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "\[Mu]"}], ")"}]}], "<", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "&&", 
          RowBox[{
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "+", 
            RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
           SqrtBox["6"]}]}]},
        {
         RowBox[{
          FractionBox["1", "2"], "-", 
          FractionBox["\[Sigma]", 
           SqrtBox["6"]]}], 
         RowBox[{
          RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
          RowBox[{"0", "<", "\[Sigma]", "<", 
           SqrtBox[
            FractionBox["2", "3"]]}]}]},
        {
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], "+", 
          FractionBox["\[Sigma]", 
           SqrtBox["6"]]}], 
         RowBox[{
          RowBox[{"\[Mu]", "\[Equal]", 
           RowBox[{"-", "1"}]}], "&&", 
          RowBox[{"0", "<", "\[Sigma]", "<", 
           SqrtBox[
            FractionBox["2", "3"]]}]}]},
        {
         RowBox[{"-", 
          FractionBox[
           RowBox[{"2", "+", 
            SuperscriptBox["\[Mu]", "3"], "+", 
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", 
             SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", "\[Sigma]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "-", 
            RowBox[{"3", " ", "\[Mu]", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"6", " ", 
                SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
           RowBox[{"36", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]]}], 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "+", 
            RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
           SqrtBox["6"]}], "&&", 
          RowBox[{"\[Mu]", "<", "1"}], "&&", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "\[Mu]"}], ")"}]}], "\[GreaterEqual]", 
           RowBox[{"6", " ", "\[Sigma]"}]}]}]},
        {
         FractionBox[
          RowBox[{"2", "+", 
           SuperscriptBox["\[Mu]", "3"], "-", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", 
            SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", "\[Sigma]", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "+", 
           RowBox[{"3", " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
          RowBox[{"36", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]], 
         RowBox[{
          RowBox[{"\[Mu]", ">", "1"}], "&&", 
          RowBox[{
           RowBox[{"-", 
            SqrtBox["6"]}], "<", 
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "-", 
            RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
           SqrtBox["6"]}]}]},
        {
         FractionBox[
          RowBox[{"2", "-", 
           SuperscriptBox["\[Mu]", "3"], "+", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", 
            SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", "\[Sigma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "+", 
           RowBox[{"3", " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"6", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
          RowBox[{"36", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]], 
         RowBox[{
          RowBox[{"\[Mu]", ">", 
           RowBox[{"-", "1"}]}], "&&", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "\[Mu]"}], ")"}]}], "<", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "&&", 
          RowBox[{
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "+", 
            RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
           SqrtBox["6"]}]}]},
        {
         FractionBox[
          RowBox[{
           RowBox[{"-", "2"}], "+", 
           SuperscriptBox["\[Mu]", "3"], "+", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", 
            SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", "\[Sigma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "+", 
           RowBox[{"3", " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
          RowBox[{"36", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]], 
         RowBox[{
          RowBox[{"\[Mu]", "<", 
           RowBox[{"-", "1"}]}], "&&", 
          RowBox[{
           RowBox[{"-", 
            SqrtBox["6"]}], "<", 
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "+", 
            RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", 
           SqrtBox["6"]}]}]},
        {"0", 
         TagBox["True",
          "PiecewiseDefault",
          AutoDelete->True]}
       },
       AllowedDimensions->{2, Automatic},
       Editable->True,
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.84]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}},
       Selectable->True]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxItemSize->{
     "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.35]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   "Piecewise",
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True,
   Selectable->False]}]], "Input",
 CellChangeTimes->{{3.684533818682495*^9, 3.684533823449733*^9}, {
  3.684540933564073*^9, 3.684540934072744*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"TorquePivotTriFree", "[", 
   RowBox[{"\[Mu]_", ",", "\[Sigma]_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"lowlim1", " ", "=", 
       RowBox[{"Max", "[", 
        RowBox[{
         RowBox[{"-", "1"}], ",", 
         RowBox[{"\[Mu]", "-", 
          RowBox[{
           SqrtBox["6"], " ", "\[Sigma]"}]}]}], "]"}]}], ",", 
      RowBox[{"uplim1", " ", "=", "  ", 
       RowBox[{"Min", "[", 
        RowBox[{"1", ",", "\[Mu]"}], "]"}]}], ",", 
      RowBox[{"lowlim2", " ", "=", 
       RowBox[{"Max", "[", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "\[Mu]"}], "]"}]}], ",", 
      RowBox[{"uplim2", " ", "=", "  ", 
       RowBox[{"Min", "[", 
        RowBox[{"1", ",", 
         RowBox[{"\[Mu]", "+", 
          RowBox[{
           SqrtBox["6"], " ", "\[Sigma]"}]}]}], "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"uplim1", ">", "lowlim1"}], ",", 
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          SuperscriptBox["lowlim1", "3"]}], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["lowlim1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Mu]", "-", 
            RowBox[{
             SqrtBox["6"], " ", "\[Sigma]"}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["uplim1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "uplim1"}], "-", 
            RowBox[{"3", " ", "\[Mu]"}], "+", 
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", "\[Sigma]"}]}], ")"}]}]}], 
        RowBox[{"36", " ", 
         SuperscriptBox["\[Sigma]", "2"]}]], ",", "0"}], "]"}], "+", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"uplim2", ">", "lowlim2"}], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox["lowlim2", "3"]}], "-", 
         RowBox[{"3", " ", 
          SuperscriptBox["lowlim2", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Mu]", "+", 
            RowBox[{
             SqrtBox["6"], " ", "\[Sigma]"}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["uplim2", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "uplim2"}], "+", 
            RowBox[{"3", " ", 
             RowBox[{"(", 
              RowBox[{"\[Mu]", "+", 
               RowBox[{
                SqrtBox["6"], " ", "\[Sigma]"}]}], ")"}]}]}], ")"}]}]}], 
        RowBox[{"36", " ", 
         SuperscriptBox["\[Sigma]", "2"]}]], ",", "0"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"lowlim1", " ", "=", 
        RowBox[{"Max", "[", 
         RowBox[{"0", ",", 
          RowBox[{"\[Mu]", "-", 
           RowBox[{
            SqrtBox["6"], " ", "\[Sigma]"}]}]}], "]"}]}], ";", 
       RowBox[{"uplim1", " ", "=", "  ", 
        RowBox[{"Min", "[", 
         RowBox[{"1", ",", "\[Mu]"}], "]"}]}], ";", 
       RowBox[{"lowlim2", " ", "=", 
        RowBox[{"Max", "[", 
         RowBox[{"0", ",", "\[Mu]"}], "]"}]}], ";", 
       RowBox[{"uplim2", " ", "=", "  ", 
        RowBox[{"Min", "[", 
         RowBox[{"1", ",", 
          RowBox[{"\[Mu]", "+", 
           RowBox[{
            SqrtBox["6"], " ", "\[Sigma]"}]}]}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"uplim1", ">", "lowlim1"}], ",", 
        RowBox[{
         SubsuperscriptBox["\[Integral]", "lowlim1", "uplim1"], 
         RowBox[{"x", " ", 
          FractionBox[
           RowBox[{"x", "-", "\[Mu]", "+", 
            RowBox[{
             SqrtBox["6"], " ", "\[Sigma]"}]}], 
           RowBox[{"6", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]], 
          RowBox[{"\[DifferentialD]", "x"}]}]}], ",", "0"}], "]"}], "+", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"uplim2", ">", "lowlim2"}], ",", 
        RowBox[{
         SubsuperscriptBox["\[Integral]", "lowlim2", "uplim2"], 
         RowBox[{"x", " ", 
          FractionBox[
           RowBox[{
            RowBox[{"-", "x"}], "+", "\[Mu]", "+", 
            RowBox[{
             SqrtBox["6"], " ", "\[Sigma]"}]}], 
           RowBox[{"6", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]], 
          RowBox[{"\[DifferentialD]", "x"}]}]}], ",", "0"}], "]"}]}]}], "]"}],
    "*)"}]}]}], "Input",
 CellChangeTimes->{{3.676467577391876*^9, 3.676467583150907*^9}, {
   3.676467620923286*^9, 3.676467642689784*^9}, 3.684533184729178*^9, {
   3.684533596596053*^9, 3.684533598039216*^9}, {3.6845379966929417`*^9, 
   3.684538068930195*^9}, {3.684538106530834*^9, 3.6845382708752737`*^9}, {
   3.6845383147084846`*^9, 3.684538356260854*^9}, 3.684538387403821*^9, {
   3.684538484572762*^9, 3.684538521073769*^9}, {3.6845388666282597`*^9, 
   3.6845388668906527`*^9}, {3.684540347995214*^9, 3.6845403592671824`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "lowlim", "uplim"], 
  RowBox[{"x", " ", 
   FractionBox["1", 
    RowBox[{"2", 
     SqrtBox["3"], " ", "\[Sigma]"}]], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.684539156942346*^9, 3.684539164426305*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    SuperscriptBox["lowlim", "2"], 
    RowBox[{"4", " ", 
     SqrtBox["3"], " ", "\[Sigma]"}]]}], "+", 
  FractionBox[
   SuperscriptBox["uplim", "2"], 
   RowBox[{"4", " ", 
    SqrtBox["3"], " ", "\[Sigma]"}]]}]], "Output",
 CellChangeTimes->{3.6845391647952223`*^9, 3.6845408854065228`*^9, 
  3.68454102996239*^9, 3.684634498514007*^9, 3.684635722399192*^9, 
  3.684668046506063*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TorquePivotFreeUni", "[", 
  RowBox[{
   RowBox[{"1", "/", "2"}], ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.684541082575522*^9, 3.684541100235766*^9}}],

Cell[BoxData[
 RowBox[{"TorquePivotFreeUni", "[", 
  RowBox[{
   FractionBox["1", "2"], ",", "2"}], "]"}]], "Output",
 CellChangeTimes->{{3.684541093148327*^9, 3.684541100708908*^9}, 
   3.684634498540916*^9, 3.684635722435773*^9, 3.684668046532552*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sigs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1.1", ",", "1.2", ",", "1.3", ",", "1.4"}], "}"}]}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"TODO", ":", " ", 
    RowBox[{
    "place", " ", "legend", " ", "inside", " ", "the", " ", "plot"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"TorquePivotFreeUni", "[", 
       RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "sigs"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", 
     RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "sigs"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Mu] (pushing location)\>\"", ",", "\"\<Torque\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Uniform distribution\>\""}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", "1"}], "}"}]}], "}"}], "]"}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.683656192718853*^9, 3.68365650959415*^9}, {
   3.684533201990088*^9, 3.684533227629901*^9}, 3.6845336018509903`*^9, {
   3.684538398449457*^9, 3.684538398934102*^9}, {3.684538872647613*^9, 
   3.6845388887736807`*^9}, 3.684539050089514*^9, {3.6845392360343122`*^9, 
   3.68453924661322*^9}, {3.684539278578122*^9, 3.684539281301207*^9}, {
   3.684539347834256*^9, 3.684539370928897*^9}, {3.684539413266988*^9, 
   3.6845394260116*^9}, {3.684541137633313*^9, 3.684541223576767*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxF2nc41e//OPBjnDIy6p3oTVIKGVlZDfdpSUOiyMqurEhWKVu9qciI7JFZ
SkI2z9d5hSSktIiyshKyz8Dv9b2uz895/XHO9bie172e9/O+zznXdbbZuhle
ZCeRSPuJl/973402ja2sCGCk/z3nnKTDaHSWfeM0pWbmWH7z28x26DfL1gnp
XS1fWY7+K/Mu8QXLs1n7nqlasVzFZeN6uY5/1QGtX35TbfhWPZqzWVhDbN2q
ZX/qcgv08Kw6+5+s2c5g7lW/Nm+OAMS1arF0MYmEvjWrfp4YxKfVzbL2wyF6
5xeWrcKLPou2sPzY48i99DKWZXRd5nPvsbznb3XLKzWWG35LVBkrsWw8dDtv
QZZln+/6wVoSLFc1DGjU8rBMSeLNqv9JXvWHh1ejLnYRlpkyjJbeCrYPPvut
+Ux4/XiT0pNTMB2+1znvPWH71HC7QjMICU030W0mY4Fhhof+BNjBxgBOndH6
/3PjU/9sR8i+4ah6FwiXyC7/qneDRldV/pZSMtZL7VNJZnrBycPmNzrCyViU
ofNuGtd/IHvN50N7KOGdTMcNLmHAkxm7qy2AsPVJONwWDk3L7zqbvMiYoODO
8okH90Gnav/eOhsyxvWk/48KZzRQlMUZ+Vpk7Fmxxa3xS/GgtrXvlv8oJ+b5
1zyj1CkDtjIuBe46zonRzW+XHJF7CuOfL2dXHebEioKMt7XdfAoVRQ5NJ7U5
sfsjE3b/tDyFM5ecBF1VObGkG16XPzgXQOCHKxnFWzixqfzOy6L5z6A/zxPb
N82BBe9f1hv+5wXkngsmnU7mwNpEu88rdr+Ea4ohO37GcWBmmKa5MqkYtHlC
da9GcWAeZJru+h3F8BVuR8Xc5sCOuWcPODkXA5dcuMRXNw7s4ftcoduLxeDE
FkWxPsKBFeaauhitKwWFwtTAa3/YsaE6n8GL/5aBbq2RgPUIO7YUvHs/j2YZ
2LbwpekNsGN4iOHPKKMySBjzq5bpZMf27+tfezSqDDilLed/1LNjwsES/bqc
5dCVLu5yMoUd83ATqa4bKoc70ennd5xkx1Ka5pZt4yohM+P80Hoddqxx27n6
My8qoeaFgNcKhR1LLN/6WeJtJfxtDYjpUmfHtBOXv11mVoIFj3Vr1HZ2zGHP
d8domypQDZE4vERjw4ybBYoMpaqh1zNz95d8NizH81JbRGIN+Kt56fZksWG5
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
yxo2yZbWdJb/93+dVf8/YBJYyw==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxF2nc4lW/cAPBjk9nSIA2FiJ+SkeJ+IquyR5SEliSJFpEtMpKyZ9kzGdnn
eycrSSplpBINSche55z3ea/rfZ3zxznX53qee36/3/u5nus6W+0vm5xlpVAo
q8mv//2VQ8LDDIYgpvzfx8xRMnh+gWmPaBWJyWmmm/8ct//5h2nbuNTeti6m
7/+TehX/hOmp9P0FCqeYrua2cz5PFVi29+uPf57b8S/7d+aGdcqifMuW/qrL
I/h5xbIzVqdP9fjxLPvFidZwQNzL7shYPa6tyvSXv9Ym7XuZnvMeE/68k2m5
jDVpC6uZThixKVEc4lq2i9fkx/xIpm83HdinEMp0qGBQYnUg01mP1tu+9GD6
U6Pa759nmB4SuHPE+RTTM8c6CqetmBYatndlN2RaTKGgM1SPaRnPaaXVh5hW
aVSPT1BnWlsgeHHrPtIa9gZSmofA7Njbk7kKpI1MWtUfmINd2kYsL8eFCTqn
4p3btuC5pzAAiXNhbJdnGNF3EZ5avOM/yc+FbTl0Ver2uoNoquiWuG+cuLtC
Ma7k6R0ojPfl39fHiS3Dqhre8ISA+sOfCz0fOXGO7+OsBdu7cCqk+INIGycu
bk+/684XDo/dDoWmPiOvzz39zb/rPkjpOs1khXJiPtm/CvO2MbD3X01buSIn
thmV/DWvnAZHNE+4vw/hwKMyp8MP3M8FadcbbzsCOHDTKoubJ9/nwopHD3a2
e3Pgd2iqSG9tHrTQX/W0XOPALU57GP5xeaBdfUCVaseBY1Y+k/FJygdit9hi
zj4ObHGntywmoRAUN3/zvP2bHd9a2aaZUlEMawxonbe+s+M/Q/Nupz8Uw5Tn
Bln3r+z46mmansBkMZT0Gn92+8COpw8G/loj9xTkY+rVLjxnx44ZcUM/Hj8F
af4Mumk8Oz7LeM0ae6cENi+e89mpx44d+N1iFdXKYOTD+YxqTXbsMsSydtiq
DCqLHVqOqLPjXxK7Y7yvl4HROUchZwV2LNTukq7/pAx83l5KK9nEjg0ar/6+
trkcBrKv4v0TbNjz2D3x2flyyDLzoxgksuHaFYJGtbEV4Pqf//av0Wx43CTv
4P3iClBfEaDrEsmGw+g/lHReVkAXBEZGBbJhmrf6LouFCuCWCdnSdZkNd8hc
1aCcqARHlkjC9hAblpecEA0UrgLZomQf17+suK9A5a7x9WrQrTMXtB1ixTWU
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
dDfX3z0JrQfzpEVEyfuFZ1/+WzSBjeHP9Pu5SL9q3vCxjQDH7nqXzMkR+P/3
u0vv7V5UfWbapZ0i3N7M9I0G9ZqZRKYDiqs5dA8xnRJckjD88M+y36s8bvhP
aXjZB+J911ff/LVsh8//PlmtG1i2Yf+uwpbtvctWgsSu4YD2Ze8bP3n6y+my
Zcv4j63A10rR//tJ82iut+WbZdfptaqo1vcs+0/e4wsGlgPLTi6US5wq/7Xs
WrugtfIVI8v2WBP/wXDVP7QxP2dN+1w6ushm8fWK6D+UcnnFfW4iA1lPrPr9
QOIfmsvYt5P/TgZCHWFLXar/kJI9pfDqmkzEHuYjbnv6HyqW+I+1blcWimBz
uOJS9g81dK0c3GOag9InlPjvW0wgx94/t0tvFKCH3yaFS20nUFHV4tXdlQUo
qKN4ywfHCdTO0xPkPleAHIqk927wnkB+S4u08zcLkZyj2IlH2RNoSWZwH/Va
Ear8xpH7dG4CBViJTEkqFKO2js5D7xImUYu8u2CAYAl6Zn1c5XnGJIq46uH6
XqYEPRr6KlNcNIl+814Y59YtQdcpf1ZF1E8iC0UBNQmfErRFnuWb3vAkWu92
c4P0WAm6dk/W6/m+KYQS2r5YtJQiMYOg8uLuKcQd65Z46Hw54u7lzU0dmEIq
+putj/mUo8mz95MiRqYQzaJS2Si+HLV4Jfk7UaYROluCplrLkVthibGU1DQq
dGqK4pB9hlr4vv5NvTGNJCWdtfRHnqErr5Ql7gnPoJjDtX0uxyqRH2PS12Lr
DPrYJuO39XIlilIo/rxp1wx6uAvllQZVorJEqeiCgzMoKsDYz7O8Es1d3MDe
6jSDwmK2m6StrEK3+Ra/sb+YQc4aAS7yDVXorj412ePyLFqo2pnjuqoGJfp6
zB/0mEW7R9Y8NpWoQQXlSuY8gbPo12K6mLBqDXq96QlfXMIseldamIrsapDQ
aOqt8sZZlBF4+fn2ohoUG+FrNS4yh9SeFvgra9SijDeH1p5rmUOKUvxs3qZ1
aH1iVOLVd3OIPupG9bKvQ6Hn+rf6982hKssdY3ZX6pAr7ZZc2vgc4lzrUNwb
UYcOypTq9K6fRwvyl0rCW+rQl6CtHgYX5pHOzLWyeSUqMjG5TDnpNo8URoIa
DA9RUeOmuqCLXvNIMHBAL9SYigrKLB8E359HaanuZSUXqejWwL2C+qp5JHpT
kudFChWtV6d/UVqxgNyf+Rb/ZlBRGM/Rs1prFtCdTwfWxvICYnTG/zEVW0CB
6RpjO9cB+nlRcc5lzwI6LirHRpEDVB7vtDL/+AKyeRqQd+k4IJPpXs3N+Quo
1UF+1qAIUBOWapUtX0ALtdHFppWA9oVdNzoAC0ikTOurWj2gLeKrTlq9X0AK
oYFJ9R8AjRnpXX+wuICgLyAmfBFQWEFFDtfRRZTCebBhzVaMJLYciB21WETN
5qzbknZghB/gwA92i2hSVPPXammMJj1e2qffWESGqzVzOvdgdFzvkyhKX0Rb
0w6wJ2piNFV7ileiaBEdfzKfnKmDUYT893m+qkUUo6SUmnYEo/p1fz/2ti+i
1YWy3edNMdr5kx55fWERSagKb99vT1638vc+ybGEXHjezLecxcj6NZfzIaEl
VGvEpaxzAaPIMqEjqySWkJXOzK81LhjN+W3jKDJeQkWdr8WnPTGKmsmafGi9
hLjP+Cly+mC0y1Fm4Nb5JXTm4rMiLn+MThnvBT2vJbRtIKnrUzBGTZu13X/k
LKFnl0+zvXyAke2D1vNtpUtoK6w2PhmD0QKnoUUpdQmFB2lyDsRhJDd6TMG3
cwk5eW3Nrk3GqMWub6vD1yX0peBN1Ko0jOw/2AoZDi8hUzPaD8vHGEXXXvgr
SqEhDd6u+mdZZHv50U9svDRUu9H/aHsO2T7dtXV4LQ3te1yk9jEPo6W7t7Ir
ZWhIZUOARUURRmeswu3MjtGQYbaUPbUcI3rbSqP99jTUc71D0qoCozgiRn3b
JRo6R501+16J0SvJVJFxPxoKKm/48aqGbJ8ovqIrnIY2nHXUk6oj2wvkzNXF
0VBR2L0116gY7Zkp/hBaRENfNC2/fcUYtV1QbHCtoiH394sDtOcYnftcVWLV
QEPCn8SO8r3AiGKs/oh4Q0Plx5+L8jZglNBQf0+yl4YsTAbNFkjvVdG5LfCD
huafB0z1NGLUnv/KaXqMhlJyMxdzmzBy2Gx0om+BhrR4tB0dmzFiedCp94KD
jkb7zxIiLeT8koft/wnS0WTjqyMlpBdyKJ6bN9KRCReFuv8lRrOlwtH62+mI
N5M1toL0FHVX0S05OtqS+v7jjlaMxl9qNOeq0NG9aVevINJ/Oy37uzToyDKn
/24P6eGvzvMc+nTkVSHKEHuF0c/hgFV7j9HR0jbJXgvSg9MJMvZ2dPRhmCHi
S7qf8vRQ5EU6WiGY3ZBMuo+3+ST1Gh3F3xPtLCDdI/z5+og3Hfk52R4m33fR
x62T9zbepaPmTFdJ8n0XvdvFk6v7kI7O7Te9GEz6jfLm+uspdHRKllXYjnSb
huKnjBw6KrvlLbmL9Ev9I1PvSujotMSr1N/kfJss7fhZ6ujISfbH7XjS9adv
SPzXTEdvI1837CcNzuHo5Fs6ijQKuNJB7kete7pl6Cc6ynPiCTxGujKg6krV
DzoS+2HN6CD3s/zem7u/xujob9Xt/gOkSxJ+pK9doKN1f5ylEsl4PMlcrNVk
Z6DEm7Jdf8h4FRSv/HhFgIE87KtH5Ejn1EiOpa5noLKctRfOkPHNbFLjbt/G
QLpH0NEwMv6P35puXdrFQMqHlWOyyHxJ6bugKq3MQL6ZNO3SejJfJ6Kdgo4w
0I4r033pZL5F0/IDy8wZyPubRP0dIOuXuz5l4BQDKRRJCNiQ+RkqNtqhfpWB
Cqzv934j8zl4J/uw020GclFfOn6vGqOAvRvZEoMZKNJTUeO/KoxuH9ZWnE1i
oC/8q7W0n2HkYW5tsCObgfjtKmzryjC6Yet63vQpA8UKSQ9KlGLkcj0l/kkj
A9UEeIi+fYLR6ccztPOjDKTxvNnWj6xP20K+dTFzDKQ9+6Uk7H/r13rlensW
CpEV0nAxJAMjmfOSuyN5KcTVFwsrj5P1v93L9PTIZgphHLpa3jKW3A+/L5fZ
dlAImYzkyumHGG0NvuC5UZpC2G6YyQ6MwkjsgXe07l4K0bN+VY1nOEbrcvOb
M3QpBK/TTEmzH0araBv1HutTiH+bugv+9zzjM77bmmpCIdDOwocqXhixzju8
TrCmEAJHd8tdu4HRqK7E+0gXCnG7/lGw8UUyf4bSvnjGUYhCV/FPMUYYPT8g
ZOuRTCFYa1TL2PXJfIn0/nbjMYWgWmvdOqtH5oOKzXfXAgpxsWDve8ZBMn7B
IsMOmELEet7KiyXP++tSMdNmQxRCvT93xnQlRlc8OW6Y/CX7g5micT6MnDqu
zhlOUAjZWSVzH27yPLxpunh4iUJc/rWta5wOyKBFiOWgEAtB7D/pHdsDSMIh
lE9WhYXwvLCalx4C6GO2jzhHMAth3R8oKN9FRd8NeXucw1mI9LFz2WKtVDQx
Gx3RHcVCeF0I9RqtpSIB3fz5/GQWYjgp5fvux1SkPfThjUkpC5HFOpqsQz6P
K6RkPNO+sBA5L+XrimbrUFzuh879iqzEVy3toovztSjL2PZupior4Z/9UMBv
qBaVzQ8jQYKVqHaTKHTvqkUdepT8gcOsxMCRNZl85bWIZ1jaN8SWlRBaXO/z
3LkWeUj7yHaFshJLZk0D5/pq0Il86SDXAVaCe7b4eFpaNdq4md7h/YuV8FRM
+nwwvBr1Rr0VCR9hJZwT2WJa3KvRcY+bT7NnWImuz9rZgSbVyFKvqa9vBRtB
PZB6hMpajcx+2SnoKLARrfaxiTttqtBR8fh+kQA2otsw03KIUon4Yp1kdoaw
Ea6314bKD1egVyuI60oRbMT9TpbJk+8r0OGJn7zGcWyE4azBaYfMCqT7fK9y
UAEb0Stc07hftwIdOtURPt7JRshRe+/3BT9DBxK59jfuYCdaC5V1OGfKkMDp
mSp1GXZCdMkvvbGnDH2T/qFSKc9OdI5khJytK0NB1fVK+fvZiYhyp0ntgDL0
tsdrz31jdoL3O69apFAZOrd+audJL3biUHlwzgHxUhQZ3b9+upOdSJby7F+S
f4oG71XNbA/gIIYyH+Yo9uWiPVlhwwEhHERbx6mfh6NzkV/tqS/fIziIMKF8
L3GDXLTlN0dTRjwHMdr+vFIMcpCNhkn09iccRIn2uK1aSjbqnhpW2N7LQTzb
ZuwuYpyJ2qxEr4jLcxJmYdtaj4ekIRGXsTP+ipxEm9m48ifVNOQYVG85qMpJ
nDnjSVfrTkU8pQ5EuhYn4XKsbO+3xBSkzVcuKH6Ck+hQkOC4uSkJYap+0bYg
TsK6caXSL55YVCbu/WdrHychFStUHCsYgso5Eq/u+MZJjNdSNjm330HPfj2j
Sf3kJFogwvlKWBCqyB8VlB/nJIasA4DOEYCqFWz2qrNzEVt+5e92+OKFqtd6
1B3kIc3uaD5ocAvVzEZrawlwEbj3tEZl3U1UW/Pa8uh60s9W3Lwc44ZAU83r
+C4uwsfwcIaEgz3CO6w4bXaTNmNnuJ48jjDXtXt2SlwE5XdjGaPZED3/Hbn+
7H7SI88d39xTRPWvCh45EKT/71Nf2CLtpMX0i3vfSy8fZrrBVLTpuhnTjYoq
hh5WTDetM+v2smG6+VPocIAD062nFwUeeDL9SmtdXIwv022SClsTgph+/cdR
4VEk0x1uvceeZDD9wb8q7VUb0/3pN/awb+Je9lRP0ZjbNqa5hX4WDEoy/Z+n
meSLPUzfNtst6qfLtCjHHw7KVaatztn0LLYy/U5Ky2fyJs+yNydobWmpW7Hs
mDyr+X1LvMt+Dxo9leb8y7743IZ3U5zAsu1Te2Jqk5k+7mW2zTqdad19h/cl
FjG9/ani+Q2NTPel8b1YO8H0UZ9qD4GjgsvWtFHkLDJmWvVA8X39Y0xLzWXm
hNkzze5y/+MKd6brTjns4cpiukxtsC4rn+kCERs97adMJ3SZ2gbWMn3dkHxF
f8/0JdnqDendTJ/hVczU+MK0SbN0re9vpvUyM3W2jjFN+G95j6eYVrZLtLFd
YPr//h+x7P8B0cewQQ==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxF2nk4VO//P/AzYyyppPWtKJRKqOzZch+SrRCSyNpqq5BsyU5EkuxkiVBk
yT5mzn0oJSGJQpIkCWWXbWa+53ddn585f8xcj+u+z8y8nq/XnDN/jOj56yaX
yAiC7CAe/t/zIbBtlMXagCP/O0477Y9YXGLbN0Fp38wc22/GLM8Pj7Ftl5zZ
2/KZ7QdT4u9SStiezVEtkrNlm8pjf+0KxrfqgNZPY/X261f9+8n2/44IrVu1
xDfdNRu+8q46d3PObE/wmlW/KuWOar3N9k8DF9F6b7b3RSgYFlxju2DlTb6n
JdtFP8ctN8uyXVGtWH/yO8+qO0+nmaN9bM9Nsf7IfWZbUertDsFWtmuyznn8
rmG7+yjO+7Wc7cVesez2YrZVtv5trc5l2/KFycXCTML8zl47zgnDW0bVSxmp
hD2y+nWMdWD6uOCDuAQeHHc+lO5hZgZpkYH7w2N58EDdjcV7Vmxg376fdJ8o
Yv8Vv7izhhch46Xe6avhPLjIbffAGEFHqM7cFHTaj1jvnF68cMYN4u5Penc7
8OB2izfSlbp84ctzzfcg4MEL/vtsmP8qHLbnbp7UVuHBTz1O6ZPmjID9f6xM
2uR5cG+FnJWPWpFwIWBi29cDhD2jZi7XR8FDuVuyljbz4B7SZ/u/mcfC1HGb
Fwoj3HjR+F6bDOkE6Hp75lNhLDfuXXRR6UVUBhTKFBJJ/s6FG+ZWF+6YzYfP
U4LWK/dx4b3vDDpz5AugevzwUs8nLnyk+abnnEcBtI0s7RJs4cJjjW7tn54t
gI9vaEVlVnHhA+5WasbTT6G4rst8XhQXniHqJZM3WAjlp+paKhW48FRhPr3C
lBLYOCZCPSPNhasd+ZZz7GMJPDMclv9PgguX3iyqZsJVCr2+GAUrixD7G/tf
24JSSG38cYTOy4W7HGmsPFhaCtHUtTmvvnHiIkbqi/HRZfDEsXM+HyM58TbD
79seSJdDCXevD+2hnLhr9NoFGd1yyJv98EBbACeemKlcRrUth03Mdz1NNznx
YO3swpCYcqhNVVPB7DnxisQMfGa0HKIyu5YLlDnxJ6ix88nMCqgg/N3P/zcF
T6Amvvw2Vwm3GDI6bw1RcJWnqk9u8VbBWb/tB32+UfALV4dsWLuq4Ite4683
uij4GU8NS0ynCkonNhx1rKfg8XcPuO1IroIS63OZpikUPJ1WJnxCvhoKL18O
PKBHwWnajwNiLGvgeNeVXOoxCo6W1+3OuloDa0odmk6oU/BfvrdtEgJr4KnL
TvzX5Ch4kuBSpkReDQz8cDXrxU4KfuvxZ31ksgYO5nvgqtMcuMnrPehZ/1qY
dzoYMUzjwE0vI0+pYVTofjhE7FsCBz6iuNceJFChOm+ormssB55+frosP5cK
P8Ow2LgwDvzSu7Cde15SIY9kpMjn6xz47cFYoUYmFTqRYlE7LQ785T4laqVr
HTxY/CjQ/Q8Zz+V+d0MP0KAu3WyD3QgZfybeFuOpT4PnW9ZnGPwg4/HGRSN3
zWgwefR2nXgPGeetWzzr6EyDlP028/2vyPjd8W5JRgIN9mbucjmRTsZ/vS1I
DRymwbniT0tKScR+R6sc0Uka5MdiIvfFkXF+/rHRp4s0eLyPmUeKIOP1N1MU
XdfRYanAt+/VN8h4baYK/lGaDsMfZJqLnSDjrKsx6fMedJidZT68UZuMg6jp
uLW36ZBWsuEmCyXj9qUyTdxhdDjVGhDXq0jGDTZpTFTG06EVr11r7G7i9eRz
D/9+QYde2wWs/HeScZ4HA0JKVDqME28fdRYg48pz/3Sv1dNhkzbKo8NHxtGu
auvY93QoFyJyjLFIwodnbvkUjtKhYVz3h9FZEq51P9ZafooOHbJj7bonSHiY
bGBg7j86zICIf/lPEv4sdjJYhYJB3pWBGscPJDyycKvvUSEMDnhkH/pUQMKz
z7nJZOpg0F/hpu7XHBKeniW4O+QkBoXmdc8PZZDwX/rBukbGGDzrNZkwHU/C
nd+HKmZZYvCDD2DwBZHwg8k2SWIuGHRV2fzfNj8S0b9xBX1XDPItD0vv9CLh
Tn0KvGc9MKjvF3NR8irxepVMUyk/DDb4f32nY0HCU8UvuVTfxaAdKPtpeJqE
xzR01eyKwSCTFcoyMyLhH+rJqtceYFAlSEru4nESrj35YKAxCYPdGoiBM0rC
vYVnOdpSMehJ7rzsrkrCF8s3WWOPMFgecis1UIaE/14XVmqeg0ETLaOKO1Ik
3OJD9zMkD4OTlD1tMftJuMDySO+DAgxKhTeTHu0k8vNX73N5jsFm7QzBXAES
Ltcd8ryqBIMO3O4KhZtJuHRSWMVIGQZzI7Y71q4h4TuOYxc4qzCoqfcnGKeQ
cC75ubWT1US+a+rT37AQXCNi5HdDLZFvc3xV2xKCt2gkM27XEflGObR3zSF4
vh1FR5SOQeoJtdG+SQT/MCT1uggj8l7HTxkaQ3D9to23RHAMJtyrPjL9HcGl
PvCH4w0YlDeMMl7sQ/D4UYm+8ZcY7OCzdUa6EfyEI8mB1Ej0471sGPdHBDc1
iD/AJMwXy5XJ14bgTxN/iPx4jcGiU701W98iuNHxCYPSN0R/NhZ3CL1C8OMW
1aWXmjA48iFofA9E8LsdqnocbzEYHmfGJUlFcOEyv/8iCYuZHhCRrURwjjkf
wX+EGzYzlJVLEfxIhpyZQTPRz852U7QQweuKnr6KIsyKz72qk4fg90T6HF8Q
zjDzvmOYjeCli81a9YTVtp3MNktH8N1KnmY1hHs/CddZJSH4jy9f05IIeyfN
dF6IQ/DZIZKALeFtZ9/8dbqH4Gamg2/5CFcIpPG4RyA45/6Asjzi85j0XNvt
E4LgFLvutn2EJ1M01QL9iTyYf0TvE/XFWG47c8cHwaeJr8g3on4pwdHrMR4I
PuBk6ChAuPkLPTLhOoLvVE6xVibyckx/kJPuhOCFLll3NIk8Z3n0I49cQvAZ
L9NWwVcYDLxJvt5hi+C6e8039hD9WTtIPX3VEsELPApNfesxmGh4Q4XHDMG3
Xj4Vz4IYFK2TFMkxIvJYPP7Rgeh30f4hTnV9BN90OJq/ikbkiZh9uAEQHATy
hq/UYNDg6vpqPhUEH0nTxOaIeevuaUx/Ko/g6RbvZjsqMPj3haLDtwMILlHX
ZqVcikEf4QkDXzGiP7Z6MQ3EPFOi8+W2CiP4r9wt2OFCDO64JMDS34LgXdse
CVQ9weCTD+1DP/kQvF/T8tj7xxiUVo9sDlxD1Mfv4NKSicHoQ7OSVxksqPHw
Zq17CgaH4qottDpY8Jr0WXA9CoNLzuJ7fd+w4GeXVKuCOxjkP54yWUJjQYMT
B70bQ4j+/vO9I5jPglZ/tZ4V3iLm+Zx65fQtFuRtVV3a70TUL18SKO7Ggp3b
OXiDLhH1rxc5aXOZBZ/xCApgdkR9kPTj7SkW9GlROzx0BoPaYo382XtZsGBc
R29AA4NWDIW+TztYsEMv/oSFGgbdP+Xlr+NnQR49mZNVisS8RUSoey8xYfJB
a10hSQzOj59wMXrPhHr3/aSSN2Fw3WvakbBXTPhxxUBUZh0Gd2ce5KirZULH
da5bijkxaGi8IXVfLhNSN+bNmS7QYX5lxxuGNxOOV/TkGPXR4Vl/iz1Fu5kw
ztq2hCuTDtfiSq9SBZhQe9+DTS5JdIiRBC5F8jEha9p/c+19Otwb9inv8hID
BifH/F0TSIfTUaYSoh0M2LTZf80dWzqMTjGQSQxiwLPvHnX83U6H4ItUR6gX
A17ovL+xjZ/YL7Tuxo2rDOj+/ejfeG46tMhqrjhlwYA53G2BPbM0uC9fR2mt
DANqhWK86m00iFdogMCBFXhXfaDMw48Gb8yLDFz7tALH7sS1tLoR+5WQIOuW
FWjchYTxXaHBe3VYg0rNCjzst/G9tjENWjaoas/dX4GSS+SmODEanH2vYOAE
VuD+6n0Gya/roPjYgXOnM5ahtIJbrsUCFVaGdjx0ergM5bP1B/x/U6Hmrlst
gRHLMGIs/eadXiq0Mm45+tx9GQoJFhVp0qgwtvqaCJfOMlz66XHS3p8KF0PK
f1ZPLME7EqUmgFELm4WOugpqLMHha60+/j9roHnVzwIZxSX4LrdhiO9jDRwy
ivmuI7kEkVrpp8F4DWQGfzPx2LoEz/h5qW9Jq4Gyv4MUWn8vwqprJanfDGtg
auXrJf+4RahHfrv9v7Jq6Gx4KmzwxwKsHHosu8auCjL1pTslexbgmbWpwi76
VTBOh3/PzbYF2Pmr43q5fBWkou04d+0CtGtYozLBUwV55E6tSMUswBeMqJuC
pZUw779TN7yUFuDpe4MR2osVcHDAyH7dvX/Qn79b5JdnObS8YXRUUXEeXs8b
2moiXAqjuh/ZK0nNQ0u7/mdUSimkHR0PU9k9D3Pbbnlt6yyBu3gi29T55uHb
GqvHTQ4l8Ht6g63O8ByUev00Yfx+MXR4rRB8NnEOOjW6Tst2FUHP7UJvfOdn
YZPZi9Ba1afwIRw5Batm4DydY12xdzbM8EPW/y6cgZ4XJpnzMtmwQFng7abs
GTjYSHLjHsuCWLmOxuWoGZhbH9fhb5UFR/LzZNbbzUDKgS/b7vtkQPXYi5vO
rZmB7UbrC4J+psDfdgMf589NQz/ee0FPHGLh7M6F+yLG07BATNL+UOp9yOzd
cFJfexryiL+vO3w+Bm4xA68eSU9DB972y9ETUVBdL6NCi3MaZqlVPnzOCod6
XFWu15amID5q/SmwPgyeftkqlTwxBUujU7a6B4dCx6OM3LGeKdhe+DaymBQM
42WsEuKKp2BWyY64XWM+MPPvDWNaDnG+btpArp0XfFYYtX44eQravdUQv9Lp
AeHeujDlEGI/maQNrl6HzYMdGhe8if1uMkWS+k6wM3OUEX11CgaWPKfE7rkE
R7fv8Bwwn4KI3ObtQUlmcPaTjCyvAbG++cmErJM2ZD3U+yunSawvHL50xGMN
5DW2f2Z9hPD/ji18PpfvSLEt/C52d5ko2xIRBf2929gG5O4zh0hsD++3GeH/
N7nqGIMhn5lxtvuTJ9Nrutn2P7zmh2Yp2zQrlevmtmx7XFPeQLo1sWqn7gbX
JzPjq1ZLCRKgev9atcPXqS8W/w2u2mhA6nmTWO+qFWHa59HQtlUrT1pf6L9Q
sWrJkAle/GY5+P8uefP3acDZ96um6zUrqTT0rHrs2WNHw7ODq370/FDabOWv
VdPsw7dKV4+v2ndLSpfRpqlVt7R3anWkzgD3dA5FUkMWqLKyVKrPnQGjjCOl
+ziyQfbIN8nS4hmQ4S1cJqSVDTyRsU0xDTOgqJZbx7cxG4hIk77rjRLnOx19
udz4GNy8f/B2vfIsKAo/yvgPywW7DMMrS7tnQcHTWK/KuwWAp3ft08zBWaAk
K9401lgAZi49SI8ZnwWUTvfMaeQpaLqdHuKCzAHtC6KDbp5PwY3nL4zFxeeA
e+mPakXbZ6Bp3bc/mV5zwIWTkduzvwi4vTuy7/62eTCREhwWmlACglkzQWdE
58E+Q+HDJu9LQJxc6dedUvPgu6LH4g1KKahIE08o0pgH2f8ChiqPloIF5+2U
Zpd5kMHINh8tLgX+65a/U17OgzuC/C+2RpeBuwbYI9/r/4BYZvwRT5lykBbk
u6jh+w8Mlhwo6dcvB0WVimZrwv6B0/OdcpIXy0HrzpJ1yan/wBmxaxddE8sB
/9/MW5WN/0APpfB84WI5SIoJspgUXACdnw0//qBWgNz3WlsvNy2AxEb1MBvx
KiCQFpfm0bEA3EJUKz+oVYGoywOiIX0LgFlIi5UyrgLujFuHsiYXgPzRk/op
PlVAQ7Jcp1dgEfDYZb0xfFsF+sNFfQ0dF4FBvtDYgYvVQECd2a/IuwROql3q
yrpTA6LXnLx0fMsSiD01cXNNSg1gdaaMme5aAuHvGfUWz2rAsLPCgqvsEohZ
X2BV1lIDKlNcNhZaLgGuuzLpavy1wGSu95hw4RKICxXQehlXC6KLqgu4Ty4D
kUDFIw/CqGCfiFrS3zPLoEDOzXxPAhXgD/GwLvtlEJm8dSA5lwpmfN+ez/Fa
BmaeaRKHXlKBpd4XIZCzDHYEp+WSWFRwYJgZ67m0DM72ukiddKsDDRYhAdac
K8A1R/PjloA6YNXKfU2LfwUM7gwexKPrQGwF/4lN+1ZA+z51lZf5dWAheDdn
sfEK6I141ubaVwdeC2v7/CxYARn3TkddR2nA7mHzlZbyFaDr0lhz7SQNLHEZ
nSnHVsCJlUxD47M0cOivuVxQ5wo4Jx1Xjl+ngQSa4x8hhAEKRpzO6z6igYsW
9+xPmzPAbMof0+VpGmC2bDylep4BDscscsswaCAZTVTffZUBGuSui+lz08G7
/ZmCk8EMMBOXlLhPkA5k50u7oooZICS7zzZCgw5IDzv1XnIygTnrSPhEBB0w
H42en9rABF8Dgj61xtLBUgHiJ7yDCcqfpio9TKaDWUyq+NYhJjBdVJX9mE8H
w6Ohm+TNmcA6QmV5fyMd/JhLlTxvzwROpqRe9RY6GEDKtGKdmaDpTVKz2kc6
6Nn21XM8gAk8i+S+/xmggxZNhS+5BUzw6NL+IbFlOnhrcGK24wUTyNxyNvYg
YeD1Wfv1JDoTbFMJaH/GjQF47R6w/sAEH8u3Ulo3Y+BF6s+crUvEehITHZbA
QPJ0gkv4CRZ4K4RvdDmNgQRGYViFGQu4vGGmSVlgII6nIWPQlgVsBdcrdVpj
IGrX33Z1DxZQgslPui9jwF9fW+FfOgtUzTufqfLCgK+ZleHefBb4Nrb/eskt
DHjZuV8xLWMBy7vlKfcDMODqmZFS0sgCGi+VxTjvYODC43nGlb8s8EWMvKEx
HgN2z9f9l7jAAtEXVavmkzBwyGqjwHkSgsYYaF3fkIYBySv7ZWLXImioYOO2
+SwMPHN5cTSfH0F9kKOcr3IwIO5+VB/biqBYTCinTx4GxG6bXhgXRlDV/GDV
5EIMPA7uv86xF0HdZZTdyMUYEI1w9NshgaDLF2GNaSkGdj0MSNCVR1CkSeV2
YQUG0pN5H9sqI+itf4eXyqowsCMjodhTHUF122cjMmsw8N/Twje5ugj68faf
L4dpGNjE2KH32IBYXzOX30zHwDrju82ZJgi6uD72tgHEAPeTxROPzBF0OAqz
qsExQF50aE21QtCNIYHH1zZggHGy2zDZHkG9Z7qOaL/EwEKWTnvCZQQV+orJ
Ob7CwMxslfFDZwRlAFVlj0YM/NXd9zHWFUF3CJ3QvfIaA7/TE07H3ETQm25/
7TTfYGBokvIpyhdB16J7QzibMPBNy8M8MgBBv92ZKC4l3Jv8ozs8FEEndA2G
jr3FQNe4iWVoJIKqhajvgYTb0YYvQTEI+lrxpfPuZgy8i5exDniIoNEXvtCv
En49ktXvl4ygsWvubM8mXK/Gb+f7CEHbxV/70wjTYgO+ez1G0JP1yX8g4eqh
v+dv5iMo50fmpULCL5RshtyLiPytF375E34e3XrJtQxBD50Pu6FCuGBA7dfV
KgTN+PaEp5/4PDnyRQ7OdQiq/8ki35FwRoTgqAOOoHLa2UZfiXpS+u46X25E
0LOH/UjKhOOll8YvNCNo3YNRmh+Rx/1Qx2v27xHU8up4UAGR193u7gmbTgRV
aAg6RSPyDJPSdbPqQVDD2GfiNUTegYHV0xb9CJrz+TJvOtEPT/HEudMjCErp
SBkVrMeAmx+nl8kfBN0Qxv+7muivS7vHgtE0gpqX7ZhSxTBw3tt0WX8FQR/d
/L1zhYoB65YGP10SCU1bX6ypVIuBsyKyzONcJPTTLi43q2oMGDbxkzT4SSj5
ueuoVTkG9IQCg9W3ktCZAyEKymUY0HKd4FDbQUJFRQ7cZRDzqyLQxnVEjITK
eR8+pf4MA/scotYdVCKhhz/vNcrKJOabtnRP4igJ5drVOUxLx4AQv9MGcU0S
ur1/a0R9CjGvNbqb9pwkofNvTX8FP8QAk5tLYLsdCY08VSswHIaBxXM3U7Zd
IqHa9hwMzWAMzJYM7djiRELB2MDoHX8MjJq/3LnBg4SOOJ358dYTA5/yA/dw
RpDQTdsldQ4R14cho7U91+6R0L067lrO9hiY/pcQ0x1HQtFxUf5oKwzw6RYu
Fj4i3i+NusnHBAPaI13vTcpJqHPMh1fIUQycjrULo9WQ0AoPKwWrI0SeSmMq
+zASkb+RR5oMcf2JQPIWm0ho9dR168a9xHyJS/pl9ZPQa40Jfa/XEfPZXinD
O0RCxy5cxFEuDHR6o79u/Cahrj5p7hksOphsMjPRmSWh99cc0+ScpgNxx0Dx
v2vIqBDmFRPYRQfJT7s6VRXIqKe3V+/BJDrIM7a7+0SFjNreac0diqGDisVR
sAElo0bro48GhNNBux5SOKhPRo/5a/ba3qSDNaMSQZF2ZNR3Nh5vM6YDX4nA
g5+jyOgB2Xb0AicdRHTw/kAfkNHbZc+nzizTQKJvQvKzRDLanT/jemiKBl40
P+Pwzyaj2Ys1vRF9NDDq1NUjVk1Gw2QOnBsro4FzhRLh7oNk9O505oYr5jSw
Q5jZHvCLjN74clnyPHG/7I37IHhvnIw+GJGv0dKgAUtf77L8eTLqdn1YDJeg
gbN6r/v6eDnQhsOZ+rErdeD0L3s5HTkO9JHvlTcJaXXg5J6UAcFQDlRe2TRc
4Q0VrEtykTwQyYGOFzAbdtVSwTte1FMxhgPtUytznXhGBfrTw2uNkzlQmw+S
wjoxVKBbL38kvIgDnSrybHpvSgVatu33Jjs5UINDF05q99YCtTRu1ca9FPSX
RdL2ps4awHdhvlZdkoI2b3P9fKihBnyX+KlUI01Bjzw0wLxLakA4tUGxUJWC
Ys3buKsia8CHntuyD4wpqKP8YOgntRpwWWD2gPVtCmo4bSVT8qgaxCYMCMx1
UlBNgUEDqFcFzlu/T7rWS0G7X5tIRclVAYW92LaRbxR0Xr5JTmVnFeitSNvy
ZZSCDhjV0zUmK8HezjP89QgnahI4Tp+PrwTUTa3c96Q40Vfv9l1f6K4AP+7X
zouFcqKf1kkmWJ4oB7J50aOhkZyoWoaGBkW2HATTbPuHYjiJ/HhE4wTKgchv
zte5KZzobNSTW5Y/XwAbTZMEsRJONChX5NGj2y9A9+yonFgvJ7qSLfDgT0EZ
aLEQctsjzYXmpgv7OnSVgIo9AWOifVwof4+Cfq1CAajkTPPY+50L3fRLNNx/
MR9U/apiiA8T661C9pvp+aC68O8G6UkudJsomC08lg+ocjby6hRudGFE4X6y
YR6Ax47etpTiRl0WxpJsz+WC5gvLfA/9uNGmrb6zuaeywLvj/yUnBnGjd/do
bLLhywIt++VEU8O50dhNhzJakzJB65iTXHYsN5pe23+iLToDtN/oNS/J5Ubt
dHJjtd3TQVdIbda7Fm5U9zwON0kmg4EcL1nKTh4UkfBxkCuIAbM9xRM3dvOg
0pZZireI3yo8/MNFP/bzoEr+VwO/yUWDw36n97+U5UEnsxfDGXWRwP+0jFCw
Lg/KY95je78+FMTddeiZMuBBm/ZKr60LDAF5eGaivSkPenZESpYDBINWKb6N
GjY8qGuc9PAHtwAgxDnGiXjwoPxTLkFbtG4CadXdL6/78KBZ73zi5CrcgZab
ReA3f+L97nWkRu12Bc5f3yxhkTwo/vD97taZS8B/M6v60H0eVOSOLquj0Q7E
6SnezIjnQdEHL+ITxM1BXsBVWb5UHjTwMjd/h58eoFbmTtzOJOrN2POK7Lgb
tI19KfqTS/h/x6DoZifrZ2zPm+vvby1hmzcmaEitku1dr2qyi6hsyy5N2Ajh
bFtctulZbmbbJT0h0bmd7cCOFtMvXWwXqKu2UQfYXtgm8NJnnu3ENx+K/omu
WXWH+PHAGW+2kyQaO7j82baSOr53Rwjbvw4fb0bvsb2ieHxLTDbbe48fLxBv
Ztvb/ni7tSDvqoVTj4s00dlOfGaxqLyydtUfoWZPjdn6VTvX26zdmcy36vOZ
PYm0R2xb3j692yqHbV1lfeW0YrbFyhSubG9kuy9r3cut02yfDKT68p3csOpj
NgpcxcZsq6iVPjAwZ1t84UlB9Hm2Ka4PPvH6sE23dZDlzmO74ugPel4h20WC
NnraZWynfjYlbohsexqBGI6PbF89SN2e0832xbUKTzT72TZ5I0EL+s223pMn
OqITbKMhIh/xWbaP2KfZ2C2x/b//Y6z6/wBPcGW9
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
GF6WeYdHOdZ2TXF2meL4f/+HWPD/ASic5iM=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxN2nk4VN8fOPCZuTNjUGSpKO0lSipLoTgnWVsshYqsqSRFEVKhyMcSWSJb
soWi7MPc6ByVSApFIZVSQoVK9uV3f8/z/Znf+WPmeT3vM+fOeZ/3uXfO88wK
B9d9Rxk0Gk2Gevm/74pgQd/MjCim/a+ZOa8NHhvn2ydWTfbvP75rflg6dP/g
2y7+dnv9O76jfsu9SMjneyhjW56yLd8kx/708Ucis/Z7+fZHlf3cWffekV64
VWbOrF85fPHUWMh3ybLct5rifPsmbI/T4fAtHm47f9+Q8Kw1PO5InKrnO1R7
87yMi3y7zoy5ZnnxbVbxuOHuWb6XbjG7XuDEN/FXZqD4COW8BQszhTehnvxv
RmU2lLWlVT1dDdBLlwcPyEPC2D8i/7zLcTNUJO8l8shMGEN3xVVTUYfRzW5w
uspYGKdmB4ZxrRzQxQzOq6e7qLhY6rqPJ48hvSWJ4S+gMLZ7Z3fwYuBp1D6v
ck6bgjBuXMhS99nthdDLqy4da4WxW2Vx3Y1d51FmqFH9p5VU3G5M8bjBBXSa
2RnWLSWMN6UZuipDP8QYZQgPMak44fddJTIArftkICj6QQjP22LFyjYNQ5P6
wypZ74Qwjo57XGp1Db0qyLDTfC2ElyfEOhNHw9HZK9NlJ2uEcGP6Rx+rc9cR
b03JsdpCIQzNjYz8nkUhA5dlTy8HCWGaruNZTn0sOj72z3dooxCefDrwpCji
FsqUyBhquyKIizK0nymP3UFPCwTCXl4SxCs06jxYClno216XFVXegtgi21jq
vk0Wkg1WNco5LYi3ss20fJ9koZzJmmxPS0Fc0KLNlgvLRnnfflpKKAliv4fl
VxPE76KSsi1Vez5zcEg6a+cQPQ81myUdgB0c3CluEBW4MQ/9+z3zS/kdB08e
Cm7uO5yHtig8X7T4JQfnuTA01MvyUHmqlUdvOQdXZ3T4fzhxH1WE+K8NiuTg
hoPy0ztrHqAnVnXhCHDwhoEoK53CAtSYKTGop8HBMYYRzYtqCtDHX4f3vVLh
4OTXW261dhSgUb+BBR/kOfie27UlQpxCpJgpmTouwcHXOgzbdawLUeJPmyLV
HgEc6T5XR5ooQm6X/r7NjRTAMSllrZrbi5Hvs+3qymEC+PlLdf1po2IUJhqU
RF4VwHfXO7Gy7ItRVpqU3XMfAWzp/twtN6gYva/W7O12FMARSilEREMx0hMJ
nlihLoCV3CKliw6XIJnbMsvjP7OxS89NtqdjKbqfcHmuegcbB4khv3fupUjr
Rvd421s21pOnbVgRUIpsQwpaFtezcenqxlWn0kpRurtO2G0uG+/enX3le0cp
kjNwGc4KY2P7A0qsY8ZcxNNu6tIPYuPnzqNolzUX7dLc0tTjz8ZvXVofLDzJ
RSeVaHnrPNn48/ZuOecgLnogc8P+gR0bP5ijHvH7IRep/H5YX6rKxkonHy4J
XVmGqn8sJy02sfF3p+WL/iiWIYvuq9kj69hY2/z2Lu1tZcjrvfEV9eVs3DPW
p5+0vwyR1V1bK4XY+OdZXvHGgDIEE4Uznn5i4Y+rlE2+fChDu3danX8TwsLH
Lyckn75cjtad9WpqDGTh+smSG9tCy5FQWoz8Kz8WPuS9o/VvdDmqnX7RVnuO
hSdc7++QzSxHeuR2jUf2LKxn33Qrurocwc1LJ3LUWVhgj+GFECYPLbPT2J+l
wsKr6jzWCc/hoekIi9yMjSx80kBsjbcED1X+jLBKWcPCF3VvTUqs5CGNnJmH
MWIsnLODrrpfi4dUl32+6NvLxPLaY3UDZ3lI0miq+cJXJp56rLJZ9jwPDV2U
3nD+ExNP7vz8Rd+Ph4raTT+4tzCxr1643N4wHtoU91jzRBUTh+7drGmbzkOi
1R9jj1Uw8cOGoemBbB7q/zv+60gZEy/YJz/H5T4P3TdVTrG5z8QmB75xZMt5
aN3czOn9CUz88sjdsLR6HhLcji1MbzCx5fehnGtNPNTj3PHA6DoTi58sFDvy
loeyayVtDa8yMeF+qbrpEw+tDryKtM4w8e9Aey73Nw8xi9MWbndh4lZB1Y2T
/3io63Olq/pxJv4Zcf6vwjgPpYPhZSrWTByXYG5jwiDRsolj/vKGTDxUcKgy
RYxEP1uOZ5I7mXg+I+5r2HwSlRc41e7WYmJBUa1iO2kSmRxznndamYmdDjfp
VS0nkcyOkyozG5i4OblCeO9qEvUsdjkYKcfEEgkS3ngtifybTqUWLWFiTjVT
30aRRHvyTj/dKcXEj4ZS7gZvJpHUf649zeJMrN+ZWZyoQqLC7Wc2jQgwcVPf
38pzGiT6ku2Bt/0hcPXLlFwBXRI9uHLua/1PAs/riDN01SeRj7Unx+Y7gTdm
jUc8MiSRhIS3iX8HgbtOseZJGpGo85e3h9g7Ap8/mbd7kQmJ8mrPx6c3EfjL
aqTI2UciHd8LnU+fEXj9i7U/Es1JNO/QRaZFFYHnlF96Cg6QqEP5ktz3hwTG
dkC3/iCJckR893hzCaxX7XIKWpLoXK+vm2AhgW9/Y2kmW5FI+6nfjcRcAtdV
CZV8Okwikdv+5euzCFx76MJrIRsStZ+/3FGRSuCE+wfil9iSKMvsCs0oicDb
K2+zpOxIdHZjwOpPsQQuCt6/aJyyllCggVskgSdE3d8+sSeR0LdAF3oYgRfu
n1Y/50Cid+hqZPRVArP2/dMROUKizMSgklX+VL7mHByJoOx27r/WEh8CHwqQ
NR2hvN0keFL3HIFRqd0+fUcScdaHLH/nSuCRDPaEL+VmVqiOkzOBCSOp3SmU
UztDncYcCfy5OFb7DmWXh2HXQm0JHNXi+zmGsnrctYLFlgSeX/xmrTNl9pnw
5jwzAjvvuTFfjvLr3RGjmsYEjknD915S10+RvS7TYEjgiKKD3y0pO9MjoZ0O
gQ/7HX7RQM1nS0ek428tAk8J1FsoUGaURQVfUSew257sEDdq/q+iovMkVAjM
3dN/JJnKT5JLTGOmIoFfcdK+5VP5dNK/MaQqT2DSH4nkUvlWWRkrVbOKwN4l
hp/CrUlU/y7OrleKwCeN0zyFqPWKL7oZ6CNB4DTuac3MQyRyDI/PERYh8N22
7Nw11HpPaicObiAIrLTf2veTGYlqlyRJoikGLr7b9mXhfhLdGE1SMxllYHZF
Vf9WUxJteHDL/+wvBl4t2TKpuJdEBpXmonY9DLw0udp3/W4SOdTPTdnbxcCR
8Z9qxal6je+79FCujYE/9F8vTdMhUfGY6q4FzQzMM5A9aKhNzZfT30o0MPDc
hd2P3wMSMdfaDH98So0n9mUQU/tj2ZYFV+sRA7/fvrREQo1EGrqvJEiSgcU+
BABTVRK5HtHaHFvAwN98Xjy4tpGqv9tLXXYnM7CSwp4B5ioS/XvwdlztJjWf
iTd/7y+j6v9RRIhsNAPngat4hwyJdDums+jB1PzWOBbJU/eDAqlPn8vcGdj+
qMToOItEQVG3D6zezcC5FVuFM7p4KC31QLeYHgMXvbGIHv3IQxX5oudmIHU9
29uf1dp56PdLv+j2LQyc+Cav9XwjDx0WsnsZuZKBRZV4clMPeUg5YPnOqTE6
vl5900TwOg8ZRbc29Q3R8ZLVRpbCITzklBZp1zpAx6tGNiiMXuGhFETzLf5G
xwnjJ+SiPXlIaLKz/EQTHa/zenOl5jAPdXqkKb7NoeNPei5o6xoe8lU9Z/Ah
g47D69lWwkt5SGbYwOFrCh332x6PrlvAQwe9BmP/3KDjJ/k+zcIcHmo6D6ZE
LtNxzd/eOwm95eix74cX+ofoeO3cH5e+5JQjO1D4zciMjodOdbe4ppaj6ZnA
GXNjOj7bkf2852Y50risoOyoS8eBXy4G3goqR8UBFxL9N9MxLcZVX/xIOcoM
lj7BE6Rjk6teDHmpcqRt+OsKZtKxRtWbBW4i5ahTsCq5ZoaG3woNP0tnliOZ
MKfGln80vLrm2njdYBmKDS/b+uczDUt/ZeTL1pahoGhz9nqShg/li+0Vdi9D
J5KjMpKdaVg3jGcdwuOiIc6ukK1HadjbKX9gax4X+Z9juL62peHT/yn7v0rh
ojgjdw2OOQ0nhHYnFwdw0WOaeZM7oOHpOyNPrfdw0aKjUjO7JClvetawua0U
xVpplf65MIO+3pRsbO0sQXkq+f5yZ2aQ1v3Xyv81lqDHc5fvsTk2gw4wl8Ut
wSWoH9G7npvMoJdeDhaM2yVIb3X1vLQ1M6jW/UZ1rlUJGv6528W4YRoNo0wb
38ZidND30Kq8ldNI7a7nhZU5RUgYqz1NlJpGc0Sqj8jEFaFHdKmjISLTKIkT
eZQeWITWXH2bdWx8Cg08Siq9ZluE/oTtX7fi9RSy2RT6X878InQtYe/muMtT
6Jjskz9DlwoRLtkB/Dsn0XzbO92dWgVI7oe8lVnKBOpjWQQLMXNRaeDrGOeY
CZSuHctLa7qHtJdeqPcPnkCVEZYvBW7fQ4dN6zXvn51AMuZeyVD9HoosO72c
rT+BLiSOtTqevIvGAoq/lQ2Mo3qBFS+8nmWjOhlNt8U7xtENl4mYmgOZ6KSR
ydUvXaMor7LCdcmrBDS9a1Pz+rZRpJC6qZOzPwFF689bde7VKPIP/JsZ+y4e
kbARC/BGUeC+Y+tjPt1EHGWTSYWIUdRB0BSW/ohFWQtN3L3URpFBBTHpPhiF
NCQ3PcYbRtHhh8cLPVyj0Kt588SEVo0iWLHo4YL+SPRPsPFB8txRFB/0Pu5S
83WkM2ncV/VlBJW/vI40K8LQl05j+znhIwgKJDzQdApAnh82FphfGUHBWjsy
TlheQULtojMpXiPI7vx/sHX3ZbT5TUPyZgeq/9/3veMHfZF/tXGrxVbKu/RC
G56fQ5KPN65NVRhBnb89p0zT3VHOI1HP3hUjqCC1q+rQ+TOooaxB4uKcEYRl
v1z8o+uMHEryHarplB+s+rXix1E0XHC9UGRkGNnpfpixCrdHS+8ZG6d9Hka0
bWekO6NMUVHWxpS+t8PI/8KJxXIhO5Behugv5Xoq/r/Wfntg26Uqvk8lN4Q+
4/JNS8hvE83j+0bsdblDaXxXRBg/+xHGt0nYxvmql/n++p+oo68n38KXG+hi
9nxbuhtrbtnCd1jrLXs1hf9vfM2fVzVW8r2UE/JKS4Tvz8mPbfW7/83a6Znq
lYNxfHtKy9T4DA/NOgb1mCDu31kDRquFIv33rJ1bH7vd+ftz1tsTLkuR3t/5
43/4/f7Qwi+zNu5UuF+7un3WW1DSu77AV7NWH7Q+8vFIyazXBwwI4XPF4P85
v6b/rt/BhllXGtapaTxum/WPe+knjA5+mfWt+4pJQ6XfZ11hHzR/U9nPWftI
JrQYi/+edX1js87rxL+zPvNiq+z1BcOzzmzQmX+sdhQ09206lhQVD6SSopM8
Xo+CkleOHwtZCSDsWOeKgI5R4H+i/ofH+QRwduqCYurgKJj3dMszml0i2LG+
WL9dagx8neN9fqN8MvgYtMLH6MQY2PQrr60n9zaQ0pr+uEVoHMAhV3xUPQNc
E9xzVFdyHFSYVxtrnM4AM80JP/YvHQcl0SXy39IzQPdJ1VE3pXGw6LZdZaVw
JihNcBHLtRwHVfSBIz7vM8G+f+07l+WOA7v+r/dXuGeBa3llOQJ7JsC0o6qq
XMBdILt8+81+iwkQWV379in3LsAx+GqL/QRgzfXz2NR3F/z1ee6Q4TUBrpmY
ZXqY3AOWhu9lQMYE2HovraVgUS6Q756O9ByfAH3ZNb6jd/LAs2V657/lTILM
evjj6c18YBdTd7y+eBK4CW4W21GdD8bZxhbFjybBkg06ytf+5APF/gPKl5sn
wfUbvaX6sgUgtuLELxnaFGgdM3y32q8AOB4Ktzc7MAUST5hU6ikUAnpMs+ET
1jR49sF9gbxHEZi+1efwW3QaqD5TFwoNKgLjObSLyxZNg82Lw2+3xBeBoUcK
Dy4oToNWoY4HCpVFoLsvUFzlwDRooi22a2cWg3pt1feZOdPgov6SuSqRxSD+
T6xL0O4ZUACUozrjSkDsVO7VEvMZ0M/L4sZmlYBozuOUL7YzoCI1+5IqtwSE
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
5/t//9eY9f8B1Pj0SQ==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[Mu] (pushing location)\"", TraditionalForm], 
       FormBox["\"Torque\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Epilog -> {
       LineBox[
        NCache[{{
           Rational[1, 2], 0}, {
           Rational[1, 2], 1}}, {{0.5, 0}, {0.5, 1}}]]}, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotLabel -> FormBox["\"Uniform distribution\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"1", "1.1`", "1.2`", "1.3`", "1.4`"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.684541180427577*^9, 3.6845412241660624`*^9}, 
   3.6846344986272697`*^9, 3.684635722521311*^9, 3.684668046624586*^9, 
   3.684670335762723*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sigs", " ", "=", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.1", ",", "0.5", ",", "1", ",", "2", ",", 
       RowBox[{"5", "/", 
        RowBox[{"\[Sqrt]", "3"}]}], ",", "5"}], "}"}], "/", "10"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"TODO", ":", " ", 
    RowBox[{
    "place", " ", "legend", " ", "inside", " ", "the", " ", "plot"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"TorquePivotFreeUni", "[", 
       RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "sigs"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{"sigs", ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", "Bold", ",", "8"}], "}"}]}], ",", 
        RowBox[{"LegendLabel", "\[Rule]", "\"\<\[Sigma]=\>\""}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0.55"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Mu]\>\"", ",", "\"\<Torque\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Uniform distribution\>\""}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", "1"}], "}"}]}], "}"}], "]"}], 
     "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<../abecker/SwarmPublications/JournalTorqueControl/pictures/pdf/\
TorqueUniFree.pdf\>\"", ",", "%"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.683656192718853*^9, 3.68365650959415*^9}, {
   3.684533201990088*^9, 3.684533227629901*^9}, 3.6845336018509903`*^9, {
   3.684538398449457*^9, 3.684538398934102*^9}, {3.684538872647613*^9, 
   3.6845388887736807`*^9}, 3.684539050089514*^9, {3.6845392360343122`*^9, 
   3.68453924661322*^9}, {3.684539278578122*^9, 3.684539281301207*^9}, {
   3.684539347834256*^9, 3.684539370928897*^9}, {3.684539413266988*^9, 
   3.6845394260116*^9}, {3.684541137633313*^9, 3.68454116084551*^9}, 
   3.6846743914643393`*^9, {3.684674425838735*^9, 3.684674489560034*^9}, {
   3.684674521984548*^9, 3.68467453713513*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{InsetBox[
     GraphicsBox[{{{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJxF1nk0VWsfwHGkkkquBpI4CpmyGgyRPEUJmTKEKEM3U5NUpro6unSPt3RP
QqaQ46CbUFdXiZ6TQmgwZbipTilXjrP3wUl1Cnfft2ftZ6+113d91u9Z+3n2
/mtrBh1x2y8jJSUFqfu/GoElw9PT0//x/5dH+CrWVwl2XPoGnfFP2E2C3UGD
AuyAzPy/n/RgXxzVbc2qwBZzNpat98eukQs8HHJ/ivbpp92CB4GTtD9ylyqb
qX2nrf/Gbs6CVxLaRQs54r4zX2k/9G1JgeALbbV8NUbm2wnaO2x8YzuTP9HW
+BbM1LMX015dfoUZKRyjzT9+1ai7dJR2vMkJu1ccbLUJu6D3edje0aL0sTTs
9lgwqZCAXR//qnW7D3YRa2nY3TnY1vbCMzxZbP6cB7lN0yK837nQthefsNNT
qs3G3mKfTfWcZVCDreWux1h3G7t+4aS5eSX2dFrRoe3F2DGXx7v2pWIv8W4i
wlOwq1Ry5CJZ2KIsa0tmPHZY7kVObji2WM4h2Ww/NvOEzJEOf+wM52MWcp7Y
mvcMGBwX7LJV72daOWCbpeUKerdSNlYTrt96AdZLebYfA5Sdok/0yFyHTofm
VytYUH5k2yBnVg17+xpyrxmLIPNI4bPy4zxI3DINfaNHedbT3corWqDqfpVp
h0WUlYav5lR1Q2572/sPCiLI64o8HbmsD66xSm5hzhHBzbu8XaMTXsLzRmKD
Q5MkrGxVC07S5sP3qdU+WztIKGLpZxgOv4eSA7racU0kjPgnsMNFdRAqbssS
VdSSsIC7XU7e4R9o+Tnut2UlJJTaoh5oU/oRurUJ3HbmknCN+oLE+u5hGHrN
T/23iyRk+JYX9MqOwPgzTz/WnqX2+/ztr6R1Qpjua3V77CQJ28Y/Nzb7E7DM
uIKpe5R6Pmr9fIbj3mAS8lB7B9nKab7UelQCSg80u5KQjyqbFVk+vY06f+aP
qkYOxJpsJKEiqq1Wg+JVbRJuRvWbNOnvVqWMGtldXDJPkXpf1DwWyypGQkA2
6sTIjoMuzwnIR53XWGuW9IiAUqgr8lfPuHeXgAxU550LsnWKCOiKWnK7o2ky
hoAFqN7xPivLVlBz1Lm8DY+yVQgogj96X1plf7ICAStRtZO6i4MlQshAHTvn
rq/ZIYR81PNZTmszEoSQicqr2gKY/BFYgKor0PP1yBNARdQDzq5J7waGYADq
7mMum0xNB6Er6iU45Ar/GoAsVCDTu8tI+i00Rg3vrY/gjvfDGFTLrASVmpge
uBk19NXoSx/lDngQ1YVveOOxVgt0RDWFOT3Diffpmov27Hu9rwhaoBr8Ssrz
TnCAIWpFE3HttDcEt1Dr7Fs2WNQ3gxpUwR+FYc7eHUCMeuWGUY74dg8oQq0N
PLt4TXU/4KHGLcp64aL0FhxHfdLWtbUjewA8Rj3aaqbz+5JBEIpa9Hzr4uDH
Q4CNer6sunS2owCwUXUYlpeJXQLAQOVd4iW9CBSAStTxuOYgTrQA8FF3279U
AxwBcEXVG5xiR0kEQBG1UcM29kPpCKhEDbjUEvLkzxHgiiqZ5bLrz/sjQIRq
RHitT+gaAQzU9NowoZqUELBRf/ZJCfTwEoIAVOlLXfYPZxJAlPqjU1eGg0YX
UEaVlEqd0lAlAB9VfN+w/KQRNUcdHE5UMvai5qhPrE1eFpUSgIfa7LRD3HGL
AJWojd6B86XrKKPCwylgTztl1FvZHziLJQRgo1Zwv9XayJKgALWs8qfuowok
qETlNm6Se7aCBGzUwnZ3ze+GlFHz+sMs9M1IwETNHEs/eHYHZdT0yetJVZ7U
etRUufq8d/4kiEC9sLC3WjGcWo96Tp1oszpOnYfVqZJjSgKWnuzwwXgSMNb4
25ZQ3yfRWHVGDouap96e8JwaAfEOtiafc0mwmVX/JvvRMIjz9HPWLqH2Wxar
srbkI4gOiAxxv0m9T5ikMyx5CERE5WVVNJBAZLqns95xEOwrnJgMIajzpHHG
lZ6/BQE35ilnfCGB4nSFdV05Hxj5/aQSJC0CBfYKeovU3gCDkFVr2XNFgLfF
IGHJ5b+B1i/u+0Y0KN8JPu6V2A4Kz7w+MkObctyu+NKTz4AmK+yUqr4IMA/L
axgKm4H6pdPpdsbUXHU8ob2VB3Iz5Qv9zak514U1ePQOUM1LL4+yEgGpl8tt
T6WWg0wO416KDeV1bNeSqEygfO16U5EdZXQpTaraFzphz9v5v5Z8N2yZr6FP
s/2wCTudTnYEduNQwetTmdhRuhmfPIawu0uYK2eyRmn7Xtc/G/lujLZlzuyN
Ddpi2gO/353QSvxEu2rlaYFm/wRtPid6nezyL7Q7dLcxx2O+0tbI3sZ4XCeh
nfGHz1fz799od0Lrvjuek7QPPNg7d3nmFO2g/L6M2ivYu3/xWOHHwbYzdzDP
KcfWumkSsrQBu79g3sPFY9iOzJo4Bcdp2jZ7TWaV78S2sKy86OSFrfuFW3o+
CFs24mK3fCx2nX/outnF2FWbBuqKr2OXLdtrb3sTO7vHPSCpFjvKBVyY0Yl9
aHXNUk4v9s9zTbjWr7HdmvRrEz5i23O52zVJ7M2/Mjp5YmyzwJy9ARJs9H9P
+1+SsCAm
          "]]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1: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
ObWPrGFiI680D88JYvz9KfL/AQq9dsc=
          "]]}, 
        {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1: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
          "]]}, 
        {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJxF13k4VG0fwPGpaLHVq0XePBpRSZKI8OBHKrRYekpKWaKeSNKGFEYkRdYW
su+VJUWlsdxUdpVIltAsZ8aMedqY0c4773WdZ+77n+/1uc657t+5zvnnPmoH
j+88NJ0iXtMolP9XBxaNTk1NIQq5dvmsjP7+Azv4utGKcRF2s2DfQa4A2z0l
a6CjFzvxi2Z76j1sYd6fJfpu2PTZHn5/101KHPbiraDB47fE/AJlpQ0qvyTW
em8zZ+7QD4nz5+cJ+y98l/iZS9tVBN8kVslSoaYwJyQuTQ2XNx7ENr/G/dH/
FtvtcnnPkg7s3FObYrIeYWva+E4UxmCv/1Ld8dAAu1FApTvpYjtxLxZ91cIO
fGd/wZiKTW9kb6iVwba4JZv3/L1I4tfX/BMODWAfjO8JmdmDHRGZ5WzTht3k
p6/QUYnt5J3y0/ce9ojnb578XezZe5uf2Wdhp/6lff9zKraWXWJm4jVsus1E
jF489jYrl7Pdl8XmJaL2SiOkdTLwdWek2PK0wPlXPJBMTvKql2Ficxq/Sn8/
jlom2/tbzogQbcDU7K5XKNpCNzWp8xDbn8rixF5FFutUf942FiH3M6yqt9IZ
yGAp83woX4gYfLa2KKYELf15mLbKVoiio5cHObCq0ZqyDNrJD2MosubcCV96
O2KcztF5e/sL+rrsRVHzg27knZ6Yl+7zGRmsdl3QPtCHnEP3qpcs+4jCTfpH
414PIU3BKpddmQI0HB3fPvyBgR5GdiX7JAtQUsXSuCkRA21UPddBixYg4aWA
L/+dZKD9jh1mpScFqGlN0C1LBSZKeOxHnWktQOnH2s/Y6TDR94gKzuNPo0i+
7r7j4WNM1KZi5r/EchQp5IZkxo0w0VE7h4ssNg9FBijGNrSz0ORW3Ter+3lo
7evsVp8uFkqynqd+5iUPjYW09yv0sxDdorN+1hMeev5CdMKay0Kz9R1+acfx
0I0tmeHBFDYqVHI4FWjEQ9x0c1WePhuxGPYecldH0MbBmu3MG2wUMLS2fPeF
ESQX3DNEpLORzMDcqczAEfTJ+4olO5eN1nW/Sl93cARRLFppnWVsRGu073Pa
MILsGm8N+zaxkepde/scJhelrL+qVCpko32n7M0MDblopOBe6LYdBIrpy/Aw
0uaipPkOE9t3EqjG7J+LJsu4qPzm6g+2ewikOvvyS3MFLrJkJzsbehCImf7U
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
          "]]}, 
        {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1: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
          "]]}, 
        {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJxF2nk0Vd//P3AKlYgGUZkrKSURkfKihEqmCqFIA5VZKUREmpAhlSEKoRRK
MsXLTMZ7D5kyz+695qEIfc97/fw+7h+e67H2Pfucs8/er7PvWkTMbfWuLGNi
YrpK/vkvJWEj7d+/f8i0+Dlzfcejmdklu4TIi01MLbmUbmTeR1+y2auo5sqG
JQeOiVeEJi95Mkbxo4zpkrNWXrSxyF34n6va9RsnM5bc8U3zyP3UJbNdkd/4
OmHJevlcuUTQkunOuZxKFkvmp2/5tIF7yXsL1vJGsy/5SOgKz72sS7ZUnzhz
Ynb+f06LKZ+717PkMpe8q5ztS27R/UYJayLNF1fXvV8SR8Q/HhSvI33qb3SD
gQ4uY4qOTasmfcjncHmPCfI0vFxz9Afpss3bs75dRvEkvzuUQtKx3j20P9dR
y8RZk54xj3nO6qW22Y54Ucb2253UefRIffldt8kJb7JfEWZLIr/PZu8vMu2M
YRk6k8Ix8/jGtf3SsY0e2LdBPELfbx47ll8uU1HzwXtV9fT8i/MolbE16qha
IHY0euUlmsyjmfvaSz5zgXikRyokxGAeuR/fuOr3JQjZ/j5RunaKPL/VZYkB
gefoKw6B3Apkf1bXkihjLzDMK17OlJs8XjvvlbV/BH5VuOM5lzuHUjU6925U
xeDgu028B/jnsG5f6Ir9Hkm4q11jFVfrLN5JbptJ58rE2PUxk033Z7C5623i
QcN8LDQu90P4gz5xOWbWJsXIH8Uv/KpzGpn0kt+V7/uBJ48aO9c+nkLl+IrP
BTaVuMvhNpXiPYWNexJcfzlXIvvb4J3V96YwJV6Pbci7EssWKprKbk3h7ltr
L8yGVaJa1qGDuRen8NBtOd7ckkpU3if4N0FhCut5BVMG+atQVqjzrvvgJDaX
X7pLLaxCob9XPXYen0SJP2Xu3X+rkfHTIjbr6CR28Xt9nGStwYwUy7KTSpOY
s7P+zDxXDepcvc5tIzOJ7X/VeKa21qAH1frNF4FJLPc8fdb9ZA12xd/MUxyf
wEMb+Ijfr2ow7sx9Jq3wCaS832FauJGCDnu9trWHTOBFpeCoo1soqMTurWEX
MIEs6idfoxAFG/BBQNCDCbz39Q3lgzgFV0o8Fm6wnUANps6NWgcpeJ05QNlM
dQJ3G6eLlJlQcE/Saw+HoXGUFsyWehJJQY2cs1xmA+OYNv05WymaguaVnJGn
usex2mljwMg7Cr6iuWWLN41jjrU4j9onCrLsuDDdVjSOoXJ2ASXZFGyOErQ6
GTGOqvufneRppKBPYJTBtpPjeK2dvW6Qk4pv3xj0rVUbx2cfvvnuWEvF78lc
t/4pj+NxAYr/xQ1UHKu6F9QsN45uMydtyzdT0YTdrCpAdBy7fS3e2u6gooyX
8NH5mTF8IyRZvkKZih0330rWJ4whbfLPHlsbKrrL3tJojRnD61cMRMTtqcg/
rWHeE0m2f5bwanWkouHt0ZDx52PY1yYbdNiZilRnmF/jOYbEI0or4UXFAvfW
CvVzY3ifX0hC7xUVYx9tupa5agwVj4pExuRS8cjxoft5LGMYJaNoRssjz78q
P6L03yi5bisC9hSS53tqSfk5NYoluzUPvy+lYohf+oHxzlFUra8rvEWhok/Q
WTaJrFHccO2fz6VOKl6LCIyJuD6KXP6ZvYFMBE6uPPH4wJVRFLXnFfFfRqDH
rWW2hOkoelkx7/RhIfCFluPBlWdHUeajc+S1lQQWMJ2lOsIoqmj/FVrgInDz
Fb5/JzaM4pZtR93OCxL4jkrp6V0ziny+5p4bhQmUUnpc7rFqFC9zrNGrECHQ
V3JSwnp+BPvOrjonvp3AnqD0c6rECEZwBM4nSxAYYqyUNu46goUre99MHSDw
4/5kD3H7EXw/VWx9Q4E8P6ew5oWrI9g2K72i9SCBw8jc/UNnBGW1PkelHiZQ
bVsx99vtIxjIBxaSRwmcZpy00q4ZRrZDUTpGpwjkKPl+4EHRMNZ/Uunz1SJQ
NGrP8uzMYZw6YKeRrU2gli5XmFjsMAqG2Dus1iMwPo0onb8zjCKOrOed9Qk0
dD+39aPoMHbn2Ps+vUDg6jz5ojC+YVSZGl9xw5TAXGa+K4/XDKPCHoFfamYE
bn9QH3d1dgj/RFo9mrhI4PjT07tEiCFMffx7QfgKOV5V0hVcZUPYU5x3oJu0
Idc6q4WcIUxeJlP29iqBGET59Ov9EPK4rxtdb0mOX+ipfS88h1Dgbo5x5XUC
4dduwvv2EIrkVOva3yD75+dwdLQewryFR1HrrAg896b8q865Iaz0+qNywppA
sXh1+dX7hlA0pDDaz5bApgGxphmxIZxp5tfnsSP738XmMsA/hDdEhC6Gkp74
VJRdvHIIBVME3V/YE5j3VQU8OhiYV7eq7rIjgY7Twh029Qy8IZSoWkNaTJ7J
83wlA1OuT3HI3STQLzu34GAGA9mXP4j9Q1p5/vWlnUkMFNQpdzxzi5x/Sm4s
fLEMrHqdEfaRtFGBotrUMwbOHgwY0XUikJNlS3/3AwbeeeIsEEU679jsQ8KV
gQHNq2MGSO/4kfEj2YL0XYk0u9sENrO/uh55nvx+dYZKMml/zdur/U6T/QmP
bKeRnqyRPXUdGFhdqj915g75fNfyDBvKMlCI/1GHN2mj05P+6hIMXG1vvvUz
6TUhtXvlRBgYWNKb00Q6v/4LZRsvAz/zr0tZIH2TL8h+PScDrRz7Z4ScCRQ3
sl+3bDkDC8qvhB8m/StcJ3X0Dx2/iPo9NyDt37r3TPswHQ+5nu+1Jq0ixDVV
1UNHs7p6Pw/Sk2bDId+b6SgsOeP3jHRCdJVcIoWOzo+KesNIG/d8bAgtoaN1
t3xINOk1Yr53Hn2n418l/Yg40gUWNzbd/kLHbeH8f//zrfcnsq4k0LH/99PP
Mf9dH32n8ZlIOqqejcUI0mneRPD1YDpOK3RvDCR9RNC10uMRHZmUJ0U8Sdek
b2V96UZHc4uGDivSJrqVhz850Mn54Hv6DOlB2k2nQgs6Sm/e4HKAtJO3QHKT
CR0j31mf2Uh6uWBJ/4guHS/phXaNkuMVkG4jzKZOR0/hl9tKSQvo8p7jP0TH
P1wWm0NJf6BhoPQ+OpYKryq6SvqAt2W5hhgdR/TcRKRIFwmsXW66hY62cYXS
U+Tz1E3PVLzFTUeNLS2/00i36ZjffMpKR5fPJXYOpGe8UnvTR2g4oLLOvY2c
Lz4CJoLVPTTcdshxnT/pDeksBj1NNMwwiDNSIC1JO1vGXURD+vh9Ni9yPmZ7
LTDtyKThY4fd10VIawjEKxxOoqHH+gTPbHI+m+v8+XDtFQ3vZPJUdpHzf2Tw
Tfc9Pxo65674Z0v6rtdx/hf3aVjbU9H7x4Gsp9/C/AqsaBgQUl49T66ncv7D
dltUaCjz8O2aOnI9GnzrTdgnR8OZF9s6lEj3aPt3qkvQkK/M+co7GwIX7rfr
3eShoal/2NMr5HqWHvSUrRocRN7EtGNfyHqA93fZdLcNYnTxj7TZawRq8tfG
zdQOog9zSpMS6ava2/jEcgfRsHX8UJYFgWFpJbPuQYO4fbuevdtlcj1p28qE
PBzEWyd+34u5RODXAV6rxLuDKBRoc6TYnMDqLddaG64Oouv92q6/ZH1bdn91
npTiIJpMOQXKnifwhpbOg67uAczdsi2u+Qx5vSek6iSaBpBt76BC/mkCg9S5
t96qHsC/Xhfex5D1NUuZkrcicwBHxs9tMdEhcKWMztxu/wH80xN8MvwkgXG8
Oo635Qfw5aYNrXoqBB7cIFWQt2cAM9RbJX4DeT3c3GvZtw7gw3R9/ZdKBE6t
oiRFcA7gbhMjpQpFAlXntGn5Xf0YnhlrxCxHYFeH9kUOv35kLT5WFLeTnK+t
e1PO3u/Hf5zrq1eKE8jezPUv8nY/xr8KSL0qRuC+2pqIfeZku0PE2o1byfdj
sXaj/oF+rFX8vekoP4GCH7S133b24QrBTON6TrJ+OGoflpPrw8htNjGdQ1R8
2vj6ovzuPvygR+ProZP7j8OMBwdF+9DZdO9k1yAVBVc+rlZa04fGPBtafvZS
sTOiwFS9rxdlx9XtA1qpaFkie9/wRS+C3bnPhpVUdNrEX+oy3YPv3bY+ko2n
Yrz7dfpdRg+OeGV/K4qlYmN3Bte9rh78bcl/UieaigeTzhp6VfegZo38O5PX
VJw/8mzwaVwPsnO2CJ4IpqK31TKO1/o92KpZueOOOxWDcUAHv3Vjc+vpAGE9
KkbeZeIcTOxGrjbhlHktKiYo8P1Y97Ybo6O4g+tPUjE3VV3l6tNu7L1qGO16
jIoD8XH7OM26sYP1cV+QPBWVAi6vM17VjR8e2LBOC1Bx0Kyjdtq4Cx/5nnjt
30vBSYE/z4R1uzAyw1akp5OCC81cmifUunB9XLqlbBsFN5yFotdSXbi5OFm5
op7cfx6P/KrK2oUR61U2FpVS8Pk+k5CgpE68Od5vQEugICxr1Jdk7kTrdDXZ
VZYU7NtxYYD7dwfqNa+qEbxMQf9TPc4TjA5Mf/ApXcqMgm2vRiMyGjtw/taL
W8cNKei+d1X3kZQO9Pg+HKOlQcHvJgdtDUw70LAzozx+BwVv2ihwMbu2Y+4G
C89dpTV4vbHA7t1ECzqlekdkvqlG69qLhZmtLThbrtRx6EU12lUzbawubcHn
nsF30p9W4+0ipezp8BbkqOSID3KqRu+ULFYN1RZcWa/0t+NkNUY++hJGe/4L
JXLfeLROVmGtfHTRXrlmFGs3/ndWuQoPhXryZd1pQNql5ErVnAq0bB37dY6X
wJ0NfHDGrAxTbVtY1ZYT2PHS2b5crwwXmEv3So+Q80Zg/rzCsTJ8LhbhxU7u
E1VvW11h3lWGebZqEtlO5L73CmPPwYlS5FsW7sJPjrOPhP07Le9SDDj1SDp3
Zw0WmPpLLn9bgmIO531eMNeg03f1dwFBJfj9hXSzTVM1rmzbWr/RuwQH2ls8
hR5XY6Wt6lVOixJUdthH9RiowroqMeWY3SU4+qLZ9mh8JbY52jXbfytG7Y7d
n8q2lWODBe/7sKIi1Ly8wwxmfiBTNwfLZGoRnhgQWf+t6gd27DcjVGOKUHV0
o3OM0w8sMBH+UelZhPJMzMfcy8qQM4dNyEmpCEWFf7bIWJViId6wkvxWiEKx
Nc8+KJfiqTil+YXYQuQXLz8iwlOKvpdsmUuDC5FXChPW5JbgXnPapcP2hcih
/P7mIFcJ/rFVCyyUKMQpUzeOKPI6Pla98JONKsDx7tvI86gIQ4TUz7j5FeCo
hYODr0kRymmc9f/uWoA0W4tGZ9YifCHw1ETEsADb7unGnjEoxM5Gk4ve3AX4
a7mmQQXZr3PH34KHC/nY+FCN/QhTIZbl/nl5n5GPtc8U7fa+L8An/1ZHXCjL
x7Ko7YfY/+ZjcOArjpR7+Vi8VXjEoyYfW7TEVtla52NB/Obo3zH5+KtrrfN2
43zMk+A5a3MnHwNPGZvUauRjTjLXyl7NfPzrvyz1jlw+ZsmwZxuL5GPG/890
FhtiKu9/mab4T/h4eR5+W8wvOFOLkXmYspjJRyd95BxJL+bH0mGFT+p5mLiY
p6JKQbYTUWcx5TC8geadi/KLuZmDZTBSJhf5FnPe0GpWrysHFxazaPyQQDbk
YN5inhZrM386m406i2nnJzwsYZf5v3xv/I7F2vgrJiymwuj5S22XYlF5MSW8
RtjzbsXA/sU0UVy/8pNoLJgtpu+EHGtYzVIOX3L/57gzDkYX84sq5+SO1gRI
WUx5NonWZ6pJoLyY0aqpDcmPv8KbxcwSPqYv1vEVMhazdq6+LkIuDaoXkyVt
lvq4Ow0Wvv6/vLL9SOWlw+lwfTHF2ah5vGOZsGsxlbvMwV896395LncyhyUy
C4wW84kTX/bYiWzwWUxGn2laRex3GF7M5NLh9/cMEb4sZtsFTre97xG6FnPN
tIRO+wwC92LKBe13jTqVB/KLWd1aePn3rTygLuaVnae1tCOXcu5m14H4kjz4
u5jP8+xF/g0v5W4O5tUGvPmwZzELDQImkyAf9iVc2NsrlQ9GMUJtbJb5kBBP
GRtUyYfx4aTSCwH5IHOr06RfLx+eHFT6/C0jH6jcgXatl/JB1KcqbE1nPni6
tO+uvJkPugIM69x9BSCQYRgV/CIfBixdDTYaFcAKX6+zVvH54PGVXcXmfgGw
SJ76epjsJ+Xkzg2CtQVwsOX7jfKmfFjjcjXL7WYhPO7kLHjKXwDl9R1sh9OL
4PszJ46kNwVgLmo3+ry9CJpU/TXXfi6AGet/TYwVxbCqTFXWOr8AxFkFP0UY
FkO0vD8TV1cBPJQxPj03UwzfC4LcZ0ULQTXgZ1T2oVLwcjHns48phJzj5fIH
C36A/R3+wpbIIhiW3V84MfQD5K3upLxJLgJB0chTnzaVw31f2QXjvCJwn7U3
F7Yvhzi92qyMziJQTtzkyyZcAWJTERns24qhiONaO+FWCeuCLUu444uhvGaF
zw2FGvCV7tz1Lq4E6B+ir2kZEsDNZMg78rQMXn+SDJ9Ma4ANPis/2HZUgA0H
3+OZHw0Ql8AX0EGvAKUbzLcXWhtgmfYGxRO/K6BNvE5vJVsjCO6obl+xphKE
Y53Z+fUboYdF8/JuxUqIDStyPjrdCPFOduc2P6+Ejw+NDIPkmmGFjMnkY+Uq
+H7Rh0cqvQX2cCEj3asamrhba3srW6Dzi8nCTv9qmEaZoPCuFgj8vupZ8Ktq
kBLsXLNiTSt0MwftOfWpGmKaFVe2XW4F3TPGpkb11fDk9Njs03VtYMhHDWkR
qwHDYyYd/dbtsFbguJZHfg3cmvwS+dqrHeQ8alW6ymsgKGbV+dOh7WB43Pqr
Yl0NVDKnN+UWtYM/Z83Gn301INz+aLCcswM6k7YPUFgpEBze3fX2cgck+q9/
St1JAZcNoT+113VCiG+aU7QNBW4s12+35++EULPjSd4OFDAZXzcYLNYJu0XM
9l1yogBQfOcaDnbCgsXGzTzuFGDx9dhqdqkTTnPE3dL0o4D/ckt7u6+dgMm6
Z1clUiBmXI4zUL8LIi82f8vupsDzzomNqWZd4FxacWFHPwV8KCnCP693Qfcm
Zb1nNApYJu3av+leF1zy/rzlzBgFJK8LGr+N74L1dunynxcokNHJ+v7zny7Y
H60dnslHhUpKnSoR1g337D8vW36CCt9MjOTzY7vBymmH4qAmFd4OtEukJHWD
koBgT4U2FZyY6Ov8C7rBX8fvoc9ZKghLMXcep3VD5ynHDVQzKtx6tsctX6EH
zsScVyP3DSCo5ZOW0tgDVpmJ7D1RVFjZvPp9VFcPdM7KnjaMpsLElcAIf0YP
KLYpc/yIpUKZW4SXFVMvRDxprIl6TwXHT190xcV7gduF67VoKtnO0T4UdbsX
ilPDtd2KqWBfcUDs2cY+uBi0h+dhPxXu/5vw1BfpA40usVVpg1QIkklpFdjd
B+wPuyva6FT4Gi4e8lGlD4Rr4nK2j1Lhz41NLOVWfRB07qye5x8quHP87WQp
7AM/Az1l25UEPFNOP1xZ1Qc7pjyEjdgJeHPTMTS4sQ8i+h1qlDkIyG+h64gO
9wFvxZtQZm4CWD61IGzqh9O+29p1eAl4cir3tYttP3T9rpAU205AuKfLjIpL
P+zt3vu3SoyAj2lyZ1c96Af9rQYv7MUJqBJI5ngV1g9y0SPyHyXIdTkc5ZpW
3A+HwjT2juwj4KW/57nRLQNw0TGsI/EwAQkFh9PSxQbA9KNMKDcQkDE9w31v
3wAoHAwQtlcmoPmCQxmn+gDcOxMcvv0oAYJ7Lx2QcBgAba/8IyYaBMTWqPJc
LRuAleU5Z5n0COALDwq/SQzADQP1tDWnCXh6tUPEq2UAlos/tdl0hgCHeVfJ
N6MDQAlSGd6qT4CKRKp6M98gdPhfE+U0IuDrNFP1gOgg9MsWay+QFi/QOvN7
9yBsFf5VTzcm7+cczWyDyiDI58qOZ58noM1HxEXr2iA0Csedl7pIgJ6eLdN5
x0Hw6qw1ZDEnoFggx+eG2yCY92Z/qiP98ath8KPAQcBvWZevXybAtevZx4LM
QRi557jiugUBw59apamFg6Bk5EgRtiTA3Fkis71qEApu75moJX2Cu7R4rnMQ
rt6lHNt7nbxfpYU2OXYabP9IFcqyIsB3leaVYxtosOlNzLfT1gT8qwulnxak
gXLD3vhB0n03ZP/YSdPIenU7hN2WAKMDXu73DtFgnEs6OIR09TIqi78aDein
42n8dgSkhVqtTTSiwd13eXHC9uR4XMl6mXmZButTL69+TTpCaqVgmQ0N2pYX
/uBxIMC7NGZX732y3Tbp9Bxpvanmo0KJNBi7oRzx+iYBJXni5XvSaLA7+Fv1
HGkFXyedQ0iDiPk+I8NbBAhvXXf+XC0N+CKcPFicCHg+bNpt0UreH+XnprOk
V2Z9uubUT4Or6iMc0aRHdI47Bf+lgc8/HaZ9t8nx4n8595aVDleUQ5kcSdf3
99xP4aKDc1G40WfSJ1KlV+EmOuQ9NVzDIJ3r7vGsaisdDr+o2bL1DgHSJ6p5
WvbQYbibyUuf9Dse/gjaATrU3mQc9SHN13lNdEaFDkMaQRe+kPb9mJ6wQpMO
imbjRDNpMeFDL4f16WB/wsV/mTMBecF5D35epIMy1zomMdJGK47d/G5Fhw9J
mTuOkZ5w+WEec5sOSeL2rGakfYdP6T65TwdNN/lQJ9Ji5Jyx96PDg49c3Y/+
6++nvqThKzoYfJvuevFff8d/8UMMHYrChl69IT353XS1WBIdKs5NssSR9pfq
meHIpIPVBPuOeNLisZYDE4V0iLfY9y+GdAHvUH1zNR3ufrPwiyBt8tS+OL+J
Doz2T9QA0tMLU6kJPXSY6l5e6UE6wMEl+tkIHUILrt21Ir2zbyHAaZYODa7t
Xaf/6++c173zrAxI5rryT+6//qpW2KhyM0DUfZbK819/yr4mElsYIFkaZTRK
jlfAV+6T68QY8JN2JrSE9C7xEIUZKQbwDG7yf0W6KHyTeIciA0bzh+Wvkv5z
X5Q1SZcBt5aXpUySzy9oOm7iuQkDBK0q3dJI774u0eVqwYCLyR1MDqRNdffj
cTcGpBfL72wj58ufooxPUo8Y8OPV3Wo/0kHyhyN4g8n+1Cg7FUiXCKk59yYw
IGJf/DIvcj6aBZdbVKYygNd2l4cI6Vk2bf3UXAZIPMxJzSbnr+SwgYxnHQO2
qq8/3O1IQNnFFhHLdgasGPkZZEfa/KcZtzaNAd72CZEz5HoI+X5tiJ9pCLTY
3BoXyPUjKTX8a/nqIQjlu8fmSrosxqGcxjMEHqyBtHFy/c09cY3PkBiCzbY9
dT/J9Xn5nN/FMwZD8NjzuLQluZ4XKtfqKJoPQZxlOXcBuf5fKb9QErUeggu7
jN/xkq7YEbVl9P4QhB/+OJpG1gvp6ZSfT5OGQDuGgxvJesMcXHe8kHUYom6U
2C8n69fCa5r5GNcw9NvKmIqbkfebwHRXaPMwSFpoPjtuSs6v3N1JrpLDkC15
P92DrH99NO91+w2GoVJkfkfBOQIqj8j+ik0YhuqXUo8DdQn4cerkJPFlGFZX
mrx10SHH1/AiJ3POMGhM7J8z1SYAbfzgPHUYcPOgs9ApAr6E9cbwzA7Duyqz
EHuyvr8aD7HyOTkCeoV+muZK5PjNJz74enYEHuxwfsZFvj+CVhZEdpmOQLo7
N0+mIlnvBYcpSjdHgI/t6ACTAgHuJ9Rkf0eMQN2d9KRLMgRcip6etxgegd3D
rdm3dhDA+z6xNFZjFEz4RBoqyPfhuvnNx6NPjcLxXvFb7KsJ4NB9Uh6lNwoy
VDbXY6sIWDZjWRVmMgqzrMdyU1jJeq0hVhtgNwrnu8tFTRaoUDLwpu3uq1Fw
sJ67xDZC7jfEX0ydGRiFhtzpkoQq8n1/l/W23tAoaN0oML1ZQQUrys0/2uOj
kC932ezQDyqY3zn998TcKETs2hWaX0QFrTJuZhXuMdjhgwNvsqkgZvmUY4/8
GDzh4GZKTaBCfbzHVtZHY+Crr8G13YMKPdqrm2z8xuCwUQLjqBsVxn+H+DcG
jYFk/eVnF1yosEYjcSbx9RjUyU1se3iTCmoDP2v0UsdgT/iVgHeWVEgXl7j7
pm0MOEffWPLqUOHV+591irLj4F9uL1izhQpxumZP3h0chwv1ZvFXyf3X1xka
cCmPg53Rx6mZDVSgHGdK7DoxDvoVhl3r11BhFW2X52OzcZDUWTG3gYkKLrs8
9jQ8HYc1fVlSmuR+0Dhxl49D1zg8O3I3yj+OApuFFij3+schVEBod1c0BZqD
qFv8GOOwVunbKukoChi53PkcPz0Omtr56SUvKeS+t6SlhX0CJr6caC98RIEz
/Rdl1GUmYM59lwnndQpobg3t2OJNeqcgZyu53z0UvkKxePskWL9MfNl2qAbW
XJrOVJKYhJgXn1gGpWugc1evfIbUJGyOKC+nideAT1aBXKLiJDRmnjWv21AD
1CY36UDdSfBSTskFRjVc5Zvced5tEiJdnHbfDq2GgJAOvqm6SWh/q95iOVQF
3c8yp7d5T8GL73O+Bq6VIB3nS/N+PAUFhya77Wwr4f5307Ye/ylgmmDr8bxE
/v4YZC2JDZ2CbGb39icnK+HCEb2QbclTsDnhS6H8lkponKTJbGueggA+ORWW
zAqoPMdvv1VqGk49esdtNFwOX7feo4u0TAN7jBgzs/IP6Ii5Lc0i8AcE+6cE
xguLgRA/5jFxZwayDNwfuDrng1DYMeGynFnwac365j6TCS8+nJtRmPsLRp9H
nKTVUoCu1TQZxTwHR/Y/rBHenALKE4ajrCvm4K56/Pu5X8lAUzTsp66dg5aA
jRWcEsmgVKX/89qOOTDUpStFlH6C3pHTn0P15uDyY2vatdkPsF9W69pMwhzY
/azTKVN7B4+bqi6bJs0B45/SXjtaLLS5nTIrTp2DgOXrLab9YuFRiaZBYO4c
qL740/W6LgZaDE4e21lHHj+YufqcWTR4u2iInPs3Bx5+u44wdUdCLR5pyjg7
D6NZ57+JTgVB897V1wuMSG8/njSpHAQdUbWzFabzwK2jxeHrGwiMe5f526/N
A1Pnu1n2rQHApuxjyuo+Dx709SrBYU+AI0VrdI3XPOSl+AT5ST6G9cK8nnyP
yPaJ3SnrCh6CMFNCtEQQefzEep2cfm9QyPvRqxv33/dfqoobu4OyVJCTceI8
KPOlffjh6gpqb4xWXEkhfVfhvUf4HdDzoIvfySKPP3Dbdm+jAxiOpmZ6Imn+
izZaNFswNbt74mkReb68t5LXRK+DlTKnVWQ12d61yUt583lwSPk5F19LesZG
3PmeLjgLR/p9biQ9eS9H2PsAeARcFcxuJb348WHam1zUtWRfu99Q3b/koA6k
NDCWHJWnM06bXnKc1Cavyb9L/vimc/0C08L/nOHhILt29ZIJ5ed3DggtmTW/
YcFLfck38i+sFni1ZPOophffXy/ZyO2MqEnMkjUUTiiEJy1522dZi03FS255
w1HIM75kTY8slzWa//7noxdk2ZJ0l3zwUErgKYMli/95l+BrvmQWu8B6ducl
55haSq+IW/LXw905cYlL/rjlwnG1z0sOazht9uD7kp20yZ/ItUu23pO1KaZx
yZdXy7470rZkvdJd3z0Hl3z83Tt1kZElK3sJ1+ZNLvnAxfALZrNLXvx/sv/5
/wC/8L0S
          "]]}}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"\[Mu]\"", TraditionalForm], 
        FormBox["\"Torque\"", TraditionalForm]},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Epilog->{
        LineBox[
         NCache[{{
            Rational[1, 2], 0}, {
            Rational[1, 2], 1}}, {{0.5, 0}, {0.5, 1}}]]},
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
      PlotLabel->None,
      PlotRange->{All, All},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], Scaled[{0.5, 0.5}], Center, 
     Scaled[{1, 1}]], InsetBox[
     TemplateBox[{
      "0.010000000000000002`","0.05`",FractionBox["1", "10"],FractionBox[
       "1", "5"],FractionBox["1", 
        RowBox[{"2", " ", 
          SqrtBox["3"]}]],FractionBox["1", "2"]},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox["\"\[Sigma]=\"", {
                 GrayLevel[0], FontWeight -> Bold, FontSize -> 8, FontFamily -> 
                 "Arial"}, Background -> Automatic, StripOnInput -> False]}, {
              
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #6}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontWeight -> Bold, FontSize -> 8, FontFamily -> 
          "Arial"}, Background -> Automatic, StripOnInput -> False], 
        TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, 
                    Frame -> True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold", ",", "8"}], "}"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"\[Sigma]=\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{1, 0.55}], ImageScaled[{0, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->False,
   AxesLabel->{
     FormBox["\"\[Mu]\"", TraditionalForm], 
     FormBox["\"Torque\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->False,
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   ImagePadding->All,
   Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
   PlotLabel->FormBox["\"Uniform distribution\"", TraditionalForm],
   PlotRange->Automatic,
   PlotRangeClipping->False,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
+1+SsCAm
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
ObWPrGFiI680D88JYvz9KfL/AQq9dsc=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1:eJxF13k4VG0fwPGpaLHVq0XePBpRSZKI8OBHKrRYekpKWaKeSNKGFEYkRdYW
su+VJUWlsdxUdpVIltAsZ8aMedqY0c4773WdZ+77n+/1uc657t+5zvnnPmoH
j+88NJ0iXtMolP9XBxaNTk1NIQq5dvmsjP7+Azv4utGKcRF2s2DfQa4A2z0l
a6CjFzvxi2Z76j1sYd6fJfpu2PTZHn5/101KHPbiraDB47fE/AJlpQ0qvyTW
em8zZ+7QD4nz5+cJ+y98l/iZS9tVBN8kVslSoaYwJyQuTQ2XNx7ENr/G/dH/
FtvtcnnPkg7s3FObYrIeYWva+E4UxmCv/1Ld8dAAu1FApTvpYjtxLxZ91cIO
fGd/wZiKTW9kb6iVwba4JZv3/L1I4tfX/BMODWAfjO8JmdmDHRGZ5WzTht3k
p6/QUYnt5J3y0/ce9ojnb578XezZe5uf2Wdhp/6lff9zKraWXWJm4jVsus1E
jF489jYrl7Pdl8XmJaL2SiOkdTLwdWek2PK0wPlXPJBMTvKql2Ficxq/Sn8/
jlom2/tbzogQbcDU7K5XKNpCNzWp8xDbn8rixF5FFutUf942FiH3M6yqt9IZ
yGAp83woX4gYfLa2KKYELf15mLbKVoiio5cHObCq0ZqyDNrJD2MosubcCV96
O2KcztF5e/sL+rrsRVHzg27knZ6Yl+7zGRmsdl3QPtCHnEP3qpcs+4jCTfpH
414PIU3BKpddmQI0HB3fPvyBgR5GdiX7JAtQUsXSuCkRA21UPddBixYg4aWA
L/+dZKD9jh1mpScFqGlN0C1LBSZKeOxHnWktQOnH2s/Y6TDR94gKzuNPo0i+
7r7j4WNM1KZi5r/EchQp5IZkxo0w0VE7h4ssNg9FBijGNrSz0ORW3Ter+3lo
7evsVp8uFkqynqd+5iUPjYW09yv0sxDdorN+1hMeev5CdMKay0Kz9R1+acfx
0I0tmeHBFDYqVHI4FWjEQ9x0c1WePhuxGPYecldH0MbBmu3MG2wUMLS2fPeF
ESQX3DNEpLORzMDcqczAEfTJ+4olO5eN1nW/Sl93cARRLFppnWVsRGu073Pa
MILsGm8N+zaxkepde/scJhelrL+qVCpko32n7M0MDblopOBe6LYdBIrpy/Aw
0uaipPkOE9t3EqjG7J+LJsu4qPzm6g+2ewikOvvyS3MFLrJkJzsbehCImf7U
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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
/wC/8L0S
         "]]}}}, {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {"\[Mu]", "Torque"}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, Epilog -> {
        Line[{{
           Rational[1, 2], 0}, {
           Rational[1, 2], 1}}]}, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
      PlotLabel -> "Uniform distribution", PlotRange -> {All, All}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]]}, {0.010000000000000002`, 0.05, 
        Rational[1, 10], 
        Rational[1, 5], Rational[1, 2] 3^Rational[-1, 2], 
        Rational[1, 2]}, LabelStyle -> {
         GrayLevel[0], Bold, 8}, LegendLabel -> "\[Sigma]=", LegendLayout -> 
       "Column"]], {1, 0.55}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.6845411384377728`*^9, 3.684541161355607*^9}, 
   3.684634498736293*^9, 3.684635722626712*^9, 3.6846680467359457`*^9, 
   3.6846703388968477`*^9, 3.684674397238345*^9, {3.684674428141814*^9, 
   3.6846744939879932`*^9}, 3.684674541001401*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"TorquePivotFreeUni", "[", 
   RowBox[{"\[Mu]_", ",", "\[Sigma]_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"lowlim", " ", "=", 
       RowBox[{"Max", "[", 
        RowBox[{
         RowBox[{"-", "1"}], ",", 
         RowBox[{"\[Mu]", "-", 
          RowBox[{
           SqrtBox["3"], " ", "\[Sigma]"}]}]}], "]"}]}], ",", 
      RowBox[{"uplim", " ", "=", "  ", 
       RowBox[{"Min", "[", 
        RowBox[{"1", ",", 
         RowBox[{"\[Mu]", "+", 
          RowBox[{
           SqrtBox["3"], " ", "\[Sigma]"}]}]}], "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"uplim", ">", "lowlim"}], ",", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         SuperscriptBox["lowlim", "2"], 
         RowBox[{"4", " ", 
          SqrtBox["3"], " ", "\[Sigma]"}]]}], "+", 
       FractionBox[
        SuperscriptBox["uplim", "2"], 
        RowBox[{"4", " ", 
         SqrtBox["3"], " ", "\[Sigma]"}]]}], ",", "0"}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.684538961696658*^9, 3.684539033841741*^9}, {
   3.68453908776854*^9, 3.6845390935628242`*^9}, 3.684539169612364*^9, {
   3.684540437551422*^9, 3.68454045745277*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"bestPushFreeNorm", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ans", "=", 
        RowBox[{"FindMaximum", "[", 
         RowBox[{
          RowBox[{
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"-", 
                  FractionBox[
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], 
                   RowBox[{"2", " ", 
                    SuperscriptBox["\[Sigma]", "2"]}]]}]]}], "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"-", 
                 FractionBox[
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Mu]"}], ")"}], "2"], 
                  RowBox[{"2", " ", 
                   SuperscriptBox["\[Sigma]", "2"]}]]}]]}], ")"}], " ", 
             "\[Sigma]"}], 
            SqrtBox[
             RowBox[{"2", " ", "\[Pi]"}]]], "+", 
           RowBox[{
            FractionBox["1", "2"], " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Erf", "[", 
               FractionBox[
                RowBox[{"1", "-", "\[Mu]"}], 
                RowBox[{
                 SqrtBox["2"], " ", "\[Sigma]"}]], "]"}], "+", 
              RowBox[{"Erf", "[", 
               FractionBox[
                RowBox[{"1", "+", "\[Mu]"}], 
                RowBox[{
                 SqrtBox["2"], " ", "\[Sigma]"}]], "]"}]}], ")"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Mu]", ",", "1"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", 
         RowBox[{"First", "@", "ans"}], ",", 
         RowBox[{"ans", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
        "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "0.01", ",", "2", ",", "0.01"}], "}"}]}], 
     "]"}]}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.684540302969158*^9, 3.684540310153585*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634498857087*^9, 3.684635722743629*^9, 
  3.684668046842411*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634498857087*^9, 3.684635722743629*^9, 
  3.684668046918515*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "sdprec"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Line search unable to find a sufficient increase in the \
function value with \[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digit \
precision. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/FindMaximum\\\", \
ButtonNote -> \\\"FindMaximum::sdprec\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634498857087*^9, 3.684635722743629*^9, 
  3.68466804701525*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634498857087*^9, 3.684635722743629*^9, 
  3.684668047173991*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(FindMaximum :: lstol\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634498857087*^9, 3.684635722743629*^9, 
  3.6846680472127123`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.43128600000000000269650968220958020538`5.655365273995877", ",", "Null"}],
   "}"}]], "Output",
 CellChangeTimes->{3.6845403113243923`*^9, 3.684634499216339*^9, 
  3.684635723100963*^9, 3.6846680472643347`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"bestPushFreeTri", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ans", "=", 
        RowBox[{"FindMaximum", "[", 
         RowBox[{
          RowBox[{"TorquePivotTriFree", "[", 
           RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Mu]", ",", 
            RowBox[{"Max", "[", 
             RowBox[{"1", ",", 
              RowBox[{
               RowBox[{
                SqrtBox["6"], "/", "2"}], "\[Sigma]"}]}], "]"}]}], "}"}]}], 
         "]"}]}], ";", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", 
         RowBox[{"First", "@", "ans"}], ",", 
         RowBox[{"ans", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
        "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "0.01", ",", "2", ",", "0.01"}], "}"}]}], 
     "]"}]}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.676466416448494*^9, 3.676466470673649*^9}, {
   3.6764665929400253`*^9, 3.6764667320443153`*^9}, {3.6764667913415413`*^9, 
   3.676466813481152*^9}, {3.6764670024882803`*^9, 3.676467011715851*^9}, {
   3.676468270631659*^9, 3.6764682776512947`*^9}, {3.684533837881112*^9, 
   3.6845338508256598`*^9}, {3.684540245279271*^9, 3.684540256086082*^9}, {
   3.684540289572055*^9, 3.68454029856402*^9}, 3.684540367414665*^9, {
   3.684541591262807*^9, 3.684541606783594*^9}, {3.684541640840365*^9, 
   3.684541686358395*^9}, {3.684541752098618*^9, 3.6845417951403437`*^9}, {
   3.684541849077037*^9, 3.684541877464965*^9}, 3.684542026268549*^9, {
   3.684542820490223*^9, 3.684542852974832*^9}, 3.6845435407925043`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499279896*^9, 3.684635723168494*^9, 
  3.684668047331626*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499279896*^9, 3.684635723168494*^9, 
  3.6846680473818808`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "sdprec"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Line search unable to find a sufficient increase in the \
function value with \[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digit \
precision. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/FindMaximum\\\", \
ButtonNote -> \\\"FindMaximum::sdprec\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499279896*^9, 3.684635723168494*^9, 
  3.684668047443079*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499279896*^9, 3.684635723168494*^9, 
  3.684668047495852*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(FindMaximum :: lstol\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499279896*^9, 3.684635723168494*^9, 
  3.684668047526177*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "fmgz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered a gradient that is effectively zero. The \
result returned may not be a maximum; it may be a minimum or a saddle point. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FindMaximum/fmgz\\\", \
ButtonNote -> \\\"FindMaximum::fmgz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499279896*^9, 3.684635723168494*^9, 
  3.684668047608245*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "fmgz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered a gradient that is effectively zero. The \
result returned may not be a maximum; it may be a minimum or a saddle point. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FindMaximum/fmgz\\\", \
ButtonNote -> \\\"FindMaximum::fmgz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499279896*^9, 3.684635723168494*^9, 
  3.68466804762707*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "fmgz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered a gradient that is effectively zero. The \
result returned may not be a maximum; it may be a minimum or a saddle point. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FindMaximum/fmgz\\\", \
ButtonNote -> \\\"FindMaximum::fmgz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499279896*^9, 3.684635723168494*^9, 
  3.684668047660383*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(FindMaximum :: fmgz\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499279896*^9, 3.684635723168494*^9, 
  3.684668047665254*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.48574899999999998634336861869087442756`5.707011828480566", ",", "Null"}],
   "}"}]], "Output",
 CellChangeTimes->{
  3.684540334625102*^9, 3.684540369361082*^9, {3.684541593635766*^9, 
   3.684541608197021*^9}, {3.684541642372292*^9, 3.684541657004161*^9}, 
   3.684541687640533*^9, 3.684541769109294*^9, 3.684541812340002*^9, {
   3.684541853702668*^9, 3.684541881268992*^9}, 3.684542027637506*^9, {
   3.684542834015074*^9, 3.684542854457673*^9}, 3.6845435463866653`*^9, 
   3.684634499714438*^9, 3.6846357236951437`*^9, 3.684668047759831*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"bestPushFreeTriBottom", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ans", "=", 
        RowBox[{"FindMaximum", "[", 
         RowBox[{
          RowBox[{"TorquePivotTriFree", "[", 
           RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Mu]", ",", "1"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", 
         RowBox[{"First", "@", "ans"}], ",", 
         RowBox[{"ans", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
        "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "0.01", ",", "2", ",", "0.01"}], "}"}]}], 
     "]"}]}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.684542894304944*^9, 3.684542899036315*^9}, 
   3.684543543966049*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499937738*^9, 3.684635723891653*^9, 
  3.684668048101269*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499937738*^9, 3.684635723891653*^9, 
  3.684668048111912*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "sdprec"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Line search unable to find a sufficient increase in the \
function value with \[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digit \
precision. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/FindMaximum\\\", \
ButtonNote -> \\\"FindMaximum::sdprec\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499937738*^9, 3.684635723891653*^9, 
  3.684668048162477*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499937738*^9, 3.684635723891653*^9, 
  3.6846680482133007`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(FindMaximum :: lstol\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499937738*^9, 3.684635723891653*^9, 
  3.6846680482224483`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "fmgz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered a gradient that is effectively zero. The \
result returned may not be a maximum; it may be a minimum or a saddle point. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FindMaximum/fmgz\\\", \
ButtonNote -> \\\"FindMaximum::fmgz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499937738*^9, 3.684635723891653*^9, 
  3.684668048355225*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "fmgz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered a gradient that is effectively zero. The \
result returned may not be a maximum; it may be a minimum or a saddle point. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FindMaximum/fmgz\\\", \
ButtonNote -> \\\"FindMaximum::fmgz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499937738*^9, 3.684635723891653*^9, 
  3.68466804841214*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "fmgz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered a gradient that is effectively zero. The \
result returned may not be a maximum; it may be a minimum or a saddle point. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FindMaximum/fmgz\\\", \
ButtonNote -> \\\"FindMaximum::fmgz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499937738*^9, 3.684635723891653*^9, 
  3.684668048423682*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(FindMaximum :: fmgz\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499937738*^9, 3.684635723891653*^9, 
  3.684668048478977*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.61149600000000003952038696297677233815`5.806993533795659", ",", "Null"}],
   "}"}]], "Output",
 CellChangeTimes->{3.6845428997410173`*^9, 3.684543548713526*^9, 
  3.684634500377095*^9, 3.684635724313336*^9, 3.684668048581306*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"bestPushFreeUni", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ans", "=", 
        RowBox[{"FindMaximum", "[", 
         RowBox[{
          RowBox[{"TorquePivotFreeUni", "[", 
           RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Mu]", ",", 
            RowBox[{"1", "+", 
             RowBox[{
              RowBox[{
               SqrtBox["3"], "/", "2"}], "\[Sigma]"}]}]}], "}"}]}], "]"}]}], 
       ";", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", 
         RowBox[{"First", "@", "ans"}], ",", 
         RowBox[{"ans", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
        "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "0.01", ",", "2", ",", "0.01"}], "}"}]}], 
     "]"}]}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.684540465185493*^9, 3.684540465468801*^9}, {
   3.684540516819571*^9, 3.684540517184272*^9}, 3.684540977979784*^9, 
   3.684541012876995*^9, {3.6845412684218693`*^9, 3.684541268771349*^9}, {
   3.684541310836534*^9, 3.684541326926167*^9}, {3.684541558220834*^9, 
   3.6845415595286617`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634500440503*^9, 3.684635724384885*^9, 
  3.6846680486559772`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634500440503*^9, 3.684635724384885*^9, 
  3.684668048713183*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634500440503*^9, 3.684635724384885*^9, 
  3.6846680487806787`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(FindMaximum :: lstol\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634500440503*^9, 3.684635724384885*^9, 
  3.6846680488010178`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "fmdig"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Working precision \[NoBreak]\\!\\(MachinePrecision\\)\
\[NoBreak] is insufficient to achieve the requested accuracy or precision. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FindMaximum/fmdig\\\", \
ButtonNote -> \\\"FindMaximum::fmdig\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634500440503*^9, 3.684635724384885*^9, 
  3.684668048842565*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.34324500000000002231104190286714583635`5.556204132929931", ",", "Null"}],
   "}"}]], "Output",
 CellChangeTimes->{
  3.684540466599551*^9, 3.68454051817599*^9, 3.684540979097865*^9, 
   3.684541014482897*^9, 3.684541269464591*^9, {3.684541311972795*^9, 
   3.684541327816001*^9}, 3.684541560253099*^9, 3.6846345007000237`*^9, 
   3.6846357249512463`*^9, 3.684668048943243*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"bestPushFreeNorm", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"bestPushFreeNorm", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"bestPushFreeTri", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"bestPushFreeTri", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"bestPushFreeUni", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"bestPushFreeUni", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], 
      "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Sigma] of swarm\>\"", ",", "\"\<Max Torque\>\""}], 
     "}"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Max possible torque on  a free object (-1 to 1)\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<Normal\>\"", ",", "\"\<Triangle\>\"", ",", "\"\<Uniform\>\""}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Right", ",", "Top"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<../abecker/SwarmPublications/JournalTorqueControl/pictures/pdf/\
TorqueFreeComparison.pdf\>\"", ",", "%"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"bestPushFreeNorm", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"bestPushFreeNorm", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"bestPushFreeTri", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"bestPushFreeTri", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"bestPushFreeUni", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"bestPushFreeUni", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"bestPushFreeTriBottom", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"bestPushFreeTriBottom", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}], 
      "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[Sigma] of swarm\>\"", ",", 
      "\"\<Optimal push location (\[Mu])\>\""}], "}"}]}], ",", 
   RowBox[{"Filling", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", "\[Rule]", 
      RowBox[{"{", "4", "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", "Automatic", ",", "Automatic", ",", 
      RowBox[{"ColorData", "[", 
       RowBox[{"97", ",", "2"}], "]"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<Normal\>\"", ",", "\"\<Triangle\>\"", ",", "\"\<Uniform\>\""}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Left", ",", "Top"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "2"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"2", "/", "3"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"100", ",", 
           RowBox[{"2", "/", "3"}]}], "}"}]}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{"\[Sqrt]", "2"}], "/", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"100", ",", 
           RowBox[{
            RowBox[{"\[Sqrt]", "2"}], "/", "2"}]}], "}"}]}], "}"}], "]"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"1", "/", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"100", ",", 
           RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}], "]"}]}], 
     "\[IndentingNewLine]", "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Where to push a free object (-1 to 1) to maximize torque\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<../abecker/SwarmPublications/JournalTorqueControl/pictures/pdf/\
TorqueFreeBestPush.pdf\>\"", ",", "%"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.676466820390336*^9, 3.676466989524275*^9}, {
  3.676467176427374*^9, 3.676467178092044*^9}, {3.676467921880308*^9, 
  3.676467966912457*^9}, {3.676468003785376*^9, 3.6764681638781776`*^9}, {
  3.676468291519845*^9, 3.67646830329661*^9}, {3.6764683388165216`*^9, 
  3.676468372623979*^9}, {3.684533929234049*^9, 3.684533939348472*^9}, {
  3.684540376345602*^9, 3.6845403861440163`*^9}, {3.684540478831476*^9, 
  3.684540504167663*^9}, {3.684540558946384*^9, 3.684540561457901*^9}, {
  3.684540710649729*^9, 3.684540739068645*^9}, {3.684540801207048*^9, 
  3.684540810028236*^9}, {3.6845422568892612`*^9, 3.6845423290434504`*^9}, {
  3.6845429179330807`*^9, 3.684542953671657*^9}, {3.6845430966267433`*^9, 
  3.684543119304673*^9}, {3.684543323600518*^9, 3.684543327384514*^9}, {
  3.684674617451166*^9, 3.68467463543652*^9}, {3.6846747228371563`*^9, 
  3.6846747443712683`*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.008333333333333333], AbsoluteThickness[1.6], LineBox[CompressedData["

1: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
GHmoWeuP+ssyosLwf1XPWsI=
        "]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.008333333333333333], AbsoluteThickness[1.6], LineBox[CompressedData["

1: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

        "]]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
       0.008333333333333333], AbsoluteThickness[1.6], LineBox[CompressedData["

1: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

        "]]}}, {}}, InsetBox[
     TemplateBox[{"\"Normal\"","\"Triangle\"","\"Uniform\""},
      "PointLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}], "}"}]}], 
           ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
         "]"}]& )], Scaled[{0.99, 0.99}], ImageScaled[{1, 1}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"\[Sigma] of swarm\"", TraditionalForm], 
     FormBox["\"Max Torque\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->Medium,
   Method->{},
   PlotLabel->FormBox[
    "\"Max possible torque on  a free object (-1 to 1)\"", TraditionalForm],
   PlotRange->{{0, 2.}, {0, 0.9826794882812013}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.008333333333333333], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Line[CompressedData["
1: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
GHmoWeuP+ssyosLwf1XPWsI=
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.008333333333333333], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Line[CompressedData["
1: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

          "]]}, {
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[0.008333333333333333], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Line[CompressedData["
1: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

          "]]}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
      PlotRange -> {{0, 2.}, {0, 0.9826794882812013}}, DisplayFunction -> 
      Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
      AxesLabel -> {"\[Sigma] of swarm", "Max Torque"}, AxesOrigin -> {0, 0}, 
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, PlotLabel -> 
      "Max possible torque on  a free object (-1 to 1)", 
      PlotRange -> {{0, 2.}, {0, 0.9826794882812013}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      PointLegend[{
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {"Normal", "Triangle", "Uniform"}, 
       Joined -> {{True, True, True}}, LabelStyle -> {}, LegendLayout -> 
       "Column", 
       LegendMarkers -> {{False, Automatic}, {False, Automatic}, {
         False, Automatic}}]], {Right, Top}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.68453389843923*^9, 3.6845339398526583`*^9, 3.684540265088787*^9, 
   3.684540386692976*^9, {3.684540505027707*^9, 3.6845405206929827`*^9}, 
   3.684540562129772*^9, 3.68454073991187*^9, 3.6845408107933702`*^9, 
   3.684540981636374*^9, 3.6845410168946857`*^9, {3.684541272726653*^9, 
   3.684541275069581*^9}, {3.6845413149953117`*^9, 3.684541330390424*^9}, 
   3.684541564380101*^9, {3.6845415972458344`*^9, 3.684541611404339*^9}, {
   3.68454164531647*^9, 3.684541659352977*^9}, 3.6845416903810062`*^9, 
   3.6845417731341143`*^9, 3.684541815751561*^9, {3.684541858016691*^9, 
   3.684541884938489*^9}, 3.684542038494244*^9, {3.684542261702969*^9, 
   3.684542329744802*^9}, {3.684542837108465*^9, 3.684542857215396*^9}, 
   3.684542954771956*^9, 3.684543120000651*^9, 3.684543327850935*^9, 
   3.684543551271291*^9, 3.684634500796878*^9, 3.684635725419922*^9, 
   3.6846680491599283`*^9, 3.684674755019947*^9}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, GraphicsComplexBox[CompressedData["
1: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
ltTofbp4DfqC+XWjerv3GvSFZ39HunipNOgLa88qrkeO1qIvmMTs7HRrtRZ9
Ie0IL6DstBZ9YWnkpnea11r0BfWuZjtbqRZ94XrwmhOetjr0hbkbv7bu9dGh
LwjWeC+8cVKHvpCwovRe6Qsd+gJ4zu+t5v/f+bHpjfmMQaH6/PglMDny9yZ9
fnSaG/nay5uL+dHCr5Px9nf6/Oj5LnxOzOQ2zI/zDlWfuHVHf97sbxVckts+
j6j86LNmn1lDnP68OXOhdpnWkIP5seDQo0SLP/T5sdF6Ss0kpj4/njfOtFyy
Qp8fLxpU+wd/0OfHtOsNN05M1edHucPythv3mJgfNx+/PebNUCbmxyVx4aF1
eJ6aBw3HzmWoOzEwP3offikfENaM+dFjjcPk31qaMD+KnF0jF/s2YX6cPf1Q
9taiRsyP8qvWHY9Pb8T8eHf2E/eUBw2YH8u3fT2eY9OA+dFiSXXRt/h6zI+V
nt96q0zqMT++dGvz6r+nDvOjdO4W/wKzOsyPViE1lulJdZgfm7rH1pwZU4/5
cadTr4u7s+oxP3rwdq9YObcB82POIXFfqGzA/Lj11Ppi64BGzI/vuu2INRY3
Yn58Opo7u+VAE+bHX6uduhX1bMb8OCtuZ+79S82YH4ec/OXIOXv9ebPB7Reu
4Zn682aBKkrj667Pj8dfjnk+vVyfHxVMzh6b9SzMj4+8gxxMBCzMj9qjLnxO
JBvzY9ad3anF3VowPx62023NuNCC+bF85f3h5205mB/vX6ptjnjMwfzISgu9
6jezFfNjauavq1w+tmJ+XDbDyWLEmjbMj5yF9p9NuW2YHz+deJ3YtoeL+XEB
965HqSkP8+PzKX49Hp3nYX48cPdxYIEZH/Nj+YBRM1+s4GN+bLrTdVh6Eh/z
41RBnNE1Jh/zo/dV29ozYwSYHzVnOVlH/hBgfuwlX3t5d5YA82PcxFN7g4yE
mB/DFie27wch5kf+jqBJC04LMT+mWMja94cQ86NLY6pknKUI8+Osur0V1u15
g8qPbk5h9/rcFWF+nHwyrn3/iDA/fig5FSyfLMb8eNj82vyWA2LMj5OPPLOv
fifG/Li+s1X3op4SzI9Ds4uYL70lmB9rhqS9vX9JgvlxbzUv+XqTBPPj6E0p
B87ZSzE/Wp+qXx0VKsX8OBe+zQjPlGJ+XFDhZ7nZQIb58d0Sfvv+lGF+DIWS
qoWxMsyP40YdzZpeLsP8+Ljv9QsTBskxP36auXy3zXo55scqpfmyfqlyzI+B
64IcTQRyzI8Gm5f3UzoqMD8WDfsi4UQqMD/mu9qW1OQqMD+uCOlzr7ibEvPj
pj39Y7KXKDE/hll03pxxQYn5cci4/XP+qVdifvxbJh5x3laF+XHPOd/Ox9rn
NZUf06w3NEU8VmF+vLC9LHuLRoX50Xt0zTW/mWrMj2ZPufs9TqgxP771DFjj
8lGN+dHOvcNUh4EazI9uA0f9MmKNBvOjjU+Uuv8NDebHqNo9laZcDebH4xZX
n6gctJgfu+ztEN+G5zcCsF4p2F6bo8X8CBNXLy011WF+NA03cXjtodOfN//5
qf39qMP8eL7EiJvy7b/zl//OX/47f/nv/OW/85f/7/yFmhPU/KRqan5SNTU/
qZqan1RNzU+qpuYnVVPzk6qp+UnVOD9JTc1PqqbmJ1VT85OqqflJ1dT8pGpq
flI1NT9xTpL5SdX0Z2p+UjU1P39en76m5ufP69XX1Pz8ef36/xNT8/Pnfuhr
an7+3B99Tc3Pn/slxJqanz/3T19T5y9UTZ2/UDV1/vJzf/XnVtT5y8/91tfU
+cvP/dfX1PnLzxzENB5iGg8xjYeYxkNM4yGm8RDTeEhoPCQ0HhIaDwmNh4TG
Q0LjIaXxkNJ4SGk8pDQeUhoPKY2HjMZDRuMho/GQ0XjIaDxkNB5yGg85jYec
xkNO4yGn8ZDTeMhpPBQ0HgoaDwWNh4LGQ0HjoaDxUNJ4KGk8lDQe+pr6f+3P
PJQ0HioaDxWNh4rGQ0XjoaLxUNF4qGk81DQeahoPNY2HmsZDTeOhpvHQ0Hho
aDw0NB4aGg8NjYeGxkNL46Gl8dDSeGhpPLQ0HloaDx2Nh47GQ0fjoaPx0NF4
6Gg8KP9on6f9rk23/1XvJdNGdQt5bqXE+sVxo9k3woVY/w+o/Ucb
      
      "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, 
        {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[None],
          GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1NVSEAAQBVDAVsBuUcHA7gTFRlAs7MAg7O7u7u52/BO7uxtU7E6sw/hw
9r7uztzZ8OQJieODAgICAhln3OM+D3jIIx7zhHQyeMoznpPJC17yite84S3v
eM8HPvKJz3zhK9/4zg9+ksUvfvOHv9lLWS6QIHKQk1zkJg95yUd+ChBMCKEU
pBCFKUJRilGcEpSkFKUpQ1nKEUZ5KlCRcCKoRGWqUJVIqlGdGtSkFrWpQ13q
UZ8GNKQRjWlCU5rRnCiiaUFLYmhFa9rQlna0pwOxdCSOeDrRmQS60JVudKcH
ifSkF73pQ1/60Z8BDGQQSQxmCEMZRjIppJLGcEYwklGMZgxjGUd2qSYwkUlM
ZgpTmcZ0ZjCTWcxmDnOZx3wWsJBFLGYJS1nGclawklWsZg1rWcd6NrCRTWxm
C1vZxnZ2sJNd7GYPe9nHfg5wkEMc5kj2zTp5NPt+mUYqKSQzjKEMYTBJDGIg
A+hPP/rSh970oieJ9KA73ehKFxLoTCfiiaMjsXSgPe1oSxta04oYWtKCaKJo
TjOa0oTGNKIhDahPPepSh9rUoiY1qE41IqlKFSpTiQjCqUgFyhNGOcpShtKU
oiQlKE4xilKEwhSiIKGEEEwB8pOPvOQhN7nISQ6CCAz8/8j+ij/85hdZ/OQH
3/nGV77wmU985APvecdb3vCaV7zkBZk85xlPySCdJzzmEQ95wH3ucZc73OYW
N7nBda5xlStc5hIXucB5znGWM5zmFCc5wXGO8Q/iDaQB
           
           "]]]}, {}, {}, {}, {}, {}, {}}, {{}, {}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.008333333333333333], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJwV01c7FgAAhuGPor2ntBRpKElDU4OGNGgXKU0qGmjRUtIgLW2kqUGivaQ/
1u3gvp7D9+iNyM5PzwsKBAL/6GgwnehMCKF0oSvd6E4PetKL3vShL/3ozwAG
MojBDGEoYQwjnOGMYCSjGE0EYxhLJFGMI5rxTGAik4hhMlOIZSpxTCOe6cxg
JrNIYDZzmMs85rOARBayiMUsIYlklrKM5awghZWksorVrGEtaaSzjvVsYCOb
2MwWtrKNDDLZThY72Ek2u9jNHvayj/3kkMsBDnKIPPI5zBGOcowCCiniOCc4
ySlOU0wJZzjLOc5zgVIucokyLlPOFa5yjetUUMkNqrjJLW5zh7tUc4/7POAh
j3jME2qopY6n1POM57zgJa94TQNveMs73tNIEx9o5iMttPKJz3zhK9/4zg9+
8ovf/KGNv7R3bDvBfzPvTQA=
          "]]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
         0.008333333333333333], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJwNz9dCSAEAANBbiDSMQkUloRSyykoDJQotDavJIz9Vf2JUymopEVFCWRkt
1Xk4H3BSmu9X3gsJgqCNBzzkEY/poJMuntBND095xnNe8JJe+uhngEFeMcQw
rxnhDW8Z5R3vGeMDHxlngk9M8pkvfGWKab7xnR/85Bcz/OYPf/nHLHPMs8Ai
/1limUA8hFBWsZo1hLGWdYSznggiiSKaDWxkE5uJIZYtbGUbccSTwHZ2kEgS
yewkhV2ksps97CWNdPaRQSb7OcBBsjjEYY5wlGNkk8NxTnCSU5wmlzPkkU8B
hZzlHOcpopgLlHCRS5RSxmWucJVyKqikimquUUMtddRznRvc5Ba3aaCRJppp
oZU73KU9NAhWAN2dTMU=
          "]]}, 
        {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
         0.008333333333333333], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJwVz0NyRAEARdGf7CRbyhIyijvo2LZt27ZtczU5GZyqO3iTFxUTik6OCIIg
TKyII54EEknifxAihVTSSCdMBplkkU0OueSRTwGFFFFMCaWUUU4FlVRRTQ21
1FFPA4000UwLrbTRTgeddNFND7300c8AgwwxzAijjDHOBJNMMc0Ms8wxzwKL
LLHMCqussc4Gm2yxzQ677LHPAYccccwJp5xxzgWXXHHNDbfccc8DjzzxzAuv
vPHOB5988c0Pv/+fIoPgD1y9S5Y=
          "]]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
         0.008333333333333333], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJwVzldbiAEAQOGvSGZlhpQys7eMhlH2DGWPkq2ySQjZe1Nk/Rk/QjYVsldl
9Lp4n+dcnoScgsz8kCAIHvFYVPKEpzzjOS94ySte84YqqqnhLe94Ty0f+Mgn
PvOFr3zjOz/4yS/qqKeB3/zhL//+T4UGQQihNKEpYTQjnOa0oCWtaE0bIogk
ira0oz0d6EgnoulMF7oSQzdiiaM78STQg570ojd96Esi/ejPAAYyiMEMYSjD
GM4IRjKK0SQxhrGMYzzJpJBKGhOYyCQmk04GU5jKNKYzg5nMYjZzmMs85pPJ
AhayiCyyWcwSlrKM5axgJatYzRpyyGUteaxjPRvYyCY2s4Wt5FNAIdvYzg52
sovd7GEv+yhiP8Uc4CCHKOEwRzhKKcc4zglOcorTnOEs5zjPBS5yictc4SrX
uM4NbnKLMsq5zR0quMs97vOAhzQCzChZhA==
          "]]}}}], {}}, InsetBox[
     TemplateBox[{"\"Normal\"","\"Triangle\"","\"Uniform\""},
      "PointLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                 "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
         "]"}]& )], Scaled[{0.01, 0.99}], ImageScaled[{0, 1}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"\[Sigma] of swarm\"", TraditionalForm], 
     FormBox["\"Optimal push location (\[Mu])\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Epilog->{
     Dashing[{Small, Small}], 
     LineBox[
      NCache[{{0, 
         Rational[2, 3]}, {100, 
         Rational[2, 3]}}, {{0, 0.6666666666666666}, {
        100, 0.6666666666666666}}]], 
     LineBox[
      NCache[{{0, 2^Rational[-1, 2]}, {100, 2^Rational[-1, 2]}}, {{
        0, 0.7071067811865475}, {100, 0.7071067811865475}}]], 
     LineBox[
      NCache[{{0, 
         Rational[1, 2]}, {100, 
         Rational[1, 2]}}, {{0, 0.5}, {100, 0.5}}]]},
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->Medium,
   Method->{},
   PlotLabel->FormBox[
    "\"Where to push a free object (-1 to 1) to maximize torque\"", 
     TraditionalForm],
   PlotRange->{{0, 2.}, {0, 2}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, 
      GraphicsComplex[CompressedData["
1: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
ltTofbp4DfqC+XWjerv3GvSFZ39HunipNOgLa88qrkeO1qIvmMTs7HRrtRZ9
Ie0IL6DstBZ9YWnkpnea11r0BfWuZjtbqRZ94XrwmhOetjr0hbkbv7bu9dGh
LwjWeC+8cVKHvpCwovRe6Qsd+gJ4zu+t5v/f+bHpjfmMQaH6/PglMDny9yZ9
fnSaG/nay5uL+dHCr5Px9nf6/Oj5LnxOzOQ2zI/zDlWfuHVHf97sbxVckts+
j6j86LNmn1lDnP68OXOhdpnWkIP5seDQo0SLP/T5sdF6Ss0kpj4/njfOtFyy
Qp8fLxpU+wd/0OfHtOsNN05M1edHucPythv3mJgfNx+/PebNUCbmxyVx4aF1
eJ6aBw3HzmWoOzEwP3offikfENaM+dFjjcPk31qaMD+KnF0jF/s2YX6cPf1Q
9taiRsyP8qvWHY9Pb8T8eHf2E/eUBw2YH8u3fT2eY9OA+dFiSXXRt/h6zI+V
nt96q0zqMT++dGvz6r+nDvOjdO4W/wKzOsyPViE1lulJdZgfm7rH1pwZU4/5
cadTr4u7s+oxP3rwdq9YObcB82POIXFfqGzA/Lj11Ppi64BGzI/vuu2INRY3
Yn58Opo7u+VAE+bHX6uduhX1bMb8OCtuZ+79S82YH4ec/OXIOXv9ebPB7Reu
4Zn682aBKkrj667Pj8dfjnk+vVyfHxVMzh6b9SzMj4+8gxxMBCzMj9qjLnxO
JBvzY9ad3anF3VowPx62023NuNCC+bF85f3h5205mB/vX6ptjnjMwfzISgu9
6jezFfNjauavq1w+tmJ+XDbDyWLEmjbMj5yF9p9NuW2YHz+deJ3YtoeL+XEB
965HqSkP8+PzKX49Hp3nYX48cPdxYIEZH/Nj+YBRM1+s4GN+bLrTdVh6Eh/z
41RBnNE1Jh/zo/dV29ozYwSYHzVnOVlH/hBgfuwlX3t5d5YA82PcxFN7g4yE
mB/DFie27wch5kf+jqBJC04LMT+mWMja94cQ86NLY6pknKUI8+Osur0V1u15
g8qPbk5h9/rcFWF+nHwyrn3/iDA/fig5FSyfLMb8eNj82vyWA2LMj5OPPLOv
fifG/Li+s1X3op4SzI9Ds4uYL70lmB9rhqS9vX9JgvlxbzUv+XqTBPPj6E0p
B87ZSzE/Wp+qXx0VKsX8OBe+zQjPlGJ+XFDhZ7nZQIb58d0Sfvv+lGF+DIWS
qoWxMsyP40YdzZpeLsP8+Ljv9QsTBskxP36auXy3zXo55scqpfmyfqlyzI+B
64IcTQRyzI8Gm5f3UzoqMD8WDfsi4UQqMD/mu9qW1OQqMD+uCOlzr7ibEvPj
pj39Y7KXKDE/hll03pxxQYn5cci4/XP+qVdifvxbJh5x3laF+XHPOd/Ox9rn
NZUf06w3NEU8VmF+vLC9LHuLRoX50Xt0zTW/mWrMj2ZPufs9TqgxP771DFjj
8lGN+dHOvcNUh4EazI9uA0f9MmKNBvOjjU+Uuv8NDebHqNo9laZcDebH4xZX
n6gctJgfu+ztEN+G5zcCsF4p2F6bo8X8CBNXLy011WF+NA03cXjtodOfN//5
qf39qMP8eL7EiJvy7b/zl//OX/47f/nv/OW/85f/7/yFmhPU/KRqan5SNTU/
qZqan1RNzU+qpuYnVVPzk6qp+UnVOD9JTc1PqqbmJ1VT85OqqflJ1dT8pGpq
flI1NT9xTpL5SdX0Z2p+UjU1P39en76m5ufP69XX1Pz8ef36/xNT8/Pnfuhr
an7+3B99Tc3Pn/slxJqanz/3T19T5y9UTZ2/UDV1/vJzf/XnVtT5y8/91tfU
+cvP/dfX1PnLzxzENB5iGg8xjYeYxkNM4yGm8RDTeEhoPCQ0HhIaDwmNh4TG
Q0LjIaXxkNJ4SGk8pDQeUhoPKY2HjMZDRuMho/GQ0XjIaDxkNB5yGg85jYec
xkNO4yGn8ZDTeMhpPBQ0HgoaDwWNh4LGQ0HjoaDxUNJ4KGk8lDQe+pr6f+3P
PJQ0HioaDxWNh4rGQ0XjoaLxUNF4qGk81DQeahoPNY2HmsZDTeOhpvHQ0Hho
aDw0NB4aGg8NjYeGxkNL46Gl8dDSeGhpPLQ0HloaDx2Nh47GQ0fjoaPx0NF4
6Gg8KP9on6f9rk23/1XvJdNGdQt5bqXE+sVxo9k3woVY/w+o/Ucb
       
       "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {
          EdgeForm[], 
          Directive[
           RGBColor[0.880722, 0.611041, 0.142051], 
           Opacity[0.2]], 
          GraphicsGroup[{
            Polygon[CompressedData["
1:eJwl1NVSEAAQBVDAVsBuUcHA7gTFRlAs7MAg7O7u7u52/BO7uxtU7E6sw/hw
9r7uztzZ8OQJieODAgICAhln3OM+D3jIIx7zhHQyeMoznpPJC17yite84S3v
eM8HPvKJz3zhK9/4zg9+ksUvfvOHv9lLWS6QIHKQk1zkJg95yUd+ChBMCKEU
pBCFKUJRilGcEpSkFKUpQ1nKEUZ5KlCRcCKoRGWqUJVIqlGdGtSkFrWpQ13q
UZ8GNKQRjWlCU5rRnCiiaUFLYmhFa9rQlna0pwOxdCSOeDrRmQS60JVudKcH
ifSkF73pQ1/60Z8BDGQQSQxmCEMZRjIppJLGcEYwklGMZgxjGUd2qSYwkUlM
ZgpTmcZ0ZjCTWcxmDnOZx3wWsJBFLGYJS1nGclawklWsZg1rWcd6NrCRTWxm
C1vZxnZ2sJNd7GYPe9nHfg5wkEMc5kj2zTp5NPt+mUYqKSQzjKEMYTBJDGIg
A+hPP/rSh970oieJ9KA73ehKFxLoTCfiiaMjsXSgPe1oSxta04oYWtKCaKJo
TjOa0oTGNKIhDahPPepSh9rUoiY1qE41IqlKFSpTiQjCqUgFyhNGOcpShtKU
oiQlKE4xilKEwhSiIKGEEEwB8pOPvOQhN7nISQ6CCAz8/8j+ij/85hdZ/OQH
3/nGV77wmU985APvecdb3vCaV7zkBZk85xlPySCdJzzmEQ95wH3ucZc73OYW
N7nBda5xlStc5hIXucB5znGWM5zmFCc5wXGO8Q/iDaQB
             
             "]]}]}, {}, {}, {}, {}, {}, {}}, {{}, {}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1:eJwV01c7FgAAhuGPor2ntBRpKElDU4OGNGgXKU0qGmjRUtIgLW2kqUGivaQ/
1u3gvp7D9+iNyM5PzwsKBAL/6GgwnehMCKF0oSvd6E4PetKL3vShL/3ozwAG
MojBDGEoYQwjnOGMYCSjGE0EYxhLJFGMI5rxTGAik4hhMlOIZSpxTCOe6cxg
JrNIYDZzmMs85rOARBayiMUsIYlklrKM5awghZWksorVrGEtaaSzjvVsYCOb
2MwWtrKNDDLZThY72Ek2u9jNHvayj/3kkMsBDnKIPPI5zBGOcowCCiniOCc4
ySlOU0wJZzjLOc5zgVIucokyLlPOFa5yjetUUMkNqrjJLW5zh7tUc4/7POAh
j3jME2qopY6n1POM57zgJa94TQNveMs73tNIEx9o5iMttPKJz3zhK9/4zg9+
8ovf/KGNv7R3bDvBfzPvTQA=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1:eJwNz9dCSAEAANBbiDSMQkUloRSyykoDJQotDavJIz9Vf2JUymopEVFCWRkt
1Xk4H3BSmu9X3gsJgqCNBzzkEY/poJMuntBND095xnNe8JJe+uhngEFeMcQw
rxnhDW8Z5R3vGeMDHxlngk9M8pkvfGWKab7xnR/85Bcz/OYPf/nHLHPMs8Ai
/1limUA8hFBWsZo1hLGWdYSznggiiSKaDWxkE5uJIZYtbGUbccSTwHZ2kEgS
yewkhV2ksps97CWNdPaRQSb7OcBBsjjEYY5wlGNkk8NxTnCSU5wmlzPkkU8B
hZzlHOcpopgLlHCRS5RSxmWucJVyKqikimquUUMtddRznRvc5Ba3aaCRJppp
oZU73KU9NAhWAN2dTMU=
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1:eJwVz0NyRAEARdGf7CRbyhIyijvo2LZt27ZtczU5GZyqO3iTFxUTik6OCIIg
TKyII54EEknifxAihVTSSCdMBplkkU0OueSRTwGFFFFMCaWUUU4FlVRRTQ21
1FFPA4000UwLrbTRTgeddNFND7300c8AgwwxzAijjDHOBJNMMc0Ms8wxzwKL
LLHMCqussc4Gm2yxzQ677LHPAYccccwJp5xxzgWXXHHNDbfccc8DjzzxzAuv
vPHOB5988c0Pv/+fIoPgD1y9S5Y=
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           AbsoluteThickness[1.6], 
           RGBColor[0.880722, 0.611041, 0.142051]], 
          Line[CompressedData["
1:eJwVzldbiAEAQOGvSGZlhpQys7eMhlH2DGWPkq2ySQjZe1Nk/Rk/QjYVsldl
9Lp4n+dcnoScgsz8kCAIHvFYVPKEpzzjOS94ySte84YqqqnhLe94Ty0f+Mgn
PvOFr3zjOz/4yS/qqKeB3/zhL//+T4UGQQihNKEpYTQjnOa0oCWtaE0bIogk
ira0oz0d6EgnoulMF7oSQzdiiaM78STQg570ojd96Esi/ejPAAYyiMEMYSjD
GM4IRjKK0SQxhrGMYzzJpJBKGhOYyCQmk04GU5jKNKYzg5nMYjZzmMs85pPJ
AhayiCyyWcwSlrKM5axgJatYzRpyyGUteaxjPRvYyCY2s4Wt5FNAIdvYzg52
sovd7GEv+yhiP8Uc4CCHKOEwRzhKKcc4zglOcorTnOEs5zjPBS5yictc4SrX
uM4NbnKLMsq5zR0quMs97vOAhzQCzChZhA==
           "]]}}}], {}}, {
     DisplayFunction -> Identity, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
      PlotRange -> {{0, 2.}, {0, 2}}, DisplayFunction -> Identity, 
      AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
      AxesLabel -> {"\[Sigma] of swarm", "Optimal push location (\[Mu])"}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, Epilog -> {
        Dashing[{Small, Small}], 
        Line[{{0, 
           Rational[2, 3]}, {100, 
           Rational[2, 3]}}], 
        Line[{{0, 2^Rational[-1, 2]}, {100, 2^Rational[-1, 2]}}], 
        Line[{{0, 
           Rational[1, 2]}, {100, 
           Rational[1, 2]}}]}, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], Method -> {}, PlotLabel -> 
      "Where to push a free object (-1 to 1) to maximize torque", 
      PlotRange -> {{0, 2.}, {0, 2}}, PlotRangeClipping -> True, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      PointLegend[{
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Directive[
         PointSize[0.008333333333333333], 
         AbsoluteThickness[1.6], 
         RGBColor[0.880722, 0.611041, 0.142051]]}, {
       "Normal", "Triangle", "Uniform"}, Joined -> {{True, True, True, True}},
        LabelStyle -> {}, LegendLayout -> "Column", 
       LegendMarkers -> {{False, Automatic}, {False, Automatic}, {
         False, Automatic}, {False, Automatic}}]], {Left, Top}, Identity]]& ],
  
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.68453389843923*^9, 3.6845339398526583`*^9, 3.684540265088787*^9, 
   3.684540386692976*^9, {3.684540505027707*^9, 3.6845405206929827`*^9}, 
   3.684540562129772*^9, 3.68454073991187*^9, 3.6845408107933702`*^9, 
   3.684540981636374*^9, 3.6845410168946857`*^9, {3.684541272726653*^9, 
   3.684541275069581*^9}, {3.6845413149953117`*^9, 3.684541330390424*^9}, 
   3.684541564380101*^9, {3.6845415972458344`*^9, 3.684541611404339*^9}, {
   3.68454164531647*^9, 3.684541659352977*^9}, 3.6845416903810062`*^9, 
   3.6845417731341143`*^9, 3.684541815751561*^9, {3.684541858016691*^9, 
   3.684541884938489*^9}, 3.684542038494244*^9, {3.684542261702969*^9, 
   3.684542329744802*^9}, {3.684542837108465*^9, 3.684542857215396*^9}, 
   3.684542954771956*^9, 3.684543120000651*^9, 3.684543327850935*^9, 
   3.684543551271291*^9, 3.684634500796878*^9, 3.684635725419922*^9, 
   3.6846680491599283`*^9, 3.684674755325533*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"sigs", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "1", ",", "1.1", ",", "1.2", ",", "1.3", ",", "1.4", ",", "1.5", ",", 
       "1.6", ",", "2"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"TODO", ":", " ", 
     RowBox[{
     "place", " ", "legend", " ", "inside", " ", "the", " ", "plot"}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"TorqueFreeNorm", "[", 
         RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Sigma]", ",", "sigs"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Mu]", ",", 
       RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "sigs"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Mu] (pushing location)\>\"", ",", "\"\<Torque\>\""}], 
       "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<Triangular distribution\>\""}], ",", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Line", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "]"}], "}"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6846738840081873`*^9, 3.6846738957255077`*^9}}],

Cell[BoxData[
 TemplateBox[{
  GraphicsBox[{}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[Mu] (pushing location)\"", TraditionalForm], 
       FormBox["\"Torque\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Epilog -> {
       LineBox[{{1, 0}, {1, 1}}]}, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotLabel -> FormBox["\"Triangular distribution\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"1", "1.1`", "1.2`", "1.3`", "1.4`", "1.5`", "1.6`", "2"}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 0.75, 0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.684673899353324*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sigs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "1.1", ",", "1.2", ",", "1.3", ",", "1.4", ",", "1.5", ",", 
      "1.6", ",", "2"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"TODO", ":", " ", 
    RowBox[{
    "place", " ", "legend", " ", "inside", " ", "the", " ", "plot"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"TorquePivotTriFree", "[", 
       RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "sigs"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", 
     RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{"sigs", ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", "Bold", ",", "8"}], "}"}]}], ",", 
        RowBox[{"LegendLabel", "\[Rule]", "\"\<\[Sigma]=\>\""}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0.55"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Mu]\>\"", ",", "\"\<Torque\>\""}], "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Triangular distribution\>\""}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "]"}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
   "\"\<../abecker/SwarmPublications/JournalTorqueControl/pictures/pdf/\
TorqueTriFree.pdf\>\"", ",", "%"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.683656192718853*^9, 3.68365650959415*^9}, {
   3.684533201990088*^9, 3.684533227629901*^9}, 3.6845336018509903`*^9, {
   3.684538398449457*^9, 3.684538398934102*^9}, {3.684538872647613*^9, 
   3.6845388887736807`*^9}, 3.684539050089514*^9, {3.6845392360343122`*^9, 
   3.68453924661322*^9}, {3.684539278578122*^9, 3.684539281301207*^9}, {
   3.684539347834256*^9, 3.684539370928897*^9}, {3.684539413266988*^9, 
   3.6845394260116*^9}, {3.684541137633313*^9, 3.684541223576767*^9}, {
   3.6845419473452797`*^9, 3.6845420170348797`*^9}, {3.684542119211987*^9, 
   3.684542121724435*^9}, {3.6846745539692287`*^9, 3.6846745924173307`*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{InsetBox[
     GraphicsBox[{{{}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1: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
YQ==
          "]]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1: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

          "]]}, 
        {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJxF2nk8VN/7APCZsSTGjJSlqChKiCR7OZfKrkVkyZZSdkJZsxcqQsgSiuxZ
Zi5t5FxFSqQkW7Jl30ZIIeZ3v6/X5xd/8Hq/nnHO9ZzneeZ4IWrnbmRPIhAI
7Pin/32VAfwTTCYVI/z3Yey0N2pped3+Scp75n+tu2HSwm5kct22KVndTR3r
jv8p8SG1bN3PhVUd7xWtu1dbf0NM7rolM12PhqSv+7UevepS5LrHrr4xtw2j
YoEbDf+2uNnWUB61/Ta/TsUs53sXbjzMqTnUNJx0xpeKbbFwcBapq6k593tR
3tCLihFDGuO+FbfUhO3iaNVyo2KIC6N7sr+7psBwqwfiSMWOnuOT53cYqvno
K0lRvUjFODOGaqY+TdUs5Kg9kbehYg+AjeEGk/mabS0GevstqFg9Sd1BZ+lP
DbJsNbbHhIq93r1yqM6YWXNJ3P2myCkqVntX40GYPAuMORUitk2fihWAgZVG
gQ2wIiD+9WYtKnZzsDWAYMoFu/Oybbk1qJhqzR3rsVkq3LNa94CgRMWe82yV
mtvKBw0k2lWX5ahYLj+br8aMAPQ8M9o5L03Fzr7SCPBmbIM1hRv5RndRsban
TVs4qkXgUNs2tH87vp9VEldW8C7ISZA+3S1IxVyS/+50NReDpmdPxDRTqNh+
4vYhr5MSMCjURqphI54P400Kd50l4eMnHu8xVir2JHDbSF6GNJwl3WOrWKZg
D996mLx7dADyyzzOKflFwS7rT5dlf5ODh80rNfJnKdjPc2XfrETkYVRZx/W0
EQrmjQAd80YFWNo9JpQ4QMF0cou6bskqwTa25RcxPRSs+Wny9+AsZShqKbwY
0krBOgnSvclZavAlx3m3yzUUzDLGO+krVQM2953tXHhOwZyeHt/JYGrA/qcG
mmEoBcsXXmFTWdSE7PbK/BkFFOy3E1Ne/9cxaFRLrWlNoGBxKaMCI4d1oX0K
m4RtDAXjP2Qcy7TSg77uK/HTkRTsyaOgX7tv6MPM7aP2HNcp2J1XS33+w4Zw
0q+GW/0yBStEQvkY107DtVMVPh/OUzD7dGf+SzuNIK9E0YCZJQW7Wfioq6XR
CCq3J1V6naZgH46P6ntKGsOIg65WhWoUTEwzyY5GNoXCk0IlW3gomJS7nRv5
nBWUfb1JIJuTgmn2jY4ly1lDzdQNobJsFKzlfsKLGU4b6KA9b6y3zI292r03
dM3OFlbmNP4NHuLGRujcFoUydvCEpZ/B5HNu7KCdn6nzhkswuLl9svY8N2af
eqHT46kb7O8Mx4otubHNsa1hJzXdoebQgaQkU26sz/OXkVaLO2RfuaXuaMiN
bc+o0jt8zQPekQDxPCrc2Ka13OsTqVdgWni+og0PN7abL5u1adkLVqj4hv6t
IWPmm23undjpB/mPi58deUHGkoIe7mu76gd9TrVKfqogY37Jh++3N/lB1cvS
bTlFZCxicMumU4H+sDaxf49+Mhmrj1aU4hgIgB8ZOk2prmQsh/WN2a7aIDie
u1VASZiM7dmc2GjsEgY/2g1eUxUgY47NTIvZjDBYsbO4/QgvGXPl8kvFWsJg
UOrh5GMcZCxZcUp1TT4c8sbY8BktcGF9murvRtfCoap37mbXJi5MhdjVopF5
A97SlOPJCeTCXkXsLQkmRkPJPp2N1O+c2Nwmyov3e+Lg4805C11hGzEZ+7kl
rg2p8M25xhgIOLD9uxOaBjgfQeEsYZGUAXas+GjHQrRgHtQ/es7vSzQbFvIu
M7V3qgjuXLkUsk+XFfMpy/5jzlMGp75efvzyKCv2odTqorRoGXxe7vBOX50V
E9KSqJyXK4OnLjnxuMmzYp9ES6psz5TBkM+uD+nbWTG3z1XG9KQyOJjvjanN
sWA3U+5WbyKXwzzjMMKJdBaM7KP98Xt0OfSUDRfrS2LBKha+mofHl0N1zggd
jzgWbLCVIbMrtRx2wBtxCTdYsIu78+L0C8ohh1S0SIc7C/ZHEZExeFsOnYhx
iO0xFkxU+Sj6l0CD+0szQjynSViaiOF0lwcN6rwyodqOkbAOL/IZMR8atGvi
zjT8QcISNdp6Ll+nwZSJ61USXSSsl1dXvTuaBln3Wi/21pEw9SVze+dsGuzO
2uGi/4CEsak8KVBupcGb8VmmYvokzCOnREJPmg4fPTQd2aRFwswsDrgVydFh
dRn1KhPB16/ZOkJSosOfzcEJ3Yok7ILJ1IkHGnRoyWnbHLeLhH2S2C3ncZYO
5cNFjq4uEbHmRqcHSUF02O/9SKa9gIht2rZ6MPsdHQYpXNX5nkPE5vKrzYea
6FB4UcduKJOICXc+EtzxmQ7NfGaT5hKJGHbSQdO3iw4/+4FVSigRc2GgQW/H
6fB10PcP2uZE7HL0c9s6DhTaAtrwCWMiZjwuWhFIRuEaM4JpcpKImZV83y/N
g0LVUGn5i8eJGDWhw8dDAIVoeEBaiBwRsxPNyYwRR+HjqK2OLzYSsVezXGub
ERRq6k6HYaxEzAlM2qodRWH/xtoHDUwCtoDq+pproVD4tsOnr78I2HZALfAz
QGFSzDOluQEC1n3g9jFdMxQeOnH79FIPAcslHowQP4fCVoqNM6GTgKmYu4E/
ViikxLFnUT4SsJ3NB8mhF1B4M8GEXeolAdsq9EJppxsKxc7sEzlYScDkrnbf
KfVA4evNqyoq5QTs99N8sUNeKGQmPnbVziNgP0U/M0V9Ueh7f77tQgIBax/b
nxEZikLHB/E5D5wImM+XUFXvBBQucOhFK9kTsF82n7fGJqIw5CrJvdWGgBU+
27+SnozC5BNeqhwmBCyvDc26l4bvRzD57AUI2AXByCs/H6HQ0JX7GUWVgPEb
fbQrykFhZ1f9g8JDBOybmwe3aS4KZ+iKDn37CFiMlYvT7QIUbrMXZOptIWCr
dm3HbEpRmPv509AwhYC95oggVZah8IB6dGPIRgLmVdhzYK0chXdkFqRcV5kw
blS2yglFYfYG+9/Zc0zI4Fxjja1A4fP+r687R5lQUkE4/XElCocSnpkfa2VC
0SJGZPEzFC47S4j7NzBhq79vU/pzFPIcT50tq2ZCA+s/ysEvULhnB2f1MI0J
bwuY15m8ROHh3/6RQvm4HSPsd1ah0OjTpNHpB0x4TODi5h7cDoWWOyLjmbDi
x0Dd7WoUBoU1j1ffZMLO+FEPmVf4eZ9Tr5wLYMKCIWtKHe4nh8pCJK4w4a4s
uUSDGjx/3CIG1peYEInQXWrA3TkSJ5B4jglXz8YdUoR4viDxx/tTTGjazTh8
Hzdrqmcp8zgTan8+vXES9zbPH34Kakz4bi0rTg7D86VvfNz5ABN2iNe9d8Kt
JVbP80icCT02FhQn47ZcVehp38aEMS4K+ytxe7bn5ZN58Hzxnj3+FndUmYCX
JhsTPhuJPN6IOzMqSt13eQ0+/8+Nqk5ffwyte3FK3+Vky7rzK1sbVn3XbRZk
vvvJrrV/62EVGiCk/+8/S0zuO2ecufLPzidO3Rj88eff91t4nTyiqLj4z/fg
2Cn4dP6fAanzrAzx5z8HyW78oVk++8/Vlqrupjbrtpw3qhxQXPdKtPOKM2Xd
OWU/75xgXXdyEeOw3QIDPvTzsf5ffkZ+rdjs7WfA/vOti09wK2hwhE99YEDh
qobfAbgj7mzJoz1jwHSPUx7yuNs6RN5fy2HAR6727l/w8xLbvX9K7S4Demcw
WSxxe7upUIkBDHh2UuBIM37+dS+OH3x7iQFjNfP37cW9hc3I5LYRA56Pzet0
xOvn4ilr31PqDMj7kmKehNcbmu6UzifJgJPlnS8K8XokjV6r6eZjQGnr1Y35
eP0aHQwfyCLiz1dy1SwGr++5d+l7JbtmoND3Y9J8eD9obinQY9TNwMrEmJan
eL/E21S4VpTPQGo6d4kG3k8HFptQ9agZKKZx32gzDZ8HGl3tLN4z8MKzBGUL
vD8/3RleemczAwP3FSbeKkGh++41cEZpBmqVck7mF6Kwxo3zguDuGeh/X5sl
KR+fZy/5b36nzMBH+8KbnfF5UHpKtunyyDR8+asLbX+Iz+N0NYZ06zRUZh+d
dsrE58moNu/cq2n4wqWdbzwdhVPXbc0Ck6Zh/RhwzsHn0eH3LgEaodOws634
ad89fD5s8ctkd52GrHXfpdjjUShVHD8Ud2waZpr5tGy6jUKnztceufNTMJK/
KlM8CIWuX86/efF9CgacXdF28kehx0cC/8eGKSgiVvot6RoKferUqxbTp2Da
4QxKNj5vI8pfsukcm4K/ZNaexeHzObLY3MxSZgpKFso2UsxReCvvT5GH4BTU
Mley8TbG8/lA8VTq1CTUlF2xWtT7Xz/R0yYSJ6FkMO1NhyIKH4Wfnl4LmoR6
V38SE+Xw95egWbDZcRKG6jqfU5ZGYbG3zLDakUloaav+REUUn2+2RbIxwxPQ
ewvsFuFE4Rfl7DpZxQnI8ZeHP6GDDtvlNQSOiUzAydL6X52f6LBbpt/RjHMC
msQFiG5sxN9fxXZQQ3vHYRtduFC8mg5neNLMW2+OQ6mj8bGns+iQYzx+xrtj
DIr/3md14zwdHk4NFXzpOwrvdxvYDn6lQUOLu/cPXRiF0hfOV+U00aC1UAZ/
meEoXItwCD79hgaDM55vebxrFOqpO93yLKfB148YPLFNI9BJevVxE36/0C6y
2mgnMgL5d7rRZ5Vp0KhKZXnjuyF4+OGw9TX8PnQhUNsvgj4E2++j9aPXy6H3
EZM/aw+GYKLP6XZtz3KYBD0W568MQftUwSNtFuWw803+3HehIWjAlbxVRKoc
WjXxTdLcf8C2h5UFe+PLoMP3n9/MBQbhzmMTpC8zJRB172HTYhmE7jGhXX5f
S+AasUH2IGMA+t4ZcWGvLoGJex6EczYMQDlWOfA5qgRi7lpSVdcGYMwx5/oD
oiVQkJTuL9zeD52t4n4dMHwC4wyjDtbs64Pl8T7NpHtF8GS/dMk7sW7Yync3
+0xPHlSE6R0TER+h5WXwUPBFOlSZtbrQe6ECzg5XYavtYVAqnMGJXUWBxynl
L50roaCsYaYw2KwF3DHs3B935QF4pduorPq6C6TsYmptjssDMwqH3sxPd4ER
A92kX7Q8sGNXpmHJ1m5gZjHmV/slDwQtX7ETudINRiJ/u/EJ5AOkeOsddpFv
4BO30Ejhg3xQR3bsa73eA8zeXl+8kFMAGls23HRW6QOCi+PULZlFYLnqCo+4
fR+Iu1Y101ddBCQLvqX1xvWBhN1Xi+K+FYHbIWVlp8f6gJaLl+hDwWKQl1I8
la7fDz6nWE56xhcDB90z/GHL/eCdzVjP2+tPwGRRtuMJs0EAaNvzdyKlYLHb
gVTvOghc9py4Ci1KAYFLNl0tfBC0S1bFIldLAb9zVZNE6SBYdVLfMlJYCjSl
2mRZWH+A+DsJIS83lYGUYrbFZ2U/QLXXs3uO38rAsScOYaIbhoG1Pe/e+aJy
cLJHRihFeBjkT80IKzwtBxbkXyjl4DA4PagUaF9bDtxdQodXLIdBxfco2fiO
cpAmnabTTh8GCdcCvHlZaGD2yQfKbesRoIVotT45SwMZJTLpC5Wj4EXZLfob
Bg24kQWjl96PgosforcL/KEBdWeiz9r3URAkX6ZnTqCDXok2Iw72MdBx9AKt
kIcORB77cQqfHQPn+6W3+R2gg8dpdX5HF8dA1I99+fUudOC9VHJZh3McmDm6
XF7zooPjZvdNDHeMg+K8UqJ4AB2M8DnJmWqNg5RsiVtq0XQgEU8dd0oeB4vb
yozvPKaDJ5EWZgmKEyBobHx7eQcdBI4c1bqvNwHMotlp8DsdGB7ff+iB9QRo
MPirUP2DDmZIBJ68mxNAMNnxWwCDDg4E5Ta8aJ8AwyUb1jazo4DwPbayZmIC
ZPcWRkdzoeCzmm/Om7UJ4DW66d4kDwo8l/SCm/dMgl09+4a9hVBQ4T2rOHBt
EhCbFWbTZFEQ8aVLbOTWJGhRefPF8xAKTA6+4Z3MnATIIZZaRRUULDKSZhbe
ToJX0vFBYZooUHZWy+MQmALJ+Y8Ye41RwNEolsgtNQWe/Q2+ZW2Ggi4JShgv
mAJ/E1dfhliiwH+k30r48hR4Pd6UHXkRBdXnb/IdeDYFrmX5/s7wwl/P8/3L
cNMUYJ5M6A3wwfeD8gnpg1Pg0oKhikYACg7sGKBsoEyDCL08ZmgYCgyblZqr
d08DoSREa/UGCpwCY297qkyDY2y+T22iUZDTrcbRe3Ea8ES9eN91FwVYdMLb
e/7TIE6+VvtnAgp6lMcjdOOmgYXi+VxGEgr47ycTK6umwV0v+8qH6Si4debn
8m3eGeAuYbWrNRcF+SSdFxoSM+DsBNv9HQUoqKNl+vw+MgOWLx0xPV2EgjWq
wYKd4wzY9fqMh2MpCoRgNl0weAbcVDnw+EQ5ni+3JY+PiTPAJiO5aysdBVea
8qZVsBnAb/l37XwlCmIDVosZX2dA58ml971PUVAkaeyUOzkDXp0PMNB4joKG
riKJc0QGULUmeke/QMFQFHGUR4AB4CZOmWcvUUBUNst9K80ANJ0tDo1VKNgx
WnohUJMBIloyqW+qUaCWzLbroBkD5HpK8D56hQKz45b9o64MELkma3WxBgVX
F+iZGeEMcAsc6iVDFCTkbLQ6k8oAUqSKsDTcZUa2QhvLGKCZV0aZG0NBE/FZ
V00dAwwcEZ26iHu8nDvFu5sBOk6S7zzCzW578azkLANs5XNje4M7IdKKc5Y0
C/67LwKRvqjxRu5Z8N99DVgcUbykqLIev5f+Y/DRxfU4u5l6j2/Vuv23pH49
yfvz3+tz5hS548/O/Ys3fWo71po2/y9+5YPSnrv8i//8uOUY36V3f/75zpNn
BRsMVv6ZeK9N9w3b2j+PTETwHjJdW19fU+Hb44L1OHSLAVaf1+P0tOEcvuX1
eFnuSvVRVua/+JPyTe1XKExQbHi2qAF3QdVeRpYgEyhYVTa8wJ379gjHx11M
AO4Lz2fhzv58RvSvNBM0le0/5I87s8dRVVKJCXosbiXo4E4fDT5jpsEEjgZt
fFy4U+aSXG7qM4Gvckl9LX5+SavFNypMmGDDl6eFLv87X47XmYM2TLDlU8J7
Ltyxmzuf8TgxwaMfg9JZeD3c3jHzSd0bf75anW97cEftY51wCWKCgzsu9WTj
9RNxaBtLehQTKJX0KG3GHaSnpfD7ARNUHLQU/ozXn7+J5QnxfCaQji+o2IHb
x9bz8hkaE+yca6u3xevV41pmalk9E3jdNr7yGq9v19AK+vcWJmiVmtw2+Azv
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
biRc5Au2sG6l8+nWtsvr/u//Cf75/wAZFOJm
          "]]}, 
        {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1: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
9/++r4H/AQz2/Hw=
          "]]}, 
        {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJxF2Xk8VN/7AHDcmSHFKBV9qIRKSGUrkee2F1KpJCFFCCVFIjuJFlFSkbIO
Zi5aSFGdW4ikTbJl35cxY/vIln738/r24695vV/Pueeee+Z5nnter7vshIvJ
SSEBAYEbggIC//2qwcKeP3+YJDdG6jzufwkddFwZOjbOJA/5rb26qvQS8rqz
YcXQv0zyhl9yrvV8b1Tca36io5dJZvdZTuameyPre49qy6qY5BWdw68Eqn1Q
5IDSx/tZTFIiXbPk8DJ/NJykS2gcY5JRXx6oSqYGojyR42fs34iT4Tk+HoYL
QpHfp8ret8fFSBY3yig+8RbqTlkktV52DhmgX/i71/w+Um7cNYtZL0omhsCp
JRLxKFkyabgmcBYZILbt+JyUJFRwtPQGAhFyQmnf6Y8vWOhrsmT/jo0iZGPY
k2PGRSzU0Gdh8llThCx1ilL68I2FRv34C+tXiZCbzJUZrB4WUkueHz8uKUJK
XUhznJBJRTFcq6daXcKkhLFXuohPKjrrM1TJiRAmbRNrAg03pCHf93o6GteE
Sa2dEgaZW9PQNWZIbN5lYVIufbmy8N40xEqQtv7gJUzmGW74HXMyDf0s2tTd
YStMxsWLn9p9Kw3tEA+dWKYjTLqvnqOU052GZB/Jyt1rZpDvR7KK7SLSUcb9
ADGdOgbZGrOic0tMOtKP6hivqWSQad3lnyST09GxsMc/ZMoYZCIsfHU7Nx0l
nt927dFzBsmuNuSINqQjpV3OI6xrDPLxottGH5TYSHMgvyxHi0HmEVFHV+ew
UVGvXJ7pWgZZKHChJvQ1G5l2XE79pcwgNxfUXqwqYiOPn3sDdeQY5D9GFzv3
VLJRXlHr+teiDPLaRWHJhyNshMfMTipspJNSd6NlSE0OMtx61PN7GJ0cRl7P
MlkcpHzO49vXYDpZr5bc2UJwkGjC7VWf/ejki66ll0SfcVDJ1MeaEnc6GTW1
/Y4G4qAdeXob3xynk0MT5Y7cSg7C1y2ZSNOhk6oh8sDHCLTUeuMBliadBMMx
24OzCDQVbspJWkMn3a0FgRAn0Gtu+NGHy+lkgl59m8YiAm1M+5N/ey6dlKAb
lCWsJpDW0mZv324aKbZUOZN3gEDzjX9XXGqjkf43Hkp6mRFo2HvRas9GGmmw
XyHwlwWBntburz//g0ZujLmzt+QkgdZGv9t06i2NjPZK8icvEIhZ1HDH7hWN
5NXJYT+9CMQbGu+zyaWRG6SW6HT6Eihjv8ZDqwwaOVDxJaoihEDKYslTB+7T
SJk30Y2C0QSapUea7o+ikYqr7pen3SdQl2NdpvFNGvmKd1VhcxyBUkvmH9t9
mUY2Grhlb08mkGLwZaTvSiPnRLTZxT0hEO1ZgpSeM428K921+HM2gVqbX7vo
2FPr9zWo5+cSKBFGlmpa0sgziTYGjDfU/k3Y+a/aTSOro08/9flAIO4P++S8
rTSyvdzb36WMQC8eO5QY6tNI9S9Be/d+IdA+O0eJMxo0UiOB+7K6gkCym500
/6ymkZu2imwMrKLWK+NsFqFEjde/GbyolkD+307HP11MI4OrTLbMbSSQEXGm
cKs0jdTZsjvGtZlA0ldcuirm0cigh0tCUCuBnui5rv0lTLmwpkWhi0AtqW6k
7iBGdg/mqYv1Eygz0L2tjIuRkwvLOdUDBPKyvCBi1UnZMsswcohAkpIX9/nX
YaRL35oPH0YI1NR30W1uFUZqC924tnuUQESJ573EbxgZXa6g/3yMQNt8LzUV
vsfIMv1zm0wnCSRxxJtm+hYjf7Faz4T9JlCdho9SZz5G2tsImadPEShN3Nfo
4nOM3G6uMpDzh0Du3b5nZz3ByFeu+SuyBDLQlkK/qBgORo7eZPZFCWYg8Uf+
L1RYGLk8NljbXigD1XoG1L2Kx0gnT49/l2MZiHUwUMA4lrqfxHbZb5TPrQlS
bLyDkcM7DeIcaBlIXzR419kIjLxGa3PkUhZtD3YWvEbth6qLhwU9A1WhyxG3
LmPkhtRdOS8oJ8eEZCv4Y2TCkU8LBRkZ6Kz7lepsL4w0UTYP16Ksty90crs7
Rrr/MRQ3pSyiEiZX5YKRmuhP6AnKFfSr2xwcMXLrlb1Z/zm+6arDmO2MnfOv
Xb96bMY60dcfy5hj5Ja/LjcMH920dybuKBiBW2+bcVlVtHW39IxXZ8b5n+sT
mr4+JPLRYUVDoel4k1uCWmWa4LRPPYhMeuAoMG0z3yMKhPwU+n8r9a46evDh
xLSdjPddbmkdnbb5+b2btLVHpn0bde1Dz4fQ5r8GoWpTNcGB6XjDvf4HL6r7
p+27ZlbrlsczfmWx0eXwsX60/a8thkxymrVnPBHmNOEkPuOkrIHrxrT+6ftF
s/l6J4b5aIuB0ZAF5Y5/J46tbOKjiN+9D9dT1tosEsT9yEcc/4PxfOr/Db4+
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
          "]]}, 
        {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1: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
rfhcs4x3Ffz7vwTN+///JeD/ALwq1y0=
          "]]}, 
        {RGBColor[0.363898, 0.618501, 0.782349], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1: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
ZSWCf98noN/+/30C+D9F/EG1
          "]]}, 
        {RGBColor[1, 0.75, 0], AbsoluteThickness[1.6], Opacity[1.], 
         LineBox[CompressedData["
1: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
yNYlrNgrA6eroRjxhh4cy037/HJbBmYEmGlWhfbgvEVjTmt/pmM5IeqkQks3
lhtKKUpwTccpNvHaNX904UkZhykN5TS8q3vN7Req7fT1BH2+FZKCdTHVyox9
g4ddrJ8Pf4vBBqPO7l/c72PXdt4p+ZW+WDOGJ84IqQDXcuaqvwa8oayBe/OM
41vorqYqH5+MhScWjfqbn7VBt5zixnrjFODqbKod57SBdYJGhea+FFBUzrO5
vbQdFHiyUmcDUiBqKuiwUlA7OIZWj09dSQGydGmSqNJncAg08lIXSIW6Bd5d
7093QOC/Wbp2T1Kh8e3cOF+DLrjKrWYra6TBVFWQ1KojXeC1pnLXLjINNIo/
535J6QJH/bfqXg5pkBhdVrZ7uAuKMjzfuZxLg6LsUjZl1Q2N7m7TB9vSwMti
j8y5qW64v/nnaGxMOrBKrnvvdOyFfr3HX+oaMmCy3UvouV8vzGmegtH2DBCY
r0UZxvSC/p+Rf4pwM0DGt6pJ/U4v1PuaOHAWZ8JWzWYt4Tl9ULO6fUuZSyZk
l4pMPizrg717Llwe4GXC9lte51bOHYB6HQM3L4Fs2NWxTj5bYQCOo2WeeVLZ
4LTgW4Wk9gAUG5otrVLKhoBjZwemDw6Ajtdp+WIyG3LX5Jq33BuA947B9TZn
smH01ivJRJdBeHLx1bry79lw+fY6auLBECQu3DdftTkH/BfIJfx8OQSfbUws
VnbngLGvYNhM5xC8qjSoEGHnwBf1Zjsx0WGwUn32MEY4F5QKIsQVHIbBS3XN
ZrsNuVCQWxexbXIYuncbdajF50Lwz9ue5uIj8GvXWyL5Ui6YOmbZ2yiOgFKI
6so2lAuD0j4b9pmNwJsN5xKUy3NBPZUY8ckcAdJDVD38Uy7cOu/keEmXCe2r
5u1VUKYgcnCbWZYlEwYtY7NbNCiwMV27CbkwwSo55FjIRgq4QgJSRXFMOOe5
OsB1OwXrowobHrcwodG1NnPEgwKBzgsPaphM2HGIKVF/jIL/GIbn184wgQx1
84sLpuD4T8szr9VYIMm6lXovhoL7waO6PaEsiO6qUPv7KgWxH9pUB/9iQUmK
Q1bZDQrstWsXsfJYEGOvYpF0h4JJXgZ3op4FkbLFCrwqCvR9DYvEZNlgcGz/
ZsePFIg1qqZLaLLB/uYOX+/PFLSpS55bBGzY8c1A17mHgpOD3c4KnmwQfphl
xmZTUO0WJ73+IRvU/qMtViSEoE2q88NAExu+eY2d1hNDMIk3XqJ62ZD9Tju3
UALBesUeybmSHAhvuHFAVg6BzWu919UqHOjQTnm1bDkCn8gLiccNOLBD7UjY
1EoE+e2GYl88OHDB2VhupyYCRsKl+rSTHPA//b31qRaCDv2RWIsUDtzoFPVe
uAmBTFam4IMqDkjLXkrfZoTgrz1jU4mLuFAQZrx6zBLBDSHzxybqXHDMTz5P
7kRQV54X9n0LFxrPiPb77EYwQ1hPHPbmgqRwl5rtPgTy+Po9uTNcmBs33iru
hEDf/2fgm3Qu/Aqill09iCCoqYhjwOAC14hg7ndDcOHUP6W8j1xQ+HHRJMod
QYnGXp9CFheONkswIo8gaGgrUT8gyAMBss/S3hNBf7zgkJQsD5jFPg1zvREI
6jsW1q/hgcrpmWXpPggUh+64R27lQYfGT40pXwSGmSLK2o48+LXiQYeBHwJH
04PdQ348eNCYJL3HH0HIxL28yzE8+JbdXmkagOBS/jznPTk86Pvxo3xhIIIy
O1f5eWU8iHHc2v037SbBh201dTwYWrVQk74fh5G7EtnB7TyQe4vDkmiLuno4
aIzyQOdZcWk17UvnncVHhUbh9/0ZKHXFjzRKzNppi+5RXYNZp1F9vdc8Zi3q
aNwRXjXrk0tyPu5aNMZ3/lddiVSHr3w3vWve/j53nO+gV3pqF2UmQe63C95u
lz764gd/PenWw+K51tN8C6Y1W9SKzPA/L3uztKHAXID833rLjWgVkXhBvg+U
asQd7xXi24iaa/h81Ry++y4+nlSNFeH7vsoZ1soOUb6788O05ywX4/u9umn0
ePg8ctlvr8g1VXrxRJy/nlmy/6fBr/mk4m9/wFvbHtlL8Nd9n7rMX54tybdq
uY7n0uez7ri6oFb666wfyf0YTRMj+E5P6VNctGLWif4uJeWqsz5n3aazW4Pg
n1+Ext6no1oEKf/bgWJvrVN0CHLDG8mzDNqegxaftAwJcoFQyu5C2i51de5v
SYKUyhRTD6Ftfx14/mYE+emdxeL1tK2jK09KWhOk8E9V5RZ63ra56Ije2U2Q
q+193T1pbza6m2qzjyDbNLkDffS8blimuZxzkCAra6MeWdFW/1FYnHSYIN3c
uSN59HyvaFHatMaLID13SyZ00vMvc5/Cr/wI8khzWcFc2hKXZKx8TxDkqHaB
1fJjCOYEpraIRxBkSUV1kiKdn2mbBYdLogjyj8uNofPpfH3VPM+xiKXPT/eK
XL8X/f8NRc5JuEiQxik9NY5HEbQ+/35RPYMg33wZ657wQPAm/7j8i1yCVPou
MRlJ5/vJIS/tuUUEGXLlzqbdrvQ8bOl7UlRKkHeqP5667ILglryLhVk5QUrW
2Ix9pPsit3WP65/VBFlxPuT6/P0IUh+8Yak+I0iNzoZpMbpv4tMswuoaCHLj
hrs1X/ciCN0FF4Q/EKQj73x1oi0Cv7WVS/M/EWTh4FJpQ7q/PObrFG79QpAj
k3GLWq0Q2DVoVJ8dIchHkXp6H80QWBQW7ljJI8iwM8sj9bYjIGOUPjAmCDL1
gcq1OBMEem6Ui+sUQV49Iv/gmTGC389bSOP/f94C/wUNUL0w
          "]]}}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"\[Mu]\"", TraditionalForm], 
        FormBox["\"Torque\"", TraditionalForm]},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Epilog->{
        LineBox[{{1, 0}, {1, 1}}]},
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
      PlotLabel->None,
      PlotRange->{All, All},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], Scaled[{0.5, 0.5}], Center, 
     Scaled[{1, 1}]], InsetBox[
     TemplateBox[{"1","1.1`","1.2`","1.3`","1.4`","1.5`","1.6`","2"},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox["\"\[Sigma]=\"", {
                 GrayLevel[0], FontWeight -> Bold, FontSize -> 8, FontFamily -> 
                 "Arial"}, Background -> Automatic, StripOnInput -> False]}, {
              
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #6}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #7}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #8}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontWeight -> Bold, FontSize -> 8, FontFamily -> 
          "Arial"}, Background -> Automatic, StripOnInput -> False], 
        TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 0.75, 0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold", ",", "8"}], "}"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"\[Sigma]=\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{1, 0.55}], ImageScaled[{0, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->False,
   AxesLabel->{
     FormBox["\"\[Mu]\"", TraditionalForm], 
     FormBox["\"Torque\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->False,
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   ImagePadding->All,
   Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
   PlotLabel->FormBox["\"Triangular distribution\"", TraditionalForm],
   PlotRange->Automatic,
   PlotRangeClipping->False,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
YQ==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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

         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
mAJ/E1dfhliiwH+k30r48hR4Pd6UHXkRBdXnb/IdeDYFrmX5/s7wwl/P8/3L
cNMUYJ5M6A3wwfeD8gnpg1Pg0oKhikYACg7sGKBsoEyDCL08ZmgYCgyblZqr
d08DoSREa/UGCpwCY297qkyDY2y+T22iUZDTrcbRe3Ea8ES9eN91FwVYdMLb
e/7TIE6+VvtnAgp6lMcjdOOmgYXi+VxGEgr47ycTK6umwV0v+8qH6Si4debn
8m3eGeAuYbWrNRcF+SSdFxoSM+DsBNv9HQUoqKNl+vw+MgOWLx0xPV2EgjWq
wYKd4wzY9fqMh2MpCoRgNl0weAbcVDnw+EQ5ni+3JY+PiTPAJiO5aysdBVea
8qZVsBnAb/l37XwlCmIDVosZX2dA58ml971PUVAkaeyUOzkDXp0PMNB4joKG
riKJc0QGULUmeke/QMFQFHGUR4AB4CZOmWcvUUBUNst9K80ANJ0tDo1VKNgx
WnohUJMBIloyqW+qUaCWzLbroBkD5HpK8D56hQKz45b9o64MELkma3WxBgVX
F+iZGeEMcAsc6iVDFCTkbLQ6k8oAUqSKsDTcZUa2QhvLGKCZV0aZG0NBE/FZ
V00dAwwcEZ26iHu8nDvFu5sBOk6S7zzCzW578azkLANs5XNje4M7IdKKc5Y0
C/67LwKRvqjxRu5Z8N99DVgcUbykqLIev5f+Y/DRxfU4u5l6j2/Vuv23pH49
yfvz3+tz5hS548/O/Ys3fWo71po2/y9+5YPSnrv8i//8uOUY36V3f/75zpNn
BRsMVv6ZeK9N9w3b2j+PTETwHjJdW19fU+Hb44L1OHSLAVaf1+P0tOEcvuX1
eFnuSvVRVua/+JPyTe1XKExQbHi2qAF3QdVeRpYgEyhYVTa8wJ379gjHx11M
AO4Lz2fhzv58RvSvNBM0le0/5I87s8dRVVKJCXosbiXo4E4fDT5jpsEEjgZt
fFy4U+aSXG7qM4Gvckl9LX5+SavFNypMmGDDl6eFLv87X47XmYM2TLDlU8J7
Ltyxmzuf8TgxwaMfg9JZeD3c3jHzSd0bf75anW97cEftY51wCWKCgzsu9WTj
9RNxaBtLehQTKJX0KG3GHaSnpfD7ARNUHLQU/ozXn7+J5QnxfCaQji+o2IHb
x9bz8hkaE+yca6u3xevV41pmalk9E3jdNr7yGq9v19AK+vcWJmiVmtw2+Azv
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
biRc5Au2sG6l8+nWtsvr/u//Cf75/wAZFOJm
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
9/++r4H/AQz2/Hw=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1:eJxF2Xk8VN/7AHDcmSHFKBV9qIRKSGUrkee2F1KpJCFFCCVFIjuJFlFSkbIO
Zi5aSFGdW4ikTbJl35cxY/vIln738/r24695vV/Pueeee+Z5nnter7vshIvJ
SSEBAYEbggIC//2qwcKeP3+YJDdG6jzufwkddFwZOjbOJA/5rb26qvQS8rqz
YcXQv0zyhl9yrvV8b1Tca36io5dJZvdZTuameyPre49qy6qY5BWdw68Eqn1Q
5IDSx/tZTFIiXbPk8DJ/NJykS2gcY5JRXx6oSqYGojyR42fs34iT4Tk+HoYL
QpHfp8ret8fFSBY3yig+8RbqTlkktV52DhmgX/i71/w+Um7cNYtZL0omhsCp
JRLxKFkyabgmcBYZILbt+JyUJFRwtPQGAhFyQmnf6Y8vWOhrsmT/jo0iZGPY
k2PGRSzU0Gdh8llThCx1ilL68I2FRv34C+tXiZCbzJUZrB4WUkueHz8uKUJK
XUhznJBJRTFcq6daXcKkhLFXuohPKjrrM1TJiRAmbRNrAg03pCHf93o6GteE
Sa2dEgaZW9PQNWZIbN5lYVIufbmy8N40xEqQtv7gJUzmGW74HXMyDf0s2tTd
YStMxsWLn9p9Kw3tEA+dWKYjTLqvnqOU052GZB/Jyt1rZpDvR7KK7SLSUcb9
ADGdOgbZGrOic0tMOtKP6hivqWSQad3lnyST09GxsMc/ZMoYZCIsfHU7Nx0l
nt927dFzBsmuNuSINqQjpV3OI6xrDPLxottGH5TYSHMgvyxHi0HmEVFHV+ew
UVGvXJ7pWgZZKHChJvQ1G5l2XE79pcwgNxfUXqwqYiOPn3sDdeQY5D9GFzv3
VLJRXlHr+teiDPLaRWHJhyNshMfMTipspJNSd6NlSE0OMtx61PN7GJ0cRl7P
MlkcpHzO49vXYDpZr5bc2UJwkGjC7VWf/ejki66ll0SfcVDJ1MeaEnc6GTW1
/Y4G4qAdeXob3xynk0MT5Y7cSg7C1y2ZSNOhk6oh8sDHCLTUeuMBliadBMMx
24OzCDQVbspJWkMn3a0FgRAn0Gtu+NGHy+lkgl59m8YiAm1M+5N/ey6dlKAb
lCWsJpDW0mZv324aKbZUOZN3gEDzjX9XXGqjkf43Hkp6mRFo2HvRas9GGmmw
XyHwlwWBntburz//g0ZujLmzt+QkgdZGv9t06i2NjPZK8icvEIhZ1HDH7hWN
5NXJYT+9CMQbGu+zyaWRG6SW6HT6Eihjv8ZDqwwaOVDxJaoihEDKYslTB+7T
SJk30Y2C0QSapUea7o+ikYqr7pen3SdQl2NdpvFNGvmKd1VhcxyBUkvmH9t9
mUY2Grhlb08mkGLwZaTvSiPnRLTZxT0hEO1ZgpSeM428K921+HM2gVqbX7vo
2FPr9zWo5+cSKBFGlmpa0sgziTYGjDfU/k3Y+a/aTSOro08/9flAIO4P++S8
rTSyvdzb36WMQC8eO5QY6tNI9S9Be/d+IdA+O0eJMxo0UiOB+7K6gkCym500
/6ymkZu2imwMrKLWK+NsFqFEjde/GbyolkD+307HP11MI4OrTLbMbSSQEXGm
cKs0jdTZsjvGtZlA0ldcuirm0cigh0tCUCuBnui5rv0lTLmwpkWhi0AtqW6k
7iBGdg/mqYv1Eygz0L2tjIuRkwvLOdUDBPKyvCBi1UnZMsswcohAkpIX9/nX
YaRL35oPH0YI1NR30W1uFUZqC924tnuUQESJ573EbxgZXa6g/3yMQNt8LzUV
vsfIMv1zm0wnCSRxxJtm+hYjf7Faz4T9JlCdho9SZz5G2tsImadPEShN3Nfo
4nOM3G6uMpDzh0Du3b5nZz3ByFeu+SuyBDLQlkK/qBgORo7eZPZFCWYg8Uf+
L1RYGLk8NljbXigD1XoG1L2Kx0gnT49/l2MZiHUwUMA4lrqfxHbZb5TPrQlS
bLyDkcM7DeIcaBlIXzR419kIjLxGa3PkUhZtD3YWvEbth6qLhwU9A1WhyxG3
LmPkhtRdOS8oJ8eEZCv4Y2TCkU8LBRkZ6Kz7lepsL4w0UTYP16Ksty90crs7
Rrr/MRQ3pSyiEiZX5YKRmuhP6AnKFfSr2xwcMXLrlb1Z/zm+6arDmO2MnfOv
Xb96bMY60dcfy5hj5Ja/LjcMH920dybuKBiBW2+bcVlVtHW39IxXZ8b5n+sT
mr4+JPLRYUVDoel4k1uCWmWa4LRPPYhMeuAoMG0z3yMKhPwU+n8r9a46evDh
xLSdjPddbmkdnbb5+b2btLVHpn0bde1Dz4fQ5r8GoWpTNcGB6XjDvf4HL6r7
p+27ZlbrlsczfmWx0eXwsX60/a8thkxymrVnPBHmNOEkPuOkrIHrxrT+6ftF
s/l6J4b5aIuB0ZAF5Y5/J46tbOKjiN+9D9dT1tosEsT9yEcc/4PxfOr/Db4+
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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
rfhcs4x3Ffz7vwTN+///JeD/ALwq1y0=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
ZSWCf98noN/+/30C+D9F/EG1
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
yNYlrNgrA6eroRjxhh4cy037/HJbBmYEmGlWhfbgvEVjTmt/pmM5IeqkQks3
lhtKKUpwTccpNvHaNX904UkZhykN5TS8q3vN7Req7fT1BH2+FZKCdTHVyox9
g4ddrJ8Pf4vBBqPO7l/c72PXdt4p+ZW+WDOGJ84IqQDXcuaqvwa8oayBe/OM
41vorqYqH5+MhScWjfqbn7VBt5zixnrjFODqbKod57SBdYJGhea+FFBUzrO5
vbQdFHiyUmcDUiBqKuiwUlA7OIZWj09dSQGydGmSqNJncAg08lIXSIW6Bd5d
7093QOC/Wbp2T1Kh8e3cOF+DLrjKrWYra6TBVFWQ1KojXeC1pnLXLjINNIo/
535J6QJH/bfqXg5pkBhdVrZ7uAuKMjzfuZxLg6LsUjZl1Q2N7m7TB9vSwMti
j8y5qW64v/nnaGxMOrBKrnvvdOyFfr3HX+oaMmCy3UvouV8vzGmegtH2DBCY
r0UZxvSC/p+Rf4pwM0DGt6pJ/U4v1PuaOHAWZ8JWzWYt4Tl9ULO6fUuZSyZk
l4pMPizrg717Llwe4GXC9lte51bOHYB6HQM3L4Fs2NWxTj5bYQCOo2WeeVLZ
4LTgW4Wk9gAUG5otrVLKhoBjZwemDw6Ajtdp+WIyG3LX5Jq33BuA947B9TZn
smH01ivJRJdBeHLx1bry79lw+fY6auLBECQu3DdftTkH/BfIJfx8OQSfbUws
VnbngLGvYNhM5xC8qjSoEGHnwBf1Zjsx0WGwUn32MEY4F5QKIsQVHIbBS3XN
ZrsNuVCQWxexbXIYuncbdajF50Lwz9ue5uIj8GvXWyL5Ui6YOmbZ2yiOgFKI
6so2lAuD0j4b9pmNwJsN5xKUy3NBPZUY8ckcAdJDVD38Uy7cOu/keEmXCe2r
5u1VUKYgcnCbWZYlEwYtY7NbNCiwMV27CbkwwSo55FjIRgq4QgJSRXFMOOe5
OsB1OwXrowobHrcwodG1NnPEgwKBzgsPaphM2HGIKVF/jIL/GIbn184wgQx1
84sLpuD4T8szr9VYIMm6lXovhoL7waO6PaEsiO6qUPv7KgWxH9pUB/9iQUmK
Q1bZDQrstWsXsfJYEGOvYpF0h4JJXgZ3op4FkbLFCrwqCvR9DYvEZNlgcGz/
ZsePFIg1qqZLaLLB/uYOX+/PFLSpS55bBGzY8c1A17mHgpOD3c4KnmwQfphl
xmZTUO0WJ73+IRvU/qMtViSEoE2q88NAExu+eY2d1hNDMIk3XqJ62ZD9Tju3
UALBesUeybmSHAhvuHFAVg6BzWu919UqHOjQTnm1bDkCn8gLiccNOLBD7UjY
1EoE+e2GYl88OHDB2VhupyYCRsKl+rSTHPA//b31qRaCDv2RWIsUDtzoFPVe
uAmBTFam4IMqDkjLXkrfZoTgrz1jU4mLuFAQZrx6zBLBDSHzxybqXHDMTz5P
7kRQV54X9n0LFxrPiPb77EYwQ1hPHPbmgqRwl5rtPgTy+Po9uTNcmBs33iru
hEDf/2fgm3Qu/Aqill09iCCoqYhjwOAC14hg7ndDcOHUP6W8j1xQ+HHRJMod
QYnGXp9CFheONkswIo8gaGgrUT8gyAMBss/S3hNBf7zgkJQsD5jFPg1zvREI
6jsW1q/hgcrpmWXpPggUh+64R27lQYfGT40pXwSGmSLK2o48+LXiQYeBHwJH
04PdQ348eNCYJL3HH0HIxL28yzE8+JbdXmkagOBS/jznPTk86Pvxo3xhIIIy
O1f5eWU8iHHc2v037SbBh201dTwYWrVQk74fh5G7EtnB7TyQe4vDkmiLuno4
aIzyQOdZcWk17UvnncVHhUbh9/0ZKHXFjzRKzNppi+5RXYNZp1F9vdc8Zi3q
aNwRXjXrk0tyPu5aNMZ3/lddiVSHr3w3vWve/j53nO+gV3pqF2UmQe63C95u
lz764gd/PenWw+K51tN8C6Y1W9SKzPA/L3uztKHAXID833rLjWgVkXhBvg+U
asQd7xXi24iaa/h81Ry++y4+nlSNFeH7vsoZ1soOUb6788O05ywX4/u9umn0
ePg8ctlvr8g1VXrxRJy/nlmy/6fBr/mk4m9/wFvbHtlL8Nd9n7rMX54tybdq
uY7n0uez7ri6oFb666wfyf0YTRMj+E5P6VNctGLWif4uJeWqsz5n3aazW4Pg
n1+Ext6no1oEKf/bgWJvrVN0CHLDG8mzDNqegxaftAwJcoFQyu5C2i51de5v
SYKUyhRTD6Ftfx14/mYE+emdxeL1tK2jK09KWhOk8E9V5RZ63ra56Ije2U2Q
q+193T1pbza6m2qzjyDbNLkDffS8blimuZxzkCAra6MeWdFW/1FYnHSYIN3c
uSN59HyvaFHatMaLID13SyZ00vMvc5/Cr/wI8khzWcFc2hKXZKx8TxDkqHaB
1fJjCOYEpraIRxBkSUV1kiKdn2mbBYdLogjyj8uNofPpfH3VPM+xiKXPT/eK
XL8X/f8NRc5JuEiQxik9NY5HEbQ+/35RPYMg33wZ657wQPAm/7j8i1yCVPou
MRlJ5/vJIS/tuUUEGXLlzqbdrvQ8bOl7UlRKkHeqP5667ILglryLhVk5QUrW
2Ix9pPsit3WP65/VBFlxPuT6/P0IUh+8Yak+I0iNzoZpMbpv4tMswuoaCHLj
hrs1X/ciCN0FF4Q/EKQj73x1oi0Cv7WVS/M/EWTh4FJpQ7q/PObrFG79QpAj
k3GLWq0Q2DVoVJ8dIchHkXp6H80QWBQW7ljJI8iwM8sj9bYjIGOUPjAmCDL1
gcq1OBMEem6Ui+sUQV49Iv/gmTGC389bSOP/f94C/wUNUL0w
         "]]}}}, {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {"\[Mu]", "Torque"}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, Epilog -> {
        Line[{{1, 0}, {1, 1}}]}, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
      PlotLabel -> "Triangular distribution", PlotRange -> {All, All}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[1, 0.75, 0], 
         AbsoluteThickness[1.6]]}, {1, 1.1, 1.2, 1.3, 1.4, 1.5, 1.6, 2}, 
       LabelStyle -> {
         GrayLevel[0], Bold, 8}, LegendLabel -> "\[Sigma]=", LegendLayout -> 
       "Column"]], {1, 0.55}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.684541948297085*^9, {3.684541979631719*^9, 3.6845420339731903`*^9}, 
   3.6845421227183447`*^9, 3.684634501280901*^9, 3.684635726015329*^9, 
   3.6846680494755287`*^9, 3.684674595005321*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"Brown", ",", "\[IndentingNewLine]", 
        RowBox[{"Rectangle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{
             RowBox[{"-", "1"}], "/", "10"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", "Blue", ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
        "Red", ",", 
        RowBox[{"Polygon", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{".75", ",", 
             RowBox[{"-", "4"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.25", ",", 
             RowBox[{"-", "4"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.25", ",", 
             RowBox[{"-", "3"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.75", ",", 
             RowBox[{"-", "3"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"-", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "/", "4"}], ",", 
             RowBox[{"-", "3"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{".75", ",", 
             RowBox[{"-", "3"}]}], "}"}]}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", "Black", ",", 
        RowBox[{"PointSize", "[", "Tiny", "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{
           RowBox[{"MultinormalDistribution", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"-", "5"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\[Sigma]", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "\[Sigma]"}], "}"}]}], "}"}]}], "]"}], ",", 
           
           RowBox[{"10", "^", "3"}]}], "]"}], "]"}]}], "\[IndentingNewLine]", 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "8"}], ",", "2"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Sigma]", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "/", "50"}], ",", 
        RowBox[{"1", "/", "10"}], ",", 
        RowBox[{"1", "/", "2"}], ",", "1", ",", "2"}], "}"}]}], "}"}]}], 
   "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.676470766623321*^9, 3.676471003872978*^9}, {
   3.676471049882092*^9, 3.676471065234427*^9}, {3.676471129297615*^9, 
   3.676471149504457*^9}, {3.6764711932820797`*^9, 3.6764713150200872`*^9}, 
   3.676471922923559*^9, 3.676471966073427*^9},
 CellID->54126742],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{
     {RGBColor[0.6, 0.4, 0.2], 
      RectangleBox[NCache[{-1, Rational[-1, 10]}, {-1, -0.1}], 
       NCache[{1, Rational[1, 10]}, {1, 0.1}]]}, 
     {RGBColor[0, 0, 1], PointBox[{0, 0}]}, 
     {RGBColor[1, 0, 0], 
      PolygonBox[
       NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
         Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
         1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]]}, 
     {GrayLevel[0], PointSize[Tiny], PointBox[CompressedData["
1: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
bztynws3LqyztcX55z8ZbjlA
       "]]}},
    AxesOrigin->{0, 0},
    PlotRange->{{-2, 3}, {-8, 2}}], ",", 
   GraphicsBox[{
     {RGBColor[0.6, 0.4, 0.2], 
      RectangleBox[NCache[{-1, Rational[-1, 10]}, {-1, -0.1}], 
       NCache[{1, Rational[1, 10]}, {1, 0.1}]]}, 
     {RGBColor[0, 0, 1], PointBox[{0, 0}]}, 
     {RGBColor[1, 0, 0], 
      PolygonBox[
       NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
         Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
         1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]]}, 
     {GrayLevel[0], PointSize[Tiny], PointBox[CompressedData["
1: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
Ow6g
       "]]}},
    AxesOrigin->{0, 0},
    PlotRange->{{-2, 3}, {-8, 2}}], ",", 
   GraphicsBox[{
     {RGBColor[0.6, 0.4, 0.2], 
      RectangleBox[NCache[{-1, Rational[-1, 10]}, {-1, -0.1}], 
       NCache[{1, Rational[1, 10]}, {1, 0.1}]]}, 
     {RGBColor[0, 0, 1], PointBox[{0, 0}]}, 
     {RGBColor[1, 0, 0], 
      PolygonBox[
       NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
         Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
         1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]]}, 
     {GrayLevel[0], PointSize[Tiny], PointBox[CompressedData["
1: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
pvmXpo+Mgu+XiT/r8taiimBJ6jelz+xrNdIh+9/SMfRE+2V5Tm5Wm2FxlMpv
Ch51i1H6qtAOdjv2jb7pp2KUj9OLIMoK1jG3z1cXtjHQpyLr83Y9ThaXNGuI
/JOKtw5kF9I95uCwB+uF33VRTLrtRjUYmASZM5YVfX2iuNCqM3AyegkGXv5r
WdRgIP85Hlfu1llYvmR/xrOYjrayAtKcLp3wyNN+Z6IaA11WBQiTdbpBIkHO
oMaOhivGK86OrxmAJ2dVJI7LE58fuv31yoo5eJ06x3ugmIpHk7dU9053s/dN
/LxqT+TZms0fnz6Un2QfHW3LcTGgY17yJcuIxna45zKe8t8Voj/xHcVxaQD0
alhFGzNJeLfmtNwDHz5Wiu8jl0BPOtLcjY7FOf0Bqdb2XeIDZAz6uu7IRN0M
dI2Z77mvT+TLVs1mOftiKA1v2Kc/QcekqfCbLskEny/f9o7SZeA3ZS6f4pAJ
2JjeTzpUSceihfSPXM7VoGUjvu4WBwX5SjQTlcS7YYnXcY3fLhIa/9ZSGB7g
YLkzu4PjZEVwYqFojxThu5x7jzzxO0BGOw/ZIhfLEYg6udntBkUUdzAj/AON
JmCLijX15hYhJIU2HDhvPwEn38+vNcgn7nv/4ak+yxnIENGa5HpIRxWLgged
G1rZ3JY32NpE/8eESM+u0V0EUT+hZiddYRztvyjWq9kBS75Xdso4UDDUtcLL
K2oeTn9yGKmm0lD5qxBnm9ksvLxjEtCRQMfIq3ev/ZiYAocN/YdoFDpySH0q
StCqYt9TrRgVvU34gstDpyNdU0C+dkDmjCwDtwZFD7ZkzIKMvKF4wG8y/rBT
DWEPDQGP5NIk35w4isY+2ZtpWst2735/X7CA8AVNjj3X9xWwf/31Npy+SMbv
Tt/v5xiNwUC2/cNHxHsm9/4a6Vb/xC5NvVF/R5qKU2trbueVLUPa5e41rTdX
obV43nJ/WC90vOeT/fGNiikPRqkMzkIQCn5s+peTintFg939w8Yh5ODOxI+T
VOTmHXAtvlQG5yuuc11LIPJv/dRmQcUGoK3UvyPGRcKgq6cSDxvMwoX5ox9m
NpEx/7BETYrWNIz1aEabB1NQvtq5y8pjFIy/Ke4OIngmpldwpU5xB9vk7NZY
cyoTVfhOb9XatQjXY7vuriF4ZWT4Qf/I7wVIfcrXmF1Mwb7Du740viD2Y+uG
oq9cBO89ZmfGl32EvOqUTuc1JFyV1dc8MzQCEq8qMm1mCF/4KrmclDgK7H3i
3jzWdPwfOC0Fkg==
       "]]}},
    AxesOrigin->{0, 0},
    PlotRange->{{-2, 3}, {-8, 2}}], ",", 
   GraphicsBox[{
     {RGBColor[0.6, 0.4, 0.2], 
      RectangleBox[NCache[{-1, Rational[-1, 10]}, {-1, -0.1}], 
       NCache[{1, Rational[1, 10]}, {1, 0.1}]]}, 
     {RGBColor[0, 0, 1], PointBox[{0, 0}]}, 
     {RGBColor[1, 0, 0], 
      PolygonBox[
       NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
         Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
         1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]]}, 
     {GrayLevel[0], PointSize[Tiny], PointBox[CompressedData["
1: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
7tqLBTL8D9cqt5M=
       "]]}},
    AxesOrigin->{0, 0},
    PlotRange->{{-2, 3}, {-8, 2}}], ",", 
   GraphicsBox[{
     {RGBColor[0.6, 0.4, 0.2], 
      RectangleBox[NCache[{-1, Rational[-1, 10]}, {-1, -0.1}], 
       NCache[{1, Rational[1, 10]}, {1, 0.1}]]}, 
     {RGBColor[0, 0, 1], PointBox[{0, 0}]}, 
     {RGBColor[1, 0, 0], 
      PolygonBox[
       NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
         Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
         1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]]}, 
     {GrayLevel[0], PointSize[Tiny], PointBox[CompressedData["
1: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
       "]]}},
    AxesOrigin->{0, 0},
    PlotRange->{{-2, 3}, {-8, 2}}]}], "}"}]], "Output",
 CellChangeTimes->{{3.676470783775257*^9, 3.6764707939130287`*^9}, {
   3.676470829920199*^9, 3.6764708640944843`*^9}, {3.676470903722499*^9, 
   3.67647093557904*^9}, {3.6764709802999067`*^9, 3.676471004411406*^9}, {
   3.676471050842946*^9, 3.6764710656836853`*^9}, {3.676471131653288*^9, 
   3.6764711501049232`*^9}, {3.676471297459279*^9, 3.6764713164277487`*^9}, 
   3.676471923491651*^9, 3.6764719665285807`*^9, 3.684634501349966*^9, 
   3.684635726265483*^9, 3.684668049526926*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{".75", ",", 
     RowBox[{"-", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.25", ",", 
     RowBox[{"-", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.25", ",", 
     RowBox[{"-", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.75", ",", 
     RowBox[{"-", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "/", "4"}], ",", 
     RowBox[{"-", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{".75", ",", 
     RowBox[{"-", "3"}]}], "}"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.6764713623800364`*^9, 3.676471367359054*^9}, {
  3.6764714279189*^9, 3.676471434549323*^9}, {3.676471483974584*^9, 
  3.676471491130146*^9}, {3.6764715213396587`*^9, 3.6764715220939903`*^9}, {
  3.676471886330518*^9, 3.676471958465077*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.75`", ",", 
     RowBox[{"-", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.25`", ",", 
     RowBox[{"-", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.25`", ",", 
     RowBox[{"-", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.75`", ",", 
     RowBox[{"-", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "4"], ",", 
     RowBox[{"-", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.75`", ",", 
     RowBox[{"-", "3"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6764713678019037`*^9, 3.676471434956658*^9, 
  3.676471491934902*^9, 3.676471522490788*^9, 3.6764719147354183`*^9, 
  3.6764719588293467`*^9, 3.684634501401786*^9, 3.684635726302536*^9, 
  3.684668049579864*^9}]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "Problem 3:  given a variance \[Sigma] if you push at location \[Mu], with \
velocity ",
 StyleBox["v",
  FontSlant->"Italic"],
 " (everyone not in contact with the object moves at velocity ",
 StyleBox["v",
  FontSlant->"Italic"],
 ") , and variance bound ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Sigma]", "max"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", how long before you need to switch to variance control mode?"
}], "Subsection",
 CellChangeTimes->{{3.676456729376965*^9, 3.676456792954073*^9}, {
  3.676462023205823*^9, 3.676462123761077*^9}, {3.676462183093297*^9, 
  3.676462186933276*^9}, {3.6764622615292883`*^9, 3.676462261794133*^9}, {
  3.6767079936854773`*^9, 3.676707994070787*^9}, {3.678013488380001*^9, 
  3.678013506864674*^9}, {3.678013813226904*^9, 3.6780138627633266`*^9}, {
  3.6780151844238043`*^9, 3.6780152766910753`*^9}}]
}, Open  ]]
},
WindowSize->{1920, 1035},
WindowMargins->{{Automatic, 1280}, {Automatic, -119}},
Magnification->1.5,
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September 9, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1363, 31, 414, "Section"],
Cell[CellGroupData[{
Cell[1968, 57, 684, 11, 102, "Subsection"],
Cell[CellGroupData[{
Cell[2677, 72, 294, 7, 43, "Input"],
Cell[2974, 81, 195, 4, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3206, 90, 551, 16, 59, "Input"],
Cell[3760, 108, 2404, 69, 131, "Output"]
}, Open  ]],
Cell[6179, 180, 790, 23, 106, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[6994, 207, 1457, 37, 94, "Input"],
Cell[8454, 246, 48307, 816, 361, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56798, 1067, 48215, 815, 361, "Input"],
Cell[105016, 1884, 48265, 816, 361, "Output"]
}, Open  ]],
Cell[153296, 2703, 2812, 76, 135, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[156133, 2783, 1779, 44, 94, "Input"],
Cell[157915, 2829, 66935, 1209, 361, "Output"]
}, Open  ]],
Cell[224865, 4041, 2446, 65, 89, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[227336, 4110, 1937, 47, 119, "Input"],
Cell[229276, 4159, 42500, 832, 364, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[271813, 4996, 233, 6, 71, "Input"],
Cell[272049, 5004, 11205, 327, 553, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[283291, 5336, 12339, 332, 583, "Input"],
Cell[295633, 5670, 7030, 206, 339, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[302700, 5881, 7852, 216, 399, "Input"],
Cell[310555, 6099, 6980, 204, 339, "Output"]
}, Open  ]],
Cell[317550, 6306, 7203, 205, 359, "Input"],
Cell[324756, 6513, 5053, 141, 353, "Input"],
Cell[CellGroupData[{
Cell[329834, 6658, 297, 8, 79, "Input"],
Cell[330134, 6668, 449, 13, 75, "Output"]
}, Open  ]],
Cell[330598, 6684, 1208, 36, 128, "Input"],
Cell[331809, 6722, 1381, 43, 126, "Input"],
Cell[CellGroupData[{
Cell[333215, 6769, 2393, 64, 176, "Input"],
Cell[335611, 6835, 237269, 4056, 395, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[572917, 10896, 2661, 68, 191, "Input"],
Cell[575581, 10966, 113099, 2019, 396, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[688717, 12990, 2636, 67, 176, "Input"],
Cell[691356, 13059, 84825, 1560, 395, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[776218, 14624, 1927, 50, 131, "Input"],
Cell[778148, 14676, 36306, 682, 326, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[814491, 15363, 343, 8, 43, "Input"],
Cell[814837, 15373, 6042, 182, 337, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[820916, 15560, 582, 13, 75, "Input"],
Cell[821501, 15575, 630, 13, 34, "Message"],
Cell[822134, 15590, 399, 9, 43, "Output"],
Cell[822536, 15601, 231, 3, 43, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[822816, 15610, 157, 2, 65, "Subsection"],
Cell[CellGroupData[{
Cell[822998, 15616, 2196, 59, 176, "Input"],
Cell[825197, 15677, 728, 14, 59, "Message"],
Cell[825928, 15693, 276, 6, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[826241, 15704, 2426, 62, 147, "Input"],
Cell[828670, 15768, 732, 14, 59, "Message"],
Cell[829405, 15784, 730, 14, 59, "Message"],
Cell[830138, 15800, 730, 14, 59, "Message"],
Cell[830871, 15816, 584, 12, 34, "Message"],
Cell[831458, 15830, 494, 10, 43, "Output"],
Cell[831955, 15842, 730, 14, 59, "Message"],
Cell[832688, 15858, 729, 14, 59, "Message"],
Cell[833420, 15874, 730, 14, 59, "Message"],
Cell[834153, 15890, 586, 12, 34, "Message"],
Cell[834742, 15904, 574, 11, 34, "Message"],
Cell[835319, 15917, 572, 11, 34, "Message"],
Cell[835894, 15930, 574, 11, 34, "Message"],
Cell[836471, 15943, 583, 12, 34, "Message"],
Cell[837057, 15957, 497, 10, 43, "Output"]
}, Open  ]],
Cell[837569, 15970, 192, 6, 43, "Input"],
Cell[CellGroupData[{
Cell[837786, 15980, 1089, 27, 69, "Input"],
Cell[838878, 16009, 728, 14, 59, "Message"],
Cell[839609, 16025, 730, 14, 59, "Message"],
Cell[840342, 16041, 570, 11, 34, "Message"],
Cell[840915, 16054, 728, 14, 59, "Message"],
Cell[841646, 16070, 581, 12, 34, "Message"],
Cell[842230, 16084, 351, 8, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[842618, 16097, 1389, 32, 69, "Input"],
Cell[844010, 16131, 728, 14, 59, "Message"],
Cell[844741, 16147, 730, 14, 59, "Message"],
Cell[845474, 16163, 730, 14, 59, "Message"],
Cell[846207, 16179, 582, 12, 34, "Message"],
Cell[846792, 16193, 256, 6, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[847085, 16204, 8552, 199, 654, "Input"],
Cell[855640, 16405, 56778, 1032, 390, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[912455, 17442, 56852, 1034, 390, "Input"],
Cell[969310, 18478, 57016, 1037, 390, "Output"]
}, Open  ]],
Cell[1026341, 19518, 207, 4, 55, "Text"],
Cell[1026551, 19524, 2716, 78, 194, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[1029292, 19606, 3201, 89, 219, "Input",
 CellID->70294289],
Cell[1032496, 19697, 86197, 1431, 348, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1118742, 21134, 198, 4, 65, "Subsection"],
Cell[1118943, 21140, 1609, 49, 160, "Input"],
Cell[CellGroupData[{
Cell[1120577, 21193, 842, 21, 70, "Input"],
Cell[1121422, 21216, 9597, 286, 521, "Output"]
}, Open  ]],
Cell[1131034, 21505, 10006, 289, 547, "Input"],
Cell[1141043, 21796, 5152, 143, 353, "Input"],
Cell[CellGroupData[{
Cell[1146220, 21943, 297, 8, 79, "Input"],
Cell[1146520, 21953, 444, 13, 75, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1147001, 21971, 184, 4, 43, "Input"],
Cell[1147188, 21977, 253, 5, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1147478, 21987, 1947, 49, 119, "Input"],
Cell[1149428, 22038, 73347, 1307, 316, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1222812, 23350, 2711, 68, 176, "Input"],
Cell[1225526, 23420, 94980, 1732, 323, "Output"]
}, Open  ]],
Cell[1320521, 25155, 1286, 38, 128, "Input"],
Cell[CellGroupData[{
Cell[1321832, 25197, 2270, 61, 176, "Input"],
Cell[1324105, 25260, 728, 14, 59, "Message"],
Cell[1324836, 25276, 728, 14, 59, "Message"],
Cell[1325567, 25292, 569, 11, 34, "Message"],
Cell[1326139, 25305, 728, 14, 59, "Message"],
Cell[1326870, 25321, 584, 12, 34, "Message"],
Cell[1327457, 25335, 254, 6, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1327748, 25346, 1717, 38, 100, "Input"],
Cell[1329468, 25386, 728, 14, 59, "Message"],
Cell[1330199, 25402, 730, 14, 59, "Message"],
Cell[1330932, 25418, 570, 11, 34, "Message"],
Cell[1331505, 25431, 728, 14, 59, "Message"],
Cell[1332236, 25447, 582, 12, 34, "Message"],
Cell[1332821, 25461, 570, 11, 34, "Message"],
Cell[1333394, 25474, 569, 11, 34, "Message"],
Cell[1333966, 25487, 570, 11, 34, "Message"],
Cell[1334539, 25500, 581, 12, 34, "Message"],
Cell[1335123, 25514, 590, 11, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1335750, 25530, 897, 24, 69, "Input"],
Cell[1336650, 25556, 728, 14, 59, "Message"],
Cell[1337381, 25572, 728, 14, 59, "Message"],
Cell[1338112, 25588, 570, 11, 34, "Message"],
Cell[1338685, 25601, 730, 14, 59, "Message"],
Cell[1339418, 25617, 584, 12, 34, "Message"],
Cell[1340005, 25631, 570, 11, 34, "Message"],
Cell[1340578, 25644, 569, 11, 34, "Message"],
Cell[1341150, 25657, 570, 11, 34, "Message"],
Cell[1341723, 25670, 581, 12, 34, "Message"],
Cell[1342307, 25684, 274, 6, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1342618, 25695, 1250, 32, 100, "Input"],
Cell[1343871, 25729, 730, 14, 59, "Message"],
Cell[1344604, 25745, 728, 14, 59, "Message"],
Cell[1345335, 25761, 730, 14, 59, "Message"],
Cell[1346068, 25777, 584, 12, 34, "Message"],
Cell[1346655, 25791, 571, 11, 34, "Message"],
Cell[1347229, 25804, 421, 9, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1347687, 25818, 7123, 175, 547, "Input"],
Cell[1354813, 25995, 34925, 666, 347, "Output"],
Cell[1389741, 26663, 41122, 793, 324, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1430900, 27461, 1593, 43, 144, "Input"],
Cell[1432496, 27506, 30895, 631, 313, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1463428, 28142, 2633, 64, 169, "Input"],
Cell[1466064, 28208, 178038, 3132, 335, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1644139, 31345, 3322, 91, 244, "Input",
 CellID->54126742],
Cell[1647464, 31438, 107345, 1783, 348, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1754846, 33226, 914, 28, 43, "Input"],
Cell[1755763, 33256, 890, 28, 65, "Output"]
}, Open  ]]
}, Open  ]],
Cell[1756680, 33288, 888, 20, 103, "Subsection"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
