(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1386537,      26742]
NotebookOptionsPosition[   1378192,      26496]
NotebookOutlinePosition[   1378569,      26513]
CellTagsIndexPosition[   1378526,      26510]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 "Problems: Torque Control With a Swarm of Norm,Triangularly,Uniform \
distributed Particles Under Global Control\n\n",
 StyleBox["Given a swarm of particles, whose positions are normally \
distributed, and a pivoted object, where should the swarm hit to generate the \
maximum torque?",
  FontSize->16],
 "\n",
 StyleBox["related problem:  shooting a railroad track switch with a shotgun. \
\nF = force provided by entire swarm\nN = number of particles\nF/N = force \
per particle\n",
  FontSize->16],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"]}], "/", 
     RowBox[{"(", 
      RowBox[{"2", 
       SuperscriptBox["\[Sigma]", "2"]}], ")"}]}]], TraditionalForm]], 
  "InlineMath"]
}], "Section",
 CellChangeTimes->{{3.676456729376965*^9, 3.676456792954073*^9}, {
  3.676462023205823*^9, 3.676462123761077*^9}, {3.676462183093297*^9, 
  3.676462186933276*^9}, {3.6764622615292883`*^9, 3.676462261794133*^9}, {
  3.6767079936854773`*^9, 3.676707994070787*^9}, {3.678013488380001*^9, 
  3.678013506864674*^9}, {3.678013813226904*^9, 3.6780138627633266`*^9}, {
  3.6780154731946793`*^9, 3.678015503683338*^9}, {3.684533968985187*^9, 
  3.684533971087208*^9}, {3.684542163365937*^9, 3.684542167980525*^9}}],

Cell[CellGroupData[{

Cell["\<\
Problem 1:  marginalizing to 1 dimension, not thinking about distributed time \
of impact
this is only a one-pass of the swarm at the object.  The kilobots are pushing \
continuously.  (math is for one step, real world is an iterative process)\
\>", "Subsection",
 CellChangeTimes->{{3.676456729376965*^9, 3.676456792954073*^9}, {
  3.676462023205823*^9, 3.676462123761077*^9}, {3.676462183093297*^9, 
  3.676462186933276*^9}, {3.6764622615292883`*^9, 3.676462261794133*^9}, {
  3.6767079936854773`*^9, 3.676707994070787*^9}, {3.678013488380001*^9, 
  3.678013506864674*^9}, {3.678013813226904*^9, 3.6780138627633266`*^9}, {
  3.6780154731946793`*^9, 3.678015502323708*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StandardDeviation", "[", 
  RowBox[{"TriangularDistribution", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Mu]", "-", "b"}], ",", 
     RowBox[{"\[Mu]", "+", "b"}]}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.684532736145203*^9, 3.684532744580744*^9}}],

Cell[BoxData[
 FractionBox["b", 
  SqrtBox["6"]]], "Output",
 CellChangeTimes->{{3.684532738975494*^9, 3.684532745205942*^9}, 
   3.68463443986845*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"PDF", "[", 
   RowBox[{
    RowBox[{"TriangularDistribution", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Mu]", "-", 
        RowBox[{
         SqrtBox["6"], "\[Sigma]"}]}], ",", 
       RowBox[{"\[Mu]", "+", 
        RowBox[{
         SqrtBox["6"], "\[Sigma]"}]}]}], "}"}], "]"}], ",", "x"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.684532574058216*^9, 3.684532603591757*^9}, {
  3.68453271452549*^9, 3.6845327153553267`*^9}, {3.684532754129568*^9, 
  3.684532765505777*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        FractionBox[
         RowBox[{"x", "-", "\[Mu]", "+", 
          RowBox[{
           SqrtBox["6"], " ", "\[Sigma]"}]}], 
         RowBox[{"6", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", "-", 
          RowBox[{
           SqrtBox["6"], " ", "\[Sigma]"}]}], "\[LessEqual]", "x", 
         "\[LessEqual]", "\[Mu]"}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"-", "x"}], "+", "\[Mu]", "+", 
          RowBox[{
           SqrtBox["6"], " ", "\[Sigma]"}]}], 
         RowBox[{"6", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{"\[Mu]", "<", "x", "\[LessEqual]", 
         RowBox[{"\[Mu]", "+", 
          RowBox[{
           SqrtBox["6"], " ", "\[Sigma]"}]}]}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.684532570795553*^9, 3.684532603974053*^9}, 
   3.684532715804618*^9, 3.68453276621266*^9, 3.684634440145928*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"pdfNormal", "[", 
    RowBox[{"x_", ",", "\[Mu]_", ",", "\[Sigma]_"}], "]"}], ":=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{
      SqrtBox[
       RowBox[{"2", " ", "\[Pi]"}]], " ", "\[Sigma]"}]], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"x", "-", "\[Mu]"}], ")"}], "2"]}], "/", 
      RowBox[{"(", 
       RowBox[{"2", 
        SuperscriptBox["\[Sigma]", "2"]}], ")"}]}]], " "}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.6764622317264*^9, {3.676462275865959*^9, 3.676462333498724*^9}, {
   3.676462386203244*^9, 3.676462388994298*^9}, {3.6764661175139837`*^9, 
   3.676466119114414*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"pdfNormal", "[", 
      RowBox[{"x", ",", "1", ",", "\[Sigma]"}], "]"}], "/.", 
     RowBox[{"\[Sigma]", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "/", "2"}], ",", "1", ",", "2", ",", "5", ",", "10"}], 
       "}"}]}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "4"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6764623486045923`*^9, 3.676462394184904*^9}, {
  3.67646603305241*^9, 3.676466039085231*^9}, {3.676467095974711*^9, 
  3.676467144451521*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
NJBTa/q0VoM40aX7eZS8jj1PX9NaOq1OnOdwuqLEuoZtLu6ZND5nTVzRqzY1
o17BnattdjvTQoiQdxRlRjuX8CA6L5L4J4OQCZzdZnRqAc8PnepKiaggmpz3
5AgdncPd3DNWmak9RM3V4LtHz89g05GuI+zCK4RRp8GCiuIUzo85sfz1OxeE
OhgTH4CM61Lt2sPmJECYQ9agt2AUC6blCXI5K4HINdHWoYwhPN6g/bflgz5o
97SKvGnvw9ubuNh4O6zB3Yz+3O3d3bjJ4MTIvkv3QIpWVTJerBVTtSjxpjWF
QsFlh2s+z+px2h4tEzaZBNB6Y15f0vQVr14rr8B6r0GoWjjU42gKFhenb7T5
/An0NToeCzjlAU1NlEF2VRl8k0jbp+74HdiurN8TpKiFgJKDRrEhPcB+rUIh
dLwbRlX/5LddGIBXpJ+aPUr9oP+O2SH82jB0XC96dZ96CGJGvI39ZcZhnKZA
XcV0Y36PJE4ULpLB8GLTwbZLJODa7Ttxa30KJrNitPhrB8Eq7ZFnXd8MKHX8
Vh081A8UN/7oLTUsAVOnIJ+wdQN8P/pzfLx9BQpYPlxmZKoBz/FBQZryNaBr
I41/jC+Dy5x7pIO1KBAWr2kaDf4Et0XyDmVfoETRT4JZLKhfg9XxAxzvlanQ
woMkvbiziWAGXj9/nKVGkWfaTb7cCYWaosG/8/I0yNtLfjfjSU9YcCNb7ZGg
RV2MGX01726BiERHw83DdOitTfjeit36cKjr9cGgffTIIMWJz1xaGa7VVqaJ
iTEgW7nq9IJ4cagRP1uSeIgRXbU49qb/6w5gCskqHeZnQq0zVScbzFYJte7p
OJ09zOjedMzTzqVuYv21WnkNFwvq+ClUf8n6G+H8UdFZmZYVZa3zFjyZzyRG
PwmsNNOzocMTV5XhUzDBYIJ5/ZbY0GwO55jGSRvCbD7EqGB9DVMYvGwvszEk
eq8FK1TSr+LPLfuovsp5ELl3TqET7Mv4FdP5t22WccQ9vtRPa2KLWMRyeIi5
4BMRLuWmkHd8Hg9e+ffNTb6BGB9e76tVnMX/GXfrfT9LJjT/O0t6qjqNC2X1
iAtLDODZonrXCU3idsYl34SAPdDqqvHQOnEcWwnc+Tr19gR8Fghp0coexnK6
9onfzp6Hw+ySpmtlA1ialF7x+b0FJPErNemt9+DfKnF6u/ScQVbUrI9PuhNb
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
6S3PtdfNODQkwqa3tNUct3jsmrrlLXPmvt8MiMnc8pYmB50CIorfb3lLsfHM
I1/3f9jyllKDf2J9yJ+3vKXtiWQTEcBb3tI2qzh9Z0PZ/7zlU2tSOfe3LW8Z
pj309Hlr9Za3bKr8cjkmp3bLW74YfLGj7lXdlrcMOJZFpR9dv+UtdbkvPxNW
/Z+3fNL01dNuqnHLWxZofr2rp/d3y1vyDjOZPjNq3vKWCwMpY08FW7a85b21
ad1Ej5Ytbxklocv66l7LlrdMteOWmuZr2fKWZqBzS/Ra85a31Ev53Sp55u+W
t1QSCDVn6W7c8pbRR1BrrOH/vGWBP2WtfWD9lrfcn9M4NFNUt+UtLx89EXm3
q3bLW3IX+oT4UX7f8pb84kTwA79vW96SlsxdeXyhbMtb1pdHqOxtwVveMqHA
0+q2S8GWt7QZ+f3yseaHLW/JkLzuLHwge8tbMmbfWZL4kLnlLZmF+Si4H6Vu
eUvKnIow3cIk2PSWCR1O42zPnsKmtxQMDdPlT4mATW8Z7OVyx3R/EGx6S216
2ojKBB/Y9JZFcmK/eD67w6a3rPi/62HTW+KjN6ldklxg01v2hl0U2vHdEza9
pbjgvrEXL/xg01s+dq2/oxXwCDa9pXnSJW3ubVGw6S13MQsXig3Gwqa3zFM7
HLKtJnnLW15t0eOhN0vf8pYNCjNR+n1vIChX13fhZhfc0Nj/XOJN05ZvzBui
oEzu+bvlG+NOjakUfm/e8o0zcqmkCYOWLd/YZnA0TSmgZcs3Un4jRPk3Pt/0
jQMONatuG7/f9I0PlfSt6Lr/QiIaDM/qmYe9kpEfv8U3bXlCqwnWlu8X3255
QkWqxm2ebulbnvAt5dObSdwvtjxhbLlKo7t1HGx6wtDylsv9dlGw6QnjJXs8
um+FwqYnnHjYr/zfLn/Y9IQ8uxRXdz+7D5ueMEJSizWNwxU2PaFA4em5HfVO
sOkJ0/mTGlUFPWDTE1pp19r3zzyATU8Yejq3d84sGDY9IcPEuoHko8ew6Qmp
ngfmSvA+g01PWBE4Emn6+PmWJ2whFci97X655Ql3oKTtp45mQarX9OStX52w
L+qmWY9205bfa+so7Hif+HfL7505mpOe9KR5y+/Rar/+uw21bPm9kKT48BN+
LVt+z1s+UD/JtmXL7wln27GYzTZv+T1Kms4/Q8LNYCyouNJnPg8u3vTXlWea
trxc1pOOjtq977e8nKhCA80h1owtL8cbyvN57GzKlpdjsayk5nmQAJteLlzt
etGthWjY9HJUukOP/rsSDpte7k7kDi1u9gDY9HJpckUJGge8YdPL9d1INKvX
uAObXi5DylHsUcRt2PRyvlbFj+sbvWDTyxnIv7h92O4hbHq5u3vJ5pwNYbDp
5X5FsXqNZ0VDWdq7MNlb3UBbsttlB83fLX8Wamc4syzUvOXPoi6LuX1daN7y
Zw35u1P3bpzPTX+mS6MWU7xxvjf9GZHybPWwfMv//JmN62nj2OYtr7V66uPx
k07PYNNrqekyxLisPYZNr6WrSCXz8EQIbHqtS64OnBc0fGHTa30T2ZZ7kuMe
bHot7Wsb0ym9M2x6re209cYOC46w6bXoLh0SlfnnDpteK0ufYZpd9AFsei0m
5fCz1y4HwabXusT5XyJXYwRseq0XdXP8Q6diYNNr3bfjUlFbSIJNr3U1+cjV
UtGXW15L+o8PTezV13DrUczAwdoOMD6pm52xp2nLR/FHfzvEdvfvlo/iXpI8
fMm9ectHWXhLmdEdbtnyUQprOpwJ3i1bPspt52D+tGvLlo+CQebERoaWLR9l
dE/ZGak0g1z4xGFvoXmwuCm/T0vg75ZHYrA2GQtIfb/lkQgnNc64zowtj6S8
h/3AfVLKlkfaeeasJFtcImx6pNI5F4nMiiew6ZF0aBzYn1NEwKZHumezfc6O
OxA2PZJW4iWngn/esOmRHhMLjO4ebrDpkZZtKtS/RrrCpkfKmoyTb+T1gk2P
5M3DQTXr6w+bHomvjcksICMUNj1SCL1JpVRbFIiIUwXxjnSBaJed/JGWpi3f
8/z3uY+9VM1bvuel9/w9357mLd9D83Z+75erLVu+J61gN8552LLle+xLJN2n
1Vu2fA+ejozYltu85WFG/oS2+FjHwqaH0TNiir+cFwmbHoZ3p9fxI5qPYNPD
nEEsNWOSfrDpYTS66Vcqz3vCpodpPmDNdobeBagCkDNDwSDsHWi0sMlu3vIi
1Kdkv+eda9nyIiyKzUftN/Z304ssvS/zy9o4nk2PwP3nRj3PxnrZ9AjB4ukP
rvq0bHmEAz6+fm2HWmCz3x+VKDtO2u4Em/3+C5mHrpeHOsJmv3+O30vbVskd
Nvv9LzJHi+oqfGCz3+95v05IvTUQNvv9zxoCHTTvRsBmv19eUul56q+nsNnv
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
J38Za5zK4PqpRuGcl9OtExhcP907bZ97jFEcg+unu5ulVKcMRDC4ftoT+Khp
g2cIg+unHaNy+852+DKB0yZIlRm2Mkb2j9XHQr2K64sPNTv6BXpCWl+UM4np
Pw33B1xffFWzIO2gh5DWr9T8JtpqeQpp/Spmg8sXZ9gf16/u9+evXqkjZHA9
6NZPLZ+2Vh9aj2FVL+6eDvcTXI8ZOaLpwz+4n+B6xKLRyieGuAhpPSI44WJC
JMxv9H77f6NVLkCMvm9vGM3uh/d/9P1YQd72JrifoO+HGupYDun2ZtD3Y+ak
Tm+F92P0faWimhcT4Pqg7y99uXVCNdwf0PfV+zKS6+B+gr6/+aLCtxFwP0Hf
P7nYSZ8F+6Pvt7SXTFWC8dD326eN+dgb5M2g7xttr5VeCtvR97MaZ6gthc+j
79cc/RirAr8Pfb9Jw1TvM8To++yKY9YCiNH3i9tLi1dAjL5v+qqGuwLGR9//
PnpC4FcDbwZ9//m8bV6SCbnk+9Hvvzu0T8wj369UbMg4eT+ffP/fxIqOMZ4F
5Pt/MkY+VVO8Sb7fU5ul+rWviHx/3NvzYSWVxeT76+5FDT1TXEq+37347pbc
a3fI92unJ3n/XFVGvl/o5qCWqF1Ovv93dOtNNZUK8n29TKX/FvdXkO9fvK54
0e5DJfk+d7L+vXpuFfn+yln3f8dFV5Pv2/4oWdVtfI98P3Dph9CIH/fI9y/v
t1FdlXiffH+mj05EnjyPfD/Kdll9RiKPfP9a0XL9Yb945PtZn/qcR6zgk+87
ifeM0tjLJ9/nTtj61zaCT75f9XBJ6HmI0fer/Ex2VLnzyfdzLE6UrVrFJ9//
4r7w788fPPJ9yRu+jeUneeT72XdSff1UeOT7x2eHBRw4dZ98n7W3e67373vk
+7ITN2jEbr5Hvh/V6TOafaqafD/m+a6apEdV5PsqKksFjd8qyfcP9Z+L9phU
Sb5/PC7rqNbSCvL9pE7Z77565eT7HWpjxydYl5Hvd7dfffmde4d8v69n43X/
ilLyfYvCqI0mP4vJ97/eTlvAl7xFvp9wqiLw3dqb5PsW4n2dfskF5PtWjqqN
nQ355PtXY2ZsqNPPI9+vH5wP6Pue5+Nn3TXnMPXZo22KrguYJ+tKV02045G3
e9Qkaa7n88jbw50zspYo8snbhz2vi9pqzSdv77vd23PlEJ+8/fsh98ero/jk
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
FmeTZ1Qs031nMo5NnuEuf+CYpQKbPOPc1HPVL2awyTOuzpPv9lnIJs8wM7/f
IK/NJs8Ym2yk4qjHJs/wdFk1OnYdmzzjV0uzXJkZmzwjuu5Kfaklmzxj1NVQ
p71b2eQZyVJpbf3b2eQZeVv15io6s8kzDjpO2WbuyibPmKt+VPrkbjZ5Rl9N
yowF7mzyjOs3Zhi2QYyeYfdV3/UbxOgZbycYuEyDGD1j3kM1j4swHnrGWKHb
roXwfegZO1703v7hxCbPiLva8W6hI5s8Y8uExz0b4PegZ0yYx7D+wO9Fzxho
q1023pxNnsH5+aBLCOcLPUOt/OmFHfps8oynk7IrguB8o2eYF+5b6qXOJs+4
bNYY92Ymmzyj+n1NOheuJ3rG3WlnX50czybPkJ769lkB5AN6xmKdIF0TyBf0
jLOFrRenfGaRZ0zzDWwa/pJFnnH3BxPL1LDIM265GyYqlrLIM7YnCA1+QT6j
Z8Tk7nA1TmGRZ+B8QM/YtsI9K+cEizzj2jS1gIf2bPKMUZKXgtV2sskzFr1L
M3ziwibPUFAqqo90Y5NntCybahqwh02e8bn243c2XF/0jImrjGYO82CTZyht
11zJgu3oGSOX7K/yh8+jZ2wbu8U8HMZHzzCKaPa6Ct+PnqFodVJTdHzoGecn
xRkK4fjRM3zPXr5VcJJFnvFPP9lvUwyLPENuf2kFaxubPONLr660/A42ecbp
osM2/ZD/6BmPm4c7/IB8RM+YLSX1dxQcL3pGplePnyf8HvSMgqk2X/ohRs84
1OUSVQcx9TNMsmurh8+jZ7B3nNOWh/xHz9BZ4D9s/y42ecZ4c83FEyH/0TOM
G25vGAXzFT1jYfD2H0cTWUz4tBkpj0tfMvPuXtGYDfujbwgmDHQlwXjoG2XD
FxVLi+bboG+4Ms0Sr+B40DfqCsceewTHi77xMO1T3wDE6BvVIWKRbhCjbyxZ
NPv7RPg8+kZOT2hBE5wv9I1t/hq8F3D+0TeGWrya+F80i3xjTrFVlBRcD/QN
1X3cguMwv9E3jv5YvzsOrgf6Rt3HSxtZMD76xiy7+7fq4Pegb8i61K03g+ND
37A9djmiB2L0DaOFVZeaIEbf+PtUNu0vHD/6RljlKKntMB76Rmvg1K31cP7Q
NxadmLMrHM4v+kZSTeCaNLge6Bs8D6t7X5JYzLWPZ/2rCoTMZE7XiWzIV/SO
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
Gh99ZKGz5KIV8P3oI0MG/8P6EOP/7+3/B3Z66Xg=
   "], {{{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1: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
Ag==
        "]]]}, {}, 
     {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV1He8T3UYB/Bzl5FxRVRoXKIkNEVaIk0jmVFJtG0qWhpKqSgNu+y99y6S
kTKLzJK9y969nz/e9/N8P8/v3PO6v3NeN6tpq9otU5MkSaGzH73SkqRCjiSp
yFJzwYwkWZKeJHnk+/IHMszV5BvM4BwXczftmMAxtrv+AjeYn2EA/7BEl0/e
RVvGczR2+vOUNjehP9tYrMuUd9KGcRyJnf4c15ufph9/87Mur6xEa8byX+z0
Zyllfoq+/MUiXR55B60Yw7+x05/hOvOT9GErP+lyy4q0ZDSHY6c/zbXmxvRm
Cwt1WzhFSedG9GIzC3SbOUkJ5yf4lk38qNvECa5xbsg3bIznoJvPPOYyh9nM
YiYzmM40prKR4xR3bQO+ZgNTdBs4RjHn+nzFn0zW5ZIVaMEoDsVOf5Qscz16
sp5JuvtlJ6Zzlou4nVcYycH4rM/dJ1+L+3MqnqfuLTmLC1xNXb5kHRPt35Pz
Sff+VY3nQE5zRzmNM3GO508u/Tsyn5wjU2R5mV8ukNnlyzKvHCEPxH3c4xLn
xebcsnO813KuTJWVZQG5UOaQr8pMOVmejHfM9Yvib9a9KWdynqviWZJNX0d+
wR9M8Pl35TzS7KrI15nK6bgHbzObxP42+RLD2R+/w/X3yg7x3XMi3lvdlfJx
evA743XZ5a28yDD2xU5/j2wf3y/H4z3WXSFr0521jNNlk7fwAkPZGzv9IYqa
H+Nz1jBWlyFv5nmGsCd2+oMUMdfiM1YzRjeaUYxkBMMZxlCGMJhBDGQ1Byjs
2pp8yiq+161iP5c716AbK/lOt5J9XOZcnU9YwQDdCvZyqfOjfMxv9Nely5t4
jsHsjp1+D4XMj9CVX+mnS5M30pxB7Iqdfnf8PzU/zEcsp68uVZajGQPZGTv9
rngfzQ/xIb/QR5ciy/Js/M3siJ1+JwXMD9KFZfTWJbIMTeN7YHvs9DvIb36A
D1jK/1Zc23E=
        "]]]}, {}, 
     {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0VWUUGUUgNE7AwMDUvJASYdSSjN0SCMIDKXSQwvMSCMd0t0l3SmoSCvd
oSCtSHdJ97B52Os759yXu9afKSomMjo0CIIQYkkRFgSFw4Mggkrm5PGC4B9N
qKv1b0LNw3Qxh3jJt/RnNrt4SB2a0Z3JbOYmFalAecrxOWUpQ2lKUZISFKcY
RSlCxPv/oxAFqU1TujGJTdygAJE0oSsT2ch18tOWfsxiJ/9Ti8Z0YQIbuEY+
2tCXH9nBA2rSiM6MZz1XyctQFnGQF7SmDzPZzn1q8APz2cdTGrKUI7ymE+P4
jSvkYRXHCfEOQ/Q08cwL9QDPacVZwt2Xa2L9U9/Sm6T2kxpXZ+gHuk3v8SUf
2s9pAl2hSfQvjWUQyeynNEznaSLdq09owBniuy3Rw7yiIyeI4z5W13GZz1jJ
MQLfBusC9vOMlizjKG/oxXT+4C7VGchc9vCYb/iOMfzKJT6lBT2Zxu/coRoD
mMNuHvE1MYzmFy6Sm+Z8z1S2cpsv+IpoRvEzF8hFFD2YwhZuUZX6dGAka/mP
nFShHu0ZwRrOk4PsfMLHZCMrWchMJjKSgfSkIy0fkYbUpCIllalLO4bzE//y
DgRph3o=
        "]]]}, {}, 
     {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0mUUFVUUgNGhQ7pBuksapKS7OxWkQaS7u7u7u7uRkEZBQFFRSVFROhWk
9vzY7zt3zf0x651J17JLnc4RgyCIQFw/CaMGQYHoQVCQcuY00YLgT02qu/Qa
cc0TdRM/Es25o45gJed4S11a0p8FHOc5ZSlDaUpRkhJ8QnGKUZQiFOZjClEw
fDfyk486tKAf8znGM/JSm8/pyzy+5il5qEVz+jCXozwhN18wnBV8yxtq0oze
zOEIj8lFB4axnG94TQ3Gso5LRPL/fKa9mM1hHvERE9jIZaK6116Hsoyz/E91
xrCWi0R071Pdws/EcO6pszjEQ3Kyk6vE8Xy83iKheYP+QBRzO71NYvM2TaG/
6Ac6RFPqDY2vSzWZntFXVCO18x+aRLfrh/qrxtLRmkpvagJdo8n1gkbQpvo7
icyb9Seim3vodeKZZ+pXPCAHO/iN2J6N0/V8T2TntrqVK8R0HqxLOM1LqjKK
1XxH4E4T7c4MDnKf7LRhEIs5xX9UYSSrOM87GtON6RzgHtlozUAWcZJ/qUwj
ujKN/dwlK60YwEJO8IJKNKQLU9nHP2ShIg3ozBT28jeZqUB9OjGZPdwhExnJ
QHrSkZY04R7DXYX7DncYfgfhrsJ9kzTcb/iNhLuiPPX4kkns5i/eA04PiXI=

        "]]]}, {}, 
     {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0mXYFVUUgNEL0iAhISHx0Y2EtHR3SYPS3Q0SBt0o3Z3S3Up3p5TSoXTn
mh/rvufsmef+2RPWuEO19uFDoVA44vlJETkUyhElFMpJVefs+lIz6B59SJjz
VN3GbRK599JxrOUKsc1+0A4MYQmniWReRStTiYpUoDzlKEsZSlOKkpSgOMUo
ShEK8z3tGcxiThHR/xfShrRjEIs4SQTPvtUGtGUgCznBZ54V1J6MZQ2XiWVe
X9vwKws4TnjzAtqDMazmEjHN6+lENnGd+Gat9Rfmc4xwZvl1Clu5RUKz7jqa
VfzN52Z1dQIb+Zd4Zq10B3dJ4v6zzuMoIfd8upv/SeE+WZ+SxnmL3uRL5276
nHTOf2pmva9JdZRm1ceaSldqRr2oMbSOfq0vNL3+pVn0gSbT8ZpNn2hq3aCZ
9B+Nqy31GWmdt+sdEjv/pI9I6TxXj/CRvOziP5J7Nkk3c4ME7l11J/f4yn2k
ruAC0d1r6++s5xpfmLXQAczhMB/IQxdGsJzzRPNuLf2NdVwljllz7c9sDvGe
3HRmOH9wjqjeranN6McsDvKOb+jEMJZxlije/06b0peZHOAtuejIUJZyhsje
r6FN+JEZ7OcNOalOY/ownX28JgfZgz0Guwr2Heww+A6CXQX7JkOw3+AbCXYV
fEPBPoNvItgRYVSjEb2Zxl5e8QmW5IxJ
        
        "]]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwl12WYVVUfQPGhU0G6uxSlu0G6lO7u7u4wCSVUGqRBEElBQumUVrpTCemO
97ef98Pi7LX2f2Dm3Hv2HdK37Faza6SIiIgfokREhOv+yBER0VGJ/Mqb6FP4
Gd6cZ+BN+Bz+LvJqz3he9OVXeTczS/kdPo5/zIfyrTwnLCMO+CMGKvP1vKmZ
qfwsb8Ez8qb8Rx4PI/nm8IXI5/I8XNHP3jXe3f5P/C4fz8vyYXwbzwUa8SeP
iSp8A28mTuPneEueiTfjc3l85Nde8Pzoz6/zHmaW8f/4N7wcH86389yIqh3k
sVCV/8abm5nOz/NWPDNvzufx91BAe8kLYAC/wXuaWc7v8W95eT6C7+B5EE07
xGOjGt/IW5iZwS/w1jwLb8Hn8wQoqL3iBTGQ3+S9zPzM7/MJvAIfyXeG1xbR
tcM8DqrzTbylmZn8Im/Ds/KWfAFPiELaa14Ig/g/vLeZFfwBn8gr8lF8F8+H
GNoRHhef8M28lZlZ/BJvy7PxVnwhT4TC2hteGIP5v7yPmV/4Qz6JV+Kj+e7w
eiKmdpS/g0/5Ft7azGx+mbfj7/PWfBFPjCLaW14EQ/gt3tfMSv6IT+aV+Wd8
T3g9EUs7xt9FDf47b48PzLXRFmtJUFQLb86i2lB+m36HKtrn2t7wuiG2dpzH
Q03+B++A7Obaaku0pCimRdKKacP4Hf49qmpfaPvC64M42l88PmrxrbwjPjTX
TluqJUPx8MhpxbXh/G44K1BN+1LbH14HxNX+5u+hNt/GO+Ejc+21n7TkKBF+
XK2ENoL/x6fgHZzQEqCOvp13Rg6zHbRlWgqU1KJqJbWR/B6findxUkuIuvoO
3gU5zXbUlmspUUqLppXSRvH7fBri4ZSWCPX0nbwrcpntpP2spUJpLbpWWhvN
H/DpiI/TWmLU13eFcxBlEMN8Gf0z/SGfgfdwRkuCBvrucIaFsxIxzX+sf64/
4jORAGe1pGio7wlnUTjnkBDn9GRoZG9vOD/C2YRESIwkOG8/ORqb2Ree/XCu
IJZ/r6z+hf6Yz0JSXNBSoIm+PzzD4XxAbPPl9C/1J3w2kuGilhJN9QPhWURu
s521FVpqVNTiaOW1r/hT3o+v4o/5HF6df8UPhGcPn/E/eJTw/du/5JoKzex9
aW+79Z96G+s51lf0sda7w2eSnse6i/WEcDbY+9p1J//ONQ0f5bqFTwqfga7j
Xfe6fu9aydfHda3Av3X92vxXrjv4ZNdn9vu7ruYTXZ+EzzzXPeGzy94n4WvC
96ePsd5lXdT6c+ut1lHDPTZ32TU1mts7yNva/5Ff5f14Xt6Vr+RpUTk8M1pF
bQx/zufiU22MdjCcBeE9r13hadCCHwrfbzhfwjMTfj59rP6Cz0MqXNXSoqV+
mA8I5wdSIw3S4pr9dGhl5ggfGM6E8Bz5Oyvr4/SXfD7S4bqWHq31o3xQeJ3D
c2O+Srjn+iu+AOlxQ8uANvoxPjjcy/DcmK+qf6O/5guRATe1jGirH+dDwr0I
z435auG109/wRciIf7RMaKf/xYcin9lu2iotHWqEZ0urHt47/C1fjEz4V8uM
9vrffBjym+2urdbSo2Z4/rRPwnuDh1+wlrhkxi0tCzpoJ/hwFDDbQ1ujZUCt
8Oxqn4b3Jo+EpVoW3NayoqN2ko9AQbM9tbVaRtQOz71WI7xXeWT8pNXQxmqH
wvmOrNodng2d+Ck+EoXM9dLWaZlQJ5wLWs3w7PAoWKbV1MZph8P5jmzaXf4+
OvPTfBQKm+ut/aplRt1wbmi1wrPGo2K5Vksbrx0J5z3e1/7jH6ALP8NHo4i5
Ptp6LQvqacm12toPPBoG8DX8qfXP9mvzb/jR8FmAD7R7PDvCL8JneTszc/m1
cPbworwv3xDuFeprKbQ62hQeHQP5Wv7MeoX9Ovxbfix8ZiC7dp9/iG78HG9v
Zh6/Hs4DXoz347+Fe4gGWkqtrjaVx8Agvo4/t/7Ffl0+gR/nZfCh9oB/hO78
PO9gZj6/wb/gxXl/vjHcWzQMz71WT5vGY2Iw/5W/sF5pvx6fyP/iH+Mj7SHP
gR78Au9oZgG/Gc5lXoIP4JvCfUajcIZo9bXpPBaG8PX8pfUq+/X5JP43L4sc
2iOeEz35Rd7JzEL+TziLeUk+kG8O9xmNwzmlNdBm8NgYyjfwV9ar7Tfgk/kJ
Xg45tcc8F3rxS7yzmUX83/CZwUvxQXxLuM9oEs5CraE2k8fBMP4bf229xn5D
/h0/ycsjl/aE50Zvfpl3MbOY3wqfEbw0H8x/D/cZTcMZqjXSZvG4GM438jfW
a+034t/zU7wCcmtPeR704Vd4VzNL+G0+lpfhQ/gf4T5jNP+dR0azcA7zxtaz
7b2DEXwTf2u9zn5j/gM/zSuG9xbfxqOF89l6X+T//78yj9n/Aclksnk=
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV1He4znUYBvCfnNOSlBKVspM0jIaUiChKSSpFEcomGiIUKipFGdl77wrH
PPZWRpkhyt57VOjz/PE59/O9n/O73vO+7/c6eeo0r9osQ5Ik7f3okzFJVqQk
yWc8TVb26Fay2zyYOtxHQt/Yyc95hpvYq1vFHvMQ6nI/GegXO/kFFbmZfbrV
7DUPpR4PcAX9Yyc7U4ls7Nf9wj7zMN6mCBkZEDvZhWe5hQO6X9lvHs47FCWF
gbGTX/Ic2TmoW8OgSOevqEwODunWMjjS+Wue51YO69YxJNK5Ky9wG0d06xnK
MIYzgpGMYjRjGMs4xjMhnvHsN1Thdo7qfuOAeQT1KUYqE2Mnv+VFcnJM9zsH
zSNpQHGuZFLsZDeqcgfHdWflj7xPaTboDslRNORBrmKyfoPszkvcyQndOfkT
H1CGjbrDcjSNeCjuTmqSzJbtuZp/mMZHlIvv0j5ddmCK5zfK76gWf7vdApmL
S8ykLdfql8iTfv+8/Jksug/jNeSiuJ/yybhbcq68UX4qr5PL4j7KTZ4/Yh7D
9c6N4/3KhTKrfDjuspwjb5CfyExyqbyGf5lO6zjrF8un4r6Z58mO8fl6jU3y
e14mN5eZRTtO2V+QU2lFWTbrjsqxNOGReM/8RxptKB+fvd/bLHvwCnk4rdvC
MfM4mlIi/u74nGIne/IqeTmj28rUSOdeVCcfZ3V/MI3ppDGDmcxiNnOYSzrz
mB/PeLY3r5Gfc7ptLIh0/oHXKcB53XYWRjr3oQZ3cUG3g0WRzn2pScG4R7o/
OW4eTzMeje+XxbGT/XiDu+O70u3khHkCzSlJZpbETvbnTQrFZ63bxUnzRN7l
sbgnLI2dHEAt7uGi7i9OmSfRgsfjXrIsdnIgtSkc91n3N6fNk2lJqbhnLI+d
HMRb3Bt3Jv4vc8Y8hfd4Iu51vDYz+JgKpLp/82WneH/m5TKbXOH5/wG61trs

       "]]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwN0WO8FmYYwOE3nJNr9SEtndqy27K1jJPttpZt27Zt27ZWy7Ztner6cP3+
930/H5+Qhq1DW4ULBAJhxA0KBK6zmqE0pwoliEd8EpCQX0lEYpKQlGSEkJwU
/MbvpCQVqUnDDdYwjBZUpSRpuclahtOSapTiCTuYRBcako5brGMErahOaZ6y
k8l0pRHpuc16RtKaGrzlILPpSxmesYspdKMxGbjDBkbRhpq84xBz6EdZnrOb
qXQnjNMspQkfOcp8BhIIDgTO6goycpeNjCaCt/Palq+cZDGR3C9rLd5zmOhu
czVIL+ov2l9/cIaY9uUaRa9qbC2nL9hDNPs0jagXNJb20O/8Rwz7Mo2sV7Qp
nzjGAoLdL+kgwpn/15Vk4h6bGEM7vnGKJdTmA0eYxwDK85K9TKcnf/OZ4yxk
MJm5z2bG0p46VOAV+5hBL/4hCw/Ywjg6UJeKvGY/M+lNM7LykK2MpyP1CCUb
j9jGBDpRn0r8wZ9kJwc5yUVu8pCXfOSnAAUpRGGKUJRiFOcx25lIZxpQmTcc
YBZ9+JcvnGARQwjvH87pKqKar2kc/Ut/Avjjhvk=
       "]]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV0mW4FlUUgNGPuuQlRLiE0ghKIyBId7d0CJdupESku7u7QelukO6UblBS
CcGilDU/1rz7PHN+zZ60kZ1qdIwSCoXCPRKHhUIP2MwY2vMVpfmQJCQlgmQk
JwUp+YiPSUVq0pCWdKQnAxl5yBbG0oFalOETHrGVcXSkNmXJxGO2MZ5O1KEc
f3OQ2XxPMzLzG9uZQGfqUp5/OMQcetOcT/mdHUzkG+rxP6dYwmAq8C+HmUsf
WvAZT9jJJLpQn1DMUOi0LmUIFXnFEebRlzjuXNG1tCS688/6IyMId76uG8jC
U3YxmYTe3dKuxDJf0tXBrsy/aAOimM8Eu9Jl+oHeCXalQzWeXgt2qOuD/eq9
YI9aSV9zNNi383xNpLeDfWs/jatXg/9A1wX/iP6qrYhhPq8rSGy+qyOJb76h
G8nKM3YzhW7E9v6yrqEhUZ3P6nKGUZk3HGMB/WlNmHsXdCWjyMZz9jCV7jQi
mnvn9AeGU4W3HGchA2hDdv7gJ6bRg8ZU5R0nWMRA2pKDF+xlOt/yNdXIyUv2
MYOeNKE6ufiT/czkO5pSg9x8Th7yko8vyE8BvqQghShMEYpSjOKUoCR/cYBZ
9CKSmvzHSRYziHbE9H0u6ipGk8D5pm4iwnxfU2spfQ+ClIj1
       "]]}, 
     {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV0lW4VVUUgNED0iFw6VDuJaQ7BBSRUhq9dHd3CyIhXYKAgtIi3d3d3d1I
K52CgGM/jPOvNff+zsvcEY07RLaPEgqFwvyExwyFXrGbyfSiEZFEkI70ZCAj
n5CJzGQhK9nITg5ykovc5CEv/7KHKXxPY6qQj9fsZSq9aUJVYsYKhU7pAobR
kfy8YR/T+IGmVCOW90/rQobTiQL8x36m04dmVCe298/oIkbQmYK85QAz6Etz
Enn3iq5iHDWIY3ZWFzOSLnzKOw7yB/1oQZh3r+pqxlOTuGbndAmjSON+T7fS
lWTuN3Q9E0nrfl93UIj3HGJmsCPPHml/Ujnf0c3BrpyfaUsSO18LdqVrgn3q
k2BX+ot+rP8EO9TtwX71RbBHraXx9Hywb10afBP6ONi3/qQf6d/Bd6Dbgm9E
n2s3kjvf1A3BN+T8VH8j3PmB7qQwIffD+ic/ktr9rm6hFUncr+tafqU28c0u
6DJG050UZrd0I79ThChmR3QWA2hNUrO/dB0TqMOHZhd1OWPowWdENT+qsxlI
G+qSwPySruBnvuNzPjA/pnMYRFvqUZRonh3XuQymHfX5guiendB5DKE9DSjG
lxSnBCUpRWm+4mvKUJZylKcCFalEZb4hhv8/qfMZSgcaktD8sq5kLD1JaXZb
NzGJCPeHuosszi81j36r/wOVIIvQ
       "]]}}}],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
    "AxesInFront" -> True},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.684634440244519*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
NJBTa/q0VoM40aX7eZS8jj1PX9NaOq1OnOdwuqLEuoZtLu6ZND5nTVzRqzY1
o17BnattdjvTQoiQdxRlRjuX8CA6L5L4J4OQCZzdZnRqAc8PnepKiaggmpz3
5AgdncPd3DNWmak9RM3V4LtHz89g05GuI+zCK4RRp8GCiuIUzo85sfz1OxeE
OhgTH4CM61Lt2sPmJECYQ9agt2AUC6blCXI5K4HINdHWoYwhPN6g/bflgz5o
97SKvGnvw9ubuNh4O6zB3Yz+3O3d3bjJ4MTIvkv3QIpWVTJerBVTtSjxpjWF
QsFlh2s+z+px2h4tEzaZBNB6Y15f0vQVr14rr8B6r0GoWjjU42gKFhenb7T5
/An0NToeCzjlAU1NlEF2VRl8k0jbp+74HdiurN8TpKiFgJKDRrEhPcB+rUIh
dLwbRlX/5LddGIBXpJ+aPUr9oP+O2SH82jB0XC96dZ96CGJGvI39ZcZhnKZA
XcV0Y36PJE4ULpLB8GLTwbZLJODa7Ttxa30KJrNitPhrB8Eq7ZFnXd8MKHX8
Vh081A8UN/7oLTUsAVOnIJ+wdQN8P/pzfLx9BQpYPlxmZKoBz/FBQZryNaBr
I41/jC+Dy5x7pIO1KBAWr2kaDf4Et0XyDmVfoETRT4JZLKhfg9XxAxzvlanQ
woMkvbiziWAGXj9/nKVGkWfaTb7cCYWaosG/8/I0yNtLfjfjSU9YcCNb7ZGg
RV2MGX01726BiERHw83DdOitTfjeit36cKjr9cGgffTIIMWJz1xaGa7VVqaJ
iTEgW7nq9IJ4cagRP1uSeIgRXbU49qb/6w5gCskqHeZnQq0zVScbzFYJte7p
OJ09zOjedMzTzqVuYv21WnkNFwvq+ClUf8n6G+H8UdFZmZYVZa3zFjyZzyRG
PwmsNNOzocMTV5XhUzDBYIJ5/ZbY0GwO55jGSRvCbD7EqGB9DVMYvGwvszEk
eq8FK1TSr+LPLfuovsp5ELl3TqET7Mv4FdP5t22WccQ9vtRPa2KLWMRyeIi5
4BMRLuWmkHd8Hg9e+ffNTb6BGB9e76tVnMX/GXfrfT9LJjT/O0t6qjqNC2X1
iAtLDODZonrXCU3idsYl34SAPdDqqvHQOnEcWwnc+Tr19gR8Fghp0coexnK6
9onfzp6Hw+ySpmtlA1ialF7x+b0FJPErNemt9+DfKnF6u/ScQVbUrI9PuhNb
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
6S3PtdfNODQkwqa3tNUct3jsmrrlLXPmvt8MiMnc8pYmB50CIorfb3lLsfHM
I1/3f9jyllKDf2J9yJ+3vKXtiWQTEcBb3tI2qzh9Z0PZ/7zlU2tSOfe3LW8Z
pj309Hlr9Za3bKr8cjkmp3bLW74YfLGj7lXdlrcMOJZFpR9dv+UtdbkvPxNW
/Z+3fNL01dNuqnHLWxZofr2rp/d3y1vyDjOZPjNq3vKWCwMpY08FW7a85b21
ad1Ej5Ytbxklocv66l7LlrdMteOWmuZr2fKWZqBzS/Ra85a31Ev53Sp55u+W
t1QSCDVn6W7c8pbRR1BrrOH/vGWBP2WtfWD9lrfcn9M4NFNUt+UtLx89EXm3
q3bLW3IX+oT4UX7f8pb84kTwA79vW96SlsxdeXyhbMtb1pdHqOxtwVveMqHA
0+q2S8GWt7QZ+f3yseaHLW/JkLzuLHwge8tbMmbfWZL4kLnlLZmF+Si4H6Vu
eUvKnIow3cIk2PSWCR1O42zPnsKmtxQMDdPlT4mATW8Z7OVyx3R/EGx6S216
2ojKBB/Y9JZFcmK/eD67w6a3rPi/62HTW+KjN6ldklxg01v2hl0U2vHdEza9
pbjgvrEXL/xg01s+dq2/oxXwCDa9pXnSJW3ubVGw6S13MQsXig3Gwqa3zFM7
HLKtJnnLW15t0eOhN0vf8pYNCjNR+n1vIChX13fhZhfc0Nj/XOJN05ZvzBui
oEzu+bvlG+NOjakUfm/e8o0zcqmkCYOWLd/YZnA0TSmgZcs3Un4jRPk3Pt/0
jQMONatuG7/f9I0PlfSt6Lr/QiIaDM/qmYe9kpEfv8U3bXlCqwnWlu8X3255
QkWqxm2ebulbnvAt5dObSdwvtjxhbLlKo7t1HGx6wtDylsv9dlGw6QnjJXs8
um+FwqYnnHjYr/zfLn/Y9IQ8uxRXdz+7D5ueMEJSizWNwxU2PaFA4em5HfVO
sOkJ0/mTGlUFPWDTE1pp19r3zzyATU8Yejq3d84sGDY9IcPEuoHko8ew6Qmp
ngfmSvA+g01PWBE4Emn6+PmWJ2whFci97X655Ql3oKTtp45mQarX9OStX52w
L+qmWY9205bfa+so7Hif+HfL7505mpOe9KR5y+/Rar/+uw21bPm9kKT48BN+
LVt+z1s+UD/JtmXL7wln27GYzTZv+T1Kms4/Q8LNYCyouNJnPg8u3vTXlWea
trxc1pOOjtq977e8nKhCA80h1owtL8cbyvN57GzKlpdjsayk5nmQAJteLlzt
etGthWjY9HJUukOP/rsSDpte7k7kDi1u9gDY9HJpckUJGge8YdPL9d1INKvX
uAObXi5DylHsUcRt2PRyvlbFj+sbvWDTyxnIv7h92O4hbHq5u3vJ5pwNYbDp
5X5FsXqNZ0VDWdq7MNlb3UBbsttlB83fLX8Wamc4syzUvOXPoi6LuX1daN7y
Zw35u1P3bpzPTX+mS6MWU7xxvjf9GZHybPWwfMv//JmN62nj2OYtr7V66uPx
k07PYNNrqekyxLisPYZNr6WrSCXz8EQIbHqtS64OnBc0fGHTa30T2ZZ7kuMe
bHot7Wsb0ym9M2x6re209cYOC46w6bXoLh0SlfnnDpteK0ufYZpd9AFsei0m
5fCz1y4HwabXusT5XyJXYwRseq0XdXP8Q6diYNNr3bfjUlFbSIJNr3U1+cjV
UtGXW15L+o8PTezV13DrUczAwdoOMD6pm52xp2nLR/FHfzvEdvfvlo/iXpI8
fMm9ectHWXhLmdEdbtnyUQprOpwJ3i1bPspt52D+tGvLlo+CQebERoaWLR9l
dE/ZGak0g1z4xGFvoXmwuCm/T0vg75ZHYrA2GQtIfb/lkQgnNc64zowtj6S8
h/3AfVLKlkfaeeasJFtcImx6pNI5F4nMiiew6ZF0aBzYn1NEwKZHumezfc6O
OxA2PZJW4iWngn/esOmRHhMLjO4ebrDpkZZtKtS/RrrCpkfKmoyTb+T1gk2P
5M3DQTXr6w+bHomvjcksICMUNj1SCL1JpVRbFIiIUwXxjnSBaJed/JGWpi3f
8/z3uY+9VM1bvuel9/w9357mLd9D83Z+75erLVu+J61gN8552LLle+xLJN2n
1Vu2fA+ejozYltu85WFG/oS2+FjHwqaH0TNiir+cFwmbHoZ3p9fxI5qPYNPD
nEEsNWOSfrDpYTS66Vcqz3vCpodpPmDNdobeBagCkDNDwSDsHWi0sMlu3vIi
1Kdkv+eda9nyIiyKzUftN/Z304ssvS/zy9o4nk2PwP3nRj3PxnrZ9AjB4ukP
rvq0bHmEAz6+fm2HWmCz3x+VKDtO2u4Em/3+C5mHrpeHOsJmv3+O30vbVskd
Nvv9LzJHi+oqfGCz3+95v05IvTUQNvv9zxoCHTTvRsBmv19eUul56q+nsNnv
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
J38Za5zK4PqpRuGcl9OtExhcP907bZ97jFEcg+unu5ulVKcMRDC4ftoT+Khp
g2cIg+unHaNy+852+DKB0yZIlRm2Mkb2j9XHQr2K64sPNTv6BXpCWl+UM4np
Pw33B1xffFWzIO2gh5DWr9T8JtpqeQpp/Spmg8sXZ9gf16/u9+evXqkjZHA9
6NZPLZ+2Vh9aj2FVL+6eDvcTXI8ZOaLpwz+4n+B6xKLRyieGuAhpPSI44WJC
JMxv9H77f6NVLkCMvm9vGM3uh/d/9P1YQd72JrifoO+HGupYDun2ZtD3Y+ak
Tm+F92P0faWimhcT4Pqg7y99uXVCNdwf0PfV+zKS6+B+gr6/+aLCtxFwP0Hf
P7nYSZ8F+6Pvt7SXTFWC8dD326eN+dgb5M2g7xttr5VeCtvR97MaZ6gthc+j
79cc/RirAr8Pfb9Jw1TvM8To++yKY9YCiNH3i9tLi1dAjL5v+qqGuwLGR9//
PnpC4FcDbwZ9//m8bV6SCbnk+9Hvvzu0T8wj369UbMg4eT+ffP/fxIqOMZ4F
5Pt/MkY+VVO8Sb7fU5ul+rWviHx/3NvzYSWVxeT76+5FDT1TXEq+37347pbc
a3fI92unJ3n/XFVGvl/o5qCWqF1Ovv93dOtNNZUK8n29TKX/FvdXkO9fvK54
0e5DJfk+d7L+vXpuFfn+yln3f8dFV5Pv2/4oWdVtfI98P3Dph9CIH/fI9y/v
t1FdlXiffH+mj05EnjyPfD/Kdll9RiKPfP9a0XL9Yb945PtZn/qcR6zgk+87
ifeM0tjLJ9/nTtj61zaCT75f9XBJ6HmI0fer/Ex2VLnzyfdzLE6UrVrFJ9//
4r7w788fPPJ9yRu+jeUneeT72XdSff1UeOT7x2eHBRw4dZ98n7W3e67373vk
+7ITN2jEbr5Hvh/V6TOafaqafD/m+a6apEdV5PsqKksFjd8qyfcP9Z+L9phU
Sb5/PC7rqNbSCvL9pE7Z77565eT7HWpjxydYl5Hvd7dfffmde4d8v69n43X/
ilLyfYvCqI0mP4vJ97/eTlvAl7xFvp9wqiLw3dqb5PsW4n2dfskF5PtWjqqN
nQ355PtXY2ZsqNPPI9+vH5wP6Pue5+Nn3TXnMPXZo22KrguYJ+tKV02045G3
e9Qkaa7n88jbw50zspYo8snbhz2vi9pqzSdv77vd23PlEJ+8/fsh98ero/jk
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
FmeTZ1Qs031nMo5NnuEuf+CYpQKbPOPc1HPVL2awyTOuzpPv9lnIJs8wM7/f
IK/NJs8Ym2yk4qjHJs/wdFk1OnYdmzzjV0uzXJkZmzwjuu5Kfaklmzxj1NVQ
p71b2eQZyVJpbf3b2eQZeVv15io6s8kzDjpO2WbuyibPmKt+VPrkbjZ5Rl9N
yowF7mzyjOs3Zhi2QYyeYfdV3/UbxOgZbycYuEyDGD1j3kM1j4swHnrGWKHb
roXwfegZO1703v7hxCbPiLva8W6hI5s8Y8uExz0b4PegZ0yYx7D+wO9Fzxho
q1023pxNnsH5+aBLCOcLPUOt/OmFHfps8oynk7IrguB8o2eYF+5b6qXOJs+4
bNYY92Ymmzyj+n1NOheuJ3rG3WlnX50czybPkJ769lkB5AN6xmKdIF0TyBf0
jLOFrRenfGaRZ0zzDWwa/pJFnnH3BxPL1LDIM265GyYqlrLIM7YnCA1+QT6j
Z8Tk7nA1TmGRZ+B8QM/YtsI9K+cEizzj2jS1gIf2bPKMUZKXgtV2sskzFr1L
M3ziwibPUFAqqo90Y5NntCybahqwh02e8bn243c2XF/0jImrjGYO82CTZyht
11zJgu3oGSOX7K/yh8+jZ2wbu8U8HMZHzzCKaPa6Ct+PnqFodVJTdHzoGecn
xRkK4fjRM3zPXr5VcJJFnvFPP9lvUwyLPENuf2kFaxubPONLr660/A42ecbp
osM2/ZD/6BmPm4c7/IB8RM+YLSX1dxQcL3pGplePnyf8HvSMgqk2X/ohRs84
1OUSVQcx9TNMsmurh8+jZ7B3nNOWh/xHz9BZ4D9s/y42ecZ4c83FEyH/0TOM
G25vGAXzFT1jYfD2H0cTWUz4tBkpj0tfMvPuXtGYDfujbwgmDHQlwXjoG2XD
FxVLi+bboG+4Ms0Sr+B40DfqCsceewTHi77xMO1T3wDE6BvVIWKRbhCjbyxZ
NPv7RPg8+kZOT2hBE5wv9I1t/hq8F3D+0TeGWrya+F80i3xjTrFVlBRcD/QN
1X3cguMwv9E3jv5YvzsOrgf6Rt3HSxtZMD76xiy7+7fq4Pegb8i61K03g+ND
37A9djmiB2L0DaOFVZeaIEbf+PtUNu0vHD/6RljlKKntMB76Rmvg1K31cP7Q
NxadmLMrHM4v+kZSTeCaNLge6Bs8D6t7X5JYzLWPZ/2rCoTMZE7XiWzIV/SO
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
Gh99ZKGz5KIV8P3oI0MG/8P6EOP/7+3/B3Z66Xg=
   "], {{{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1: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
Ag==
        "]]]}, {}, 
     {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV1He8T3UYB/Bzl5FxRVRoXKIkNEVaIk0jmVFJtG0qWhpKqSgNu+y99y6S
kTKLzJK9y969nz/e9/N8P8/v3PO6v3NeN6tpq9otU5MkSaGzH73SkqRCjiSp
yFJzwYwkWZKeJHnk+/IHMszV5BvM4BwXczftmMAxtrv+AjeYn2EA/7BEl0/e
RVvGczR2+vOUNjehP9tYrMuUd9KGcRyJnf4c15ufph9/87Mur6xEa8byX+z0
Zyllfoq+/MUiXR55B60Yw7+x05/hOvOT9GErP+lyy4q0ZDSHY6c/zbXmxvRm
Cwt1WzhFSedG9GIzC3SbOUkJ5yf4lk38qNvECa5xbsg3bIznoJvPPOYyh9nM
YiYzmM40prKR4xR3bQO+ZgNTdBs4RjHn+nzFn0zW5ZIVaMEoDsVOf5Qscz16
sp5JuvtlJ6Zzlou4nVcYycH4rM/dJ1+L+3MqnqfuLTmLC1xNXb5kHRPt35Pz
Sff+VY3nQE5zRzmNM3GO508u/Tsyn5wjU2R5mV8ukNnlyzKvHCEPxH3c4xLn
xebcsnO813KuTJWVZQG5UOaQr8pMOVmejHfM9Yvib9a9KWdynqviWZJNX0d+
wR9M8Pl35TzS7KrI15nK6bgHbzObxP42+RLD2R+/w/X3yg7x3XMi3lvdlfJx
evA743XZ5a28yDD2xU5/j2wf3y/H4z3WXSFr0521jNNlk7fwAkPZGzv9IYqa
H+Nz1jBWlyFv5nmGsCd2+oMUMdfiM1YzRjeaUYxkBMMZxlCGMJhBDGQ1Byjs
2pp8yiq+161iP5c716AbK/lOt5J9XOZcnU9YwQDdCvZyqfOjfMxv9Nely5t4
jsHsjp1+D4XMj9CVX+mnS5M30pxB7Iqdfnf8PzU/zEcsp68uVZajGQPZGTv9
rngfzQ/xIb/QR5ciy/Js/M3siJ1+JwXMD9KFZfTWJbIMTeN7YHvs9DvIb36A
D1jK/1Zc23E=
        "]]]}, {}, 
     {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0VWUUGUUgNE7AwMDUvJASYdSSjN0SCMIDKXSQwvMSCMd0t0l3SmoSCvd
oSCtSHdJ97B52Os759yXu9afKSomMjo0CIIQYkkRFgSFw4Mggkrm5PGC4B9N
qKv1b0LNw3Qxh3jJt/RnNrt4SB2a0Z3JbOYmFalAecrxOWUpQ2lKUZISFKcY
RSlCxPv/oxAFqU1TujGJTdygAJE0oSsT2ch18tOWfsxiJ/9Ti8Z0YQIbuEY+
2tCXH9nBA2rSiM6MZz1XyctQFnGQF7SmDzPZzn1q8APz2cdTGrKUI7ymE+P4
jSvkYRXHCfEOQ/Q08cwL9QDPacVZwt2Xa2L9U9/Sm6T2kxpXZ+gHuk3v8SUf
2s9pAl2hSfQvjWUQyeynNEznaSLdq09owBniuy3Rw7yiIyeI4z5W13GZz1jJ
MQLfBusC9vOMlizjKG/oxXT+4C7VGchc9vCYb/iOMfzKJT6lBT2Zxu/coRoD
mMNuHvE1MYzmFy6Sm+Z8z1S2cpsv+IpoRvEzF8hFFD2YwhZuUZX6dGAka/mP
nFShHu0ZwRrOk4PsfMLHZCMrWchMJjKSgfSkIy0fkYbUpCIllalLO4bzE//y
DgRph3o=
        "]]]}, {}, 
     {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0mUUFVUUgNGhQ7pBuksapKS7OxWkQaS7u7u7u7uRkEZBQFFRSVFROhWk
9vzY7zt3zf0x651J17JLnc4RgyCIQFw/CaMGQYHoQVCQcuY00YLgT02qu/Qa
cc0TdRM/Es25o45gJed4S11a0p8FHOc5ZSlDaUpRkhJ8QnGKUZQiFOZjClEw
fDfyk486tKAf8znGM/JSm8/pyzy+5il5qEVz+jCXozwhN18wnBV8yxtq0oze
zOEIj8lFB4axnG94TQ3Gso5LRPL/fKa9mM1hHvERE9jIZaK6116Hsoyz/E91
xrCWi0R071Pdws/EcO6pszjEQ3Kyk6vE8Xy83iKheYP+QBRzO71NYvM2TaG/
6Ac6RFPqDY2vSzWZntFXVCO18x+aRLfrh/qrxtLRmkpvagJdo8n1gkbQpvo7
icyb9Seim3vodeKZZ+pXPCAHO/iN2J6N0/V8T2TntrqVK8R0HqxLOM1LqjKK
1XxH4E4T7c4MDnKf7LRhEIs5xX9UYSSrOM87GtON6RzgHtlozUAWcZJ/qUwj
ujKN/dwlK60YwEJO8IJKNKQLU9nHP2ShIg3ozBT28jeZqUB9OjGZPdwhExnJ
QHrSkZY04R7DXYX7DncYfgfhrsJ9kzTcb/iNhLuiPPX4kkns5i/eA04PiXI=

        "]]]}, {}, 
     {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0mXYFVUUgNEL0iAhISHx0Y2EtHR3SYPS3Q0SBt0o3Z3S3Up3p5TSoXTn
mh/rvufsmef+2RPWuEO19uFDoVA44vlJETkUyhElFMpJVefs+lIz6B59SJjz
VN3GbRK599JxrOUKsc1+0A4MYQmniWReRStTiYpUoDzlKEsZSlOKkpSgOMUo
ShEK8z3tGcxiThHR/xfShrRjEIs4SQTPvtUGtGUgCznBZ54V1J6MZQ2XiWVe
X9vwKws4TnjzAtqDMazmEjHN6+lENnGd+Gat9Rfmc4xwZvl1Clu5RUKz7jqa
VfzN52Z1dQIb+Zd4Zq10B3dJ4v6zzuMoIfd8upv/SeE+WZ+SxnmL3uRL5276
nHTOf2pmva9JdZRm1ceaSldqRr2oMbSOfq0vNL3+pVn0gSbT8ZpNn2hq3aCZ
9B+Nqy31GWmdt+sdEjv/pI9I6TxXj/CRvOziP5J7Nkk3c4ME7l11J/f4yn2k
ruAC0d1r6++s5xpfmLXQAczhMB/IQxdGsJzzRPNuLf2NdVwljllz7c9sDvGe
3HRmOH9wjqjeranN6McsDvKOb+jEMJZxlije/06b0peZHOAtuejIUJZyhsje
r6FN+JEZ7OcNOalOY/ownX28JgfZgz0Guwr2Heww+A6CXQX7JkOw3+AbCXYV
fEPBPoNvItgRYVSjEb2Zxl5e8QmW5IxJ
        
        "]]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV1He4znUYBvCfnNOSlBKVspM0jIaUiChKSSpFEcomGiIUKipFGdl77wrH
PPZWRpkhyt57VOjz/PE59/O9n/O73vO+7/c6eeo0r9osQ5Ik7f3okzFJVqQk
yWc8TVb26Fay2zyYOtxHQt/Yyc95hpvYq1vFHvMQ6nI/GegXO/kFFbmZfbrV
7DUPpR4PcAX9Yyc7U4ls7Nf9wj7zMN6mCBkZEDvZhWe5hQO6X9lvHs47FCWF
gbGTX/Ic2TmoW8OgSOevqEwODunWMjjS+Wue51YO69YxJNK5Ky9wG0d06xnK
MIYzgpGMYjRjGMs4xjMhnvHsN1Thdo7qfuOAeQT1KUYqE2Mnv+VFcnJM9zsH
zSNpQHGuZFLsZDeqcgfHdWflj7xPaTboDslRNORBrmKyfoPszkvcyQndOfkT
H1CGjbrDcjSNeCjuTmqSzJbtuZp/mMZHlIvv0j5ddmCK5zfK76gWf7vdApmL
S8ykLdfql8iTfv+8/Jksug/jNeSiuJ/yybhbcq68UX4qr5PL4j7KTZ4/Yh7D
9c6N4/3KhTKrfDjuspwjb5CfyExyqbyGf5lO6zjrF8un4r6Z58mO8fl6jU3y
e14mN5eZRTtO2V+QU2lFWTbrjsqxNOGReM/8RxptKB+fvd/bLHvwCnk4rdvC
MfM4mlIi/u74nGIne/IqeTmj28rUSOdeVCcfZ3V/MI3ppDGDmcxiNnOYSzrz
mB/PeLY3r5Gfc7ptLIh0/oHXKcB53XYWRjr3oQZ3cUG3g0WRzn2pScG4R7o/
OW4eTzMeje+XxbGT/XiDu+O70u3khHkCzSlJZpbETvbnTQrFZ63bxUnzRN7l
sbgnLI2dHEAt7uGi7i9OmSfRgsfjXrIsdnIgtSkc91n3N6fNk2lJqbhnLI+d
HMRb3Bt3Jv4vc8Y8hfd4Iu51vDYz+JgKpLp/82WneH/m5TKbXOH5/wG61trs

       "]]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwN0WO8FmYYwOE3nJNr9SEtndqy27K1jJPttpZt27Zt27ZWy7Ztner6cP3+
930/H5+Qhq1DW4ULBAJhxA0KBK6zmqE0pwoliEd8EpCQX0lEYpKQlGSEkJwU
/MbvpCQVqUnDDdYwjBZUpSRpuclahtOSapTiCTuYRBcako5brGMErahOaZ6y
k8l0pRHpuc16RtKaGrzlILPpSxmesYspdKMxGbjDBkbRhpq84xBz6EdZnrOb
qXQnjNMspQkfOcp8BhIIDgTO6goycpeNjCaCt/Palq+cZDGR3C9rLd5zmOhu
czVIL+ov2l9/cIaY9uUaRa9qbC2nL9hDNPs0jagXNJb20O/8Rwz7Mo2sV7Qp
nzjGAoLdL+kgwpn/15Vk4h6bGEM7vnGKJdTmA0eYxwDK85K9TKcnf/OZ4yxk
MJm5z2bG0p46VOAV+5hBL/4hCw/Ywjg6UJeKvGY/M+lNM7LykK2MpyP1CCUb
j9jGBDpRn0r8wZ9kJwc5yUVu8pCXfOSnAAUpRGGKUJRiFOcx25lIZxpQmTcc
YBZ9+JcvnGARQwjvH87pKqKar2kc/Ut/Avjjhvk=
       "]]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV0mW4FlUUgNGPuuQlRLiE0ghKIyBId7d0CJdupESku7u7QelukO6UblBS
CcGilDU/1rz7PHN+zZ60kZ1qdIwSCoXCPRKHhUIP2MwY2vMVpfmQJCQlgmQk
JwUp+YiPSUVq0pCWdKQnAxl5yBbG0oFalOETHrGVcXSkNmXJxGO2MZ5O1KEc
f3OQ2XxPMzLzG9uZQGfqUp5/OMQcetOcT/mdHUzkG+rxP6dYwmAq8C+HmUsf
WvAZT9jJJLpQn1DMUOi0LmUIFXnFEebRlzjuXNG1tCS688/6IyMId76uG8jC
U3YxmYTe3dKuxDJf0tXBrsy/aAOimM8Eu9Jl+oHeCXalQzWeXgt2qOuD/eq9
YI9aSV9zNNi383xNpLeDfWs/jatXg/9A1wX/iP6qrYhhPq8rSGy+qyOJb76h
G8nKM3YzhW7E9v6yrqEhUZ3P6nKGUZk3HGMB/WlNmHsXdCWjyMZz9jCV7jQi
mnvn9AeGU4W3HGchA2hDdv7gJ6bRg8ZU5R0nWMRA2pKDF+xlOt/yNdXIyUv2
MYOeNKE6ufiT/czkO5pSg9x8Th7yko8vyE8BvqQghShMEYpSjOKUoCR/cYBZ
9CKSmvzHSRYziHbE9H0u6ipGk8D5pm4iwnxfU2spfQ+ClIj1
       "]]}, 
     {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV0lW4VVUUgNED0iFw6VDuJaQ7BBSRUhq9dHd3CyIhXYKAgtIi3d3d3d1I
K52CgGM/jPOvNff+zsvcEY07RLaPEgqFwvyExwyFXrGbyfSiEZFEkI70ZCAj
n5CJzGQhK9nITg5ykovc5CEv/7KHKXxPY6qQj9fsZSq9aUJVYsYKhU7pAobR
kfy8YR/T+IGmVCOW90/rQobTiQL8x36m04dmVCe298/oIkbQmYK85QAz6Etz
Enn3iq5iHDWIY3ZWFzOSLnzKOw7yB/1oQZh3r+pqxlOTuGbndAmjSON+T7fS
lWTuN3Q9E0nrfl93UIj3HGJmsCPPHml/Ujnf0c3BrpyfaUsSO18LdqVrgn3q
k2BX+ot+rP8EO9TtwX71RbBHraXx9Hywb10afBP6ONi3/qQf6d/Bd6Dbgm9E
n2s3kjvf1A3BN+T8VH8j3PmB7qQwIffD+ic/ktr9rm6hFUncr+tafqU28c0u
6DJG050UZrd0I79ThChmR3QWA2hNUrO/dB0TqMOHZhd1OWPowWdENT+qsxlI
G+qSwPySruBnvuNzPjA/pnMYRFvqUZRonh3XuQymHfX5guiendB5DKE9DSjG
lxSnBCUpRWm+4mvKUJZylKcCFalEZb4hhv8/qfMZSgcaktD8sq5kLD1JaXZb
NzGJCPeHuosszi81j36r/wOVIIvQ
       "]]}}}],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
    "AxesInFront" -> True},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Input",
 CellChangeTimes->{3.684631755048916*^9}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
NJBTa/q0VoM40aX7eZS8jj1PX9NaOq1OnOdwuqLEuoZtLu6ZND5nTVzRqzY1
o17BnattdjvTQoiQdxRlRjuX8CA6L5L4J4OQCZzdZnRqAc8PnepKiaggmpz3
5AgdncPd3DNWmak9RM3V4LtHz89g05GuI+zCK4RRp8GCiuIUzo85sfz1OxeE
OhgTH4CM61Lt2sPmJECYQ9agt2AUC6blCXI5K4HINdHWoYwhPN6g/bflgz5o
97SKvGnvw9ubuNh4O6zB3Yz+3O3d3bjJ4MTIvkv3QIpWVTJerBVTtSjxpjWF
QsFlh2s+z+px2h4tEzaZBNB6Y15f0vQVr14rr8B6r0GoWjjU42gKFhenb7T5
/An0NToeCzjlAU1NlEF2VRl8k0jbp+74HdiurN8TpKiFgJKDRrEhPcB+rUIh
dLwbRlX/5LddGIBXpJ+aPUr9oP+O2SH82jB0XC96dZ96CGJGvI39ZcZhnKZA
XcV0Y36PJE4ULpLB8GLTwbZLJODa7Ttxa30KJrNitPhrB8Eq7ZFnXd8MKHX8
Vh081A8UN/7oLTUsAVOnIJ+wdQN8P/pzfLx9BQpYPlxmZKoBz/FBQZryNaBr
I41/jC+Dy5x7pIO1KBAWr2kaDf4Et0XyDmVfoETRT4JZLKhfg9XxAxzvlanQ
woMkvbiziWAGXj9/nKVGkWfaTb7cCYWaosG/8/I0yNtLfjfjSU9YcCNb7ZGg
RV2MGX01726BiERHw83DdOitTfjeit36cKjr9cGgffTIIMWJz1xaGa7VVqaJ
iTEgW7nq9IJ4cagRP1uSeIgRXbU49qb/6w5gCskqHeZnQq0zVScbzFYJte7p
OJ09zOjedMzTzqVuYv21WnkNFwvq+ClUf8n6G+H8UdFZmZYVZa3zFjyZzyRG
PwmsNNOzocMTV5XhUzDBYIJ5/ZbY0GwO55jGSRvCbD7EqGB9DVMYvGwvszEk
eq8FK1TSr+LPLfuovsp5ELl3TqET7Mv4FdP5t22WccQ9vtRPa2KLWMRyeIi5
4BMRLuWmkHd8Hg9e+ffNTb6BGB9e76tVnMX/GXfrfT9LJjT/O0t6qjqNC2X1
iAtLDODZonrXCU3idsYl34SAPdDqqvHQOnEcWwnc+Tr19gR8Fghp0coexnK6
9onfzp6Hw+ySpmtlA1ialF7x+b0FJPErNemt9+DfKnF6u/ScQVbUrI9PuhNb
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
6S3PtdfNODQkwqa3tNUct3jsmrrlLXPmvt8MiMnc8pYmB50CIorfb3lLsfHM
I1/3f9jyllKDf2J9yJ+3vKXtiWQTEcBb3tI2qzh9Z0PZ/7zlU2tSOfe3LW8Z
pj309Hlr9Za3bKr8cjkmp3bLW74YfLGj7lXdlrcMOJZFpR9dv+UtdbkvPxNW
/Z+3fNL01dNuqnHLWxZofr2rp/d3y1vyDjOZPjNq3vKWCwMpY08FW7a85b21
ad1Ej5Ytbxklocv66l7LlrdMteOWmuZr2fKWZqBzS/Ra85a31Ev53Sp55u+W
t1QSCDVn6W7c8pbRR1BrrOH/vGWBP2WtfWD9lrfcn9M4NFNUt+UtLx89EXm3
q3bLW3IX+oT4UX7f8pb84kTwA79vW96SlsxdeXyhbMtb1pdHqOxtwVveMqHA
0+q2S8GWt7QZ+f3yseaHLW/JkLzuLHwge8tbMmbfWZL4kLnlLZmF+Si4H6Vu
eUvKnIow3cIk2PSWCR1O42zPnsKmtxQMDdPlT4mATW8Z7OVyx3R/EGx6S216
2ojKBB/Y9JZFcmK/eD67w6a3rPi/62HTW+KjN6ldklxg01v2hl0U2vHdEza9
pbjgvrEXL/xg01s+dq2/oxXwCDa9pXnSJW3ubVGw6S13MQsXig3Gwqa3zFM7
HLKtJnnLW15t0eOhN0vf8pYNCjNR+n1vIChX13fhZhfc0Nj/XOJN05ZvzBui
oEzu+bvlG+NOjakUfm/e8o0zcqmkCYOWLd/YZnA0TSmgZcs3Un4jRPk3Pt/0
jQMONatuG7/f9I0PlfSt6Lr/QiIaDM/qmYe9kpEfv8U3bXlCqwnWlu8X3255
QkWqxm2ebulbnvAt5dObSdwvtjxhbLlKo7t1HGx6wtDylsv9dlGw6QnjJXs8
um+FwqYnnHjYr/zfLn/Y9IQ8uxRXdz+7D5ueMEJSizWNwxU2PaFA4em5HfVO
sOkJ0/mTGlUFPWDTE1pp19r3zzyATU8Yejq3d84sGDY9IcPEuoHko8ew6Qmp
ngfmSvA+g01PWBE4Emn6+PmWJ2whFci97X655Ql3oKTtp45mQarX9OStX52w
L+qmWY9205bfa+so7Hif+HfL7505mpOe9KR5y+/Rar/+uw21bPm9kKT48BN+
LVt+z1s+UD/JtmXL7wln27GYzTZv+T1Kms4/Q8LNYCyouNJnPg8u3vTXlWea
trxc1pOOjtq977e8nKhCA80h1owtL8cbyvN57GzKlpdjsayk5nmQAJteLlzt
etGthWjY9HJUukOP/rsSDpte7k7kDi1u9gDY9HJpckUJGge8YdPL9d1INKvX
uAObXi5DylHsUcRt2PRyvlbFj+sbvWDTyxnIv7h92O4hbHq5u3vJ5pwNYbDp
5X5FsXqNZ0VDWdq7MNlb3UBbsttlB83fLX8Wamc4syzUvOXPoi6LuX1daN7y
Zw35u1P3bpzPTX+mS6MWU7xxvjf9GZHybPWwfMv//JmN62nj2OYtr7V66uPx
k07PYNNrqekyxLisPYZNr6WrSCXz8EQIbHqtS64OnBc0fGHTa30T2ZZ7kuMe
bHot7Wsb0ym9M2x6re209cYOC46w6bXoLh0SlfnnDpteK0ufYZpd9AFsei0m
5fCz1y4HwabXusT5XyJXYwRseq0XdXP8Q6diYNNr3bfjUlFbSIJNr3U1+cjV
UtGXW15L+o8PTezV13DrUczAwdoOMD6pm52xp2nLR/FHfzvEdvfvlo/iXpI8
fMm9ectHWXhLmdEdbtnyUQprOpwJ3i1bPspt52D+tGvLlo+CQebERoaWLR9l
dE/ZGak0g1z4xGFvoXmwuCm/T0vg75ZHYrA2GQtIfb/lkQgnNc64zowtj6S8
h/3AfVLKlkfaeeasJFtcImx6pNI5F4nMiiew6ZF0aBzYn1NEwKZHumezfc6O
OxA2PZJW4iWngn/esOmRHhMLjO4ebrDpkZZtKtS/RrrCpkfKmoyTb+T1gk2P
5M3DQTXr6w+bHomvjcksICMUNj1SCL1JpVRbFIiIUwXxjnSBaJed/JGWpi3f
8/z3uY+9VM1bvuel9/w9357mLd9D83Z+75erLVu+J61gN8552LLle+xLJN2n
1Vu2fA+ejozYltu85WFG/oS2+FjHwqaH0TNiir+cFwmbHoZ3p9fxI5qPYNPD
nEEsNWOSfrDpYTS66Vcqz3vCpodpPmDNdobeBagCkDNDwSDsHWi0sMlu3vIi
1Kdkv+eda9nyIiyKzUftN/Z304ssvS/zy9o4nk2PwP3nRj3PxnrZ9AjB4ukP
rvq0bHmEAz6+fm2HWmCz3x+VKDtO2u4Em/3+C5mHrpeHOsJmv3+O30vbVskd
Nvv9LzJHi+oqfGCz3+95v05IvTUQNvv9zxoCHTTvRsBmv19eUul56q+nsNnv
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
J38Za5zK4PqpRuGcl9OtExhcP907bZ97jFEcg+unu5ulVKcMRDC4ftoT+Khp
g2cIg+unHaNy+852+DKB0yZIlRm2Mkb2j9XHQr2K64sPNTv6BXpCWl+UM4np
Pw33B1xffFWzIO2gh5DWr9T8JtpqeQpp/Spmg8sXZ9gf16/u9+evXqkjZHA9
6NZPLZ+2Vh9aj2FVL+6eDvcTXI8ZOaLpwz+4n+B6xKLRyieGuAhpPSI44WJC
JMxv9H77f6NVLkCMvm9vGM3uh/d/9P1YQd72JrifoO+HGupYDun2ZtD3Y+ak
Tm+F92P0faWimhcT4Pqg7y99uXVCNdwf0PfV+zKS6+B+gr6/+aLCtxFwP0Hf
P7nYSZ8F+6Pvt7SXTFWC8dD326eN+dgb5M2g7xttr5VeCtvR97MaZ6gthc+j
79cc/RirAr8Pfb9Jw1TvM8To++yKY9YCiNH3i9tLi1dAjL5v+qqGuwLGR9//
PnpC4FcDbwZ9//m8bV6SCbnk+9Hvvzu0T8wj369UbMg4eT+ffP/fxIqOMZ4F
5Pt/MkY+VVO8Sb7fU5ul+rWviHx/3NvzYSWVxeT76+5FDT1TXEq+37347pbc
a3fI92unJ3n/XFVGvl/o5qCWqF1Ovv93dOtNNZUK8n29TKX/FvdXkO9fvK54
0e5DJfk+d7L+vXpuFfn+yln3f8dFV5Pv2/4oWdVtfI98P3Dph9CIH/fI9y/v
t1FdlXiffH+mj05EnjyPfD/Kdll9RiKPfP9a0XL9Yb945PtZn/qcR6zgk+87
ifeM0tjLJ9/nTtj61zaCT75f9XBJ6HmI0fer/Ex2VLnzyfdzLE6UrVrFJ9//
4r7w788fPPJ9yRu+jeUneeT72XdSff1UeOT7x2eHBRw4dZ98n7W3e67373vk
+7ITN2jEbr5Hvh/V6TOafaqafD/m+a6apEdV5PsqKksFjd8qyfcP9Z+L9phU
Sb5/PC7rqNbSCvL9pE7Z77565eT7HWpjxydYl5Hvd7dfffmde4d8v69n43X/
ilLyfYvCqI0mP4vJ97/eTlvAl7xFvp9wqiLw3dqb5PsW4n2dfskF5PtWjqqN
nQ355PtXY2ZsqNPPI9+vH5wP6Pue5+Nn3TXnMPXZo22KrguYJ+tKV02045G3
e9Qkaa7n88jbw50zspYo8snbhz2vi9pqzSdv77vd23PlEJ+8/fsh98ero/jk
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
FmeTZ1Qs031nMo5NnuEuf+CYpQKbPOPc1HPVL2awyTOuzpPv9lnIJs8wM7/f
IK/NJs8Ym2yk4qjHJs/wdFk1OnYdmzzjV0uzXJkZmzwjuu5Kfaklmzxj1NVQ
p71b2eQZyVJpbf3b2eQZeVv15io6s8kzDjpO2WbuyibPmKt+VPrkbjZ5Rl9N
yowF7mzyjOs3Zhi2QYyeYfdV3/UbxOgZbycYuEyDGD1j3kM1j4swHnrGWKHb
roXwfegZO1703v7hxCbPiLva8W6hI5s8Y8uExz0b4PegZ0yYx7D+wO9Fzxho
q1023pxNnsH5+aBLCOcLPUOt/OmFHfps8oynk7IrguB8o2eYF+5b6qXOJs+4
bNYY92Ymmzyj+n1NOheuJ3rG3WlnX50czybPkJ769lkB5AN6xmKdIF0TyBf0
jLOFrRenfGaRZ0zzDWwa/pJFnnH3BxPL1LDIM265GyYqlrLIM7YnCA1+QT6j
Z8Tk7nA1TmGRZ+B8QM/YtsI9K+cEizzj2jS1gIf2bPKMUZKXgtV2sskzFr1L
M3ziwibPUFAqqo90Y5NntCybahqwh02e8bn243c2XF/0jImrjGYO82CTZyht
11zJgu3oGSOX7K/yh8+jZ2wbu8U8HMZHzzCKaPa6Ct+PnqFodVJTdHzoGecn
xRkK4fjRM3zPXr5VcJJFnvFPP9lvUwyLPENuf2kFaxubPONLr660/A42ecbp
osM2/ZD/6BmPm4c7/IB8RM+YLSX1dxQcL3pGplePnyf8HvSMgqk2X/ohRs84
1OUSVQcx9TNMsmurh8+jZ7B3nNOWh/xHz9BZ4D9s/y42ecZ4c83FEyH/0TOM
G25vGAXzFT1jYfD2H0cTWUz4tBkpj0tfMvPuXtGYDfujbwgmDHQlwXjoG2XD
FxVLi+bboG+4Ms0Sr+B40DfqCsceewTHi77xMO1T3wDE6BvVIWKRbhCjbyxZ
NPv7RPg8+kZOT2hBE5wv9I1t/hq8F3D+0TeGWrya+F80i3xjTrFVlBRcD/QN
1X3cguMwv9E3jv5YvzsOrgf6Rt3HSxtZMD76xiy7+7fq4Pegb8i61K03g+ND
37A9djmiB2L0DaOFVZeaIEbf+PtUNu0vHD/6RljlKKntMB76Rmvg1K31cP7Q
NxadmLMrHM4v+kZSTeCaNLge6Bs8D6t7X5JYzLWPZ/2rCoTMZE7XiWzIV/SO
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
Gh99ZKGz5KIV8P3oI0MG/8P6EOP/7+3/B3Z66Xg=
   "], {{{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1: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
Ag==
        "]]]}, {}, 
     {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV1He8T3UYB/Bzl5FxRVRoXKIkNEVaIk0jmVFJtG0qWhpKqSgNu+y99y6S
kTKLzJK9y969nz/e9/N8P8/v3PO6v3NeN6tpq9otU5MkSaGzH73SkqRCjiSp
yFJzwYwkWZKeJHnk+/IHMszV5BvM4BwXczftmMAxtrv+AjeYn2EA/7BEl0/e
RVvGczR2+vOUNjehP9tYrMuUd9KGcRyJnf4c15ufph9/87Mur6xEa8byX+z0
Zyllfoq+/MUiXR55B60Yw7+x05/hOvOT9GErP+lyy4q0ZDSHY6c/zbXmxvRm
Cwt1WzhFSedG9GIzC3SbOUkJ5yf4lk38qNvECa5xbsg3bIznoJvPPOYyh9nM
YiYzmM40prKR4xR3bQO+ZgNTdBs4RjHn+nzFn0zW5ZIVaMEoDsVOf5Qscz16
sp5JuvtlJ6Zzlou4nVcYycH4rM/dJ1+L+3MqnqfuLTmLC1xNXb5kHRPt35Pz
Sff+VY3nQE5zRzmNM3GO508u/Tsyn5wjU2R5mV8ukNnlyzKvHCEPxH3c4xLn
xebcsnO813KuTJWVZQG5UOaQr8pMOVmejHfM9Yvib9a9KWdynqviWZJNX0d+
wR9M8Pl35TzS7KrI15nK6bgHbzObxP42+RLD2R+/w/X3yg7x3XMi3lvdlfJx
evA743XZ5a28yDD2xU5/j2wf3y/H4z3WXSFr0521jNNlk7fwAkPZGzv9IYqa
H+Nz1jBWlyFv5nmGsCd2+oMUMdfiM1YzRjeaUYxkBMMZxlCGMJhBDGQ1Byjs
2pp8yiq+161iP5c716AbK/lOt5J9XOZcnU9YwQDdCvZyqfOjfMxv9Nely5t4
jsHsjp1+D4XMj9CVX+mnS5M30pxB7Iqdfnf8PzU/zEcsp68uVZajGQPZGTv9
rngfzQ/xIb/QR5ciy/Js/M3siJ1+JwXMD9KFZfTWJbIMTeN7YHvs9DvIb36A
D1jK/1Zc23E=
        "]]]}, {}, 
     {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0VWUUGUUgNE7AwMDUvJASYdSSjN0SCMIDKXSQwvMSCMd0t0l3SmoSCvd
oSCtSHdJ97B52Os759yXu9afKSomMjo0CIIQYkkRFgSFw4Mggkrm5PGC4B9N
qKv1b0LNw3Qxh3jJt/RnNrt4SB2a0Z3JbOYmFalAecrxOWUpQ2lKUZISFKcY
RSlCxPv/oxAFqU1TujGJTdygAJE0oSsT2ch18tOWfsxiJ/9Ti8Z0YQIbuEY+
2tCXH9nBA2rSiM6MZz1XyctQFnGQF7SmDzPZzn1q8APz2cdTGrKUI7ymE+P4
jSvkYRXHCfEOQ/Q08cwL9QDPacVZwt2Xa2L9U9/Sm6T2kxpXZ+gHuk3v8SUf
2s9pAl2hSfQvjWUQyeynNEznaSLdq09owBniuy3Rw7yiIyeI4z5W13GZz1jJ
MQLfBusC9vOMlizjKG/oxXT+4C7VGchc9vCYb/iOMfzKJT6lBT2Zxu/coRoD
mMNuHvE1MYzmFy6Sm+Z8z1S2cpsv+IpoRvEzF8hFFD2YwhZuUZX6dGAka/mP
nFShHu0ZwRrOk4PsfMLHZCMrWchMJjKSgfSkIy0fkYbUpCIllalLO4bzE//y
DgRph3o=
        "]]]}, {}, 
     {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0mUUFVUUgNGhQ7pBuksapKS7OxWkQaS7u7u7u7uRkEZBQFFRSVFROhWk
9vzY7zt3zf0x651J17JLnc4RgyCIQFw/CaMGQYHoQVCQcuY00YLgT02qu/Qa
cc0TdRM/Es25o45gJed4S11a0p8FHOc5ZSlDaUpRkhJ8QnGKUZQiFOZjClEw
fDfyk486tKAf8znGM/JSm8/pyzy+5il5qEVz+jCXozwhN18wnBV8yxtq0oze
zOEIj8lFB4axnG94TQ3Gso5LRPL/fKa9mM1hHvERE9jIZaK6116Hsoyz/E91
xrCWi0R071Pdws/EcO6pszjEQ3Kyk6vE8Xy83iKheYP+QBRzO71NYvM2TaG/
6Ac6RFPqDY2vSzWZntFXVCO18x+aRLfrh/qrxtLRmkpvagJdo8n1gkbQpvo7
icyb9Seim3vodeKZZ+pXPCAHO/iN2J6N0/V8T2TntrqVK8R0HqxLOM1LqjKK
1XxH4E4T7c4MDnKf7LRhEIs5xX9UYSSrOM87GtON6RzgHtlozUAWcZJ/qUwj
ujKN/dwlK60YwEJO8IJKNKQLU9nHP2ShIg3ozBT28jeZqUB9OjGZPdwhExnJ
QHrSkZY04R7DXYX7DncYfgfhrsJ9kzTcb/iNhLuiPPX4kkns5i/eA04PiXI=

        "]]]}, {}, 
     {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV0mXYFVUUgNEL0iAhISHx0Y2EtHR3SYPS3Q0SBt0o3Z3S3Up3p5TSoXTn
mh/rvufsmef+2RPWuEO19uFDoVA44vlJETkUyhElFMpJVefs+lIz6B59SJjz
VN3GbRK599JxrOUKsc1+0A4MYQmniWReRStTiYpUoDzlKEsZSlOKkpSgOMUo
ShEK8z3tGcxiThHR/xfShrRjEIs4SQTPvtUGtGUgCznBZ54V1J6MZQ2XiWVe
X9vwKws4TnjzAtqDMazmEjHN6+lENnGd+Gat9Rfmc4xwZvl1Clu5RUKz7jqa
VfzN52Z1dQIb+Zd4Zq10B3dJ4v6zzuMoIfd8upv/SeE+WZ+SxnmL3uRL5276
nHTOf2pmva9JdZRm1ceaSldqRr2oMbSOfq0vNL3+pVn0gSbT8ZpNn2hq3aCZ
9B+Nqy31GWmdt+sdEjv/pI9I6TxXj/CRvOziP5J7Nkk3c4ME7l11J/f4yn2k
ruAC0d1r6++s5xpfmLXQAczhMB/IQxdGsJzzRPNuLf2NdVwljllz7c9sDvGe
3HRmOH9wjqjeranN6McsDvKOb+jEMJZxlije/06b0peZHOAtuejIUJZyhsje
r6FN+JEZ7OcNOalOY/ownX28JgfZgz0Guwr2Heww+A6CXQX7JkOw3+AbCXYV
fEPBPoNvItgRYVSjEb2Zxl5e8QmW5IxJ
        
        "]]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV1He4znUYBvCfnNOSlBKVspM0jIaUiChKSSpFEcomGiIUKipFGdl77wrH
PPZWRpkhyt57VOjz/PE59/O9n/O73vO+7/c6eeo0r9osQ5Ik7f3okzFJVqQk
yWc8TVb26Fay2zyYOtxHQt/Yyc95hpvYq1vFHvMQ6nI/GegXO/kFFbmZfbrV
7DUPpR4PcAX9Yyc7U4ls7Nf9wj7zMN6mCBkZEDvZhWe5hQO6X9lvHs47FCWF
gbGTX/Ic2TmoW8OgSOevqEwODunWMjjS+Wue51YO69YxJNK5Ky9wG0d06xnK
MIYzgpGMYjRjGMs4xjMhnvHsN1Thdo7qfuOAeQT1KUYqE2Mnv+VFcnJM9zsH
zSNpQHGuZFLsZDeqcgfHdWflj7xPaTboDslRNORBrmKyfoPszkvcyQndOfkT
H1CGjbrDcjSNeCjuTmqSzJbtuZp/mMZHlIvv0j5ddmCK5zfK76gWf7vdApmL
S8ykLdfql8iTfv+8/Jksug/jNeSiuJ/yybhbcq68UX4qr5PL4j7KTZ4/Yh7D
9c6N4/3KhTKrfDjuspwjb5CfyExyqbyGf5lO6zjrF8un4r6Z58mO8fl6jU3y
e14mN5eZRTtO2V+QU2lFWTbrjsqxNOGReM/8RxptKB+fvd/bLHvwCnk4rdvC
MfM4mlIi/u74nGIne/IqeTmj28rUSOdeVCcfZ3V/MI3ppDGDmcxiNnOYSzrz
mB/PeLY3r5Gfc7ptLIh0/oHXKcB53XYWRjr3oQZ3cUG3g0WRzn2pScG4R7o/
OW4eTzMeje+XxbGT/XiDu+O70u3khHkCzSlJZpbETvbnTQrFZ63bxUnzRN7l
sbgnLI2dHEAt7uGi7i9OmSfRgsfjXrIsdnIgtSkc91n3N6fNk2lJqbhnLI+d
HMRb3Bt3Jv4vc8Y8hfd4Iu51vDYz+JgKpLp/82WneH/m5TKbXOH5/wG61trs

       "]]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwN0WO8FmYYwOE3nJNr9SEtndqy27K1jJPttpZt27Zt27ZWy7Ztner6cP3+
930/H5+Qhq1DW4ULBAJhxA0KBK6zmqE0pwoliEd8EpCQX0lEYpKQlGSEkJwU
/MbvpCQVqUnDDdYwjBZUpSRpuclahtOSapTiCTuYRBcako5brGMErahOaZ6y
k8l0pRHpuc16RtKaGrzlILPpSxmesYspdKMxGbjDBkbRhpq84xBz6EdZnrOb
qXQnjNMspQkfOcp8BhIIDgTO6goycpeNjCaCt/Palq+cZDGR3C9rLd5zmOhu
czVIL+ov2l9/cIaY9uUaRa9qbC2nL9hDNPs0jagXNJb20O/8Rwz7Mo2sV7Qp
nzjGAoLdL+kgwpn/15Vk4h6bGEM7vnGKJdTmA0eYxwDK85K9TKcnf/OZ4yxk
MJm5z2bG0p46VOAV+5hBL/4hCw/Ywjg6UJeKvGY/M+lNM7LykK2MpyP1CCUb
j9jGBDpRn0r8wZ9kJwc5yUVu8pCXfOSnAAUpRGGKUJRiFOcx25lIZxpQmTcc
YBZ9+JcvnGARQwjvH87pKqKar2kc/Ut/Avjjhvk=
       "]]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV0mW4FlUUgNGPuuQlRLiE0ghKIyBId7d0CJdupESku7u7QelukO6UblBS
CcGilDU/1rz7PHN+zZ60kZ1qdIwSCoXCPRKHhUIP2MwY2vMVpfmQJCQlgmQk
JwUp+YiPSUVq0pCWdKQnAxl5yBbG0oFalOETHrGVcXSkNmXJxGO2MZ5O1KEc
f3OQ2XxPMzLzG9uZQGfqUp5/OMQcetOcT/mdHUzkG+rxP6dYwmAq8C+HmUsf
WvAZT9jJJLpQn1DMUOi0LmUIFXnFEebRlzjuXNG1tCS688/6IyMId76uG8jC
U3YxmYTe3dKuxDJf0tXBrsy/aAOimM8Eu9Jl+oHeCXalQzWeXgt2qOuD/eq9
YI9aSV9zNNi383xNpLeDfWs/jatXg/9A1wX/iP6qrYhhPq8rSGy+qyOJb76h
G8nKM3YzhW7E9v6yrqEhUZ3P6nKGUZk3HGMB/WlNmHsXdCWjyMZz9jCV7jQi
mnvn9AeGU4W3HGchA2hDdv7gJ6bRg8ZU5R0nWMRA2pKDF+xlOt/yNdXIyUv2
MYOeNKE6ufiT/czkO5pSg9x8Th7yko8vyE8BvqQghShMEYpSjOKUoCR/cYBZ
9CKSmvzHSRYziHbE9H0u6ipGk8D5pm4iwnxfU2spfQ+ClIj1
       "]]}, 
     {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwV0lW4VVUUgNED0iFw6VDuJaQ7BBSRUhq9dHd3CyIhXYKAgtIi3d3d3d1I
K52CgGM/jPOvNff+zsvcEY07RLaPEgqFwvyExwyFXrGbyfSiEZFEkI70ZCAj
n5CJzGQhK9nITg5ykovc5CEv/7KHKXxPY6qQj9fsZSq9aUJVYsYKhU7pAobR
kfy8YR/T+IGmVCOW90/rQobTiQL8x36m04dmVCe298/oIkbQmYK85QAz6Etz
Enn3iq5iHDWIY3ZWFzOSLnzKOw7yB/1oQZh3r+pqxlOTuGbndAmjSON+T7fS
lWTuN3Q9E0nrfl93UIj3HGJmsCPPHml/Ujnf0c3BrpyfaUsSO18LdqVrgn3q
k2BX+ot+rP8EO9TtwX71RbBHraXx9Hywb10afBP6ONi3/qQf6d/Bd6Dbgm9E
n2s3kjvf1A3BN+T8VH8j3PmB7qQwIffD+ic/ktr9rm6hFUncr+tafqU28c0u
6DJG050UZrd0I79ThChmR3QWA2hNUrO/dB0TqMOHZhd1OWPowWdENT+qsxlI
G+qSwPySruBnvuNzPjA/pnMYRFvqUZRonh3XuQymHfX5guiendB5DKE9DSjG
lxSnBCUpRWm+4mvKUJZylKcCFalEZb4hhv8/qfMZSgcaktD8sq5kLD1JaXZb
NzGJCPeHuosszi81j36r/wOVIIvQ
       "]]}}}],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
    "AxesInFront" -> True},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.684634440271858*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"pdfTriangle", "[", 
   RowBox[{"x_", ",", "\[Mu]_", ",", "\[Sigma]_"}], "]"}], ":=", 
  TagBox[GridBox[{
     {"\[Piecewise]", GridBox[{
        {
         FractionBox[
          RowBox[{"x", "-", "\[Mu]", "+", 
           RowBox[{
            SqrtBox["6"], " ", "\[Sigma]"}]}], 
          RowBox[{"6", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]], 
         RowBox[{
          RowBox[{"\[Mu]", "-", 
           RowBox[{
            SqrtBox["6"], " ", "\[Sigma]"}]}], "\[LessEqual]", "x", 
          "\[LessEqual]", "\[Mu]"}]},
        {
         FractionBox[
          RowBox[{
           RowBox[{"-", "x"}], "+", "\[Mu]", "+", 
           RowBox[{
            SqrtBox["6"], " ", "\[Sigma]"}]}], 
          RowBox[{"6", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]], 
         RowBox[{"\[Mu]", "<", "x", "\[LessEqual]", 
          RowBox[{"\[Mu]", "+", 
           RowBox[{
            SqrtBox["6"], " ", "\[Sigma]"}]}]}]},
        {"0", 
         TagBox["True",
          "PiecewiseDefault",
          AutoDelete->True]}
       },
       AllowedDimensions->{2, Automatic},
       Editable->True,
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.84]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}},
       Selectable->True]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxItemSize->{
     "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.35]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   "Piecewise",
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True,
   Selectable->False], " "}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.6764622317264*^9, {3.676462275865959*^9, 3.676462333498724*^9}, {
   3.676462386203244*^9, 3.676462388994298*^9}, {3.6764661175139837`*^9, 
   3.676466119114414*^9}, {3.684532477326845*^9, 3.6845325183824787`*^9}, 
   3.684532784316008*^9, {3.6845328299790363`*^9, 3.6845329325663357`*^9}, {
   3.6845330180277*^9, 3.684533026054028*^9}, 3.684533084708044*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"pdfTriangle", "[", 
       RowBox[{"x", ",", "1", ",", "\[Sigma]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", "1", ",", "2", ",", "5", ",", "10"}], 
         "}"}]}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "4"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6764623486045923`*^9, 3.676462394184904*^9}, {
   3.67646603305241*^9, 3.676466039085231*^9}, {3.676467095974711*^9, 
   3.676467144451521*^9}, 3.684532791002536*^9, 3.68453283228883*^9, {
   3.684532907047003*^9, 3.6845329632608023`*^9}, {3.684533010619349*^9, 
   3.684533027756667*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJzFmnk0VW3bwE9FRFSkolSGJlIUTdR9FGlAZUgqSqkkGYqeIhlCFJkzho6j
QcMxbJkdM+cYkpAj85SjMpQhRb79rufZ135XrXe93z/f+vqnda299+267mH/
rt85R+qMjd65mRQKRWYWhfKv/0tMpdqmp6eZlH/+LfILXBUl+QviXcqFHTSR
SYhbrj+m6cn9gDhP94vfg4PfIXZ4ODKwV2MMYroPwyD21AjEzwbkFM31vkI8
1M2/JVd3COKTw8puNz98hthTgONmVN4HcbRp9z33H90Qb63H+utRB8RTjnMt
eSyaIL5U4LxgqqkW4rMNHSsOGZUwXVtyn7+qikdjb64wxcQSmNSyntDtBkxk
zLtYhd8mFeWm+N38/oSFEr4OjnG/s9BsA4tNy1Etssv+0HAnqA5JuBra1Ou8
RyqROz/0sZvRPuaDsvzyZjQRIRB107oT3d8p6j5frANx5ecxlTf1og0j+Rr3
wrqQQmXQuKhWPzqOLRFbebgXuSsxVscvGkC7dBp8XJr6kNyO2xRP7hDiVTax
MeP2oZwzA+MHh76i3frVji9VetH7Lwn9lnUjiBXB6diQ1IWWUR5ekOwYQ4UN
O1QfjLSjFW5KWard31FtIlfD614zem4uwp9S/AOljAWyD9x9j06/2dSeXTWJ
HDf2Kn9YVotiomNTJbFfKPFyy4sXi9lI57PBK4d9FKrY7SNrMtfmo/aqCa3V
B2dQ5VgOLxw8E1B6u0abu9pMKjGfMukM1XW7Z0H8Li8/1GkLD8RdznFNs1bz
QnyHEtddv242xLaY5mf9ZXwQD8gLZi6V4Ye44nisrfiqORB/zuKsKhITgJjW
ujnutYQgxNGblZccFZ4L8Sia5SQ/RcZd877SDlCEIRZbcKdc7CsZn2UEDE5P
zyPzcTB2rxImz0f0C+tHdK8qiE/fzfMPic5iUk50Ong/xFDjr5X+HzZ8RlWu
f705FPoRfaptCm4YGURNGfuctcX70dXqbTf7Pg8jepGYwx3/j2iRyZqfVSwK
1XLUOmjR3TSkbRQbXFc0g2ooOSAU6HUefTnoKHSUSc63Wrtgs8ANMr/jlrlJ
5++Q+TXfk0he86YGYrZfe2qlXgEzf39BxSmPV8i9x7hofMcnFCKx72v61160
ZaZmSw7vIJp7239W7w0u0uUxzdtyaRjVO22/Yq/Wh1Jk8+qkfCjU/Clv2+Iv
WehBUOVl5zszqJTnBrmtXx4gvQenrn12JvN7en2/XoAKmZ+r+tP2CWsWk1L/
6ml1WSBSWNJ3nCn9BfF+fPzi49Y+VHNk26rvdkOo9uIibpk3FzmFBkg5CuDj
fzHALFYnoZnLrmTKU8jxa7Sqz3nmkOMHmA9qpRaR9dNXa5uJ1L8l32ebOrhC
hkXM0GCmKt+6Z6jx2LUW3oJ+dP1C0iyrR72oWfzHDMX7A2hVX0rpJjkuUou1
bTORG0ZfjCqG+oP6kKu3T0GFBYXaP+PBqajYXKSq2NV05CK+PvMCPDfdikMe
qrWJW03I/Fo1LITeiZL5Cf8lqP7GsYJJ8ZbSlLzuhNzv8ThUPf2MuJvn5UX1
fkTxLUHpSluGUCbPt1VOjVy0b+KEsGw/hUodNotHjSnoSab3akrnDBhv9sIv
K8sj/63+fv+M/c6D6KukFTWCxUXDI2mUZwkzqInWIm1JeT7oq6Cmq+zZMiZl
nxjlQXI0OnnrhLbRcjLfSCdG4u5WcrxEM+9gTgc5n/wj5pl8x8j3p5pHh8eG
o8VM14y8b8edHiP3II/+uR79iOtnPrf0ei9iJBiEXNQbQCmRGmuNZ3JR6ucJ
m+E5w2hCc6Hi6rw+dH7HYHrcMfz94rHsvdf3PCTsYr1A7Tj+fvk8U7xuRjxa
fl9Qs0WbzO9H4rjlyEwyv/oFO4czXSvx+dQz3hF0FCmUiLjXXfqMjh8vKh3N
/Yh8ZfJddZcMIQU9s2IDSj/a+LyAZ4JDoRpe7ZOQV8KQI/9Ck/5acj6lHG/e
4vqQ45+91n/gtvogcq2ZesR8xEXFe9S3Bj/A7x+2fhDVG4gyH19TnHexnOkq
fMYgRS0MbazqdVefR+ab1rGL37yKHE+rmRPQbc9mUraOT9QneKOssHMDCw2G
kGa6x51HSVxUZzk1KDZM5pNnqrJ6fuYgOn+pqfXKMBctfyzHzsPw9RzzkzY8
7YJuia3UkRokx9/WbpD5eYhcr6zjdufcI8j1OvzSrDavoZhJOZj3xkM2AR1j
CNoFnOtH0o/y5l8170Xhn9xMvJQH0PerQsZWA33IOnjXtuyJIUTJzXhT9K4P
HReV3nzvML5eJW1Bk3Qm+ms1tj5ZD8/neE4nfQ8dWW5dK5KkQdbPb8oU9/xB
vk+3tRnuZ8wi35czOyP4j+l8RiGXJStozz4it9KjPSfnDKHe6+HB6gvxvDxG
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

   "], {{{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[{
        PolygonBox[{{137, 802, 803, 139, 172, 58, 156, 189, 123, 150, 183, 94,
          115, 142, 175, 68, 84, 105, 132, 165, 35, 74, 90, 111, 138, 171, 57,
          67, 83, 104, 131, 164, 34, 33, 32, 31, 30, 29, 28, 27, 56, 66, 82, 
         103, 130, 163, 26, 73, 120, 147, 180, 89, 153, 186, 110, 192}}], 
        PolygonBox[{{108, 800, 801, 170, 55, 194, 155, 188, 122, 149, 182, 93,
          114, 141, 174, 65, 81, 102, 129, 162, 25, 72, 88, 109, 136, 169, 54,
          64, 80, 101, 128, 161, 24, 23, 22, 21, 20, 19, 18, 17, 53, 63, 79, 
         100, 127, 160, 16, 95, 116, 143, 176, 71, 119, 146, 179, 87, 152, 
         185}}]}]}, {}, 
     {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[{
        PolygonBox[{{341, 798, 799, 376, 262, 399, 360, 393, 327, 354, 387, 
         298, 319, 346, 379, 272, 288, 309, 336, 369, 249, 278, 294, 315, 342,
          375, 261, 271, 287, 308, 335, 368, 248, 247, 246, 245, 244, 243, 
         242, 241, 240, 239, 238, 237, 236, 235, 234, 233, 232, 231, 260, 270,
          286, 307, 334, 367, 230, 277, 324, 351, 384, 293, 357, 390, 314, 
         396}}], PolygonBox[{{312, 796, 797, 374, 259, 398, 359, 392, 326, 
         353, 386, 297, 318, 345, 378, 269, 285, 306, 333, 366, 229, 276, 292,
          313, 340, 373, 258, 268, 284, 305, 332, 365, 228, 227, 226, 225, 
         224, 223, 222, 221, 220, 219, 218, 217, 216, 215, 214, 213, 212, 211,
          257, 267, 283, 304, 331, 364, 210, 299, 320, 347, 380, 275, 323, 
         350, 383, 291, 356, 389}}]}]}, {}, 
     {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[{
        PolygonBox[{{412, 792, 793, 520, 464, 531, 512, 528, 496, 509, 525, 
         483, 493, 506, 522, 469, 477, 487, 500, 516, 436, 472, 480, 490, 503,
          519, 463, 468, 476, 486, 499, 515, 435, 434, 433, 432, 431, 430, 
         429, 428, 427, 426, 425, 424, 423, 422, 421, 420, 419, 418, 417, 416,
          415, 414, 413, 462, 467, 475, 485, 498, 514}}], 
        PolygonBox[{{504, 794, 795, 461, 532, 513, 529, 497, 510, 526, 484, 
         494, 507, 523, 474, 482, 492, 505, 521, 466, 471, 479, 489, 502, 518,
          460, 459, 458, 457, 456, 455, 454, 453, 452, 451, 450, 449, 448, 
         447, 446, 445, 444, 443, 442, 441, 440, 439, 438, 465, 470, 478, 488,
          501, 517, 437, 473, 495, 508, 524, 481, 511, 527, 491, 
         530}}]}]}, {}, 
     {RGBColor[0.922526, 0.385626, 0.209179], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[{
        PolygonBox[{{536, 788, 789, 644, 588, 655, 636, 652, 620, 633, 649, 
         607, 617, 630, 646, 593, 601, 611, 624, 640, 560, 596, 604, 614, 627,
          643, 587, 592, 600, 610, 623, 639, 559, 558, 557, 556, 555, 554, 
         553, 552, 551, 550, 549, 548, 547, 546, 545, 544, 543, 542, 541, 540,
          539, 538, 537, 586, 591, 599, 609, 622, 638}}], 
        PolygonBox[{{628, 790, 791, 585, 656, 637, 653, 621, 634, 650, 608, 
         618, 631, 647, 598, 606, 616, 629, 645, 590, 595, 603, 613, 626, 642,
          584, 583, 582, 581, 580, 579, 578, 577, 576, 575, 574, 573, 572, 
         571, 570, 569, 568, 567, 566, 565, 564, 563, 562, 589, 594, 602, 612,
          625, 641, 561, 597, 619, 632, 648, 605, 635, 651, 615, 
         654}}]}]}, {}, 
     {RGBColor[0.528488, 0.470624, 0.701351], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[{
        PolygonBox[{{660, 784, 785, 768, 712, 779, 760, 776, 744, 757, 773, 
         731, 741, 754, 770, 717, 725, 735, 748, 764, 684, 720, 728, 738, 751,
          767, 711, 716, 724, 734, 747, 763, 683, 682, 681, 680, 679, 678, 
         677, 676, 675, 674, 673, 672, 671, 670, 669, 668, 667, 666, 665, 664,
          663, 662, 661, 710, 715, 723, 733, 746, 762}}], 
        PolygonBox[{{752, 786, 787, 709, 780, 761, 777, 745, 758, 774, 732, 
         742, 755, 771, 722, 730, 740, 753, 769, 714, 719, 727, 737, 750, 766,
          708, 707, 706, 705, 704, 703, 702, 701, 700, 699, 698, 697, 696, 
         695, 694, 693, 692, 691, 690, 689, 688, 687, 686, 713, 718, 726, 736,
          749, 765, 685, 721, 743, 756, 772, 729, 759, 775, 739, 
         778}}]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[{1, 158, 125, 98, 77, 61, 51, 2, 3, 4, 5, 406, 6, 7, 8, 9, 
       10, 11, 12, 13, 14, 15, 159, 126, 99, 78, 62, 52, 168, 135, 191}], 
      LineBox[{108, 185, 152, 87, 179, 146, 119, 71, 176, 143, 116, 95, 16, 
       160, 127, 100, 79, 63, 53, 17, 18, 19, 20, 21, 22, 23, 24, 161, 128, 
       101, 80, 64, 54, 169, 136, 109, 88, 72, 25, 162, 129, 102, 81, 65, 174,
        141, 114, 93, 182, 149, 122, 188, 155, 194, 55, 170}], 
      LineBox[{137, 192, 110, 186, 153, 89, 180, 147, 120, 73, 26, 163, 130, 
       103, 82, 66, 56, 27, 28, 29, 30, 31, 32, 33, 34, 164, 131, 104, 83, 67,
        57, 171, 138, 111, 90, 74, 35, 165, 132, 105, 84, 68, 175, 142, 115, 
       94, 183, 150, 123, 189, 156, 58, 172, 139}], 
      LineBox[{193, 112, 187, 154, 91, 181, 148, 121, 75, 177, 144, 117, 96, 
       36, 166, 133, 106, 85, 69, 59, 37, 38, 39, 40, 41, 42, 43, 44, 45, 401,
        46, 47, 48, 49, 167, 134, 107, 86, 70, 60, 173, 140, 113, 92, 76, 178,
        145, 118, 97, 184, 151, 124, 190, 157, 195, 50}]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[{205, 362, 329, 302, 281, 265, 255, 206, 207, 208, 209, 
       363, 330, 303, 282, 266, 256, 372, 339, 395}], 
      LineBox[{312, 389, 356, 291, 383, 350, 323, 275, 380, 347, 320, 299, 
       210, 364, 331, 304, 283, 267, 257, 211, 212, 213, 214, 215, 216, 217, 
       218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 365, 332, 305, 
       284, 268, 258, 373, 340, 313, 292, 276, 229, 366, 333, 306, 285, 269, 
       378, 345, 318, 297, 386, 353, 326, 392, 359, 398, 259, 374}], 
      LineBox[{341, 396, 314, 390, 357, 293, 384, 351, 324, 277, 230, 367, 
       334, 307, 286, 270, 260, 231, 232, 233, 234, 235, 236, 237, 238, 239, 
       240, 241, 242, 243, 244, 245, 246, 247, 248, 368, 335, 308, 287, 271, 
       261, 375, 342, 315, 294, 278, 249, 369, 336, 309, 288, 272, 379, 346, 
       319, 298, 387, 354, 327, 393, 360, 399, 262, 376}], 
      LineBox[{343, 397, 316, 391, 358, 295, 385, 352, 325, 279, 381, 348, 
       321, 300, 250, 370, 337, 310, 289, 273, 263, 251, 252, 253, 371, 338, 
       311, 290, 274, 264, 377, 344, 317, 296, 280, 382, 349, 322, 301, 388, 
       355, 328, 394, 361, 400, 254}]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[{412, 514, 498, 485, 475, 467, 462, 413, 414, 415, 416, 
       417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 
       431, 432, 433, 434, 435, 515, 499, 486, 476, 468, 463, 519, 503, 490, 
       480, 472, 436, 516, 500, 487, 477, 469, 522, 506, 493, 483, 525, 509, 
       496, 528, 512, 531, 464, 520}], 
      LineBox[{504, 530, 491, 527, 511, 481, 524, 508, 495, 473, 437, 517, 
       501, 488, 478, 470, 465, 438, 439, 440, 441, 442, 443, 444, 445, 446, 
       447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 
       518, 502, 489, 479, 471, 466, 521, 505, 492, 482, 474, 523, 507, 494, 
       484, 526, 510, 497, 529, 513, 532, 461}]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[{536, 638, 622, 609, 599, 591, 586, 537, 538, 539, 540, 
       541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 
       555, 556, 557, 558, 559, 639, 623, 610, 600, 592, 587, 643, 627, 614, 
       604, 596, 560, 640, 624, 611, 601, 593, 646, 630, 617, 607, 649, 633, 
       620, 652, 636, 655, 588, 644}], 
      LineBox[{628, 654, 615, 651, 635, 605, 648, 632, 619, 597, 561, 641, 
       625, 612, 602, 594, 589, 562, 563, 564, 565, 566, 567, 568, 569, 570, 
       571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 
       642, 626, 613, 603, 595, 590, 645, 629, 616, 606, 598, 647, 631, 618, 
       608, 650, 634, 621, 653, 637, 656, 585}]}, 
     {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[{660, 762, 746, 733, 723, 715, 710, 661, 662, 663, 664, 
       665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 
       679, 680, 681, 682, 683, 763, 747, 734, 724, 716, 711, 767, 751, 738, 
       728, 720, 684, 764, 748, 735, 725, 717, 770, 754, 741, 731, 773, 757, 
       744, 776, 760, 779, 712, 768}], 
      LineBox[{752, 778, 739, 775, 759, 729, 772, 756, 743, 721, 685, 765, 
       749, 736, 726, 718, 713, 686, 687, 688, 689, 690, 691, 692, 693, 694, 
       695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 
       766, 750, 737, 727, 719, 714, 769, 753, 740, 730, 722, 771, 755, 742, 
       732, 774, 758, 745, 777, 761, 780, 709}]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], 
      LineBox[{197, 203, 196}], LineBox[{199, 200, 198}], 
      LineBox[{202, 204, 201}], LineBox[{403, 407, 402}], 
      LineBox[{405, 410, 404}], LineBox[{409, 411, 408}], 
      LineBox[{534, 535, 533}], LineBox[{658, 659, 657}], 
      LineBox[{782, 783, 781}]}}, {{}, {}, {}, {}, {}, {}, {}}}],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
    "AxesInFront" -> True},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.676462391501348*^9, 3.6764623944690857`*^9}, 
   3.676466039505086*^9, 3.676466123612932*^9, {3.676467100576798*^9, 
   3.676467145020933*^9}, {3.684532791535241*^9, 3.684532795687173*^9}, {
   3.684532827155634*^9, 3.684532832690959*^9}, 3.684532907676325*^9, {
   3.68453295624757*^9, 3.68453296381356*^9}, {3.684533011222056*^9, 
   3.6845330308864717`*^9}, 3.684634440443005*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"pdfUniform", "[", 
   RowBox[{"x_", ",", "\[Mu]_", ",", "\[Sigma]_"}], "]"}], ":=", 
  TagBox[GridBox[{
     {"\[Piecewise]", GridBox[{
        {
         FractionBox["1", 
          RowBox[{"2", " ", 
           SqrtBox["3"], " ", "\[Sigma]"}]], 
         RowBox[{
          RowBox[{"\[Mu]", "-", 
           RowBox[{
            SqrtBox["3"], " ", "\[Sigma]"}]}], "\[LessEqual]", "x", 
          "\[LessEqual]", 
          RowBox[{"\[Mu]", "+", 
           RowBox[{
            SqrtBox["3"], " ", "\[Sigma]"}]}]}]},
        {"0", 
         TagBox["True",
          "PiecewiseDefault",
          AutoDelete->True]}
       },
       AllowedDimensions->{2, Automatic},
       Editable->True,
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.84]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}},
       Selectable->True]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxItemSize->{
     "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.35]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   "Piecewise",
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True,
   Selectable->False], " "}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.6764622317264*^9, {3.676462275865959*^9, 3.676462333498724*^9}, {
   3.676462386203244*^9, 3.676462388994298*^9}, {3.6764661175139837`*^9, 
   3.676466119114414*^9}, {3.684532477326845*^9, 3.6845325183824787`*^9}, 
   3.684532784316008*^9, {3.6845328299790363`*^9, 3.6845329325663357`*^9}, {
   3.6845330180277*^9, 3.684533026054028*^9}, 3.684533084708044*^9, {
   3.6845340561868877`*^9, 3.6845340618553743`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"sigs", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "/", "2"}], ",", "1", ",", "2", ",", "5", ",", "10"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"pdfUniform", "[", 
       RowBox[{"x", ",", "1", ",", "\[Sigma]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "sigs"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "2"}], ",", "4"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"AxesOrigin", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "sigs"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6764623486045923`*^9, 3.676462394184904*^9}, {
   3.67646603305241*^9, 3.676466039085231*^9}, {3.676467095974711*^9, 
   3.676467144451521*^9}, 3.684532791002536*^9, 3.68453283228883*^9, {
   3.684532907047003*^9, 3.6845329632608023`*^9}, {3.684533010619349*^9, 
   3.684533027756667*^9}, 3.684534066579653*^9, {3.684575590777972*^9, 
   3.6845756068245077`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1:eJzVmGs4lmkewN9K5u0cMjMdnMYwRQo5zFK9jTEhaiZJyqToJDuda6ekuoiJ
qURqmuQuo7OdHbUdEKKntGzZ9CYVhRcb3nEaCSnZa7f3//9v//3Qh/00fZnr
dz33fT/3fXt+9RsmQWu8l/WVyWQ5fWSyf/83P8Cksre3N1em+fP+3nizIwav
kafaSaoU3VfITzafSvG26Ea+Oqtp7w+eXcibRHvzdNcO5BMxaT7HFrUjn222
sF7q3YbcWit3yJnVivz1b3bhYeWNyFEDH4XPK6hHTgqo3R3RXYvseP+i+r5C
hdwTOjhEK7gM+Y/Xtun0lCmRl5SqjL6cl4/ccWd9rr7+SeT5/T+wl6+5oAA+
2dbS0dBVqDCYFPfF6S3VinVZ5aW79pcg2ydOKa//+2PkF4cHHglbXY3cYDks
1872KbLV7f2dem5q5AibNPPj7zcjWzjtlEU1tCJnBzV3era2IT9oOqkOKWlH
HiMTKwxUHchG4TZXnGu7kP+8VFf+1xvdyIvv2FZlFb1CPpp07ILBxdd43pmN
Pr9scpdNA64qeuFm7tkHOb3KtTJicl9k0/Q053Eu/ZDvXc07uNVBC7lmW3JZ
P/P+yLtkybX3x2kjr734ReOcMe8hN1sOyhxtKke+teDY2pFmA5Abrzwyu64/
EDmlYlLy5VGDkJMm2X3oO3Qw8nNFv62WPcQ1w9pSZsiGIuvr7CrQbyNekhbX
0ts7jPazaX5E0VDyI9spK7W7IB7v6+yVHLnjw2t4n0Fl41Zu/1sxsnbiR+0O
hS+Re+0bChvzepCTrnwcHZnSi+tNrhr0eOAWev+CkJxzy3fR+62XWZRYB0Yj
+07xMM3al4Xzz/UdOtfHjdYXltUGsy1p/TObPbzj7Gl9eUl+5XTVaXx+urR0
R1x9Ps6ftfLG1Cgn+j6K3f6xLCqb5sctbXG7cJ3257JyW3ug1RFkPxPrnwN3
pON8w9q84PQWWq/CNXjIPT1a70JG/KjqoGR8fuqOr1ZmTw+y9ogm44JEGu8z
PyhxRHIuPu/oa7tl9re0fuLWtFSXChqfGhid8EhF+/WSHn5dM/cn2m/C8Va7
by/h/IBp1rHqu7Red2pnSHtfWk/Ht2XNIrfD+LzzQcgZvRrar0lo2PaGGBo/
99b9irpDOfj8I4eX/r/60fqXVFPlS4to/Ly07BWxuzLxeWjSXhOjMTQ+dUNn
qnFJHvJ2feOZJi00/9Mqn8zGVjqvSaFZbJj9cTqv15P9hhsu0vzmOmOt67S+
PCB3ZFQ3+bHcfe4Qq+iD+Dw4KfKhUTF9bxOsXK1Cw+n9vpHDwu8mZOP4jDuL
ZmZ40PrSAe309hs03i+4Y8DmnRn4fLhDm27jYBpv8dWIMH1vOu+egrqX55/S
/Mkrs55HNdP9++gmTX595Crtd8EB2c2l5OvaIL+jcZ00f7uRs9efuui+9njd
NvcwO4H8cGz3Er3f6N+H2PzP1XFZtL9YR9N1MzvovuI/kz9OOJOAz+0aHGZ/
V0D3dUn7TKTLNnp/6eLx3jd16L52jtG9aehC63usDhmak0fjH7rqlX/Th+6r
POLEbu/+ND7kakrtMB26L70Uzzmh1TT/vcurVjc+pfsqac4Y8mwk3Zf7tLPZ
QXU0v9M5+7nfs//ydWOTYsU9Oo9aFaU3OoHGq8d6rbM5RPetjm6fXvCS5nNf
+M+Hv5+/z6/oaMAI82uKkf9hpWKu+fiNU8p7FAdt3vDvtW8MNOeBvgGGvgGG
vgGGvgGGvgGGvgF+u2+UrG+UrG+UrG+UrG+UrG+UrG+UrG+UrG+UrG+UrG+U
rG+UrG+UrG+U2DfA0DfA0DfA0DfA0DfA0DfA0DfAv/e+ae35ro/6rho57mKF
9irVU/x+1Ie9nMcb1CD7H7XOUPxC92GvSK5sPE33EVa2vn7EcbqPd/XNqc6F
n10o/RX5+0p/1+qSOvr7OMB4YddyWj9iVczyTctpfd43TlrnrhkXNeD8H2IC
Czub/on7rzAyDlLVU5++q2/CN3qoPphP/so3japJmkX+aqUfOGnmTvvhfaMf
fiQw6ku63+8nVhmvKKDz8L4ZMkOc/MS/DvdrO3zxcf8BtP67+qbZVmEzI5H2
ezN3i23obtrvTf9R+T2f0nq8byIU8efT42i/ix2nySwyaL+8b24feNWu9SP9
vOQf5kUYvqD75X3jYZGVkKtD+4ksGrzA+wGtP6t3iu8MQzr/u/rGTNdpfs0V
Oq/5snFl9WdpffMJT0pW2tB5ed9kGu559NV5Oi/vGUunn5M2XKbzPRu9tq23
lc7He+bMnRDnCdb0/mOW1uejiul8vF9+fGX1h5QwWr/QtPiuVEXrv6tX8sId
mybeovOXOvaZYJxJ7/c9dPXxMSs6P+8Vn9iYVeIanZ/3SdngyNbUfNpfvYF7
amsj7Y/3iV+Ky75lCno/748x0sc/FUXTeuY7PGPHVtJ6vDfCVpS4Tz5N44c7
TAr2WEjfR4lJ10hlLc3nvTHn8Lni59/Q/De9QOP5enw//PvkPy9Y701/SAof
zfuAoUfezJcU0CPA0CPA0CPA0CPA0CPA0CPA0CPA0CPA0CPA0CPAb/eIxHpE
Yj0isR6RWI9IrEck1iMS6xGJ9YjEekRiPSKxHpFYj0isRyTWIxLrEYn1iMR6
RGI9IrEekViPSKxHJNYjEusRifWIxHpEYj0isR6RsEeAoUeAoUeAoUeAoUeA
oUfw+9D0CDD0CO5H0yPA0CP4fWh6BPej6RFg6AVg8GdixlP5+n1/QX+AwR9g
8AcY/AEGf4DBH2DwBxj8AQZ/gMEfYPAHGPwBBn+AwR9g8AcY/AEGf4DBH2Dw
Bxj8AQZ/gMEfYPAHGPwBBn+AwR9g8AcY/AEGf4DBH2DwBxj8AQZ/gMEfYPAH
GPwBBn+AwR9g8AcY/AEGf4DBH2DwBxj8we9D4w8w+IP70fgDDP7g96HxB/ej
8QcY/AF+2x/B/BHMH8H8EcwfwfwRzB/B/BHMH8H8EcwfwfwRzB/B/BHMH8H8
EcwfwfwRzB/B/BHMH8H8EcwfwfwRzB/B/BHMH8H8EcwfwfwRzB/B/BHMH8H8
EcwfwfwRzB/B/BHMH8H8EcwfwfwRzB/B/BHMH8H8EcwfwfwRzB/B/BHMH8H8
Ef/z+yT+/9P/73PoT96bwPD7MWD4fRjwvwCHSjcO
     "], {{{}, {
        EdgeForm[], 
        Directive[
         RGBColor[0.368417, 0.506779, 0.709798], 
         Opacity[0.2]], 
        GraphicsGroupBox[{
          
          PolygonBox[{{112, 444, 445, 133, 101, 120, 56, 62, 32, 55, 31, 30, 
           29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 54, 19, 66, 53, 
           135}}]}]}, {}, {
        EdgeForm[], 
        Directive[
         RGBColor[0.880722, 0.611041, 0.142051], 
         Opacity[0.2]], 
        GraphicsGroupBox[{
          
          PolygonBox[{{269, 442, 443, 234, 248, 217, 228, 198, 204, 181, 197, 
           180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 
           167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 
           196, 154, 208, 195, 235, 219}}]}]}, {}, {
        EdgeForm[], 
        Directive[
         RGBColor[0.560181, 0.691569, 0.194885], 
         Opacity[0.2]], 
        GraphicsGroupBox[{
          
          PolygonBox[{{280, 440, 441, 329, 331, 328, 327, 326, 325, 324, 323, 
           322, 321, 320, 319, 318, 317, 316, 315, 314, 313, 312, 311, 310, 
           309, 308, 307, 306, 305, 304, 303, 302, 301, 300, 299, 298, 297, 
           296, 295, 294, 293, 292, 291, 290, 289, 288, 287, 286, 285, 284, 
           283, 282, 281, 330}}]}]}, {}, {
        EdgeForm[], 
        Directive[
         RGBColor[0.922526, 0.385626, 0.209179], 
         Opacity[0.2]], 
        GraphicsGroupBox[{
          
          PolygonBox[{{332, 438, 439, 381, 383, 380, 379, 378, 377, 376, 375, 
           374, 373, 372, 371, 370, 369, 368, 367, 366, 365, 364, 363, 362, 
           361, 360, 359, 358, 357, 356, 355, 354, 353, 352, 351, 350, 349, 
           348, 347, 346, 345, 344, 343, 342, 341, 340, 339, 338, 337, 336, 
           335, 334, 333, 382}}]}]}, {}, {
        EdgeForm[], 
        Directive[
         RGBColor[0.528488, 0.470624, 0.701351], 
         Opacity[0.2]], 
        GraphicsGroupBox[{
          
          PolygonBox[{{384, 436, 437, 433, 435, 432, 431, 430, 429, 428, 427, 
           426, 425, 424, 423, 422, 421, 420, 419, 418, 417, 416, 415, 414, 
           413, 412, 411, 410, 409, 408, 407, 406, 405, 404, 403, 402, 401, 
           400, 399, 398, 397, 396, 395, 394, 393, 392, 391, 390, 389, 388, 
           387, 386, 385, 
           434}}]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        LineBox[{1, 114, 95, 80, 69, 59, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
         272, 12, 13, 14, 15, 16, 17, 115, 96, 81, 70, 60, 52, 119, 100, 85, 
         74, 65, 18, 116, 97, 82, 71, 125, 106, 91, 61, 122, 103, 88, 130, 
         111, 77, 127, 108, 134, 93, 131}], 
        LineBox[{112, 135, 53, 66, 19, 54, 20, 21, 22, 23, 24, 25, 26, 27, 28,
          29, 30, 31, 55, 32, 62, 56, 120, 101, 133}], 
        LineBox[{86, 129, 110, 75, 126, 107, 92, 67, 123, 104, 89, 78, 33, 
         117, 98, 83, 72, 63, 57, 34, 35, 36, 37, 38, 39, 273, 40, 41, 42, 43,
          44, 45, 46, 47, 48, 49, 118, 99, 84, 73, 64, 58, 121, 102, 87, 76, 
         68, 124, 105, 90, 79, 128, 109, 94, 132, 113, 136, 50}]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        LineBox[{143, 253, 237, 222, 211, 201, 193, 144, 145, 146, 147, 148, 
         149, 150, 151, 152, 254, 238, 223, 212, 202, 194, 258, 242, 227, 216,
          207, 153, 255, 239, 224, 213, 263, 247, 233, 203, 260, 244, 268, 
         230, 265, 250}], 
        LineBox[{269, 219, 235, 195, 208, 154, 196, 155, 156, 157, 158, 159, 
         160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173,
          174, 175, 176, 177, 178, 179, 180, 197, 181, 204, 198, 228, 217, 
         248, 234}], 
        LineBox[{266, 251, 270, 209, 261, 245, 231, 220, 182, 256, 240, 225, 
         214, 205, 199, 183, 184, 185, 186, 187, 188, 189, 190, 191, 257, 241,
          226, 215, 206, 200, 259, 243, 229, 218, 210, 262, 246, 232, 221, 
         264, 249, 236, 267, 252, 271, 192}]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        LineBox[{280, 330, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 
         291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304,
          305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 
         318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 331, 329}]}, {
       
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        LineBox[{332, 382, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 
         343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356,
          357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 
         370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 383, 381}]}, {
       
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        LineBox[{384, 434, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 
         395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
          409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 
         422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 435, 433}]}, {
       
        Directive[
         RGBColor[0.368417, 0.506779, 0.709798], 
         Opacity[0.2]], 
        LineBox[{139, 141, 138}], 
        LineBox[{140, 142, 137}], 
        LineBox[{276, 278, 275}], 
        LineBox[{277, 279, 274}]}}, {{}, {}, {}, {}, {}, {}, {}}}], {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0.}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None, 
       "AxesInFront" -> True}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FractionBox["1", "2"], "1", "2", "5", "10"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.684542210063703*^9, 3.684575610164694*^9, 
  3.6846344406468563`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "1"], 
  RowBox[{"x", " ", 
   RowBox[{"pdfTriangle", "[", 
    RowBox[{"x", ",", "\[Mu]", ",", "\[Sigma]"}], "]"}], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {"\[Mu]", 
        RowBox[{
         RowBox[{"0", "<", "\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], ">", "0"}], "&&", 
         RowBox[{"\[Sigma]", ">", "0"}]}]},
       {
        RowBox[{
         FractionBox["1", "6"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"3", " ", "\[Mu]"}], "+", 
           RowBox[{
            SqrtBox["6"], " ", "\[Sigma]"}]}], ")"}]}], 
        RowBox[{
         RowBox[{"\[Mu]", "\[Equal]", "0"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}], "&&", 
         RowBox[{"\[Sigma]", ">", "0"}]}]},
       {
        FractionBox[
         RowBox[{"2", "-", 
          RowBox[{"3", " ", "\[Mu]"}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]"}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Mu]", ">", "1"}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "-", 
             RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}]}], ")"}],
          "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
           RowBox[{"\[Sigma]", "\[GreaterEqual]", 
            FractionBox["1", 
             SqrtBox["6"]]}]}], ")"}]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"3", " ", "\[Mu]"}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]"}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", "<", "0"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], ">", 
          SqrtBox["6"]}]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"3", " ", "\[Mu]"}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Mu]", "3"]}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]"}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"0", "<", "\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"3", " ", "\[Mu]"}], "-", 
          SuperscriptBox["\[Mu]", "3"], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]"}], "-", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Mu]", "\[Equal]", "0"}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "+", 
             RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
            SqrtBox["6"]}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"0", "\[LessEqual]", "\[Mu]", "<", "1"}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "+", 
             RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
            SqrtBox["6"]}], "&&", 
           RowBox[{"\[Sigma]", "\[LessEqual]", "0"}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "-", 
             RowBox[{"6", " ", "\[Sigma]"}]}], ">", "0"}]}], ")"}]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[Mu]", "3"]}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"0", "<", "\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}], "&&", 
         RowBox[{"\[Sigma]", "\[LessEqual]", "0"}]}]},
       {
        FractionBox[
         RowBox[{
          SqrtBox["6"], "-", 
          RowBox[{
           SqrtBox["6"], " ", "\[Mu]"}], "+", 
          RowBox[{"3", " ", "\[Mu]", " ", "\[Sigma]"}], "-", 
          RowBox[{
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Sigma]", "2"]}]}], 
         RowBox[{"6", " ", "\[Sigma]"}]], 
        RowBox[{
         RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
         RowBox[{"0", "<", "\[Sigma]", "<", 
          FractionBox["1", 
           SqrtBox["6"]]}]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"3", " ", "\[Mu]"}], "-", 
          SuperscriptBox["\[Mu]", "3"], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]"}], "-", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
          RowBox[{"18", " ", "\[Mu]", " ", 
           SuperscriptBox["\[Sigma]", "2"]}], "-", 
          RowBox[{"6", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Sigma]", "3"]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"0", "<", "\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], ">", "0"}], "&&", 
         RowBox[{"\[Sigma]", ">", "0"}]}]},
       {
        FractionBox[
         RowBox[{"2", "-", 
          RowBox[{"3", " ", "\[Mu]"}], "+", 
          SuperscriptBox["\[Mu]", "3"], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]"}], "-", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
          RowBox[{"18", " ", "\[Mu]", " ", 
           SuperscriptBox["\[Sigma]", "2"]}], "-", 
          RowBox[{"6", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Sigma]", "3"]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", ">", "1"}], "&&", 
         RowBox[{"0", "<", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[Mu]", "3"]}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
          RowBox[{"18", " ", "\[Mu]", " ", 
           SuperscriptBox["\[Sigma]", "2"]}], "+", 
          RowBox[{"6", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Sigma]", "3"]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"0", "<", "\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}], "&&", 
         RowBox[{"\[Sigma]", ">", "0"}]}]},
       {
        FractionBox[
         RowBox[{
          SuperscriptBox["\[Mu]", "3"], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
          RowBox[{"18", " ", "\[Mu]", " ", 
           SuperscriptBox["\[Sigma]", "2"]}], "+", 
          RowBox[{"6", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Sigma]", "3"]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", "<", "0"}], "&&", 
         RowBox[{"0", "<", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", 
          SqrtBox["6"]}]}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.684634459123765*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Mu]", ">", "0"}], " ", "&&", 
    RowBox[{"\[Sigma]", ">", "0"}]}], ",", 
   RowBox[{"Refine", "[", 
    TagBox[GridBox[{
       {"\[Piecewise]", GridBox[{
          {"\[Mu]", 
           RowBox[{
            RowBox[{"0", "<", "\[Mu]", "<", "1"}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "+", 
              RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
             SqrtBox["6"]}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "-", 
              RowBox[{"6", " ", "\[Sigma]"}]}], ">", "0"}], "&&", 
            RowBox[{"\[Sigma]", ">", "0"}]}]},
          {
           RowBox[{
            FractionBox["1", "6"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"3", " ", "\[Mu]"}], "+", 
              RowBox[{
               SqrtBox["6"], " ", "\[Sigma]"}]}], ")"}]}], 
           RowBox[{
            RowBox[{"\[Mu]", "\[Equal]", "0"}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "+", 
              RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
             SqrtBox["6"]}], "&&", 
            RowBox[{"\[Sigma]", ">", "0"}]}]},
          {
           FractionBox[
            RowBox[{"2", "-", 
             RowBox[{"3", " ", "\[Mu]"}], "+", 
             RowBox[{"3", " ", 
              SqrtBox["6"], " ", "\[Sigma]"}]}], 
            RowBox[{"36", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Mu]", ">", "1"}], "&&", 
              RowBox[{
               RowBox[{
                RowBox[{
                 SqrtBox["6"], " ", "\[Mu]"}], "-", 
                RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}]}], 
             ")"}], "||", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
              RowBox[{"\[Sigma]", "\[GreaterEqual]", 
               FractionBox["1", 
                SqrtBox["6"]]}]}], ")"}]}]},
          {
           FractionBox[
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"3", " ", "\[Mu]"}], "+", 
             RowBox[{"3", " ", 
              SqrtBox["6"], " ", "\[Sigma]"}]}], 
            RowBox[{"36", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]], 
           RowBox[{
            RowBox[{"\[Mu]", "<", "0"}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "+", 
              RowBox[{"6", " ", "\[Sigma]"}]}], ">", 
             SqrtBox["6"]}]}]},
          {
           FractionBox[
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"3", " ", "\[Mu]"}], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Mu]", "3"]}], "+", 
             RowBox[{"3", " ", 
              SqrtBox["6"], " ", "\[Sigma]"}]}], 
            RowBox[{"36", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]], 
           RowBox[{
            RowBox[{"0", "<", "\[Mu]", "<", "1"}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "+", 
              RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
             SqrtBox["6"]}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "-", 
              RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}]}]},
          {
           FractionBox[
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"3", " ", "\[Mu]"}], "-", 
             SuperscriptBox["\[Mu]", "3"], "+", 
             RowBox[{"3", " ", 
              SqrtBox["6"], " ", "\[Sigma]"}], "-", 
             RowBox[{"3", " ", 
              SqrtBox["6"], " ", 
              SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}]}], 
            RowBox[{"36", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Mu]", "\[Equal]", "0"}], "&&", 
              RowBox[{
               RowBox[{
                RowBox[{
                 SqrtBox["6"], " ", "\[Mu]"}], "+", 
                RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
               SqrtBox["6"]}]}], ")"}], "||", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"0", "\[LessEqual]", "\[Mu]", "<", "1"}], "&&", 
              RowBox[{
               RowBox[{
                RowBox[{
                 SqrtBox["6"], " ", "\[Mu]"}], "+", 
                RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
               SqrtBox["6"]}], "&&", 
              RowBox[{"\[Sigma]", "\[LessEqual]", "0"}], "&&", 
              RowBox[{
               RowBox[{
                RowBox[{
                 SqrtBox["6"], " ", "\[Mu]"}], "-", 
                RowBox[{"6", " ", "\[Sigma]"}]}], ">", "0"}]}], ")"}]}]},
          {
           FractionBox[
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["\[Mu]", "3"]}], "+", 
             RowBox[{"3", " ", 
              SqrtBox["6"], " ", 
              SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}]}], 
            RowBox[{"36", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]], 
           RowBox[{
            RowBox[{"0", "<", "\[Mu]", "<", "1"}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "-", 
              RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "+", 
              RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
             SqrtBox["6"]}], "&&", 
            RowBox[{"\[Sigma]", "\[LessEqual]", "0"}]}]},
          {
           FractionBox[
            RowBox[{
             SqrtBox["6"], "-", 
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "+", 
             RowBox[{"3", " ", "\[Mu]", " ", "\[Sigma]"}], "-", 
             RowBox[{
              SqrtBox["6"], " ", 
              SuperscriptBox["\[Sigma]", "2"]}]}], 
            RowBox[{"6", " ", "\[Sigma]"}]], 
           RowBox[{
            RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
            RowBox[{"0", "<", "\[Sigma]", "<", 
             FractionBox["1", 
              SqrtBox["6"]]}]}]},
          {
           FractionBox[
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"3", " ", "\[Mu]"}], "-", 
             SuperscriptBox["\[Mu]", "3"], "+", 
             RowBox[{"3", " ", 
              SqrtBox["6"], " ", "\[Sigma]"}], "-", 
             RowBox[{"3", " ", 
              SqrtBox["6"], " ", 
              SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
             RowBox[{"18", " ", "\[Mu]", " ", 
              SuperscriptBox["\[Sigma]", "2"]}], "-", 
             RowBox[{"6", " ", 
              SqrtBox["6"], " ", 
              SuperscriptBox["\[Sigma]", "3"]}]}], 
            RowBox[{"36", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]], 
           RowBox[{
            RowBox[{"0", "<", "\[Mu]", "<", "1"}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "+", 
              RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
             SqrtBox["6"]}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "-", 
              RowBox[{"6", " ", "\[Sigma]"}]}], ">", "0"}], "&&", 
            RowBox[{"\[Sigma]", ">", "0"}]}]},
          {
           FractionBox[
            RowBox[{"2", "-", 
             RowBox[{"3", " ", "\[Mu]"}], "+", 
             SuperscriptBox["\[Mu]", "3"], "+", 
             RowBox[{"3", " ", 
              SqrtBox["6"], " ", "\[Sigma]"}], "-", 
             RowBox[{"3", " ", 
              SqrtBox["6"], " ", 
              SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
             RowBox[{"18", " ", "\[Mu]", " ", 
              SuperscriptBox["\[Sigma]", "2"]}], "-", 
             RowBox[{"6", " ", 
              SqrtBox["6"], " ", 
              SuperscriptBox["\[Sigma]", "3"]}]}], 
            RowBox[{"36", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]], 
           RowBox[{
            RowBox[{"\[Mu]", ">", "1"}], "&&", 
            RowBox[{"0", "<", 
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "-", 
              RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
             SqrtBox["6"]}]}]},
          {
           FractionBox[
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["\[Mu]", "3"]}], "+", 
             RowBox[{"3", " ", 
              SqrtBox["6"], " ", 
              SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
             RowBox[{"18", " ", "\[Mu]", " ", 
              SuperscriptBox["\[Sigma]", "2"]}], "+", 
             RowBox[{"6", " ", 
              SqrtBox["6"], " ", 
              SuperscriptBox["\[Sigma]", "3"]}]}], 
            RowBox[{"36", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]], 
           RowBox[{
            RowBox[{"0", "<", "\[Mu]", "<", "1"}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "+", 
              RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
             SqrtBox["6"]}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "-", 
              RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}], "&&", 
            RowBox[{"\[Sigma]", ">", "0"}]}]},
          {
           FractionBox[
            RowBox[{
             SuperscriptBox["\[Mu]", "3"], "+", 
             RowBox[{"3", " ", 
              SqrtBox["6"], " ", 
              SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
             RowBox[{"18", " ", "\[Mu]", " ", 
              SuperscriptBox["\[Sigma]", "2"]}], "+", 
             RowBox[{"6", " ", 
              SqrtBox["6"], " ", 
              SuperscriptBox["\[Sigma]", "3"]}]}], 
            RowBox[{"36", " ", 
             SuperscriptBox["\[Sigma]", "2"]}]], 
           RowBox[{
            RowBox[{"\[Mu]", "<", "0"}], "&&", 
            RowBox[{"0", "<", 
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "+", 
              RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", 
             SqrtBox["6"]}]}]},
          {"0", 
           TagBox["True",
            "PiecewiseDefault",
            AutoDelete->True]}
         },
         AllowedDimensions->{2, Automatic},
         Editable->True,
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{1.}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.84]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}},
         Selectable->True]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.35]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     "Piecewise",
     DeleteWithContents->True,
     Editable->False,
     SelectWithContents->True,
     Selectable->False], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.684533094744566*^9, 3.6845331402863283`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {"\[Mu]", 
        RowBox[{
         RowBox[{"\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], ">", "0"}]}]},
       {
        FractionBox[
         RowBox[{"2", "-", 
          RowBox[{"3", " ", "\[Mu]"}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]"}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Mu]", ">", "1"}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "-", 
             RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}]}], ")"}],
          "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
           RowBox[{"\[Sigma]", "\[GreaterEqual]", 
            FractionBox["1", 
             SqrtBox["6"]]}]}], ")"}]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"3", " ", "\[Mu]"}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Mu]", "3"]}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]"}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}]}]},
       {
        FractionBox[
         RowBox[{
          SqrtBox["6"], "-", 
          RowBox[{
           SqrtBox["6"], " ", "\[Mu]"}], "+", 
          RowBox[{"3", " ", "\[Mu]", " ", "\[Sigma]"}], "-", 
          RowBox[{
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Sigma]", "2"]}]}], 
         RowBox[{"6", " ", "\[Sigma]"}]], 
        RowBox[{
         RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
         RowBox[{"\[Sigma]", "<", 
          FractionBox["1", 
           SqrtBox["6"]]}]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"3", " ", "\[Mu]"}], "-", 
          SuperscriptBox["\[Mu]", "3"], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]"}], "-", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
          RowBox[{"18", " ", "\[Mu]", " ", 
           SuperscriptBox["\[Sigma]", "2"]}], "-", 
          RowBox[{"6", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Sigma]", "3"]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], ">", "0"}]}]},
       {
        FractionBox[
         RowBox[{"2", "-", 
          RowBox[{"3", " ", "\[Mu]"}], "+", 
          SuperscriptBox["\[Mu]", "3"], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]"}], "-", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
          RowBox[{"18", " ", "\[Mu]", " ", 
           SuperscriptBox["\[Sigma]", "2"]}], "-", 
          RowBox[{"6", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Sigma]", "3"]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", ">", "1"}], "&&", 
         RowBox[{"0", "<", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["\[Mu]", "3"]}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
          RowBox[{"18", " ", "\[Mu]", " ", 
           SuperscriptBox["\[Sigma]", "2"]}], "+", 
          RowBox[{"6", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Sigma]", "3"]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}]}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.68453314145338*^9, 3.6846344595182743`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {"\[Mu]", 
          RowBox[{
           RowBox[{"\[Mu]", "<", "1"}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "+", 
             RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
            SqrtBox["6"]}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "-", 
             RowBox[{"6", " ", "\[Sigma]"}]}], ">", "0"}]}]},
         {
          FractionBox[
           RowBox[{"2", "-", 
            RowBox[{"3", " ", "\[Mu]"}], "+", 
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", "\[Sigma]"}]}], 
           RowBox[{"36", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Mu]", ">", "1"}], "&&", 
             RowBox[{
              RowBox[{
               RowBox[{
                SqrtBox["6"], " ", "\[Mu]"}], "-", 
               RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}]}], 
            ")"}], "||", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
             RowBox[{"\[Sigma]", "\[GreaterEqual]", 
              FractionBox["1", 
               SqrtBox["6"]]}]}], ")"}]}]},
         {
          FractionBox[
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            RowBox[{"3", " ", "\[Mu]"}], "-", 
            RowBox[{"2", " ", 
             SuperscriptBox["\[Mu]", "3"]}], "+", 
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", "\[Sigma]"}]}], 
           RowBox[{"36", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]], 
          RowBox[{
           RowBox[{"\[Mu]", "<", "1"}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "+", 
             RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
            SqrtBox["6"]}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "-", 
             RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}]}]},
         {
          FractionBox[
           RowBox[{
            SqrtBox["6"], "-", 
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "+", 
            RowBox[{"3", " ", "\[Mu]", " ", "\[Sigma]"}], "-", 
            RowBox[{
             SqrtBox["6"], " ", 
             SuperscriptBox["\[Sigma]", "2"]}]}], 
           RowBox[{"6", " ", "\[Sigma]"}]], 
          RowBox[{
           RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
           RowBox[{"\[Sigma]", "<", 
            FractionBox["1", 
             SqrtBox["6"]]}]}]},
         {
          FractionBox[
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            RowBox[{"3", " ", "\[Mu]"}], "-", 
            SuperscriptBox["\[Mu]", "3"], "+", 
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", "\[Sigma]"}], "-", 
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", 
             SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
            RowBox[{"18", " ", "\[Mu]", " ", 
             SuperscriptBox["\[Sigma]", "2"]}], "-", 
            RowBox[{"6", " ", 
             SqrtBox["6"], " ", 
             SuperscriptBox["\[Sigma]", "3"]}]}], 
           RowBox[{"36", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]], 
          RowBox[{
           RowBox[{"\[Mu]", "<", "1"}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "+", 
             RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
            SqrtBox["6"]}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "-", 
             RowBox[{"6", " ", "\[Sigma]"}]}], ">", "0"}]}]},
         {
          FractionBox[
           RowBox[{"2", "-", 
            RowBox[{"3", " ", "\[Mu]"}], "+", 
            SuperscriptBox["\[Mu]", "3"], "+", 
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", "\[Sigma]"}], "-", 
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", 
             SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
            RowBox[{"18", " ", "\[Mu]", " ", 
             SuperscriptBox["\[Sigma]", "2"]}], "-", 
            RowBox[{"6", " ", 
             SqrtBox["6"], " ", 
             SuperscriptBox["\[Sigma]", "3"]}]}], 
           RowBox[{"36", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]], 
          RowBox[{
           RowBox[{"\[Mu]", ">", "1"}], "&&", 
           RowBox[{"0", "<", 
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "-", 
             RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
            SqrtBox["6"]}]}]},
         {
          FractionBox[
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[Mu]", "3"]}], "+", 
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", 
             SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
            RowBox[{"18", " ", "\[Mu]", " ", 
             SuperscriptBox["\[Sigma]", "2"]}], "+", 
            RowBox[{"6", " ", 
             SqrtBox["6"], " ", 
             SuperscriptBox["\[Sigma]", "3"]}]}], 
           RowBox[{"36", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]], 
          RowBox[{
           RowBox[{"\[Mu]", "<", "1"}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "+", 
             RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
            SqrtBox["6"]}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "-", 
             RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}]}]},
         {"0", 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"x", " ", "is", " ", "the", " ", "moment", " ", "arm"}], ",", " ", 
    RowBox[{
    "we", " ", "integrate", " ", "over", " ", "the", " ", "length", " ", "of",
      " ", "the", " ", "object"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.676465933957417*^9, 3.676465936137473*^9}, {
   3.676466161477537*^9, 3.6764661745402927`*^9}, {3.678013519466964*^9, 
   3.6780135355704927`*^9}, 3.684533036755126*^9, 3.684533154817479*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {"\[Mu]", 
        RowBox[{
         RowBox[{"\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           SqrtBox["6"], " ", "\[Mu]"}], ">", 
          RowBox[{"6", " ", "\[Sigma]"}]}]}]},
       {
        FractionBox[
         RowBox[{"2", "-", 
          RowBox[{"3", " ", "\[Mu]"}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]"}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Mu]", ">", "1"}], "&&", 
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "\[LessEqual]", 
            RowBox[{"6", " ", "\[Sigma]"}]}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
           RowBox[{"\[Sigma]", "\[GreaterEqual]", 
            FractionBox["1", 
             SqrtBox["6"]]}]}], ")"}]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"3", " ", "\[Mu]"}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Mu]", "3"]}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]"}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           SqrtBox["6"], " ", "\[Mu]"}], "\[LessEqual]", 
          RowBox[{"6", " ", "\[Sigma]"}]}]}]},
       {
        RowBox[{
         FractionBox["1", "2"], "-", 
         FractionBox["\[Sigma]", 
          SqrtBox["6"]]}], 
        RowBox[{
         RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
         RowBox[{"\[Sigma]", "<", 
          FractionBox["1", 
           SqrtBox["6"]]}]}]},
       {
        RowBox[{"-", 
         FractionBox[
          RowBox[{"2", "+", 
           SuperscriptBox["\[Mu]", "3"], "+", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", 
            SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", "\[Sigma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "-", 
           RowBox[{"3", " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"6", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
          RowBox[{"36", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]]}], 
        RowBox[{
         RowBox[{"\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           SqrtBox["6"], " ", "\[Mu]"}], ">", 
          RowBox[{"6", " ", "\[Sigma]"}]}]}]},
       {
        FractionBox[
         RowBox[{"2", "+", 
          SuperscriptBox["\[Mu]", "3"], "-", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "+", 
          RowBox[{"3", " ", "\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"6", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", ">", "1"}], "&&", 
         RowBox[{"0", "<", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}]}]},
       {
        RowBox[{
         FractionBox["1", "36"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"18", " ", "\[Mu]"}], "-", 
           FractionBox[
            SuperscriptBox["\[Mu]", "3"], 
            SuperscriptBox["\[Sigma]", "2"]], "+", 
           FractionBox[
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", 
             SuperscriptBox["\[Mu]", "2"]}], "\[Sigma]"], "+", 
           RowBox[{"6", " ", 
            SqrtBox["6"], " ", "\[Sigma]"}]}], ")"}]}], 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           SqrtBox["6"], " ", "\[Mu]"}], "\[LessEqual]", 
          RowBox[{"6", " ", "\[Sigma]"}]}]}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.676465889260406*^9, 3.676465937337885*^9, 3.6764661289750233`*^9, {
   3.6764661652102547`*^9, 3.676466178267062*^9}, 3.684533053449914*^9, 
   3.684533158583465*^9, 3.684634461361347*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"TorquePivot", "[", 
   RowBox[{"\[Mu]_", ",", "\[Sigma]_"}], "]"}], ":=", 
  TagBox[GridBox[{
     {"\[Piecewise]", GridBox[{
        {"\[Mu]", 
         RowBox[{
          RowBox[{"\[Mu]", "<", "1"}], "&&", 
          RowBox[{
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "+", 
            RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
           SqrtBox["6"]}], "&&", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], ">", 
           RowBox[{"6", " ", "\[Sigma]"}]}]}]},
        {
         FractionBox[
          RowBox[{"2", "-", 
           RowBox[{"3", " ", "\[Mu]"}], "+", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", "\[Sigma]"}]}], 
          RowBox[{"36", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Mu]", ">", "1"}], "&&", 
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "\[LessEqual]", 
             RowBox[{"6", " ", "\[Sigma]"}]}]}], ")"}], "||", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
            RowBox[{"\[Sigma]", "\[GreaterEqual]", 
             FractionBox["1", 
              SqrtBox["6"]]}]}], ")"}]}]},
        {
         FractionBox[
          RowBox[{
           RowBox[{"-", "2"}], "+", 
           RowBox[{"3", " ", "\[Mu]"}], "-", 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Mu]", "3"]}], "+", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", "\[Sigma]"}]}], 
          RowBox[{"36", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]], 
         RowBox[{
          RowBox[{"\[Mu]", "<", "1"}], "&&", 
          RowBox[{
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "+", 
            RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
           SqrtBox["6"]}], "&&", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "\[LessEqual]", 
           RowBox[{"6", " ", "\[Sigma]"}]}]}]},
        {
         RowBox[{
          FractionBox["1", "2"], "-", 
          FractionBox["\[Sigma]", 
           SqrtBox["6"]]}], 
         RowBox[{
          RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
          RowBox[{"\[Sigma]", "<", 
           FractionBox["1", 
            SqrtBox["6"]]}]}]},
        {
         RowBox[{"-", 
          FractionBox[
           RowBox[{"2", "+", 
            SuperscriptBox["\[Mu]", "3"], "+", 
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", 
             SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", "\[Sigma]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "-", 
            RowBox[{"3", " ", "\[Mu]", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"6", " ", 
                SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
           RowBox[{"36", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]]}], 
         RowBox[{
          RowBox[{"\[Mu]", "<", "1"}], "&&", 
          RowBox[{
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "+", 
            RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
           SqrtBox["6"]}], "&&", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], ">", 
           RowBox[{"6", " ", "\[Sigma]"}]}]}]},
        {
         FractionBox[
          RowBox[{"2", "+", 
           SuperscriptBox["\[Mu]", "3"], "-", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", 
            SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", "\[Sigma]", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "+", 
           RowBox[{"3", " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
          RowBox[{"36", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]], 
         RowBox[{
          RowBox[{"\[Mu]", ">", "1"}], "&&", 
          RowBox[{"0", "<", 
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "-", 
            RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
           SqrtBox["6"]}]}]},
        {
         RowBox[{
          FractionBox["1", "36"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"18", " ", "\[Mu]"}], "-", 
            FractionBox[
             SuperscriptBox["\[Mu]", "3"], 
             SuperscriptBox["\[Sigma]", "2"]], "+", 
            FractionBox[
             RowBox[{"3", " ", 
              SqrtBox["6"], " ", 
              SuperscriptBox["\[Mu]", "2"]}], "\[Sigma]"], "+", 
            RowBox[{"6", " ", 
             SqrtBox["6"], " ", "\[Sigma]"}]}], ")"}]}], 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "+", 
            RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
           SqrtBox["6"]}], "&&", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "\[LessEqual]", 
           RowBox[{"6", " ", "\[Sigma]"}]}]}]},
        {"0", 
         TagBox["True",
          "PiecewiseDefault",
          AutoDelete->True]}
       },
       AllowedDimensions->{2, Automatic},
       Editable->True,
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.84]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}},
       Selectable->True]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxItemSize->{
     "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.35]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   "Piecewise",
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True,
   Selectable->False]}]], "Input",
 CellChangeTimes->{{3.676467577391876*^9, 3.676467583150907*^9}, {
   3.676467620923286*^9, 3.676467642689784*^9}, 3.684533184729178*^9, {
   3.684533596596053*^9, 3.684533598039216*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"TorquePivotTriATB", "[", 
   RowBox[{"\[Mu]_", ",", "\[Sigma]_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"lowlim1", " ", "=", 
       RowBox[{"Max", "[", 
        RowBox[{"0", ",", 
         RowBox[{"\[Mu]", "-", 
          RowBox[{
           SqrtBox["6"], " ", "\[Sigma]"}]}]}], "]"}]}], ",", 
      RowBox[{"uplim1", " ", "=", "  ", 
       RowBox[{"Min", "[", 
        RowBox[{"1", ",", "\[Mu]"}], "]"}]}], ",", 
      RowBox[{"lowlim2", " ", "=", 
       RowBox[{"Max", "[", 
        RowBox[{"0", ",", "\[Mu]"}], "]"}]}], ",", 
      RowBox[{"uplim2", " ", "=", "  ", 
       RowBox[{"Min", "[", 
        RowBox[{"1", ",", 
         RowBox[{"\[Mu]", "+", 
          RowBox[{
           SqrtBox["6"], " ", "\[Sigma]"}]}]}], "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"uplim1", ">", "lowlim1"}], ",", 
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          SuperscriptBox["lowlim1", "3"]}], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["lowlim1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Mu]", "-", 
            RowBox[{
             SqrtBox["6"], " ", "\[Sigma]"}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["uplim1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "uplim1"}], "-", 
            RowBox[{"3", " ", "\[Mu]"}], "+", 
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", "\[Sigma]"}]}], ")"}]}]}], 
        RowBox[{"36", " ", 
         SuperscriptBox["\[Sigma]", "2"]}]], ",", "0"}], "]"}], "+", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"uplim2", ">", "lowlim2"}], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox["lowlim2", "3"]}], "-", 
         RowBox[{"3", " ", 
          SuperscriptBox["lowlim2", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Mu]", "+", 
            RowBox[{
             SqrtBox["6"], " ", "\[Sigma]"}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["uplim2", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "uplim2"}], "+", 
            RowBox[{"3", " ", 
             RowBox[{"(", 
              RowBox[{"\[Mu]", "+", 
               RowBox[{
                SqrtBox["6"], " ", "\[Sigma]"}]}], ")"}]}]}], ")"}]}]}], 
        RowBox[{"36", " ", 
         SuperscriptBox["\[Sigma]", "2"]}]], ",", "0"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"lowlim1", " ", "=", 
        RowBox[{"Max", "[", 
         RowBox[{"0", ",", 
          RowBox[{"\[Mu]", "-", 
           RowBox[{
            SqrtBox["6"], " ", "\[Sigma]"}]}]}], "]"}]}], ";", 
       RowBox[{"uplim1", " ", "=", "  ", 
        RowBox[{"Min", "[", 
         RowBox[{"1", ",", "\[Mu]"}], "]"}]}], ";", 
       RowBox[{"lowlim2", " ", "=", 
        RowBox[{"Max", "[", 
         RowBox[{"0", ",", "\[Mu]"}], "]"}]}], ";", 
       RowBox[{"uplim2", " ", "=", "  ", 
        RowBox[{"Min", "[", 
         RowBox[{"1", ",", 
          RowBox[{"\[Mu]", "+", 
           RowBox[{
            SqrtBox["6"], " ", "\[Sigma]"}]}]}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"uplim1", ">", "lowlim1"}], ",", 
        RowBox[{
         SubsuperscriptBox["\[Integral]", "lowlim1", "uplim1"], 
         RowBox[{"x", " ", 
          FractionBox[
           RowBox[{"x", "-", "\[Mu]", "+", 
            RowBox[{
             SqrtBox["6"], " ", "\[Sigma]"}]}], 
           RowBox[{"6", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]], 
          RowBox[{"\[DifferentialD]", "x"}]}]}], ",", "0"}], "]"}], "+", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"uplim2", ">", "lowlim2"}], ",", 
        RowBox[{
         SubsuperscriptBox["\[Integral]", "lowlim2", "uplim2"], 
         RowBox[{"x", " ", 
          FractionBox[
           RowBox[{
            RowBox[{"-", "x"}], "+", "\[Mu]", "+", 
            RowBox[{
             SqrtBox["6"], " ", "\[Sigma]"}]}], 
           RowBox[{"6", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]], 
          RowBox[{"\[DifferentialD]", "x"}]}]}], ",", "0"}], "]"}]}]}], "]"}],
    "*)"}]}]}], "Input",
 CellChangeTimes->{{3.676467577391876*^9, 3.676467583150907*^9}, {
   3.676467620923286*^9, 3.676467642689784*^9}, 3.684533184729178*^9, {
   3.684533596596053*^9, 3.684533598039216*^9}, {3.6845379966929417`*^9, 
   3.684538068930195*^9}, {3.684538106530834*^9, 3.6845382708752737`*^9}, {
   3.6845383147084846`*^9, 3.684538356260854*^9}, 3.684538387403821*^9, {
   3.684538484572762*^9, 3.684538521073769*^9}, {3.6845388666282597`*^9, 
   3.6845388668906527`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "lowlim", "uplim"], 
  RowBox[{"x", " ", 
   FractionBox["1", 
    RowBox[{"2", 
     SqrtBox["3"], " ", "\[Sigma]"}]], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.684539156942346*^9, 3.684539164426305*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    SuperscriptBox["lowlim", "2"], 
    RowBox[{"4", " ", 
     SqrtBox["3"], " ", "\[Sigma]"}]]}], "+", 
  FractionBox[
   SuperscriptBox["uplim", "2"], 
   RowBox[{"4", " ", 
    SqrtBox["3"], " ", "\[Sigma]"}]]}]], "Output",
 CellChangeTimes->{3.6845391647952223`*^9, 3.6845408854065228`*^9, 
  3.6846344615903387`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"TorquePivotUni", "[", 
   RowBox[{"\[Mu]_", ",", "\[Sigma]_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"lowlim", " ", "=", 
       RowBox[{"Max", "[", 
        RowBox[{"0", ",", 
         RowBox[{"\[Mu]", "-", 
          RowBox[{
           SqrtBox["3"], " ", "\[Sigma]"}]}]}], "]"}]}], ",", 
      RowBox[{"uplim", " ", "=", "  ", 
       RowBox[{"Min", "[", 
        RowBox[{"1", ",", 
         RowBox[{"\[Mu]", "+", 
          RowBox[{
           SqrtBox["3"], " ", "\[Sigma]"}]}]}], "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"uplim", ">", "lowlim"}], ",", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         SuperscriptBox["lowlim", "2"], 
         RowBox[{"4", " ", 
          SqrtBox["3"], " ", "\[Sigma]"}]]}], "+", 
       FractionBox[
        SuperscriptBox["uplim", "2"], 
        RowBox[{"4", " ", 
         SqrtBox["3"], " ", "\[Sigma]"}]]}], ",", "0"}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.684538961696658*^9, 3.684539033841741*^9}, {
   3.68453908776854*^9, 3.6845390935628242`*^9}, 3.684539169612364*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"TorquePivotNorm", "[", 
   RowBox[{"\[Mu]_", ",", "\[Sigma]_"}], "]"}], ":=", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          FractionBox[
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], 
           RowBox[{"2", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]]}]]}], "+", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox[
          SuperscriptBox["\[Mu]", "2"], 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]]}]]}], ")"}], " ", "\[Sigma]"}], 
    
    SqrtBox[
     RowBox[{"2", " ", "\[Pi]"}]]], "+", 
   RowBox[{
    FractionBox["1", "2"], " ", "\[Mu]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Erf", "[", 
       FractionBox[
        RowBox[{"1", "-", "\[Mu]"}], 
        RowBox[{
         SqrtBox["2"], " ", "\[Sigma]"}]], "]"}], "+", 
      RowBox[{"Erf", "[", 
       FractionBox["\[Mu]", 
        RowBox[{
         SqrtBox["2"], " ", "\[Sigma]"}]], "]"}]}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.676467577391876*^9, 3.676467583150907*^9}, {
  3.676467620923286*^9, 3.676467642689784*^9}, {3.684540628942993*^9, 
  3.684540631070787*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sigs", " ", "=", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.1", ",", "0.5", ",", "1", ",", "2", ",", 
       RowBox[{"5", "/", 
        RowBox[{"\[Sqrt]", "3"}]}], ",", "5"}], "}"}], "/", "10"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"TODO", ":", " ", 
    RowBox[{
    "place", " ", "legend", " ", "inside", " ", "the", " ", "plot"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"TorquePivotNorm", "[", 
      RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{"\[Sigma]", "\[Rule]", "sigs"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", 
     RowBox[{"-", "2"}], ",", "4"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"LineLegend", "[", 
       RowBox[{"sigs", ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", "Bold", ",", "8"}], "}"}]}], ",", 
        RowBox[{"LegendLabel", "\[Rule]", "\"\<\[Sigma]=\>\""}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.75", ",", "0.55"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Mu] (pushing location)\>\"", ",", "\"\<Torque\>\""}], 
     "}"}]}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"2", "/", "3"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"2", "/", "3"}], ",", "1"}], "}"}]}], "}"}], "]"}], 
     "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<../pictures/pdf/TorqueNormal.pdf\>\"", ",", "%"}], "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.683656192718853*^9, 3.68365650959415*^9}, {
   3.684540635146593*^9, 3.684540677064104*^9}, 3.68463443016495*^9, {
   3.684634642808958*^9, 3.684634652898061*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
eNiMft0v3PbUGMbqKu7/AKms3JU=
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxN2nk8VO8bP35bZcu+Z60USRRJzDmXlFCSkLTYlyKJsiUJSVSWkKUQoqSE
IllvIcm+b1FkzT6rbPnN5/v7Pt6+88e8Hs+57nPPNdecmTN/jIztdWMHJgYG
BhX63f/yq6XMr/X1dcTwf2/+UpoGXn83rD5kWjyzsOFsm9CYvuENR9nP636s
3vAF5/I8xwcbnvM8H9TEtWGh8CeyzyX+/WdctWo4nW8VtT2O3mkrx8s66PMq
3XjPMrLFLqpK7brAXWE4Gx538i/KuLr9Ka2KQcgzmTJ3/BgN/XEaJtzkeC2e
EZZr+sKKghpdL5/Y32m2/c3cHmV7YxJaGh5NdRma370wyqpWbriAyhklgutu
9e69RFQN9Psxg56x2hswc08p32fvCzxXN4nC0Ljinbhq1STL0UdBy6Oojs1U
c16/89ChroKpLhhGMWoK4dR2M401X05nliv9KOiV8+uGi44EIa1sg1b9fhSg
9HK8OlKjTHmTnlKSQj9ikAws2KxtV2YfeY+iMt+HeMxU5ZhuGZXVv1z2t/Pq
Qwx/JQ93jegSEhonY6qCexHDy4aV/UsRhA9PQrwiHHuRlkEUp6VmIqHRbOf5
C3q9KECC05h/fzJhfchKksTRiyrjtxdaHn5LEHm1xlAx24NSGbmo1yfyCQeu
Ph8Ja+lBWqevGFgkFhEMlA/Xns2nW7hg9UctIjhSu7NkYnpQQFkS+mhcQwgo
8Xg069GDGDRullg9aSA8u8vnWmzWg4bSQifDGNsJBcfyjO6r09crvle+3NVD
aGIzVDkjRt8vzJzt+8FfhPHmaUGJ1W4UMG55rvP5KIEhNuzv5GA3qowte9Aq
P00QO7/7RwGi10mH9cS7iQRVya/lAWndiKFr7jDBfpFgOGKbanCvG2l9azFP
yv5HuJLFcE/EgX68U5mrxRYWLOhaisPocXpdykm9Q4Ude36AoJcn142so0J4
qMK8WMFi3x4/dvr6Z9f26x4VwprLvLfqzXQhrWcivUGr4thkoOACf3MXkrbl
t4zt2o4x6X5s/5VLr2/S43niLoeJc54pfPuE7l3j6fvylDC1trl475tdKOCW
rjx7kCpmFPfY9+hZej0gz/nUPQ3M6eIeC+5DXahyuffoOckjWJB0HfwQ6UJD
1qwefnzHsaQxh+2vlztRZV+/9RcXA+xTNvOmmwOdSHqg0z1A1xhrvZ42gVd0
Igb/cQF333PYlCrUs6d2Ii1tVS9eSUuMZXngXXcg/fjmPZtCTthhksg3Mt2O
vn6gQzry/RXsULDIDVcden09eNg/7DpmpP/JVGN3JwrYUjhxVsoDc+YyPbSZ
je7nB96QM25hwR1E0fapDpQ6SrrceyYAS0mIXE1u7EDW56RiQyuCsc8Wir+c
3ncgLdNDzEFnH2Jt2xu+HIyiW1PVyy8/CpuauJLBeKMDVVaEeMxsf4qx5Gx+
0GRCr3fv+X645BkmeSPDKfEg3S67Rj2GUjH1Q9oGDsL0/S+HXJbRz8SMV3/t
27/UjrQibJUqW7Kxq1/u8K71tyPpvKGpA4N5GF+EdymUtCOG7f45txMKsZIL
7g5Bie1oSC+c2pNUitnsvsr91Ydef99+3Dj1C8ZKsS/eYt6OAhzt/Vh9arHc
Sku7E4fo9dPdtqqJjZhZuPnWcKF2VDl+V2f33nZs7bxxUQu1DTGw3lI6w92D
ZewysOHronskri350CB2kqzDcbagDWnV2CGN278xEoLC+Jg2lKro6edkPoEl
Pj5s1X+jDQ2VfycNu89iWudV2CSM6eunOjt8HpKwCVnFj1b76ft9t7weaLSI
RZB2WaTz0OvWryI7ddawg0h6y9h8K2IID3O1Pc+EDzwSy9/d0oqkj+kx8//d
jN8zF7jo/L4VpXpvPeteyInvkeXalBPeirSiSB38U7x4G3FL7rwLfb3nBdce
YyHcp4Lx/AGDVmR9yF+pqHYbLvVohclToRXxhHI3SR6RwWvPUd8VsbeiADuZ
H8GXZfEfej9zKB0tiOFN7UX83h58z+82Rt/oFqQ1wN2m4aCM+9z+enbdqAUN
FbWlXABVvFag+E0wN91Py6ZjF9Vxgffv1tiam1HqSmrl63Ict9NNPRP5uBnl
WRoefjCmjX8YiskUONmMtO5U2rgd0MUZfB8sJbI1I+mbhRTm6wa4If/tU1J1
Tci65uGEp+MZPOmda1pGSBNK5e3qqz16Fp/SsaXK6zQhBm9azhTpPK7+66x+
LnMTkv5y6uSuFCs8xEc/WbWqEQVYPLcZ0bTDu3gxYnFAI+K5+U3lm8VlfOdb
ZR2ARmR9y6ptn7kLfuPYzsSatQaUV3dcLHSPO145KDyrX9aAKrWvRTBVe+Bc
3hxHWnzpLhtZrue7hV/iWY81PdyAGOrrFy8S/PHsN6TJvsV6xLDmYCajGoT/
1R4nWH2qR0aaL1m5Ru7jugN9UaMe9Shvwrztx/GHeJxn06iTSj0KqB45fCAg
Eh/l+qI+T/yOKnv/+j/vj8YPZBU89sj7jqwztmaphMXhAUeyhpZc6XW5wvRv
Y8/w5v7nqncVv6Oh24pf1Lek4uIekaEsM3XImpR1lZv/Je689d5AWHYdGvpY
GJOe/QovfuWlzO1EN5Phb7OxbJxVyzk4dncdkhbzrFX8mYub9Vn0io5/Q24n
WM/u6P+AZ9w4s/dFxjcU8FtzpUjnE07i0AnYafcNLcymIfvjJbhWpnrnG5lv
qFWnmamcXIFH4HvllIZq0VBq8BVL1Sp8oEfKryCF7v0pSNz2K77Hnb/1sEUt
YlDZcj5X4Dvuw75lJ9pWi7SGea6LWzfhtS+XvY/1f0Wse0XjYxTbcAFsruF7
wlc0dGgbVzt3J27XPSx1+txXZFTEu+zs0IP3f5FZ2iz8FUXxKJESFX7gRjk2
7RXdNSjAUmfP46BfeG1C2luvuBqkbu5yYSv8xgnBw8H7zGpQXa9N03GxMfzD
dRnLccEapOXlW+xqNYnLX7Q5lNJVjVKP3FC9Iz6Dpx5P4zF7Wo3MnwpjIcoL
uNCB4T9bz1ajv9Zh0kdekPDHEjLVXwWqkY+sGp+kPRVnZrNJutNZhfTWuVJ/
hf3FfSmpngdjq1AAX/ZDT/FVfOHXkOGsSRWKSuAjPxJgAMcGablM/ipUR878
u9+KCQY/WTNadHxBekZbTTEaC5imp/YLxHxBlfw/w6J+b4H68KGPjcZfUKqh
lQJRkQO0bkmHB/PRLY1/Fh3hgiJ7a0dCeyVyu/tSYTyEF/YZpQLlSSVS7spU
ujnIDxmaQyLvzlSivAAPEw0/IRDbLU2y461ErEUpuqPOoiAjWxl3KB0hhqdX
BmvzxYFrFfRfyyAUmlsh/HevNCy3oxWhtAqkdax0c6Ladph4A+9DpCvo1wOR
FqHbO6EzAFnTXpSjhdSUp0oMu6HyHPA7SpUj1sVNzIKN8pCzD33tSimjv589
GjfG9sKzTeCjI1mG3gkkjH+WV4aQgYo9hcmlKKrkSeMw1wG4+REf3ClRigRK
DE6c2aUK1g8rImOTStCV3aNq1zzU4JQNrs0iXoL0bBv8xtfUQUO9gnLzeTFi
LazOK/2mCbu58dcjYsVosiM6ULMHB4Hx8vMmzz4jLb94P2bRI8BYjnFWi35G
lY9nqtnmtWEuprziQGIR6k0putK9cAz6nTH3dJEiJPchSqxURhe+HSnfwZfw
CXm4tjOr3deHAhGsO1D4E2LNYiKQJA0gdb4slBhXiC5NZnDUkQwhvJagaSNU
iFpZOv0tmc6Ab3LZbOvTAlRnZT0Y+M4YLnsQUrUEC5BIYHzX2i1TMD1ZZpwX
+xFlMbYrilwzg31LpUWRMR/Q3gr/yuymC7CtVdN5ne8Dkpa8ZyOiZQGsr0vF
r0fnI+s3KW+2/rYCyh3Nlp+8+WhAPKJd7KINDJuWBho+yUNJdfkur37ZQrOC
pmoFTx56PCvByBNgD16bvJouSueixk62s18xR5C38YwXk8xBow6FyVNCzsDE
7bm6JP4OmX6TbzU56AIDZR42fdveojoWvvNLXq7wydmj9rNYNjJ4cjsoz9UN
okQ8FBJE3yBfMyZltkJ3cK69GeUtkoXep6/UnuC+CUc9blLNhF+jGqdU9sP+
HkBruYEEBTNRdCOzmWyyNzw2aNylL5uBhO48i81TvgUy32Uj/A6+RGVqNyK+
9fqCQVXvpZGzaShhT8r92Sv+MIwfqBFyTEUzHPxHueUDYNZL+FzsTAraZhIk
xy0fCNpOdyg2is9RtCPV97TBPbhmq1xddyoRVXAwBXC5BUPCxZEnSq7x6PxD
9Vf7U+/D7Cl9pbX3MUiDLFxzd1coKDvs6VS2CUWNhTcs3FvDIeRclPu/tGDU
8dufJflSJPzQp3E1/g5ALcw5llq3o4DTIjimue4G0rGMkB6Tj4Yo6QSmMBtH
2Ko6FDXV/xSSFQKOy+feAO5UnZNZvXFAOl7AEaHoC+uBgSmWg/HQjHM1KDwN
hlh5BcW4lUQo0yjNXq57Au1DLvy9YSnw5AjrQExWDExsOz7CV/ECHPXOblUM
fQrasEvtsl8q8JrNX7fSTYR6PbGTHyrT4OPnJ2K/bVNhi6y0yOq1DGDt/Prr
+PBr4KOeHm8xyIYb51x8+Nuy4O6pDNYs/rcw2M/HO1T5BpyuCRnlDbyFD8NW
2rdS34LKmk0To2cOWMwvZby1yoVPK/qZYJkH5zcJH2S9/hGSiQeVdzR8hF65
ZTt+4kfgOdl4T0KnAMwNBqMlbxZAzTvx2wWI7piXC6rehcC8reZt9KdCMJdR
fmdztwjWNUu7xLOLwAzT31EaWQrqUglFjOml8KaknPVQ7xd4Ub9d8l7fF8gk
zdP+/P0OtYp9x2fo6V76o/tBdCeIDP7/efAZ9mOyfuC/XEpkf+7n+vu//KPA
jVQPjMPQmbaK/6WzBlEzVHscsK60/5Mzeh2ffxiPw74H1/5PzjnEfwi6OQ4R
m4n5/0vSC6lXrQXj8Innasb/cplfOdzl0ASoWegH/S85Vo0uZhAmYYKJgecl
PR+zq/QuGkzCltcOR2n05BIVPHvSYhJexWpd1qcnj1qfIenOJAzJ6t+cp6eA
m422FpoEfndJMQ16io+6yw8c+QOD+acSvtBTsTF6kV93Cnx/5+ik60xBFXZa
1dhsCkwC76llmU6BeS6He5TDFDAvFKi/spuCoOjgKc7gKbAxHdUOCZyCXnOv
wU1fpkDacrfgh7IpuFZ/QOxY6xS88JftM22YAibCvFnQrylIvJyaNdI3BYpS
V1r/rU2BQmYhWxmNvt/Y+epFjWnwtJ5OYVWaBpFzQgxqJ6bBSUC2r5wwDTl1
7QSP89PQ6TUUqEN/vPftyU8L3tNwd5BiWGw/DdckWMn7HkwDz+Revufu08AU
WaN0LW4aiq3TvTT8p0HxBvbmT8E0LNGa0xLoj1eNLI3trpmG76cnvPXTp8H8
7Kftjh3ToPHMlzkpZxqC1JWSfhOn4X7g0XyWano/2dO90owz8CdRIoe1id7P
tixBK54Z0B84z/awm97PP+nIH/tmQDPXXbF/gt6P22CDKD4Dpx+VCEbP0/v5
nchqfmoGHFZFnyfSpiHBxEwn7tIM9NX+rhxZpff3lS+o8+oMzJk8mrJlmoEq
tZYKvtszcEbGeYB1ywyYZz1aMXo4A8mZV8tr2WdgVlRPPTJxBmYOd4qGb52B
oEcsnk1ZM+A3IjVxknsGRNYq8zk+zwB5jCeMRHeO6505/W8z4Nq52nOdbu2h
wwqh3TPgb+co94F+fO8Z2uXasRmQe7Bg8pq+/7XqDxksVPrx1wqrCZtngOng
9WFtllm4kMPmZ8UwAwmvFCQD+WehzjNffvUvvX+RyQto+yxYTzxUXqe/3qqw
jPi1/bOAZ+WUmo7R57ti3al5ZBb4clabJ3unYdZFgtfXaBYMqndceF1Pn/fP
vlOfrWZh+CfNwK+EPm+juIc011mI9pPNMcmiz/uL8TdV/1mISlLOEY2dBm0V
bpab4bMguhxeU3KHPv+MBq38pFnoJfyq2+FAn79Q6J35t7PQuCLFqk0/X5hC
j5Uols4CT/QbO2ZF+vyXGBav1s8CG9vkVbOt9P6vlqtk983C25p4vz3T9PN/
4Jbb5OQsRGhY912vpZ//hmo5u/7OwtG+pHrhF/TzdX/urpdCc7C7pfH0Bb0p
CI8QqYqVnYOP3U07O0SnIGE60CJEdQ7qSW2iSZN/IDfTNNbJeA4SOVsKGP3/
QAlThdJFmznIvLx9LubYH6i12t1g4DYHFPmKBBvWPzAgusyoHDEHh9m2W+c8
oH/uveySZZLngO/764NKRyeB1NGozv9uDkw9EtkpKxPAFvHiOu37HHA+L6+x
c6B/bzDpDJZtmofb9sXZoqLjcMTqvc97gXk4/cs2YASNgUGZsEDqjnkokpDq
srIfAzuvqRP3jsyD/rL4zuZXoxA1FflZ/848yEdE59wWGIHp9v6Ybso8EB00
fNetfsGKcLrwKOMC1EsLxj0L+AmBtWZjl9gWQOYP12R/6iA83lEZYCiyAE+9
ZYcih3/Ay8Hoov1qC8CemPj2kUsvyD3WvZ+NLcC/L10+XDE98F5j1XiHzgKc
uvIo6nVpN5TEO8wJmC6A17HbqqoCXdB6Rl32r/sCrP6IkKj40wZmDLMkt1sL
kCnYf59Nrg1+vE+r/BOwAB7Z/SsnnFthnIPj0o/IBdBzuPWwhNYELiVI3jR+
AS5nE4qpsY1AuuKx2JiyAM2fjwycJjTA2tfB6IqcBWgvKHur+boOgjyirQ8V
LoD9Ke7wXVe/AesO3X15ZQtwrYE2+1u9FgQC8r6nNdCf/6HCsAKpGvZo3GO4
/2cBBmjTmagYQeO4tXgqcQEWVj0fZBeXg2sMrl66tACE2z/cX7WWwseZpetE
NiIY8VInorQ/g1lizyNOPiIc94gfLE36BH91Cl/vFiOCxyaFlRuchUB44fbL
Yg8Rvly/Qbu95wP8PGm44nOA7hvoVH5PHgT8VRCO1SACF2uJio9yLmzPZFPJ
1SaCfyaH1WL3O/h6ZsKw/gQRfB9m74xNy4Yr/2qcx4yJkM/jK7QckQXsb9ND
GC4SQchjr1Nz8iswZLGsULtKhCmy1bajYi9hIU+z/8xNIgyyGcVI3U+DaAtR
msttIrAJ+QiMc6SCKvsib+g9IjhuVmq8fiEZej51Kr58RIS/j3c882h5Br52
H/QrYojQFpL/UckjAcR5ohz6nhPhyZ40BebjcWDtdDKZ+x0RWLZ9j6tzjAYm
IfniPQVEIDq68rflRUFm1eYunTJ6f1t5qEcJEaB3fXTBuoYIN3Tz7Inmj2Bq
WxWnXyMRMKEv4mc+hsLjuhdy8Z30flhobId0Q2Cf551jHwaIsPOSikMmTzC0
yly0bholghnjwsUmjiC42azuNzlDhOUiYxvugwEgdFsogZlKhLEBBUsa7x34
vJvyUXKNCD5GOcsprL5wobOt5fAmEsTGzi2QdL1hNSB32nQrCZa2W/3dXe8B
KYrhW9wESUAbu3ewKewGHOl33vFIggRyWwlzdYFuMBqiB69kSZDUNTb89sI1
CFHZdfGLIgkqaH5ejDzOIDfE7D1wkAS3Oh706G27DPWPh6MXMRJ8K+YQbPGw
B5fD6D3fcRKsvvln5y5oC9zjSfWKhiQ4phfzcO+sFXyI9h3XMyMBp7blrlM7
L4EpmDPZW5Igxmcb+9av5kCbPih515EE4mwfrkt8PQsJCfwaz1zp/egLRrFv
MwENHeLZQi8SsNwJ5NlXYQQDxGb3Vn8SpImv+hw9dQr8U96FT4eQIOLQZQ2H
Z/ogc/Lhm82RJAj4ObCYZXYcahYvf5WJJ9F/Rx78pOB1FBwzdIYJL0hgVWY8
KDenBaxndqyde02CbTN3neucMMheYxC9mUuC+p2nSfL3DoNB9k/ViCISUCzF
OTNE1GDOrMzoDSLBtN3K6X/bVCCK+ZlLzTcSzFaOs3sHKINKnnforxYSoMSg
xGOee6H70tmM5R4SdJ54ohsXIAc+bCqVgkMkGOTdu5DDIwtin3gGlCdJkPfX
dfas4HYos51bPLlAgmd92WOnGKRgUqv45sAiCUZktF0YWsVAUCp43mWdBDIM
nJwTcsKgvWZ4dW0zGXbahYZELfOD6w/RiXAuMqw+tYNLarzwrHjUVlKIDLdm
38clpGyFb/G5P99LkMHFfCL/0002oHj6XgBZMixMtl1717MJpE11ulv2kkF8
/Y2P+2cmMDjAY2ytSoaTK6n52zYzwC2eH00LmmQ4rhVjeMJhBX81l6kfeJQM
CeXdW6/bLeLtjW5feU+SIW1Jb/fSAhn/l615JN2YDJ7r5YHjywv4nrDN5Qcu
kCFGepP2zuEZ3Oxym3q1DRlSynCnwZBJ/J5OUoGJExnc3rklRTWN4nk7LiuP
upFhfXofLvpiGB9gPPDOw4cMD+8KPLdvHcRZh1Z3bwogQ3pxuZimch+uWvHt
5dMHZIgeOzySpdWFWydFS+2KJMNeVZ3qe5NteLivxfNPcWQYrWb8yr2zGS8x
lxPWTSFDzWFG7g7T7/i4Gjm6J5MMjZyZHhPaX3E+wQquKzlkMJ0Z67Fv/4ID
OfTh3wIyKFJ4Mp93l+MubSabw8rIQLlQRBQkfcYTciWDRGvIoN07PzHTUYDX
hP9Ze9NAhvgHufiMRT5OvFpwS6ODvt6oivPhzDtc8sRdan0/GbL6PctHt2bh
J+ROuF/8TQZm16h79ssvca/NgrPTf8gQhdwYpaNT8Zejv674Eenv11qbxtLN
53hrVfYo5xIZAnJsv68UxuGrqZ7WyQwU0GiKzTlfHY3L3dUaUGSlQPDWPxZG
tAjc1ILDvIKbAp2pem6H74XhAZrdHYbCFFDdZzAR/S8YzxFNO/1LkgKt++RY
prUC8f7Fqw3Xd1HgsYtuqKqxH765W02XYR8FCFFxJs/UvPEDBYzVUQcpEERR
KrZjuIlbRjfiMhgFjAsFh/l4r+MP3eJL8o9RQGCBeXbwkhNeZGirpm1AgYxr
4FWeY4+P7lX80G5CAdn+JwoXu61xHo6/inYXKeDqo5W8bnMRJ/ypekO2pYC9
uPdyDsEMd/oWLhvsTAFOBdLpOlZjPC7TPE3gBgXM7LaF3lc7hVfd2yGReYsC
3S8Ct29J08XnbOYSDgZSQPKtW62e0FF8m1axQG0oBfgWL8U9b8BxPcngKLMo
CricSx4xblHHPVYNOSfiKfAuyALjoangqf2iod4vKKB0Ov7NDJsy3vR5lJn1
NQXk/CdpruXy+HJc7t2E9xTo87ib+SB1J77L03dF7hMFHKeU//wLlMaNTXS8
i8spEBH9p1PcTgz3389D1v9KgcNbxB1KuAXxbO4frv2NFPjFp9T6/TsP3jOb
OeXcSYGaF0PCt0vYcen6xILkAQo4hde//9LDgju/CvdvHaXAgIeFraEGA/4x
KFCPeZYC2t4Jd75rLGGrlp58alQKiEittJBiyZiOptPAlTUKjH5Lt7h4fg6L
ELZ49XwTFbyEK0p0bk9gPWQjt+atVDDLuhhQsuM3Jt16TINRiArew/EPL6z8
wJzeqbOoSlIhZdg41O5xF/YhdG+z4y4q2KgtWLg+acVW7KUTEvdRQdp/EuN2
+44dOyJg26hGBU1lYRb9u9VYuATr3nWcCnNxifMmPeVY99IKdb8uFapk3jMS
Gz9hUt3zyP40FSpfXLNvs8/HrnwYCYs/R4VjCbllMnezsfyIHpN6Kyr9+pfE
6LwrA1t2bpBYu0yF7COGcqcTU7CjumhCyY0KCyfsxS0OxGOPd3zMt/WhgqXY
CY6qiCdY1/qr208DqMDT2LPFPewhJjnwTKculAoZ7x2lyzYFY1c+R3CvRFHB
zvAXJX+PP5YfG9SnmEifD7UlpT7PC1t283ppnUaFyMgT7YfY3bFjp5yvxbyh
glGg8iGJcCcsXN7yUG0+FVi1xyNUZOyw7k3GjEvFVFCfP3LaLeESJvVbp0Gh
igpiR6p3Gp87i12pOPzUsp4KJ1XWcO6G01j+M0WrJ+1UQIscijGvdbFlLxn5
mn4q4HgZ08noI9hRE0Ey7Td9HtRYWwceDeyxElu5/DQVQvJyNKtOqmBdHGsh
l8hU0HvzgMYXtheTnFwwilyhwo2Khgc1nLLY5ZpRsSpmGqyvu3//xCWF5aX2
jlI4aCDp35HxfUAIW/JrfL9bgO6nZ+6dr+HBtM9X+lwQp4FYd+V953hW7NHB
Au3wnTR4IExzT2Ziwjp5szgr99KAyc4FYz+7TJCYe95NUqWB+94JqfvCZIJj
fWSqLEYDvtIdq8ZompD76p6zuQ4N0oMcV3MsRgl/g7xVH52igfSZIa3pkUGC
ttXVf+VnaUD21U+TY+kmPNK0qluwoEH2D2YGOfZWQqewSfQORxrYDyeLJD/7
SpCkHL9k5koD19YnY2n3EeFyq8auMC8a5F0/ZXaV9TMh792+hVJ/er9VjPtv
suQSlkK3l8yF0OCxa+a3tY+vCdoOQsEykTRYzAzUDIlJIXRK/BN+8IIGuKbb
svPBCILEMnG4+DUNTrpHG/zTfkJw7B57O5NLA9uEzlO8HdGEvxFNYFxJg4kk
T2+jx1Zl4gzJlyWGaTC1OALvpbXKpI0nhuT/0CB1wV6ob1WtbGfG/gtqRBq8
ClyfCr2oXLZXr9bgNOMiPO1wz+O9I11GiJrfHyizCIPFZCulGwxlFtLaq6M2
i/TXf0f4qm1FaYrWRNS734tgst2d9ehxlVKpwP0lmqN/oex48+5uElPJW3s+
1g81y0B4GjKSdcipyLrlwFBp0yrYvzpk8oW8pSAl6cVHiYJ/kBVMurQ1/nze
qRnT9556DFpu2NqjD3Za74aalnR3nWTUYg5xWb8iDq+Lho79CiIwaYntPnAR
mrjSdxTlasprM2uJBbBHxHcMPu+oqHx6W41Fa8uml95dTBFPR+6k9jPv2qS1
TP1486jZz4gHDKmjXfKbtYaqB+qjSFwP3Ap0ZkzEt2j9938HBY7ibTtY/3PD
hRduorJs/3mmpE+2WpD9P6f/VEn9JMbxn5NUVEXMuDj/MxWYbyusbXiEm5R+
goHrPwvyPqgTJG044tAO91O0DbNaItH7yxtezl50pjBx/+efx65s7eDfcJaP
vnHUwQ0ThjgG2G9tuHBzVrD2nQ3vUzym6Bu4YRlfP/8/YRveLDArXfdsw626
zQ73yzas7+rMVV654arYzUWUmv/n+YZxVvumDT+7nZut/XPD/OknTXx/b/hx
3cRK/viG/QWlT8nMb3hRs4xqTt6wm615StTihqdCKcfrVjZslxs1v76+4f8P
9fP3hQ==
       "]]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwUl3c8Vf8fx69rhJaIJAlFkUoqfOOc9yFFIrJlK4UiWZGUrJQ9QwghZO99
zJKdJBlZ15a95+/8/rqP5+P1er/e78/nfO69n8Nj/ETFhEwikeJoSKT/f9bp
8/Tv7u7iglVnb1ZFiki8PCGhYL+2i89ZDGl6m1yWEB9QK56e28X1wnd49+qK
SqQaeQX/GdzF/5twOkPXd1Ui4P6sbG7NLv7d60rLZf1rEnfNy7MevNnFHfS3
k7/vV5OYsdN2bT6wiy8UvVFjO20nweYbyPfh+A5+8aPWusf+Agn0cvVgPPMW
Lrm1h7o5SFKyzyEpXkVwA6cf21k5b/267HKIas5v3g08luZyr1GnWZlPJqla
9xjBMS+0ux+aSEqO3h18sG8DNxVp7Hn4wL0sUvUgt9PMOo51K3tSxZuVaZx3
iP6Us467eOA+4/7mZS3DN8OXrq7jhvPkL9ofwiT5d1c+O15ax0kneufXc4wk
nTkSCnfOEv5fjyPO3/aUFLqz00l/nMhrVkV/PQiUfFeRw3p8dw0n+XTFi4cG
Sd6IOBZ8vYZgf1VPoe0oyZi8+viG0jXchc7v5XPuFMnlVrscpbw1vPJOvTWz
RJxkAl3bD+1EggNN1wZ6EyXJtu5Mlm8IFkw2eueaJnnX/yL34iuivu149Pxu
mmR26t8LDg6EPvSmiYY1T9JwUFzJ1Yxg5VKGfKUiyYrb/3zDbhH9UWZ+i+Jy
yfVHT5Ucr63hGBNFo/lfmeTlt8tMuhKEvnJJRMq6UjK1ZjuY5yxRL5f7LJ6n
VnJk4LU6zUmCV1uSzKq+SnLv0B4Z4yD6409wPr9vkqHiByLTGAk+E+qYs9Qo
yWjDdtx6YxWv/OR7IepYm6RLOles2CTBrSL3IrZ/SK6M8Z/c/rOKu4RINaQY
/JJ8zHshqfr7Ko5NbeVo03ZJDumKCXgVr+IkgceN9mW9klrvIU0xhdBPDRRV
ug1ItvyQvcASQfDv6JaS5mHJa/uUc7q8CBb8lDGrMir5UqDDptSF6PdyLco0
dlyy6IbWlRgHgv3Skhw0JyUX7/WuuFgRfg/jrvGqacnzrw2L7pkS8zzKlp6R
mZE0i6E43jBcxQemKrc2X8xJJpSaSghoEfzAQhbPmJfkWLGqmJEl5qtJPnKz
YElSnWX51Q8gOJmUPyO9Ihkg7CiVJ/b//s7itm2rko2K2+T3FwjOIs1y/lmX
pHv0utbxNNHvS93a/e+bklJetJ66J4h5rpcbjLdtS75IfCsLR4g8g2A758Mk
pKB6PwPvQaJe5Oiahy4VMt8f2ECzZxU3bJRu31NCRoS2WX2IrwJeiYZlRQrR
IA84IhUbVlZwklPXsloJLRInxnUwfWYFx/gEptSl9yC9avFt/qME+38oLb7M
gByx5g+y/ksw3u/3bIURUfFPVVXvJPIaCtP79uxHfNPOs4q3ELpqYSWLxEGk
/ntOJ8fXFdzlepvSryYmhHpMNHy7fAXnfnJJNfcYM4LSlGoP5BP6Psm4ElcW
xIEHjtWkE8w5nm1MYkVy0ZrexESCq2x9il3ZkBkd2RivaIJTD3Tfk2ZHzjg2
GjwKJfpxKzn17+dAYnJ/Dgl7EHz3u1kEDxfyp00zgcV5BTd0v+LKdJ4bOTzT
Y7JiS9TLbzvPmvAgSnsNT/95TKxfgL9SO58XeXeGMl56fwUfGNB/84zrFFJ3
3TQ1RpfIG0lcbYjmQ0j3ph+9ViN4LfZ7zZXTiF300swNGWL9e+Vk97YIIvxv
vZXzJIk8NSGOO6lCSKctbw7PFaKf1ST14djzyBvDYhb/c4TfxyPPS18YEVdQ
ttviW8Fjn5cYJ726iIyLjXWacRF+raK63/kiSMTJl+K/2Qi/d3WMwNYlZGPj
y2b2HiL/0xWB462iyJdRab0TJMK/aPAv3lAc0W3/U+Gztoxj7gWiMfuuIvsq
rLg35pbxyhE/tic/JZDylD2uDycItrr78Uw+gliGxgx3DC7jLisNF36WAcL1
+sp16e5lnCQ1zJG5gCEuWvfojzcu44ZW8jL7VK4hF2U2zN7VELpy8/sDsTLI
0IXAxtVSov7ka7UKmhtI0LEz50zyiHy8sULxtSxybQ/u155G+Bf8q1TYbyJL
C+pzkEjwcy27yHp5JOHv9J30aGLelIQK31AFhK6Ag9XLj6jP/h6beF0ZKYzL
tl/2JJhXjZSrewcx9ZXrMn61jMeKcFzU91RB2B37/2t7towPDFtpiNWoIt/v
239ArIh5FrvrdQ6rI8+V92+nmhL9bjxRSXLSQAQlE/TZjQieV6z33tBEfFja
eRbvEMy73yL+ug6C7Jq6GcoT/cxg+hGLHjIzuUtpliZ4z++PziQDJKYz7IaE
BDGvLu+mv6cholR9Ljn5EsEv9c9oRxshpIxaBjah/+9fzeKnr8ZIVoTOI7dT
xHwlqQfVqe8jzE/fntdnJfICVaMsSh4gNbrcAY37CXb5SFcpZorYyhXOi9MR
PMtfTttihpy6fFs1aWcJr1xRrqt1foT8OjGSx7K6hJPqvpGcb1ognntfsL2e
JVjBgm/h4hNEdJXZYWZsCR9oPbNzNtoKCW/BJL53EWzIJrDw2xq5WfI7SvQH
4RdiGm1lskU2Ei13Pn0n9BM3T7/Ts0NSA2kND1Uv4bFfVi31cHtExzmq6mUJ
0Z/3S+JnMQdkn9mlk9M5Szh2y3TI8psjUqbW4K79heBrNrU9Vk4Il9Ca7OUo
guc1KnhYXyGtR/xT4kKIfo43v3e+dUFcqPn3HvQluH/12L6I14jwbNnjFx5E
fsEii32xKzLYrdoy4byEG/qo2SRNuSFBXycvaNoT+ub91QMXPRDpnNeBtZYE
z2bb9L7zRBLeZqp9NCDyPthbiLu8RcSfHTc11yTYRNzzhrQ30nTf2+mKEuFP
1mQt5/VFDFXW/UiyBPuGTL056Y8swcP4RpRYr8f6/MNPAYjXuV/5YaJLOLfJ
w1GVb4EI57Fr343OE/rmcZP2nSBEZoVrbvU4kf8cM4tKD0W6hn2oa1gJ/qTD
WHb6PfL4xwab337Cf+ehPE1pOELCTQW1aYn9kC5z22sWiYSkdSKnthfxyo9r
/CGXopAzkTJ3ZpcWcZcXPbIOnDFI2Zuc+yXTi3isauLdTuZYZMTYz1u5dxHH
xH45tSrHE+d5K+ZYB+Fv+Fhv4vMJOYCa54w2En6hDovC3gQk/mxXXXbNIm4Y
oCN/4loSInr0xp8XpYS+5ee1VfkZaaDLm5bNJThgp61JMwXRX+IhsXwh5rE9
qXKW4Qvi2brNnxK5iJMebiyaVGcgHOWPrtoGEf2pSr5tPchCMlL/KMI7It/H
vhB3zkakw2WNGF2JeTK4pIKScpBOj3zbX46L+EDBhSG/oVzE3OakV+xToj5s
RW5BJB/ZMQz88MiM8L9JGCdFFCD8khbVVNqEv+Tl8/QvxUiJQM+vJmVinlDq
j5hOKXL7yM2J93IE65QG2fKXI0M0hVvGGMEvWmOpD+KI/cIppvPiRF7Zt5N6
3pUI40DQyfULxPxGHfnfPlYhMc0ksdrThG6AStfVVSPfknv17h4h6j+nPJ+Q
r0N0w+Sf8h1cxLlXj+21TPuKzLkVuc/R/X8/YsblT9Uj7k/5w0t3FnCX5FC9
7tzvCLtByBfPlQWcRDrzLUi3EUlTION3ZgjOyNak4m5GsKtW7ZyjBOscVa7e
bUFMWRXWc34t4IaV3x8m+f5Atsgl+142L+CVnLT4o/R2JGDuNPfNOiL/tCb7
yf6fyKm/oZcOlxO6ffLk4MlfSFEjtWx/HlGvPne3+UUnolD89G5q2gLObbcb
wj31GxlI6rewSyD8jIu7PFZ/EHrX0pC9IYQ/NDQLr+lFop4IJHd6E/k2E0pq
oX8RYb33pXFuhH7tUcdXqQGkVp629bETMW/sGAeT3CCiJW4zJGZD5B/73WCh
P4RM8w0ukx8RurWz4S+PYcSFRYmhxZjI2/TllMcpSMqMoPB9FYIl7qdkPR5D
XB9Ih6jLL+AYh8LQXM84ovtXe+2GNDHfglXoQaNJ5ECLV6WACJF/2+4nfc4/
ZOx67KljgoTfdishzmUWqSwv9NrHu4DHNgt/vpU/h1injyrPHiL6v7ZUdGpc
QG7x7eQNMBCcViF0f2YRORXNerSdiqgfyNC7z7uMdPrIDObNz+OVF/lyoqtW
kUwa3etJE/M4d7/R8cXz64jXC5uU94PzuIvl16aI7A3k6uP4p89/EHp6niW+
uY2wUIp/Pfo+j5NOUSd11+0i0zo//tOrIvLeSFtK/SKhMbdIZCx7Ho/9sTJe
RSGjz2qOPLiYMo8bhuc5e1PToMoSFxp444j63zO9nSK0KPVZ/SDaQEKPeKOc
/nUP2htvt7LiNY9jN5SXr5xjQAs4fO+OuxAs/JUXSWZETRnLeButiH5XB/L0
B/ajUq4/PctMiX4ec2PTHw+iHBuTk+mGBMemKz0tY0KbJo7mBigT/RoTl9Qr
mNFEo4tHXOWIfiasyVK/WNCXf+ScbDBCT65dGNk8jAp/f3ZNQ/j/67vz8YfT
EZRByv+z7Bmi38x60UInOzpUlLT3P+55fOCMh83r6xxoaPKvn8eYCF04fFXA
6Dhqyf1PbD89sX89K4FeTCdQuXCaqJ3dOdywm3959hE3uvHm0v3B2Tk89vrG
zm9tXvTnrnx9+9gcjk141T0zOYmmPTMWqu2fwwfM2tJ7Xp1C9R8GLiW1zuEk
w8v9Jyj8qFh/slb4NyKvl/F5zoUzKJNmZdlbnPBnVQ9Y+gqg1Tdm3R9nEnnp
C7tybkLohwq6Cb3Pc8T9k9XN4fh51FaUS1HpI6FTtr6sNF9AT/Mrsor4z+FZ
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
esilXvYRfbHPYtk8exdkwsrM9RVjUF39fOM7lbvQzZu0XRjzAVV4ox1R+41Y
L9OdzSK9SFQya7tVrHUXNlQuG9QLRqCc5BsI199d8JL/cqh0Ogzdd3bSJnBk
F6Rp/ua+HghFt1T9Umn+7YKos9Es50AI2pvYeWRqcxe2Vw8Md5CC0QcPkdOZ
VCSM/3OYFIknCP3r5F9tSkvC3FwreY7fCkRbEi6t9+wjYTQ/06vW7f3RG8Ue
IaFMJEwwqffPKJUfWtH8+4LSYRLWI6Oz5R7tg2asOD2oPkbC4nTS+beo36H8
e1uoXpwgYZ+9B4qdmr3QmBPc0VdOkrDBf9NdawlvUD+52p/JgiQs1nyg2N3J
A6XTY3tifJ6EHVYa+/vE0R19+dSUkVOEhJ16JfqLyc0NtYzcJ+X/HwnLP80e
YlH4Gh3N0O+VQ0gY1b5k30uDLqh+TdYzshQJs60dUag57IIqTqtl2MkReSFi
ONsFZ7TjVamViwIJ+0N5GW2T4YTeZeG95K1MwljllPg3sefog6uzhbFaJGzJ
zLN15MMzdLpZ/fkXXRKmdcXILtDYHrUxKpMsMCRhGVNcw6vidqiL19uqRlMS
tm7i0jJ/yAal45xz63xMwmpsa9aOslijPpkaNwatSNhI3qgdH89TNKLzZOOK
AwlLMPE58LPaEuU2f+dL5UzCNv7FPJs+ZYEmbc8p7XtNwvxC6wqORT1Cc05V
dPC8JWE2se7xcXWmqHjRqfdCviTs+OFtfkb7h2jFLW9tsUASlnzHmOWL2AO0
0Vrrr0IECWM/WjFzZeoeqkKHx2pGk7DJgKn7b3uM0a4IvnvGcSSs+XKd4dgf
I5RSuTD2LIWEvRwSr1jfNEDN1bRTXdNJGH1K5sVmGX10bgx/7JtNwqRjtTde
JOii2wd85+OLSRh+5WM15ZM26h6/mJteTsK6nr5zcpTSQhlF79oXVZGwjhi6
zPh5DZRN7/Rm83cS1sj4q3jNQw2NmvMt72omYUcE+L+YmKqivO5Lr4Z/kDD1
2FaRUW0V9MKXKpr1PySMkblFie2hMlqAnvlG/ZeEdVIv92eSlVDJdr+3B4ZI
WID7QkqskiIqt65z4NQkcR5lM0Taz8mjLT7VbednSJiw4qPJ8jI5VJ1bIPi/
BRL278vppEcGsqix7MoRpQ0SJhV66AapVwYd79bt1t4hYU/WZ3dIeddQS8ua
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
dIh+09b99Wo69X+eKLgN
       "]]}, 
     {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
b3RVC+hj/g9XQvkJ
       "]]}, 
     {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVV3c41u8XtvceJWUmZVQ2Gc95jKxUEkJIyKqQSpQkJMn8JklCVpKSkYzy
ochIGfEaIXtn7/l7f3+9133dZ97nnOe9PiL2HiaXqCgoKAyoKSj+/1ttK/J3
Z2eHsJupuj6w9BP5C6kZea/uEH1tYwUr138hlT7TkqnZHaJiiM2MbvEXyr4Y
+qSzn8xrLX09vN6Ioh1n9Aq+7RABNPEfy9mbkcEBxo8Sn8n862OR/OeaEdWI
qGhK4Q7R9LUi8L/kZnTT2XwzPIOc73TA/VH5FmTl9uWD08MdwnOJ5Jjk9htx
S7UL9NzbIYzvPtU7W/YbNUzOhp312SFmbb6Y6LG2Irgqdgm77hAf1GRidgpb
kZjn4z38J8j2cxocyjwkNH3TMvAnG9n+btaJw7s60Wul6zPa9OR8T2qMD93t
RHYr4dalO9sExzA/y8fhTvTbp0Lp9ew2Yewq/SuhrAsV3zk4GdCyTcjs1t7R
uNONrqlrWqzUbxPCTej9lZluJLllVX312zaRQqN80+ZSD3rpH5lsVbhNNNm0
MyWb96LA+0tnFeK2idlbFwveHexDalrsldmRZPt2uzcSrn1okUriiMjDbSIg
hiny1ds+5BxszcDms0307bb1fCLfj4wefvs8akn272KwHjk9gHZFxBx4IUCu
7+4zk6wvQyj/dKCOB+82YeekSSrYPYxOc1130GbdJj5EsgzKXh9Goc9MX01u
bhEy69psiUdG0Mar3QLq3VtE05FPlvWfRlG8I4M6R+sWQUG7fIJZcAwpHFyz
GvqxRXBYmTb8ezCG3HO64sPLtogP1iFRH6zGUV/RS56ehC0iui+2oJ9vEvn5
Rsrn/UeOV6fEPRg+ifao3zN5EEbGLZaBpVRTyKTSLvrw7S0iQFYwmn5xClX/
2M/ib7lFzJpF/x38N42y+95QC/FtERUPxIdTU+eQblqC6AL7FmFcP/GK698c
Grz0WLOGnhxP7vfptyrzaN/klXseK5tExXOTPpff8yhq6egGQdokZF5cqY/Z
vYiki4X5Y39tEgEJnSnVlxdR7W3OYy7fN4kUgrlEt3IRUVEseHMUkf11I6l1
PJfQDaaiebunm8SHBqWlj73LiONnJqdiBBlHddv0aqygd1HPZBgfkO1tF5z9
klbQCI+ve96NTUJY51fXEcdVZCmkPkFpuklE20X9R0+1jpDC1/5ULnL+v+xa
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
       "]]}}, InsetBox[
     TemplateBox[{
      "0.010000000000000002`","0.05`",FractionBox["1", "10"],FractionBox[
       "1", "5"],FractionBox["1", 
        RowBox[{"2", " ", 
          SqrtBox["3"]}]],FractionBox["1", "2"]},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               StyleBox["\"\[Sigma]=\"", {
                 GrayLevel[0], FontWeight -> Bold, FontSize -> 8, FontFamily -> 
                 "Arial"}, Background -> Automatic, StripOnInput -> False]}, {
              
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #6}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Center}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontWeight -> Bold, FontSize -> 8, FontFamily -> 
          "Arial"}, Background -> Automatic, StripOnInput -> False], 
        TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False], ",", 
                 "Bold", ",", "8"}], "}"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", "\"\[Sigma]=\""}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.75, 0.55}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"\[Mu] (pushing location)\"", TraditionalForm], 
     FormBox["\"Torque\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Epilog->{
     LineBox[
      NCache[{{
         Rational[2, 3], 0}, {
         Rational[2, 3], 1}}, {{0.6666666666666666, 0}, {
        0.6666666666666666, 1}}]]},
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
   PlotRange->{All, All},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
eNiMft0v3PbUGMbqKu7/AKms3JU=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1:eJxN2nk8VO8bP35bZcu+Z60USRRJzDmXlFCSkLTYlyKJsiUJSVSWkKUQoqSE
IllvIcm+b1FkzT6rbPnN5/v7Pt6+88e8Hs+57nPPNdecmTN/jIztdWMHJgYG
BhX63f/yq6XMr/X1dcTwf2/+UpoGXn83rD5kWjyzsOFsm9CYvuENR9nP636s
3vAF5/I8xwcbnvM8H9TEtWGh8CeyzyX+/WdctWo4nW8VtT2O3mkrx8s66PMq
3XjPMrLFLqpK7brAXWE4Gx538i/KuLr9Ka2KQcgzmTJ3/BgN/XEaJtzkeC2e
EZZr+sKKghpdL5/Y32m2/c3cHmV7YxJaGh5NdRma370wyqpWbriAyhklgutu
9e69RFQN9Psxg56x2hswc08p32fvCzxXN4nC0Ljinbhq1STL0UdBy6Oojs1U
c16/89ChroKpLhhGMWoK4dR2M401X05nliv9KOiV8+uGi44EIa1sg1b9fhSg
9HK8OlKjTHmTnlKSQj9ikAws2KxtV2YfeY+iMt+HeMxU5ZhuGZXVv1z2t/Pq
Qwx/JQ93jegSEhonY6qCexHDy4aV/UsRhA9PQrwiHHuRlkEUp6VmIqHRbOf5
C3q9KECC05h/fzJhfchKksTRiyrjtxdaHn5LEHm1xlAx24NSGbmo1yfyCQeu
Ph8Ja+lBWqevGFgkFhEMlA/Xns2nW7hg9UctIjhSu7NkYnpQQFkS+mhcQwgo
8Xg069GDGDRullg9aSA8u8vnWmzWg4bSQifDGNsJBcfyjO6r09crvle+3NVD
aGIzVDkjRt8vzJzt+8FfhPHmaUGJ1W4UMG55rvP5KIEhNuzv5GA3qowte9Aq
P00QO7/7RwGi10mH9cS7iQRVya/lAWndiKFr7jDBfpFgOGKbanCvG2l9azFP
yv5HuJLFcE/EgX68U5mrxRYWLOhaisPocXpdykm9Q4Ude36AoJcn142so0J4
qMK8WMFi3x4/dvr6Z9f26x4VwprLvLfqzXQhrWcivUGr4thkoOACf3MXkrbl
t4zt2o4x6X5s/5VLr2/S43niLoeJc54pfPuE7l3j6fvylDC1trl475tdKOCW
rjx7kCpmFPfY9+hZej0gz/nUPQ3M6eIeC+5DXahyuffoOckjWJB0HfwQ6UJD
1qwefnzHsaQxh+2vlztRZV+/9RcXA+xTNvOmmwOdSHqg0z1A1xhrvZ42gVd0
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
9fP3hQ==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1:eJwUl3c8Vf8fx69rhJaIJAlFkUoqfOOc9yFFIrJlK4UiWZGUrJQ9QwghZO99
zJKdJBlZ15a95+/8/rqP5+P1er/e78/nfO69n8Nj/ETFhEwikeJoSKT/f9bp
8/Tv7u7iglVnb1ZFiki8PCGhYL+2i89ZDGl6m1yWEB9QK56e28X1wnd49+qK
SqQaeQX/GdzF/5twOkPXd1Ui4P6sbG7NLv7d60rLZf1rEnfNy7MevNnFHfS3
k7/vV5OYsdN2bT6wiy8UvVFjO20nweYbyPfh+A5+8aPWusf+Agn0cvVgPPMW
Lrm1h7o5SFKyzyEpXkVwA6cf21k5b/267HKIas5v3g08luZyr1GnWZlPJqla
9xjBMS+0ux+aSEqO3h18sG8DNxVp7Hn4wL0sUvUgt9PMOo51K3tSxZuVaZx3
iP6Us467eOA+4/7mZS3DN8OXrq7jhvPkL9ofwiT5d1c+O15ax0kneufXc4wk
nTkSCnfOEv5fjyPO3/aUFLqz00l/nMhrVkV/PQiUfFeRw3p8dw0n+XTFi4cG
Sd6IOBZ8vYZgf1VPoe0oyZi8+viG0jXchc7v5XPuFMnlVrscpbw1vPJOvTWz
RJxkAl3bD+1EggNN1wZ6EyXJtu5Mlm8IFkw2eueaJnnX/yL34iuivu149Pxu
mmR26t8LDg6EPvSmiYY1T9JwUFzJ1Yxg5VKGfKUiyYrb/3zDbhH9UWZ+i+Jy
yfVHT5Ucr63hGBNFo/lfmeTlt8tMuhKEvnJJRMq6UjK1ZjuY5yxRL5f7LJ6n
VnJk4LU6zUmCV1uSzKq+SnLv0B4Z4yD6409wPr9vkqHiByLTGAk+E+qYs9Qo
yWjDdtx6YxWv/OR7IepYm6RLOles2CTBrSL3IrZ/SK6M8Z/c/rOKu4RINaQY
/JJ8zHshqfr7Ko5NbeVo03ZJDumKCXgVr+IkgceN9mW9klrvIU0xhdBPDRRV
ug1ItvyQvcASQfDv6JaS5mHJa/uUc7q8CBb8lDGrMir5UqDDptSF6PdyLco0
dlyy6IbWlRgHgv3Skhw0JyUX7/WuuFgRfg/jrvGqacnzrw2L7pkS8zzKlp6R
mZE0i6E43jBcxQemKrc2X8xJJpSaSghoEfzAQhbPmJfkWLGqmJEl5qtJPnKz
YElSnWX51Q8gOJmUPyO9Ihkg7CiVJ/b//s7itm2rko2K2+T3FwjOIs1y/lmX
pHv0utbxNNHvS93a/e+bklJetJ66J4h5rpcbjLdtS75IfCsLR4g8g2A758Mk
pKB6PwPvQaJe5Oiahy4VMt8f2ECzZxU3bJRu31NCRoS2WX2IrwJeiYZlRQrR
IA84IhUbVlZwklPXsloJLRInxnUwfWYFx/gEptSl9yC9avFt/qME+38oLb7M
gByx5g+y/ksw3u/3bIURUfFPVVXvJPIaCtP79uxHfNPOs4q3ELpqYSWLxEGk
/ntOJ8fXFdzlepvSryYmhHpMNHy7fAXnfnJJNfcYM4LSlGoP5BP6Psm4ElcW
xIEHjtWkE8w5nm1MYkVy0ZrexESCq2x9il3ZkBkd2RivaIJTD3Tfk2ZHzjg2
GjwKJfpxKzn17+dAYnJ/Dgl7EHz3u1kEDxfyp00zgcV5BTd0v+LKdJ4bOTzT
Y7JiS9TLbzvPmvAgSnsNT/95TKxfgL9SO58XeXeGMl56fwUfGNB/84zrFFJ3
3TQ1RpfIG0lcbYjmQ0j3ph+9ViN4LfZ7zZXTiF300swNGWL9e+Vk97YIIvxv
vZXzJIk8NSGOO6lCSKctbw7PFaKf1ST14djzyBvDYhb/c4TfxyPPS18YEVdQ
ttviW8Fjn5cYJ726iIyLjXWacRF+raK63/kiSMTJl+K/2Qi/d3WMwNYlZGPj
y2b2HiL/0xWB462iyJdRab0TJMK/aPAv3lAc0W3/U+Gztoxj7gWiMfuuIvsq
rLg35pbxyhE/tic/JZDylD2uDycItrr78Uw+gliGxgx3DC7jLisNF36WAcL1
+sp16e5lnCQ1zJG5gCEuWvfojzcu44ZW8jL7VK4hF2U2zN7VELpy8/sDsTLI
0IXAxtVSov7ka7UKmhtI0LEz50zyiHy8sULxtSxybQ/u155G+Bf8q1TYbyJL
C+pzkEjwcy27yHp5JOHv9J30aGLelIQK31AFhK6Ag9XLj6jP/h6beF0ZKYzL
tl/2JJhXjZSrewcx9ZXrMn61jMeKcFzU91RB2B37/2t7towPDFtpiNWoIt/v
239ArIh5FrvrdQ6rI8+V92+nmhL9bjxRSXLSQAQlE/TZjQieV6z33tBEfFja
eRbvEMy73yL+ug6C7Jq6GcoT/cxg+hGLHjIzuUtpliZ4z++PziQDJKYz7IaE
BDGvLu+mv6cholR9Ljn5EsEv9c9oRxshpIxaBjah/+9fzeKnr8ZIVoTOI7dT
xHwlqQfVqe8jzE/fntdnJfICVaMsSh4gNbrcAY37CXb5SFcpZorYyhXOi9MR
PMtfTttihpy6fFs1aWcJr1xRrqt1foT8OjGSx7K6hJPqvpGcb1ognntfsL2e
JVjBgm/h4hNEdJXZYWZsCR9oPbNzNtoKCW/BJL53EWzIJrDw2xq5WfI7SvQH
4RdiGm1lskU2Ei13Pn0n9BM3T7/Ts0NSA2kND1Uv4bFfVi31cHtExzmq6mUJ
0Z/3S+JnMQdkn9mlk9M5Szh2y3TI8psjUqbW4K79heBrNrU9Vk4Il9Ca7OUo
guc1KnhYXyGtR/xT4kKIfo43v3e+dUFcqPn3HvQluH/12L6I14jwbNnjFx5E
fsEii32xKzLYrdoy4byEG/qo2SRNuSFBXycvaNoT+ub91QMXPRDpnNeBtZYE
z2bb9L7zRBLeZqp9NCDyPthbiLu8RcSfHTc11yTYRNzzhrQ30nTf2+mKEuFP
1mQt5/VFDFXW/UiyBPuGTL056Y8swcP4RpRYr8f6/MNPAYjXuV/5YaJLOLfJ
w1GVb4EI57Fr343OE/rmcZP2nSBEZoVrbvU4kf8cM4tKD0W6hn2oa1gJ/qTD
WHb6PfL4xwab337Cf+ehPE1pOELCTQW1aYn9kC5z22sWiYSkdSKnthfxyo9r
/CGXopAzkTJ3ZpcWcZcXPbIOnDFI2Zuc+yXTi3isauLdTuZYZMTYz1u5dxHH
xH45tSrHE+d5K+ZYB+Fv+Fhv4vMJOYCa54w2En6hDovC3gQk/mxXXXbNIm4Y
oCN/4loSInr0xp8XpYS+5ee1VfkZaaDLm5bNJThgp61JMwXRX+IhsXwh5rE9
qXKW4Qvi2brNnxK5iJMebiyaVGcgHOWPrtoGEf2pSr5tPchCMlL/KMI7It/H
vhB3zkakw2WNGF2JeTK4pIKScpBOj3zbX46L+EDBhSG/oVzE3OakV+xToj5s
RW5BJB/ZMQz88MiM8L9JGCdFFCD8khbVVNqEv+Tl8/QvxUiJQM+vJmVinlDq
j5hOKXL7yM2J93IE65QG2fKXI0M0hVvGGMEvWmOpD+KI/cIppvPiRF7Zt5N6
3pUI40DQyfULxPxGHfnfPlYhMc0ksdrThG6AStfVVSPfknv17h4h6j+nPJ+Q
r0N0w+Sf8h1cxLlXj+21TPuKzLkVuc/R/X8/YsblT9Uj7k/5w0t3FnCX5FC9
7tzvCLtByBfPlQWcRDrzLUi3EUlTION3ZgjOyNak4m5GsKtW7ZyjBOscVa7e
bUFMWRXWc34t4IaV3x8m+f5Atsgl+142L+CVnLT4o/R2JGDuNPfNOiL/tCb7
yf6fyKm/oZcOlxO6ffLk4MlfSFEjtWx/HlGvPne3+UUnolD89G5q2gLObbcb
wj31GxlI6rewSyD8jIu7PFZ/EHrX0pC9IYQ/NDQLr+lFop4IJHd6E/k2E0pq
oX8RYb33pXFuhH7tUcdXqQGkVp629bETMW/sGAeT3CCiJW4zJGZD5B/73WCh
P4RM8w0ukx8RurWz4S+PYcSFRYmhxZjI2/TllMcpSMqMoPB9FYIl7qdkPR5D
XB9Ih6jLL+AYh8LQXM84ovtXe+2GNDHfglXoQaNJ5ECLV6WACJF/2+4nfc4/
ZOx67KljgoTfdishzmUWqSwv9NrHu4DHNgt/vpU/h1injyrPHiL6v7ZUdGpc
QG7x7eQNMBCcViF0f2YRORXNerSdiqgfyNC7z7uMdPrIDObNz+OVF/lyoqtW
kUwa3etJE/M4d7/R8cXz64jXC5uU94PzuIvl16aI7A3k6uP4p89/EHp6niW+
uY2wUIp/Pfo+j5NOUSd11+0i0zo//tOrIvLeSFtK/SKhMbdIZCx7Ho/9sTJe
RSGjz2qOPLiYMo8bhuc5e1PToMoSFxp444j63zO9nSK0KPVZ/SDaQEKPeKOc
/nUP2htvt7LiNY9jN5SXr5xjQAs4fO+OuxAs/JUXSWZETRnLeButiH5XB/L0
B/ajUq4/PctMiX4ec2PTHw+iHBuTk+mGBMemKz0tY0KbJo7mBigT/RoTl9Qr
mNFEo4tHXOWIfiasyVK/WNCXf+ScbDBCT65dGNk8jAp/f3ZNQ/j/67vz8YfT
EZRByv+z7Bmi38x60UInOzpUlLT3P+55fOCMh83r6xxoaPKvn8eYCF04fFXA
6Dhqyf1PbD89sX89K4FeTCdQuXCaqJ3dOdywm3959hE3uvHm0v3B2Tk89vrG
zm9tXvTnrnx9+9gcjk141T0zOYmmPTMWqu2fwwfM2tJ7Xp1C9R8GLiW1zuEk
w8v9Jyj8qFh/slb4NyKvl/F5zoUzKJNmZdlbnPBnVQ9Y+gqg1Tdm3R9nEnnp
C7tybkLohwq6Cb3Pc8T9k9XN4fh51FaUS1HpI6FTtr6sNF9AT/Mrsor4z+FZ
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
esilXvYRfbHPYtk8exdkwsrM9RVjUF39fOM7lbvQzZu0XRjzAVV4ox1R+41Y
L9OdzSK9SFQya7tVrHUXNlQuG9QLRqCc5BsI199d8JL/cqh0Ogzdd3bSJnBk
F6Rp/ua+HghFt1T9Umn+7YKos9Es50AI2pvYeWRqcxe2Vw8Md5CC0QcPkdOZ
VCSM/3OYFIknCP3r5F9tSkvC3FwreY7fCkRbEi6t9+wjYTQ/06vW7f3RG8Ue
IaFMJEwwqffPKJUfWtH8+4LSYRLWI6Oz5R7tg2asOD2oPkbC4nTS+beo36H8
e1uoXpwgYZ+9B4qdmr3QmBPc0VdOkrDBf9NdawlvUD+52p/JgiQs1nyg2N3J
A6XTY3tifJ6EHVYa+/vE0R19+dSUkVOEhJ16JfqLyc0NtYzcJ+X/HwnLP80e
YlH4Gh3N0O+VQ0gY1b5k30uDLqh+TdYzshQJs60dUag57IIqTqtl2MkReSFi
ONsFZ7TjVamViwIJ+0N5GW2T4YTeZeG95K1MwljllPg3sefog6uzhbFaJGzJ
zLN15MMzdLpZ/fkXXRKmdcXILtDYHrUxKpMsMCRhGVNcw6vidqiL19uqRlMS
tm7i0jJ/yAal45xz63xMwmpsa9aOslijPpkaNwatSNhI3qgdH89TNKLzZOOK
AwlLMPE58LPaEuU2f+dL5UzCNv7FPJs+ZYEmbc8p7XtNwvxC6wqORT1Cc05V
dPC8JWE2se7xcXWmqHjRqfdCviTs+OFtfkb7h2jFLW9tsUASlnzHmOWL2AO0
0Vrrr0IECWM/WjFzZeoeqkKHx2pGk7DJgKn7b3uM0a4IvnvGcSSs+XKd4dgf
I5RSuTD2LIWEvRwSr1jfNEDN1bRTXdNJGH1K5sVmGX10bgx/7JtNwqRjtTde
JOii2wd85+OLSRh+5WM15ZM26h6/mJteTsK6nr5zcpTSQhlF79oXVZGwjhi6
zPh5DZRN7/Rm83cS1sj4q3jNQw2NmvMt72omYUcE+L+YmKqivO5Lr4Z/kDD1
2FaRUW0V9MKXKpr1PySMkblFie2hMlqAnvlG/ZeEdVIv92eSlVDJdr+3B4ZI
WID7QkqskiIqt65z4NQkcR5lM0Taz8mjLT7VbednSJiw4qPJ8jI5VJ1bIPi/
BRL278vppEcGsqix7MoRpQ0SJhV66AapVwYd79bt1t4hYU/WZ3dIeddQS8ua
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
dIh+09b99Wo69X+eKLgN
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
b3RVC+hj/g9XQvkJ
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1:eJwVV3c41u8XtvceJWUmZVQ2Gc95jKxUEkJIyKqQSpQkJMn8JklCVpKSkYzy
ochIGfEaIXtn7/l7f3+9133dZ97nnOe9PiL2HiaXqCgoKAyoKSj+/1ttK/J3
Z2eHsJupuj6w9BP5C6kZea/uEH1tYwUr138hlT7TkqnZHaJiiM2MbvEXyr4Y
+qSzn8xrLX09vN6Ioh1n9Aq+7RABNPEfy9mbkcEBxo8Sn8n862OR/OeaEdWI
qGhK4Q7R9LUi8L/kZnTT2XwzPIOc73TA/VH5FmTl9uWD08MdwnOJ5Jjk9htx
S7UL9NzbIYzvPtU7W/YbNUzOhp312SFmbb6Y6LG2Irgqdgm77hAf1GRidgpb
kZjn4z38J8j2cxocyjwkNH3TMvAnG9n+btaJw7s60Wul6zPa9OR8T2qMD93t
RHYr4dalO9sExzA/y8fhTvTbp0Lp9ew2Yewq/SuhrAsV3zk4GdCyTcjs1t7R
uNONrqlrWqzUbxPCTej9lZluJLllVX312zaRQqN80+ZSD3rpH5lsVbhNNNm0
MyWb96LA+0tnFeK2idlbFwveHexDalrsldmRZPt2uzcSrn1okUriiMjDbSIg
hiny1ds+5BxszcDms0307bb1fCLfj4wefvs8akn272KwHjk9gHZFxBx4IUCu
7+4zk6wvQyj/dKCOB+82YeekSSrYPYxOc1130GbdJj5EsgzKXh9Goc9MX01u
bhEy69psiUdG0Mar3QLq3VtE05FPlvWfRlG8I4M6R+sWQUG7fIJZcAwpHFyz
GvqxRXBYmTb8ezCG3HO64sPLtogP1iFRH6zGUV/RS56ehC0iui+2oJ9vEvn5
Rsrn/UeOV6fEPRg+ifao3zN5EEbGLZaBpVRTyKTSLvrw7S0iQFYwmn5xClX/
2M/ib7lFzJpF/x38N42y+95QC/FtERUPxIdTU+eQblqC6AL7FmFcP/GK698c
Grz0WLOGnhxP7vfptyrzaN/klXseK5tExXOTPpff8yhq6egGQdokZF5cqY/Z
vYiki4X5Y39tEgEJnSnVlxdR7W3OYy7fN4kUgrlEt3IRUVEseHMUkf11I6l1
PJfQDaaiebunm8SHBqWlj73LiONnJqdiBBlHddv0aqygd1HPZBgfkO1tF5z9
klbQCI+ve96NTUJY51fXEcdVZCmkPkFpuklE20X9R0+1jpDC1/5ULnL+v+xa
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
         "]]}}}, {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, 
      AxesLabel -> {"\[Mu] (pushing location)", "Torque"}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, Epilog -> {
        Line[{{
           Rational[2, 3], 0}, {
           Rational[2, 3], 1}}]}, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
      PlotRange -> {All, All}, PlotRangeClipping -> True, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]]}, {0.010000000000000002`, 0.05, 
        Rational[1, 10], 
        Rational[1, 5], Rational[1, 2] 3^Rational[-1, 2], 
        Rational[1, 2]}, LabelStyle -> {
         GrayLevel[0], Bold, 8}, LegendLabel -> "\[Sigma]=", LegendLayout -> 
       "Column"]], {0.75, 0.55}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.684540636301993*^9, 3.684540647763238*^9}, 
   3.684540677807744*^9, {3.6846344349702787`*^9, 3.684634461850379*^9}, 
   3.6846346558660507`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Export", "::", "nodir"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Directory \[NoBreak]\\!\\(\\\"/Users/pictures/pdf/\\\"\\)\
\[NoBreak] does not exist. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/Export\\\", ButtonNote -> \
\\\"Export::nodir\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634655956374*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Export", "::", "noopen"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot open \
\[NoBreak]\\!\\(\\\"../pictures/pdf/TorqueNormal.pdf\\\"\\)\[NoBreak]. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/noopen\\\", \
ButtonNote -> \\\"Export::noopen\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634656009098*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sigs", " ", "=", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.1", ",", "0.5", ",", "1", ",", "2", ",", 
       RowBox[{"5", "/", 
        RowBox[{"\[Sqrt]", "3"}]}], ",", "5"}], "}"}], "/", "10"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"TODO", ":", " ", 
    RowBox[{
    "place", " ", "legend", " ", "inside", " ", "the", " ", "plot"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"TorquePivotTriATB", "[", 
       RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "sigs"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", 
     RowBox[{"-", "1"}], ",", "4"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "sigs"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Mu] (pushing location)\>\"", ",", "\"\<Torque\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Triangular distribution\>\""}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Sqrt]", "2"}], "/", "2"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Sqrt]", "2"}], "/", "2"}], ",", "1"}], "}"}]}], "}"}], 
      "]"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.683656192718853*^9, 3.68365650959415*^9}, {
   3.684533201990088*^9, 3.684533227629901*^9}, 3.6845336018509903`*^9, {
   3.684538398449457*^9, 3.684538398934102*^9}, {3.684538872647613*^9, 
   3.6845388887736807`*^9}, {3.6845392008597593`*^9, 3.684539232440401*^9}, {
   3.68453938540254*^9, 3.6845393866137953`*^9}, {3.684539430208269*^9, 
   3.684539435555996*^9}, {3.6845436780615*^9, 3.684543685187031*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
b1XUD1sifYll9XF5mfT/AUn1VAA=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxN13c8VfH/wHEjlFDJ3iOrgRaKvI0IJSFSobKTUVYKhQpRyEg2ScomZMSR
nWtvUoTrLvtGkvG738fX757v+ef1eD4+n/O5n3vuPefxOKJWrka2dDQ0NM9o
aWj+U3Ky4retrXmEZvvoeW7V50pGXez5cmxsGvVd/cllpB313Hq4mH8iauL1
aR8aRdQTvLGytC5zVHfFLkXTjc5QXU0b327jQaC6Wai24rn2NNWEIwpxmdKT
VJ+0kmtWDx+juruV3FCtOkz1S/6ItFX7Hqpv0oRoCuqjPoH1n1Y/hno03+1w
2Ho31Qc1TMsFX6FucRDs0qjsojpJn8vdPhX13WN7uF48Rc29TmPefxE1Ruhb
Z2dTJ9Vu+EpO3leo+Ypzr1tdR/3VJyU9R6ITeSSVmXb4n46qg1Yk7vd8B9J+
tZp0OfWB6t49gUdUKzuQQ3lMriLtsaqfh9zdg592ID6setweSx9VLd/aVnRd
7EBkM8puc9lXqDI6Xdni5e1AqgTfqXGsN6rmn9TVsp5sR2p7HHFzD7pVTbZO
h+XmtSN3jF/UaQuMqK63HO5evt+OtN3X0liKn1B9FyXEDRrtCC5Q0L89mKB6
3nyvRQhLO3L1jIBGxNaC6pIEXUb3QBty+hyNedb+FdWEeTKeL70NKVhxrZvc
v66qXoGVtbnThnQf3Ru7/pwW8IGDHnkn25BBo0nxjmgGiLzwrXJlC4PIEnfj
1Y4ygyJXFY1aKwYZfjKlLOe0B36O5Wo/j8Egnf2TX05lsUPQx5QXPZYYJHmF
aZO8wAlH3CN7+GUwyC1iWPjxN7zQpxLIY0tuRf6uJCVi0wXBl9HDMr+6FRE6
euKjzy5RONBl++5PcCvCWcG6cNBbHDDxV4hqRq2IXdmi0n1hSXCz1pUPFWhF
1jBefIO0MsB3RNmrd/obUpl0/NBX0cPwdeXwF4Gib0gFpoY2N0AOHGqF6Ox8
viELflf4mKKOwmdjuvDVPd+QMk+WZ7uST4Kl4O9e9ZEW5PbqmJPhsCIw4rC8
Ye9akFfq++XrlE/D5YffMgVPtSB2zk2eu70B1jWrSHb0LciDBy7njhxUhwzW
vKOF7c2In4ba0FieBiylRVZrWDUj3MwXk81XtSDHM1tWWr4ZEcx8K7eRdg5s
9BpSWTebEKVf1b33LXVhgPwnYCi+CXl0sVXwH68+RLTsI1fbNyERIesf6XkN
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
CYgq+66j9sPpL21tof4/CejLag==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
rg==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.772079, 0.431554, 0.102387], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxN1nk0lO/bAPCxJGWpfCWEbFmyVbYJucZSqRCiVQsSUSKRsoRkC6EsRUiy
J1LW8tj3EB57tjEzxthF0sT7dM57mt/8M+dzrmXuue/ruWfErG+b2TLjcLh4
Jhzu7/vSK/WmjY055HTu9jbrbHPoDLHuvr00hxgnnjF23GUBH9zCR0bIc4hB
xqlP848twNmIuIx8nUMq9HNDvezOwCw9Qtw3YQ75IGDwclTrHExdJHvi1OeQ
Eu62QCFlS2g+tiPIed8cQuBqVpUttYQsZa3oUeE5RBlXwT9EuAT2HNGZlaxz
iN+v4a/aFpeBXHYY9e2cRSQGRUREj1+FcYEYRSanWeSl8IuCsvfWUL2p8pCL
1SwyOhsfGo6zgdcLU/pj5rMIm7S6pIGZDVxtIlys0pxFttj9rL6/agPDHtNB
fltmEcVrEp2Lp2yhv1dvjOntDGKqz2F+Sd4eOmIWnzEPTSNDUvu+CqU5ga9S
v9C1tmlk9ibehix8G/Y3IW/rKqeR1qr5TQvxt+EpPaw4+O00ck2+gNn+uDMY
20gPct+eRjIIil4LJ1ygZb+l+G7maUTH7U3Q9Vuu8KBZN8frBw35eUHyWtFH
V9h3TVZlmExDCpo2ZgvprhAat3LkdQsNyUptOF8ecRcM1iNvSMfQkChSWghP
uRvUt9TlK8vQkNm6cf+Xqh7gbpt7KEaQhrgHqy5IB3uA1EZ09QonVm8xqeo8
6AGPD17tLl2YQnycb4epBNwH/RdrP6F8Cik+wXX3zfADqL6uBIbGU8ixzO5L
ncXe8IXpxddrd6lI1JU/3Ak4fziYdNzqnR0VIW1GFxsO+kO6xtqP5QtUZDY7
rtzU1h8iXC8KBelQEe2oeDPvFn+4TBJ2zOKmIq3v3ywfTnwEuKZU9tnMSeTU
50/s+aceg25krt697xTko4m37HtcCBTJX+pFOijIkxSxdyIQAvuauBzZaynI
/puBLcveIcDDfDv6RTYFYZU2VBqihwDR9cBY+T0K0vJ7fCF6IxQCzhb54Hgo
SGIWr+USfzg0iFSWhhwlI9OySXW0tkhg/akqy6NBRradK63Y/yMSCO058S8V
yMgDton0XIEoKHsYdy+Hl4xsoY2RjttGQe6ok+rXcRISzNITLLIRBZGpwgXb
H5IQqWWTT6cPP4NzUp6ZccUTiM0PYW12Ugw8X5/fJZozgRQE6Jvc3xEL33qu
B2UmTSBRrScuSWnHwokgs+uljyeQTaHOW1TjY0FrUlZy8PQEwj7tzit7Kg5E
s/uSReaJyPt2UYOnjfFAVVCLeytDRLYouZU7TSXASqFdwJ7dRCTgnexPYYlE
YNZ44fKCi4hwhmwuF7BMBKGj9JPhi+NIUphl1s+2RDC5XI1z+zyOrGvia8xK
XkFRhLGDvsk4YjctwFz4Ihn8564fJt4bQ85ydirptr6Gp27x+y45jCHWXBaa
z2deQ+Lvpl29lmPIp2irmm3bUuHTZoXFZp0xhFq7N/+RWSpM7llK/8AxhoQz
V321GkwFY5OH2/2TRxHu8rtpXMtvQNVaqUEnYgQJJ14R6DNIhz5XqWIWtxFk
trqQe/lmOjx4LJxRd3EEOT01s4iPSoeKTI6g47IjSNDVgUHVgXQwmKMcNa0d
Rg7w/brP5pQBll4p9VfXviM6rPc0dr7KhEexO+ofXh9C2PsQW0+BHJDKZC/S
MRpCzsvdbknSzYHG0o23LCpDSKWOUgXNMQc4v888DmIaQtQ2ZyQxIzkQK9F8
5GniIHJbdCBGyi4XsvP965I6B5Ak6r3888g7+Na8VPtFux+hWM3GbRzLB168
db61RD9SVlyaeMAqH8687UjYzN6P2Ae7RXs/yIehh+/umH7rQ9YPcgfavMuH
SRU7UZJNH0Lvn2e+wVsAuOQBT86QXqQNnaDbUgpAybXq4MUuFNlR1qn1+HUh
hO9+mrJq14nQhvcc07tRDFdxwXrCRp3IdxUOu9rgYlAh+ZJ1DnYiv2+1frHK
LIahvDvyT+jfEBm6ru4CpRj26Z4pEY76hjzNEmO3tS+BRnvhDt2yDiTXNC8y
26kU2G6e3RAQaEPwYkbfN0WVw2JK5Bdd6wbEhk1MyYC1EtyTONi1iz8hyyu/
bsoeqAVSVGmbemsMTI907pYsaYTAYeuL+u0VULGXkh5OagUq8VTiGNoCkh5/
WLivd4CMfkqGaVY3zHJomN016cTm485O7+puSOjxNuQ72wmZv/UeZQ52QwdH
63rhpU6QKaRc3uBCoTql1n3coROkxZX43t1BwX6sQ5zjcSdI4SoC2LV6YFA8
azSwpBP2fh60Qtp6Qbx96RWLUBdMxL1rn6L0wrEStic84l2Q5vrwMB9THwTb
cIQKyXSBpJyEwC3lPrCgSWWJqWB+6dAhGN8HJfKmA3MnMXv80na36oe6wTrv
uAddIK6yS0jhxwB8+a/Fda6rC3Q/ukS4bRsEaxUPl+b+LrBSacVV7BsE3vWY
0aSRLkhR8SMZWw3Cg/8+rCrTukBYlZbn3DYIziumZ7mZu4FfDdH5mDkEzcKX
N/kodsM2vJ2d5qVhiF79b1jQvxsUS6r6H3kMQ2vEiMauoG4wxgsZtj4bBvZN
kaqcYd0Qhv+2/1LzMDjzK06NxHTD1kOaaz7qI8D5RD9OAdtnlldBR8fYR8FQ
lB1v2dYN668u9ksSR2H/jjNGfTwoHEmtUQuZH4WWptyxRj4UwtLlns/8GYWa
jdSwAkEUdr//bVzEPwaebDe4HMVRwFcm1B4zHoMxl0McPgdQcB0ffO9QOgZ2
Zwd9RIxRKCPrcbXXj0HiSlxEuCkKzLQcB+XuMfjxatTkhzkKkUuee+mzY1Al
vaM78yIKeaxCCeGS45At+HXvO3sUJqUsA/OfjkMob4q3sB8K++VqibyvxqHp
6JMG1gAU7inJ69zPHoefHHNXiIEosOHpv3XqxqHCZbdNYBgKEscTXbrWxmH2
FYnFJg4FByPWdnV2Ily+4MrD+hKFD6Y35RN3EkF47vbhxEQUCBe0KNf2EwFf
m99e8BqFy45Dliu2RCjbpqTmkoPC29v6ZRdcieDut+N+8zsUpl1zdyG+RCBv
P58umI+Cp5dXZ1ACEcJzeDKSP6IQHy5kIPCNCB3VXNGaX1Doem+prKU1ATu3
/xfzqRWFMwVrj0sNJkA2kW5u2YZC34f4PjWLCUjh9u9da0dh+FO39wGnCVCw
2rl9TxcKU+WGjVIpE8DWY1zF0o/CrS9Tgmm5E+CSx85uP4DCfEXwLbHSCdg3
3jBZM4jCSlUtj1DnBHDwcVyzHsb2v1Hr0g5WErxujCk8REThcdPA+4jtJGh7
7qh1YQIF9hYPZk5hEuAP5KvdIaHA3fYxg00Nc4yGYzAFhah2s7VHuiTYWnYh
IXASBd5v84ZMp0gQfSNJxouKgkC3/OJvOxKoShw5akRDIRFt1r9/lwShof6t
MtMoiPTax634YvXq8Qm/MUsOpGktvCABkyATLmgWhYxB3adO6ST4+E7xCcyh
sO/76BjtAwlYdagn5jDvHxUKIrdgFis7rbKAQuFYWb9NHwlmm7OjmzCrEc/J
j01gVvy+YLGIQunEis/lBRK88dS+2Y9Zi/z82+AfEmSPlNNPL6GAUA5Knt9K
hrQQ3aQ6zLrUDvcePjLIZyInFX+gUDvl1HRaggyjN0RxEZiPTXMKfVMiw+U/
pkUTmJtnsp2MtcigE6Vz4+AyCoZzBlUtBmSQMx/67x7m9nnyf8ctyFB0d1vB
B8xmiwHX663I4C/WqEnCjC6Jl+o5kUEhZCmPewWFc8uVHFUPyHB6wGeTEubB
lcuXtYPIEKl3VuMo5sur9PzyZ2QIXLphYI557NdLlkMpZGjjT9t3HvO13/gz
Rblk4BhfHPwbp9B7MpVLydDvrXf2GGaH9bu/8+vI0C74KG4/5pkNHmPFTjI8
oyTFbcfszFSQkjNMhkqeADMKtr5F5lNLMjQyLDbvqfmI2Y115kj6TzI0aV+Z
8MC8uulJvAQrBcYTlQqUMT/YLEtL2U6Bvv98JEnY/vxhbzgsIkwB4071Q+GY
fbfaRibIUmCQ7cSUHGYWThYivxoFJEZfH6zC9j+Q67VqrC4FKsPkuYwwh23/
PhB5kQLOgk+vGWDnp30NeS90gwK2a9/kc7DzXih+HZDpToFYL6U6ZsxnrlxX
rIyiwIFmC8NIbF62FBqwGCZToO2ovGI9Nl+f2eT6enMpINiIr5+fQUEsb85v
roECyprbNiSweexm6jzjiVJAY5gcLY/Nb6DFR7nNRApcmtxWIzuFPe90D1Rk
HVvPc5dhJmz+i04yyxqrTMIA/aChDPY82SdP/OnXmQRSiAUXOobdl0v1nban
JmFKF6fuPop9/5dPvLwdJsE6YUt2zHcUTlJ5O3JTJmE9Nue8QS8K61o/0/B5
k8Cs2p4Vh6KQH9l/v7Z8EoZrChQHseefD58kMdQzCSl87Z+1O1AYDZS+x8FF
BW2dfar3GlGIHthiGCdIBYVdm9zt6rH7XHFaVEKGCn2paPHJWhSy0fxmDT0q
NB92lZxHsPOU1BBxuE8FDeWr0xlFKMh4CC0tB1Jhi33mQ3Xs/hpoWW/we04F
l13Co2UF2P3oWuPy4j0VvAwyZhNzUdhabVjXSKJCaNp62FfsvvyyU+ml+RIV
FK84dK8lYfN0Y8ftUdwUGJw/9Gk3dr+i23v4V3dPgbmTkCw+FoWUK1duSptN
QUdrkeRgCAqqf1z+C6yYgizioaoaJ+x+MA79vq9lClaabSJsHVHgSU7NaO+d
Av1FJhW6HQqzhC5NgYUp2LoStrTZCoX0AJVruRI0OBromR9vhgI/58+PncE0
4HHIDHypjP0+XNr28F4MDX5xuNgEKaHw4530caFUGjyodqu1l0Ph26lz323L
aeBjvXedXQKF0Gelm37N0CBYvPxzxQ4Ufgt6ndlzehoU9fJa1qa7YcrxuWjt
lWlwpkbfVZjshr7PuVP2N6dhysPTyJzYDR8vf/f58Hgacg1OPPDp74abqdoZ
R0qmIfCKl7x+XTcMyzKtOgrPwHYO0XORL7uhCh/4ooQyA7WXOpfYtLD44DjJ
cXkG7LP35iiodgPdBw7uYZkFUfbUL0ew/wf4utXmxyKzgL9j2H9ctBvyTR3p
ZhazsNWKpPSapRtSHEyuzFTPQkQWj09gQxf4JgruFU+ag0LKhy90vS7Y43u2
70j2PKxe6/iuJ9YJnQ76tMJzi/CZWTakuL4dftLn0whTS5DOV2a+GNcCvKh0
xqtXyzCihowc4WuAVHMREwGVn2D9tO5NGb0aJC/e8n1RvQoLHCdTHhpVQFLG
0V/UO2uwo/TdqOizIghNGOE/z0aHTie9izO78uGOjC+fIhcdpB3YcvV/v4fz
n0R5WXjpkJeFf9xe/x5k2q22vROjQ8EpJiODy++hnnliE9NhOmx6qS7YFJEH
LA6Ti5mudCjRGKSJrOSCF36hdXWUDkb6u1zQ4Sy4VhfV/JVCh/j1mvNP87Lg
pNnBxtRZOlgMPfK45ZMFgjddawzpdFjYFlIdK5IFJcnLpSm7/kBy2RfnlKuZ
sMy2lm5g/AcO7Hd1z6ClgxPK7Bdf/geUVaTltUXS4E5tZaRR9R/YdKLSy3vp
DbgV+qQwN/2BT8IHKOONb8Arag252fMHYqoUnUTvvoEQo8V1wgIWN81hvdGa
Cml1Y15UqXXIO6JifjTgNQx8qvTQiF4Hy91FLDUSSTCc5hM8F78Opm0/QmX7
XsHYM634tOR1iFJSejoe9gomXUqKud+tAy6gstfwZyIsK+SvjDesg4OoB3Vz
RwJsT0++++TPOnCHmWzXj3oBR2N9nIfsN4BoYnpXxTwGKI9614Rvb0AbwVop
Y1cMBLvsf3zFbQP6nfLE7QafQ4vh+Itxvw3Yma5s0W7zHExYjtZMvsR8/enV
Ix7P4LwzF99y6wZIWHjW0d5Hgdretu+B/DjCMXutEZ+iMGBLXEvN2I0jFAS4
PTYxDYNeHmn7RhEcYVWmt71++gl44HwXt+zFEWxOhMal7n0CZYMHNocfwBG4
P9NG9iSHAETH7H92Akcozb5f4VEQCAYblo+SvXCEQ4SPTCMWfpAWKkhl8cUR
FlvNePdt+AITX5+x/SMcQajRrE03yxfK5E8LHgjFEfBSaQVfNh6C/IXjBdVx
OIKLXaz5i1vesP2T6gjpA2aqePrHOA+4SVjSP1GE1bcQDa1YPaCpJT87rxRH
iGiFI0V37oH/uJz7vUocoYHw0NHS3B1+bBPn2tKG5Vvxnc6Xuwt9Dtya8lQc
IVvmfpG8nDOorLSkRE5j+RuP+H1tb0OUXwjb8hyW70q/ucPDCU7Es3Z+WcHi
X7miH2TchM91a/anWJkIOLWMM8+VbgC/aUlb4WYmQsRvm67DF+zBbchNhZ+D
iSDUNPL7crAdKC7Nb4zuYCIQU3y/cc/ZQoooJfbOHiZCtqSlgBnZGug5afQe
ccz8bD5keWs4r25trSmF5Z85FrXhbgU8xt8VWBWwfv2/9et3XoUAz67aGA0s
P12vJ/33BRhli9q3dhiL71pJdKs6D4ejjSMv62DreRNUbxdxDlYymy5KGzAR
GixEj9QcPgM3epDFEgusfmoH64dFU+Ada44hnsPyof5HB7MpVNJQPLcl1i+u
vVpbwAT4mKZ9bKyx+tIkfokPhlDN8VMswhbLT/iV9pP1JNziY64rscf6RQ/w
Pbx2HGrl+Dm4b2Pr79vaU378KDirSeTh72D1so0lnu36sFtH0dTGDeufTMlh
sdaDO2f040o8sXyc7KzvOwKIWJ3SIPpgcYrLW6av2tDkeOE7lz8Wl+EmlZ/T
AlE/ZwmbYCaCC91VOPSLOrQ+8awPf4I5TECnMFYV7sUG3iiJwNbzcml/VYgy
tOUkvueKwfrZrcU4eirB/aIMM3w85owdBJs/ciBZ9WHZOgGrF2JWvF8oA549
jZolr7HPix/2Nf8sDlJjXcPjaZhL/DX1t4lCJ23YjysTqw8abTZS2A3eK1RJ
fA4T4ZAx22mJt3wgw7TcYJ33t5+SrXIgD3Rz4BzDC/7W780zec0FD/k4uEs+
YvHELvq5LZthnxhfwXgx1q+h16pbnwl65MTMucqx/SXq71DKXNX2V5P/qV7x
18cOzTrNayvoqL+0rvqbf2Dvni9E7b6TuofDa7H+eOuOheEu7YAzRqPFDX/t
dIJYUK6tZHXu0Xjz3/Uci975PkB7wNFGiqsNm9//fwW6OzWpf2P4gN/9m9bd
DA89CdgW3stwcOzTD8UDDA/nvF3lHGM4rOdbQPEMw/ixIenxeYaJNEoz5w+G
NZjWt1uvMTwpt+8V52bmf9bz8/9kJcowXSvRykuC4aLVT1xxUgzLOFNtW+UZ
5r5iwqd+iOE+LZF7nGYM31otxRc/Yjju9kI5J4Vhiu9bcnIFyz/P25Zeqw5i
/eflWzybv1pt+ufC4y306wps/0yz36/GsszwnpyBZ0FfN/8zZ9WEfkIcO6Pf
L2XBuDtb/vmcu5JyzPGt/3y3PjRZnIfjn8MOye2PpzF8yVeO91UR5z9nbu3T
TPPm+ue54qagZxbc/zyL3y3Ns2cbI5/FYDhGnGHrtrsxAlIM99q0sYgpMFwZ
4TeqpMlw9ATlhdFZhtUiP3KGPGV4/sJYDeczhrP3cntGxjK8p9yOGveKYXay
YH16DsMDmn4PaxsYfs6Wp2bQwrDxt4GZljaGa66rWHahDOdGUfDjRIavW/LO
21IYFpXWyaBO/U//zy93Liz8T/+ghta7y/+zPrMfj1ZXGa4WEtP0ojPsTTFa
3Nhg+P8ApNzWTg==
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[Mu] (pushing location)\"", TraditionalForm], 
       FormBox["\"Torque\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Epilog -> {
       LineBox[
        NCache[{{2^Rational[-1, 2], 0}, {2^Rational[-1, 2], 1}}, {{
          0.7071067811865475, 0}, {0.7071067811865475, 1}}]]}, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotLabel -> FormBox["\"Triangular distribution\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"0.010000000000000002`", "0.05`", 
       FractionBox["1", "10"], 
       FractionBox["1", "5"], 
       FractionBox["1", 
        RowBox[{"2", " ", 
          SqrtBox["3"]}]], 
       FractionBox["1", "2"]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.684538399671235*^9, {3.68453849634173*^9, 3.68453849872439*^9}, 
   3.684538528787299*^9, {3.684538873726265*^9, 3.6845388893641148`*^9}, 
   3.684539204510564*^9, 3.684539388496564*^9, 3.684539436519663*^9, {
   3.684543675549574*^9, 3.684543692218206*^9}, 3.68463446206347*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sigs", " ", "=", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.1", ",", "0.5", ",", "1", ",", "2", ",", 
       RowBox[{"5", "/", 
        RowBox[{"\[Sqrt]", "3"}]}], ",", "5"}], "}"}], "/", "10"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"TODO", ":", " ", 
    RowBox[{
    "place", " ", "legend", " ", "inside", " ", "the", " ", "plot"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"TorquePivotUni", "[", 
       RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "sigs"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", 
     RowBox[{"-", "1"}], ",", "4"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "sigs"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Mu] (pushing location)\>\"", ",", "\"\<Torque\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Uniform distribution\>\""}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", "1"}], "}"}]}], "}"}], "]"}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.683656192718853*^9, 3.68365650959415*^9}, {
   3.684533201990088*^9, 3.684533227629901*^9}, 3.6845336018509903`*^9, {
   3.684538398449457*^9, 3.684538398934102*^9}, {3.684538872647613*^9, 
   3.6845388887736807`*^9}, 3.684539050089514*^9, {3.6845392360343122`*^9, 
   3.68453924661322*^9}, {3.684539278578122*^9, 3.684539281301207*^9}, {
   3.684539347834256*^9, 3.684539370928897*^9}, {3.684539413266988*^9, 
   3.6845394260116*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
YWOD+L+b5fps
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxN0nk0VXsfx/FjCBXlkQZDhmMKV1eILq6vLrpKMlTKUB5CSoRMoSJdSUIh
mUVmwjFkiC0JjzGkTkJH4nQmjqmQ4fGstZ+922vt9V6v9dn7t/YfW9rxqqUz
J4FAoG/c/+tcmtZ/1tenEQJ69d9zfHd1DjfJ98Hnz5O4PU3HF5Bu3FMr0cSQ
FNx028kgghbuLyIJ+zk8pjC/TZiN4xxmYm7gSOp28qFhbpNoqr13ZBIzTUUz
MWffOOaDjr+3HY7+jLmvY66lQe8j5gdiMZmLF/sxz2bGNvzl2Ia5yLdw/z5V
3E7HWjIE1loxv5/7EUpOwl1/xP6IR98bzHeYKr1J+i2Ydx3qpLAlXmHu5Z+w
eM9swhwxttZcX4d7OVItJ9wKd2O9+sAhcQSzBW/f15jleswtZdxtNo9xa9oc
KpBTwy1akuFef6kO81dLj++T5BrMVitPyeU+uNtzBuuCBXGXLOreEjJ+gVkq
y9NhZLwa8yOTZwb5t3BzL3yQuyZWjTCuB/9TG3RXzy99K5/eiypk+njobWXh
cb3L1eLk+GNVCLK6trT5Awec71HJZ4xUIktxpyl5aTvAclIv4C+vSsRXQ1HA
X1ca/l4zM07irkSa1gIHixqVQHeXwx52YgXiLxwrW6ukDqr7vb8dUa5AYqz5
NZwJ2iB7JKwmrZGEmCkk8auw9WHP+fiIeQsS0rdEoJs4GwG/X85Zk4ly5MSz
P9Vi7I8BIbp6X1ZAOdImbzbxfdQM5nPaFhe3liNpTcmhr2YsgdZAbjfLKEO6
rBffJGlawcgg7UmuWhlCsG8C7kZryP600Ld8vxRRfjs7RYg4Bz462kJWH0sQ
/aBOP/KMI9i52ZG4CCXI4Ok7EiRtZzBKuWlZLl+MuLjMUt49uwi7fjY/4vcp
RO4oTlUtDF+BNaUJtbrkAkR4OKh9rvAqUG14By6+ykfMHD8H7jX1gpo6kx2v
t+UhH8XUzC09fCCT7l7heTAXkXAYjx7f7Qf3RGNPStjlIP8+PG0j0u8PNoHv
4q4XZCMT/btSvAOCYPWPc8KqhpnITGr/iHtrKHQOrLnWD6YjMUUJpPaR25Cq
blCwSyYNec7L0+O7GgZ6c52K3Q1JiFv+FLn1dDjc9h5R0p57hFDuf9YzvHwf
TvZLuyXoP0QCeQSOHmiJAmOnLqsxsRjkSQ81yVM+GqLGR86csIhAcrP7eedC
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
4iLuZnFpneAV3DeoprPr67j/C4q55Ss=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
mDQr
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxN03k01O37wHFRUoYiTyUiJZK1iIpctpBKoVCEZElPJDQqKkqWsmWXJSpk
X8uWbkpUYxszY0sy5jNEJWuWxNfvnPnN57n/eZ/Xue5znfufW8L+iqkjJwcH
x8oVHBz/18kUtY9LS78QB+u0h9hTr0ziLrkW9vXrIG7344xp1Ix7dCF8u18S
7hGrQR8ONdwDwrEKK9xG2W6LnYjm7P3Bds2KxGYHr2G2G8VqK0P0B9kelleN
z9jFYHufvWKjdvhXtsmfJutrNLvZFtpvX2S/A7d5RlvSah7cvXfyPUzIXWx/
U3HexryAm+NJjw8hpJNtXcIR52JX3IE3yk3NTXETTsXIpIng3rzGuFO5oINt
K+Lrt11RuFMZuwtueeOWfLP6fqMWbmdZovvlnR2osyxqNOuCj2ZOAmYlsLYD
Fa/+HZl8+qPmj1VmBq9GaajyR27qUQzTVPSs22tFoSG7vTG2VePTmh79imIc
FTSUUHU5vYLKCWXHU9dkJNNQy9cojYwmAsxUEaaP+NMQr16qn4m7EBzc5dM/
6khDjO6yGctgEbgVO0yKNqKh8oQGf5VOCajltCzfr0hDFhkb2rWuSgGXe8PT
LxtoqC2q7rJJlCzof1EJvztLRY+Uvu1STlGCEKNnN6S/UJE0T1otKlOGpnIB
x6Y6KpI5GXyrZZ0arNvpd/JqJhUl8qTb2hYcBNOoUfWND6mIuGfEySNSE2KX
rKWrr1CRHbP4I5eVNnRdJgnanaKigyOBHhERumBj8GI4eysVxSTP/Rk+Zwjp
ZRtpxpxUJGgU31sxYwSYxP3ayUEKalRsbjUsPQ6XFs7HHyqioBEyxwyt0QTy
XdruDsRQ0EZhv1CwNIOxDk23oBsUdM73aG7I3CkgFoscJutQkEZ8QwBys4RK
sQdKRGkK6jQmQq7OWVh4OCsiQqCgh9s97nlLW8NdJ9qEA60dbV+XRekSsIMw
kYi0Wed29KD0qKK5pwPYcQTrbj3ejmhnr9ipJzmCCtNvUHtvO6oae/lWh+QE
vQUecg8XyMjnW+6WCl0X2K1jXrH1ERkNr1bffCjODRalTljpEMnITpLYrrx0
Bdp5DRedrMjozaYRG6kKd7hBO6BXtJOMeoMXoj32ecCHi1vbdKra0F/OScku
u2uQfHyjp/OTNkQ5mqzfu48I7nvXbQwNWJ7zdvqN83vDpgUOa5pxGzKd4IAT
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
0xHI
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
w/0/U4fHSg==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.772079, 0.431554, 0.102387], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[Mu] (pushing location)\"", TraditionalForm], 
       FormBox["\"Torque\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Epilog -> {
       LineBox[
        NCache[{{
           Rational[1, 2], 0}, {
           Rational[1, 2], 1}}, {{0.5, 0}, {0.5, 1}}]]}, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotLabel -> FormBox["\"Uniform distribution\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"0.010000000000000002`", "0.05`", 
       FractionBox["1", "10"], 
       FractionBox["1", "5"], 
       FractionBox["1", 
        RowBox[{"2", " ", 
          SqrtBox["3"]}]], 
       FractionBox["1", "2"]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.684539050727324*^9, 3.684539172596488*^9, 3.6845392473597107`*^9, 
   3.6845392819314327`*^9, {3.684539349215146*^9, 3.684539371686418*^9}, 
   3.68453944026709*^9, 3.684634462206657*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sigs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3", ",", "4", ",", "5"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"TODO", ":", " ", 
    RowBox[{
    "place", " ", "legend", " ", "inside", " ", "the", " ", "plot"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"TorquePivotTriATB", "[", 
       RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "sigs"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", 
     RowBox[{"-", "1"}], ",", "4"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "sigs"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Mu] (pushing location)\>\"", ",", "\"\<Torque\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Triangular distribution\>\""}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Sqrt]", "2"}], "/", "2"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Sqrt]", "2"}], "/", "2"}], ",", "1"}], "}"}]}], "}"}], 
      "]"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.683656192718853*^9, 3.68365650959415*^9}, {
   3.684533201990088*^9, 3.684533227629901*^9}, 3.6845336018509903`*^9, {
   3.684538398449457*^9, 3.684538398934102*^9}, {3.684538872647613*^9, 
   3.6845388887736807`*^9}, {3.6845392008597593`*^9, 3.684539232440401*^9}, {
   3.68453938540254*^9, 3.6845393866137953`*^9}, {3.684539430208269*^9, 
   3.684539435555996*^9}, {3.6845436780615*^9, 3.684543712674811*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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

        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
p+7v1Q==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwV1nk4VN8bAHBbkjARhUSWLBUJSZH3WuObaFMS+tXXlopESnZClCKEMMa4
4SskqQhNZCmK7FvJMnPHjJ2sKb/jj/vc5/Oce8+9533e875H9pLHSScuDg6O
fnSt3WfTD3xeXZ2kGb477vVNiAqtUZfaPWYnaXWLnQt+JCoU34z5+ZOYpJkf
sPdX2kSF68eG52hfJ2nHSy6HBwpTYWLloVxw6iTNvjA0aY8oFdjnCT+OA5M0
X2pJ+T0JKgxJJKpxuk/QiqLFeQwUqPAtcSae6/sYTeb8QMLLg1So5Ez56ujN
oimGFwqouVKhXvpDWZQpQaNU1tMT46nAUtVOeqY8TLupGlAj/54K+y/trTd4
+JPmo+i5bDFGhZaG2ZpK/R4aS7Uo9uLWLIjZ9oiy6NJKi3qvGiBsmgUzlNhK
w0v1tNCII55MryzwIW/k03/7mjZpl1+bS84CRlxZ04EviXBhdG8pz9csiOi/
dN64+T2YeVkFNy5kAWvYKm2woxE6Sh3fVsjgoGxMyTnxXzv0LDRLLJriMCJz
Qyyguh0ufXCcCjqCQ+5vo7DcvnaoNrfwWG+Gnn/FdFgV7AAlNzdHMXMclOT2
bim40QGnPAx3qB7FQZHj/V0+vU4oXLIPOWqFw86Kvou0pi6wCVXkNDiLAz2p
oJnN7ALNT9tFK5Fxr6DDWzi7oUVJulrHBgeF3fIS1zS7wW81dlztHPJTt2+S
yd1gRSb7bDmPfHtJ3+diD9zmO/OrxQEHOa2tUqq/euEtl8SbBSccDEs8H94k
9cGNaPdMD2ccLmp94Xi/qw9mVPx4mcgUrRCG5cU+uCybptvugsP2/aOF15v6
IJVfzSj3Mg7i2jSDktzvQL0neUL7Gg4kHRcXXft+0DGzKyG8cFArreoJu90P
o6lG3yy8cbDUkbL4Et8P9Ni508XID3Ra1O0b+mGoOfWJ300c+A/qLgce+Aln
38mN8d7CgTs90nSQbwBKubMuc9zB4W/6+R6F4QFwDHi1fCcIBxPqR+2oqQFg
h7jmNSI/yN6dMP4H+atY6bZgHLa9+G35RnwQirttRsuQdT6k1hyxHAROjsCs
iRAcvIb6XriVDUJRgxpb5y4O7wgjwea6QfidYnc4CJlr9LmbZvsgGMiFEDXI
sbN+O1cmBmHzcoGOZTgOhTxSqTEKQxAqmNBkE4HyQdEuoujREEQt+h0/dg8H
9d01w6LpQ0DN21B/D/nW3j0GvnlDsD/ywf2PyLw6K78NaodA2c5zRTsKB3nz
NM+25SHoKS/xEIvGwe0YT/MBvmGw52MdOYpcfOLqnjSxYZAsFXYLRsZs9ZiO
6sNA/QHRI8gOV77bzTsNQ1ikwJ6i+zg88zB+Z+s1DF5agyYDyGNe+VtpwcPg
EPDfM9IDHPz8/VsjU4chJEh0/1Xk5BgpM4mWYXh6/0S4VAwObS/sNPX06KC2
eMLv3EMczrxcDi8zo4PPS91jfsjdxcnd2tZ0+LzFyScNuf91e8A+dzqcM+36
8h2ZXW7xSZFCB6GffYHWj3C4VsmWxPPp4EV2WvVEnnp/75psGR0eNE62xSDP
V9WISLXSobjZ6dZHZK5PevbCPAzI2+mXphiLQ/jn3hcPNzEgdjHv5WFkvsbb
XALbGdCxnLr1NLJQU0kOrzYDbCdk2wOR45pPLocZMoBnE1MlHlm0ZcqC04oB
RNXXpmxkifY9M79dGKB84H88X5DTOhqMfb0ZMLVLL+EHsnSXa9J8MAPqSE89
J5AVenG96RQGeAvqbRaKwyGnz/CRezYDXp8p6pRC3vVjYHC0mAF907zELmT1
AalIopEBuYHlhDHyq8F3Pf92M+AdxbzrOLL2sM2eQToDIm9Kitghl9HnAx2m
GWAkVvfEGVmPSGjp+8OAncl0x+vINKaGwjl+Ai5tEfL3RTZkffPp3EKAem5v
XwhyDdv98yl5AqqdhsKikI+MCUi17CXgpEulVyxyw3ieu6UeASK13M+fIFtM
mlU1mhFwKOmYShpy8xSx2dyagD9zGhMU5JMzd53rLhLweOnoEo7cMStXZuRO
wN536v/kItvMfdhYdYcA/uO+A3nIffMODvqRBJxtqyzPR3ZYXCkqjyfAwu5J
XwHy4NJT7oMUAqS5U6EQ2fG3zpk3+QTwDPzLXBtnrnTmapYRoLkxqnXtfbe/
3r+LagkYSKNyPEceXxWxVGslwLDAzHPt+9c5X1Ke9xPw8PRmhWfIM1xWs8qj
BCzmPRXPRL7JM26SvUBA6Scfy7X1La67nyzPwwSuOqhdW/+d9SqjlE1M4C+P
8V+Lzx+++sPS25E/LHqtxS+Y3yk2VYUJWuPiz9fiyy3APSyuzQSabYTsWvwj
BDP3PzFkwsCOnk4P5AebfvTGnmdC+dZHK7bI+o60F1KXmSDmUulqiTz9NvNu
rg8TEmWaJzHkMxec1T7EMWEmJNpCHnnDKzNuiwwmfOHdLbsZuYJ3d3dXPhMq
8tKEuJBlCydDJuuZ0L9ucN9afrZztp7x62ACX3Ke82fkCOuS3euHmaC/qlFc
gjy2crtD+i8Tarnc799DfnOUS8VSawTGugR0diK7ZtD/9BiMwC6BY6L8yNtm
61qdrEbAIUSJewLtv+Cn9/0D3EYgjZ685RXyUZbot3zKCIjfG1+ngfxXbwHX
KRyB4sogVxJyUWyPb005mo8S2TOK9v8WHbL8984RyJMl6JnIAxFKtzYKsiB5
k8NjLuTHvRsskiRZ0Ja93bYb1RsTtbEd8sos6LJW21OAnNdR1HDIiAXKJerj
p5BvKhySdvNlAfXKwfZEVK+Ub0vNzkWwoK6Kc+Bf5N7Gv/UhCSxIS5ufVkfG
vD56prxgwT9PTil+QvWPv9qi9hODBW7xttVsVC8rxfY+PT3LAhrf+uki5OuX
hT0GONhQ6F4u64PcsalTfHEbG45Uq0T+QfWZcuHCVaWTbFAOTTvFgbz/j+fm
iPdsENboDexA9V/BMvrHrkY2cIXyhscii2RQc5q72OB7uCr7H+QJrE1XYpoN
jGoN3QrUP7Lvajnmy4+CXqpuWgLqL+ICCyWt90ZBQjpuQCIU9Qd7UtCtxFGw
FpC6Vof61a8CJXMp6ig0J94WuoHcYmXzw6l8FLxNF2LqUH+Lji9btzQ+Cssv
MW9H1A9/S/qfkTk1BuqWRUFe/qgeX0nYUXNhDBw6vygKI3dX5LNdr45BpMrf
vgI/HEocfgQWh4/B65VJdzrqt1ep+jkmpWMgxDbZbeqL6rsK5+KV7eNA+Ltk
9KF+XaUTkVLKHIcGRyL0qDsa7xtiXJkbh8L/PQMaOg+sBIKGDPcEhOzw/7YP
Wad2sSFcegJmT1hc3XwV5cuJKysnrSfgjOmtgE/oPEFxO35hvHoCuOvnYpYc
Uf6lSe6UI09C2NvIHC9bHGSCz3ab5E1BmodE3j4jHFrdjEdf2cyA30Y/ITMx
HBZWpnCMPQsjyXEiXuwsEO1QyklPnwOV9MsfuCqygHpa+riE1gIsPp4XzInN
AoXz14JTqhfh6gnmqZ3OWUDOMV1i3ViGkogUIz6dLIhO/Sl+jncFogs42lYF
ssC9gyskufwPaB1VEbDrp4Lpk8Dr311XIezl68OPi6hgtmoXluHPgV3csCD0
I5wKlztpM6XWnJhw91LUg7NUMAoJfX1xBxd2PPklfnwPFZI8pssFmFyYluzX
txOcVGAGPyMy3nNj4zvyvKfbMmHKqcyxOpIH0xDRa+H7LxPmroms/3pxHWZx
51HX3TuZ8Mq8ccVZlRf71ZYUIGaVCaOu6trcc7yYwTy3VLBCJsg8742P/Loe
u/Ron6PVPAUEqujGqUl8mLCkqIVmIwXmljQlk25swBK2lf7wS6OAjc9ezURz
fqyCQXMhu1PAuy46Q05kI3Yj0z+uw4gCDw7uVk8e3Yj9aVt29BSjgH3wbtH0
NwKY8tT5IqP2DMjl79bFAwQx6ueoSJugDJh8+zky3loIq4k9VKwtnwETOtuU
RGRIGJeutZT+VzLkcpv1J8qRMP88F933jWS41OSdKKFIwuYl7tjqN5Ch698m
bllVEsZeJCfr15Phw8OQgb26JKzlzYgoVJHhMZ2ZcuwsCaNo+Atir8mgHVsi
EPWIhGG7sv4apJNhynbwo0A8CStLeb29OpWMzhFCfrFPSJjmhk96hk/JIFPu
wkpKJ2FKI2N3DJPIwEdI1mU/J2GkbO0Fwzgy9OqGBNXUk7B+2YZJo3AyJPAW
aps1kjCbuO9CNWFksGzpHW9sImGtHJOqxqFk+OisZdfWQcLqfm6+ahxEhvw4
ps7QMAkrTLcfMfYlg7Od6JQTk4QpC15fX3uLDDuUDHJYbBJG9Q9VNPFB81c8
FZueJmGJ53McTbzQ/JH1X7znSNimxrKwWk/0fyd/hS0ukrDoQ1+oJtfJUC0l
q+u/QsK48/qrat3JEMA8NrO6SsICJKYHTK6R4f8g4Oom
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[Mu] (pushing location)\"", TraditionalForm], 
       FormBox["\"Torque\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0.026000000000000002`}, DisplayFunction :> Identity, 
     Epilog -> {
       LineBox[
        NCache[{{2^Rational[-1, 2], 0}, {2^Rational[-1, 2], 1}}, {{
          0.7071067811865475, 0}, {0.7071067811865475, 1}}]]}, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotLabel -> FormBox["\"Triangular distribution\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"2", "3", "4", "5"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.684543705403277*^9, 3.68454371324186*^9}, 
   3.684634462340859*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"TorquePivot", "[", 
     RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", "\[Mu]"}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6764676711948633`*^9, 3.676467689250969*^9}, {
   3.683655816302288*^9, 3.683655818012466*^9}, 3.6845336058575497`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {"1", 
        RowBox[{
         RowBox[{"\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], ">", "0"}]}]},
       {
        RowBox[{"-", 
         FractionBox["1", 
          RowBox[{"12", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
           RowBox[{"\[Sigma]", "\[GreaterEqual]", 
            FractionBox["1", 
             SqrtBox["6"]]}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Mu]", ">", "1"}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "-", 
             RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}]}], 
          ")"}]}]},
       {
        FractionBox[
         RowBox[{"3", "-", 
          RowBox[{"6", " ", 
           SuperscriptBox["\[Mu]", "2"]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}]}]},
       {"0", 
        RowBox[{
         RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
         RowBox[{"\[Sigma]", "<", 
          FractionBox["1", 
           SqrtBox["6"]]}]}]},
       {
        RowBox[{"-", 
         FractionBox[
          RowBox[{
           RowBox[{"3", " ", 
            SuperscriptBox["\[Mu]", "2"]}], "+", 
           RowBox[{"6", " ", 
            SqrtBox["6"], " ", "\[Mu]", " ", "\[Sigma]"}], "-", 
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"6", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
          RowBox[{"36", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]]}], 
        RowBox[{
         RowBox[{"\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], ">", "0"}]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"3", " ", 
           SuperscriptBox["\[Mu]", "2"]}], "-", 
          RowBox[{"6", " ", 
           SqrtBox["6"], " ", "\[Mu]", " ", "\[Sigma]"}], "+", 
          RowBox[{"3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"6", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", ">", "1"}], "&&", 
         RowBox[{"0", "<", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}]}]},
       {
        RowBox[{
         FractionBox["1", "36"], " ", 
         RowBox[{"(", 
          RowBox[{"18", "-", 
           FractionBox[
            RowBox[{"3", " ", 
             SuperscriptBox["\[Mu]", "2"]}], 
            SuperscriptBox["\[Sigma]", "2"]], "+", 
           FractionBox[
            RowBox[{"6", " ", 
             SqrtBox["6"], " ", "\[Mu]"}], "\[Sigma]"]}], ")"}]}], 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", "0"}]}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.676467689734181*^9, {3.683655818551602*^9, 3.6836558232819147`*^9}, 
   3.684533255979312*^9, 3.684634463538602*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FindMaximum", "[", 
  RowBox[{
   RowBox[{"TorquePivotATB", "[", 
    RowBox[{"\[Mu]", ",", "100"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", "1"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"\[Sqrt]", "2"}], "/", "2"}], "]"}]}], "Input",
 CellChangeTimes->{{3.676467904065825*^9, 3.67646791129003*^9}, {
  3.6780146322743587`*^9, 3.678014693782064*^9}, {3.6845336531426153`*^9, 
  3.68453368574295*^9}, {3.68453372267428*^9, 3.6845337504064074`*^9}, {
  3.684538788650648*^9, 3.6845388162791433`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "nrnum"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The function value \
\[NoBreak]\\!\\(-\\(\\(TorquePivotATB[\\(\\(1.`, \
100\\)\\)]\\)\\)\\)\[NoBreak] is not a real number at \[NoBreak]\\!\\({\[Mu]}\
\\)\[NoBreak] = \[NoBreak]\\!\\({1.`}\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::nrnum\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634463796012*^9}],

Cell[BoxData[
 RowBox[{"FindMaximum", "[", 
  RowBox[{
   RowBox[{"TorquePivotATB", "[", 
    RowBox[{"\[Mu]", ",", "100"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", "1"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.684533736315269*^9, 3.68453375082355*^9}, {
   3.684538792200719*^9, 3.684538816693467*^9}, 3.684634463817914*^9}],

Cell[BoxData["0.7071067811865475`"], "Output",
 CellChangeTimes->{{3.684533736315269*^9, 3.68453375082355*^9}, {
   3.684538792200719*^9, 3.684538816693467*^9}, 3.684634463822548*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Comparison Plots", "Subsection",
 CellChangeTimes->{{3.684538773093625*^9, 3.6845387789630013`*^9}, {
  3.684542352618402*^9, 3.6845423568740664`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"bestPushNorm", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ans", "=", 
        RowBox[{"FindMaximum", "[", 
         RowBox[{
          RowBox[{
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"-", 
                  FractionBox[
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], 
                   RowBox[{"2", " ", 
                    SuperscriptBox["\[Sigma]", "2"]}]]}]]}], "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"-", 
                 FractionBox[
                  SuperscriptBox["\[Mu]", "2"], 
                  RowBox[{"2", " ", 
                   SuperscriptBox["\[Sigma]", "2"]}]]}]]}], ")"}], " ", 
             "\[Sigma]"}], 
            SqrtBox[
             RowBox[{"2", " ", "\[Pi]"}]]], "+", 
           RowBox[{
            FractionBox["1", "2"], " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Erf", "[", 
               FractionBox[
                RowBox[{"1", "-", "\[Mu]"}], 
                RowBox[{
                 SqrtBox["2"], " ", "\[Sigma]"}]], "]"}], "+", 
              RowBox[{"Erf", "[", 
               FractionBox["\[Mu]", 
                RowBox[{
                 SqrtBox["2"], " ", "\[Sigma]"}]], "]"}]}], ")"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Mu]", ",", "1"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", 
         RowBox[{"First", "@", "ans"}], ",", 
         RowBox[{"ans", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
        "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "0.01", ",", "1", ",", "0.01"}], "}"}]}], 
     "]"}]}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.684539759369796*^9, 3.684539766770606*^9}, {
  3.68454237504427*^9, 3.684542375371945*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634463899085*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.13871100000000000096456176379433600232`5.1627108159525825", ",", 
   "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.6845397674626293`*^9, 3.684542384795682*^9, 
  3.684634463979389*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"bestPushUni", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ans", "=", 
        RowBox[{"FindMaximum", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"TorquePivotUni", "[", 
            RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Mu]", ",", 
            RowBox[{"Max", "[", 
             RowBox[{
              RowBox[{"1", "-", 
               RowBox[{"\[Sigma]", 
                RowBox[{"\[Sqrt]", "3"}]}]}], ",", 
              RowBox[{"\[Sigma]", 
               RowBox[{"\[Sqrt]", "3"}]}]}], "]"}]}], "}"}]}], "]"}]}], ";", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", 
         RowBox[{"First", "@", "ans"}], ",", 
         RowBox[{"ans", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
        "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "0.01", ",", "1", ",", "0.01"}], "}"}]}], 
     "]"}]}], ";"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"bestPushUniBot", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ans", "=", 
        RowBox[{"FindMaximum", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"TorquePivotUni", "[", 
            RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Mu]", ",", 
            RowBox[{"1", "-", 
             RowBox[{"\[Sigma]", 
              RowBox[{"\[Sqrt]", "3"}]}]}]}], "}"}]}], "]"}]}], ";", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", 
         RowBox[{"First", "@", "ans"}], ",", 
         RowBox[{"ans", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
        "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "0.01", ",", "1", ",", "0.01"}], "}"}]}], 
     "]"}]}], ";"}], "]"}]}], "Input",
 CellChangeTimes->{{3.684539481796115*^9, 3.6845394881208687`*^9}, {
  3.68454136885922*^9, 3.684541404523679*^9}, {3.684541477889475*^9, 
  3.684541492077577*^9}, {3.684542377163807*^9, 3.68454237733956*^9}, {
  3.684542512842882*^9, 3.684542561507465*^9}, {3.6845426182605047`*^9, 
  3.684542634353174*^9}, {3.684543372905573*^9, 3.6845433798502083`*^9}, {
  3.6845434102664003`*^9, 3.68454342476092*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846344640481052`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634464097599*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634464150024*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(FindMaximum :: lstol\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634464183886*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.22325999999999998624211627884506015107`5.369410833684801", ",", "Null"}],
   "}"}]], "Output",
 CellChangeTimes->{
  3.684539491999902*^9, {3.684541372176519*^9, 3.684541405262801*^9}, {
   3.68454148008794*^9, 3.684541492595182*^9}, 3.684542386864703*^9, {
   3.684542514601239*^9, 3.6845425621064043`*^9}, 3.6845426349628696`*^9, {
   3.68454341768991*^9, 3.684543425461896*^9}, 3.684634464230507*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634464282612*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846344643338413`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634464384851*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(FindMaximum :: lstol\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634464418507*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "fmgz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered a gradient that is effectively zero. The \
result returned may not be a maximum; it may be a minimum or a saddle point. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FindMaximum/fmgz\\\", \
ButtonNote -> \\\"FindMaximum::fmgz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634464449525*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "fmgz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered a gradient that is effectively zero. The \
result returned may not be a maximum; it may be a minimum or a saddle point. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FindMaximum/fmgz\\\", \
ButtonNote -> \\\"FindMaximum::fmgz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634464468787*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "fmgz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered a gradient that is effectively zero. The \
result returned may not be a maximum; it may be a minimum or a saddle point. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FindMaximum/fmgz\\\", \
ButtonNote -> \\\"FindMaximum::fmgz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634464501096*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(FindMaximum :: fmgz\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846344645060387`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.29385000000000000008881784197001252323`5.488725608330042", ",", "Null"}],
   "}"}]], "Output",
 CellChangeTimes->{
  3.684539491999902*^9, {3.684541372176519*^9, 3.684541405262801*^9}, {
   3.68454148008794*^9, 3.684541492595182*^9}, 3.684542386864703*^9, {
   3.684542514601239*^9, 3.6845425621064043`*^9}, 3.6845426349628696`*^9, {
   3.68454341768991*^9, 3.684543425461896*^9}, 3.684634464552862*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Last", "[", 
  RowBox[{"{", 
   RowBox[{
   "0.13768099999999999782929194225289393216`5.15947392496363", ",", "Null"}],
    "}"}], "]"}]], "Input",
 NumberMarks->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"bestPushTriATB", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ans", "=", 
        RowBox[{"FindMaximum", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"TorquePivotTriATB", "[", 
            RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Mu]", ",", "1"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", 
         RowBox[{"First", "@", "ans"}], ",", 
         RowBox[{"ans", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
        "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "0.01", ",", "1", ",", "0.01"}], "}"}]}], 
     "]"}]}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.684533733790844*^9, 3.68453373380893*^9}, {
   3.684538649827408*^9, 3.684538714949552*^9}, 3.68453892285102*^9, {
   3.684542378699654*^9, 3.68454237881138*^9}, {3.6845436590584784`*^9, 
   3.684543659444222*^9}, 3.684543720984222*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634464778311*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634464832798*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "sdprec"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Line search unable to find a sufficient increase in the \
function value with \[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digit \
precision. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/FindMaximum\\\", \
ButtonNote -> \\\"FindMaximum::sdprec\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.68463446489025*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846344649412127`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(FindMaximum :: lstol\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634464984808*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.32476899999999997437072352113318629563`5.532174481350415", ",", "Null"}],
   "}"}]], "Output",
 CellChangeTimes->{
  3.684538715723082*^9, {3.68453892449374*^9, 3.6845389296288853`*^9}, 
   3.6845423903632307`*^9, 3.684543660180376*^9, 3.684634465051095*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"bestPushTri", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ans", "=", 
        RowBox[{"FindMaximum", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"TorquePivot", "[", 
             RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], "&&", 
            RowBox[{"\[Mu]", ">", "0"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Mu]", ",", "1"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", 
         RowBox[{"First", "@", "ans"}], ",", 
         RowBox[{"ans", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
        "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "0.01", ",", "1", ",", "0.01"}], "}"}]}], 
     "]"}]}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.676466416448494*^9, 3.676466470673649*^9}, {
   3.6764665929400253`*^9, 3.6764667320443153`*^9}, {3.6764667913415413`*^9, 
   3.676466813481152*^9}, {3.6764670024882803`*^9, 3.676467011715851*^9}, {
   3.684533315639995*^9, 3.6845333574782143`*^9}, {3.684533424740246*^9, 
   3.684533427664321*^9}, 3.684533609947345*^9, {3.6845386232823772`*^9, 
   3.6845386237138233`*^9}, {3.684538695860608*^9, 3.684538724948888*^9}, {
   3.684542380459647*^9, 3.6845423806275063`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634465183243*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634465411089*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846344655223227`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(FindMaximum :: lstol\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.68463446555202*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "5.83918300000000023430857254425063729286`6.786951999533616", ",", "Null"}],
   "}"}]], "Output",
 CellChangeTimes->{3.6845387358336267`*^9, 3.6846344708471212`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"plotBestLocationPivotObject", " ", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"bestPushNorm", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
          RowBox[{"bestPushNorm", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"bestPushTriATB", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
          RowBox[{"bestPushTriATB", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"bestPushUni", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
          RowBox[{"bestPushUni", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"bestPushUniBot", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
          RowBox[{"bestPushUniBot", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}], 
        "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Sigma] of swarm\>\"", ",", 
        "\"\<Optimal push location (\[Mu])\>\""}], "}"}]}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Filling", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"3", "\[Rule]", 
        RowBox[{"{", "4", "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", "Automatic", ",", "Automatic", ",", 
        RowBox[{"ColorData", "[", 
         RowBox[{"97", ",", "3"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Dashed", ",", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"2", "/", "3"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"100", ",", 
             RowBox[{"2", "/", "3"}]}], "}"}]}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{
              RowBox[{"\[Sqrt]", "2"}], "/", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"100", ",", 
             RowBox[{
              RowBox[{"\[Sqrt]", "2"}], "/", "2"}]}], "}"}]}], "}"}], "]"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", 
             RowBox[{"1", "/", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"100", ",", 
             RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}], "]"}]}], 
       "\[IndentingNewLine]", "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Automatic", ",", 
        RowBox[{"{", 
         RowBox[{"0.4", ",", "1.0"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "\"\<Normal\>\"", ",", "\"\<Triangle\>\"", ",", 
            "\"\<Uniform\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"Right", ",", "Top"}], "}"}]}], "]"}]}], ","}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Prolog", "\[Rule]", " ", 
      RowBox[{"Inset", "[", 
       RowBox[{"pivotDrawing", "[", 
        RowBox[{"1", "/", "10"}], "]"}], "]"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", "\[IndentingNewLine]", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<Where to push object pivoted at 0, length 1, to maximize \
torque\>\""}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotMaxTorquePivotObject", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"bestPushNorm", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
          RowBox[{"bestPushNorm", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], 
        "]"}], ",", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"bestPushTriATB", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
          RowBox[{"bestPushTriATB", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"bestPushUni", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
          RowBox[{"bestPushUni", "\[LeftDoubleBracket]", 
           RowBox[{";;", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], 
        "]"}]}], "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<\[Sigma] of swarm\>\"", ",", "\"\<Max Torque\>\""}], 
       "}"}]}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<Normal\>\"", ",", "\"\<Triangle\>\"", ",", "\"\<Uniform\>\""}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Right", ",", "Top"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<Maximum possible torque on object pivoted at 0, length 1\>\""}], 
     ",", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GraphicsRow", "[", 
   RowBox[{"{", 
    RowBox[{"plotBestLocationPivotObject", ",", "plotMaxTorquePivotObject"}], 
    "}"}], "]"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.676466820390336*^9, 3.676466989524275*^9}, {
   3.676467176427374*^9, 3.676467178092044*^9}, {3.676467921880308*^9, 
   3.676467966912457*^9}, {3.676468003785376*^9, 3.6764681638781776`*^9}, {
   3.676468384380714*^9, 3.6764684153499928`*^9}, {3.676707813843314*^9, 
   3.6767079846388817`*^9}, {3.676708047904991*^9, 3.6767081476060266`*^9}, {
   3.6767082139474154`*^9, 3.6767082727058077`*^9}, {3.6767083111956387`*^9, 
   3.67670831472095*^9}, {3.6845337620296717`*^9, 3.684533764907995*^9}, {
   3.684538635321357*^9, 3.684538643391612*^9}, {3.684538747385893*^9, 
   3.6845387563731527`*^9}, {3.684539513008461*^9, 3.684539632658648*^9}, {
   3.6845396872828693`*^9, 3.684539701923581*^9}, {3.684539783126017*^9, 
   3.684539794917314*^9}, {3.684539829955718*^9, 3.684539929322253*^9}, {
   3.684539974204549*^9, 3.684539998544354*^9}, {3.684540045281748*^9, 
   3.68454009313211*^9}, {3.68454017096564*^9, 3.6845401888859377`*^9}, {
   3.6845414193238163`*^9, 3.684541433577652*^9}, 3.684541519396113*^9, 
   3.6845424131349707`*^9, {3.684542653280794*^9, 3.684542657339637*^9}, {
   3.684543360939043*^9, 3.684543366906088*^9}, {3.6845434300387774`*^9, 
   3.684543458328472*^9}, {3.684543604949129*^9, 3.684543617696163*^9}, 
   3.684543728731419*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1: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
/l9QclZ2
        
        "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwlzkdOQgEARdH/wV4Q7IigIMp+3IAJC9B12ruiYu8dOxbQkzg4uW/4ssWZ
yelIEAQhU0SNBhppopkWWmmjnQ46idFFnATd9NBLH/0MMEiSIVIMkybDCKNk
yTFGngLjRJggDP9P/kqdGj9888UnVT54541XXnjmiQqPPHDPHbfccM0Vl1xw
zhmnnHDMEYccsE+ZPXbZocQ2W2yywTprrLLCMkssssA8c8zyBxBkNkU=
             
             "]]]}, {}, {}}, {{}, {}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
             18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
            34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 
            50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 
            66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 
            82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 
            98, 99, 100}]}, 
          {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[{101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 
            112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 
            125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 
            138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 
            151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 
            164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 
            177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 
            190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200}]}, 
          {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[{201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 
            212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 
            225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 
            238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 
            251, 252, 253, 254, 255, 256, 257, 294}]}, 
          {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[{259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 
            270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 
            283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 295}]}}}], {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"\[Sigma] of swarm\"", TraditionalForm], 
        FormBox["\"Optimal push location (\[Mu])\"", TraditionalForm]},
      AxesOrigin->{0, 0.403},
      DisplayFunction->Identity,
      Epilog->{
        Dashing[{Small, Small}], 
        LineBox[
         NCache[{{0, 
            Rational[2, 3]}, {100, 
            Rational[2, 3]}}, {{0, 0.6666666666666666}, {
           100, 0.6666666666666666}}]], 
        LineBox[
         NCache[{{0, 2^Rational[-1, 2]}, {100, 2^Rational[-1, 2]}}, {{
           0, 0.7071067811865475}, {100, 0.7071067811865475}}]], 
        LineBox[
         NCache[{{0, 
            Rational[1, 2]}, {100, 
            Rational[1, 2]}}, {{0, 0.5}, {100, 0.5}}]]},
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->Medium,
      Method->{},
      PlotLabel->FormBox[
       "\"Where to push object pivoted at 0, length 1, to maximize torque\"", 
        TraditionalForm],
      PlotRange->{{0, 1.}, {0.4, 1.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Prolog->InsetBox[
        GraphicsBox[{
          RGBColor[0.6, 0.4, 0.2], 
          RectangleBox[
           NCache[{0, 
             Rational[-1, 10]}, {0, -0.1}], 
           NCache[{1, 
             Rational[1, 10]}, {1, 0.1}]], 
          RGBColor[0, 0, 1], 
          PointBox[{0, 0}], 
          RGBColor[1, 0, 0], 
          PolygonBox[
           NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
              Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
             1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]], 
          GrayLevel[0], 
          PointSize[Tiny], 
          PointBox[CompressedData["
1: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
0ldf65+l7drOxHtVGZYDxG/W+sxe/jmPgROLPBvuEF9MGOrcXULmx9n1wKWq
m73QLXztswbhd6cnH9b7p/XCUOnVXTcjaPRrbp65r1sDkeIqJSkihK/LB3r/
5U+A4IbxFuUOCl/ItsrtGxwEfv+l2pYPiB+VQNLWl8PwSD9kX/NHcfQR/pyj
vGcQzHO7zQflmXiCz6jYMIsN/9qzg4qX01j+2SJNaIALP46rqfw9zsTp+Lr9
c0V7wWztr8Zocv+OgpFUhN8QfA5aqzBJeKB/lk3ZJLbAteW+P3zJfT45a1f+
t6Qh2J6Z7560h/BAiDWrU2kIila/9k4KJ3lQgv9Z7RiH+oaJBR2/Sb/9Le9u
+t4Hn9z3DXdpMlB19UjlG4VisItcxVz2lYGpChrPrO5xgNtVNqRbTaPIPKlY
D/NeMDju7MgmPPtVa+Hc77xWsGFeC6JIXrRMLp134MAAlPamSQa/Y6Bh2Rl3
lfRBmBV2ZrXlAiYueUK7FHl2g2la3MKEPJI/2w5ef2Y7AE1G21d+JH2ezNsY
kG8/AsyIylm7XBgoYzFy0/sh4S2/MANJSXHSL9Xm9+rZsFH8kEC2DY0xwbzZ
CglcMMqL37ZcgYlWPcrsbbpsmMz7zPWwZ2J2sEvSfPNW0Kn+ls1XR/L0yukv
n9u64GGn9NrwMga6e5wUCGpsg6rjC80uyZP8bZqrmyQ1AtdUf6wTJ3w08M6t
9N15LrjcJFfrII0Z/+QbTad6YFu3oeRuwkdvg+itsQ8J77h/aggg/sqJHpuf
H9wGtYKspzc/0Ri/qkfbyaAU5EwC7ZYQ/0jYkvJZqfsfvKvcl70xgUbPuzL6
5XuH4NPvXYvXrya84y/4qn9PK6zOjtve6k1jpmuncM98Nrx7o1myzY2Jds2X
Np9UGYKyTIPOljViqHtqwl3gLAu6bgoqz/tC5jX/69C2JU2wdo+n9fMCCl+9
2qN6cEcT5G3RD/1J+KJELTupXq8F+o+0X794irxf6Kjj/YRGSLYa0LA9T+Fs
h7yR/YJDsElShcWrJH1eSvN6RThg/WNc50QoA0sVjD4su8WCiY3/uq4R3rkr
vvhogWk7jL55trHPYjE6TjlKKf37DcejuqVdL9No9yA0+HJ7P7xPj733hPTl
oxSHD/2MIfCyOqBeQXjMfVN65pPAURhy5+pFkfs2yKk/xxIYglbVT1gxQuNc
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
Vdb+bs+CXVlZ/5S8KFx5YTE+4h+F4wKLn54g6781n++z5c8ByHynn3U8nkYr
ufhE6vUIcCOktpwdpDAykk+99dNvmIefFNSXUuhZFbJo1OQfyDXck6v4KoFW
JdTukyk8aPoVlm/3gYEqz2pWWpZx4JvZncQVnYSvFgiXpfCNwe+o9OV3zCnc
2RXRuPdHA9gkGjU1CZB+OS2QMMe6FS48XmMhS+a3shaV19lzwNwytEmG+MuR
fXetr0Z0g17grxerD9MYrfz6XiWnGQRZGay8CsKbsfmpvnbtsF7Q2/TadwqP
ta5ycJjsgbfV6pe3niDntTHGz/EDC4aX7xY6sYaBu+UXXRttH4UCY+MN+3xo
fLg1NSIingMrh59Fb479/9/P4nH7y6OgDNdjHu5hoFH3+dOOX/vhw+O355/f
JJ//gl/K4GIlrP0OETIXmJipFK60MbsNXm1hVhqnkHxbofXY/y0LNIJtG2mk
0CfxY7CpbCfw/Q3OVQli4oySlJL/Li5gie2zthU00mb2fLrpXfDi6IHW94+Y
KGMtk75t/wg4l9+I/pbNwGLNU6w/LV2gJprtP+szhTECyV0i84bhnnUJ/zty
XqKbQkBRbQS04w01Wkl/WNkJ+ZukEx7ybl/QK8ZEw3/Nd6TL+0GHZxu0WpvC
qCemKSbR/eAeb3Zn4wyFkrlKn5Ut20FfYWJr1GrCH4WR2zXDmsD69kTxgQkK
46JBpmY9D6wWji/zRRprb+g89/pM5kly6/pScXHkO39MJe8GDx5X/rbdTd73
GXOOwxjFhr0NS2rfGkpgkeA3vpPLRqFFWDHfIZecl3iO+bdjJJ/L9EUjWwl/
/gWFuDddsGxxckXAIwrzt97zLNAdhCx6u2FnpDhGuO2NGlXiwtgRu9fHqilU
9y0qiujuAtltflpZpO/k054lKX3uhsVdu04VC1F46Zl/4AFOLxy2Ejb5xCG8
fzlRlvurG3ql0i9oTIjhd9tn55tv9YHEDbWFkSSffr33X60vw4aYXysr34gR
nq7uDb45xIF5df6CC8i8zRGaLf89ohXKag+uNia+1hCiKTzj2gWw7N5fEzsG
Br2QVvhwiA2fUxTP7cgj+RenNRVeNQA/NbUWlA5Q+OvbHxk7DeLvb144VCRQ
+ETbZn2o0CCU5G9eKkj8qlOlTSRgpA8GzEXS046S+VjHPfZcvQYO6MvN0/5I
4ZKalBVhiiw4+F/DT2Fy3guNQEJUjA2zbeNajk4x0DMt8evJ/CG4GUT5yBG/
GYjTMowj32fWN1lXN9DotcZy8sz6UbhivVBZn5+JTQzh+ietXPjROXHIq4PG
ph/yL+RfdILFW6Nr+9ZQaCSqGvjodB+URktTajcZ+Pnu6geDHZ3wKNftYgXh
893J7xWjvrBBV+jvLZFKUVwWviZdTW4EjH4kxI6N0fjFrLZuoJ0DNy/U3rry
k8aKG6Kbsxx64MemJoUtDAoNSi9nCT4fgtqjbhLrkmmsv+umnpbaDooByp/D
CY978Ll89n3Dhq7zl19mx4mhz5mSs6fShqE6e/7O6dc0yry/PhPgz4Xm1T5z
XuTTyNf/39jdnkGw6DuXv1uciaWx2/ZRab1QLpOscvMCA007+fulHDqg6YTI
jeTZFC5Ys2PN2mI2SNsvqGp8T+PZMq250zNcKDd8tahCnYnVbPa2eZbDECPh
pV9I1nNYcHPEKp8OSNNVnHnhT2HCdNizYNVGAKfy6PzrJA+Msk5mbeDAPUsn
5ZgmGg2Ewlv5Pdkgk3a9qJ343ZDrF/aI5iCcO5jyfKqY+Nxkz5KBrYPAVnHi
HNsrjoUFLG5MQgfILT+tFU7uH+v2VKPd+06w+cffhDwat77bNu+o7ggITsbx
FmSJYeUXBa32bW2gnSGV7nmdgX0NH6klvl3gv3Qy2fATAxUCRUQdDZpB8r7L
Fgfio9fuyNhdLesHbcFl5efmUvjj2Re+N0u7IOCsXuyXCzQ+05k/cmMRC+Z/
+vNOqpuBaxxnZw+T+VOYHnfYKMDAoV6ZuQVk/s5Hs26dSaFQp0jTxnLnCMTr
ZQypMZjYNhymb8UZgokXEbyHd2mMOzw2lspqBr/C7IOjpC8eyB3eMef5KKzm
oxOtt9N452UFy1eMB5q+V/OlJsn+eR62ld3Mg4vyw8emoklfL3NfKXSyH6wS
1i+YRVP4WvMH3kweguUJpyJPqJL7tLp86sRmDsw5xf9F9g8Tj5vX298uIv1r
E7L3k6UoamoyM8o2jIBwdOxHTWsai9jzEwe+j4DQq/gnq2dIvr1sGbhYxIOU
0yrXQh1ofOW49KPwfC5cGN2rHE78J8iY9ynUtQNokT0at+vEUFX5brIh8UmM
M5p0OSSOWvEJYP+xA0T2GgTUuYuhe0i3ofHeAZhdNz/nxWIaT995HSbtMAje
be8OKLIpnJPtfDmeMQ7822L2DwozUCpM/86dbZ0kT8T0yxPEkToh/cX3TxOs
Dy25f3Q5hRwVxkIJmtz3Xz1pn/woDIrVK1i0AKE8P7cvR5SJa3d2nLl7sgO2
zZr70uD//480bpGqsbQcLvfIFhT20/h1g/ze34TfdaRkb62hmMi3fWuI740+
eFYZblREnify5/mQyIERsGt5vKyzioGjgtLXTmT3Qq/QDa1z9kx85L7y+tmz
HPC0huKqk+IkjwXG8x37IGduhOOmRTR6rpm882b7ENCbB8MDCT/zovQKbh8c
gZYfj7b+pkkfaivpby7og8S6ja4iyESGh/rc6m42cF8lyjz1YaA7T2V50oNe
UHbujPn/30PqZw2tC9fnQZfq/vbUeuKL2jbmPtETsHzYYHHCCgZmZzctHPjA
BalC3TH75UzcYCl3IOsVDz4wOqUyZJlYP356i9OXYch24kYkAI0H/h6uMl3T
C99K37s43RDHwH/VrVtSuSCdNY17SR6vnG7b6K1cDrxbfPUG1gwsH/kj2zin
C/L00qt+/P/3W6i+MEOBBf99Si+Or6TQv6L93hvJbpjUtnv+XI3GfOdjlSqi
43Dz5Zr8BBaFa7+y5AuEeiDuhnCOQD2N23Yp1s52HwWmdtw1Q+IPpYl2mfZn
iT/XMzRD2pmYenBc3ZfRAr8eSkT3PKaxOeHsSPH2XtA2ke9XWCaG/bMsKxec
aweG4GXW+FMGDud2H7s7nwMOWWs9/MpIX+00SQgwbYbdSytjnzgx8VWh8rGD
5hyoHn1ouciQQuaUQttM1TAMBPON3iX5q3KOJfrAi/hrxeFtMsTPD29XO36e
8Kjn4dDaalFxTNf9ZoUvuOAv+3MyOZTCVR6P8l6+4sA6M4sCH8KTXd7KNzhk
fVTgjjJRUwZ69E15c7idcNNHTefqMxqltS/UaWb3Qa+YflGygzjadmx85HiX
B8/3Z6e89GOiX4blej+dXljFGz+8mMyTWqNEqHpBG4RwZ6W57CP9n3PCwSyj
E6ZiLp9PXiGBxZ8F/obYj0LydfFGWfL5/wOrsVGa
           "]]}, 
         PlotRange -> {{-1, 3}, {-8, 2}}, AxesOrigin -> {0, 0}]],
      Ticks->{Automatic, Automatic}], {192., -116.80842387373012`}, 
     ImageScaled[{0.5, 0.5}], {360, 222.49223594996212`}], InsetBox[
     FormBox[
      TagBox[
       FormBox[
        GraphicsBox[{{{}, {{}, {}, 
            {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
             0.011111111111111112`], AbsoluteThickness[1.6], 
             LineBox[CompressedData["
1:eJwtlAtMU2cUxxERC4gukzp1DMTNFXUmG6CbMPgTVxDsRASHm+BwDHW+Ikhm
AAfIhjEs2zTI3NrxEGGLyAABgxARBoJQaGsf0JZ3X1BKeQUpkYljbT0nubn5
7r3fOef//53vesSdjzhua2NjE2++LPdLLhV71alZeFgyVh1tP41X61yYOG2m
Ku8p1LldMR6sK4C48kqN64VJel+C/L0/eR5vmACPa4lS2O04xX62ZgL11u8r
UGb7bKPXGSPMC/OTKix+JD68WjhO++/D61Dol00+43BUFCf4Oz5AF+ulqKzI
AGs6bj3+zdyz/chaA7bGXGsxeTYgOOjNH09mj1E/jdjqcfdW5vIxlJh3K4r/
AdMhqzEuU48Ja71mJK1ULols9fDxtsRjZGyZC8m5Okr1W2E/XSdIXzOKxyZP
c4U2+Po4/XeGNwInaz/tkIU6q3Z6jiDCWrAD4XkHyhvqdKSXj/EgbouOo4Mm
1ZKwE/xrN0pvqrXUrwCaT3dvaErRItHSXoIQnJ2uXWEuWvJHhOx26Ru+VRrY
WEMMPS/mWHK4hvSIwetfilo+q0aI2lJAAt6pwAD5r2rSJ8EzH4bXpJ8a11ss
AqQ467Q5m61TwSrXWwan69lRyl9UsMpRyDBfnbyqxE9F+ruxLeRwOrtnGO6W
dtx6UOu+3p774TD50YNu1mLzroIhnDxhCTmM2abaVQ5D5I8C9g3+SyuTB2HJ
5lKhQOuCx+Ja4wD5pUS1h+76xrgBzFvSmZRIY936ym6wn/zrxYrey6/XR/cj
wDoAfVjYU5HlPtRHfvZhqIC9xi2+D9b2rvTDjhFRw5vsJX8HkBAQve9Sai+E
AksM4LMZduWfjr3k9yBu+DSpl/KVYFobHMILbeo7CT5K8n8IqvnsdYNCBazp
Yobh9N0XHTtOK4iHCl5ldYJQBwXpUUFYERu8oUxOfFRwYMTPZh2Qkz4VPGOX
vX9xvod4qfHJLqa9orCH9KoR6Vz8bg6nh/ipwcgtn8lZ6Cb9GuwfvpPQVtpN
PDVgJzbHrovpxqt0Giw78t7mpNe6ia8Wrn3lrfwnMvJHi0ctaQuMDBnx1sKJ
U+ayabeM/NIh5IO3GEtzUuKvQ3J1cOzNain5p8PIpr98FYlSmocRGP9w49R4
ScnPEQTm+gldTRKajxH8Hnk6y75eQv6Ooq/Iu/brdAnNyygM4rQtnkES8nsU
5cZB5xBnCZ138zlNeOlWJxeT/3qEa9cnnysS0zzpMfA9r/joOTHxGMM3tbKc
dF8x8RjDby/l3CcMMfEYw8fH9fLP7z0lHub/guzOtrCDT4mHAdLKy8+j50TE
w4DBu0v3Erki4mFAw+32+IxAEfEYBytv+NG3BiHxGEd6BWchKFdI8zmOoBS9
Sh0oJB5GPPwhs81vWkA8jGA17kwJLhQQDyP8/VfsM4ULiMcEfvYuXfSzExCP
CSS5Fbavru8iHhOIYZ4NizvfRTwmcZvFzN/O6iIek5h/0Pn2MVUn8ZjEBX5r
tYnXSTymcMIv7KImqpN4TOHQi8VZV5dO4jGFrkCmbZ6UTzymsdHEFEXl8InH
NP6+ePYpO5JPPKax6vl+/lEmn3jMmOvdf8JVduB/Gv0hXg==
              "]]}, 
            {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
             0.011111111111111112`], AbsoluteThickness[1.6], 
             LineBox[CompressedData["
1:eJwtkw001XcYx6+xKDozahbSMpOkk7cts+obZx2bmrfSTpjhiKJGQzOVckov
LFnrnIpixaZykhWSiuUlL9d9d7uXq+u+eblvaCXVUc29Pc85//M/v//v/3ue
5/v9PL+lCWkR299jMBiJs4/hvW9BTZA85wh6CpcdZH45gXfrMwjRdx49mD2O
Rqd8bXhjGQIWmZ21u6en/UpYfeYe8JuZHiXnDXEVQqem9YJwHe4Y/69B0/Xg
i0MVWswuZr/8A9MP1/RdeqWh83VgrH1hYbFVg3miivS1827j2t1Y/zf1ahjT
nb+Dc7t1+36yV2N5zKnWKbd7mHvdyyvg8Bj104ythf7BP0yOonL2tKjiX/i7
XTt4JX4UOmO9B2gJSj9pLhqBr48h2mD3gUdqbNgI1W9HuuOBvGLWMNqm3GYr
dOD49zclh0KGYWnspxPpd/dE2ghUiDAW7AIjxrF9WbSK9HYjbq7QoXJECUWO
IWEPjv+5sjglS0n99uLi6rO1seZK7DG0l87C5YXthxIvKMgfNvo9/U7G+SrA
MAYXM1tDZlZz5KSHi9L216XcXXJ8IzcU4KE5o0ZnPV9O+nhYk5qyXHZDhuJW
gwA+OgM7NrtGymCU6yOAdYFp2q2XQzDKEQmw/KpdhFPIEOnvQ/Wmw75Xq6RY
YmjHSYgoW5MV0XOk5IcQFpEHzD1SHiM5yRCP8H7iw2MWgkHyR4QQ5t1c4fpB
GLItqBFhU22L38+3JOSXGKclOzY2uUvw3JBuSowz3wY+O/r3APnXj/3MrKW1
rgNYZxyAAXiGVPnNr+4nPwcwNy+uOsunH8b28iX4L7kt8UGLmPwdRKX810Xd
oWKweg0xiPkNbYeSlCLy+zH+2jK5LzNHhIXGBqWo48R4chaIyH8p/D51ttty
8xGM6WKGEK9UmykiHhEPGQ484a/Y9lxIemRIYCg/Lr0gJD4y9DivrCnYICR9
Mlg0/2Fv9aSPeMnhyhJzzMr7SK8cH7kc+yU6tI/4yVEiWTI6bdJH+hU4vVlq
29YgIJ4KPGGHz6naLcC7dAqId82wilwFxFeJ4GCHrCQ5n/xR4rH3zWf2ZXzi
rUS5Vu9WEsMnv1QYSNB08B35xF+FzDPDm+qkPPJPhYxslcmqyzyah2F4VPTK
fZJ55Ocw3L2enqtbyaP5mN23/CSnYopL/o5g/3bTvU+buTQvI/jqiL3tuRNc
8nsE096MpPxILt33UUw/dZlX68wl/0exI1T4ub2CQ/M0ig1F66Jc8jjEYwzH
syt/T3HmEI8xBLLfPuzvYBOPMVgNLK7/MZVNPMbgbfvFoMaGTTzUcMm0yU65
xyIeasTnte5lJ7OIhxrJobw084Us4qGBn8d06Zz2XuKhwRU1WPcze2k+NVAt
Lk9esqyXeGghNtdtc5IwiYcWdg6wqylmEg8tHAqri1uDmMRDh4jc0FVhDCbx
0OHWUD17Y1MP8dDByjr/9rWsHuKhR8zbrJIE7x7ioYdZzqnCnZPdxEMP94ZL
r+tvdBOPcZTsfHN/XXo38RhHsWbn5CuvbuIxjjDbQEvFsy7iMYEygUigbewi
HhOQF7yIss7tIh4TWJxR+TLo6y7iMQlp0cR3hZZd+B9XFRhO
              "]]}, 
            {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
             0.011111111111111112`], AbsoluteThickness[1.6], 
             LineBox[CompressedData["
1:eJwtkwtQVGUYhsGBkcGmkQYDCTGMHFQ05ZZDwmuJQjMocommcStCwEpQwSIB
yyYlGskJIgtxIgQTUILoujTk4F5Y2BvsLsvCsqx732WvTomNpTtxjt8/c2bn
nLPn+7/vfZ4/tuR4ftmKgICA0uWL+a0PH8gy1p3DwdqQPdHVPjy6/wqdf63+
dKfFC25MgyuP24HVFWsnCou89P4qSq2xj1WNe9B+iVl94L6xOfdCmgfD7P8H
EDmb+GVfvxvLN8tPhnAs7wW1MMZN3/+CMfGeSFOzC6Ga7hPpob9jfWbOIf8K
F9hyl4ZR82dhR9T7TmzifMFbih+BIvV1Y6p9kfq5ic0/lsUVvLaIq8tfa7pH
8cmmY0eOSxxws/vdgq6r5npTugPJScziIyn6jKdn0E77C/D5xcbtglg7+Evx
yzsIYX28+aSh1YZVbD8iZHzW9tuDYBvy2Q3H8U3glfuRp6w07wR8dX27UpwW
mOqYgmJk3R06k8exUL9SdFb+wauUm1HFtHdChvs2XvD53WbKR478Ykn2tZ9M
CGDXFG7MqZp4cSaaZwpBBTq5/msjso3MBgpwpJaw/0KMNJ8Cv+71FEbUG9DM
YwZQ4kbIh/Gt2ttgx01SYfsrd07eEuvBjqNRoSrf8GytdIHmn4Yud4izRq/D
eqadGDUe1mvT4vzzlIcaZY055W9umceRcmbNoCouQvF9qZby0eDhvuyme71z
YKqFD2gQ9J3maMU/s5TXLNRRge+k5c7iHlNuaRbtp1s+7h3UUH5zMOPuk2GR
GmSwAmhx4NURrr5xhvLU4ue/07ed96vBttcwj8MvLqja6tWUrw4Pdc8kXPZP
QyZllg7inZ1dWxqnKe8FKPZvOOUJn8YatkE9Rj5IUDb1qCh/PdJTahzcDBXY
cpzbCIlKydmqVRIPA9YlNe/tqVXSPAb4gpIyndFK4mPAe+sqi2/yFTSfAfIf
Bpy+SgXxMqL3XMPK3KcUNK8ROyLOFg1KpoifEaKagS77R1M0vwnmsKLLiuQp
4mkinpN4VM6E8s5v2zgHJ4mvmfjKKR8z+m1vDTe+LCfeZuIto7ws2Nee7ygp
kBF/C/GXUn4WFJbUyw5XSMkHK/kgoTytqFvQb3yuVUJ+WMkPCeVrQ8UTZ5da
xsTki418EVPeNjzIGlXUB4vpvNvhZ/2ZoPztCETitn8PTJBPdvJpnHg4sDFz
lJPcNU48HOTXOPFwYENsdeLbfhHxcJBvIuKxiP4Oz1Z7iYh4LJJ/IuKxiKZD
K0PDJ8eIh5N8HCMeTmTsSLhe/NIY+ekkP4XEwwWuciYvZ0RIPFzkq5B4uDAR
7I8q2SUkHm7yV0A83Jjvbr3yPE9APNzks4B4eCB71zl/dL+AeHjIbwHx8GAp
dffaawt84uEl3/nEw4uwQdnTF6v5xMNL/vOJhw9zwr4K7yo+8fDReeARDx/8
PS2nK/t4xOMOnQ8e/gdEkiPL
              "]]}}, {}}, InsetBox[
           TemplateBox[{"\"Normal\"","\"Triangle\"","\"Uniform\""},
            "PointLegend",
            DisplayFunction->(FormBox[
              StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False], TraditionalForm]& ),
            Editable->True,
            InterpretationFunction:>(RowBox[{"PointLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "True", ",", "True"}], "}"}], 
                    "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
               "]"}]& )], Scaled[{0.99, 0.99}], ImageScaled[{1, 1}],
           BaseStyle->{FontSize -> Larger},
           FormatType->StandardForm]},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{
           FormBox["\"\[Sigma] of swarm\"", TraditionalForm], 
           FormBox["\"Max Torque\"", TraditionalForm]},
         AxesOrigin->{0, 0},
         DisplayFunction->Identity,
         Frame->{{False, False}, {False, False}},
         FrameLabel->{{None, None}, {None, None}},
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImageSize->Medium,
         Method->{},
         PlotLabel->FormBox[
          "\"Maximum possible torque on object pivoted at 0, length 1\"", 
           TraditionalForm],
         PlotRange->{{0, 1.}, {0, 0.9826794919243103}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}},
         Ticks->{Automatic, Automatic}],
        TraditionalForm],
       InterpretTemplate[Legended[
         Graphics[{{}, {{{}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              Line[CompressedData["
1:eJwtlAtMU2cUxxERC4gukzp1DMTNFXUmG6CbMPgTVxDsRASHm+BwDHW+Ikhm
AAfIhjEs2zTI3NrxEGGLyAABgxARBoJQaGsf0JZ3X1BKeQUpkYljbT0nubn5
7r3fOef//53vesSdjzhua2NjE2++LPdLLhV71alZeFgyVh1tP41X61yYOG2m
Ku8p1LldMR6sK4C48kqN64VJel+C/L0/eR5vmACPa4lS2O04xX62ZgL11u8r
UGb7bKPXGSPMC/OTKix+JD68WjhO++/D61Dol00+43BUFCf4Oz5AF+ulqKzI
AGs6bj3+zdyz/chaA7bGXGsxeTYgOOjNH09mj1E/jdjqcfdW5vIxlJh3K4r/
AdMhqzEuU48Ja71mJK1ULols9fDxtsRjZGyZC8m5Okr1W2E/XSdIXzOKxyZP
c4U2+Po4/XeGNwInaz/tkIU6q3Z6jiDCWrAD4XkHyhvqdKSXj/EgbouOo4Mm
1ZKwE/xrN0pvqrXUrwCaT3dvaErRItHSXoIQnJ2uXWEuWvJHhOx26Ru+VRrY
WEMMPS/mWHK4hvSIwetfilo+q0aI2lJAAt6pwAD5r2rSJ8EzH4bXpJ8a11ss
AqQ467Q5m61TwSrXWwan69lRyl9UsMpRyDBfnbyqxE9F+ruxLeRwOrtnGO6W
dtx6UOu+3p774TD50YNu1mLzroIhnDxhCTmM2abaVQ5D5I8C9g3+SyuTB2HJ
5lKhQOuCx+Ja4wD5pUS1h+76xrgBzFvSmZRIY936ym6wn/zrxYrey6/XR/cj
wDoAfVjYU5HlPtRHfvZhqIC9xi2+D9b2rvTDjhFRw5vsJX8HkBAQve9Sai+E
AksM4LMZduWfjr3k9yBu+DSpl/KVYFobHMILbeo7CT5K8n8IqvnsdYNCBazp
Yobh9N0XHTtOK4iHCl5ldYJQBwXpUUFYERu8oUxOfFRwYMTPZh2Qkz4VPGOX
vX9xvod4qfHJLqa9orCH9KoR6Vz8bg6nh/ipwcgtn8lZ6Cb9GuwfvpPQVtpN
PDVgJzbHrovpxqt0Giw78t7mpNe6ia8Wrn3lrfwnMvJHi0ctaQuMDBnx1sKJ
U+ayabeM/NIh5IO3GEtzUuKvQ3J1cOzNain5p8PIpr98FYlSmocRGP9w49R4
ScnPEQTm+gldTRKajxH8Hnk6y75eQv6Ooq/Iu/brdAnNyygM4rQtnkES8nsU
5cZB5xBnCZ138zlNeOlWJxeT/3qEa9cnnysS0zzpMfA9r/joOTHxGMM3tbKc
dF8x8RjDby/l3CcMMfEYw8fH9fLP7z0lHub/guzOtrCDT4mHAdLKy8+j50TE
w4DBu0v3Erki4mFAw+32+IxAEfEYBytv+NG3BiHxGEd6BWchKFdI8zmOoBS9
Sh0oJB5GPPwhs81vWkA8jGA17kwJLhQQDyP8/VfsM4ULiMcEfvYuXfSzExCP
CSS5Fbavru8iHhOIYZ4NizvfRTwmcZvFzN/O6iIek5h/0Pn2MVUn8ZjEBX5r
tYnXSTymcMIv7KImqpN4TOHQi8VZV5dO4jGFrkCmbZ6UTzymsdHEFEXl8InH
NP6+ePYpO5JPPKax6vl+/lEmn3jMmOvdf8JVduB/Gv0hXg==
               "]]}, {
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              Line[CompressedData["
1:eJwtkw001XcYx6+xKDozahbSMpOkk7cts+obZx2bmrfSTpjhiKJGQzOVckov
LFnrnIpixaZykhWSiuUlL9d9d7uXq+u+eblvaCXVUc29Pc85//M/v//v/3ue
5/v9PL+lCWkR299jMBiJs4/hvW9BTZA85wh6CpcdZH45gXfrMwjRdx49mD2O
Rqd8bXhjGQIWmZ21u6en/UpYfeYe8JuZHiXnDXEVQqem9YJwHe4Y/69B0/Xg
i0MVWswuZr/8A9MP1/RdeqWh83VgrH1hYbFVg3miivS1827j2t1Y/zf1ahjT
nb+Dc7t1+36yV2N5zKnWKbd7mHvdyyvg8Bj104ythf7BP0yOonL2tKjiX/i7
XTt4JX4UOmO9B2gJSj9pLhqBr48h2mD3gUdqbNgI1W9HuuOBvGLWMNqm3GYr
dOD49zclh0KGYWnspxPpd/dE2ghUiDAW7AIjxrF9WbSK9HYjbq7QoXJECUWO
IWEPjv+5sjglS0n99uLi6rO1seZK7DG0l87C5YXthxIvKMgfNvo9/U7G+SrA
MAYXM1tDZlZz5KSHi9L216XcXXJ8IzcU4KE5o0ZnPV9O+nhYk5qyXHZDhuJW
gwA+OgM7NrtGymCU6yOAdYFp2q2XQzDKEQmw/KpdhFPIEOnvQ/Wmw75Xq6RY
YmjHSYgoW5MV0XOk5IcQFpEHzD1SHiM5yRCP8H7iw2MWgkHyR4QQ5t1c4fpB
GLItqBFhU22L38+3JOSXGKclOzY2uUvw3JBuSowz3wY+O/r3APnXj/3MrKW1
rgNYZxyAAXiGVPnNr+4nPwcwNy+uOsunH8b28iX4L7kt8UGLmPwdRKX810Xd
oWKweg0xiPkNbYeSlCLy+zH+2jK5LzNHhIXGBqWo48R4chaIyH8p/D51ttty
8xGM6WKGEK9UmykiHhEPGQ484a/Y9lxIemRIYCg/Lr0gJD4y9DivrCnYICR9
Mlg0/2Fv9aSPeMnhyhJzzMr7SK8cH7kc+yU6tI/4yVEiWTI6bdJH+hU4vVlq
29YgIJ4KPGGHz6naLcC7dAqId82wilwFxFeJ4GCHrCQ5n/xR4rH3zWf2ZXzi
rUS5Vu9WEsMnv1QYSNB08B35xF+FzDPDm+qkPPJPhYxslcmqyzyah2F4VPTK
fZJ55Ocw3L2enqtbyaP5mN23/CSnYopL/o5g/3bTvU+buTQvI/jqiL3tuRNc
8nsE096MpPxILt33UUw/dZlX68wl/0exI1T4ub2CQ/M0ig1F66Jc8jjEYwzH
syt/T3HmEI8xBLLfPuzvYBOPMVgNLK7/MZVNPMbgbfvFoMaGTTzUcMm0yU65
xyIeasTnte5lJ7OIhxrJobw084Us4qGBn8d06Zz2XuKhwRU1WPcze2k+NVAt
Lk9esqyXeGghNtdtc5IwiYcWdg6wqylmEg8tHAqri1uDmMRDh4jc0FVhDCbx
0OHWUD17Y1MP8dDByjr/9rWsHuKhR8zbrJIE7x7ioYdZzqnCnZPdxEMP94ZL
r+tvdBOPcZTsfHN/XXo38RhHsWbn5CuvbuIxjjDbQEvFsy7iMYEygUigbewi
HhOQF7yIss7tIh4TWJxR+TLo6y7iMQlp0cR3hZZd+B9XFRhO
               "]]}, {
              Hue[0.1421359549995791, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              Line[CompressedData["
1:eJwtkwtQVGUYhsGBkcGmkQYDCTGMHFQ05ZZDwmuJQjMocommcStCwEpQwSIB
yyYlGskJIgtxIgQTUILoujTk4F5Y2BvsLsvCsqx732WvTomNpTtxjt8/c2bn
nLPn+7/vfZ4/tuR4ftmKgICA0uWL+a0PH8gy1p3DwdqQPdHVPjy6/wqdf63+
dKfFC25MgyuP24HVFWsnCou89P4qSq2xj1WNe9B+iVl94L6xOfdCmgfD7P8H
EDmb+GVfvxvLN8tPhnAs7wW1MMZN3/+CMfGeSFOzC6Ga7hPpob9jfWbOIf8K
F9hyl4ZR82dhR9T7TmzifMFbih+BIvV1Y6p9kfq5ic0/lsUVvLaIq8tfa7pH
8cmmY0eOSxxws/vdgq6r5npTugPJScziIyn6jKdn0E77C/D5xcbtglg7+Evx
yzsIYX28+aSh1YZVbD8iZHzW9tuDYBvy2Q3H8U3glfuRp6w07wR8dX27UpwW
mOqYgmJk3R06k8exUL9SdFb+wauUm1HFtHdChvs2XvD53WbKR478Ykn2tZ9M
CGDXFG7MqZp4cSaaZwpBBTq5/msjso3MBgpwpJaw/0KMNJ8Cv+71FEbUG9DM
YwZQ4kbIh/Gt2ttgx01SYfsrd07eEuvBjqNRoSrf8GytdIHmn4Yud4izRq/D
eqadGDUe1mvT4vzzlIcaZY055W9umceRcmbNoCouQvF9qZby0eDhvuyme71z
YKqFD2gQ9J3maMU/s5TXLNRRge+k5c7iHlNuaRbtp1s+7h3UUH5zMOPuk2GR
GmSwAmhx4NURrr5xhvLU4ue/07ed96vBttcwj8MvLqja6tWUrw4Pdc8kXPZP
QyZllg7inZ1dWxqnKe8FKPZvOOUJn8YatkE9Rj5IUDb1qCh/PdJTahzcDBXY
cpzbCIlKydmqVRIPA9YlNe/tqVXSPAb4gpIyndFK4mPAe+sqi2/yFTSfAfIf
Bpy+SgXxMqL3XMPK3KcUNK8ROyLOFg1KpoifEaKagS77R1M0vwnmsKLLiuQp
4mkinpN4VM6E8s5v2zgHJ4mvmfjKKR8z+m1vDTe+LCfeZuIto7ws2Nee7ygp
kBF/C/GXUn4WFJbUyw5XSMkHK/kgoTytqFvQb3yuVUJ+WMkPCeVrQ8UTZ5da
xsTki418EVPeNjzIGlXUB4vpvNvhZ/2ZoPztCETitn8PTJBPdvJpnHg4sDFz
lJPcNU48HOTXOPFwYENsdeLbfhHxcJBvIuKxiP4Oz1Z7iYh4LJJ/IuKxiKZD
K0PDJ8eIh5N8HCMeTmTsSLhe/NIY+ekkP4XEwwWuciYvZ0RIPFzkq5B4uDAR
7I8q2SUkHm7yV0A83Jjvbr3yPE9APNzks4B4eCB71zl/dL+AeHjIbwHx8GAp
dffaawt84uEl3/nEw4uwQdnTF6v5xMNL/vOJhw9zwr4K7yo+8fDReeARDx/8
PS2nK/t4xOMOnQ8e/gdEkiPL
               "]]}}}, {}}, {
          DisplayFunction -> Identity, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
           PlotRange -> {{0, 1.}, {0, 0.9826794919243103}}, DisplayFunction -> 
           Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {"\[Sigma] of swarm", "Max Torque"}, 
           AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
           Frame -> {{False, False}, {False, False}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
           PlotLabel -> 
           "Maximum possible torque on object pivoted at 0, length 1", 
           PlotRange -> {{0, 1.}, {0, 0.9826794919243103}}, PlotRangeClipping -> 
           True, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
         Placed[
          Unevaluated[
           PointLegend[{
             Directive[
              PointSize[0.011111111111111112`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              PointSize[0.011111111111111112`], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              PointSize[0.011111111111111112`], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]]}, {"Normal", "Triangle", "Uniform"}, 
            Joined -> {{True, True, True}}, LabelStyle -> {}, LegendLayout -> 
            "Column", 
            LegendMarkers -> {{False, Automatic}, {False, Automatic}, {
              False, Automatic}}]], {Right, Top}, Identity]]& ],
       AutoDelete->True,
       Editable->True,
       SelectWithContents->False,
       Selectable->True],
      TraditionalForm], {576., -116.80842387373012`}, {
     Center, Center}, {360., 222.49223594996212`}]}, {}},
  ContentSelectable->True,
  ImageSize->{780., 245.61684774746024`},
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.684634471318781*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1: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
3649XSc=
        
        "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwlzkdOQgEARdH/wV4Q7IigIMp+3IAJC9B12ruiYu8dOxbQkzg4uW/4ssWZ
yelIEAQhU0SNBhppopkWWmmjnQ46idFFnATd9NBLH/0MMEiSIVIMkybDCKNk
yTFGngLjRJggDP9P/kqdGj9888UnVT54541XXnjmiQqPPHDPHbfccM0Vl1xw
zhmnnHDMEYccsE+ZPXbZocQ2W2yywTprrLLCMkssssA8c8zyBxBkNkU=
             
             "]]]}, {}, {}}, {{}, {}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
             18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
            34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 
            50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 
            66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 
            82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 
            98, 99, 100}]}, 
          {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[{101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 
            112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 
            125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 
            138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 
            151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 
            164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 
            177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 
            190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200}]}, 
          {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[{201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 
            212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 
            225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 
            238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 
            251, 252, 253, 254, 255, 256, 257, 294}]}, 
          {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[{259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 
            270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 
            283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 295}]}}}], {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"\[Sigma] of swarm\"", TraditionalForm], 
        FormBox["\"Optimal push location (\[Mu])\"", TraditionalForm]},
      AxesOrigin->{0, 0.403},
      DisplayFunction->Identity,
      Epilog->{
        Dashing[{Small, Small}], 
        LineBox[
         NCache[{{0, 
            Rational[2, 3]}, {100, 
            Rational[2, 3]}}, {{0, 0.6666666666666666}, {
           100, 0.6666666666666666}}]], 
        LineBox[
         NCache[{{0, 2^Rational[-1, 2]}, {100, 2^Rational[-1, 2]}}, {{
           0, 0.7071067811865475}, {100, 0.7071067811865475}}]], 
        LineBox[
         NCache[{{0, 
            Rational[1, 2]}, {100, 
            Rational[1, 2]}}, {{0, 0.5}, {100, 0.5}}]]},
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->Medium,
      Method->{},
      PlotLabel->FormBox[
       "\"Where to push object pivoted at 0, length 1, to maximize torque\"", 
        TraditionalForm],
      PlotRange->{{0, 1.}, {0.4, 1.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Prolog->InsetBox[
        GraphicsBox[{
          RGBColor[0.6, 0.4, 0.2], 
          RectangleBox[
           NCache[{0, 
             Rational[-1, 10]}, {0, -0.1}], 
           NCache[{1, 
             Rational[1, 10]}, {1, 0.1}]], 
          RGBColor[0, 0, 1], 
          PointBox[{0, 0}], 
          RGBColor[1, 0, 0], 
          PolygonBox[
           NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
              Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
             1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]], 
          GrayLevel[0], 
          PointSize[Tiny], 
          PointBox[CompressedData["
1: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
9cjpHigyX3FcxZPC1IUPHjLvDUHb/qu713+ncFG+VUi/UCvMMFrLdJZTWHhY
b8qZ6ge+9kLby5ZkXgdGiv+pdAK7ODXF7Sbh4XvyJwI+jcKVte/+JEcy0L4s
Sd5NfwJeZH4wvHqIiZFl/vzizzrgjUvjorUPmBhQo1y5gDsMK3z/bXAbpDHz
2/3xk5L9kJrEWCHcRqNrkFV42cVu8GyXlW6MEsexrf5Dkqn98ODmtyVptQzc
qiCzpPTrFLjar8s49JzCV2U+GmEdo7BmjvquyRYafy68InoLSf6YD7axWUyU
WyMSDleGQEiy9dJYOoWXjv8yuPGIB7yDE/n5osSPtBeY39HqgUFF2PNNn4lj
2V8k9UifV849mvn9I+FDZaMTf3U64fY6I2eTUQp1lorMlzDtg9WnvlTNI/vj
mTIj1jzYC+8GDWpCyH6q5Y3Ee36bgHKBqt0idkycP5QIZ3+1g2q92LrSr0z0
ly2ZtSL6FwQU/yrYGsrES04XHfK3cWF1c0maM/F5dvb5te4LeWAdk3ozaFQc
Py045VYgwwPn+otfI55ReMw7eS0ruA0uPc8JnRphYLHl+asNF3ig3C5beEKG
xq6mXWFizT0g1FuvM4cmfHXlpKbt6lbwcS1sMrhDo9U6xVedeziQLFljknyb
wmvHVl7MuzsD973iXNx+MVHFJZ8HHp3At8H1c5EyhS8XPM431uOB6tcAgbE+
MTy/ofa68JleaJBaxTW+S+Ob1guPFlqRfNwd7zroycCLEHgqU34MzJtlfRc8
pvF+6oDs8wYe3JblBpw8yMAsCROF0sdjkGqn0+WtSvjosa6huWI3CNnp9j29
SKOKv8OizZkTMG14+pj8FvL8DZzyfZwOCFAQiYuoZ+DGjIKfZXe4sKqt1GCK
8HtwU93C721c0NX+VzZ9m4kPlD79bkoegUdfqJfuBxh4aZ2zz+Ov9fC1TW/i
LcmbO24jEguIz7/je9nlaMvE3/sOjJ70God4d881TbuZuMDWQ0w7YhherC1o
/07yx4sRXRtUzgbjSL70p+qEb+vzE0tr26DG4ejbPDPCM2aFGZI1HNAVKRX8
p8tAz5Zh7a6PbDBKOFccNEbhXdODjFVWo8SvbZQPhovjVZ+T7I6QJrCX33DK
n/DC1a1Z+63Se+GKlDo1SvhI9RN9ZWn4MOgYbfCWuUf6I1ZIdzKuGvrKXXxC
+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
NDYM+Z/PVuVAmkzIdCnp/2nj7UMOzCE4ozFAL1Ci0WX4ouV0KA+yfq62ySFf
T/M32n680Q3v106f9/FkICPg2IqOom54sMf9ykfSF47jCxvMDnDh+29nDeH/
KFTQKE9xVeiCu98WszZliuGtbqPHtN4IqL9nGUWL0ejr+7Io5D3Ju/C6uB4F
wrPfWYvl2jogNdhwmu8YhZzlq1+WARekZLe/4WtiovR5u+465Q44ecnneLco
Ey2Evu3lruoG3+sXH8bvofDRWce884XtMNv3oWPF//NzSOHC3WIeRMtH+zwz
oTFh3u9bUovZsKbWen5Mlhiq91UNTs7qAXsB/bcOYTSqBxTNJNez4aDeskvC
9kws4woNzgoYgWylxBAl0u8aP/U0D6Rwwbn3xpOJqxL4xJ5vqbABG8LGn+2Z
rKYwYMMjw5sbOXCm6DVv/mEmDsecyq7ObAb32lV/jb8xsSm0o/7yxX6wSz9+
/cMWcTxSPbpdQpwNO8z/iW0m/ea1wCVXv3gARsNWBWqfoVGxLiS/+thf+D5r
1u1/f2h8VCQUzLneB/szpbUv2VLY5CHzXlKzCzZ4ha0KKafwUv/S4lWby6Hw
s+63WrJfFZVfvSyiRsHLp2Dvho00zqfEqqu3jsM47+e810fFkaXBt69PrA/e
9t4Xjf9MI99Gu/7VhMdXjTwvKrvOxEufRy4GJE7ApcvW8vP2MrHFyGR8epjk
VWrcUMQ94ost0UfjXQfAOHYqbrYL4eMNwS/9CC+9mfqjo2XNRJd8NZdLDSOQ
t+THyWoTCus2q+RTPQNQnnTwhZcwjfrxLGkpdTYIxqxKoybIvDXxjUo4s8FE
+ais0SIK334XrVwt2gd7+7PSYib///sSUiKPk7tA8I1b8nMrJr6wmYkdaO+D
+S/SfPado/GSgeGaUtFBGH/2yuNeD8kvrS8lrPdDULhQKEvEg8Yef6s2810t
oFB8Mmn1/f//fwmj/JZvf8B6j1rH927C60I/hq7OdAPLmE/tM5m/W8t7dTcR
f/0UqDVSSZ73Cb4THRBkg51+8BLFPHL+XZ3S6lYs+LxfcX0R4Y+d9kXGa0KG
QTmjdNZZPgk851aR2bKIB1v3CWnrMpi4+03r+ZM+PCiudn/73y4ab93KN8r4
2QtbZh9NSiP+AmBuOd3KhYDPbaP10xQWWJVgR94wHNtfNi7fJo6nx0znz6rp
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
bhHX
           "]]}, PlotRange -> {{-1, 3}, {-8, 2}}, AxesOrigin -> {0, 0}]],
      
      Ticks->{Automatic, Automatic}], {191.00408802586253`, -116.80842387373012`},
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212`}], InsetBox[
     FormBox[
      TagBox[
       FormBox[
        GraphicsBox[{{{}, {{}, {}, 
            {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
             0.011111111111111112`], AbsoluteThickness[1.6], 
             LineBox[CompressedData["
1:eJwtlAtMU2cUxxERC4gukzp1DMTNFXUmG6CbMPgTVxDsRASHm+BwDHW+Ikhm
AAfIhjEs2zTI3NrxEGGLyAABgxARBoJQaGsf0JZ3X1BKeQUpkYljbT0nubn5
7r3fOef//53vesSdjzhua2NjE2++LPdLLhV71alZeFgyVh1tP41X61yYOG2m
Ku8p1LldMR6sK4C48kqN64VJel+C/L0/eR5vmACPa4lS2O04xX62ZgL11u8r
UGb7bKPXGSPMC/OTKix+JD68WjhO++/D61Dol00+43BUFCf4Oz5AF+ulqKzI
AGs6bj3+zdyz/chaA7bGXGsxeTYgOOjNH09mj1E/jdjqcfdW5vIxlJh3K4r/
AdMhqzEuU48Ja71mJK1ULols9fDxtsRjZGyZC8m5Okr1W2E/XSdIXzOKxyZP
c4U2+Po4/XeGNwInaz/tkIU6q3Z6jiDCWrAD4XkHyhvqdKSXj/EgbouOo4Mm
1ZKwE/xrN0pvqrXUrwCaT3dvaErRItHSXoIQnJ2uXWEuWvJHhOx26Ru+VRrY
WEMMPS/mWHK4hvSIwetfilo+q0aI2lJAAt6pwAD5r2rSJ8EzH4bXpJ8a11ss
AqQ467Q5m61TwSrXWwan69lRyl9UsMpRyDBfnbyqxE9F+ruxLeRwOrtnGO6W
dtx6UOu+3p774TD50YNu1mLzroIhnDxhCTmM2abaVQ5D5I8C9g3+SyuTB2HJ
5lKhQOuCx+Ja4wD5pUS1h+76xrgBzFvSmZRIY936ym6wn/zrxYrey6/XR/cj
wDoAfVjYU5HlPtRHfvZhqIC9xi2+D9b2rvTDjhFRw5vsJX8HkBAQve9Sai+E
AksM4LMZduWfjr3k9yBu+DSpl/KVYFobHMILbeo7CT5K8n8IqvnsdYNCBazp
Yobh9N0XHTtOK4iHCl5ldYJQBwXpUUFYERu8oUxOfFRwYMTPZh2Qkz4VPGOX
vX9xvod4qfHJLqa9orCH9KoR6Vz8bg6nh/ipwcgtn8lZ6Cb9GuwfvpPQVtpN
PDVgJzbHrovpxqt0Giw78t7mpNe6ia8Wrn3lrfwnMvJHi0ctaQuMDBnx1sKJ
U+ayabeM/NIh5IO3GEtzUuKvQ3J1cOzNain5p8PIpr98FYlSmocRGP9w49R4
ScnPEQTm+gldTRKajxH8Hnk6y75eQv6Ooq/Iu/brdAnNyygM4rQtnkES8nsU
5cZB5xBnCZ138zlNeOlWJxeT/3qEa9cnnysS0zzpMfA9r/joOTHxGMM3tbKc
dF8x8RjDby/l3CcMMfEYw8fH9fLP7z0lHub/guzOtrCDT4mHAdLKy8+j50TE
w4DBu0v3Erki4mFAw+32+IxAEfEYBytv+NG3BiHxGEd6BWchKFdI8zmOoBS9
Sh0oJB5GPPwhs81vWkA8jGA17kwJLhQQDyP8/VfsM4ULiMcEfvYuXfSzExCP
CSS5Fbavru8iHhOIYZ4NizvfRTwmcZvFzN/O6iIek5h/0Pn2MVUn8ZjEBX5r
tYnXSTymcMIv7KImqpN4TOHQi8VZV5dO4jGFrkCmbZ6UTzymsdHEFEXl8InH
NP6+ePYpO5JPPKax6vl+/lEmn3jMmOvdf8JVduB/Gv0hXg==
              "]]}, 
            {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
             0.011111111111111112`], AbsoluteThickness[1.6], 
             LineBox[CompressedData["
1:eJwtkwtMk2cUhuskwEAzAjIUESZjgihRLlNn0FedCxs6boILlzlHKijqRKWO
YRSJohOmsmkioqIMAgIRGQIiKk4u2lJ6pxQoll4o0AsXp4gSxLX1nOTPn+/7
/++c877P+RYnHoja9RGDwWCaHvP76LyqEFXGKYRke2dyvxrDh/UllI8+O52Z
PooG92xDZEMhphZYXXZ5OELfS7DhC9+Nf1iNoOCKOcpxy71xgyTSiPuW/6tQ
czv0en+xAaaFaecfzDgEdxZN6el8LUaD39jabtfDTlacus7uHkof7Fg7U6eD
Jd2V+yjabzz6i6sOSxMuNE/4PITNbX//jSeHqZ8mxOauDf1xfAglptOy4n+x
zqci89bPQzBa6j1BY0jqORvZIIICzdEC10+W790RMUj1W8FyO5aVx9OiZcLH
VKENOT/UyE+EaWFv6ecZDj04GOMoGUCUpSAbM/Furd7xA6SXA+bH0oUlgxqo
M8wJ25F70y8vhaWhfjtwffXl6h02Ghw0t5fKw03n1hPMa2ryh4/ulWvO7QxS
g2EJIaa3h02vFqhIjxDXWt9dFe5T4VuVuYAITYerjA5zVaRPhOC9KUuVd5TI
azYLEIO9qW3bkhglLHIDJfg0Z/aBu2/7YZEjk8Cv3CXKPayf9HeicuvJoPIy
BTzM7bhLEec0a1m8tYL8kMIu5pjN8pTnSE4yRxesmU/P2Er6yB8ZIrgPjks3
9MGcbV6VaV39eM2hu3LyqxsX5bu3NPrK8dqcbqIbl77b9Op0aS/514NjXNbi
6iW9WG8ZgF4EhZWtmVvZQ372wjZrZyUrsAeW9rLl+C+5hfnkcTf524di1W8L
OOHd4HWYow929S0nkjQy8vs5SqPHj6ZlyOBsaVCBekHCSsE8GfmvwKrPPV2i
a7pgSZfQD6ZGZ6WO6iIeSmS8EC+LfS0lPUokMjTzr16TEh8lOJ5+VTnfSEmf
EtZNF13nvOgkXir48LoFVjc6Sa8Kzl5nfo0P7yR+KuTLPYYmZ3WSfjX+2qZw
aqmXEE81xvmR1mX7JfiQTg3Zvmne+SUS4qtBaOhCVpJKTP5o8Dyg5pVroZh4
a1BoGPEpSBCTXwPoTdS3id3ExH8Ahy9pt9YqROTfANLSB2at+FtE86CFX3GH
KjBZRH5q4ev/Mr/WT0TzocUy+88yiieE5K/pXu2afeRlk5DmZRDBp1yd8s8K
ye9BvAlgJGXHCOm+D2HypZddtaeQ/B/C7nDpl65qAc3TEDafXx/nlSUgHsP4
Pb3kzxRPAfEYxtf890972vjEYxhzehfV/bSXTzyGEeC0qk/vyCceOnilOaan
POQRDx2YWc1H+Mk84qFDUrjogI0zj3josXb55FXr1g7ioUeFDrxHaR00n3po
F91I9vDuIB4GdNkYY93lXOJhwPyFcKnK4xIPA9xyK/OaQ7jEw4jo4+ErIhhc
4mFEbX8df0tjO/Ewwt4h+14Fq514jCDuPasgMaCdeIzAOuNC7p5xDvEYgW99
0bu6OxziMYr8PTOP1qdyiMco8vR7xqf8OcRjFJFOm+zVr9jEYwyFEpnE0MAm
HmNQ5ryJczjOJh5jcDtc8jZkM5t4jENxfuz7XHs2/gd7WRvo
              "]]}, 
            {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
             0.011111111111111112`], AbsoluteThickness[1.6], 
             LineBox[CompressedData["
1:eJwtkwtQVGUYhsGBkcGmkQYDCTGMHFQ05ZZDwmuJQjMocommcStCwEpQwSIB
yyYlGskJIgtxIgQTUILoujTk4F5Y2BvsLsvCsqx732WvTomNpTtxjt8/c2bn
nLPn+7/vfZ4/tuR4ftmKgICA0uWL+a0PH8gy1p3DwdqQPdHVPjy6/wqdf63+
dKfFC25MgyuP24HVFWsnCou89P4qSq2xj1WNe9B+iVl94L6xOfdCmgfD7P8H
EDmb+GVfvxvLN8tPhnAs7wW1MMZN3/+CMfGeSFOzC6Ga7hPpob9jfWbOIf8K
F9hyl4ZR82dhR9T7TmzifMFbih+BIvV1Y6p9kfq5ic0/lsUVvLaIq8tfa7pH
8cmmY0eOSxxws/vdgq6r5npTugPJScziIyn6jKdn0E77C/D5xcbtglg7+Evx
yzsIYX28+aSh1YZVbD8iZHzW9tuDYBvy2Q3H8U3glfuRp6w07wR8dX27UpwW
mOqYgmJk3R06k8exUL9SdFb+wauUm1HFtHdChvs2XvD53WbKR478Ykn2tZ9M
CGDXFG7MqZp4cSaaZwpBBTq5/msjso3MBgpwpJaw/0KMNJ8Cv+71FEbUG9DM
YwZQ4kbIh/Gt2ttgx01SYfsrd07eEuvBjqNRoSrf8GytdIHmn4Yud4izRq/D
eqadGDUe1mvT4vzzlIcaZY055W9umceRcmbNoCouQvF9qZby0eDhvuyme71z
YKqFD2gQ9J3maMU/s5TXLNRRge+k5c7iHlNuaRbtp1s+7h3UUH5zMOPuk2GR
GmSwAmhx4NURrr5xhvLU4ue/07ed96vBttcwj8MvLqja6tWUrw4Pdc8kXPZP
QyZllg7inZ1dWxqnKe8FKPZvOOUJn8YatkE9Rj5IUDb1qCh/PdJTahzcDBXY
cpzbCIlKydmqVRIPA9YlNe/tqVXSPAb4gpIyndFK4mPAe+sqi2/yFTSfAfIf
Bpy+SgXxMqL3XMPK3KcUNK8ROyLOFg1KpoifEaKagS77R1M0vwnmsKLLiuQp
4mkinpN4VM6E8s5v2zgHJ4mvmfjKKR8z+m1vDTe+LCfeZuIto7ws2Nee7ygp
kBF/C/GXUn4WFJbUyw5XSMkHK/kgoTytqFvQb3yuVUJ+WMkPCeVrQ8UTZ5da
xsTki418EVPeNjzIGlXUB4vpvNvhZ/2ZoPztCETitn8PTJBPdvJpnHg4sDFz
lJPcNU48HOTXOPFwYENsdeLbfhHxcJBvIuKxiP4Oz1Z7iYh4LJJ/IuKxiKZD
K0PDJ8eIh5N8HCMeTmTsSLhe/NIY+ekkP4XEwwWuciYvZ0RIPFzkq5B4uDAR
7I8q2SUkHm7yV0A83Jjvbr3yPE9APNzks4B4eCB71zl/dL+AeHjIbwHx8GAp
dffaawt84uEl3/nEw4uwQdnTF6v5xMNL/vOJhw9zwr4K7yo+8fDReeARDx/8
PS2nK/t4xOMOnQ8e/gdEkiPL
              "]]}}, {}}, InsetBox[
           TemplateBox[{"\"Normal\"","\"Triangle\"","\"Uniform\""},
            "PointLegend",
            DisplayFunction->(FormBox[
              StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False], TraditionalForm]& ),
            Editable->True,
            InterpretationFunction:>(RowBox[{"PointLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                 RowBox[{"Joined", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "True", ",", "True"}], "}"}], 
                    "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
               "]"}]& )], Scaled[{0.99, 0.99}], ImageScaled[{1, 1}],
           BaseStyle->{FontSize -> Larger},
           FormatType->StandardForm]},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{
           FormBox["\"\[Sigma] of swarm\"", TraditionalForm], 
           FormBox["\"Max Torque\"", TraditionalForm]},
         AxesOrigin->{0, 0},
         DisplayFunction->Identity,
         Frame->{{False, False}, {False, False}},
         FrameLabel->{{None, None}, {None, None}},
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImageSize->Medium,
         Method->{},
         PlotLabel->FormBox[
          "\"Maximum possible torque on object pivoted at 0, length 1\"", 
           TraditionalForm],
         PlotRange->{{0, 1.}, {0, 0.9826794919243103}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}},
         Ticks->{Automatic, Automatic}],
        TraditionalForm],
       InterpretTemplate[Legended[
         Graphics[{{}, {{{}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              Line[CompressedData["
1:eJwtlAtMU2cUxxERC4gukzp1DMTNFXUmG6CbMPgTVxDsRASHm+BwDHW+Ikhm
AAfIhjEs2zTI3NrxEGGLyAABgxARBoJQaGsf0JZ3X1BKeQUpkYljbT0nubn5
7r3fOef//53vesSdjzhua2NjE2++LPdLLhV71alZeFgyVh1tP41X61yYOG2m
Ku8p1LldMR6sK4C48kqN64VJel+C/L0/eR5vmACPa4lS2O04xX62ZgL11u8r
UGb7bKPXGSPMC/OTKix+JD68WjhO++/D61Dol00+43BUFCf4Oz5AF+ulqKzI
AGs6bj3+zdyz/chaA7bGXGsxeTYgOOjNH09mj1E/jdjqcfdW5vIxlJh3K4r/
AdMhqzEuU48Ja71mJK1ULols9fDxtsRjZGyZC8m5Okr1W2E/XSdIXzOKxyZP
c4U2+Po4/XeGNwInaz/tkIU6q3Z6jiDCWrAD4XkHyhvqdKSXj/EgbouOo4Mm
1ZKwE/xrN0pvqrXUrwCaT3dvaErRItHSXoIQnJ2uXWEuWvJHhOx26Ru+VRrY
WEMMPS/mWHK4hvSIwetfilo+q0aI2lJAAt6pwAD5r2rSJ8EzH4bXpJ8a11ss
AqQ467Q5m61TwSrXWwan69lRyl9UsMpRyDBfnbyqxE9F+ruxLeRwOrtnGO6W
dtx6UOu+3p774TD50YNu1mLzroIhnDxhCTmM2abaVQ5D5I8C9g3+SyuTB2HJ
5lKhQOuCx+Ja4wD5pUS1h+76xrgBzFvSmZRIY936ym6wn/zrxYrey6/XR/cj
wDoAfVjYU5HlPtRHfvZhqIC9xi2+D9b2rvTDjhFRw5vsJX8HkBAQve9Sai+E
AksM4LMZduWfjr3k9yBu+DSpl/KVYFobHMILbeo7CT5K8n8IqvnsdYNCBazp
Yobh9N0XHTtOK4iHCl5ldYJQBwXpUUFYERu8oUxOfFRwYMTPZh2Qkz4VPGOX
vX9xvod4qfHJLqa9orCH9KoR6Vz8bg6nh/ipwcgtn8lZ6Cb9GuwfvpPQVtpN
PDVgJzbHrovpxqt0Giw78t7mpNe6ia8Wrn3lrfwnMvJHi0ctaQuMDBnx1sKJ
U+ayabeM/NIh5IO3GEtzUuKvQ3J1cOzNain5p8PIpr98FYlSmocRGP9w49R4
ScnPEQTm+gldTRKajxH8Hnk6y75eQv6Ooq/Iu/brdAnNyygM4rQtnkES8nsU
5cZB5xBnCZ138zlNeOlWJxeT/3qEa9cnnysS0zzpMfA9r/joOTHxGMM3tbKc
dF8x8RjDby/l3CcMMfEYw8fH9fLP7z0lHub/guzOtrCDT4mHAdLKy8+j50TE
w4DBu0v3Erki4mFAw+32+IxAEfEYBytv+NG3BiHxGEd6BWchKFdI8zmOoBS9
Sh0oJB5GPPwhs81vWkA8jGA17kwJLhQQDyP8/VfsM4ULiMcEfvYuXfSzExCP
CSS5Fbavru8iHhOIYZ4NizvfRTwmcZvFzN/O6iIek5h/0Pn2MVUn8ZjEBX5r
tYnXSTymcMIv7KImqpN4TOHQi8VZV5dO4jGFrkCmbZ6UTzymsdHEFEXl8InH
NP6+ePYpO5JPPKax6vl+/lEmn3jMmOvdf8JVduB/Gv0hXg==
               "]]}, {
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              Line[CompressedData["
1:eJwtkwtMk2cUhuskwEAzAjIUESZjgihRLlNn0FedCxs6boILlzlHKijqRKWO
YRSJohOmsmkioqIMAgIRGQIiKk4u2lJ6pxQoll4o0AsXp4gSxLX1nOTPn+/7
/++c877P+RYnHoja9RGDwWCaHvP76LyqEFXGKYRke2dyvxrDh/UllI8+O52Z
PooG92xDZEMhphZYXXZ5OELfS7DhC9+Nf1iNoOCKOcpxy71xgyTSiPuW/6tQ
czv0en+xAaaFaecfzDgEdxZN6el8LUaD39jabtfDTlacus7uHkof7Fg7U6eD
Jd2V+yjabzz6i6sOSxMuNE/4PITNbX//jSeHqZ8mxOauDf1xfAglptOy4n+x
zqci89bPQzBa6j1BY0jqORvZIIICzdEC10+W790RMUj1W8FyO5aVx9OiZcLH
VKENOT/UyE+EaWFv6ecZDj04GOMoGUCUpSAbM/Furd7xA6SXA+bH0oUlgxqo
M8wJ25F70y8vhaWhfjtwffXl6h02Ghw0t5fKw03n1hPMa2ryh4/ulWvO7QxS
g2EJIaa3h02vFqhIjxDXWt9dFe5T4VuVuYAITYerjA5zVaRPhOC9KUuVd5TI
azYLEIO9qW3bkhglLHIDJfg0Z/aBu2/7YZEjk8Cv3CXKPayf9HeicuvJoPIy
BTzM7bhLEec0a1m8tYL8kMIu5pjN8pTnSE4yRxesmU/P2Er6yB8ZIrgPjks3
9MGcbV6VaV39eM2hu3LyqxsX5bu3NPrK8dqcbqIbl77b9Op0aS/514NjXNbi
6iW9WG8ZgF4EhZWtmVvZQ372wjZrZyUrsAeW9rLl+C+5hfnkcTf524di1W8L
OOHd4HWYow929S0nkjQy8vs5SqPHj6ZlyOBsaVCBekHCSsE8GfmvwKrPPV2i
a7pgSZfQD6ZGZ6WO6iIeSmS8EC+LfS0lPUokMjTzr16TEh8lOJ5+VTnfSEmf
EtZNF13nvOgkXir48LoFVjc6Sa8Kzl5nfo0P7yR+KuTLPYYmZ3WSfjX+2qZw
aqmXEE81xvmR1mX7JfiQTg3Zvmne+SUS4qtBaOhCVpJKTP5o8Dyg5pVroZh4
a1BoGPEpSBCTXwPoTdS3id3ExH8Ahy9pt9YqROTfANLSB2at+FtE86CFX3GH
KjBZRH5q4ev/Mr/WT0TzocUy+88yiieE5K/pXu2afeRlk5DmZRDBp1yd8s8K
ye9BvAlgJGXHCOm+D2HypZddtaeQ/B/C7nDpl65qAc3TEDafXx/nlSUgHsP4
Pb3kzxRPAfEYxtf890972vjEYxhzehfV/bSXTzyGEeC0qk/vyCceOnilOaan
POQRDx2YWc1H+Mk84qFDUrjogI0zj3josXb55FXr1g7ioUeFDrxHaR00n3po
F91I9vDuIB4GdNkYY93lXOJhwPyFcKnK4xIPA9xyK/OaQ7jEw4jo4+ErIhhc
4mFEbX8df0tjO/Ewwt4h+14Fq514jCDuPasgMaCdeIzAOuNC7p5xDvEYgW99
0bu6OxziMYr8PTOP1qdyiMco8vR7xqf8OcRjFJFOm+zVr9jEYwyFEpnE0MAm
HmNQ5ryJczjOJh5jcDtc8jZkM5t4jENxfuz7XHs2/gd7WRvo
               "]]}, {
              Hue[0.1421359549995791, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              Line[CompressedData["
1:eJwtkwtQVGUYhsGBkcGmkQYDCTGMHFQ05ZZDwmuJQjMocommcStCwEpQwSIB
yyYlGskJIgtxIgQTUILoujTk4F5Y2BvsLsvCsqx732WvTomNpTtxjt8/c2bn
nLPn+7/vfZ4/tuR4ftmKgICA0uWL+a0PH8gy1p3DwdqQPdHVPjy6/wqdf63+
dKfFC25MgyuP24HVFWsnCou89P4qSq2xj1WNe9B+iVl94L6xOfdCmgfD7P8H
EDmb+GVfvxvLN8tPhnAs7wW1MMZN3/+CMfGeSFOzC6Ga7hPpob9jfWbOIf8K
F9hyl4ZR82dhR9T7TmzifMFbih+BIvV1Y6p9kfq5ic0/lsUVvLaIq8tfa7pH
8cmmY0eOSxxws/vdgq6r5npTugPJScziIyn6jKdn0E77C/D5xcbtglg7+Evx
yzsIYX28+aSh1YZVbD8iZHzW9tuDYBvy2Q3H8U3glfuRp6w07wR8dX27UpwW
mOqYgmJk3R06k8exUL9SdFb+wauUm1HFtHdChvs2XvD53WbKR478Ykn2tZ9M
CGDXFG7MqZp4cSaaZwpBBTq5/msjso3MBgpwpJaw/0KMNJ8Cv+71FEbUG9DM
YwZQ4kbIh/Gt2ttgx01SYfsrd07eEuvBjqNRoSrf8GytdIHmn4Yud4izRq/D
eqadGDUe1mvT4vzzlIcaZY055W9umceRcmbNoCouQvF9qZby0eDhvuyme71z
YKqFD2gQ9J3maMU/s5TXLNRRge+k5c7iHlNuaRbtp1s+7h3UUH5zMOPuk2GR
GmSwAmhx4NURrr5xhvLU4ue/07ed96vBttcwj8MvLqja6tWUrw4Pdc8kXPZP
QyZllg7inZ1dWxqnKe8FKPZvOOUJn8YatkE9Rj5IUDb1qCh/PdJTahzcDBXY
cpzbCIlKydmqVRIPA9YlNe/tqVXSPAb4gpIyndFK4mPAe+sqi2/yFTSfAfIf
Bpy+SgXxMqL3XMPK3KcUNK8ROyLOFg1KpoifEaKagS77R1M0vwnmsKLLiuQp
4mkinpN4VM6E8s5v2zgHJ4mvmfjKKR8z+m1vDTe+LCfeZuIto7ws2Nee7ygp
kBF/C/GXUn4WFJbUyw5XSMkHK/kgoTytqFvQb3yuVUJ+WMkPCeVrQ8UTZ5da
xsTki418EVPeNjzIGlXUB4vpvNvhZ/2ZoPztCETitn8PTJBPdvJpnHg4sDFz
lJPcNU48HOTXOPFwYENsdeLbfhHxcJBvIuKxiP4Oz1Z7iYh4LJJ/IuKxiKZD
K0PDJ8eIh5N8HCMeTmTsSLhe/NIY+ekkP4XEwwWuciYvZ0RIPFzkq5B4uDAR
7I8q2SUkHm7yV0A83Jjvbr3yPE9APNzks4B4eCB71zl/dL+AeHjIbwHx8GAp
dffaawt84uEl3/nEw4uwQdnTF6v5xMNL/vOJhw9zwr4K7yo+8fDReeARDx/8
PS2nK/t4xOMOnQ8e/gdEkiPL
               "]]}}}, {}}, {
          DisplayFunction -> Identity, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
           PlotRange -> {{0, 1.}, {0, 0.9826794919243103}}, DisplayFunction -> 
           Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {"\[Sigma] of swarm", "Max Torque"}, 
           AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
           Frame -> {{False, False}, {False, False}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
           PlotLabel -> 
           "Maximum possible torque on object pivoted at 0, length 1", 
           PlotRange -> {{0, 1.}, {0, 0.9826794919243103}}, PlotRangeClipping -> 
           True, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
         Placed[
          Unevaluated[
           PointLegend[{
             Directive[
              PointSize[0.011111111111111112`], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              PointSize[0.011111111111111112`], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              PointSize[0.011111111111111112`], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]]}, {"Normal", "Triangle", "Uniform"}, 
            Joined -> {{True, True, True}}, LabelStyle -> {}, LegendLayout -> 
            "Column", 
            LegendMarkers -> {{False, Automatic}, {False, Automatic}, {
              False, Automatic}}]], {Right, Top}, Identity]]& ],
       AutoDelete->True,
       Editable->True,
       SelectWithContents->False,
       Selectable->True],
      TraditionalForm], {576., -116.80842387373012`}, {
     Center, Center}, {360., 222.49223594996212`}]}, {}},
  ContentSelectable->True,
  ImagePadding->{{174.714236, 175.714236}, {1., 0.}},
  ImageSize->{780., 245.61684774746024`},
  PlotRange->{{186., 582.}, {-238.61684774746024`, 5.}},
  PlotRangePadding->Automatic]], "Input",
 CellChangeTimes->{3.684575004980954*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1: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
3649XSc=
        
        "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, 
          {RGBColor[0.560181, 0.691569, 0.194885], Opacity[0.2], EdgeForm[
           None], GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwlzkdOQgEARdH/wV4Q7IigIMp+3IAJC9B12ruiYu8dOxbQkzg4uW/4ssWZ
yelIEAQhU0SNBhppopkWWmmjnQ46idFFnATd9NBLH/0MMEiSIVIMkybDCKNk
yTFGngLjRJggDP9P/kqdGj9888UnVT54541XXnjmiQqPPHDPHbfccM0Vl1xw
zhmnnHDMEYccsE+ZPXbZocQ2W2yywTprrLLCMkssssA8c8zyBxBkNkU=
             
             "]]]}, {}, {}}, {{}, {}, {}, 
          {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
             18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 
            34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 
            50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 
            66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 
            82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 
            98, 99, 100}]}, 
          {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[{101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 
            112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 
            125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 
            138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 
            151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 
            164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 
            177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 
            190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200}]}, 
          {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[{201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 
            212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 
            225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 
            238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 
            251, 252, 253, 254, 255, 256, 257, 294}]}, 
          {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
           0.011111111111111112`], AbsoluteThickness[1.6], 
           LineBox[{259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 
            270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 
            283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 295}]}}}], {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{
        FormBox["\"\[Sigma] of swarm\"", TraditionalForm], 
        FormBox["\"Optimal push location (\[Mu])\"", TraditionalForm]},
      AxesOrigin->{0, 0.403},
      DisplayFunction->Identity,
      Epilog->{
        Dashing[{Small, Small}], 
        LineBox[
         NCache[{{0, 
            Rational[2, 3]}, {100, 
            Rational[2, 3]}}, {{0, 0.6666666666666666}, {
           100, 0.6666666666666666}}]], 
        LineBox[
         NCache[{{0, 2^Rational[-1, 2]}, {100, 2^Rational[-1, 2]}}, {{
           0, 0.7071067811865475}, {100, 0.7071067811865475}}]], 
        LineBox[
         NCache[{{0, 
            Rational[1, 2]}, {100, 
            Rational[1, 2]}}, {{0, 0.5}, {100, 0.5}}]]},
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->Medium,
      Method->{},
      PlotLabel->FormBox[
       "\"Where to push object pivoted at 0, length 1, to maximize torque\"", 
        TraditionalForm],
      PlotRange->{{0, 1.}, {0.4, 1.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}},
      Prolog->InsetBox[
        GraphicsBox[{
          RGBColor[0.6, 0.4, 0.2], 
          RectangleBox[
           NCache[{0, 
             Rational[-1, 10]}, {0, -0.1}], 
           NCache[{1, 
             Rational[1, 10]}, {1, 0.1}]], 
          RGBColor[0, 0, 1], 
          PointBox[{0, 0}], 
          RGBColor[1, 0, 0], 
          PolygonBox[
           NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
              Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
             1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]], 
          GrayLevel[0], 
          PointSize[Tiny], 
          PointBox[CompressedData["
1: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
9cjpHigyX3FcxZPC1IUPHjLvDUHb/qu713+ncFG+VUi/UCvMMFrLdJZTWHhY
b8qZ6ge+9kLby5ZkXgdGiv+pdAK7ODXF7Sbh4XvyJwI+jcKVte/+JEcy0L4s
Sd5NfwJeZH4wvHqIiZFl/vzizzrgjUvjorUPmBhQo1y5gDsMK3z/bXAbpDHz
2/3xk5L9kJrEWCHcRqNrkFV42cVu8GyXlW6MEsexrf5Dkqn98ODmtyVptQzc
qiCzpPTrFLjar8s49JzCV2U+GmEdo7BmjvquyRYafy68InoLSf6YD7axWUyU
WyMSDleGQEiy9dJYOoWXjv8yuPGIB7yDE/n5osSPtBeY39HqgUFF2PNNn4lj
2V8k9UifV849mvn9I+FDZaMTf3U64fY6I2eTUQp1lorMlzDtg9WnvlTNI/vj
mTIj1jzYC+8GDWpCyH6q5Y3Ee36bgHKBqt0idkycP5QIZ3+1g2q92LrSr0z0
ly2ZtSL6FwQU/yrYGsrES04XHfK3cWF1c0maM/F5dvb5te4LeWAdk3ozaFQc
Py045VYgwwPn+otfI55ReMw7eS0ruA0uPc8JnRphYLHl+asNF3ig3C5beEKG
xq6mXWFizT0g1FuvM4cmfHXlpKbt6lbwcS1sMrhDo9U6xVedeziQLFljknyb
wmvHVl7MuzsD973iXNx+MVHFJZ8HHp3At8H1c5EyhS8XPM431uOB6tcAgbE+
MTy/ofa68JleaJBaxTW+S+Ob1guPFlqRfNwd7zroycCLEHgqU34MzJtlfRc8
pvF+6oDs8wYe3JblBpw8yMAsCROF0sdjkGqn0+WtSvjosa6huWI3CNnp9j29
SKOKv8OizZkTMG14+pj8FvL8DZzyfZwOCFAQiYuoZ+DGjIKfZXe4sKqt1GCK
8HtwU93C721c0NX+VzZ9m4kPlD79bkoegUdfqJfuBxh4aZ2zz+Ov9fC1TW/i
LcmbO24jEguIz7/je9nlaMvE3/sOjJ70God4d881TbuZuMDWQ0w7YhherC1o
/07yx4sRXRtUzgbjSL70p+qEb+vzE0tr26DG4ejbPDPCM2aFGZI1HNAVKRX8
p8tAz5Zh7a6PbDBKOFccNEbhXdODjFVWo8SvbZQPhovjVZ+T7I6QJrCX33DK
n/DC1a1Z+63Se+GKlDo1SvhI9RN9ZWn4MOgYbfCWuUf6I1ZIdzKuGvrKXXxC
+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
NDYM+Z/PVuVAmkzIdCnp/2nj7UMOzCE4ozFAL1Ci0WX4ouV0KA+yfq62ySFf
T/M32n680Q3v106f9/FkICPg2IqOom54sMf9ykfSF47jCxvMDnDh+29nDeH/
KFTQKE9xVeiCu98WszZliuGtbqPHtN4IqL9nGUWL0ejr+7Io5D3Ju/C6uB4F
wrPfWYvl2jogNdhwmu8YhZzlq1+WARekZLe/4WtiovR5u+465Q44ecnneLco
Ey2Evu3lruoG3+sXH8bvofDRWce884XtMNv3oWPF//NzSOHC3WIeRMtH+zwz
oTFh3u9bUovZsKbWen5Mlhiq91UNTs7qAXsB/bcOYTSqBxTNJNez4aDeskvC
9kws4woNzgoYgWylxBAl0u8aP/U0D6Rwwbn3xpOJqxL4xJ5vqbABG8LGn+2Z
rKYwYMMjw5sbOXCm6DVv/mEmDsecyq7ObAb32lV/jb8xsSm0o/7yxX6wSz9+
/cMWcTxSPbpdQpwNO8z/iW0m/ea1wCVXv3gARsNWBWqfoVGxLiS/+thf+D5r
1u1/f2h8VCQUzLneB/szpbUv2VLY5CHzXlKzCzZ4ha0KKafwUv/S4lWby6Hw
s+63WrJfFZVfvSyiRsHLp2Dvho00zqfEqqu3jsM47+e810fFkaXBt69PrA/e
9t4Xjf9MI99Gu/7VhMdXjTwvKrvOxEufRy4GJE7ApcvW8vP2MrHFyGR8epjk
VWrcUMQ94ost0UfjXQfAOHYqbrYL4eMNwS/9CC+9mfqjo2XNRJd8NZdLDSOQ
t+THyWoTCus2q+RTPQNQnnTwhZcwjfrxLGkpdTYIxqxKoybIvDXxjUo4s8FE
+ais0SIK334XrVwt2gd7+7PSYib///sSUiKPk7tA8I1b8nMrJr6wmYkdaO+D
+S/SfPado/GSgeGaUtFBGH/2yuNeD8kvrS8lrPdDULhQKEvEg8Yef6s2810t
oFB8Mmn1/f//fwmj/JZvf8B6j1rH927C60I/hq7OdAPLmE/tM5m/W8t7dTcR
f/0UqDVSSZ73Cb4THRBkg51+8BLFPHL+XZ3S6lYs+LxfcX0R4Y+d9kXGa0KG
QTmjdNZZPgk851aR2bKIB1v3CWnrMpi4+03r+ZM+PCiudn/73y4ab93KN8r4
2QtbZh9NSiP+AmBuOd3KhYDPbaP10xQWWJVgR94wHNtfNi7fJo6nx0znz6rp
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
bhHX
           "]]}, PlotRange -> {{-1, 3}, {-8, 2}}, AxesOrigin -> {0, 0}]],
      
      Ticks->{Automatic, Automatic}], {191.00408802586253`, -116.80842387373012`},
      ImageScaled[{0.5, 0.5}], {360, 222.49223594996212`}], InsetBox[
     FormBox[
      TagBox[
       FormBox[
        GraphicsBox[{{{}, {{}, {}, 
            {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
             0.011111111111111112`], AbsoluteThickness[1.6], 
             LineBox[CompressedData["
1:eJwtlAtMU2cUxxERC4gukzp1DMTNFXUmG6CbMPgTVxDsRASHm+BwDHW+Ikhm
AAfIhjEs2zTI3NrxEGGLyAABgxARBoJQaGsf0JZ3X1BKeQUpkYljbT0nubn5
7r3fOef//53vesSdjzhua2NjE2++LPdLLhV71alZeFgyVh1tP41X61yYOG2m
Ku8p1LldMR6sK4C48kqN64VJel+C/L0/eR5vmACPa4lS2O04xX62ZgL11u8r
UGb7bKPXGSPMC/OTKix+JD68WjhO++/D61Dol00+43BUFCf4Oz5AF+ulqKzI
AGs6bj3+zdyz/chaA7bGXGsxeTYgOOjNH09mj1E/jdjqcfdW5vIxlJh3K4r/
AdMhqzEuU48Ja71mJK1ULols9fDxtsRjZGyZC8m5Okr1W2E/XSdIXzOKxyZP
c4U2+Po4/XeGNwInaz/tkIU6q3Z6jiDCWrAD4XkHyhvqdKSXj/EgbouOo4Mm
1ZKwE/xrN0pvqrXUrwCaT3dvaErRItHSXoIQnJ2uXWEuWvJHhOx26Ru+VRrY
WEMMPS/mWHK4hvSIwetfilo+q0aI2lJAAt6pwAD5r2rSJ8EzH4bXpJ8a11ss
AqQ467Q5m61TwSrXWwan69lRyl9UsMpRyDBfnbyqxE9F+ruxLeRwOrtnGO6W
dtx6UOu+3p774TD50YNu1mLzroIhnDxhCTmM2abaVQ5D5I8C9g3+SyuTB2HJ
5lKhQOuCx+Ja4wD5pUS1h+76xrgBzFvSmZRIY936ym6wn/zrxYrey6/XR/cj
wDoAfVjYU5HlPtRHfvZhqIC9xi2+D9b2rvTDjhFRw5vsJX8HkBAQve9Sai+E
AksM4LMZduWfjr3k9yBu+DSpl/KVYFobHMILbeo7CT5K8n8IqvnsdYNCBazp
Yobh9N0XHTtOK4iHCl5ldYJQBwXpUUFYERu8oUxOfFRwYMTPZh2Qkz4VPGOX
vX9xvod4qfHJLqa9orCH9KoR6Vz8bg6nh/ipwcgtn8lZ6Cb9GuwfvpPQVtpN
PDVgJzbHrovpxqt0Giw78t7mpNe6ia8Wrn3lrfwnMvJHi0ctaQuMDBnx1sKJ
U+ayabeM/NIh5IO3GEtzUuKvQ3J1cOzNain5p8PIpr98FYlSmocRGP9w49R4
ScnPEQTm+gldTRKajxH8Hnk6y75eQv6Ooq/Iu/brdAnNyygM4rQtnkES8nsU
5cZB5xBnCZ138zlNeOlWJxeT/3qEa9cnnysS0zzpMfA9r/joOTHxGMM3tbKc
dF8x8RjDby/l3CcMMfEYw8fH9fLP7z0lHub/guzOtrCDT4mHAdLKy8+j50TE
w4DBu0v3Erki4mFAw+32+IxAEfEYBytv+NG3BiHxGEd6BWchKFdI8zmOoBS9
Sh0oJB5GPPwhs81vWkA8jGA17kwJLhQQDyP8/VfsM4ULiMcEfvYuXfSzExCP
CSS5Fbavru8iHhOIYZ4NizvfRTwmcZvFzN/O6iIek5h/0Pn2MVUn8ZjEBX5r
tYnXSTymcMIv7KImqpN4TOHQi8VZV5dO4jGFrkCmbZ6UTzymsdHEFEXl8InH
NP6+ePYpO5JPPKax6vl+/lEmn3jMmOvdf8JVduB/Gv0hXg==
              "]]}, 
            {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
             0.011111111111111112`], AbsoluteThickness[1.6], 
             LineBox[CompressedData["
1:eJwtkwtMk2cUhuskwEAzAjIUESZjgihRLlNn0FedCxs6boILlzlHKijqRKWO
YRSJohOmsmkioqIMAgIRGQIiKk4u2lJ6pxQoll4o0AsXp4gSxLX1nOTPn+/7
/++c877P+RYnHoja9RGDwWCaHvP76LyqEFXGKYRke2dyvxrDh/UllI8+O52Z
PooG92xDZEMhphZYXXZ5OELfS7DhC9+Nf1iNoOCKOcpxy71xgyTSiPuW/6tQ
czv0en+xAaaFaecfzDgEdxZN6el8LUaD39jabtfDTlacus7uHkof7Fg7U6eD
Jd2V+yjabzz6i6sOSxMuNE/4PITNbX//jSeHqZ8mxOauDf1xfAglptOy4n+x
zqci89bPQzBa6j1BY0jqORvZIIICzdEC10+W790RMUj1W8FyO5aVx9OiZcLH
VKENOT/UyE+EaWFv6ecZDj04GOMoGUCUpSAbM/Furd7xA6SXA+bH0oUlgxqo
M8wJ25F70y8vhaWhfjtwffXl6h02Ghw0t5fKw03n1hPMa2ryh4/ulWvO7QxS
g2EJIaa3h02vFqhIjxDXWt9dFe5T4VuVuYAITYerjA5zVaRPhOC9KUuVd5TI
azYLEIO9qW3bkhglLHIDJfg0Z/aBu2/7YZEjk8Cv3CXKPayf9HeicuvJoPIy
BTzM7bhLEec0a1m8tYL8kMIu5pjN8pTnSE4yRxesmU/P2Er6yB8ZIrgPjks3
9MGcbV6VaV39eM2hu3LyqxsX5bu3NPrK8dqcbqIbl77b9Op0aS/514NjXNbi
6iW9WG8ZgF4EhZWtmVvZQ372wjZrZyUrsAeW9rLl+C+5hfnkcTf524di1W8L
OOHd4HWYow929S0nkjQy8vs5SqPHj6ZlyOBsaVCBekHCSsE8GfmvwKrPPV2i
a7pgSZfQD6ZGZ6WO6iIeSmS8EC+LfS0lPUokMjTzr16TEh8lOJ5+VTnfSEmf
EtZNF13nvOgkXir48LoFVjc6Sa8Kzl5nfo0P7yR+KuTLPYYmZ3WSfjX+2qZw
aqmXEE81xvmR1mX7JfiQTg3Zvmne+SUS4qtBaOhCVpJKTP5o8Dyg5pVroZh4
a1BoGPEpSBCTXwPoTdS3id3ExH8Ahy9pt9YqROTfANLSB2at+FtE86CFX3GH
KjBZRH5q4ev/Mr/WT0TzocUy+88yiieE5K/pXu2afeRlk5DmZRDBp1yd8s8K
ye9BvAlgJGXHCOm+D2HypZddtaeQ/B/C7nDpl65qAc3TEDafXx/nlSUgHsP4
Pb3kzxRPAfEYxtf890972vjEYxhzehfV/bSXTzyGEeC0qk/vyCceOnilOaan
POQRDx2YWc1H+Mk84qFDUrjogI0zj3josXb55FXr1g7ioUeFDrxHaR00n3po
F91I9vDuIB4GdNkYY93lXOJhwPyFcKnK4xIPA9xyK/OaQ7jEw4jo4+ErIhhc
4mFEbX8df0tjO/Ewwt4h+14Fq514jCDuPasgMaCdeIzAOuNC7p5xDvEYgW99
0bu6OxziMYr8PTOP1qdyiMco8vR7xqf8OcRjFJFOm+zVr9jEYwyFEpnE0MAm
HmNQ5ryJczjOJh5jcDtc8jZkM5t4jENxfuz7XHs2/gd7WRvo
              "]]}, 
            {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
             0.011111111111111112`], AbsoluteThickness[1.6], 
             LineBox[CompressedData["
1:eJwtkwtQVGUYhsGBkcGmkQYDCTGMHFQ05ZZDwmuJQjMocommcStCwEpQwSIB
yyYlGskJIgtxIgQTUILoujTk4F5Y2BvsLsvCsqx732WvTomNpTtxjt8/c2bn
nLPn+7/vfZ4/tuR4ftmKgICA0uWL+a0PH8gy1p3DwdqQPdHVPjy6/wqdf63+
dKfFC25MgyuP24HVFWsnCou89P4qSq2xj1WNe9B+iVl94L6xOfdCmgfD7P8H
EDmb+GVfvxvLN8tPhnAs7wW1MMZN3/+CMfGeSFOzC6Ga7hPpob9jfWbOIf8K
F9hyl4ZR82dhR9T7TmzifMFbih+BIvV1Y6p9kfq5ic0/lsUVvLaIq8tfa7pH
8cmmY0eOSxxws/vdgq6r5npTugPJScziIyn6jKdn0E77C/D5xcbtglg7+Evx
yzsIYX28+aSh1YZVbD8iZHzW9tuDYBvy2Q3H8U3glfuRp6w07wR8dX27UpwW
mOqYgmJk3R06k8exUL9SdFb+wauUm1HFtHdChvs2XvD53WbKR478Ykn2tZ9M
CGDXFG7MqZp4cSaaZwpBBTq5/msjso3MBgpwpJaw/0KMNJ8Cv+71FEbUG9DM
YwZQ4kbIh/Gt2ttgx01SYfsrd07eEuvBjqNRoSrf8GytdIHmn4Yud4izRq/D
eqadGDUe1mvT4vzzlIcaZY055W9umceRcmbNoCouQvF9qZby0eDhvuyme71z
YKqFD2gQ9J3maMU/s5TXLNRRge+k5c7iHlNuaRbtp1s+7h3UUH5zMOPuk2GR
GmSwAmhx4NURrr5xhvLU4ue/07ed96vBttcwj8MvLqja6tWUrw4Pdc8kXPZP
QyZllg7inZ1dWxqnKe8FKPZvOOUJn8YatkE9Rj5IUDb1qCh/PdJTahzcDBXY
cpzbCIlKydmqVRIPA9YlNe/tqVXSPAb4gpIyndFK4mPAe+sqi2/yFTSfAfIf
Bpy+SgXxMqL3XMPK3KcUNK8ROyLOFg1KpoifEaKagS77R1M0vwnmsKLLiuQp
4mkinpN4VM6E8s5v2zgHJ4mvmfjKKR8z+m1vDTe+LCfeZuIto7ws2Nee7ygp
kBF/C/GXUn4WFJbUyw5XSMkHK/kgoTytqFvQb3yuVUJ+WMkPCeVrQ8UTZ5da
xsTki418EVPeNjzIGlXUB4vpvNvhZ/2ZoPztCETitn8PTJBPdvJpnHg4sDFz
lJPcNU48HOTXOPFwYENsdeLbfhHxcJBvIuKxiP4Oz1Z7iYh4LJJ/IuKxiKZD
K0PDJ8eIh5N8HCMeTmTsSLhe/NIY+ekkP4XEwwWuciYvZ0RIPFzkq5B4uDAR
7I8q2SUkHm7yV0A83Jjvbr3yPE9APNzks4B4eCB71zl/dL+AeHjIbwHx8GAp
dffaawt84uEl3/nEw4uwQdnTF6v5xMNL/vOJhw9zwr4K7yo+8fDReeARDx/8
PS2nK/t4xOMOnQ8e/gdEkiPL
              "]]}}, {}}, InsetBox[
           RowBox[{"Unevaluated", "[", 
            TemplateBox[{"\"Normal\"","\"Triangle\"","\"Uniform\""},
             "PointLegend",
             DisplayFunction->(FormBox[
               StyleBox[
                StyleBox[
                 PaneBox[
                  TagBox[
                   GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.2], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                  ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                  "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
                False], TraditionalForm]& ),
             Editable->True,
             InterpretationFunction:>(RowBox[{"PointLegend", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.587148, 0.40736066666666665`, 
                    0.09470066666666668], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011111111111111112`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.37345400000000006`, 0.461046, 
                    0.12992333333333334`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                  RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "True", ",", "True"}], "}"}], 
                    "}"}]}], ",", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
                  RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
                "]"}]& )], "]"}], Scaled[{0.99, 0.99}], ImageScaled[{1, 1}],
           BaseStyle->{FontSize -> Larger},
           FormatType->StandardForm]},
         AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
         Axes->{True, True},
         AxesLabel->{
           FormBox["\"\[Sigma] of swarm\"", TraditionalForm], 
           FormBox["\"Max Torque\"", TraditionalForm]},
         AxesOrigin->{0, 0},
         DisplayFunction->Identity,
         Frame->{{False, False}, {False, False}},
         FrameLabel->{{None, None}, {None, None}},
         FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
         GridLines->{None, None},
         GridLinesStyle->Directive[
           GrayLevel[0.5, 0.4]],
         ImageSize->Medium,
         Method->{},
         PlotLabel->FormBox[
          "\"Maximum possible torque on object pivoted at 0, length 1\"", 
           TraditionalForm],
         PlotRange->{{0, 1.}, {0, 0.9826794919243103}},
         PlotRangeClipping->True,
         PlotRangePadding->{{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.05]}},
         Ticks->{Automatic, Automatic}],
        TraditionalForm],
       InterpretTemplate[Legended[
         Graphics[{{}, {{{}, {}, {
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              Line[CompressedData["
1:eJwtlAtMU2cUxxERC4gukzp1DMTNFXUmG6CbMPgTVxDsRASHm+BwDHW+Ikhm
AAfIhjEs2zTI3NrxEGGLyAABgxARBoJQaGsf0JZ3X1BKeQUpkYljbT0nubn5
7r3fOef//53vesSdjzhua2NjE2++LPdLLhV71alZeFgyVh1tP41X61yYOG2m
Ku8p1LldMR6sK4C48kqN64VJel+C/L0/eR5vmACPa4lS2O04xX62ZgL11u8r
UGb7bKPXGSPMC/OTKix+JD68WjhO++/D61Dol00+43BUFCf4Oz5AF+ulqKzI
AGs6bj3+zdyz/chaA7bGXGsxeTYgOOjNH09mj1E/jdjqcfdW5vIxlJh3K4r/
AdMhqzEuU48Ja71mJK1ULols9fDxtsRjZGyZC8m5Okr1W2E/XSdIXzOKxyZP
c4U2+Po4/XeGNwInaz/tkIU6q3Z6jiDCWrAD4XkHyhvqdKSXj/EgbouOo4Mm
1ZKwE/xrN0pvqrXUrwCaT3dvaErRItHSXoIQnJ2uXWEuWvJHhOx26Ru+VRrY
WEMMPS/mWHK4hvSIwetfilo+q0aI2lJAAt6pwAD5r2rSJ8EzH4bXpJ8a11ss
AqQ467Q5m61TwSrXWwan69lRyl9UsMpRyDBfnbyqxE9F+ruxLeRwOrtnGO6W
dtx6UOu+3p774TD50YNu1mLzroIhnDxhCTmM2abaVQ5D5I8C9g3+SyuTB2HJ
5lKhQOuCx+Ja4wD5pUS1h+76xrgBzFvSmZRIY936ym6wn/zrxYrey6/XR/cj
wDoAfVjYU5HlPtRHfvZhqIC9xi2+D9b2rvTDjhFRw5vsJX8HkBAQve9Sai+E
AksM4LMZduWfjr3k9yBu+DSpl/KVYFobHMILbeo7CT5K8n8IqvnsdYNCBazp
Yobh9N0XHTtOK4iHCl5ldYJQBwXpUUFYERu8oUxOfFRwYMTPZh2Qkz4VPGOX
vX9xvod4qfHJLqa9orCH9KoR6Vz8bg6nh/ipwcgtn8lZ6Cb9GuwfvpPQVtpN
PDVgJzbHrovpxqt0Giw78t7mpNe6ia8Wrn3lrfwnMvJHi0ctaQuMDBnx1sKJ
U+ayabeM/NIh5IO3GEtzUuKvQ3J1cOzNain5p8PIpr98FYlSmocRGP9w49R4
ScnPEQTm+gldTRKajxH8Hnk6y75eQv6Ooq/Iu/brdAnNyygM4rQtnkES8nsU
5cZB5xBnCZ138zlNeOlWJxeT/3qEa9cnnysS0zzpMfA9r/joOTHxGMM3tbKc
dF8x8RjDby/l3CcMMfEYw8fH9fLP7z0lHub/guzOtrCDT4mHAdLKy8+j50TE
w4DBu0v3Erki4mFAw+32+IxAEfEYBytv+NG3BiHxGEd6BWchKFdI8zmOoBS9
Sh0oJB5GPPwhs81vWkA8jGA17kwJLhQQDyP8/VfsM4ULiMcEfvYuXfSzExCP
CSS5Fbavru8iHhOIYZ4NizvfRTwmcZvFzN/O6iIek5h/0Pn2MVUn8ZjEBX5r
tYnXSTymcMIv7KImqpN4TOHQi8VZV5dO4jGFrkCmbZ6UTzymsdHEFEXl8InH
NP6+ePYpO5JPPKax6vl+/lEmn3jMmOvdf8JVduB/Gv0hXg==
               "]]}, {
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              Line[CompressedData["
1:eJwtkwtMk2cUhuskwEAzAjIUESZjgihRLlNn0FedCxs6boILlzlHKijqRKWO
YRSJohOmsmkioqIMAgIRGQIiKk4u2lJ6pxQoll4o0AsXp4gSxLX1nOTPn+/7
/++c877P+RYnHoja9RGDwWCaHvP76LyqEFXGKYRke2dyvxrDh/UllI8+O52Z
PooG92xDZEMhphZYXXZ5OELfS7DhC9+Nf1iNoOCKOcpxy71xgyTSiPuW/6tQ
czv0en+xAaaFaecfzDgEdxZN6el8LUaD39jabtfDTlacus7uHkof7Fg7U6eD
Jd2V+yjabzz6i6sOSxMuNE/4PITNbX//jSeHqZ8mxOauDf1xfAglptOy4n+x
zqci89bPQzBa6j1BY0jqORvZIIICzdEC10+W790RMUj1W8FyO5aVx9OiZcLH
VKENOT/UyE+EaWFv6ecZDj04GOMoGUCUpSAbM/Furd7xA6SXA+bH0oUlgxqo
M8wJ25F70y8vhaWhfjtwffXl6h02Ghw0t5fKw03n1hPMa2ryh4/ulWvO7QxS
g2EJIaa3h02vFqhIjxDXWt9dFe5T4VuVuYAITYerjA5zVaRPhOC9KUuVd5TI
azYLEIO9qW3bkhglLHIDJfg0Z/aBu2/7YZEjk8Cv3CXKPayf9HeicuvJoPIy
BTzM7bhLEec0a1m8tYL8kMIu5pjN8pTnSE4yRxesmU/P2Er6yB8ZIrgPjks3
9MGcbV6VaV39eM2hu3LyqxsX5bu3NPrK8dqcbqIbl77b9Op0aS/514NjXNbi
6iW9WG8ZgF4EhZWtmVvZQ372wjZrZyUrsAeW9rLl+C+5hfnkcTf524di1W8L
OOHd4HWYow929S0nkjQy8vs5SqPHj6ZlyOBsaVCBekHCSsE8GfmvwKrPPV2i
a7pgSZfQD6ZGZ6WO6iIeSmS8EC+LfS0lPUokMjTzr16TEh8lOJ5+VTnfSEmf
EtZNF13nvOgkXir48LoFVjc6Sa8Kzl5nfo0P7yR+KuTLPYYmZ3WSfjX+2qZw
aqmXEE81xvmR1mX7JfiQTg3Zvmne+SUS4qtBaOhCVpJKTP5o8Dyg5pVroZh4
a1BoGPEpSBCTXwPoTdS3id3ExH8Ahy9pt9YqROTfANLSB2at+FtE86CFX3GH
KjBZRH5q4ev/Mr/WT0TzocUy+88yiieE5K/pXu2afeRlk5DmZRDBp1yd8s8K
ye9BvAlgJGXHCOm+D2HypZddtaeQ/B/C7nDpl65qAc3TEDafXx/nlSUgHsP4
Pb3kzxRPAfEYxtf890972vjEYxhzehfV/bSXTzyGEeC0qk/vyCceOnilOaan
POQRDx2YWc1H+Mk84qFDUrjogI0zj3josXb55FXr1g7ioUeFDrxHaR00n3po
F91I9vDuIB4GdNkYY93lXOJhwPyFcKnK4xIPA9xyK/OaQ7jEw4jo4+ErIhhc
4mFEbX8df0tjO/Ewwt4h+14Fq514jCDuPasgMaCdeIzAOuNC7p5xDvEYgW99
0bu6OxziMYr8PTOP1qdyiMco8vR7xqf8OcRjFJFOm+zVr9jEYwyFEpnE0MAm
HmNQ5ryJczjOJh5jcDtc8jZkM5t4jENxfuz7XHs2/gd7WRvo
               "]]}, {
              Hue[0.1421359549995791, 0.6, 0.6], 
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              Line[CompressedData["
1:eJwtkwtQVGUYhsGBkcGmkQYDCTGMHFQ05ZZDwmuJQjMocommcStCwEpQwSIB
yyYlGskJIgtxIgQTUILoujTk4F5Y2BvsLsvCsqx732WvTomNpTtxjt8/c2bn
nLPn+7/vfZ4/tuR4ftmKgICA0uWL+a0PH8gy1p3DwdqQPdHVPjy6/wqdf63+
dKfFC25MgyuP24HVFWsnCou89P4qSq2xj1WNe9B+iVl94L6xOfdCmgfD7P8H
EDmb+GVfvxvLN8tPhnAs7wW1MMZN3/+CMfGeSFOzC6Ga7hPpob9jfWbOIf8K
F9hyl4ZR82dhR9T7TmzifMFbih+BIvV1Y6p9kfq5ic0/lsUVvLaIq8tfa7pH
8cmmY0eOSxxws/vdgq6r5npTugPJScziIyn6jKdn0E77C/D5xcbtglg7+Evx
yzsIYX28+aSh1YZVbD8iZHzW9tuDYBvy2Q3H8U3glfuRp6w07wR8dX27UpwW
mOqYgmJk3R06k8exUL9SdFb+wauUm1HFtHdChvs2XvD53WbKR478Ykn2tZ9M
CGDXFG7MqZp4cSaaZwpBBTq5/msjso3MBgpwpJaw/0KMNJ8Cv+71FEbUG9DM
YwZQ4kbIh/Gt2ttgx01SYfsrd07eEuvBjqNRoSrf8GytdIHmn4Yud4izRq/D
eqadGDUe1mvT4vzzlIcaZY055W9umceRcmbNoCouQvF9qZby0eDhvuyme71z
YKqFD2gQ9J3maMU/s5TXLNRRge+k5c7iHlNuaRbtp1s+7h3UUH5zMOPuk2GR
GmSwAmhx4NURrr5xhvLU4ue/07ed96vBttcwj8MvLqja6tWUrw4Pdc8kXPZP
QyZllg7inZ1dWxqnKe8FKPZvOOUJn8YatkE9Rj5IUDb1qCh/PdJTahzcDBXY
cpzbCIlKydmqVRIPA9YlNe/tqVXSPAb4gpIyndFK4mPAe+sqi2/yFTSfAfIf
Bpy+SgXxMqL3XMPK3KcUNK8ROyLOFg1KpoifEaKagS77R1M0vwnmsKLLiuQp
4mkinpN4VM6E8s5v2zgHJ4mvmfjKKR8z+m1vDTe+LCfeZuIto7ws2Nee7ygp
kBF/C/GXUn4WFJbUyw5XSMkHK/kgoTytqFvQb3yuVUJ+WMkPCeVrQ8UTZ5da
xsTki418EVPeNjzIGlXUB4vpvNvhZ/2ZoPztCETitn8PTJBPdvJpnHg4sDFz
lJPcNU48HOTXOPFwYENsdeLbfhHxcJBvIuKxiP4Oz1Z7iYh4LJJ/IuKxiKZD
K0PDJ8eIh5N8HCMeTmTsSLhe/NIY+ekkP4XEwwWuciYvZ0RIPFzkq5B4uDAR
7I8q2SUkHm7yV0A83Jjvbr3yPE9APNzks4B4eCB71zl/dL+AeHjIbwHx8GAp
dffaawt84uEl3/nEw4uwQdnTF6v5xMNL/vOJhw9zwr4K7yo+8fDReeARDx/8
PS2nK/t4xOMOnQ8e/gdEkiPL
               "]]}}}, {}}, {
          DisplayFunction -> Identity, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
           PlotRange -> {{0, 1.}, {0, 0.9826794919243103}}, DisplayFunction -> 
           Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
           AxesLabel -> {"\[Sigma] of swarm", "Max Torque"}, 
           AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
           Frame -> {{False, False}, {False, False}}, 
           FrameLabel -> {{None, None}, {None, None}}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, 
           PlotLabel -> 
           "Maximum possible torque on object pivoted at 0, length 1", 
           PlotRange -> {{0, 1.}, {0, 0.9826794919243103}}, PlotRangeClipping -> 
           True, PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.02], 
              Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
         Placed[
          Unevaluated[
           Unevaluated[
            PointLegend[{
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              Directive[
               PointSize[0.011111111111111112`], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]]}, {"Normal", "Triangle", "Uniform"}, 
             Joined -> {{True, True, True}}, LabelStyle -> {}, LegendLayout -> 
             "Column", 
             LegendMarkers -> {{False, Automatic}, {False, Automatic}, {
               False, Automatic}}]]], {Right, Top}, Identity]]& ],
       AutoDelete->True,
       Editable->True,
       SelectWithContents->False,
       Selectable->True],
      TraditionalForm], {576., -116.80842387373012`}, {
     Center, Center}, {360., 222.49223594996212`}]}, {}},
  ContentSelectable->True,
  ImagePadding->{{174.714236, 175.714236}, {1., 0.}},
  ImageSize->{780., 245.61684774746024`},
  PlotRange->{{186., 582.}, {-238.61684774746024`, 5.}},
  PlotRangePadding->Automatic]], "Output",
 CellChangeTimes->{3.684634471408965*^9}]
}, Open  ]],

Cell["\<\
Note :  the optimal \[Mu] for uniform distribution is any value between 1 - \
\[Sigma] \[Sqrt]3 and \[Sigma] \[Sqrt]3\
\>", "Text",
 CellChangeTimes->{{3.684542993377308*^9, 3.684543075369314*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pivotDrawing", "[", "\[Sigma]_", "]"}], ":=", 
  RowBox[{"Graphics", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"Brown", ",", "\[IndentingNewLine]", 
      RowBox[{"Rectangle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{
           RowBox[{"-", "1"}], "/", "10"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", "Blue", ",", 
      RowBox[{"Point", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
      "Red", ",", 
      RowBox[{"Polygon", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{".75", ",", 
           RowBox[{"-", "4"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.25", ",", 
           RowBox[{"-", "4"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.25", ",", 
           RowBox[{"-", "3"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1.75", ",", 
           RowBox[{"-", "3"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "/", "4"}], ",", 
           RowBox[{"-", "3"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{".75", ",", 
           RowBox[{"-", "3"}]}], "}"}]}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", "Black", ",", 
      RowBox[{"PointSize", "[", "Tiny", "]"}], ",", 
      RowBox[{"Point", "[", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{
         RowBox[{"MultinormalDistribution", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"-", "5"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"\[Sigma]", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "\[Sigma]"}], "}"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"10", "^", "3"}]}], "]"}], "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "8"}], ",", "2"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"AxesOrigin", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.676708174556182*^9, 3.676708189614781*^9}, {
  3.6767082290168657`*^9, 3.676708238918744*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"Brown", ",", "\[IndentingNewLine]", 
        RowBox[{"Rectangle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{
             RowBox[{"-", "1"}], "/", "10"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", "Blue", ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
        "Red", ",", 
        RowBox[{"Polygon", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{".75", ",", 
             RowBox[{"-", "4"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.25", ",", 
             RowBox[{"-", "4"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.25", ",", 
             RowBox[{"-", "3"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.75", ",", 
             RowBox[{"-", "3"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"-", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "/", "4"}], ",", 
             RowBox[{"-", "3"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{".75", ",", 
             RowBox[{"-", "3"}]}], "}"}]}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", "Black", ",", 
        RowBox[{"PointSize", "[", "Tiny", "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{
           RowBox[{"MultinormalDistribution", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"-", "5"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\[Sigma]", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "\[Sigma]"}], "}"}]}], "}"}]}], "]"}], ",", 
           
           RowBox[{"10", "^", "3"}]}], "]"}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "8"}], ",", "2"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Sigma]", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "/", "10"}], ",", 
        RowBox[{"1", "/", "2"}], ",", "1", ",", "2"}], "}"}]}], "}"}]}], 
   "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.676470766623321*^9, 3.676471003872978*^9}, {
   3.676471085936934*^9, 3.67647111513273*^9}, 3.676471326988613*^9, 
   3.67647197537925*^9, {3.676708033904203*^9, 3.6767080386069403`*^9}, 
   3.67670816978053*^9},
 CellID->70294289],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{
     {RGBColor[0.6, 0.4, 0.2], 
      RectangleBox[NCache[{0, Rational[-1, 10]}, {0, -0.1}], 
       NCache[{1, Rational[1, 10]}, {1, 0.1}]]}, 
     {RGBColor[0, 0, 1], PointBox[{0, 0}]}, 
     {RGBColor[1, 0, 0], 
      PolygonBox[
       NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
         Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
         1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]]}, 
     {GrayLevel[0], PointSize[Tiny], PointBox[CompressedData["
1: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
mcsSPhzTjBLuXcPAlSFx41XyTWAmmb5i+BILlRZp/Nnh1gbR8yMNVD8SXknu
XPwxoA8qBw1LbxM/VX82p656GReSF/hdudfPwIeJ5TGLNfjgudRJzq6ERt80
J2WVqiGIFjnWbT1OeOG/tpywSR4Ubwu6qiFK4ce7IUxn8254vNvY3e0H6RfP
lhhWpA4DY+JUx65OJs5Ikv/rcWAQos/sODXLhUb32sTTay2GwG9/y4dycv92
94O3LjEYA7GNd34OX6dwL9Nfy96qB452Rd1sWELysnubfqBDB6jEa9wtNaaQ
2Tt0rbmmBYwCLx8/MkWjXki7f134CKhcyVbb+YfkQ6JItx1jCNqfpukszmOh
ikp/RVldBTwSGTrr387EUwb7BWof9cJjKc+9H8IpFHvsLOpbWA0bnNfs509R
eHvBxaYL8nxYvalwTwXhuf1SJm+znvSBp/CLVboFZD/C4lavGuuCqmvltq25
JJ9/m8ctfzgCPQUrzFv1KHTNVFqk+bMSymS+FV94z0C+64nfeqFtIDj2x3WI
3P+G6fJFMRUcCLmWk2GqReNVx4UfdOSb4dJOs9XpeRR+mKN9X373EKj37K+f
uZmFRYdF7e1n90Dz+JYu5xU0Dg64rm4w4AFLQmfRfh8aK1uGJ6UqeLD73BRH
ZpDGvQ/+e7HCegzej/f62wIL161Q2tISzYGW3XEvv5DzvRtXF5jgMABBNpwm
y04aIx826W9Y1w+B78Xe1S8l82gphNjjv0Eh3zDl83EaLw7cLrLwGgSH3rLb
EvfI/jZ4nU0p6Yd1ZmImcuE0nrFXBXeKD6eUipU2JzCx/+Uzm9OX+8EtKrV1
7ggTt/e68Fb5c+BqnU7+CyvSh81kRl9kcOCpp7CZXxWFsXK5SpEOw/DthJb9
cSYL9zodedJj2AR5p1NeLW5k4vHBAdVrCwYgtmFe+2/iF6lGW9xNxdpAoPku
tegq6XPfhg6eXtkHZ/SadvySo7DwiwmVHjkAsEhG4t5uJi69O2G5rrET9up1
1l0l+k3ubPLaU8SHWZo/NHx0mCgrryMkGT8OwwFnZRIvEn/biyG7Fcn1yyyf
pHAoDPDYU9sv3A/5608FW8rQuCja3OXVJw5AtYeSuiqFZtrCLpedxuGsjnHT
8xoaX06dXPDlbBsoJlv7YCITP92WTFjmwQM16Vk72P4UDivHREfV/4UVOjGf
THMY6Nhhe3PTpgEYv8r7sJrsj9lV10E1Xi+cCHnwJZhioGDFYYFtOjwonFx6
78B2Gi8tnbAyJvqz/Ozy6NUGBua/YjXZhLbDs8VCz6tJn1x/PPNmwowBUEr8
UMElfU93ZcY23/IBkI+KznFso/BESbOgsnwnnFVg5DntY6GH1pEP7Jt/IN2/
Z532FyYucdpxWbd4EHS3j3yLIPfX8PHg5aQ7XJhr3Lgozp+JShl1Rz8tawal
Y9dGth0j/Pzm9l+zUi70vFs+/0wbG1+viYqrtxmA/WUGq5e9oPBrSOi216dH
QPhY21+5GxQmtP5zq23ug87P/LCMezTu3LXJpTmmFS7GBb+2nEuhTmPkJdFT
fWAatts0k+TB1tdXhC9kTsB8vrGPPsmnp/qC+W/oLogqT9z05C4T6/52H6pM
5MK1/Yv5xwmfrAzNMredy4UdaeJxoqQ/iE9pdjQ940HF9myRUaJXB9u9FW9M
hyHqV0/aly8UKlYJXztI18NrXZHj+kQ/bvWrWhRTm2GT4DLxFGk2mps/vJHy
pwsa0ECk4woDL3h6tt770g7bN5TrdUYxsbz8b/s50yaQHgyYdzCVwm7R5Zqf
7/SBhZzufZ0GJkYu2HgmobANco0cHyf5s1DkRq+CR8IIPMiV221L+FEhZf3Q
//P99IPFN17MJzxoWuFgYTYKY8yFP3fHsLH6hX7qiQQ+WJ243dZ1hsZcfx/H
lGW9UH0hLGBSgvw9tPz4hi09MH/z4yHhagq/H3FMsBEYhokCfqRBCAt3qWi4
B3waguH/qGNWy2hcIHImYffFLri25M7LnxQTF1r9W6Tc0giWoQKvOmeRvtfh
wGQXdYB+hOD3dZJMNLTv5CcM98OOrPg5ZfUMTPtmuOKDXCO8Ef0plZlF4crX
iUW7VnLAo/56qYIH0eNli/Qkm1ZoDG2X2kf64SYB27aphYOgEv68dCPZ/6Om
hRryJ5vh6VOm/qg96Uvek/dbexohOEiuzMKAQv4q/8Ja007YfFDV14Dw48hN
XUG91H7w2+sh1bOOwukI68uLmTyQOFxeFkh4Q6RhQ0wa2bcXNyWEdl+msEfF
w+ybFQ8m7Z8e8SJ5Eahmq7JsewucObmIdZP0oflWKpt7NPkQaij9PfIseT6V
aQeVORzozKx+toTk+Xm9rFkfOX2gYyc9pBBNocbmU8N/N/dD8ZMYYT+axqjN
56N+tjXClwj7UuF4FgpqZElemDkGW6cMH38keSW9xUso8OAozA1bZjJXiYWd
gm3XHz/5BuYeL89ECzOxffXrgpTCIdg1r0z6+ksaj2o8q5qd2wkihU7lGYRX
PaN01/RqjEK9wwaFc4RPXc6uLp08Nw1D16c2/NxM+C9DJNjJfwBGrk+wr5Hz
IN3XeWFZJyz8d5Lf/5rwW+JuhcXjQ9BvNZVYPIeFASsq96be5sCpGqlYRcKH
y9ubfOYm9cBZ6Q2LCkVpnLy0XLnlXg/s2sN5Ykvy58md1uRxDQ6MBWq4liyk
cVToU63Py35weRDkZ3SN9K1P+gZBc6fBZdET+2bCNy8jI43KI/nwX/LpwxPD
DLx7SjMv4xoPosNTPPaS+fXMP/Q6R6EPAgWPxAtcoVEmVVqHMzkMKru/rohD
Crc4br1+KuMfXIjXcaj+SeH7rd3fUsV74KtSQM998vpXUguDZcnzXQ/qVSlI
pHHG9uaVH9y4kNf2uKWU7FvtrvqNBW9b4eVJrQA3kt+f7i+7vMeHCz7rzaOr
n1Gov6WWmyLZD21qfseuhFK4NiYgv7+FC7Eay6t1bxFe/vFXYvFUO7y+L7/j
hCKN6tLK2+QkBsHmu3js3BEaN2ud7PowNAyrnJV5uTtJ/55tIGuY2Asomitt
4k3jSe0G2zcmXdD9NtZ35hjRi3NV04HfHNieOz/F6v+fd1zz3FEm0wcrzD6a
viE80eypPGv2wCBkWcOxdGEKv4TmGIQrNsL8TxfU6FTSD7+Kj7xb1QXeNzxr
fElezhG3ro87NwhtOOxRcJKNWhFfrNaf74aVV358TP3JwCMXNqof4HSAmLv6
Tr1IJlbB9H/VsVx4etmk7XEyG1PeGTfbHi2Fn392jmd8pdFx6Zk1rRFDkPxf
7UT2JAsdqqeWz88qgQ4J7z+WhjQ23j9pn1DRAPslPtw5bUHj8e2f/hMQGICB
r4+aROxY+CtC9c15515Qfv4me/gN2ZfJsJaWim7Y6SFUmLaB9LeMG4b1L3kw
/78gkfnSNFZbp5cuOjkAFfckzT2z2Wgvp23RdaYPVjMPmSZfYOH5LfuOXNnX
DTX9c5YFz2Xjzhnb34RtH4akpldSGq0UusP3gd9zB2Dt1nR/G0UKJw4t15r1
vQn2zmBImn2mMLhE86wT8c9jGnc0w98TPi3IZ8aOk35r3TGQd5OBL2J/3Qrw
HASLI1t+7SH+3H601veTLBfeb+G6eFiSPFguUFOVUgVVUynz9TKYWLzx48lX
XXwoH7uVEn+WRucbIkfdVpO8F7SYv0OGwgzJDlsTGS7ccQ6eV/GBxnTzB/+K
7IYhY9WAjQjpH08tBaI0dDvA3y8oz2kL0We440jRgwGYrprv9z2XjRK8Y3dF
yoagWk3Pr0CSxhcjMSHHbDnwJpVe5L2H9ImiRZs/UX2wSbKYeeUijUfucVXf
ne0A1eTZgRELWdhk3Ct8ckM78OWLtVyAjTaHVXjcMB7hs09D7FjS1zWj5tyK
bAGz/CsPeYQXlkTd/rIzkwdWB1KOl7JZGFGrOilU3gKJEXUPTiVRuCK3Mr3+
Fg/qsmYm+xG/3hn/92hgxyCcYnT/3N5O/PiPBVfSrxHijo56URwG1mV5zVC7
xYc9szatdTvLwlzZc6ES/7pgfprgMYYjyS8F7S2LR+vhR/J/i6cOMzDB/EHE
uMgIUOFytyNJvyn4YqXgv7ILrH63u/cQPRR3iDVQrnxIOXM3a+cNBtq1P+d4
EX/tMbieEraXiZnqSrdS0roh3HK8a/0nCr1j2yf3Nw5Bg4/Ge7EWFq5q1zH7
2kX4Ut43KZBL5pX2bliXzP/TAHflkAcLZaJpHfWHnXD4fcuElB0TJfQT79vd
64ONHxT69vIpPPJRWFd1wxDEhu4/7k94593RtsTd8zug6kG4vVQJhfdllN3b
lXngYqon1TpI+smJxL35YaMQ2P7y1WbC35sMiu70THMgl2Ml0H2ChRPLqJqQ
H62wMdg1ybWX8LQ2b6BkRidAvKRcFOlPg382/7hhNwT48kmP5xySn3a1HqqP
WsDu0poYDxWyX4Ocm7pihFdsZk8Jy9J4cH646grbXthqHRs3dZ+Ji9Y6zY/4
OAg3mObrRuJo3Ooas1LxbTd0hDJFd1SycIYK9+AbSy7EXQwePUb60UGvjD/e
CxvhhGHNve/uFF46XLxX2XIIjs7LY1Ck32caT20/R/rBG6eGsEVbKcIXh/7d
kuOBxciJmacIj+fcjdgiPd0Dgc/jmIwwCp313t9PrBuGdv0R4RYjGgtokJa5
2w4aOgPzqvtZeHnfu++G10bh1PlhkXSi34qpgbaOuH6Ii0hTmEHmJejXZ8pL
GwQpLcV1BxaTPIwOPRfpNAR19vec5mSw0Pi/e2nbKzmw9L5txsU7bBQ377ZN
9xoBxR0ePxvUWDh+qfZm344hsJ9xcKtNABv9njtb3DPlwpoNdjvVDFnoJXn/
2DH/YXhvFxRklPz/PnrAde83PgQ4vuxddI6cv5VjemJkF7yqak/wvE9j78ld
6642dMOB25+3XXKkUFbD7qTwy0GYmihtvB1P48R273QjwQkQW9pc972LieLb
yt4KKXNg3uo0T64OjXe5dbPW/BqArL8e2YvkWPhlW13kd9tf0HuWf+kgm42W
2/7MXP65HwIsOYsXk35SKyVt/YQzCE/748W2KBA+H9n9MyhgBK4/zRnibKIw
SclkqSS/A/YMyffO76fxg2fr3XVb+RDhpeGyYpSJkn5LzsomDAJ3keHhj3dZ
6J+p9jlesgs+N6VvOUPRqCXwdTxP+f/f51KbE/mD+L3CsrHZgd2Q4ajzrZf4
586b4RdvCHTDs7qS5hpkoskz5ZY1RN8uB4R+iFyn0TXeM5d+NQa3DMYD9MWZ
mF76XMZgOR/Uzjh4Sh6i0O51b1y/9DBIyPl2i1vR+GVDy5b871XQ/s3t+nVn
Fkbn79+wsKcMUq31s16R/DqiK3fzFDkf1y2bGlMI/0u7nb5026gPYk1Wbe35
j0Y6W+zt9X88kC3ckzD3EOHH3/VO90cmga1ce7XqPIUxc67NKbIbgJmjbs96
8pi4WG/aIJ/FgehYR9EVieR+8pPZ04/r4UOAX8OH9RTuSjuz9EYWFy6a+JVX
skm/fqC4w5bTAzdL9HfZf6VwT4FNfVttF5zPuqXmMI/CvLT+bSOdHJApcPUI
3MrC90sZPftGmiDbO+aSnzQLSwoaUkqdB8HdaqGeQiONysVqOdf/ToDV9Ict
s7oZqDLFeB+o2QEhC3gH79gRnnI+csr5MgeKi/9wnjylMPl6+fsjxsSfVhbx
f/kRPXxKCG+50wty+N9ny380Wg0Hf9lyhAPlra2rv/bRyN6yT5g5NAhR9+S/
H3rAwvrW4Yfxs7pgx6Xv77JKmbiiWoT5jNsLsva6TbfHmbjxMr/YtqcBvAc6
7p3PYKBCo9NM043NwPtwVLz8A9l/hv7JTHYfbN39LumBAI0ad78ePf9gCC4/
8+FzlUm/+pG9JpQ1DJkTtRyXQDZ69IbfnHrEASsRyan7ZD+7r55e4RZTCX+e
a+9kh7OQv+1VtcslHgRreFTXZdNoVK4VbRbeBR0RKx73T1DIjZ0z36SVAweL
xnVukvvXemPWuy6xDVbODtkV0knj2qmKO/tEu+AX1zThnhQLP1pUrIga6wO9
VUU6l8j8j5eVB8ooEF69vS9H8xaNDyyvWf8x5IDNIRzeNJeFA6aSYh/vDcGQ
yVWPIeK/zKCz3Wu294J4kajlb8IzZwr37tVFDiSpynn/KaJxg+28N1f2E/+p
e5l16jYLF2xLqvXfNgiG3Rc0J1oo7JAVWCCQ0QkBee1VJoTnXYudd5z5S/jf
hO0p1cBAtdDnfB2i96X80Upxwqv9kw9E23LG4OE9u40+hFeCv5d9r37eD0Kh
KYU3WpmY1nDRVtyPB2lle1ptX9B4vVh/LJDbBvflz01tJbyT4vtskff6dsjJ
vis1GcnG88vgeKRfD2jSDiIrI1nIWb4m0tFhHNYZlRzLjiN9mH0pz9eCC5n+
5z1ZxK9k6qZq1vV3g1Nq2nEDM6LHpd/hhBEPuC2Pm1V8KIw2cc8zntEKXntu
hlo8I/PvD7IOmdMDXZFb5hT0Eb4+KK83W78HjOzjLf//fb0fa+TFMq8PQHBE
2HnTCgrNd+0J1VjaBf0muzqdSB98ZDvjeZnMEHRcbTMsJH63ZvvrpASrchAJ
K7qdQ/gkq9nk8ZzBXki4Gj9zivi9vpbpgsT1XFjc1XOFyWHirTi7Fg/PPvi8
SN9Jk/Aa87+MRYPVzXBfSnV36BoW7hOz/Spv0guXFdfxqr4Tf2Tm/5tYwINS
roOP6m0m9iq4lbWZ88Fp0+vbG48QPhPbIVeuWgNrA266gQ7Ja65CsTWjGwpv
rZJyeEzjc7Fop5gDrSDnrKHwo5qFo6En41sD20HOsG32GPHHT97r0vJD+bDt
rHeohjwLV3w+byOwagh6PsSbUL5MFJ3T8mKdFemzW0U9dksRnrh9IL2X4sP5
j7M3vl1Fo6yIY9vHEA4070ftzn8Uho2vFuGYN0K6hHSRsQGNmu9296vE8cF7
SQH3w0YK13u3vUifTfLq9WZ6byiNC/vlFS0jmoBlHJKZUkb4Xr5KuGpsHDZq
L2RPHaYwYdOOtdb7CJ9frWz13ECjSWL2GulsHgwpSeUuINcnaXRIc5u7gHPb
WKzkARO3C35IbqzjgpiJbvG5z0yMOlc5u4z0teg7RYljATS6da21yNFrAo/Y
4+GRRM8uqU99m425sGvFngYZSwrZrnOfMGZ2gI7h5x3jHyi84Xpi1Ht5P3y+
deUKl/Day9btdam+7aC38PfK7xsYqFnpEVcrzoOiKIOOHnNyHu5a1GQrD9gf
mrInt7Cx/eTFmfCeA/vb8pwzV9D4MkPcvozHBafip1FFNiw8cM30+IDUCFgb
zYYTJI/9XxkuyVbuhG+FdFw20Ngi9U0r6xAXfgvUaOgTf7gd+yb+8vx+MDW5
sOoC6S9ibyr43ON82FQ0cGHZcgrdSu6uXTXBhSsSDJsPpD/vUGp8tPrgAIye
yU+628/Ehj2b7Z0Fa6ExrXfntRksPOa0UsDJZgBClJdpHKmhUHBfZVmYBg88
EuSWu/qy8WpP77fgq3yQrk77nnKAjWd1l/d5E96yD1nPWEf8wszznTmvlAsn
IgvvmpF+9U37cfemg70weXnGvG3TNA62fo7PkBkH2XrzdEmg0OZA6gU/xWFo
Pf+0TTlZAmfPlFrjfmgQ3g0HAZA+Gd6wvcmVNwi789sep6jQ+NXH9dcpm264
b3ury9yJxvPs0ZLAhzUwmuVu5RxF+GCdgfflow0Qweq6MOMMmf/upNWcx23w
+fBzF4vNNN67bdvSNYsH03xB6z0TNKop/NI4pdgLzRnrDWZHEj9WEJofE8aB
9h9eEj+I3mMTj80Ra+ZBvPf5yH1BDLx0rK/xcwMPJnvvLXxRwEDqUvhZN8Nh
+GS7fbNVGo2mx6NOFpsOwpxp/Vj8yMDOSHt1pS+NsDIiTfLcbBZOzZAw+F3I
hXVluy/776LwdH+oy5YZY2A2tOyhwyTRw+uDRZ90OGD2yrd0ypnoZeRwz1Dl
V/D/JhTIJeft4KFlFrahGfCfR/KBOTQKtF1OtS8dgfLMl9kPL1NY+shS2LBl
FNqLrG+2/2TiGr0XT35H1sL+xvmrkndTaJ0UdaLAhgue5sPgrcnG1qpJ1Vi5
Hggo87PYs4DorfdyQrHOELy69zRprjQThYSGnsTd6YNQqUPrl8aTfslxhE9y
/fBB8MCf9k0sLOoMjHN05MPUCnvx4PksvB5CSaveI/OKc3G7mUBjhNnwgwjn
flDMm2MSZ0jhOdPFnMsPeMCB671Tt9gY9svddklUA6gH7ZdKK6dQLvOF9mLH
HvC0yh10f0b4Yjr0zR//QWixUdcRCqfRPvaUre190pcLV6SZXSJ5eD7CYjqo
FXJuL3f5SfIsaKuh8NokLkQZ1U9Y8Gm0+CQqGBbIgwkvh9GMeTTmvY+Ie+0y
DNRf59Opw0R/tXOul8fx4GjL7erjaQyEmor9OYUToOPeLd6Zx8AVfflvBXZz
4UFMFHOjNwufjLy5ojbZDDkh707vjaKxhPKL3PmqF7yrJXpCaQqFPjeKua/h
gMHkNgXWGIUKUi8sNRUG4XOLb0SwLo3Fp9eus5FrgIysLO1V8hTOi329p9Oa
B9c89LW8VzBR8e8ZCdw3AixJR8a7YSbSEXpP7Hr54DxeVLFImcbXqi5LZWYO
guW7b7MvviU8PzPbrjG/A34doRckeRD+QZH/Yn51g1rcu/z7Pkw0TN73ybGl
DXJkh5dGS5O+296xc85WDpyxac7WdGdg+2v171EFXTBtKu0p50Vh41XVwwZS
YyCb8KKEWUP41/zXgNG5YXjEqHm2w42JVkof1ts97YLvbjGdJyRYKNKT0xS4
uBP2bfz8nynx0yMPvLv+SvJhdEfpY1hCoZKVz4uXbwn/lV/yXL6VjY8vr3VZ
9bwPkhlhU18GaPy1REXkbXI/XNXLWLGWycQnD/IeziC8s8TP0CYwhsyTua/j
6DUeqL+IieybotDePcZKx7AT5J0W/pkVzkT3uIzGGVFD4MJ0FdcmfqfP9T13
Krwb3t4pLKiUpJF7aCQvXZ0HYuxA25UsNgpzTQS1dw3AGcw+HPkfE58alyvv
C+gAefkD4xe8CY9ad/MuVHUC+3f13LWWNNrMYt77Ht0N7W/c/DvN2LjcZfC/
7CUjcPho9Zvv6RTub1lzsms/Bw4tWq293Jr06T0Ngiqiw3Bi5wFoO0Pj+xke
2+0nuqDowpLlN+/R2Bjvxofxv/BawX79sx4a/y14klUgPQSH5778/GIbhU+u
BH4IVBwEp505ugX2LKxkpcdNmA3BSXbkMZubFH68bpxeItID+3MyJJ8p0vjn
QsUi3RUdEL9YpHLJGpJP5y6v3vqzH8Ia/T49iqDQOIFfdMOmEyIcGqVTiZ6d
fn63NeX3g367+ERLCI3tfPkWubgeWD9z7Zqj1RRKzXmm/bC4G2R1VetWkT4V
pzljE1uqFSIXBVZThTQKRi5s3k34J6p7VH2pJ+m/Zi7FmuaEl1dZxr2IpPGh
V7Z/AH8QOh4X2jnGM1CeaedB/+mBkAO/3I/vptGz5797uqvG4HPIhP37WpKf
/vl+t31bITlZIaPuB4Xi95dpPOnjQqLtslqN2yTvJY47a5p3wkyX9HfBPCbK
7WrmvtLshodUS7B/GY27et4fveXHh1hLjXtbI1j4bY3UspyV01AdZf8nVJKB
i7c+PVrX1QGdOy5tlAxi4sLM7DXbT/XCQ8eaWwdI/uBFm0Ua7CH4ItF6N534
g9ipi7znvGHYvWyH4Gt5Js7M2ecxTvq9vxnzSd9hko/SHry7D9rAeJbv0vtX
Sb+SZZQkMPhQkbOtbiyPQvfCG46rZw4Dq/rdv7DfDGQ/2qNT49AAi7YLCx0k
55vV1TE66DgKK+TaWfYbmTisXaSaZtQJH9Y4KAxrU+jQlfV7X3kd2IZML0gT
YmFa4P6Ws2+7wSexk3GT7MtLTwkhrQ2d4Lt3QcRoI4WaSjtuSWziQpjenfNH
Sb/f+V+G+5rcBth5OhnPNEvg4roP64dekcdPLTp/OIGJUw5aeStO9QGqHj0w
PUChYnRtX2xdP7Q9axFrUWSgi/JRwS5nLnCf20Z6e1L4fOjwOoOSAYhosVLb
lcPGyuz45axNVfC9+Qlv1mIKq9VOqa8U40JtfOOy24SXCzYud+880AMv7LOv
nXNkYUz+RSWjokG4JbvB8KI28aPn3mmDfyvA6u/B+bNcWZhOtSr/5vWB7+CR
xs2tDLQQeiDgMVZN+rB3UZ4IG6k+97UhN3lwqu1Z8wDJf424T3OXdA4CeyHk
peqR338mSZh+HwHzq3LjhTNJXgvIFHXoVoOtSrDESSkKRe2oh8vDuuD4tMDE
DCEmzk/te9t4vAPGxX08F7eTviG7hnGuaAwsFfo+nhemEd3m6RX7dAF3tkEa
fYfCY7lm354t40Nxib32h4PE703L9Or6m8BFnKn8bxWFsuLGz+XT+sBbbZ5Q
HNEXbRh6d7KWAwrTmwvKzrDxnOddK982DmywWLVOdg+NIy8ez5O5xYHVSyOm
9Ej/Pt6kcGEoqQNu2xZrTc1k4yXnEw6xSwdBgKozSHvMwAxx13JzwQ6QuK3S
mUn27ceNsZ8Oczlg4XWgef0nsj+7k5Q3dPbAj/p7K8x/sVGDVuuvUOOBUaHv
/hrixwvlb0TuNyb9Tvd+2eQdFlacd1af9YIH80V4125+Z+FczT0X9j4bhi/a
NtHV1jSWndpUtH9tB3zJbWH9//s3nnqXZKIaO6FZVdBGwYiFbSd4Tju6uqFs
3NsmvIL4d3cVY4zM/2L4wtpjv1no0K39aIlHP3BPyDNiG8h+/uV2lJ4YgGkJ
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
       "]]}},
    AxesOrigin->{0, 0},
    PlotRange->{{-1, 3}, {-8, 2}}], ",", 
   GraphicsBox[{
     {RGBColor[0.6, 0.4, 0.2], 
      RectangleBox[NCache[{0, Rational[-1, 10]}, {0, -0.1}], 
       NCache[{1, Rational[1, 10]}, {1, 0.1}]]}, 
     {RGBColor[0, 0, 1], PointBox[{0, 0}]}, 
     {RGBColor[1, 0, 0], 
      PolygonBox[
       NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
         Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
         1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]]}, 
     {GrayLevel[0], PointSize[Tiny], PointBox[CompressedData["
1:eJwVm3c4Vv8bx+2vsp5tr4yGRFLZ95NKkSQykxRJmiqllFEqRIOkQlmVlKJU
Rjw3IiOi7L333tvv/P7yh+s6zzmfc9/v9+vlucgeP292goONja2Xk43t/z9P
PTb7RfOdAvZMb0aVJhVXrGLYSqPaYcXwR+AxIOGtiSBayMwgrHrmrPLFi4o5
2rpHlh4PgobLpuaU5zTMzbW7t9BTAwWD+8L/HqDgyTFq4t7TY8Cj87TK9BoV
b+6K9qNbTYDG87Krwh9I6CL50H79r2Twn+k/68/kwwRP5XaL6QX4sy3NZdMI
BV1OlZTJfiyDViu3UgcSDfcW/jP9KL0I0s+7ry7L0ZAi+jBZg9kK8R/yVDT9
yfhU5viD57+nYMud5vmcXAreZpOkeWyaBTHfYX7ZcyJod7Nl+8whNuaDDqFm
tXYa8lnOa3HdnYVf538IbTKmYc1028bV50fh0qMM4/3mNEw+9Ew1zD+NxWP1
d6I5m45JEoxT0yWz4L6h14flwMBrTWw7KqK6wdPfe9+Bw3S8YcKekMExAO5t
pzePPqSiS8JEC/5uBC/KNWFrMg0P3v5ede3UJJSr3e/WOiWCrTaPatMF0oEt
ZWEm0o2CCy/4LvpdH4eHU+Ei54cYeMvz+RZ9vVbW2lVx8eG9FFxD/acZk94M
a/ZZ3lzeIoorXiWPDx8Zhk4VmbLMD6twh0mNboVMOyje9hyt/0nDlwO57//e
42L+jBtZ63KVjvUFOWv1ZMfBKua4l0YgDR2SZ7dp6zcCi233SKgwBe1VdMQt
3wxBpiT/zZIrVOy4V5djUtMNbIaDyodqaZh5TUvpueI0CF6T/+c0SMfiNaNf
z9T2wt3vKWkq0WQspE/lLJ1nY/4ZVVaaNmFg0MEEuah7tXDcWF42X0cclVxL
ml6+74dSC92WO24ktI7y5qRbrEDZPr5Db/3I6MPbJq5z9zcrxuOmXt11ETTW
bbuV96ob+AVjdvyVJ6NGXbr8yLsZ0PcSXxO5Vwh/r5d2usFZBndqYix3SDLQ
qJwUvOgzB1Guj+4euEzGogPKS5wpM8B5mMl/S0QELdKvijmt52SaYSiVl5OM
CU3Rvz3UFsHG0Tj4nY8IPk8zL44LnIfglDjXuwEU1NFyXN02XQs3+3jM+muo
qPW58KyUYz205wg/ngkTxsvT3mdKNrIxdWP/fYlNZaDEipPWBo4lYOPgpi+d
p+LLiaRNpSeJ8/kcy9Qfo+Dk7lfqJp3/4OlWHoEx4vxD3m9lOhexMR3r2ZMq
Lgtid8AoNWp+DCzvxewPXBTD6aB9j4eOTUHmThnejDcMVD9/bJPto2a4HWkh
5WQngpdfe1rnnG+Hvdtjj9Zn05B3pULrQnUuS+1moOepFQo6Pw7Y9tWNi1nU
av4lmIeC4WoNK9HC/eC+xQTmz1HwivMezlOW7MyQgH0TTYJU/Biebb76/hSQ
/Se2mLBI2MojKGHyaxBUyy74rI4i4aZyDf+j+9iYnlUCjwq2MrDyY8Bj6qVq
mJLRvrFM7P/qcfm+WPM62CoSM3+5k4SB7uF2d6qrIctx3u2KLx3tw/uT03ey
MS3j99vpcQmhjPr3msLaKXC7eN6c35uCvJrFH25HD8MN9+Y9Qdto2LlVQSQr
bBCefZspDq0SQf4jx6ZH8qvBdYf2E5YGFbOslH168yeBP2Vue7o+A/8C15vt
DdOQV2271tiIiqbf1aqzu5ogWbvo49SKKDIb9Q2ZYm9Zl1xnrt/SI+GjFX6I
etUBfUlrMtsdqZjipSsXLNgLPyWtOFONqTgtdX505d8cHHrCdO8tJfZRbGjI
srsC4uPN+CKs6Xji4SxXrPsi7L97oT+cmIcfASd/9jXVs8w+DSTLb6ahn6ue
SYr6HJhuuuxfo8VA6splhmn6OHypy/P9+HM17jWOVZ8+3grPHIODVXzo6L/V
pCB1SytL8eLhaF1LOlJWM1YV8Q3C2NeEpiNxFGSbXnO44lcgi+H75/DPNiF0
cQ77lsQ/zDp7zlnhiowEJptuj11iFUM11dVehkXFTUMfd1n9WQQ9f35X/m9C
yLw7u64pNBY+5rJW/ZQTRueg0APJ2TPwevvJWLMHJJRqFuv0/lAN/0m5Dl8c
EcZDymd5hDimQU1O+scaIg/qSzSZum/ZmJo/pt3uvaLiSS/T83r6E8ApGBN2
XYeG5o8+XVLfOQKbes6JRQkJ4IeVcyL7CipZy3e0tTWOUtEuMF/ZVGUCbmwN
fv0rhoE3Ah6qvUuagM/SVAZ7IxlXt3av4fg4BdPNZXcTXlDRbPNDL2O5WXhX
5vGHN4iCai+OpTfKTUN02+08lgwdW++5lST/YWfu+H2IniBCx22685dfv+Ng
zouNO1QPUVCdM/LNrMAkLMaJxKxaFsRHfo1fbwsOgWDGodKJ32SMfjVzz3ml
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
Wx6w+jsDgztc20fOC+L/AKpr6cc=
       "]]}},
    AxesOrigin->{0, 0},
    PlotRange->{{-1, 3}, {-8, 2}}], ",", 
   GraphicsBox[{
     {RGBColor[0.6, 0.4, 0.2], 
      RectangleBox[NCache[{0, Rational[-1, 10]}, {0, -0.1}], 
       NCache[{1, Rational[1, 10]}, {1, 0.1}]]}, 
     {RGBColor[0, 0, 1], PointBox[{0, 0}]}, 
     {RGBColor[1, 0, 0], 
      PolygonBox[
       NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
         Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
         1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]]}, 
     {GrayLevel[0], PointSize[Tiny], PointBox[CompressedData["
1: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
       "]]}},
    AxesOrigin->{0, 0},
    PlotRange->{{-1, 3}, {-8, 2}}], ",", 
   GraphicsBox[{
     {RGBColor[0.6, 0.4, 0.2], 
      RectangleBox[NCache[{0, Rational[-1, 10]}, {0, -0.1}], 
       NCache[{1, Rational[1, 10]}, {1, 0.1}]]}, 
     {RGBColor[0, 0, 1], PointBox[{0, 0}]}, 
     {RGBColor[1, 0, 0], 
      PolygonBox[
       NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
         Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
         1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]]}, 
     {GrayLevel[0], PointSize[Tiny], PointBox[CompressedData["
1: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
1JgyJbE/i6jLZ7aScFIO7ol+Fnq3qR152T5wdrVhzc8R+xin/F5c62G6ttnX
GZx39vV/u26uob/Edur6LAMs2Gt43XZOoNCdGoHuJwTgAj7O0YrNoeclx5d3
lDOhw/SJ7fLjKORS/Iptg6wUBMfQ/X65z6FLB+OWunaR4MMU8kFbeLE0zeKu
AXMpKDxVe/cftR65NdVJB1pR4cmePLFzclW4w5UWQVlfUajbPLS8VM+GES1p
H75KikPOa73bs+/qcW4RUop5GgnmCNtXw3YM4N+z+heaa8VBkiLhTvUnYDZ1
n5ctrpMhe3QoJbOkDzlGmG2XrRCC1FTDhi+HpvA2XplDwTWicD46j2hEF8C0
N4/VMM/zQdTd6l8jSUuoL3mPy5/vrPpakw8BxosRtDl7G5K90cDX5Yc2SXW4
ddP9z9VzAvD8COPvrCwXRozYJvTtLAki/sGIN88MGuMJcM89IAKH9fg/jl7/
jbzvxSczfglB+tXqDRV7alDXyoeTD41FWPdfVd2mMI5SPDbNvq4lA4Zbposk
zyLxWwpaD/tpcOjt+yebvAdxG8r65RcvyKB2u7iEK2gUNT9fjr9QSIE4kbQV
7ocTiLa7RtlfSwBKT9fajV7iwzqqLB7lOCzj8j/2Tdu3/0TUCp0fx7tosFEz
g08zawXlbOy6UDdPAbu5sqy95W1ISXTNolBGHFI/i2QEETixLe+iDKVyWDwH
qnGvdP+gM4yJLYcFBWFzyC6ZmOVFFLpRNBv/SIdzBzsIagEE7BhVSIctmQxO
yy86xXS/oN/m9Y/ZIqiwkGircOzhOnqVdyXEvp4bnH0p7//jW0A9+wXz8kpF
IX34tqHu70WUU2jmdRWRIV1R3yZpqQ1F2DEe7nMQAMl5Tw+fl11opMSOsPU5
BVSVjz/tDGpEBrvhsPogFajtjLOFh4kYWdUq/Ph/HHDLq7q15sg4nv/Jlqlw
SAzKnu3L1OcnYJ8tQg0vPWJC1svb4YEj7Fj1pp7UN3QSfGlpLz7COYhqbls0
hChQwFIsvz+XlXcnTvQ9o7hSwDhaY2M5TyfS0Xy2ys7LB6rcf0UPN60geuvc
x/b/yADH806p2K+gi5e2LPLJiUPxccPExW8d6D02sEOmgQoDqv539Se7cQ3B
K1GMWwyoF/FraPbnwlDqznP79rN8RZb00KJiClGsO2kNFDI80pQOg0xu7KRi
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
       "]]}},
    AxesOrigin->{0, 0},
    PlotRange->{{-1, 3}, {-8, 2}}]}], "}"}]], "Output",
 CellChangeTimes->{{3.676470783775257*^9, 3.6764707939130287`*^9}, {
   3.676470829920199*^9, 3.6764708640944843`*^9}, {3.676470903722499*^9, 
   3.67647093557904*^9}, {3.6764709802999067`*^9, 3.676471004411406*^9}, {
   3.676471098371408*^9, 3.676471115749959*^9}, 3.676471327689361*^9, 
   3.676471975896736*^9, 3.6767080397143373`*^9, 3.684634471477928*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Problem 2:  a free object (no pivot point).  Where should swarm fit to \
generate the most torque?\
\>", "Subsection",
 CellChangeTimes->{{3.6764621771486588`*^9, 3.6764622264149523`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{"-", "1"}], "1"], 
    RowBox[{"x", " ", 
     RowBox[{"pdfTriangle", "[", 
      RowBox[{"x", ",", "\[Mu]", ",", "\[Sigma]"}], "]"}], " ", 
     RowBox[{"\[DifferentialD]", "x"}]}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "assume", " ", "the", " ", "object", " ", "COM", " ", "is", " ", "at", 
     " ", "0"}], ",", " ", 
    RowBox[{
     RowBox[{"and", " ", "the", " ", "object", " ", "extends", " ", "from"}], 
     " ", "-", 
     RowBox[{"1", " ", "to", " ", "1"}]}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.676465933957417*^9, 3.676465936137473*^9}, {
  3.676466161477537*^9, 3.6764661745402927`*^9}, {3.676468233532557*^9, 
  3.676468252757174*^9}, {3.684533543640164*^9, 3.684533573457127*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {"\[Mu]", 
        RowBox[{
         RowBox[{
          RowBox[{
           SqrtBox["6"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", "\[Mu]"}], ")"}]}], "\[GreaterEqual]", 
          RowBox[{"6", " ", "\[Sigma]"}]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}], "&&", 
         RowBox[{"\[Sigma]", ">", "0"}]}]},
       {
        RowBox[{"-", 
         FractionBox["1", 
          RowBox[{"9", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Mu]", "\[Equal]", 
            RowBox[{"-", "1"}]}], "&&", 
           RowBox[{
            RowBox[{"3", " ", "\[Sigma]"}], "\[GreaterEqual]", 
            SqrtBox["6"]}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Mu]", "<", 
            RowBox[{"-", "1"}]}], "&&", 
           RowBox[{
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", "\[Mu]"}], "+", 
             RowBox[{"6", " ", "\[Sigma]"}]}], ">", 
            SqrtBox["6"]}]}], ")"}]}]},
       {
        FractionBox["1", 
         RowBox[{"9", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Mu]", ">", "1"}], "&&", 
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", "\[Mu]"}], ")"}]}], "\[LessEqual]", 
            RowBox[{"6", " ", "\[Sigma]"}]}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
           RowBox[{
            RowBox[{"3", " ", "\[Sigma]"}], "\[GreaterEqual]", 
            SqrtBox["6"]}]}], ")"}]}]},
       {
        RowBox[{"-", 
         FractionBox[
          RowBox[{"\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", 
             SuperscriptBox["\[Mu]", "2"]}], ")"}]}], 
          RowBox[{"18", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]]}], 
        RowBox[{
         RowBox[{
          RowBox[{"-", "1"}], "<", "\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           SqrtBox["6"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", "\[Mu]"}], ")"}]}], "<", 
          RowBox[{"6", " ", "\[Sigma]"}]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
          SqrtBox["6"]}]}]},
       {
        RowBox[{
         FractionBox["1", "2"], "-", 
         FractionBox["\[Sigma]", 
          SqrtBox["6"]]}], 
        RowBox[{
         RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
         RowBox[{"0", "<", "\[Sigma]", "<", 
          SqrtBox[
           FractionBox["2", "3"]]}]}]},
       {
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", "2"]}], "+", 
         FractionBox["\[Sigma]", 
          SqrtBox["6"]]}], 
        RowBox[{
         RowBox[{"\[Mu]", "\[Equal]", 
          RowBox[{"-", "1"}]}], "&&", 
         RowBox[{"0", "<", "\[Sigma]", "<", 
          SqrtBox[
           FractionBox["2", "3"]]}]}]},
       {
        RowBox[{"-", 
         FractionBox[
          RowBox[{"2", "+", 
           SuperscriptBox["\[Mu]", "3"], "+", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", 
            SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", "\[Sigma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "-", 
           RowBox[{"3", " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"6", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
          RowBox[{"36", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]]}], 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
          SqrtBox["6"]}], "&&", 
         RowBox[{"\[Mu]", "<", "1"}], "&&", 
         RowBox[{
          RowBox[{
           SqrtBox["6"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", "\[Mu]"}], ")"}]}], "\[GreaterEqual]", 
          RowBox[{"6", " ", "\[Sigma]"}]}]}]},
       {
        FractionBox[
         RowBox[{"2", "+", 
          SuperscriptBox["\[Mu]", "3"], "-", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "+", 
          RowBox[{"3", " ", "\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"6", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", ">", "1"}], "&&", 
         RowBox[{
          RowBox[{"-", 
           SqrtBox["6"]}], "<", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "-", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}]}]},
       {
        FractionBox[
         RowBox[{"2", "-", 
          SuperscriptBox["\[Mu]", "3"], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "+", 
          RowBox[{"3", " ", "\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"6", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", ">", 
          RowBox[{"-", "1"}]}], "&&", 
         RowBox[{
          RowBox[{
           SqrtBox["6"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", "\[Mu]"}], ")"}]}], "<", 
          RowBox[{"6", " ", "\[Sigma]"}]}], "&&", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
          SqrtBox["6"]}]}]},
       {
        FractionBox[
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          SuperscriptBox["\[Mu]", "3"], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", 
           SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
          RowBox[{"3", " ", 
           SqrtBox["6"], " ", "\[Sigma]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "+", 
          RowBox[{"3", " ", "\[Mu]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{"6", " ", 
              SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
         RowBox[{"36", " ", 
          SuperscriptBox["\[Sigma]", "2"]}]], 
        RowBox[{
         RowBox[{"\[Mu]", "<", 
          RowBox[{"-", "1"}]}], "&&", 
         RowBox[{
          RowBox[{"-", 
           SqrtBox["6"]}], "<", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", "\[Mu]"}], "+", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", 
          SqrtBox["6"]}]}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}},
      Selectable->True]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxItemSize->{
    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.684634498240581*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"TorqueFreeTri", "[", 
   RowBox[{"\[Mu]_", ",", "\[Sigma]_"}], "]"}], ":=", 
  TagBox[GridBox[{
     {"\[Piecewise]", GridBox[{
        {"\[Mu]", 
         RowBox[{
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "\[Mu]"}], ")"}]}], "\[GreaterEqual]", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "&&", 
          RowBox[{
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "+", 
            RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
           SqrtBox["6"]}], "&&", 
          RowBox[{"\[Sigma]", ">", "0"}]}]},
        {
         RowBox[{"-", 
          FractionBox["1", 
           RowBox[{"9", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]]}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Mu]", "\[Equal]", 
             RowBox[{"-", "1"}]}], "&&", 
            RowBox[{
             RowBox[{"3", " ", "\[Sigma]"}], "\[GreaterEqual]", 
             SqrtBox["6"]}]}], ")"}], "||", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Mu]", "<", 
             RowBox[{"-", "1"}]}], "&&", 
            RowBox[{
             RowBox[{
              RowBox[{
               SqrtBox["6"], " ", "\[Mu]"}], "+", 
              RowBox[{"6", " ", "\[Sigma]"}]}], ">", 
             SqrtBox["6"]}]}], ")"}]}]},
        {
         FractionBox["1", 
          RowBox[{"9", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Mu]", ">", "1"}], "&&", 
            RowBox[{
             RowBox[{
              SqrtBox["6"], " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", "\[Mu]"}], ")"}]}], "\[LessEqual]", 
             RowBox[{"6", " ", "\[Sigma]"}]}]}], ")"}], "||", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
            RowBox[{
             RowBox[{"3", " ", "\[Sigma]"}], "\[GreaterEqual]", 
             SqrtBox["6"]}]}], ")"}]}]},
        {
         RowBox[{"-", 
          FractionBox[
           RowBox[{"\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "+", 
              SuperscriptBox["\[Mu]", "2"]}], ")"}]}], 
           RowBox[{"18", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]]}], 
         RowBox[{
          RowBox[{
           RowBox[{"-", "1"}], "<", "\[Mu]", "<", "1"}], "&&", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "\[Mu]"}], ")"}]}], "<", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "&&", 
          RowBox[{
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "+", 
            RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
           SqrtBox["6"]}]}]},
        {
         RowBox[{
          FractionBox["1", "2"], "-", 
          FractionBox["\[Sigma]", 
           SqrtBox["6"]]}], 
         RowBox[{
          RowBox[{"\[Mu]", "\[Equal]", "1"}], "&&", 
          RowBox[{"0", "<", "\[Sigma]", "<", 
           SqrtBox[
            FractionBox["2", "3"]]}]}]},
        {
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], "+", 
          FractionBox["\[Sigma]", 
           SqrtBox["6"]]}], 
         RowBox[{
          RowBox[{"\[Mu]", "\[Equal]", 
           RowBox[{"-", "1"}]}], "&&", 
          RowBox[{"0", "<", "\[Sigma]", "<", 
           SqrtBox[
            FractionBox["2", "3"]]}]}]},
        {
         RowBox[{"-", 
          FractionBox[
           RowBox[{"2", "+", 
            SuperscriptBox["\[Mu]", "3"], "+", 
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", 
             SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", "\[Sigma]", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "-", 
            RowBox[{"3", " ", "\[Mu]", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"6", " ", 
                SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
           RowBox[{"36", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]]}], 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "+", 
            RowBox[{"6", " ", "\[Sigma]"}]}], "\[GreaterEqual]", 
           SqrtBox["6"]}], "&&", 
          RowBox[{"\[Mu]", "<", "1"}], "&&", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "\[Mu]"}], ")"}]}], "\[GreaterEqual]", 
           RowBox[{"6", " ", "\[Sigma]"}]}]}]},
        {
         FractionBox[
          RowBox[{"2", "+", 
           SuperscriptBox["\[Mu]", "3"], "-", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", 
            SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", "\[Sigma]", " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RowBox[{"2", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "+", 
           RowBox[{"3", " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
          RowBox[{"36", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]], 
         RowBox[{
          RowBox[{"\[Mu]", ">", "1"}], "&&", 
          RowBox[{
           RowBox[{"-", 
            SqrtBox["6"]}], "<", 
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "-", 
            RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
           SqrtBox["6"]}]}]},
        {
         FractionBox[
          RowBox[{"2", "-", 
           SuperscriptBox["\[Mu]", "3"], "+", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", 
            SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", "\[Sigma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "+", 
           RowBox[{"3", " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"6", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
          RowBox[{"36", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]], 
         RowBox[{
          RowBox[{"\[Mu]", ">", 
           RowBox[{"-", "1"}]}], "&&", 
          RowBox[{
           RowBox[{
            SqrtBox["6"], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "\[Mu]"}], ")"}]}], "<", 
           RowBox[{"6", " ", "\[Sigma]"}]}], "&&", 
          RowBox[{
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "+", 
            RowBox[{"6", " ", "\[Sigma]"}]}], "<", 
           SqrtBox["6"]}]}]},
        {
         FractionBox[
          RowBox[{
           RowBox[{"-", "2"}], "+", 
           SuperscriptBox["\[Mu]", "3"], "+", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", 
            SuperscriptBox["\[Mu]", "2"], " ", "\[Sigma]"}], "+", 
           RowBox[{"3", " ", 
            SqrtBox["6"], " ", "\[Sigma]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}], "+", 
           RowBox[{"3", " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"6", " ", 
               SuperscriptBox["\[Sigma]", "2"]}]}], ")"}]}]}], 
          RowBox[{"36", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]], 
         RowBox[{
          RowBox[{"\[Mu]", "<", 
           RowBox[{"-", "1"}]}], "&&", 
          RowBox[{
           RowBox[{"-", 
            SqrtBox["6"]}], "<", 
           RowBox[{
            RowBox[{
             SqrtBox["6"], " ", "\[Mu]"}], "+", 
            RowBox[{"6", " ", "\[Sigma]"}]}], "\[LessEqual]", 
           SqrtBox["6"]}]}]},
        {"0", 
         TagBox["True",
          "PiecewiseDefault",
          AutoDelete->True]}
       },
       AllowedDimensions->{2, Automatic},
       Editable->True,
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.84]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}},
       Selectable->True]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxItemSize->{
     "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.35]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   "Piecewise",
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True,
   Selectable->False]}]], "Input",
 CellChangeTimes->{{3.684533818682495*^9, 3.684533823449733*^9}, {
  3.684540933564073*^9, 3.684540934072744*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"TorquePivotTriFree", "[", 
   RowBox[{"\[Mu]_", ",", "\[Sigma]_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"lowlim1", " ", "=", 
       RowBox[{"Max", "[", 
        RowBox[{
         RowBox[{"-", "1"}], ",", 
         RowBox[{"\[Mu]", "-", 
          RowBox[{
           SqrtBox["6"], " ", "\[Sigma]"}]}]}], "]"}]}], ",", 
      RowBox[{"uplim1", " ", "=", "  ", 
       RowBox[{"Min", "[", 
        RowBox[{"1", ",", "\[Mu]"}], "]"}]}], ",", 
      RowBox[{"lowlim2", " ", "=", 
       RowBox[{"Max", "[", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "\[Mu]"}], "]"}]}], ",", 
      RowBox[{"uplim2", " ", "=", "  ", 
       RowBox[{"Min", "[", 
        RowBox[{"1", ",", 
         RowBox[{"\[Mu]", "+", 
          RowBox[{
           SqrtBox["6"], " ", "\[Sigma]"}]}]}], "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"uplim1", ">", "lowlim1"}], ",", 
       FractionBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          SuperscriptBox["lowlim1", "3"]}], "+", 
         RowBox[{"3", " ", 
          SuperscriptBox["lowlim1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Mu]", "-", 
            RowBox[{
             SqrtBox["6"], " ", "\[Sigma]"}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["uplim1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "uplim1"}], "-", 
            RowBox[{"3", " ", "\[Mu]"}], "+", 
            RowBox[{"3", " ", 
             SqrtBox["6"], " ", "\[Sigma]"}]}], ")"}]}]}], 
        RowBox[{"36", " ", 
         SuperscriptBox["\[Sigma]", "2"]}]], ",", "0"}], "]"}], "+", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"uplim2", ">", "lowlim2"}], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox["lowlim2", "3"]}], "-", 
         RowBox[{"3", " ", 
          SuperscriptBox["lowlim2", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"\[Mu]", "+", 
            RowBox[{
             SqrtBox["6"], " ", "\[Sigma]"}]}], ")"}]}], "+", 
         RowBox[{
          SuperscriptBox["uplim2", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", "uplim2"}], "+", 
            RowBox[{"3", " ", 
             RowBox[{"(", 
              RowBox[{"\[Mu]", "+", 
               RowBox[{
                SqrtBox["6"], " ", "\[Sigma]"}]}], ")"}]}]}], ")"}]}]}], 
        RowBox[{"36", " ", 
         SuperscriptBox["\[Sigma]", "2"]}]], ",", "0"}], "]"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"lowlim1", " ", "=", 
        RowBox[{"Max", "[", 
         RowBox[{"0", ",", 
          RowBox[{"\[Mu]", "-", 
           RowBox[{
            SqrtBox["6"], " ", "\[Sigma]"}]}]}], "]"}]}], ";", 
       RowBox[{"uplim1", " ", "=", "  ", 
        RowBox[{"Min", "[", 
         RowBox[{"1", ",", "\[Mu]"}], "]"}]}], ";", 
       RowBox[{"lowlim2", " ", "=", 
        RowBox[{"Max", "[", 
         RowBox[{"0", ",", "\[Mu]"}], "]"}]}], ";", 
       RowBox[{"uplim2", " ", "=", "  ", 
        RowBox[{"Min", "[", 
         RowBox[{"1", ",", 
          RowBox[{"\[Mu]", "+", 
           RowBox[{
            SqrtBox["6"], " ", "\[Sigma]"}]}]}], "]"}]}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"uplim1", ">", "lowlim1"}], ",", 
        RowBox[{
         SubsuperscriptBox["\[Integral]", "lowlim1", "uplim1"], 
         RowBox[{"x", " ", 
          FractionBox[
           RowBox[{"x", "-", "\[Mu]", "+", 
            RowBox[{
             SqrtBox["6"], " ", "\[Sigma]"}]}], 
           RowBox[{"6", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]], 
          RowBox[{"\[DifferentialD]", "x"}]}]}], ",", "0"}], "]"}], "+", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"uplim2", ">", "lowlim2"}], ",", 
        RowBox[{
         SubsuperscriptBox["\[Integral]", "lowlim2", "uplim2"], 
         RowBox[{"x", " ", 
          FractionBox[
           RowBox[{
            RowBox[{"-", "x"}], "+", "\[Mu]", "+", 
            RowBox[{
             SqrtBox["6"], " ", "\[Sigma]"}]}], 
           RowBox[{"6", " ", 
            SuperscriptBox["\[Sigma]", "2"]}]], 
          RowBox[{"\[DifferentialD]", "x"}]}]}], ",", "0"}], "]"}]}]}], "]"}],
    "*)"}]}]}], "Input",
 CellChangeTimes->{{3.676467577391876*^9, 3.676467583150907*^9}, {
   3.676467620923286*^9, 3.676467642689784*^9}, 3.684533184729178*^9, {
   3.684533596596053*^9, 3.684533598039216*^9}, {3.6845379966929417`*^9, 
   3.684538068930195*^9}, {3.684538106530834*^9, 3.6845382708752737`*^9}, {
   3.6845383147084846`*^9, 3.684538356260854*^9}, 3.684538387403821*^9, {
   3.684538484572762*^9, 3.684538521073769*^9}, {3.6845388666282597`*^9, 
   3.6845388668906527`*^9}, {3.684540347995214*^9, 3.6845403592671824`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "lowlim", "uplim"], 
  RowBox[{"x", " ", 
   FractionBox["1", 
    RowBox[{"2", 
     SqrtBox["3"], " ", "\[Sigma]"}]], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.684539156942346*^9, 3.684539164426305*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    SuperscriptBox["lowlim", "2"], 
    RowBox[{"4", " ", 
     SqrtBox["3"], " ", "\[Sigma]"}]]}], "+", 
  FractionBox[
   SuperscriptBox["uplim", "2"], 
   RowBox[{"4", " ", 
    SqrtBox["3"], " ", "\[Sigma]"}]]}]], "Output",
 CellChangeTimes->{3.6845391647952223`*^9, 3.6845408854065228`*^9, 
  3.68454102996239*^9, 3.684634498514007*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TorquePivotFreeUni", "[", 
  RowBox[{
   RowBox[{"1", "/", "2"}], ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.684541082575522*^9, 3.684541100235766*^9}}],

Cell[BoxData[
 RowBox[{"TorquePivotFreeUni", "[", 
  RowBox[{
   FractionBox["1", "2"], ",", "2"}], "]"}]], "Output",
 CellChangeTimes->{{3.684541093148327*^9, 3.684541100708908*^9}, 
   3.684634498540916*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sigs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1.1", ",", "1.2", ",", "1.3", ",", "1.4"}], "}"}]}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"TODO", ":", " ", 
    RowBox[{
    "place", " ", "legend", " ", "inside", " ", "the", " ", "plot"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"TorquePivotFreeUni", "[", 
       RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "sigs"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", 
     RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "sigs"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Mu] (pushing location)\>\"", ",", "\"\<Torque\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Uniform distribution\>\""}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", "1"}], "}"}]}], "}"}], "]"}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.683656192718853*^9, 3.68365650959415*^9}, {
   3.684533201990088*^9, 3.684533227629901*^9}, 3.6845336018509903`*^9, {
   3.684538398449457*^9, 3.684538398934102*^9}, {3.684538872647613*^9, 
   3.6845388887736807`*^9}, 3.684539050089514*^9, {3.6845392360343122`*^9, 
   3.68453924661322*^9}, {3.684539278578122*^9, 3.684539281301207*^9}, {
   3.684539347834256*^9, 3.684539370928897*^9}, {3.684539413266988*^9, 
   3.6845394260116*^9}, {3.684541137633313*^9, 3.684541223576767*^9}}],

Cell[BoxData[
 TemplateBox[{
  GraphicsBox[{}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[Mu] (pushing location)\"", TraditionalForm], 
       FormBox["\"Torque\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Epilog -> {
       LineBox[
        NCache[{{
           Rational[1, 2], 0}, {
           Rational[1, 2], 1}}, {{0.5, 0}, {0.5, 1}}]]}, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotLabel -> FormBox["\"Uniform distribution\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"1", "1.1`", "1.2`", "1.3`", "1.4`"}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.684541180427577*^9, 3.6845412241660624`*^9}, 
   3.6846344986272697`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sigs", " ", "=", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.1", ",", "0.5", ",", "1", ",", "2", ",", 
       RowBox[{"5", "/", 
        RowBox[{"\[Sqrt]", "3"}]}], ",", "5"}], "}"}], "/", "10"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"TODO", ":", " ", 
    RowBox[{
    "place", " ", "legend", " ", "inside", " ", "the", " ", "plot"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"TorquePivotFreeUni", "[", 
       RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "sigs"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", 
     RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "sigs"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Mu] (pushing location)\>\"", ",", "\"\<Torque\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Uniform distribution\>\""}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1", "/", "2"}], ",", "1"}], "}"}]}], "}"}], "]"}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.683656192718853*^9, 3.68365650959415*^9}, {
   3.684533201990088*^9, 3.684533227629901*^9}, 3.6845336018509903`*^9, {
   3.684538398449457*^9, 3.684538398934102*^9}, {3.684538872647613*^9, 
   3.6845388887736807`*^9}, 3.684539050089514*^9, {3.6845392360343122`*^9, 
   3.68453924661322*^9}, {3.684539278578122*^9, 3.684539281301207*^9}, {
   3.684539347834256*^9, 3.684539370928897*^9}, {3.684539413266988*^9, 
   3.6845394260116*^9}, {3.684541137633313*^9, 3.68454116084551*^9}}],

Cell[BoxData[
 TemplateBox[{
  GraphicsBox[{}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[Mu] (pushing location)\"", TraditionalForm], 
       FormBox["\"Torque\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Epilog -> {
       LineBox[
        NCache[{{
           Rational[1, 2], 0}, {
           Rational[1, 2], 1}}, {{0.5, 0}, {0.5, 1}}]]}, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotLabel -> FormBox["\"Uniform distribution\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"0.010000000000000002`", "0.05`", 
       FractionBox["1", "10"], 
       FractionBox["1", "5"], 
       FractionBox["1", 
        RowBox[{"2", " ", 
          SqrtBox["3"]}]], 
       FractionBox["1", "2"]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6845411384377728`*^9, 3.684541161355607*^9}, 
   3.684634498736293*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"TorquePivotFreeUni", "[", 
   RowBox[{"\[Mu]_", ",", "\[Sigma]_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"lowlim", " ", "=", 
       RowBox[{"Max", "[", 
        RowBox[{
         RowBox[{"-", "1"}], ",", 
         RowBox[{"\[Mu]", "-", 
          RowBox[{
           SqrtBox["3"], " ", "\[Sigma]"}]}]}], "]"}]}], ",", 
      RowBox[{"uplim", " ", "=", "  ", 
       RowBox[{"Min", "[", 
        RowBox[{"1", ",", 
         RowBox[{"\[Mu]", "+", 
          RowBox[{
           SqrtBox["3"], " ", "\[Sigma]"}]}]}], "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"uplim", ">", "lowlim"}], ",", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         SuperscriptBox["lowlim", "2"], 
         RowBox[{"4", " ", 
          SqrtBox["3"], " ", "\[Sigma]"}]]}], "+", 
       FractionBox[
        SuperscriptBox["uplim", "2"], 
        RowBox[{"4", " ", 
         SqrtBox["3"], " ", "\[Sigma]"}]]}], ",", "0"}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.684538961696658*^9, 3.684539033841741*^9}, {
   3.68453908776854*^9, 3.6845390935628242`*^9}, 3.684539169612364*^9, {
   3.684540437551422*^9, 3.68454045745277*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"bestPushFreeNorm", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ans", "=", 
        RowBox[{"FindMaximum", "[", 
         RowBox[{
          RowBox[{
           FractionBox[
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"-", 
                  FractionBox[
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "\[Mu]"}], ")"}], "2"], 
                   RowBox[{"2", " ", 
                    SuperscriptBox["\[Sigma]", "2"]}]]}]]}], "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"-", 
                 FractionBox[
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{"1", "+", "\[Mu]"}], ")"}], "2"], 
                  RowBox[{"2", " ", 
                   SuperscriptBox["\[Sigma]", "2"]}]]}]]}], ")"}], " ", 
             "\[Sigma]"}], 
            SqrtBox[
             RowBox[{"2", " ", "\[Pi]"}]]], "+", 
           RowBox[{
            FractionBox["1", "2"], " ", "\[Mu]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Erf", "[", 
               FractionBox[
                RowBox[{"1", "-", "\[Mu]"}], 
                RowBox[{
                 SqrtBox["2"], " ", "\[Sigma]"}]], "]"}], "+", 
              RowBox[{"Erf", "[", 
               FractionBox[
                RowBox[{"1", "+", "\[Mu]"}], 
                RowBox[{
                 SqrtBox["2"], " ", "\[Sigma]"}]], "]"}]}], ")"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Mu]", ",", "1"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", 
         RowBox[{"First", "@", "ans"}], ",", 
         RowBox[{"ans", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
        "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "0.01", ",", "2", ",", "0.01"}], "}"}]}], 
     "]"}]}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.684540302969158*^9, 3.684540310153585*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634498857087*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846344989279957`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "sdprec"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Line search unable to find a sufficient increase in the \
function value with \[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digit \
precision. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/FindMaximum\\\", \
ButtonNote -> \\\"FindMaximum::sdprec\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499015972*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.68463449916117*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(FindMaximum :: lstol\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499180851*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.39956999999999998074429186090128496289`5.622192786918774", ",", "Null"}],
   "}"}]], "Output",
 CellChangeTimes->{3.6845403113243923`*^9, 3.684634499216339*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"bestPushFreeTri", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ans", "=", 
        RowBox[{"FindMaximum", "[", 
         RowBox[{
          RowBox[{"TorquePivotTriFree", "[", 
           RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Mu]", ",", 
            RowBox[{"Max", "[", 
             RowBox[{"1", ",", 
              RowBox[{
               RowBox[{
                SqrtBox["6"], "/", "2"}], "\[Sigma]"}]}], "]"}]}], "}"}]}], 
         "]"}]}], ";", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", 
         RowBox[{"First", "@", "ans"}], ",", 
         RowBox[{"ans", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
        "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "0.01", ",", "2", ",", "0.01"}], "}"}]}], 
     "]"}]}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.676466416448494*^9, 3.676466470673649*^9}, {
   3.6764665929400253`*^9, 3.6764667320443153`*^9}, {3.6764667913415413`*^9, 
   3.676466813481152*^9}, {3.6764670024882803`*^9, 3.676467011715851*^9}, {
   3.676468270631659*^9, 3.6764682776512947`*^9}, {3.684533837881112*^9, 
   3.6845338508256598`*^9}, {3.684540245279271*^9, 3.684540256086082*^9}, {
   3.684540289572055*^9, 3.68454029856402*^9}, 3.684540367414665*^9, {
   3.684541591262807*^9, 3.684541606783594*^9}, {3.684541640840365*^9, 
   3.684541686358395*^9}, {3.684541752098618*^9, 3.6845417951403437`*^9}, {
   3.684541849077037*^9, 3.684541877464965*^9}, 3.684542026268549*^9, {
   3.684542820490223*^9, 3.684542852974832*^9}, 3.6845435407925043`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499279896*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846344993381567`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "sdprec"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Line search unable to find a sufficient increase in the \
function value with \[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digit \
precision. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/FindMaximum\\\", \
ButtonNote -> \\\"FindMaximum::sdprec\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846344993940268`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499447011*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(FindMaximum :: lstol\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499466004*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "fmgz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered a gradient that is effectively zero. The \
result returned may not be a maximum; it may be a minimum or a saddle point. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FindMaximum/fmgz\\\", \
ButtonNote -> \\\"FindMaximum::fmgz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499558614*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "fmgz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered a gradient that is effectively zero. The \
result returned may not be a maximum; it may be a minimum or a saddle point. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FindMaximum/fmgz\\\", \
ButtonNote -> \\\"FindMaximum::fmgz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846344995777283`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "fmgz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered a gradient that is effectively zero. The \
result returned may not be a maximum; it may be a minimum or a saddle point. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FindMaximum/fmgz\\\", \
ButtonNote -> \\\"FindMaximum::fmgz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499616637*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(FindMaximum :: fmgz\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499622025*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.48703499999999999570121644865139387548`5.708160085501816", ",", "Null"}],
   "}"}]], "Output",
 CellChangeTimes->{
  3.684540334625102*^9, 3.684540369361082*^9, {3.684541593635766*^9, 
   3.684541608197021*^9}, {3.684541642372292*^9, 3.684541657004161*^9}, 
   3.684541687640533*^9, 3.684541769109294*^9, 3.684541812340002*^9, {
   3.684541853702668*^9, 3.684541881268992*^9}, 3.684542027637506*^9, {
   3.684542834015074*^9, 3.684542854457673*^9}, 3.6845435463866653`*^9, 
   3.684634499714438*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"bestPushFreeTriBottom", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ans", "=", 
        RowBox[{"FindMaximum", "[", 
         RowBox[{
          RowBox[{"TorquePivotTriFree", "[", 
           RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Mu]", ",", "1"}], "}"}]}], "]"}]}], ";", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", 
         RowBox[{"First", "@", "ans"}], ",", 
         RowBox[{"ans", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
        "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "0.01", ",", "2", ",", "0.01"}], "}"}]}], 
     "]"}]}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.684542894304944*^9, 3.684542899036315*^9}, 
   3.684543543966049*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499937738*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634499993875*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "sdprec"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Line search unable to find a sufficient increase in the \
function value with \[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digit \
precision. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/FindMaximum\\\", \
ButtonNote -> \\\"FindMaximum::sdprec\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634500056017*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634500111095*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(FindMaximum :: lstol\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634500130714*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "fmgz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered a gradient that is effectively zero. The \
result returned may not be a maximum; it may be a minimum or a saddle point. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FindMaximum/fmgz\\\", \
ButtonNote -> \\\"FindMaximum::fmgz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634500216045*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "fmgz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered a gradient that is effectively zero. The \
result returned may not be a maximum; it may be a minimum or a saddle point. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FindMaximum/fmgz\\\", \
ButtonNote -> \\\"FindMaximum::fmgz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634500249715*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "fmgz"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Encountered a gradient that is effectively zero. The \
result returned may not be a maximum; it may be a minimum or a saddle point. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FindMaximum/fmgz\\\", \
ButtonNote -> \\\"FindMaximum::fmgz\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634500282851*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(FindMaximum :: fmgz\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634500287822*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.49033999999999999808153461344772949815`5.711097235998975", ",", "Null"}],
   "}"}]], "Output",
 CellChangeTimes->{3.6845428997410173`*^9, 3.684543548713526*^9, 
  3.684634500377095*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{
   RowBox[{"bestPushFreeUni", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ans", "=", 
        RowBox[{"FindMaximum", "[", 
         RowBox[{
          RowBox[{"TorquePivotFreeUni", "[", 
           RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Mu]", ",", 
            RowBox[{"1", "+", 
             RowBox[{
              RowBox[{
               SqrtBox["3"], "/", "2"}], "\[Sigma]"}]}]}], "}"}]}], "]"}]}], 
       ";", 
       RowBox[{"{", 
        RowBox[{"\[Sigma]", ",", 
         RowBox[{"First", "@", "ans"}], ",", 
         RowBox[{"ans", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
        "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "0.01", ",", "2", ",", "0.01"}], "}"}]}], 
     "]"}]}], ";"}], "]"}]], "Input",
 CellChangeTimes->{{3.684540465185493*^9, 3.684540465468801*^9}, {
   3.684540516819571*^9, 3.684540517184272*^9}, 3.684540977979784*^9, 
   3.684541012876995*^9, {3.6845412684218693`*^9, 3.684541268771349*^9}, {
   3.684541310836534*^9, 3.684541326926167*^9}, {3.684541558220834*^9, 
   3.6845415595286617`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634500440503*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846345004947433`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "lstol"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The line search decreased the step size to within the \
tolerance specified by AccuracyGoal and PrecisionGoal but was unable to find \
a sufficient increase in the function. You may need more than \
\[NoBreak]\\!\\(MachinePrecision\\)\[NoBreak] digits of working precision to \
meet these tolerances. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/FindMaximum\\\", ButtonNote -> \
\\\"FindMaximum::lstol\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634500549074*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\(FindMaximum :: lstol\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.684634500568482*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindMaximum", "::", "fmdig"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Working precision \[NoBreak]\\!\\(MachinePrecision\\)\
\[NoBreak] is insufficient to achieve the requested accuracy or precision. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/FindMaximum/fmdig\\\", \
ButtonNote -> \\\"FindMaximum::fmdig\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6846345005980673`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.31256600000000001049471620717667974532`5.5155416482697115", ",", 
   "Null"}], "}"}]], "Output",
 CellChangeTimes->{
  3.684540466599551*^9, 3.68454051817599*^9, 3.684540979097865*^9, 
   3.684541014482897*^9, 3.684541269464591*^9, {3.684541311972795*^9, 
   3.684541327816001*^9}, 3.684541560253099*^9, 3.6846345007000237`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"bestPushFreeNorm", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"bestPushFreeNorm", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"bestPushFreeTri", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"bestPushFreeTri", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"bestPushFreeUni", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"bestPushFreeUni", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "2"}], "\[RightDoubleBracket]"}]}], "}"}], 
      "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Sigma] of swarm\>\"", ",", "\"\<Max Torque\>\""}], 
     "}"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Max possible torque on  a free object (-1 to 1)\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<Normal\>\"", ",", "\"\<Triangle\>\"", ",", "\"\<Uniform\>\""}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Right", ",", "Top"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"bestPushFreeNorm", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"bestPushFreeNorm", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"bestPushFreeTri", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"bestPushFreeTri", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"bestPushFreeUni", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"bestPushFreeUni", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"bestPushFreeTriBottom", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{"bestPushFreeTriBottom", "\[LeftDoubleBracket]", 
         RowBox[{";;", ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}], 
      "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[Sigma] of swarm\>\"", ",", 
      "\"\<Optimal push location (\[Mu])\>\""}], "}"}]}], ",", 
   RowBox[{"Filling", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", "\[Rule]", 
      RowBox[{"{", "4", "}"}]}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", "Automatic", ",", "Automatic", ",", 
      RowBox[{"ColorData", "[", 
       RowBox[{"97", ",", "2"}], "]"}]}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "\"\<Normal\>\"", ",", "\"\<Triangle\>\"", ",", "\"\<Uniform\>\""}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"Left", ",", "Top"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "2"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Dashed", ",", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"2", "/", "3"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"100", ",", 
           RowBox[{"2", "/", "3"}]}], "}"}]}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{
            RowBox[{"\[Sqrt]", "2"}], "/", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"100", ",", 
           RowBox[{
            RowBox[{"\[Sqrt]", "2"}], "/", "2"}]}], "}"}]}], "}"}], "]"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", 
           RowBox[{"1", "/", "2"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"100", ",", 
           RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}], "]"}]}], 
     "\[IndentingNewLine]", "}"}]}], ",", 
   RowBox[{
   "PlotLabel", "\[Rule]", 
    "\"\<Where to push a free object (-1 to 1) to maximize torque\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.676466820390336*^9, 3.676466989524275*^9}, {
  3.676467176427374*^9, 3.676467178092044*^9}, {3.676467921880308*^9, 
  3.676467966912457*^9}, {3.676468003785376*^9, 3.6764681638781776`*^9}, {
  3.676468291519845*^9, 3.67646830329661*^9}, {3.6764683388165216`*^9, 
  3.676468372623979*^9}, {3.684533929234049*^9, 3.684533939348472*^9}, {
  3.684540376345602*^9, 3.6845403861440163`*^9}, {3.684540478831476*^9, 
  3.684540504167663*^9}, {3.684540558946384*^9, 3.684540561457901*^9}, {
  3.684540710649729*^9, 3.684540739068645*^9}, {3.684540801207048*^9, 
  3.684540810028236*^9}, {3.6845422568892612`*^9, 3.6845423290434504`*^9}, {
  3.6845429179330807`*^9, 3.684542953671657*^9}, {3.6845430966267433`*^9, 
  3.684543119304673*^9}, {3.684543323600518*^9, 3.684543327384514*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.008333333333333333], AbsoluteThickness[1.6], LineBox[CompressedData["

1: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
GHmoWeuP+ssyosLwf1XPWsI=
        "]]}, 
      {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
       0.008333333333333333], AbsoluteThickness[1.6], LineBox[CompressedData["

1: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

        "]]}, 
      {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
       0.008333333333333333], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJwt1QdUVHcWBnBMYll1d62rMWqEoDEn1ohJloCfRIzGLirqCXFdxMQoKBLX
iGRJNuiy6LpqiB6EE2MhlKigTAVGmBl6lQEp0qT3ofcZhmX++d45HA5l3vvf
+7v3e5aup5yOvmJhYZE+9mX+7jMralP1+QvIS57pMN+rA7///BM6vwz1/bCu
HcqFF1t3K2/Dbotv0l7ndv49FHMPjZ9wOl2P4FvmKxK70r0/vWKrR6z4/yg4
+pVfjnzYhrEfxn7zBMcWncpLWdjGz0tx8PB3M2qutWJy8X1P+8kKxO4w7Te9
0gpxu1uxyPKT3Zr3jxa843JV27dUhXqrjyreb2zmeRIQNCH2zT0HmxE69uni
+2qEWJS7ncpqQpt4ngaP79eEX7Zvgs0a85WEQZsD+vDoRj4/GccvPViRbNmI
pL6lY09IgdM1b6+qwAZMEedJQ3XADYlxfAOcxAPT4XwhcXDuuXrWm4Fdh21s
17bUoea8+YaZ6LHb4LvbpY7nzcbm9X4aj9xanDYfzzMHA3etXru0vpb9ycWj
zYpNYTE1sBBXHgpPll3SWtewnjyM21OeW3mzGpurzQ/QocSpcrphUjXr00G2
Ub93jk8VrmnNBeTjwaR/Lg0sfQlR7poCrNzX+bUmsxKinOICeDpVLfbOrmD9
z1G+84nL7MpyvGk+zsJCjPiU2lqbytiPQhz13/bF394tw5dfmK8ieFrP0f3q
Vsr+FGPkk82X+yNewHy3WVHFePWX4hPuAyXsVwkK5437ynZnCfrNt+srQfC3
17+PiC5m/16gFr1/mT63GOvEAJRix36VstK/iP0shaTHfsUlUyHE8S6W4YhD
RUGQTyH7W46R8reWhZieIyfbfJUj88M79971f85+V0C33eqcftZzzBYHrET8
N8vyL4cXsP+VsF97tkm5rgDidi4vMXHe2m3LS/PpUYUFa65tDPfOZz1V6Hht
jWPL/Hz6VOHMAo/DCUk61leF3EdRLR0eOnpVI+LCxYk739Cx3mqsnuPnHJ2V
R79qpJ2Nutfom8f6a1A73TlEZ5NHzxp6PsPvt6vB0Ts/B7nsekbfWqwSvrns
Ty0eNvw91v/TXHrX0juH/arDxmCnJtc9OfSvo382+1eHva4+OUfcszkP9TCK
echiP+txrqJyycrALM5HPdzEfGSxvw1wn+HXdz01k/PSgNNiXjLZ7wYMb1Lr
fMZnct8bYRTzk8H+N2Ic3lsxvCOD89TIeUqnRxMWO6pdbO6l06OJ85VOjyZY
Wnq9d8yURo8m3BLzlkaPZjy4rV/e6JpGj2ZUi/lLo0czAj6bOHnWs1R6tHAe
U+nRAvvVy347/HEq57MFMWI+U+jRCnl+0e5tqhR6tHJeU+jRiozxpnmudin0
aINRzG8yPdpQdj/w7gfaZHq0cZ6T6aFHzvGWshPbk+mh53wn00OP3vfXvx5W
kUSPdqjEvCfRox3TonMW3fBKokc77MT8J9GjAyUpke7tU5Lo0cF90NKjA6bw
6996RGrp0Yn5Yj+0rKcT+x032hds0dKnk/uiZX2d8Nr58F/1HRp6dXJ/NKy3
E/1at8sngzT060SO2CcN6+9Cwc/yO3aOGnp2IVzsl4b96EKYp02UZY+avl1Y
JfZNzf50YV/i1e7uUDW9u7h/avarGyl3Ppf856Ca/t2oEfuoZv+6MXWKbOjp
NDXnoRsRYj8T+T7qhnWY+4OqnxK5r904IvY1kf3twbKz+3eNTk3kvPRghdjf
BPa7Bwfr5teGBCRwfnoQKfY5gf3vgSrj162+kxM4Tz04Kfb7KT16sVzZMMnr
6lN69HLfn9KjF357f2jaOPcpPXpRJvZfRY9eFI57OyUrVEWPXuwReaCiRy8e
P+nYUmKjokcf8yGeHn34oXCx5uP0eHr04RuRF/H06MPku4UldYfi6dHH/Iin
Rx9W+si/Cx6Mo0c/vhJ5EkePflSMDsgdbsTRox8nRb7E0aMf93655hFnE0eP
fuZNHD36sdUo+7yhKJYeAzCI/ImlxwBUBav0ET6x9Bj7+zpzHsXSYwAuOZ9M
a7SKpccARm+b80lJjwEYBw0r/LOV9BiEpcgrJT0GEXT0zNTT55T0GIRO5JeS
HoMInOD4+MoSJT0GYSXyTEGPQXQ5fL87rUhBj7H7iXxT0GMIV/50YsMfAhT0
GEKkyDsFPYbg9mNgLewV9Bhi/inoMYT7qVsDDvTI6TGEiyIP5fQYxh+L9511
eCCnxzC2i3yU02MYNzOi0pvd5PQYhq3ISznzZhgKv0MeDovk9BiGVOSnjB4G
SP79way/VsjoYYBC5KmMHgZc1HpZa0Nk9DDgsMhXGT0MMETPjsn9TEYPA9JF
3sroYcT//Gac2b1ARg8j81dKDyOgnhlvXyWlhxGlIo+l9DBCl1R/zD9USg8j
0kQ+S+lhRMxMryar41J6jCBT5LWUHiPwdHRYMn61lB4jyBX5LaXHCF7d5h3w
1pCEHiPoEnkuoccI5rTv0H+tldDDBKXIdwk9THhHVR3c9l8JPUz4s8h7CT1M
mPji/IYLByT0MOEjkf8SepjwhvPbhtWLJfQYxXPxPpDQYxQvb4av0XfH0GOU
74cYeozCOfqR4pEmhh6jMIj3RQw9RuG38mjYiesx9LBY/7p4f8Tg/8X5UJM=

        "]]}}, {}}, InsetBox[
     TemplateBox[{"\"Normal\"","\"Triangle\"","\"Uniform\""},
      "PointLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True"}], "}"}], "}"}]}], 
           ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
         "]"}]& )], Scaled[{0.99, 0.99}], ImageScaled[{1, 1}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"\[Sigma] of swarm\"", TraditionalForm], 
     FormBox["\"Max Torque\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->Medium,
   Method->{},
   PlotLabel->FormBox[
    "\"Max possible torque on  a free object (-1 to 1)\"", TraditionalForm],
   PlotRange->{{0, 2.}, {0, 0.9826794882812013}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.008333333333333333], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         Line[CompressedData["
1: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
GHmoWeuP+ssyosLwf1XPWsI=
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.008333333333333333], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         Line[CompressedData["
1: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

          "]]}, {
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[0.008333333333333333], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         Line[CompressedData["
1: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

          "]]}}}, {}}, {DisplayFunction -> Identity, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
      PlotRange -> {{0, 2.}, {0, 0.9826794882812013}}, DisplayFunction -> 
      Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
      AxesLabel -> {"\[Sigma] of swarm", "Max Torque"}, AxesOrigin -> {0, 0}, 
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> Medium, Method -> {}, PlotLabel -> 
      "Max possible torque on  a free object (-1 to 1)", 
      PlotRange -> {{0, 2.}, {0, 0.9826794882812013}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      PointLegend[{
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]]}, {"Normal", "Triangle", "Uniform"}, 
       Joined -> {{True, True, True}}, LabelStyle -> {}, LegendLayout -> 
       "Column", 
       LegendMarkers -> {{False, Automatic}, {False, Automatic}, {
         False, Automatic}}]], {Right, Top}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.68453389843923*^9, 3.6845339398526583`*^9, 3.684540265088787*^9, 
   3.684540386692976*^9, {3.684540505027707*^9, 3.6845405206929827`*^9}, 
   3.684540562129772*^9, 3.68454073991187*^9, 3.6845408107933702`*^9, 
   3.684540981636374*^9, 3.6845410168946857`*^9, {3.684541272726653*^9, 
   3.684541275069581*^9}, {3.6845413149953117`*^9, 3.684541330390424*^9}, 
   3.684541564380101*^9, {3.6845415972458344`*^9, 3.684541611404339*^9}, {
   3.68454164531647*^9, 3.684541659352977*^9}, 3.6845416903810062`*^9, 
   3.6845417731341143`*^9, 3.684541815751561*^9, {3.684541858016691*^9, 
   3.684541884938489*^9}, 3.684542038494244*^9, {3.684542261702969*^9, 
   3.684542329744802*^9}, {3.684542837108465*^9, 3.684542857215396*^9}, 
   3.684542954771956*^9, 3.684543120000651*^9, 3.684543327850935*^9, 
   3.684543551271291*^9, 3.684634500796878*^9}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, GraphicsComplexBox[CompressedData["
1:eJztmflbzXnYx1Ok7MraoCTUZNdoIm5KsksSkmwp2UoMFZNdWUoGKWMJTQiJ
bJksRSKtUpLSfpZOnX1fn3g+3/tcvtf1XM8/MOeHznW3fM/3c78+59zv16eh
64I9NxgaGBiktH/5/rynT5p7fcRhSFzu3ylsKA/+tz4LVt2G7725jQtPhxzh
LH56GUZMzohPL24jP0+G40MXji6c1gYXEr8/bkHVtqdWgzNbIfPH76dB+rJU
VY1zK7QX7d+5DwHzK8bWvOOQv38I+5evDZjiy4Eun6+HTO3yBA5MNuq8UNoC
Py6XmAlJ6+NtYuNbwM73VI7ENgvcRg+zjnVuIffzAkJYu7qKmGxIbv/rz9df
QfyLb/1CEtjQ+uP1suFi49mDrxewwWHi98dr8B0Q5PGwM5u8/ht489Uyoddb
FryW2La/Qi7AjQKXO9Es6PrjfvIg9FNjjzWLWOD54wXfQcOVqAITCxZZ73uY
xA7MPspiQkPE9wvmg/CU/cjnz5jkfgtgTtmqd6fjmLD9++2FFMKUHWdutwYx
SX+K4E7oildPZjHB4MejBFxHpD//NoJJ1lMCxswRnxd2YcLs+u8vUAq8MKu/
pXwGWV8pFCydWJFbxYC4nO8L+AjnVP1W381jwI/lTiyDmJWpXa48YcCP5Xwu
A4bqYXRMKoOs/xO4GoyatSWJAZbfb2dIORwyzps/NpFB+lEOtgZpQz6cZUBg
wPdHBfCZZjEOZxikP5/Bdqwwek37z79frU/aZ9hudEzsmsAg/aoEQdanHWWX
GSD9fjlJJZgVFdoZ3WSQ/n2Bjp82/Ps2gwHTfmyAKoip2m7UO4dB+lkFwXPt
zD99ZMCP2zvyFZpHbBvWgcEg/a0GK68356JVDCgs+P6oBp9uV3UrzKl+10De
scPT/Eczoe+PG/wGJzpz/jo3h+r/NxA8rHj7NZAJPy7nWwussu2ONtEUjzro
ap8w0DeVSdZTB1G9/KJDiig+dXD+wfLUhWImWV8d7Bt+rrjxFxbhVQ8Z76ad
HOxG7Zd6GDfuZjE7mEX41cM256uySRdZZP0N4HVubJ3oPYvwbIAgtxpeTwUL
/vdyDVDv0Wy1x45N+DbCxozTnUesZJP+NIJb92EVHWLZhHcjvLW/4GeQwyb9
aoIJqidmfWTU/m+CzPBY9djRLaR/TTBspHG5u38L2Q/NcHb46MpFF1tIP5th
crxZjXN5C9kfzZBwKHZOx54c0l8GmPSs6HZxDofsFwYMZLITlYc5pN8M6KCt
re+XTb3fmbDukuVCloZD+s+EUZuvPQuY0kr2ExMkveeEHA9vJTxYECtdaDn/
aSvhwYLM681fkmWthAcLls/T9oh1bCM8WDDni9uRDmFthAcbio95eyueUp9X
7Z8bj6xagpVthAcb6qqqlKuduYRHC9jWJ215E8klPFrgYHTroYRsLtmf7Z9L
W2uffe7IIzw4kGTzMufP2TzCgwNPKxMOHz3JIzw4cHyPaDC3hEd4tILpOrNt
lV34hEcrPOxwPWnDaD7h0QrnOzfLB3nwCY822Mgrr1OH8gmPNogIHVRuFM8n
PNogNOCp/7hMPuHBBZcd6rEHqvmEBxfcJrq1inV8woMLs0xMvY4PExAePEj6
u/n36e4CwoMHKkP57r6bBYQHD3Zd3KcyOSUgPPjwNdnu2cAMAVkPH9wvBT6e
9VlA+PAh7GOxJlYlIOvjg3Zt1E2BpZDw4oOzzaPKrTOFZL18eNSizjQMEhJ+
fEjabnrgXoyQrF8AogOaTTseCAlPAazgj3y+4LOQ9EMAb58feTNVLSR8BbD8
kX+5y1AR6Y8AKm8bz/OdJSK8BXC609yoY5tFpF9CaB6zTPg+TkT4C+HrE0/l
oMci0j8hpLw3Nz/4VUT2gxBy0r89khuIyTwSgt+UYWv3jxCT96sQJqVPSxgw
X0z6K4Jlw2c0vtouJvtFBA8MHxeFnReTfotgxr5gDjwXk/0jgsIWr6K+jWLS
fxG8T5zYS2kiIftJBOq5fy1oHSMhPMSwt/7oiFYvCeEhhv4esdMUERLCQww2
5wKcza9KCA8xuDbL3zvlSQgPMcT0tD67pU1CeIhBu+Hw3NvmUsJDDANaT1yR
OEkJDwmkXnOZPW+NlPCQwKsrDurbR6WEhwT2H1n6R/+7UsJDAn6uzOCYMinh
IYGcnutSuyulhIcEbI6taj5vJSM8pODAjWi0d5cRHlLo5ucR9H6rjPCQArv3
0qkhZ2WEhxTOHioaafWvjPCQQuiOF8LKehnhIYVlOaVBF0zkhIcMVvfx8PEf
Kyc8ZFA1vtuZSd5ywkMGrwYtber1p5zwkMH8Uqal6Lqc8JDB1Zv1A2ry5YSH
DD4szbheJJATHnKQ7ewTnzdAQXjIYdg/srd5oCA85HBgxL4exQEKwkMOOyUC
t5oYBeEhh6hV992FDxWEhxx46jG87tUKwkMOPYLtBowzUhIeChimc722/Fcl
4aGAVSOzgqIWKwkPBRjWXluYFaYkPBRQf3vieNkVJeGhgNu3jgod85SEhwK2
DD62M5KrJDyUMMBLmpjfV0V4KGHPB49Zg6aqCA8lZCV9XbXDX0V4KKFl+tnc
4hMq8nmjBBufUevHZ6gIDyUkm3QcnFClIjxU4DPNpsrIUE14qIC/1ungTjs1
4aECZ+tYDdtDTXioYH9I7Xj/MDXhoYICE1OzxitqwkMF2ww+RQbkqQkPNfQ4
mruBy1UTHmpg9rmcGtFPQ3ioIWWg26yu0zSER3vdiTc8aYOG8FCDf9mu0U4x
GsJDDW5DhsyueKghPNRwf4Lh0t3VGsJDA3+46dYN6qglPDTg9dh2ca69lvDQ
gN2aGT1Cl2gJDw0M3hV6zHqPlvDQwC9/znlQcU1LeGhg4eGMsNh8LeGhhTvu
6oI5Qi3hoYVLMflXTCx0hIcWRmYPbsifoSM8tOASOu9IXJCO8NCCgqOOWHFa
R3hogVcz6tHwTB3hoYMvvwwfIanTkf4ZTKeeKV8YU/LSf7qz3hf6zTTu53FQ
7wtphUmXhn7U+8KEB16ll+31vmA1r+f4W7F6X2gbtDTAQsVBX2gs3Ch+E6L3
hXvsS5ydvBb0hfgdJ+/xd+l94UOobZnCWO8LDOXFLwuusNEX2NEz7G6A3hdW
JVv9+5zJQl8I6j1R436ehb7AeijcpFrAQl9oHR4+Kaar3hcsbvVhPChmoi8s
ehlYan2Bib4w7+OLvWc3MdEXStLDTbOn631BvSA3cv0gvS9MertP8LuGgb6w
SW2Wa9DIQF/YXirO21vIQF/oe4kxZXsWA31h17Ee0uR7DPSFi/v3+tSn6H3h
rFe+q/Cq3heerR1kn5Kk94WO4UPYhdf0vrCrWJbjfFPvCxHmD+a9S9f7Avvq
Lc/ZWXpf8PMpLIzP1/vCqtuLs0991ftC+tW64b15el+Idq8tUnZkoi+EuAau
HTOYib5w1Hi69SlHJvpCFLNQ1sGLib5Qxe01a2soE31hXFvPxqd/MdEXlnvV
SgofMtEXurt8+xpfyURfuOcZu0Cn0fuC94B1apENC31hWnVp5rp2/pQvyBf+
sWDybhb6Qj+vxN2brrHQF166faxsLGKhL/j7BH48r2ahLwTAqLth9mz0hd2Z
y1aFt+d3yhdy0iIiYk6y0RcuTzq5/NYLNvrCAa1jQ7aAjb4Q/sozumB4i94X
fLd5vvRpQV/ICDT8EBfXgr6gqvkidsxrQV8Y6lc04Y62BX3BP804rHkSB30h
y7XStDqYg75w4DeX6OhbHL0veBrKGhs56Asvu/IeM4e0oi9cMvsYHOPTir6w
s/ShRXF8K/rCqvQJwpSyVvQF+5ORf/bs3Ya+4J3f6ZDRojb0hf6fucaRMW3o
C5eaX82IKGhDX1A1bUoSdeWiL3x8GFPRPI+LvuAwaMq9+Se56AupH3s42xRy
0RdWrxTe3NiDh76QPD5hST8PHvrCKK+ml3Z/8dAXoESScOUTD31hxz/rnc70
5qMvWFz+duG5Kx99ITt+hZr5Bx99IfDUp1VmN/noCz2iF710ruKjLzzan28V
2E2AvuAb7nbw9DQB+oJR6KvGf9tzL+ULqZumuDGuCdAXPNY/TulVLkBfkK0c
bzKlsxB94bLXnaANTkL0BbcFIz+c2ixEX2h1uzbq2SUh+sKZaYNjm4qF6AtO
jgm8HoYi9IW6seaLnRxE6AtRtrEP1geI0BfGDDXtE5sgQl8oH3j4j6f5IvSF
vWa6iga1CH1hWNeI37uPFaMv5BtJEh3XitEXtquDVWvPiNEX+ktafE/mitEX
XrRtePFYJkZf2MCos6y3k6AvdKtdeaCrrwR9IeNzRcNvsRL0BZ+SxTPXvJKg
L3R4X/DPcaEEfeFmtnvnRzZS9IVFz3I21npL0RekD6bmmx6Toi9cuv3U3uFf
KfqCS/LEGL82KfoC+2IaN9pShr4Qd87OI2OxDH3BMTb5fs0hGfrCt6OW5iaP
ZegLR/Zd2DmBJUNfGBXWt8LXQo6+UBYS5xg1X46+EBHUNfF+pBx9wWrdUeXX
dDn6Qp5PB1/jRjn6wrYle5+P66tAX+g7XzZkpbsCfSFrZuj+I+EK9IX1U9vq
791WoC90mbTRtapGgb5wf0xjcsdeSvSF5SP9jMe6KNEXdJZfAlfsVKIv/DPA
6/2hFCX6wvzexb+mVSrRF0Smc09WdlGhL1wwzG0zxHwqhRkqWDQ6WIW+wBI9
S192VYW+ENv6m9nBMhX6wm/N6TvudFKjL1TX2JdXOKrRFw5WpEzqsEmNvmBX
PDTB/qIafaEk76JiaZEafWH3q/4r9xto0BeGZP6VlTpBg76Qe7/7kHJ/DfrC
ltTofbp4DfqC+XWjerv3GvSFZ39HunipNOgLa88qrkeO1qIvmMTs7HRrtRZ9
Ie0IL6DstBZ9YWnkpnea11r0BfWuZjtbqRZ94XrwmhOetjr0hbkbv7bu9dGh
LwjWeC+8cVKHvpCwovRe6Qsd+gJ4zu+t5v/f+bHpjfmMQaH6/PglMDny9yZ9
fnSaG/nay5uL+dHCr5Px9nf6/Oj5LnxOzOQ2zI/zDlWfuHVHf97sbxVckts+
j6j86LNmn1lDnP68OXOhdpnWkIP5seDQo0SLP/T5sdF6Ss0kpj4/njfOtFyy
Qp8fLxpU+wd/0OfHtOsNN05M1edHucPythv3mJgfNx+/PebNUCbmxyVx4aF1
eJ6aBw3HzmWoOzEwP3offikfENaM+dFjjcPk31qaMD+KnF0jF/s2YX6cPf1Q
9taiRsyP8qvWHY9Pb8T8eHf2E/eUBw2YH8u3fT2eY9OA+dFiSXXRt/h6zI+V
nt96q0zqMT++dGvz6r+nDvOjdO4W/wKzOsyPViE1lulJdZgfm7rH1pwZU4/5
cadTr4u7s+oxP3rwdq9YObcB82POIXFfqGzA/Lj11Ppi64BGzI/vuu2INRY3
Yn58Opo7u+VAE+bHX6uduhX1bMb8OCtuZ+79S82YH4ec/OXIOXv9ebPB7Reu
4Zn682aBKkrj667Pj8dfjnk+vVyfHxVMzh6b9SzMj4+8gxxMBCzMj9qjLnxO
JBvzY9ad3anF3VowPx62023NuNCC+bF85f3h5205mB/vX6ptjnjMwfzISgu9
6jezFfNjauavq1w+tmJ+XDbDyWLEmjbMj5yF9p9NuW2YHz+deJ3YtoeL+XEB
965HqSkP8+PzKX49Hp3nYX48cPdxYIEZH/Nj+YBRM1+s4GN+bLrTdVh6Eh/z
41RBnNE1Jh/zo/dV29ozYwSYHzVnOVlH/hBgfuwlX3t5d5YA82PcxFN7g4yE
mB/DFie27wch5kf+jqBJC04LMT+mWMja94cQ86NLY6pknKUI8+Osur0V1u15
g8qPbk5h9/rcFWF+nHwyrn3/iDA/fig5FSyfLMb8eNj82vyWA2LMj5OPPLOv
fifG/Li+s1X3op4SzI9Ds4uYL70lmB9rhqS9vX9JgvlxbzUv+XqTBPPj6E0p
B87ZSzE/Wp+qXx0VKsX8OBe+zQjPlGJ+XFDhZ7nZQIb58d0Sfvv+lGF+DIWS
qoWxMsyP40YdzZpeLsP8+Ljv9QsTBskxP36auXy3zXo55scqpfmyfqlyzI+B
64IcTQRyzI8Gm5f3UzoqMD8WDfsi4UQqMD/mu9qW1OQqMD+uCOlzr7ibEvPj
pj39Y7KXKDE/hll03pxxQYn5cci4/XP+qVdifvxbJh5x3laF+XHPOd/Ox9rn
NZUf06w3NEU8VmF+vLC9LHuLRoX50Xt0zTW/mWrMj2ZPufs9TqgxP771DFjj
8lGN+dHOvcNUh4EazI9uA0f9MmKNBvOjjU+Uuv8NDebHqNo9laZcDebH4xZX
n6gctJgfu+ztEN+G5zcCsF4p2F6bo8X8CBNXLy011WF+NA03cXjtodOfN//5
qf39qMP8eL7EiJvy7b/zl//OX/47f/nv/OW/85f/7/yFmhPU/KRqan5SNTU/
qZqan1RNzU+qpuYnVVPzk6qp+UnVOD9JTc1PqqbmJ1VT85OqqflJ1dT8pGpq
flI1NT9xTpL5SdX0Z2p+UjU1P39en76m5ufP69XX1Pz8ef36/xNT8/Pnfuhr
an7+3B99Tc3Pn/slxJqanz/3T19T5y9UTZ2/UDV1/vJzf/XnVtT5y8/91tfU
+cvP/dfX1PnLzxzENB5iGg8xjYeYxkNM4yGm8RDTeEhoPCQ0HhIaDwmNh4TG
Q0LjIaXxkNJ4SGk8pDQeUhoPKY2HjMZDRuMho/GQ0XjIaDxkNB5yGg85jYec
xkNO4yGn8ZDTeMhpPBQ0HgoaDwWNh4LGQ0HjoaDxUNJ4KGk8lDQe+pr6f+3P
PJQ0HioaDxWNh4rGQ0XjoaLxUNF4qGk81DQeahoPNY2HmsZDTeOhpvHQ0Hho
aDw0NB4aGg8NjYeGxkNL46Gl8dDSeGhpPLQ0HloaDx2Nh47GQ0fjoaPx0NF4
6Gg8KP9on6f9rk23/1XvJdNGdQt5bqXE+sVxo9k3woVY/w+o/Ucb
      
      "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, 
        {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[None],
          GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1NVSEAAQBVDAVsBuUcHA7gTFRlAs7MAg7O7u7u52/BO7uxtU7E6sw/hw
9r7uztzZ8OQJieODAgICAhln3OM+D3jIIx7zhHQyeMoznpPJC17yite84S3v
eM8HPvKJz3zhK9/4zg9+ksUvfvOHv9lLWS6QIHKQk1zkJg95yUd+ChBMCKEU
pBCFKUJRilGcEpSkFKUpQ1nKEUZ5KlCRcCKoRGWqUJVIqlGdGtSkFrWpQ13q
UZ8GNKQRjWlCU5rRnCiiaUFLYmhFa9rQlna0pwOxdCSOeDrRmQS60JVudKcH
ifSkF73pQ1/60Z8BDGQQSQxmCEMZRjIppJLGcEYwklGMZgxjGUd2qSYwkUlM
ZgpTmcZ0ZjCTWcxmDnOZx3wWsJBFLGYJS1nGclawklWsZg1rWcd6NrCRTWxm
C1vZxnZ2sJNd7GYPe9nHfg5wkEMc5kj2zTp5NPt+mUYqKSQzjKEMYTBJDGIg
A+hPP/rSh970oieJ9KA73ehKFxLoTCfiiaMjsXSgPe1oSxta04oYWtKCaKJo
TjOa0oTGNKIhDahPPepSh9rUoiY1qE41IqlKFSpTiQjCqUgFyhNGOcpShtKU
oiQlKE4xilKEwhSiIKGEEEwB8pOPvOQhN7nISQ6CCAz8/8j+ij/85hdZ/OQH
3/nGV77wmU985APvecdb3vCaV7zkBZk85xlPySCdJzzmEQ95wH3ucZc73OYW
N7nBda5xlStc5hIXucB5znGWM5zmFCc5wXGO8Q/iDaQB
           
           "]]]}, {}, {}, {}, {}, {}, {}}, {{}, {}, {}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.008333333333333333], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJwV01c7FgAAhuGPor2ntBRpKElDU4OGNGgXKU0qGmjRUtIgLW2kqUGivaQ/
1u3gvp7D9+iNyM5PzwsKBAL/6GgwnehMCKF0oSvd6E4PetKL3vShL/3ozwAG
MojBDGEoYQwjnOGMYCSjGE0EYxhLJFGMI5rxTGAik4hhMlOIZSpxTCOe6cxg
JrNIYDZzmMs85rOARBayiMUsIYlklrKM5awghZWksorVrGEtaaSzjvVsYCOb
2MwWtrKNDDLZThY72Ek2u9jNHvayj/3kkMsBDnKIPPI5zBGOcowCCiniOCc4
ySlOU0wJZzjLOc5zgVIucokyLlPOFa5yjetUUMkNqrjJLW5zh7tUc4/7POAh
j3jME2qopY6n1POM57zgJa94TQNveMs73tNIEx9o5iMttPKJz3zhK9/4zg9+
8ovf/KGNv7R3bDvBfzPvTQA=
          "]]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
         0.008333333333333333], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJwNz9dCSAEAANBbiDSMQkUloRSyykoDJQotDavJIz9Vf2JUymopEVFCWRkt
1Xk4H3BSmu9X3gsJgqCNBzzkEY/poJMuntBND095xnNe8JJe+uhngEFeMcQw
rxnhDW8Z5R3vGeMDHxlngk9M8pkvfGWKab7xnR/85Bcz/OYPf/nHLHPMs8Ai
/1limUA8hFBWsZo1hLGWdYSznggiiSKaDWxkE5uJIZYtbGUbccSTwHZ2kEgS
yewkhV2ksps97CWNdPaRQSb7OcBBsjjEYY5wlGNkk8NxTnCSU5wmlzPkkU8B
hZzlHOcpopgLlHCRS5RSxmWucJVyKqikimquUUMtddRznRvc5Ba3aaCRJppp
oZU73KU9NAhWAN2dTMU=
          "]]}, 
        {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
         0.008333333333333333], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJwVz0NyRAEARdGf7CRbyhIyijvo2LZt27ZtczU5GZyqO3iTFxUTik6OCIIg
TKyII54EEknifxAihVTSSCdMBplkkU0OueSRTwGFFFFMCaWUUU4FlVRRTQ21
1FFPA4000UwLrbTRTgeddNFND7300c8AgwwxzAijjDHOBJNMMc0Ms8wxzwKL
LLHMCqussc4Gm2yxzQ677LHPAYccccwJp5xxzgWXXHHNDbfccc8DjzzxzAuv
vPHOB5988c0Pv/+fIoPgD1y9S5Y=
          "]]}, 
        {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
         0.008333333333333333], AbsoluteThickness[1.6], 
         LineBox[CompressedData["
1:eJwVzldbiAEAQOGvSGZlhpQys7eMhlH2DGWPkq2ySQjZe1Nk/Rk/QjYVsldl
9Lp4n+dcnoScgsz8kCAIHvFYVPKEpzzjOS94ySte84YqqqnhLe94Ty0f+Mgn
PvOFr3zjOz/4yS/qqKeB3/zhL//+T4UGQQihNKEpYTQjnOa0oCWtaE0bIogk
ira0oz0d6EgnoulMF7oSQzdiiaM78STQg570ojd96Esi/ejPAAYyiMEMYSjD
GM4IRjKK0SQxhrGMYzzJpJBKGhOYyCQmk04GU5jKNKYzg5nMYjZzmMs85pPJ
AhayiCyyWcwSlrKM5axgJatYzRpyyGUteaxjPRvYyCY2s4Wt5FNAIdvYzg52
sovd7GEv+yhiP8Uc4CCHKOEwRzhKKcc4zglOcorTnOEs5zjPBS5yictc4SrX
uM4NbnKLMsq5zR0quMs97vOAhzQCzChZhA==
          "]]}}}], {}}, InsetBox[
     TemplateBox[{"\"Normal\"","\"Triangle\"","\"Uniform\""},
      "PointLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.15], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.008333333333333333`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                 "}"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
         "]"}]& )], Scaled[{0.01, 0.99}], ImageScaled[{0, 1}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"\[Sigma] of swarm\"", TraditionalForm], 
     FormBox["\"Optimal push location (\[Mu])\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Epilog->{
     Dashing[{Small, Small}], 
     LineBox[
      NCache[{{0, 
         Rational[2, 3]}, {100, 
         Rational[2, 3]}}, {{0, 0.6666666666666666}, {
        100, 0.6666666666666666}}]], 
     LineBox[
      NCache[{{0, 2^Rational[-1, 2]}, {100, 2^Rational[-1, 2]}}, {{
        0, 0.7071067811865475}, {100, 0.7071067811865475}}]], 
     LineBox[
      NCache[{{0, 
         Rational[1, 2]}, {100, 
         Rational[1, 2]}}, {{0, 0.5}, {100, 0.5}}]]},
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->Medium,
   Method->{},
   PlotLabel->FormBox[
    "\"Where to push a free object (-1 to 1) to maximize torque\"", 
     TraditionalForm],
   PlotRange->{{0, 2.}, {0, 2}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {0, 0}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{}, 
      GraphicsComplex[CompressedData["
1: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
ltTofbp4DfqC+XWjerv3GvSFZ39HunipNOgLa88qrkeO1qIvmMTs7HRrtRZ9
Ie0IL6DstBZ9YWnkpnea11r0BfWuZjtbqRZ94XrwmhOetjr0hbkbv7bu9dGh
LwjWeC+8cVKHvpCwovRe6Qsd+gJ4zu+t5v/f+bHpjfmMQaH6/PglMDny9yZ9
fnSaG/nay5uL+dHCr5Px9nf6/Oj5LnxOzOQ2zI/zDlWfuHVHf97sbxVckts+
j6j86LNmn1lDnP68OXOhdpnWkIP5seDQo0SLP/T5sdF6Ss0kpj4/njfOtFyy
Qp8fLxpU+wd/0OfHtOsNN05M1edHucPythv3mJgfNx+/PebNUCbmxyVx4aF1
eJ6aBw3HzmWoOzEwP3offikfENaM+dFjjcPk31qaMD+KnF0jF/s2YX6cPf1Q
9taiRsyP8qvWHY9Pb8T8eHf2E/eUBw2YH8u3fT2eY9OA+dFiSXXRt/h6zI+V
nt96q0zqMT++dGvz6r+nDvOjdO4W/wKzOsyPViE1lulJdZgfm7rH1pwZU4/5
cadTr4u7s+oxP3rwdq9YObcB82POIXFfqGzA/Lj11Ppi64BGzI/vuu2INRY3
Yn58Opo7u+VAE+bHX6uduhX1bMb8OCtuZ+79S82YH4ec/OXIOXv9ebPB7Reu
4Zn682aBKkrj667Pj8dfjnk+vVyfHxVMzh6b9SzMj4+8gxxMBCzMj9qjLnxO
JBvzY9ad3anF3VowPx62023NuNCC+bF85f3h5205mB/vX6ptjnjMwfzISgu9
6jezFfNjauavq1w+tmJ+XDbDyWLEmjbMj5yF9p9NuW2YHz+deJ3YtoeL+XEB
965HqSkP8+PzKX49Hp3nYX48cPdxYIEZH/Nj+YBRM1+s4GN+bLrTdVh6Eh/z
41RBnNE1Jh/zo/dV29ozYwSYHzVnOVlH/hBgfuwlX3t5d5YA82PcxFN7g4yE
mB/DFie27wch5kf+jqBJC04LMT+mWMja94cQ86NLY6pknKUI8+Osur0V1u15
g8qPbk5h9/rcFWF+nHwyrn3/iDA/fig5FSyfLMb8eNj82vyWA2LMj5OPPLOv
fifG/Li+s1X3op4SzI9Ds4uYL70lmB9rhqS9vX9JgvlxbzUv+XqTBPPj6E0p
B87ZSzE/Wp+qXx0VKsX8OBe+zQjPlGJ+XFDhZ7nZQIb58d0Sfvv+lGF+DIWS
qoWxMsyP40YdzZpeLsP8+Ljv9QsTBskxP36auXy3zXo55scqpfmyfqlyzI+B
64IcTQRyzI8Gm5f3UzoqMD8WDfsi4UQqMD/mu9qW1OQqMD+uCOlzr7ibEvPj
pj39Y7KXKDE/hll03pxxQYn5cci4/XP+qVdifvxbJh5x3laF+XHPOd/Ox9rn
NZUf06w3NEU8VmF+vLC9LHuLRoX50Xt0zTW/mWrMj2ZPufs9TqgxP771DFjj
8lGN+dHOvcNUh4EazI9uA0f9MmKNBvOjjU+Uuv8NDebHqNo9laZcDebH4xZX
n6gctJgfu+ztEN+G5zcCsF4p2F6bo8X8CBNXLy011WF+NA03cXjtodOfN//5
qf39qMP8eL7EiJvy7b/zl//OX/47f/nv/OW/85f/7/yFmhPU/KRqan5SNTU/
qZqan1RNzU+qpuYnVVPzk6qp+UnVOD9JTc1PqqbmJ1VT85OqqflJ1dT8pGpq
flI1NT9xTpL5SdX0Z2p+UjU1P39en76m5ufP69XX1Pz8ef36/xNT8/Pnfuhr
an7+3B99Tc3Pn/slxJqanz/3T19T5y9UTZ2/UDV1/vJzf/XnVtT5y8/91tfU
+cvP/dfX1PnLzxzENB5iGg8xjYeYxkNM4yGm8RDTeEhoPCQ0HhIaDwmNh4TG
Q0LjIaXxkNJ4SGk8pDQeUhoPKY2HjMZDRuMho/GQ0XjIaDxkNB5yGg85jYec
xkNO4yGn8ZDTeMhpPBQ0HgoaDwWNh4LGQ0HjoaDxUNJ4KGk8lDQe+pr6f+3P
PJQ0HioaDxWNh4rGQ0XjoaLxUNF4qGk81DQeahoPNY2HmsZDTeOhpvHQ0Hho
aDw0NB4aGg8NjYeGxkNL46Gl8dDSeGhpPLQ0HloaDx2Nh47GQ0fjoaPx0NF4
6Gg8KP9on6f9rk23/1XvJdNGdQt5bqXE+sVxo9k3woVY/w+o/Ucb
       
       "], {{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {
          EdgeForm[], 
          Directive[
           RGBColor[0.880722, 0.611041, 0.142051], 
           Opacity[0.2]], 
          GraphicsGroup[{
            Polygon[CompressedData["
1:eJwl1NVSEAAQBVDAVsBuUcHA7gTFRlAs7MAg7O7u7u52/BO7uxtU7E6sw/hw
9r7uztzZ8OQJieODAgICAhln3OM+D3jIIx7zhHQyeMoznpPJC17yite84S3v
eM8HPvKJz3zhK9/4zg9+ksUvfvOHv9lLWS6QIHKQk1zkJg95yUd+ChBMCKEU
pBCFKUJRilGcEpSkFKUpQ1nKEUZ5KlCRcCKoRGWqUJVIqlGdGtSkFrWpQ13q
UZ8GNKQRjWlCU5rRnCiiaUFLYmhFa9rQlna0pwOxdCSOeDrRmQS60JVudKcH
ifSkF73pQ1/60Z8BDGQQSQxmCEMZRjIppJLGcEYwklGMZgxjGUd2qSYwkUlM
ZgpTmcZ0ZjCTWcxmDnOZx3wWsJBFLGYJS1nGclawklWsZg1rWcd6NrCRTWxm
C1vZxnZ2sJNd7GYPe9nHfg5wkEMc5kj2zTp5NPt+mUYqKSQzjKEMYTBJDGIg
A+hPP/rSh970oieJ9KA73ehKFxLoTCfiiaMjsXSgPe1oSxta04oYWtKCaKJo
TjOa0oTGNKIhDahPPepSh9rUoiY1qE41IqlKFSpTiQjCqUgFyhNGOcpShtKU
oiQlKE4xilKEwhSiIKGEEEwB8pOPvOQhN7nISQ6CCAz8/8j+ij/85hdZ/OQH
3/nGV77wmU985APvecdb3vCaV7zkBZk85xlPySCdJzzmEQ95wH3ucZc73OYW
N7nBda5xlStc5hIXucB5znGWM5zmFCc5wXGO8Q/iDaQB
             
             "]]}]}, {}, {}, {}, {}, {}, {}}, {{}, {}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1:eJwV01c7FgAAhuGPor2ntBRpKElDU4OGNGgXKU0qGmjRUtIgLW2kqUGivaQ/
1u3gvp7D9+iNyM5PzwsKBAL/6GgwnehMCKF0oSvd6E4PetKL3vShL/3ozwAG
MojBDGEoYQwjnOGMYCSjGE0EYxhLJFGMI5rxTGAik4hhMlOIZSpxTCOe6cxg
JrNIYDZzmMs85rOARBayiMUsIYlklrKM5awghZWksorVrGEtaaSzjvVsYCOb
2MwWtrKNDDLZThY72Ek2u9jNHvayj/3kkMsBDnKIPPI5zBGOcowCCiniOCc4
ySlOU0wJZzjLOc5zgVIucokyLlPOFa5yjetUUMkNqrjJLW5zh7tUc4/7POAh
j3jME2qopY6n1POM57zgJa94TQNveMs73tNIEx9o5iMttPKJz3zhK9/4zg9+
8ovf/KGNv7R3bDvBfzPvTQA=
           "]]}, {
          Hue[0.9060679774997897, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1:eJwNz9dCSAEAANBbiDSMQkUloRSyykoDJQotDavJIz9Vf2JUymopEVFCWRkt
1Xk4H3BSmu9X3gsJgqCNBzzkEY/poJMuntBND095xnNe8JJe+uhngEFeMcQw
rxnhDW8Z5R3vGeMDHxlngk9M8pkvfGWKab7xnR/85Bcz/OYPf/nHLHPMs8Ai
/1limUA8hFBWsZo1hLGWdYSznggiiSKaDWxkE5uJIZYtbGUbccSTwHZ2kEgS
yewkhV2ksps97CWNdPaRQSb7OcBBsjjEYY5wlGNkk8NxTnCSU5wmlzPkkU8B
hZzlHOcpopgLlHCRS5RSxmWucJVyKqikimquUUMtddRznRvc5Ba3aaCRJppp
oZU73KU9NAhWAN2dTMU=
           "]]}, {
          Hue[0.1421359549995791, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1:eJwVz0NyRAEARdGf7CRbyhIyijvo2LZt27ZtczU5GZyqO3iTFxUTik6OCIIg
TKyII54EEknifxAihVTSSCdMBplkkU0OueSRTwGFFFFMCaWUUU4FlVRRTQ21
1FFPA4000UwLrbTRTgeddNFND7300c8AgwwxzAijjDHOBJNMMc0Ms8wxzwKL
LLHMCqussc4Gm2yxzQ677LHPAYccccwJp5xxzgWXXHHNDbfccc8DjzzxzAuv
vPHOB5988c0Pv/+fIoPgD1y9S5Y=
           "]]}, {
          Hue[0.37820393249936934`, 0.6, 0.6], 
          Directive[
           PointSize[0.008333333333333333], 
           AbsoluteThickness[1.6], 
           RGBColor[0.880722, 0.611041, 0.142051]], 
          Line[CompressedData["
1:eJwVzldbiAEAQOGvSGZlhpQys7eMhlH2DGWPkq2ySQjZe1Nk/Rk/QjYVsldl
9Lp4n+dcnoScgsz8kCAIHvFYVPKEpzzjOS94ySte84YqqqnhLe94Ty0f+Mgn
PvOFr3zjOz/4yS/qqKeB3/zhL//+T4UGQQihNKEpYTQjnOa0oCWtaE0bIogk
ira0oz0d6EgnoulMF7oSQzdiiaM78STQg570ojd96Esi/ejPAAYyiMEMYSjD
GM4IRjKK0SQxhrGMYzzJpJBKGhOYyCQmk04GU5jKNKYzg5nMYjZzmMs85pPJ
AhayiCyyWcwSlrKM5axgJatYzRpyyGUteaxjPRvYyCY2s4Wt5FNAIdvYzg52
sovd7GEv+yhiP8Uc4CCHKOEwRzhKKcc4zglOcorTnOEs5zjPBS5yictc4SrX
uM4NbnKLMsq5zR0quMs97vOAhzQCzChZhA==
           "]]}}}], {}}, {
     DisplayFunction -> Identity, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, AxesOrigin -> {0, 0}, 
      PlotRange -> {{0, 2.}, {0, 2}}, DisplayFunction -> Identity, 
      AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
      AxesLabel -> {"\[Sigma] of swarm", "Optimal push location (\[Mu])"}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, Epilog -> {
        Dashing[{Small, Small}], 
        Line[{{0, 
           Rational[2, 3]}, {100, 
           Rational[2, 3]}}], 
        Line[{{0, 2^Rational[-1, 2]}, {100, 2^Rational[-1, 2]}}], 
        Line[{{0, 
           Rational[1, 2]}, {100, 
           Rational[1, 2]}}]}, Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], Method -> {}, PlotLabel -> 
      "Where to push a free object (-1 to 1) to maximize torque", 
      PlotRange -> {{0, 2.}, {0, 2}}, PlotRangeClipping -> True, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      PointLegend[{
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[
         PointSize[0.008333333333333333], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Directive[
         PointSize[0.008333333333333333], 
         AbsoluteThickness[1.6], 
         RGBColor[0.880722, 0.611041, 0.142051]]}, {
       "Normal", "Triangle", "Uniform"}, Joined -> {{True, True, True, True}},
        LabelStyle -> {}, LegendLayout -> "Column", 
       LegendMarkers -> {{False, Automatic}, {False, Automatic}, {
         False, Automatic}, {False, Automatic}}]], {Left, Top}, Identity]]& ],
  
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.68453389843923*^9, 3.6845339398526583`*^9, 3.684540265088787*^9, 
   3.684540386692976*^9, {3.684540505027707*^9, 3.6845405206929827`*^9}, 
   3.684540562129772*^9, 3.68454073991187*^9, 3.6845408107933702`*^9, 
   3.684540981636374*^9, 3.6845410168946857`*^9, {3.684541272726653*^9, 
   3.684541275069581*^9}, {3.6845413149953117`*^9, 3.684541330390424*^9}, 
   3.684541564380101*^9, {3.6845415972458344`*^9, 3.684541611404339*^9}, {
   3.68454164531647*^9, 3.684541659352977*^9}, 3.6845416903810062`*^9, 
   3.6845417731341143`*^9, 3.684541815751561*^9, {3.684541858016691*^9, 
   3.684541884938489*^9}, 3.684542038494244*^9, {3.684542261702969*^9, 
   3.684542329744802*^9}, {3.684542837108465*^9, 3.684542857215396*^9}, 
   3.684542954771956*^9, 3.684543120000651*^9, 3.684543327850935*^9, 
   3.684543551271291*^9, 3.684634500886478*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"sigs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "1.1", ",", "1.2", ",", "1.3", ",", "1.4", ",", "1.5", ",", 
      "1.6", ",", "2"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"TODO", ":", " ", 
    RowBox[{
    "place", " ", "legend", " ", "inside", " ", "the", " ", "plot"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"TorquePivotTriFree", "[", 
       RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Sigma]", ",", "sigs"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Mu]", ",", 
     RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "sigs"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Mu] (pushing location)\>\"", ",", "\"\<Torque\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Triangular distribution\>\""}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Line", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}]}], "}"}], "]"}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.683656192718853*^9, 3.68365650959415*^9}, {
   3.684533201990088*^9, 3.684533227629901*^9}, 3.6845336018509903`*^9, {
   3.684538398449457*^9, 3.684538398934102*^9}, {3.684538872647613*^9, 
   3.6845388887736807`*^9}, 3.684539050089514*^9, {3.6845392360343122`*^9, 
   3.68453924661322*^9}, {3.684539278578122*^9, 3.684539281301207*^9}, {
   3.684539347834256*^9, 3.684539370928897*^9}, {3.684539413266988*^9, 
   3.6845394260116*^9}, {3.684541137633313*^9, 3.684541223576767*^9}, {
   3.6845419473452797`*^9, 3.6845420170348797`*^9}, {3.684542119211987*^9, 
   3.684542121724435*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
YQ==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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

        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
mAJ/E1dfhliiwH+k30r48hR4Pd6UHXkRBdXnb/IdeDYFrmX5/s7wwl/P8/3L
cNMUYJ5M6A3wwfeD8gnpg1Pg0oKhikYACg7sGKBsoEyDCL08ZmgYCgyblZqr
d08DoSREa/UGCpwCY297qkyDY2y+T22iUZDTrcbRe3Ea8ES9eN91FwVYdMLb
e/7TIE6+VvtnAgp6lMcjdOOmgYXi+VxGEgr47ycTK6umwV0v+8qH6Si4debn
8m3eGeAuYbWrNRcF+SSdFxoSM+DsBNv9HQUoqKNl+vw+MgOWLx0xPV2EgjWq
wYKd4wzY9fqMh2MpCoRgNl0weAbcVDnw+EQ5ni+3JY+PiTPAJiO5aysdBVea
8qZVsBnAb/l37XwlCmIDVosZX2dA58ml971PUVAkaeyUOzkDXp0PMNB4joKG
riKJc0QGULUmeke/QMFQFHGUR4AB4CZOmWcvUUBUNst9K80ANJ0tDo1VKNgx
WnohUJMBIloyqW+qUaCWzLbroBkD5HpK8D56hQKz45b9o64MELkma3WxBgVX
F+iZGeEMcAsc6iVDFCTkbLQ6k8oAUqSKsDTcZUa2QhvLGKCZV0aZG0NBE/FZ
V00dAwwcEZ26iHu8nDvFu5sBOk6S7zzCzW578azkLANs5XNje4M7IdKKc5Y0
C/67LwKRvqjxRu5Z8N99DVgcUbykqLIev5f+Y/DRxfU4u5l6j2/Vuv23pH49
yfvz3+tz5hS548/O/Ys3fWo71po2/y9+5YPSnrv8i//8uOUY36V3f/75zpNn
BRsMVv6ZeK9N9w3b2j+PTETwHjJdW19fU+Hb44L1OHSLAVaf1+P0tOEcvuX1
eFnuSvVRVua/+JPyTe1XKExQbHi2qAF3QdVeRpYgEyhYVTa8wJ379gjHx11M
AO4Lz2fhzv58RvSvNBM0le0/5I87s8dRVVKJCXosbiXo4E4fDT5jpsEEjgZt
fFy4U+aSXG7qM4Gvckl9LX5+SavFNypMmGDDl6eFLv87X47XmYM2TLDlU8J7
Ltyxmzuf8TgxwaMfg9JZeD3c3jHzSd0bf75anW97cEftY51wCWKCgzsu9WTj
9RNxaBtLehQTKJX0KG3GHaSnpfD7ARNUHLQU/ozXn7+J5QnxfCaQji+o2IHb
x9bz8hkaE+yca6u3xevV41pmalk9E3jdNr7yGq9v19AK+vcWJmiVmtw2+Azv
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
biRc5Au2sG6l8+nWtsvr/u//Cf75/wAZFOJm
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
9/++r4H/AQz2/Hw=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJxF2Xk8VN/7AHDcmSHFKBV9qIRKSGUrkee2F1KpJCFFCCVFIjuJFlFSkbIO
Zi5aSFGdW4ikTbJl35cxY/vIln738/r24695vV/Pueeee+Z5nnter7vshIvJ
SSEBAYEbggIC//2qwcKeP3+YJDdG6jzufwkddFwZOjbOJA/5rb26qvQS8rqz
YcXQv0zyhl9yrvV8b1Tca36io5dJZvdZTuameyPre49qy6qY5BWdw68Eqn1Q
5IDSx/tZTFIiXbPk8DJ/NJykS2gcY5JRXx6oSqYGojyR42fs34iT4Tk+HoYL
QpHfp8ret8fFSBY3yig+8RbqTlkktV52DhmgX/i71/w+Um7cNYtZL0omhsCp
JRLxKFkyabgmcBYZILbt+JyUJFRwtPQGAhFyQmnf6Y8vWOhrsmT/jo0iZGPY
k2PGRSzU0Gdh8llThCx1ilL68I2FRv34C+tXiZCbzJUZrB4WUkueHz8uKUJK
XUhznJBJRTFcq6daXcKkhLFXuohPKjrrM1TJiRAmbRNrAg03pCHf93o6GteE
Sa2dEgaZW9PQNWZIbN5lYVIufbmy8N40xEqQtv7gJUzmGW74HXMyDf0s2tTd
YStMxsWLn9p9Kw3tEA+dWKYjTLqvnqOU052GZB/Jyt1rZpDvR7KK7SLSUcb9
ADGdOgbZGrOic0tMOtKP6hivqWSQad3lnyST09GxsMc/ZMoYZCIsfHU7Nx0l
nt927dFzBsmuNuSINqQjpV3OI6xrDPLxottGH5TYSHMgvyxHi0HmEVFHV+ew
UVGvXJ7pWgZZKHChJvQ1G5l2XE79pcwgNxfUXqwqYiOPn3sDdeQY5D9GFzv3
VLJRXlHr+teiDPLaRWHJhyNshMfMTipspJNSd6NlSE0OMtx61PN7GJ0cRl7P
MlkcpHzO49vXYDpZr5bc2UJwkGjC7VWf/ejki66ll0SfcVDJ1MeaEnc6GTW1
/Y4G4qAdeXob3xynk0MT5Y7cSg7C1y2ZSNOhk6oh8sDHCLTUeuMBliadBMMx
24OzCDQVbspJWkMn3a0FgRAn0Gtu+NGHy+lkgl59m8YiAm1M+5N/ey6dlKAb
lCWsJpDW0mZv324aKbZUOZN3gEDzjX9XXGqjkf43Hkp6mRFo2HvRas9GGmmw
XyHwlwWBntburz//g0ZujLmzt+QkgdZGv9t06i2NjPZK8icvEIhZ1HDH7hWN
5NXJYT+9CMQbGu+zyaWRG6SW6HT6Eihjv8ZDqwwaOVDxJaoihEDKYslTB+7T
SJk30Y2C0QSapUea7o+ikYqr7pen3SdQl2NdpvFNGvmKd1VhcxyBUkvmH9t9
mUY2Grhlb08mkGLwZaTvSiPnRLTZxT0hEO1ZgpSeM428K921+HM2gVqbX7vo
2FPr9zWo5+cSKBFGlmpa0sgziTYGjDfU/k3Y+a/aTSOro08/9flAIO4P++S8
rTSyvdzb36WMQC8eO5QY6tNI9S9Be/d+IdA+O0eJMxo0UiOB+7K6gkCym500
/6ymkZu2imwMrKLWK+NsFqFEjde/GbyolkD+307HP11MI4OrTLbMbSSQEXGm
cKs0jdTZsjvGtZlA0ldcuirm0cigh0tCUCuBnui5rv0lTLmwpkWhi0AtqW6k
7iBGdg/mqYv1Eygz0L2tjIuRkwvLOdUDBPKyvCBi1UnZMsswcohAkpIX9/nX
YaRL35oPH0YI1NR30W1uFUZqC924tnuUQESJ573EbxgZXa6g/3yMQNt8LzUV
vsfIMv1zm0wnCSRxxJtm+hYjf7Faz4T9JlCdho9SZz5G2tsImadPEShN3Nfo
4nOM3G6uMpDzh0Du3b5nZz3ByFeu+SuyBDLQlkK/qBgORo7eZPZFCWYg8Uf+
L1RYGLk8NljbXigD1XoG1L2Kx0gnT49/l2MZiHUwUMA4lrqfxHbZb5TPrQlS
bLyDkcM7DeIcaBlIXzR419kIjLxGa3PkUhZtD3YWvEbth6qLhwU9A1WhyxG3
LmPkhtRdOS8oJ8eEZCv4Y2TCkU8LBRkZ6Kz7lepsL4w0UTYP16Ksty90crs7
Rrr/MRQ3pSyiEiZX5YKRmuhP6AnKFfSr2xwcMXLrlb1Z/zm+6arDmO2MnfOv
Xb96bMY60dcfy5hj5Ja/LjcMH920dybuKBiBW2+bcVlVtHW39IxXZ8b5n+sT
mr4+JPLRYUVDoel4k1uCWmWa4LRPPYhMeuAoMG0z3yMKhPwU+n8r9a46evDh
xLSdjPddbmkdnbb5+b2btLVHpn0bde1Dz4fQ5r8GoWpTNcGB6XjDvf4HL6r7
p+27ZlbrlsczfmWx0eXwsX60/a8thkxymrVnPBHmNOEkPuOkrIHrxrT+6ftF
s/l6J4b5aIuB0ZAF5Y5/J46tbOKjiN+9D9dT1tosEsT9yEcc/4PxfOr/Db4+
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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.772079, 0.431554, 0.102387], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
rfhcs4x3Ffz7vwTN+///JeD/ALwq1y0=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.363898, 0.618501, 0.782349], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
ZSWCf98noN/+/30C+D9F/EG1
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[1, 0.75, 0], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
yNYlrNgrA6eroRjxhh4cy037/HJbBmYEmGlWhfbgvEVjTmt/pmM5IeqkQks3
lhtKKUpwTccpNvHaNX904UkZhykN5TS8q3vN7Req7fT1BH2+FZKCdTHVyox9
g4ddrJ8Pf4vBBqPO7l/c72PXdt4p+ZW+WDOGJ84IqQDXcuaqvwa8oayBe/OM
41vorqYqH5+MhScWjfqbn7VBt5zixnrjFODqbKod57SBdYJGhea+FFBUzrO5
vbQdFHiyUmcDUiBqKuiwUlA7OIZWj09dSQGydGmSqNJncAg08lIXSIW6Bd5d
7093QOC/Wbp2T1Kh8e3cOF+DLrjKrWYra6TBVFWQ1KojXeC1pnLXLjINNIo/
535J6QJH/bfqXg5pkBhdVrZ7uAuKMjzfuZxLg6LsUjZl1Q2N7m7TB9vSwMti
j8y5qW64v/nnaGxMOrBKrnvvdOyFfr3HX+oaMmCy3UvouV8vzGmegtH2DBCY
r0UZxvSC/p+Rf4pwM0DGt6pJ/U4v1PuaOHAWZ8JWzWYt4Tl9ULO6fUuZSyZk
l4pMPizrg717Llwe4GXC9lte51bOHYB6HQM3L4Fs2NWxTj5bYQCOo2WeeVLZ
4LTgW4Wk9gAUG5otrVLKhoBjZwemDw6Ajtdp+WIyG3LX5Jq33BuA947B9TZn
smH01ivJRJdBeHLx1bry79lw+fY6auLBECQu3DdftTkH/BfIJfx8OQSfbUws
VnbngLGvYNhM5xC8qjSoEGHnwBf1Zjsx0WGwUn32MEY4F5QKIsQVHIbBS3XN
ZrsNuVCQWxexbXIYuncbdajF50Lwz9ue5uIj8GvXWyL5Ui6YOmbZ2yiOgFKI
6so2lAuD0j4b9pmNwJsN5xKUy3NBPZUY8ckcAdJDVD38Uy7cOu/keEmXCe2r
5u1VUKYgcnCbWZYlEwYtY7NbNCiwMV27CbkwwSo55FjIRgq4QgJSRXFMOOe5
OsB1OwXrowobHrcwodG1NnPEgwKBzgsPaphM2HGIKVF/jIL/GIbn184wgQx1
84sLpuD4T8szr9VYIMm6lXovhoL7waO6PaEsiO6qUPv7KgWxH9pUB/9iQUmK
Q1bZDQrstWsXsfJYEGOvYpF0h4JJXgZ3op4FkbLFCrwqCvR9DYvEZNlgcGz/
ZsePFIg1qqZLaLLB/uYOX+/PFLSpS55bBGzY8c1A17mHgpOD3c4KnmwQfphl
xmZTUO0WJ73+IRvU/qMtViSEoE2q88NAExu+eY2d1hNDMIk3XqJ62ZD9Tju3
UALBesUeybmSHAhvuHFAVg6BzWu919UqHOjQTnm1bDkCn8gLiccNOLBD7UjY
1EoE+e2GYl88OHDB2VhupyYCRsKl+rSTHPA//b31qRaCDv2RWIsUDtzoFPVe
uAmBTFam4IMqDkjLXkrfZoTgrz1jU4mLuFAQZrx6zBLBDSHzxybqXHDMTz5P
7kRQV54X9n0LFxrPiPb77EYwQ1hPHPbmgqRwl5rtPgTy+Po9uTNcmBs33iru
hEDf/2fgm3Qu/Aqill09iCCoqYhjwOAC14hg7ndDcOHUP6W8j1xQ+HHRJMod
QYnGXp9CFheONkswIo8gaGgrUT8gyAMBss/S3hNBf7zgkJQsD5jFPg1zvREI
6jsW1q/hgcrpmWXpPggUh+64R27lQYfGT40pXwSGmSLK2o48+LXiQYeBHwJH
04PdQ348eNCYJL3HH0HIxL28yzE8+JbdXmkagOBS/jznPTk86Pvxo3xhIIIy
O1f5eWU8iHHc2v037SbBh201dTwYWrVQk74fh5G7EtnB7TyQe4vDkmiLuno4
aIzyQOdZcWk17UvnncVHhUbh9/0ZKHXFjzRKzNppi+5RXYNZp1F9vdc8Zi3q
aNwRXjXrk0tyPu5aNMZ3/lddiVSHr3w3vWve/j53nO+gV3pqF2UmQe63C95u
lz764gd/PenWw+K51tN8C6Y1W9SKzPA/L3uztKHAXID833rLjWgVkXhBvg+U
asQd7xXi24iaa/h81Ry++y4+nlSNFeH7vsoZ1soOUb6788O05ywX4/u9umn0
ePg8ctlvr8g1VXrxRJy/nlmy/6fBr/mk4m9/wFvbHtlL8Nd9n7rMX54tybdq
uY7n0uez7ri6oFb666wfyf0YTRMj+E5P6VNctGLWif4uJeWqsz5n3aazW4Pg
n1+Ext6no1oEKf/bgWJvrVN0CHLDG8mzDNqegxaftAwJcoFQyu5C2i51de5v
SYKUyhRTD6Ftfx14/mYE+emdxeL1tK2jK09KWhOk8E9V5RZ63ra56Ije2U2Q
q+193T1pbza6m2qzjyDbNLkDffS8blimuZxzkCAra6MeWdFW/1FYnHSYIN3c
uSN59HyvaFHatMaLID13SyZ00vMvc5/Cr/wI8khzWcFc2hKXZKx8TxDkqHaB
1fJjCOYEpraIRxBkSUV1kiKdn2mbBYdLogjyj8uNofPpfH3VPM+xiKXPT/eK
XL8X/f8NRc5JuEiQxik9NY5HEbQ+/35RPYMg33wZ657wQPAm/7j8i1yCVPou
MRlJ5/vJIS/tuUUEGXLlzqbdrvQ8bOl7UlRKkHeqP5667ILglryLhVk5QUrW
2Ix9pPsit3WP65/VBFlxPuT6/P0IUh+8Yak+I0iNzoZpMbpv4tMswuoaCHLj
hrs1X/ciCN0FF4Q/EKQj73x1oi0Cv7WVS/M/EWTh4FJpQ7q/PObrFG79QpAj
k3GLWq0Q2DVoVJ8dIchHkXp6H80QWBQW7ljJI8iwM8sj9bYjIGOUPjAmCDL1
gcq1OBMEem6Ui+sUQV49Iv/gmTGC389bSOP/f94C/wUNUL0w
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[Mu] (pushing location)\"", TraditionalForm], 
       FormBox["\"Torque\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Epilog -> {
       LineBox[{{1, 0}, {1, 1}}]}, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotLabel -> FormBox["\"Triangular distribution\"", TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"1", "1.1`", "1.2`", "1.3`", "1.4`", "1.5`", "1.6`", "2"}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[1, 0.75, 0], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.75, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[0.6666666666666666, 0.5, 0.],
                     FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "RGBColor[1, 0.75, 0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.75, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.75, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.684541948297085*^9, {3.684541979631719*^9, 3.6845420339731903`*^9}, 
   3.6845421227183447`*^9, 3.684634501280901*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"Brown", ",", "\[IndentingNewLine]", 
        RowBox[{"Rectangle", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{
             RowBox[{"-", "1"}], "/", "10"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"1", "/", "10"}]}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", "Blue", ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
        "Red", ",", 
        RowBox[{"Polygon", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{".75", ",", 
             RowBox[{"-", "4"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.25", ",", 
             RowBox[{"-", "4"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.25", ",", 
             RowBox[{"-", "3"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.75", ",", 
             RowBox[{"-", "3"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{"-", "2"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1", "/", "4"}], ",", 
             RowBox[{"-", "3"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{".75", ",", 
             RowBox[{"-", "3"}]}], "}"}]}], "}"}], "]"}], ",", 
        "\[IndentingNewLine]", "Black", ",", 
        RowBox[{"PointSize", "[", "Tiny", "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"RandomVariate", "[", 
          RowBox[{
           RowBox[{"MultinormalDistribution", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"-", "5"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\[Sigma]", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "\[Sigma]"}], "}"}]}], "}"}]}], "]"}], ",", 
           
           RowBox[{"10", "^", "3"}]}], "]"}], "]"}]}], "\[IndentingNewLine]", 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "8"}], ",", "2"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Sigma]", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "/", "50"}], ",", 
        RowBox[{"1", "/", "10"}], ",", 
        RowBox[{"1", "/", "2"}], ",", "1", ",", "2"}], "}"}]}], "}"}]}], 
   "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.676470766623321*^9, 3.676471003872978*^9}, {
   3.676471049882092*^9, 3.676471065234427*^9}, {3.676471129297615*^9, 
   3.676471149504457*^9}, {3.6764711932820797`*^9, 3.6764713150200872`*^9}, 
   3.676471922923559*^9, 3.676471966073427*^9},
 CellID->54126742],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{
     {RGBColor[0.6, 0.4, 0.2], 
      RectangleBox[NCache[{-1, Rational[-1, 10]}, {-1, -0.1}], 
       NCache[{1, Rational[1, 10]}, {1, 0.1}]]}, 
     {RGBColor[0, 0, 1], PointBox[{0, 0}]}, 
     {RGBColor[1, 0, 0], 
      PolygonBox[
       NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
         Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
         1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]]}, 
     {GrayLevel[0], PointSize[Tiny], PointBox[CompressedData["
1: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
AUpnPSs=
       "]]}},
    AxesOrigin->{0, 0},
    PlotRange->{{-2, 3}, {-8, 2}}], ",", 
   GraphicsBox[{
     {RGBColor[0.6, 0.4, 0.2], 
      RectangleBox[NCache[{-1, Rational[-1, 10]}, {-1, -0.1}], 
       NCache[{1, Rational[1, 10]}, {1, 0.1}]]}, 
     {RGBColor[0, 0, 1], PointBox[{0, 0}]}, 
     {RGBColor[1, 0, 0], 
      PolygonBox[
       NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
         Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
         1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]]}, 
     {GrayLevel[0], PointSize[Tiny], PointBox[CompressedData["
1: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
       "]]}},
    AxesOrigin->{0, 0},
    PlotRange->{{-2, 3}, {-8, 2}}], ",", 
   GraphicsBox[{
     {RGBColor[0.6, 0.4, 0.2], 
      RectangleBox[NCache[{-1, Rational[-1, 10]}, {-1, -0.1}], 
       NCache[{1, Rational[1, 10]}, {1, 0.1}]]}, 
     {RGBColor[0, 0, 1], PointBox[{0, 0}]}, 
     {RGBColor[1, 0, 0], 
      PolygonBox[
       NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
         Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
         1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]]}, 
     {GrayLevel[0], PointSize[Tiny], PointBox[CompressedData["
1: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
Y0JoMAFxd65c1G6l4v8ALUMCnQ==
       "]]}},
    AxesOrigin->{0, 0},
    PlotRange->{{-2, 3}, {-8, 2}}], ",", 
   GraphicsBox[{
     {RGBColor[0.6, 0.4, 0.2], 
      RectangleBox[NCache[{-1, Rational[-1, 10]}, {-1, -0.1}], 
       NCache[{1, Rational[1, 10]}, {1, 0.1}]]}, 
     {RGBColor[0, 0, 1], PointBox[{0, 0}]}, 
     {RGBColor[1, 0, 0], 
      PolygonBox[
       NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
         Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
         1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]]}, 
     {GrayLevel[0], PointSize[Tiny], PointBox[CompressedData["
1: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
mNkvjsMbS05LPAzzUbh7K5gC/wPQk8UX
       "]]}},
    AxesOrigin->{0, 0},
    PlotRange->{{-2, 3}, {-8, 2}}], ",", 
   GraphicsBox[{
     {RGBColor[0.6, 0.4, 0.2], 
      RectangleBox[NCache[{-1, Rational[-1, 10]}, {-1, -0.1}], 
       NCache[{1, Rational[1, 10]}, {1, 0.1}]]}, 
     {RGBColor[0, 0, 1], PointBox[{0, 0}]}, 
     {RGBColor[1, 0, 0], 
      PolygonBox[
       NCache[{{0.75, -4}, {1.25, -4}, {1.25, -3}, {1.75, -3}, {1, -2}, {
         Rational[1, 4], -3}, {0.75, -3}}, {{0.75, -4}, {1.25, -4}, {
         1.25, -3}, {1.75, -3}, {1, -2}, {0.25, -3}, {0.75, -3}}]]}, 
     {GrayLevel[0], PointSize[Tiny], PointBox[CompressedData["
1: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
Gyf8D+Fl22w=
       "]]}},
    AxesOrigin->{0, 0},
    PlotRange->{{-2, 3}, {-8, 2}}]}], "}"}]], "Output",
 CellChangeTimes->{{3.676470783775257*^9, 3.6764707939130287`*^9}, {
   3.676470829920199*^9, 3.6764708640944843`*^9}, {3.676470903722499*^9, 
   3.67647093557904*^9}, {3.6764709802999067`*^9, 3.676471004411406*^9}, {
   3.676471050842946*^9, 3.6764710656836853`*^9}, {3.676471131653288*^9, 
   3.6764711501049232`*^9}, {3.676471297459279*^9, 3.6764713164277487`*^9}, 
   3.676471923491651*^9, 3.6764719665285807`*^9, 3.684634501349966*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{".75", ",", 
     RowBox[{"-", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.25", ",", 
     RowBox[{"-", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.25", ",", 
     RowBox[{"-", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.75", ",", 
     RowBox[{"-", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "/", "4"}], ",", 
     RowBox[{"-", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{".75", ",", 
     RowBox[{"-", "3"}]}], "}"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.6764713623800364`*^9, 3.676471367359054*^9}, {
  3.6764714279189*^9, 3.676471434549323*^9}, {3.676471483974584*^9, 
  3.676471491130146*^9}, {3.6764715213396587`*^9, 3.6764715220939903`*^9}, {
  3.676471886330518*^9, 3.676471958465077*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.75`", ",", 
     RowBox[{"-", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.25`", ",", 
     RowBox[{"-", "4"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.25`", ",", 
     RowBox[{"-", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.75`", ",", 
     RowBox[{"-", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "4"], ",", 
     RowBox[{"-", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.75`", ",", 
     RowBox[{"-", "3"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6764713678019037`*^9, 3.676471434956658*^9, 
  3.676471491934902*^9, 3.676471522490788*^9, 3.6764719147354183`*^9, 
  3.6764719588293467`*^9, 3.684634501401786*^9}]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "Problem 3:  given a variance \[Sigma] if you push at location \[Mu], with \
velocity ",
 StyleBox["v",
  FontSlant->"Italic"],
 " (everyone not in contact with the object moves at velocity ",
 StyleBox["v",
  FontSlant->"Italic"],
 ") , and variance bound ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Sigma]", "max"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", how long before you need to switch to variance control mode?"
}], "Subsection",
 CellChangeTimes->{{3.676456729376965*^9, 3.676456792954073*^9}, {
  3.676462023205823*^9, 3.676462123761077*^9}, {3.676462183093297*^9, 
  3.676462186933276*^9}, {3.6764622615292883`*^9, 3.676462261794133*^9}, {
  3.6767079936854773`*^9, 3.676707994070787*^9}, {3.678013488380001*^9, 
  3.678013506864674*^9}, {3.678013813226904*^9, 3.6780138627633266`*^9}, {
  3.6780151844238043`*^9, 3.6780152766910753`*^9}}]
}, Open  ]]
},
WindowSize->{1280, 687},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification->1.5,
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September 9, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1363, 31, 498, "Section"],
Cell[CellGroupData[{
Cell[1968, 57, 684, 11, 138, "Subsection"],
Cell[CellGroupData[{
Cell[2677, 72, 294, 7, 43, "Input"],
Cell[2974, 81, 151, 4, 71, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3162, 90, 551, 16, 59, "Input"],
Cell[3716, 108, 2356, 68, 131, "Output"]
}, Open  ]],
Cell[6087, 179, 790, 23, 106, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[6902, 206, 731, 19, 69, "Input"],
Cell[7636, 227, 48216, 815, 361, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55889, 1047, 48215, 815, 361, "Input"],
Cell[104107, 1864, 48216, 815, 361, "Output"]
}, Open  ]],
Cell[152338, 2682, 2812, 76, 135, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[155175, 2762, 1047, 26, 69, "Input"],
Cell[156225, 2790, 21368, 341, 361, "Output"]
}, Open  ]],
Cell[177608, 3134, 2446, 65, 133, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[180079, 3203, 1239, 30, 141, "Input"],
Cell[181321, 3235, 29685, 596, 549, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[211043, 3836, 233, 6, 106, "Input"],
Cell[211279, 3844, 11156, 326, 874, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[222472, 4175, 12339, 332, 937, "Input"],
Cell[234814, 4509, 6981, 205, 508, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[241832, 4719, 7852, 216, 598, "Input"],
Cell[249687, 4937, 6932, 203, 508, "Output"]
}, Open  ]],
Cell[256634, 5143, 7203, 205, 538, "Input"],
Cell[263840, 5350, 5053, 141, 766, "Input"],
Cell[CellGroupData[{
Cell[268918, 5495, 297, 8, 118, "Input"],
Cell[269218, 5505, 378, 12, 112, "Output"]
}, Open  ]],
Cell[269611, 5520, 1208, 36, 192, "Input"],
Cell[270822, 5558, 1381, 43, 189, "Input"],
Cell[CellGroupData[{
Cell[272228, 5605, 2138, 60, 301, "Input"],
Cell[274369, 5667, 237022, 4054, 453, "Output"],
Cell[511394, 9723, 451, 10, 51, "Message"],
Cell[511848, 9735, 468, 10, 51, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[512353, 9750, 2037, 53, 247, "Input"],
Cell[514393, 9805, 66793, 1218, 489, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[581223, 11028, 1988, 52, 339, "Input"],
Cell[583214, 11082, 52597, 988, 730, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[635848, 12075, 1927, 50, 352, "Input"],
Cell[637778, 12127, 36262, 682, 733, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[674077, 12814, 343, 8, 96, "Input"],
Cell[674423, 12824, 5994, 181, 757, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[680454, 13010, 582, 13, 168, "Input"],
Cell[681039, 13025, 583, 12, 76, "Message"],
Cell[681625, 13039, 351, 8, 96, "Output"],
Cell[681979, 13049, 183, 2, 96, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[682211, 13057, 157, 2, 145, "Subsection"],
Cell[CellGroupData[{
Cell[682393, 13063, 2196, 59, 564, "Input"],
Cell[684592, 13124, 681, 13, 189, "Message"],
Cell[685276, 13139, 232, 6, 96, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[685545, 13150, 2426, 62, 330, "Input"],
Cell[687974, 13214, 683, 13, 189, "Message"],
Cell[688660, 13229, 681, 13, 189, "Message"],
Cell[689344, 13244, 681, 13, 189, "Message"],
Cell[690028, 13259, 535, 11, 76, "Message"],
Cell[690566, 13272, 448, 9, 96, "Output"],
Cell[691017, 13283, 681, 13, 189, "Message"],
Cell[691701, 13298, 683, 13, 189, "Message"],
Cell[692387, 13313, 681, 13, 189, "Message"],
Cell[693071, 13328, 535, 11, 76, "Message"],
Cell[693609, 13341, 523, 10, 132, "Message"],
Cell[694135, 13353, 523, 10, 132, "Message"],
Cell[694661, 13365, 523, 10, 132, "Message"],
Cell[695187, 13377, 536, 11, 76, "Message"],
Cell[695726, 13390, 448, 9, 96, "Output"]
}, Open  ]],
Cell[696189, 13402, 192, 6, 96, "Input"],
Cell[CellGroupData[{
Cell[696406, 13412, 1089, 27, 154, "Input"],
Cell[697498, 13441, 681, 13, 189, "Message"],
Cell[698182, 13456, 681, 13, 189, "Message"],
Cell[698866, 13471, 522, 10, 76, "Message"],
Cell[699391, 13483, 683, 13, 189, "Message"],
Cell[700077, 13498, 535, 11, 76, "Message"],
Cell[700615, 13511, 303, 7, 96, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[700955, 13523, 1389, 32, 154, "Input"],
Cell[702347, 13557, 681, 13, 189, "Message"],
Cell[703031, 13572, 681, 13, 189, "Message"],
Cell[703715, 13587, 683, 13, 189, "Message"],
Cell[704401, 13602, 534, 11, 76, "Message"],
Cell[704938, 13615, 207, 5, 96, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[705182, 13625, 8111, 189, 1471, "Input"],
Cell[713296, 13816, 56696, 1031, 877, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[770029, 14852, 56852, 1034, 877, "Input"],
Cell[826884, 15888, 56967, 1036, 877, "Output"]
}, Open  ]],
Cell[883866, 16927, 207, 4, 123, "Text"],
Cell[884076, 16933, 2716, 78, 492, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[886817, 17015, 3201, 89, 549, "Input",
 CellID->70294289],
Cell[890021, 17106, 86177, 1430, 783, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[976247, 18542, 198, 4, 229, "Subsection"],
Cell[CellGroupData[{
Cell[976470, 18550, 842, 21, 220, "Input"],
Cell[977315, 18573, 9550, 285, 1171, "Output"]
}, Open  ]],
Cell[986880, 18861, 10006, 289, 1323, "Input"],
Cell[996889, 19152, 5152, 143, 1149, "Input"],
Cell[CellGroupData[{
Cell[1002066, 19299, 297, 8, 177, "Input"],
Cell[1002366, 19309, 397, 12, 168, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1002800, 19326, 184, 4, 96, "Input"],
Cell[1002987, 19332, 209, 5, 145, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1003233, 19342, 1947, 49, 324, "Input"],
Cell[1005183, 19393, 20896, 430, 702, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1026116, 19828, 2037, 52, 339, "Input"],
Cell[1028156, 19882, 24531, 506, 702, "Output"]
}, Open  ]],
Cell[1052702, 20391, 1286, 38, 288, "Input"],
Cell[CellGroupData[{
Cell[1054013, 20433, 2270, 61, 564, "Input"],
Cell[1056286, 20496, 681, 13, 189, "Message"],
Cell[1056970, 20511, 683, 13, 189, "Message"],
Cell[1057656, 20526, 523, 10, 76, "Message"],
Cell[1058182, 20538, 680, 13, 189, "Message"],
Cell[1058865, 20553, 535, 11, 76, "Message"],
Cell[1059403, 20566, 205, 5, 96, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1059645, 20576, 1717, 38, 225, "Input"],
Cell[1061365, 20616, 681, 13, 189, "Message"],
Cell[1062049, 20631, 683, 13, 189, "Message"],
Cell[1062735, 20646, 525, 10, 76, "Message"],
Cell[1063263, 20658, 681, 13, 189, "Message"],
Cell[1063947, 20673, 535, 11, 76, "Message"],
Cell[1064485, 20686, 523, 10, 132, "Message"],
Cell[1065011, 20698, 525, 10, 132, "Message"],
Cell[1065539, 20710, 523, 10, 132, "Message"],
Cell[1066065, 20722, 534, 11, 76, "Message"],
Cell[1066602, 20735, 544, 11, 96, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1067183, 20751, 897, 24, 154, "Input"],
Cell[1068083, 20777, 681, 13, 189, "Message"],
Cell[1068767, 20792, 681, 13, 189, "Message"],
Cell[1069451, 20807, 523, 10, 76, "Message"],
Cell[1069977, 20819, 681, 13, 189, "Message"],
Cell[1070661, 20834, 535, 11, 76, "Message"],
Cell[1071199, 20847, 523, 10, 132, "Message"],
Cell[1071725, 20859, 523, 10, 132, "Message"],
Cell[1072251, 20871, 523, 10, 132, "Message"],
Cell[1072777, 20883, 534, 11, 76, "Message"],
Cell[1073314, 20896, 230, 6, 96, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1073581, 20907, 1250, 32, 225, "Input"],
Cell[1074834, 20941, 681, 13, 189, "Message"],
Cell[1075518, 20956, 683, 13, 189, "Message"],
Cell[1076204, 20971, 681, 13, 189, "Message"],
Cell[1076888, 20986, 535, 11, 76, "Message"],
Cell[1077426, 20999, 526, 10, 76, "Message"],
Cell[1077955, 21011, 373, 8, 96, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1078365, 21024, 6617, 162, 1170, "Input"],
Cell[1084985, 21188, 34853, 665, 780, "Output"],
Cell[1119841, 21855, 41050, 792, 729, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1160928, 22652, 2032, 50, 324, "Input"],
Cell[1162963, 22704, 101875, 1824, 712, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1264875, 24533, 3322, 91, 604, "Input",
 CellID->54126742],
Cell[1268200, 24626, 107264, 1781, 783, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1375501, 26412, 914, 28, 96, "Input"],
Cell[1376418, 26442, 843, 27, 145, "Output"]
}, Open  ]]
}, Open  ]],
Cell[1377288, 26473, 888, 20, 319, "Subsection"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
