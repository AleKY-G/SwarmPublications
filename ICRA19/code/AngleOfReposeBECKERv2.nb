(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    590412,      11875]
NotebookOptionsPosition[    584993,      11771]
NotebookOutlinePosition[    585353,      11787]
CellTagsIndexPosition[    585310,      11784]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 "Angle of Repose\n",
 StyleBox["Shiva Shahrokhi and Aaron T. Becker", "Subsubsection"],
 "\n",
 StyleBox["when granular media is dropped in a pile, it forms a cone.  The \
maximum slope of the cone depends on the material used, but is very \
repeatable (due to CLT) and is called the angle of repose.  \nRobot swarms, \
such as the Kilobot, also have an angle of repose.\n\n", "Text"],
 ButtonBox["https://en.wikipedia.org/wiki/Angle_of_repose",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://en.wikipedia.org/wiki/Angle_of_repose"], None},
  ButtonNote->"https://en.wikipedia.org/wiki/Angle_of_repose"],
 StyleBox["\nThe ", "Text"],
 StyleBox["angle of repose", "Text",
  FontSlant->"Italic"],
 StyleBox[", or critical angle of repose,[1] of a granular material is the \
steepest angle of descent or dip relative to the horizontal plane to which a \
material can be piled without slumping. At this angle, the material on the \
slope face is on the verge of sliding. The angle of repose can range from 0\
\[Degree] to 90\[Degree]. ", "Text"]
}], "Subchapter",
 CellChangeTimes->{{3.683824312938307*^9, 3.6838243915394907`*^9}, {
   3.683824998055793*^9, 3.683825027831605*^9}, {3.683903155498979*^9, 
   3.6839031755126743`*^9}, {3.6876009940574493`*^9, 3.68760102409772*^9}, 
   3.745222841904168*^9},ExpressionUUID->"2307a7fc-9fdb-49e5-83a4-\
ae087b36a4cc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.708348694590982*^9, 3.708348695566518*^9}, 
   3.745222990495388*^9},ExpressionUUID->"609b34b0-4524-4214-9ab2-\
3cd554013e44"],

Cell[CellGroupData[{

Cell["A manipulate environment for angle of repose", "Section",
 CellChangeTimes->{{3.7452229246342487`*^9, 
  3.745222936380788*^9}},ExpressionUUID->"b5edb8c3-732f-4962-8a73-\
21bb9853d040"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"l", " ", "=", " ", "1"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"width", " ", "of", " ", "bar", " ", "holding", " ", "material"}],
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "a", ",", "b", ",", "p", ",", "c", ",", "lside", ",", "h", ",", "d", 
         ",", "Area"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Graphics", "[", " ", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"a", "=", " ", 
            RowBox[{
             RowBox[{"l", "/", "2"}], "*", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"b", " ", "=", " ", 
            RowBox[{
             RowBox[{"l", "/", "2"}], "*", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Alpha]", "]"}], ",", 
               RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "}"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"c", " ", "=", " ", 
            RowBox[{
             RowBox[{"l", "/", "2"}], "*", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
           
           RowBox[{"p", " ", "=", "  ", 
            RowBox[{
             RowBox[{"l", "/", "10"}], "*", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
               RowBox[{"-", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "}"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"h", " ", "=", " ", 
            RowBox[{"l", "/", "2"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"d", " ", "=", " ", 
            RowBox[{"l", "/", "2"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", "White"}], ",", 
          RowBox[{"Rectangle", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "l"}], ",", 
              RowBox[{"-", "l"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"l", ",", "2"}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", "Pink", ",", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Rotate", "[", 
               RowBox[{
                RowBox[{"Rectangle", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "l"}], "/", "2"}], ",", 
                    RowBox[{"-", ".1"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"l", "/", "2"}], ",", "0"}], "}"}]}], "]"}], ",", 
                
                RowBox[{
                 RowBox[{"-", "\[Theta]"}], " ", 
                 RowBox[{"\[Pi]", "/", "180"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], "]"}], "}"}], "]"}], ","}],
            "*)"}], "\[IndentingNewLine]", 
          RowBox[{"Polygon", "[", 
           RowBox[{"{", 
            RowBox[{"a", ",", 
             RowBox[{"a", "+", "p"}], ",", 
             RowBox[{
              RowBox[{"-", "a"}], "+", "p"}], ",", 
             RowBox[{"-", "a"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "draw", " ", "piles", " ", "of", " ", "stuff", " ", "on", " ", 
            "ground"}], "*)"}], "\[IndentingNewLine]", "Brown", ",", 
          RowBox[{"Polygon", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "l"}], "/", "2"}], 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
                RowBox[{"h", " ", 
                 RowBox[{"Cos", "[", "\[Alpha]", "]"}]}]}], ",", 
               RowBox[{
                RowBox[{"-", "d"}], "-", "h"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"-", "l"}], "/", "2"}], 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
               RowBox[{
                RowBox[{"h", " ", 
                 RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", "h", "-", 
                "d"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "l"}], "/", "2"}], 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
                RowBox[{"h", " ", 
                 RowBox[{"Cos", "[", "\[Alpha]", "]"}]}]}], ",", 
               RowBox[{
                RowBox[{"-", "h"}], "-", "d"}]}], "}"}]}], "}"}], "]"}], ",", 
          "\[IndentingNewLine]", "Brown", ",", 
          RowBox[{"Polygon", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"l", "/", "2"}], 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
                RowBox[{"h", " ", 
                 RowBox[{"Cos", "[", "\[Alpha]", "]"}]}]}], ",", 
               RowBox[{
                RowBox[{"-", "d"}], "-", "h"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"l", "/", "2"}], 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
               RowBox[{
                RowBox[{"h", " ", 
                 RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", "h", "-", 
                "d"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"l", "/", "2"}], 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
                RowBox[{"h", " ", 
                 RowBox[{"Cos", "[", "\[Alpha]", "]"}]}]}], ",", 
               RowBox[{
                RowBox[{"-", "h"}], "-", "d"}]}], "}"}]}], "}"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"granular", " ", "media"}], "*)"}], "\[IndentingNewLine]", 
          
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"\[Alpha]", ">", 
             RowBox[{"Abs", "[", "\[Theta]", "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"lside", "=", 
               FractionBox[
                RowBox[{"l", " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "+", "\[Alpha]"}], "]"}]}], 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Pi]", "-", 
                  RowBox[{"2", "\[Alpha]"}]}], "]"}]]}], ";", 
              RowBox[{"Polygon", "[", 
               RowBox[{"{", 
                RowBox[{"a", ",", 
                 RowBox[{
                  RowBox[{"lside", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Alpha]", "]"}], ",", 
                    RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "}"}]}], "-", 
                  "a"}], ",", 
                 RowBox[{"-", "a"}]}], "}"}], "]"}]}], "}"}], ",", 
            RowBox[{
             RowBox[{"lside", "=", "0"}], ";"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"Black", ",", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"N", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"l", "/", "2"}], 
                   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
                  RowBox[{"h", " ", 
                   RowBox[{"Cos", "[", "\[Alpha]", "]"}]}]}], ",", 
                 RowBox[{
                  RowBox[{"-", "h"}], "-", "d"}]}], "}"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ","}], "*)"}], 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"draw", " ", "angle", " ", "of", " ", "repose"}], "*)"}], 
          "\[IndentingNewLine]", "Black", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "a"}], "+", 
              RowBox[{"c", "/", "2"}]}], ",", 
             RowBox[{"-", "a"}], ",", 
             RowBox[{
              RowBox[{"-", "a"}], "+", " ", 
              RowBox[{
               RowBox[{"l", "/", "4"}], "*", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Alpha]", "]"}], ",", 
                 RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "}"}]}]}]}], "}"}], 
           "]"}], ",", "\[IndentingNewLine]", "Black", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"a", "-", 
              RowBox[{"c", "/", "2"}]}], ",", "a", ",", 
             RowBox[{"a", "+", " ", 
              RowBox[{
               RowBox[{"l", "/", "4"}], "*", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], ",", 
                 RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "}"}]}]}]}], "}"}], 
           "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Circle", "[", 
           RowBox[{
            RowBox[{"-", "a"}], ",", 
            RowBox[{"l", "/", "6"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "\[Alpha]"}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Circle", "[", 
           RowBox[{"a", ",", 
            RowBox[{"l", "/", "6"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Pi]", ",", 
              RowBox[{"\[Pi]", "-", "\[Alpha]"}]}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "measure", " ", "weight", " ", "of", " ", "granular", " ", "media",
             "  ", 
            RowBox[{"(", 
             RowBox[{
             "proportional", " ", "to", " ", "area", " ", "of", " ", 
              "triangle"}], ")"}]}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Area", " ", "=", " ", 
            RowBox[{
             RowBox[{"1", "/", "2"}], " ", "lside", " ", "l", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Alpha]", "-", "\[Theta]"}], "]"}]}]}], ";", 
           "\[IndentingNewLine]", "Black"}], ",", 
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"StringForm", "[", 
             RowBox[{"\"\<Area = ``\>\"", ",", 
              RowBox[{"N", "[", 
               RowBox[{"Round", "[", 
                RowBox[{"Area", ",", "0.01"}], "]"}], "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{"-", "1"}], "/", "2"}]}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
           "measure", " ", "torque", " ", "of", " ", "granular", " ", 
            "media"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"draw", " ", "a", " ", "scale"}], "*)"}], 
          "\[IndentingNewLine]", "Blue", ",", 
          RowBox[{"PointSize", "[", "Large", "]"}], ",", 
          RowBox[{"Point", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], "]"}]}], "\[IndentingNewLine]", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}], "]"}]}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Alpha]", ",", 
         RowBox[{"\[Pi]", "/", "4"}], ",", "\"\<Angle of Repose\>\""}], "}"}],
        " ", ",", "0", ",", 
       RowBox[{"5", 
        RowBox[{"\[Pi]", "/", "12"}]}], ",", 
       RowBox[{"\[Pi]", "/", "36"}], ",", 
       RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "0"}], "}"}], " ", ",", 
       RowBox[{
        RowBox[{"-", " ", "5"}], 
        RowBox[{"\[Pi]", "/", "12"}]}], ",", " ", 
       RowBox[{"5", 
        RowBox[{"\[Pi]", "/", "12"}]}], ",", 
       RowBox[{"\[Pi]", "/", "36"}], ",", 
       RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "add", " ", "setter", " ", "bar", " ", "so", " ", "you", " ", "can", 
       " ", "select", " ", "the", " ", "material", " ", "to", " ", 
       RowBox[{"use", ".", "  ", "Should"}], " ", "change", " ", "the", " ", 
       "angle", " ", "or", " ", "repose", " ", "and", " ", "the", " ", 
       "color", " ", "of", " ", "the", " ", "granular", " ", "media"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"material", ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<sand\>\"", ",", "\"\<salt\>\"", ",", "\"\<corn\>\"", ",", 
         "\"\<wheat\>\""}], "}"}]}], "}"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQAGIQ3fJILSms6LWj2vE7GSA6KVsnF0SfipFZDaJFHFdu
AtGW3Mu3gegDBl6PaoD0rxOOz0H0tO72ryDa6+xfMF3MODd/LkhfJUc7iG76
nNsNoo8Z7loGohdO7F4FosX2n10NojV2yW0F0T2NtQdB9LZKlmMgumi5zgkQ
/WTa+kebgXTLOobfIPpSWMB/EM11N4NxC5DuOMvJBqJdxLpUQTTLpFZtEJ0y
d4MhiLaW1DUD0ULni61B9L3yCAcQHfS22xlEzzh02gNEvz0xORhEh+jtjwXR
iz6w5oPokn0JxSA6YX5uCYj+5PewEkQrde/rA9ENYfOyTgBpg7D0fBB9k3NF
MYhOSm5qBNHHqlb8OA2yR/LNbxB9gamRrazyteP3U+vANAC58Mz/
  
  "],ExpressionUUID->"74c981ce-af32-427d-bbd4-8e16accd0c37"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`material$$ = 
    "sand", $CellContext`\[Alpha]$$ = Rational[2, 9] 
    Pi, $CellContext`\[Theta]$$ = Rational[5, 36] Pi, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Alpha]$$], Rational[1, 4] Pi, "Angle of Repose"}, 
      0, Rational[5, 12] Pi, Rational[1, 36] Pi}, {{
       Hold[$CellContext`\[Theta]$$], 0}, Rational[-5, 12] Pi, 
      Rational[5, 12] Pi, Rational[1, 36] Pi}, {
      Hold[$CellContext`material$$], {"sand", "salt", "corn", "wheat"}}}, 
    Typeset`size$$ = {293., {214., 218.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`\[Alpha]$2099$$ = 0, $CellContext`\[Theta]$2104$$ = 
    0, $CellContext`material$2105$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`material$$ = 
        "sand", $CellContext`\[Alpha]$$ = 
        Rational[1, 4] Pi, $CellContext`\[Theta]$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Alpha]$$, $CellContext`\[Alpha]$2099$$, 0], 
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$2104$$, 0], 
        Hold[$CellContext`material$$, $CellContext`material$2105$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`a$, $CellContext`b$, $CellContext`p$, \
$CellContext`c$, $CellContext`lside$, $CellContext`h$, $CellContext`d$, 
         Area$}, 
        Graphics[{$CellContext`a$ = ($CellContext`l/2) {
              Cos[$CellContext`\[Theta]$$], 
              
              Sin[$CellContext`\[Theta]$$]}; $CellContext`b$ = \
($CellContext`l/2) {
              Cos[$CellContext`\[Alpha]$$], 
              
              Sin[$CellContext`\[Alpha]$$]}; $CellContext`c$ = \
($CellContext`l/2) {1, 0}; $CellContext`p$ = ($CellContext`l/10) {
              Sin[$CellContext`\[Theta]$$], -
              Cos[$CellContext`\[Theta]$$]}; $CellContext`h$ = $CellContext`l/
            2; $CellContext`d$ = $CellContext`l/2; White, 
          Rectangle[{-$CellContext`l, -$CellContext`l}, {$CellContext`l, 2}], 
          Pink, 
          
          Polygon[{$CellContext`a$, $CellContext`a$ + $CellContext`p$, \
-$CellContext`a$ + $CellContext`p$, -$CellContext`a$}], Brown, 
          
          Polygon[{{((-$CellContext`l)/2) 
              Cos[$CellContext`\[Theta]$$] - $CellContext`h$ 
             Cos[$CellContext`\[Alpha]$$], -$CellContext`d$ - \
$CellContext`h$}, {((-$CellContext`l)/2) 
             Cos[$CellContext`\[Theta]$$], $CellContext`h$ 
              Sin[$CellContext`\[Alpha]$$] - $CellContext`h$ - \
$CellContext`d$}, {((-$CellContext`l)/2) 
              Cos[$CellContext`\[Theta]$$] + $CellContext`h$ 
              Cos[$CellContext`\[Alpha]$$], -$CellContext`h$ - \
$CellContext`d$}}], Brown, 
          
          Polygon[{{($CellContext`l/2) 
              Cos[$CellContext`\[Theta]$$] - $CellContext`h$ 
             Cos[$CellContext`\[Alpha]$$], -$CellContext`d$ - \
$CellContext`h$}, {($CellContext`l/2) 
             Cos[$CellContext`\[Theta]$$], $CellContext`h$ 
              Sin[$CellContext`\[Alpha]$$] - $CellContext`h$ - \
$CellContext`d$}, {($CellContext`l/2) 
              Cos[$CellContext`\[Theta]$$] + $CellContext`h$ 
              Cos[$CellContext`\[Alpha]$$], -$CellContext`h$ - \
$CellContext`d$}}], 
          
          If[$CellContext`\[Alpha]$$ > 
           Abs[$CellContext`\[Theta]$$], {$CellContext`lside$ = \
$CellContext`l Sin[$CellContext`\[Theta]$$ + $CellContext`\[Alpha]$$]/Sin[
              Pi - 2 $CellContext`\[Alpha]$$]; 
            Polygon[{$CellContext`a$, $CellContext`lside$ {
                  Cos[$CellContext`\[Alpha]$$], 
                  
                  Sin[$CellContext`\[Alpha]$$]} - $CellContext`a$, \
-$CellContext`a$}]}, $CellContext`lside$ = 0; Null], Black, 
          Line[{-$CellContext`a$ + $CellContext`c$/
             2, -$CellContext`a$, -$CellContext`a$ + ($CellContext`l/4) {
               Cos[$CellContext`\[Alpha]$$], 
               Sin[$CellContext`\[Alpha]$$]}}], Black, 
          
          Line[{$CellContext`a$ - $CellContext`c$/
            2, $CellContext`a$, $CellContext`a$ + ($CellContext`l/
              4) {-Cos[$CellContext`\[Alpha]$$], 
               Sin[$CellContext`\[Alpha]$$]}}], 
          
          Circle[-$CellContext`a$, $CellContext`l/6, {
           0, $CellContext`\[Alpha]$$}], 
          
          Circle[$CellContext`a$, $CellContext`l/6, {
           Pi, Pi - $CellContext`\[Alpha]$$}], 
          Area$ = (1/2) $CellContext`lside$ $CellContext`l 
            Sin[$CellContext`\[Alpha]$$ - $CellContext`\[Theta]$$]; Black, 
          Text[
           StringForm["Area = ``", 
            N[
             Round[Area$, 0.01]]], {0, (-1)/2}], Blue, 
          PointSize[Large], 
          Point[{0, 0}]}]], 
      "Specifications" :> {{{$CellContext`\[Alpha]$$, Rational[1, 4] Pi, 
          "Angle of Repose"}, 0, Rational[5, 12] Pi, Rational[1, 36] Pi, 
         Appearance -> "Labeled"}, {{$CellContext`\[Theta]$$, 0}, 
         Rational[-5, 12] Pi, Rational[5, 12] Pi, Rational[1, 36] Pi, 
         Appearance -> "Labeled"}, {$CellContext`material$$, {
         "sand", "salt", "corn", "wheat"}}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{351., {286., 292.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.684058102301015*^9, 3.684058124582138*^9}, {
   3.6840652353852167`*^9, 3.684065247781168*^9}, 3.687559180417255*^9, 
   3.6875604448645477`*^9, 3.687561358371175*^9, 3.70834508848234*^9, 
   3.745222864364884*^9},ExpressionUUID->"0c411818-54d7-4ef5-b6e2-\
0cbf529f5930"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Compute the Torque about the center of the object (manipulate trials)\
\>", "Section",
 CellChangeTimes->{{3.684065388893179*^9, 3.684065402042365*^9}, {
  3.745222976174119*^9, 
  3.74522298042558*^9}},ExpressionUUID->"ef761106-4ac7-4f7e-8a7f-\
f1214b54c52f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"heightBottom", "[", 
    RowBox[{"x_", ",", "\[Theta]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Tan", "[", "\[Theta]", "]"}], "x"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"heightTop", "[", 
     RowBox[{"x_", ",", "\[Alpha]_", ",", "l_", ",", "\[Theta]_"}], "]"}], 
    " ", ":=", " ", 
    RowBox[{"Min", "[", "  ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Tan", "[", "\[Alpha]", "]"}], "x"}], "+", 
       RowBox[{
        RowBox[{"l", "/", "2"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], 
           RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ")"}]}]}], ",", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "x"}], "+", 
       RowBox[{
        RowBox[{"l", "/", "2"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], 
           RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "+", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ")"}]}]}]}], "]"}]}], 
   ";"}], " ", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Torque", "[", 
     RowBox[{"\[Theta]_", ",", "\[Alpha]_", ",", "l_"}], "]"}], " ", ":=", 
    " ", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "l"}], "/", "2"}], 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
      RowBox[{
       RowBox[{"l", "/", "2"}], 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}]], 
     RowBox[{"x", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"heightTop", "[", 
         RowBox[{"x", ",", "\[Alpha]", ",", "l", ",", "\[Theta]"}], "]"}], 
        "-", 
        RowBox[{"heightBottom", "[", 
         RowBox[{"x", ",", "\[Theta]"}], "]"}]}], ")"}], 
      RowBox[{"\[DifferentialD]", "x"}]}]}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Torque1", "[", 
   RowBox[{"\[Theta]_", ",", "\[Alpha]_", ",", "l_"}], "]"}], " ", ":=", " ", 
  
  RowBox[{
   SubsuperscriptBox["\[Integral]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "l"}], "/", "2"}], 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
    RowBox[{
     RowBox[{"l", "/", "2"}], 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}]], 
   RowBox[{"x", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"heightTop", "[", 
       RowBox[{"x", ",", "\[Alpha]", ",", "l", ",", "\[Theta]"}], "]"}], "-", 
      
      RowBox[{"heightBottom", "[", 
       RowBox[{"x", ",", "\[Theta]"}], "]"}]}], ")"}], 
    RowBox[{"\[DifferentialD]", "x"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.684065277136952*^9, 3.684065369793248*^9}, {
   3.68755924043531*^9, 3.6875592471882143`*^9}, {3.687559431042736*^9, 
   3.6875594434384336`*^9}, {3.687559586292943*^9, 3.68755966057832*^9}, {
   3.6875597703378077`*^9, 3.687559826999588*^9}, {3.6875598794995193`*^9, 
   3.6875599100477257`*^9}, {3.6875603585421143`*^9, 3.687560365901042*^9}, 
   3.6875609980810966`*^9},ExpressionUUID->"b801c6f6-abc8-4a91-9d77-\
580d15169109"],

Cell["\<\
Angle of repose for  a list of materials :
  Ashes 40
Asphalt 30
Bark\
\>", "Text",
 CellChangeTimes->{{3.684017584732729*^9, 3.684017597044734*^9}, {
  3.687608590598846*^9, 
  3.687608601081749*^9}},ExpressionUUID->"e9fe129d-aacf-4124-84d6-\
0cc2c5f50a96"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"x", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"heightTop", "[", 
      RowBox[{"x", ",", "\[Alpha]", ",", "l", ",", "\[Theta]"}], "]"}], "-", 
     RowBox[{"heightBottom", "[", 
      RowBox[{"x", ",", "\[Theta]"}], "]"}]}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6875599259413557`*^9, 3.687559930477131*^9}, {
  3.687560343306526*^9, 
  3.687560345970402*^9}},ExpressionUUID->"3eef647a-df59-4e9e-83fa-\
dcd12cff8022"],

Cell[BoxData[
 RowBox[{"x", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Min", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", "l", " ", 
        RowBox[{"Sec", "[", "\[Alpha]", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Alpha]", "+", "\[Theta]"}], "]"}]}], "-", 
       RowBox[{"x", " ", 
        RowBox[{"Tan", "[", "\[Alpha]", "]"}]}]}], ",", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", "l", " ", 
        RowBox[{"Sec", "[", "\[Alpha]", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Alpha]", "-", "\[Theta]"}], "]"}]}], "+", 
       RowBox[{"x", " ", 
        RowBox[{"Tan", "[", "\[Alpha]", "]"}]}]}]}], "]"}], "-", 
    RowBox[{"x", " ", 
     RowBox[{"Tan", "[", "\[Theta]", "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.687560346742908*^9, 
  3.711227796003516*^9},ExpressionUUID->"bff1c1f4-c1ac-4061-a9d7-\
123ad1d9da4d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], 
   RowBox[{"Min", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Sec", "[", "\[Alpha]", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "x", " ", 
         RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "+", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Alpha]", "+", "\[Theta]"}], "]"}]}], ")"}]}], ",", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "x"}], "+", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}], " ", 
        RowBox[{"Tan", "[", "\[Alpha]", "]"}]}]}], ")"}]}], "]"}]}], "-", 
  RowBox[{"x", " ", 
   RowBox[{"Tan", "[", "\[Theta]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.687560328780727*^9, 
  3.6875603356318283`*^9}},ExpressionUUID->"41af19b3-a8a9-4926-b956-\
6e7608d3aa71"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"Min", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Sec", "[", "\[Alpha]", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "x", " ", 
         RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "+", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Alpha]", "+", "\[Theta]"}], "]"}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "x"}], "+", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}], " ", 
       RowBox[{"Tan", "[", "\[Alpha]", "]"}]}]}]}], "]"}]}], "-", 
  RowBox[{"x", " ", 
   RowBox[{"Tan", "[", "\[Theta]", "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.6875603362239857`*^9},ExpressionUUID->"8076e48f-a9d7-4d50-81a6-\
997572166d75"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"heightTop", "[", 
        RowBox[{"x", ",", "\[Alpha]", ",", "1", ",", "\[Theta]"}], "]"}], ",", 
       RowBox[{"heightBottom", "[", 
        RowBox[{"x", ",", "\[Theta]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", 
       RowBox[{"\[Pi]", "/", "4"}], ",", "\"\<Angle of Repose\>\""}], "}"}], 
     " ", ",", "0", ",", 
     RowBox[{"5", 
      RowBox[{"\[Pi]", "/", "12"}]}], ",", 
     RowBox[{"\[Pi]", "/", "36"}], ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0"}], "}"}], " ", ",", 
     RowBox[{
      RowBox[{"-", " ", "5"}], 
      RowBox[{"\[Pi]", "/", "12"}]}], ",", " ", 
     RowBox[{"5", 
      RowBox[{"\[Pi]", "/", "12"}]}], ",", 
     RowBox[{"\[Pi]", "/", "36"}], ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.687560148760344*^9, 3.6875602444980593`*^9}, {
  3.6875602812708406`*^9, 
  3.687560283638091*^9}},ExpressionUUID->"9023d952-b1d2-4846-9be5-\
7b017149a011"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Alpha]$$ = Rational[1, 6] 
    Pi, $CellContext`\[Theta]$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Alpha]$$], Rational[1, 4] Pi, "Angle of Repose"}, 
      0, Rational[5, 12] Pi, Rational[1, 36] Pi}, {{
       Hold[$CellContext`\[Theta]$$], 0}, Rational[-5, 12] Pi, 
      Rational[5, 12] Pi, Rational[1, 36] Pi}}, Typeset`size$$ = {
    360., {109., 113.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Alpha]$3989$$ = 
    0, $CellContext`\[Theta]$3990$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`\[Alpha]$$ = 
        Rational[1, 4] Pi, $CellContext`\[Theta]$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Alpha]$$, $CellContext`\[Alpha]$3989$$, 0], 
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$3990$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{
         $CellContext`heightTop[$CellContext`x, $CellContext`\[Alpha]$$, 
          1, $CellContext`\[Theta]$$], 
         $CellContext`heightBottom[$CellContext`x, $CellContext`\[Theta]$$]}, \
{$CellContext`x, -1, 1}], 
      "Specifications" :> {{{$CellContext`\[Alpha]$$, Rational[1, 4] Pi, 
          "Angle of Repose"}, 0, Rational[5, 12] Pi, Rational[1, 36] Pi, 
         Appearance -> "Labeled"}, {{$CellContext`\[Theta]$$, 0}, 
         Rational[-5, 12] Pi, Rational[5, 12] Pi, Rational[1, 36] Pi, 
         Appearance -> "Labeled"}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{405., {168., 174.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.6875602256496468`*^9, 3.687560245260846*^9}, 
   3.687560294704483*^9, 
   3.7452229592717743`*^9},ExpressionUUID->"63b65a76-30e6-498a-beb2-\
66f7d77845ae"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "l", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", " ", 
   RowBox[{
    RowBox[{"l", "/", "2"}], "*", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lside", "=", 
   FractionBox[
    RowBox[{"l", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Theta]", "+", "\[Alpha]"}], "]"}]}], 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Pi]", "-", 
      RowBox[{"2", "\[Alpha]"}]}], "]"}]]}], ";", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"lside", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Alpha]", "]"}], ",", 
       RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "}"}]}], "-", "a"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xMid", " ", "=", " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", "\[Alpha]", "]"}], 
      FractionBox[
       RowBox[{"l", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "+", "\[Alpha]"}], "]"}]}], 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Pi]", "-", 
         RowBox[{"2", "\[Alpha]"}]}], "]"}]]}], "-", 
     RowBox[{
      RowBox[{"l", "/", "2"}], 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "*)"}], " ", 
   FractionBox[
    RowBox[{"l", " ", 
     RowBox[{"Cot", "[", "\[Alpha]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "2"]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"FullSimplify", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "\[Alpha]", "]"}], 
       FractionBox[
        RowBox[{"l", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "+", "\[Alpha]"}], "]"}]}], 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Pi]", "-", 
          RowBox[{"2", "\[Alpha]"}]}], "]"}]]}], "-", 
      RowBox[{
       RowBox[{"l", "/", "2"}], 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "]"}], " ", "=", " ", 
    FractionBox[
     RowBox[{"l", " ", 
      RowBox[{"Cot", "[", "\[Alpha]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "2"]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.687560628340609*^9, 3.687560642952182*^9}, {
  3.68756071298022*^9, 3.687560733959805*^9}, {3.687560773164631*^9, 
  3.687560782352359*^9}, {3.687561274145791*^9, 
  3.6875613291123867`*^9}},ExpressionUUID->"d38bfbcf-ac17-470a-ae76-\
e2b3fcf6247c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", "l", " ", 
    RowBox[{"Cot", "[", "\[Alpha]", "]"}], " ", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", "l", " ", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
    RowBox[{"Tan", "[", "\[Alpha]", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.687561309593069*^9, 
  3.6875613299733152`*^9}},ExpressionUUID->"9a1c444d-a79b-4cdb-ab46-\
9448ee39ab15"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"heightTop", "[", 
     RowBox[{"x_", ",", "\[Alpha]_", ",", "l_", ",", "\[Theta]_"}], "]"}], 
    " ", ":=", " ", 
    RowBox[{"Min", "[", "  ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Tan", "[", "\[Alpha]", "]"}], "x"}], "+", 
       RowBox[{
        RowBox[{"l", "/", "2"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], 
           RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ")"}]}]}], ",", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "x"}], "+", 
       RowBox[{
        RowBox[{"l", "/", "2"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], 
           RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "+", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ")"}]}]}]}], "]"}]}], 
   ";"}], " "}]], "Input",ExpressionUUID->"97326567-8c7d-4379-81f8-\
2232e3f7b090"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"144", "/", "6"}]], "Input",
 CellChangeTimes->{{3.745245532057111*^9, 
  3.7452455356459837`*^9}},ExpressionUUID->"28999075-313f-4b40-aa6b-\
7fd0f739b403"],

Cell[BoxData["24"], "Output",
 CellChangeTimes->{
  3.745245537993723*^9},ExpressionUUID->"42b6624e-58b9-43cf-8c9c-\
c57ec3918d1d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Plot force and torque (figures for paper)\n",
 Cell[BoxData[
  GraphicsBox[{},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"\[Theta] (\[Degree])\"", TraditionalForm], 
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \\(rep\\)]\\) (\[Degree])\"", 
      TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Epilog->{
     GrayLevel[0], 
     LineBox[
      NCache[{{
        Rational[55, 2] - 10 Cos[Rational[1, 8] Pi], 60 - 10 
         Sin[Rational[1, 8] Pi]}, {
        Rational[45, 2] - 10 Cos[Rational[1, 8] Pi], 60 - 10 
         Sin[Rational[1, 8] Pi]}, {
        25 - 10 Cos[Rational[1, 8] Pi], 60 + Rational[5, 2] 3^Rational[1, 2] - 
         10 Sin[Rational[1, 8] Pi]}}, {{18.261204674887132`, 
       56.1731656763491}, {13.261204674887132`, 56.1731656763491}, {
       15.761204674887132`, 60.5032926952713}}]], 
     GrayLevel[0], 
     LineBox[
      NCache[{{
        Rational[35, 2] + 10 Cos[Rational[1, 8] Pi], 60 + 
         10 Sin[Rational[1, 8] Pi]}, {
        Rational[45, 2] + 10 Cos[Rational[1, 8] Pi], 60 + 
         10 Sin[Rational[1, 8] Pi]}, {
        20 + 10 Cos[Rational[1, 8] Pi], 60 + Rational[5, 2] 3^Rational[1, 2] + 
         10 Sin[Rational[1, 8] Pi]}}, {{26.738795325112868`, 
       63.8268343236509}, {31.738795325112868`, 63.8268343236509}, {
       29.238795325112868`, 68.1569613425731}}]], 
     CircleBox[
      NCache[{
       Rational[45, 2] - 10 Cos[Rational[1, 8] Pi], 60 - 10 
        Sin[Rational[1, 8] Pi]}, {13.261204674887132`, 56.1731656763491}], 
      NCache[
       Rational[10, 3], 3.3333333333333335`], 
      NCache[{0, Rational[1, 3] Pi}, {0, 1.0471975511965976`}]], 
     CircleBox[
      NCache[{
       Rational[45, 2] + 10 Cos[Rational[1, 8] Pi], 60 + 
        10 Sin[Rational[1, 8] Pi]}, {31.738795325112868`, 63.8268343236509}], 
      
      NCache[
       Rational[10, 3], 3.3333333333333335`], 
      NCache[{Pi, Rational[2, 3] Pi}, {3.141592653589793, 
       2.0943951023931953`}]], 
     InsetBox[
      FormBox["\"\[Alpha]\"", TraditionalForm], {18.9, 58.6}], 
     InsetBox[
      FormBox["\"\[Alpha]\"", TraditionalForm], {26., 66}], 
     GrayLevel[0], 
     LineBox[
      NCache[{{50, 60}, {45, 60}, {
        45 + 5 2^Rational[-1, 2], 60 + 5 2^Rational[-1, 2]}}, {{50, 60}, {45, 
        60}, {48.53553390593274, 63.53553390593274}}]], 
     CircleBox[{45, 60}, 
      NCache[
       Rational[10, 3], 3.3333333333333335`], 
      NCache[{0, Rational[1, 4] Pi}, {0, 0.7853981633974483}]], 
     InsetBox[
      FormBox["\"\[Theta]\"", TraditionalForm], {51, 62}]},
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
   PlotRange->{{-70, 70}, {-10, 80}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Prolog->{{{{
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[
         NCache[{{-45 + 5 2^Rational[1, 2], 15 - 5 2^Rational[1, 2]}, {-45 + 
            4 2^Rational[1, 2], 15 - 6 2^Rational[1, 2]}, {-45 - 6 
            2^Rational[1, 2], 15 + 4 2^Rational[1, 2]}, {-45 - 5 
            2^Rational[1, 2], 15 + 
            5 2^Rational[1, 2]}}, {{-37.928932188134524`, 
          7.9289321881345245`}, {-39.34314575050762, 
          6.514718625761429}, {-53.48528137423857, 
          20.65685424949238}, {-52.071067811865476`, 22.071067811865476`}}]], 
        
        EdgeForm[{
          RGBColor[0.368417, 0.506779, 0.709798]}], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        LineBox[
         NCache[{{-45 + 5 2^Rational[1, 2], 15 - 5 2^Rational[1, 2]}, {-45 - 
            5 2^Rational[1, 2], 15 + 
            5 2^Rational[1, 2]}}, {{-37.928932188134524`, 
          7.9289321881345245`}, {-52.071067811865476`, 
          22.071067811865476`}}]], 
        Thickness[Tiny], 
        GrayLevel[0.5], 
        LineBox[{{-45, 15}, {-45, 15}}]}, {
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{-13.261204674887132`, 
         11.173165676349102`}, {-14.026571539617311`, 
         9.325406611326528}, {-32.50416218984305, 
         16.979075258628328`}, {-31.738795325112868`, 18.8268343236509}}], 
        EdgeForm[{
          RGBColor[0.368417, 0.506779, 0.709798]}], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        LineBox[{{-13.261204674887132`, 
         11.173165676349102`}, {-31.738795325112868`, 18.8268343236509}}], 
        Thickness[Tiny], 
        GrayLevel[0.5], 
        LineBox[{{-22.5, 15}, {-22.5, 15}}]}, {
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{10, 15}, {10, 13}, {-10, 13}, {-10, 15}}], 
        EdgeForm[{
          RGBColor[0.368417, 0.506779, 0.709798]}], 
        RGBColor[0.368417, 0.506779, 0.709798], {
         PolygonBox[
          
          NCache[{{10, 
            15}, {-10 + (5 (-1 + 3^Rational[1, 2])) (1 + 3^Rational[1, 2]), 
             15 + 5 (-1 + 3^Rational[1, 2])^2}, {-10, 15}}, {{10, 
            15}, {-1.7763568394002505`*^-15, 17.679491924311225`}, {-10, 
            15}}]]}, 
        Thickness[Tiny], 
        GrayLevel[0.5], 
        LineBox[
         NCache[{{0, 15}, {0, 15 + 10 (2 - 3^Rational[1, 2])}}, {{0, 15}, {
           0, 17.67949192431123}}]]}, {
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{31.738795325112868`, 18.8268343236509}, {
         32.50416218984305, 16.979075258628328`}, {14.026571539617311`, 
         9.325406611326528}, {13.261204674887132`, 11.173165676349102`}}], 
        EdgeForm[{
          RGBColor[0.368417, 0.506779, 0.709798]}], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        LineBox[{{31.738795325112868`, 18.8268343236509}, {
         13.261204674887132`, 11.173165676349102`}}], 
        Thickness[Tiny], 
        GrayLevel[0.5], 
        LineBox[{{22.5, 15}, {22.5, 15}}]}, {
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[
         NCache[{{45 + 5 2^Rational[1, 2], 15 + 5 2^Rational[1, 2]}, {
           45 + 6 2^Rational[1, 2], 15 + 4 2^Rational[1, 2]}, {
           45 - 4 2^Rational[1, 2], 15 - 6 2^Rational[1, 2]}, {
           45 - 5 2^Rational[1, 2], 15 - 5 2^Rational[1, 2]}}, {{
          52.071067811865476`, 22.071067811865476`}, {53.48528137423857, 
          20.65685424949238}, {39.34314575050762, 6.514718625761429}, {
          37.928932188134524`, 7.9289321881345245`}}]], 
        EdgeForm[{
          RGBColor[0.368417, 0.506779, 0.709798]}], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        LineBox[
         NCache[{{45 + 5 2^Rational[1, 2], 15 + 5 2^Rational[1, 2]}, {
           45 - 5 2^Rational[1, 2], 15 - 5 2^Rational[1, 2]}}, {{
          52.071067811865476`, 22.071067811865476`}, {37.928932188134524`, 
          7.9289321881345245`}}]], 
        Thickness[Tiny], 
        GrayLevel[0.5], 
        LineBox[{{45, 15}, {45, 15}}]}}, {{
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[
         NCache[{{-45 + 5 2^Rational[1, 2], 30 - 5 2^Rational[1, 2]}, {-45 + 
            4 2^Rational[1, 2], 30 - 6 2^Rational[1, 2]}, {-45 - 6 
            2^Rational[1, 2], 30 + 4 2^Rational[1, 2]}, {-45 - 5 
            2^Rational[1, 2], 30 + 
            5 2^Rational[1, 2]}}, {{-37.928932188134524`, 
          22.928932188134524`}, {-39.34314575050762, 
          21.51471862576143}, {-53.48528137423857, 
          35.65685424949238}, {-52.071067811865476`, 37.071067811865476`}}]], 
        
        EdgeForm[{
          RGBColor[0.880722, 0.611041, 0.142051]}], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        LineBox[
         NCache[{{-45 + 5 2^Rational[1, 2], 30 - 5 2^Rational[1, 2]}, {-45 - 
            5 2^Rational[1, 2], 30 + 
            5 2^Rational[1, 2]}}, {{-37.928932188134524`, 
          22.928932188134524`}, {-52.071067811865476`, 
          37.071067811865476`}}]], 
        Thickness[Tiny], 
        GrayLevel[0.5], 
        LineBox[{{-45, 30}, {-45, 30}}]}, {
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{-13.261204674887132`, 
         26.1731656763491}, {-14.026571539617311`, 
         24.325406611326528`}, {-32.50416218984305, 
         31.979075258628328`}, {-31.738795325112868`, 33.8268343236509}}], 
        EdgeForm[{
          RGBColor[0.880722, 0.611041, 0.142051]}], 
        RGBColor[0.880722, 0.611041, 0.142051], {
         PolygonBox[{{-13.261204674887132`, 
          26.1731656763491}, {-29.128271480711838`, 
          35.33402096794177}, {-31.738795325112868`, 33.8268343236509}}]}, 
        Thickness[Tiny], 
        GrayLevel[0.5], 
        LineBox[{{-22.5, 30}, {-22.5, 31.507186644290872`}}]}, {
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{10, 30}, {10, 28}, {-10, 28}, {-10, 30}}], 
        EdgeForm[{
          RGBColor[0.880722, 0.611041, 0.142051]}], 
        RGBColor[0.880722, 0.611041, 0.142051], {
         PolygonBox[
          
          NCache[{{10, 30}, {0, 30 + 10 3^Rational[-1, 2]}, {-10, 30}}, {{10, 
            30}, {0, 35.773502691896255`}, {-10, 30}}]]}, 
        Thickness[Tiny], 
        GrayLevel[0.5], 
        LineBox[
         NCache[{{0, 30}, {0, 30 + 10 3^Rational[-1, 2]}}, {{0, 30}, {
           0, 35.773502691896255`}}]]}, {
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{31.738795325112868`, 33.8268343236509}, {
         32.50416218984305, 31.979075258628328`}, {14.026571539617311`, 
         24.325406611326528`}, {13.261204674887132`, 26.1731656763491}}], 
        EdgeForm[{
          RGBColor[0.880722, 0.611041, 0.142051]}], 
        RGBColor[0.880722, 0.611041, 0.142051], {
         PolygonBox[{{31.738795325112868`, 33.8268343236509}, {
          29.128271480711838`, 35.33402096794177}, {13.261204674887132`, 
          26.1731656763491}}]}, 
        Thickness[Tiny], 
        GrayLevel[0.5], 
        LineBox[{{22.5, 30}, {22.5, 31.507186644290872`}}]}, {
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[
         NCache[{{45 + 5 2^Rational[1, 2], 30 + 5 2^Rational[1, 2]}, {
           45 + 6 2^Rational[1, 2], 30 + 4 2^Rational[1, 2]}, {
           45 - 4 2^Rational[1, 2], 30 - 6 2^Rational[1, 2]}, {
           45 - 5 2^Rational[1, 2], 30 - 5 2^Rational[1, 2]}}, {{
          52.071067811865476`, 37.071067811865476`}, {53.48528137423857, 
          35.65685424949238}, {39.34314575050762, 21.51471862576143}, {
          37.928932188134524`, 22.928932188134524`}}]], 
        EdgeForm[{
          RGBColor[0.880722, 0.611041, 0.142051]}], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        LineBox[
         NCache[{{45 + 5 2^Rational[1, 2], 30 + 5 2^Rational[1, 2]}, {
           45 - 5 2^Rational[1, 2], 30 - 5 2^Rational[1, 2]}}, {{
          52.071067811865476`, 37.071067811865476`}, {37.928932188134524`, 
          22.928932188134524`}}]], 
        Thickness[Tiny], 
        GrayLevel[0.5], 
        LineBox[{{45, 30}, {45, 30}}]}}, {{
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[
         NCache[{{-45 + 5 2^Rational[1, 2], 45 - 5 2^Rational[1, 2]}, {-45 + 
            4 2^Rational[1, 2], 45 - 6 2^Rational[1, 2]}, {-45 - 6 
            2^Rational[1, 2], 45 + 4 2^Rational[1, 2]}, {-45 - 5 
            2^Rational[1, 2], 45 + 
            5 2^Rational[1, 2]}}, {{-37.928932188134524`, 
          37.928932188134524`}, {-39.34314575050762, 
          36.51471862576143}, {-53.48528137423857, 
          50.65685424949238}, {-52.071067811865476`, 52.071067811865476`}}]], 
        
        EdgeForm[{
          RGBColor[0.560181, 0.691569, 0.194885]}], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        LineBox[
         NCache[{{-45 + 5 2^Rational[1, 2], 45 - 5 2^Rational[1, 2]}, {-45 - 
            5 2^Rational[1, 2], 45 + 
            5 2^Rational[1, 2]}}, {{-37.928932188134524`, 
          37.928932188134524`}, {-52.071067811865476`, 
          52.071067811865476`}}]], 
        Thickness[Tiny], 
        GrayLevel[0.5], 
        LineBox[{{-45, 45}, {-45, 45}}]}, {
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{-13.261204674887132`, 
         41.1731656763491}, {-14.026571539617311`, 
         39.32540661132653}, {-32.50416218984305, 
         46.97907525862833}, {-31.738795325112868`, 48.8268343236509}}], 
        EdgeForm[{
          RGBColor[0.560181, 0.691569, 0.194885]}], 
        RGBColor[0.560181, 0.691569, 0.194885], {
         PolygonBox[{{-13.261204674887132`, 
          41.1731656763491}, {-26.3268343236509, 
          54.23879532511287}, {-31.738795325112868`, 48.8268343236509}}]}, 
        Thickness[Tiny], 
        GrayLevel[0.5], 
        LineBox[{{-22.5, 45}, {-22.5, 50.41196100146197}}]}, {
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{10, 45}, {10, 43}, {-10, 43}, {-10, 45}}], 
        EdgeForm[{
          RGBColor[0.560181, 0.691569, 0.194885]}], 
        RGBColor[0.560181, 0.691569, 0.194885], {
         PolygonBox[{{10, 45}, {0, 55}, {-10, 45}}]}, 
        Thickness[Tiny], 
        GrayLevel[0.5], 
        LineBox[{{0, 45}, {0, 55}}]}, {
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{31.738795325112868`, 48.8268343236509}, {
         32.50416218984305, 46.97907525862833}, {14.026571539617311`, 
         39.32540661132653}, {13.261204674887132`, 41.1731656763491}}], 
        EdgeForm[{
          RGBColor[0.560181, 0.691569, 0.194885]}], 
        RGBColor[0.560181, 0.691569, 0.194885], {
         PolygonBox[{{31.738795325112868`, 48.8268343236509}, {
          26.326834323650893`, 54.23879532511286}, {13.261204674887132`, 
          41.1731656763491}}]}, 
        Thickness[Tiny], 
        GrayLevel[0.5], 
        LineBox[{{22.5, 45}, {22.5, 50.41196100146197}}]}, {
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[
         NCache[{{45 + 5 2^Rational[1, 2], 45 + 5 2^Rational[1, 2]}, {
           45 + 6 2^Rational[1, 2], 45 + 4 2^Rational[1, 2]}, {
           45 - 4 2^Rational[1, 2], 45 - 6 2^Rational[1, 2]}, {
           45 - 5 2^Rational[1, 2], 45 - 5 2^Rational[1, 2]}}, {{
          52.071067811865476`, 52.071067811865476`}, {53.48528137423857, 
          50.65685424949238}, {39.34314575050762, 36.51471862576143}, {
          37.928932188134524`, 37.928932188134524`}}]], 
        EdgeForm[{
          RGBColor[0.560181, 0.691569, 0.194885]}], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        LineBox[
         NCache[{{45 + 5 2^Rational[1, 2], 45 + 5 2^Rational[1, 2]}, {
           45 - 5 2^Rational[1, 2], 45 - 5 2^Rational[1, 2]}}, {{
          52.071067811865476`, 52.071067811865476`}, {37.928932188134524`, 
          37.928932188134524`}}]], 
        Thickness[Tiny], 
        GrayLevel[0.5], 
        LineBox[{{45, 45}, {45, 45}}]}}, {{
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[
         NCache[{{-45 + 5 2^Rational[1, 2], 60 - 5 2^Rational[1, 2]}, {-45 + 
            4 2^Rational[1, 2], 60 - 6 2^Rational[1, 2]}, {-45 - 6 
            2^Rational[1, 2], 60 + 4 2^Rational[1, 2]}, {-45 - 5 
            2^Rational[1, 2], 60 + 
            5 2^Rational[1, 2]}}, {{-37.928932188134524`, 
          52.928932188134524`}, {-39.34314575050762, 
          51.51471862576143}, {-53.48528137423857, 
          65.65685424949238}, {-52.071067811865476`, 67.07106781186548}}]], 
        EdgeForm[{
          RGBColor[0.922526, 0.385626, 0.209179]}], 
        RGBColor[0.922526, 0.385626, 0.209179], {
         PolygonBox[
          
          NCache[{{-45 + 5 2^Rational[1, 2], 60 - 5 2^Rational[1, 2]}, {-45 - 
             5 2^Rational[1, 2] + (5 Rational[2, 3]^Rational[1, 2]) (-1 + 
               3^Rational[1, 2]), 60 + 
             5 2^Rational[1, 2] + (5 2^Rational[1, 2]) (-1 + 
               3^Rational[1, 2])}, {-45 - 5 2^Rational[1, 2], 60 + 
             5 2^Rational[1, 2]}}, {{-37.928932188134524`, 
           52.928932188134524`}, {-49.08248290463863, 
           72.24744871391589}, {-52.071067811865476`, 67.07106781186548}}]]}, 
        
        Thickness[Tiny], 
        GrayLevel[0.5], 
        LineBox[
         NCache[{{-45, 
           60}, {-45, 60 + 
            10 (Rational[3, 2]^Rational[1, 2] - 2^Rational[-1, 2])}}, {{-45, 
           60}, {-45, 65.17638090205041}}]]}, {
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{-13.261204674887132`, 
         56.1731656763491}, {-14.026571539617311`, 
         54.32540661132653}, {-32.50416218984305, 
         61.97907525862833}, {-31.738795325112868`, 63.8268343236509}}], 
        EdgeForm[{
          RGBColor[0.922526, 0.385626, 0.209179]}], 
        RGBColor[0.922526, 0.385626, 0.209179], {
         PolygonBox[{{-13.261204674887132`, 
          56.1731656763491}, {-24.709423826903947`, 
          76.0020629038253}, {-31.738795325112868`, 63.8268343236509}}]}, 
        Thickness[Tiny], 
        GrayLevel[0.5], 
        LineBox[{{-22.5, 60}, {-22.5, 72.1752285801744}}]}, {
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{10, 60}, {10, 58}, {-10, 58}, {-10, 60}}], 
        EdgeForm[{
          RGBColor[0.922526, 0.385626, 0.209179]}], 
        RGBColor[0.922526, 0.385626, 0.209179], {
         PolygonBox[
          
          NCache[{{10, 60}, {0, 60 + 10 3^Rational[1, 2]}, {-10, 60}}, {{10, 
            60}, {0, 77.32050807568876}, {-10, 60}}]]}, 
        Thickness[Tiny], 
        GrayLevel[0.5], 
        LineBox[
         NCache[{{0, 60}, {0, 60 + 10 3^Rational[1, 2]}}, {{0, 60}, {
           0, 77.32050807568876}}]]}, {
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{31.738795325112868`, 63.8268343236509}, {
         32.50416218984305, 61.97907525862833}, {14.026571539617311`, 
         54.32540661132653}, {13.261204674887132`, 56.1731656763491}}], 
        EdgeForm[{
          RGBColor[0.922526, 0.385626, 0.209179]}], 
        RGBColor[0.922526, 0.385626, 0.209179], {
         PolygonBox[{{31.738795325112868`, 63.8268343236509}, {
          24.70942382690395, 76.0020629038253}, {13.261204674887132`, 
          56.1731656763491}}]}, 
        Thickness[Tiny], 
        GrayLevel[0.5], 
        LineBox[{{22.5, 60}, {22.5, 72.1752285801744}}]}, {
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[
         NCache[{{45 + 5 2^Rational[1, 2], 60 + 5 2^Rational[1, 2]}, {
           45 + 6 2^Rational[1, 2], 60 + 4 2^Rational[1, 2]}, {
           45 - 4 2^Rational[1, 2], 60 - 6 2^Rational[1, 2]}, {
           45 - 5 2^Rational[1, 2], 60 - 5 2^Rational[1, 2]}}, {{
          52.071067811865476`, 67.07106781186548}, {53.48528137423857, 
          65.65685424949238}, {39.34314575050762, 51.51471862576143}, {
          37.928932188134524`, 52.928932188134524`}}]], 
        EdgeForm[{
          RGBColor[0.922526, 0.385626, 0.209179]}], 
        RGBColor[0.922526, 0.385626, 0.209179], {
         PolygonBox[
          
          NCache[{{45 + 5 2^Rational[1, 2], 60 + 5 2^Rational[1, 2]}, {
            45 - 5 
             2^Rational[1, 2] + (5 Rational[2, 3]^Rational[1, 2]) (1 + 
               3^Rational[1, 2]), 60 - 5 
             2^Rational[1, 2] + (5 2^Rational[1, 2]) (1 + 
               3^Rational[1, 2])}, {
            45 - 5 2^Rational[1, 2], 60 - 5 2^Rational[1, 2]}}, {{
           52.071067811865476`, 67.07106781186548}, {49.08248290463863, 
           72.24744871391589}, {37.928932188134524`, 52.928932188134524`}}]]}, 
        Thickness[Tiny], 
        GrayLevel[0.5], 
        LineBox[
         NCache[{{45, 60}, {
           45, 60 + 10 (Rational[3, 2]^Rational[1, 2] - 2^
              Rational[-1, 2])}}, {{45, 60}, {45, 65.17638090205041}}]]}}}},
   Ticks->{{{-60, 
       FormBox[
        RowBox[{"-", "60"}], TraditionalForm]}, {-45, 
       FormBox[
        RowBox[{"-", "45"}], TraditionalForm]}, {-30, 
       FormBox[
        RowBox[{"-", "30"}], TraditionalForm]}, {-15, 
       FormBox[
        RowBox[{"-", "15"}], TraditionalForm]}, {15, 
       FormBox["15", TraditionalForm]}, {30, 
       FormBox["30", TraditionalForm]}, {45, 
       FormBox["45", TraditionalForm]}, {60, 
       FormBox["60", TraditionalForm]}}, {{15, 
       FormBox["15", TraditionalForm]}, {30, 
       FormBox["30", TraditionalForm]}, {45, 
       FormBox["45", TraditionalForm]}, {60, 
       FormBox["60", TraditionalForm]}}}]],
  CellChangeTimes->{
   3.687605837775404*^9, {3.687605874792824*^9, 3.687605886496085*^9}, {
    3.687605917515604*^9, 3.6876059674275103`*^9}, 3.687606019020296*^9, {
    3.687606049177376*^9, 3.687606053644273*^9}, {3.687606109723209*^9, 
    3.6876061576467113`*^9}, {3.687606230149214*^9, 3.687606267486062*^9}, 
    3.6876067552018623`*^9, {3.687606809537541*^9, 3.687606867311702*^9}, {
    3.6876068982662697`*^9, 3.687607046845057*^9}, {3.687607083947885*^9, 
    3.687607142974106*^9}, 3.687607186849019*^9, 3.687607288796714*^9, {
    3.687607349424101*^9, 3.687607372887609*^9}, 3.687608314659729*^9, 
    3.6876085441057253`*^9},ExpressionUUID->
  "60e067b5-1e36-4a12-b7aa-599f853ce24a"],
 Cell[BoxData[
  GraphicsBox[{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
P/+5TP8/QnzqXA==
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
5e35sLsczwrt3lfTwPH/vR9b8v8AfLtt0Q==
       "]]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
yfPP5SeCSqt5/r/3zX/9/wCJJIEj
       "]]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
FWGR9x5y/H/fu//z/wDrML7K
       "]]}}, InsetBox[
     TemplateBox[{
      InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(TraditionalForm\\`15\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 15], 
        Editable -> False],InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(TraditionalForm\\`30\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 30], 
        Editable -> False],InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(TraditionalForm\\`45\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 45], 
        Editable -> False],InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(TraditionalForm\\`60\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 60], 
        Editable -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.01, 0.2}], ImageScaled[{0, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"\[Theta] (\[Degree])\"", TraditionalForm], 
     FormBox["\"Torque (N\[CenterDot]m)\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Epilog->{{{
       PointBox[
        NCache[{(15 6^Rational[1, 2]) ((-1 + 3^Rational[1, 2])/
           Pi), ((Rational[-1, 6] (-1 + 3^Rational[1, 2])^(-2)) (
            Rational[-1, 2] 3^Rational[1, 2] + 
            Cos[6^Rational[-1, 2] (-1 + 3^Rational[1, 2])])) 
          Sin[(Rational[1, 2] 6^Rational[-1, 2]) (-1 + 3^Rational[1, 2])]}, {
         8.561665095029744, -0.004150726438928701}]], 
       PointBox[
        NCache[{((-15) 6^Rational[1, 2]) ((-1 + 3^Rational[1, 2])/
           Pi), ((Rational[1, 6] (-1 + 3^Rational[1, 2])^(-2)) (
            Rational[-1, 2] 3^Rational[1, 2] + 
            Cos[6^Rational[-1, 2] (-1 + 3^Rational[1, 2])])) 
          Sin[(Rational[1, 2] 6^Rational[-1, 2]) (-1 + 
             3^Rational[1, 2])]}, {-8.561665095029744, 
         0.004150726438928701}]]}, {
       PointBox[
        NCache[{
         30 (3^Rational[1, 2]/Pi), (
           Rational[-1, 12] (Rational[-1, 2] + Cos[3^Rational[-1, 2]])) 
          Sin[Rational[1, 2] 3^Rational[-1, 2]]}, {
         16.53986686265376, -0.008016463362809763}]], 
       PointBox[
        NCache[{(-30) (3^Rational[1, 2]/Pi), (
           Rational[1, 12] (Rational[-1, 2] + Cos[3^Rational[-1, 2]])) 
          Sin[Rational[1, 2] 3^Rational[-1, 2]]}, {-16.53986686265376, 
         0.008016463362809763}]]}, {
       PointBox[
        NCache[{
         30 (6^Rational[1, 2]/Pi), (Rational[-1, 24] 
           Cos[Rational[2, 3]^Rational[1, 2]]) Sin[6^Rational[-1, 2]]}, {
         23.390904037010284`, -0.0113274405372919}]], 
       PointBox[
        NCache[{(-30) (6^Rational[1, 2]/Pi), (Rational[1, 24] 
           Cos[Rational[2, 3]^Rational[1, 2]]) 
          Sin[6^Rational[-1, 2]]}, {-23.390904037010284`, 
         0.0113274405372919}]]}, {
       PointBox[
        NCache[{90/Pi, (Rational[-1, 36] (Rational[1, 2] + Cos[1])) Sin[
            Rational[1, 2]]}, {28.64788975654116, -0.013854097036167422`}]], 
       PointBox[
        NCache[{(-90)/Pi, (Rational[1, 36] (Rational[1, 2] + Cos[1])) Sin[
            Rational[1, 2]]}, {-28.64788975654116, 0.013854097036167422`}]]}}},
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
   PlotRange->{All, All},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Prolog->{
     Thickness[Tiny], 
     LineBox[
      NCache[{{(-60) (3^Rational[1, 2]/Pi), (
          Rational[1, 48] (1 + Cos[2 3^Rational[-1, 2]])) 
         Sin[3^Rational[-1, 2]]}, {
        60 (3^Rational[1, 2]/Pi), (
          Rational[-1, 48] (1 + Cos[2 3^Rational[-1, 2]])) 
         Sin[3^Rational[-1, 2]]}}, {{-33.07973372530752, 
       0.015967002704829127`}, {33.07973372530752, -0.015967002704829127`}}]]},
   Ticks->{Automatic, Automatic}]],
  CellChangeTimes->{3.687560985963759*^9, 3.687561221247024*^9, 
   3.687561419496804*^9, 3.6875614635471497`*^9, 3.6875615270031853`*^9, 
   3.687562758051346*^9, 3.687605259958919*^9, 3.687606340424638*^9, 
   3.6876077475308104`*^9, 3.6876078671966133`*^9},ExpressionUUID->
  "0be4d333-b1cc-41d5-8370-689bf20ab756"],
 Cell[BoxData[
  GraphicsBox[{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
3ahVkNsC7ymCbLpDnZT+bvScN8trNWcRDB3hlWlGu9Gr9iV1m+eFcPJ+4KCk
1W6kyJIvWb+zEFLVTd0a/XYjvwP7z1G1HsAb/TmXDYW7kfuaNepd4gXgaEnb
XytHRensWfeqRvIg13+pwleNimr7d0xvvpkH44nFoiLbqKhH96jpBZc8COkU
6/GhUdH1gx2Z+l23Icvxs4OQBxWxyZ/Lc264Bb3uGXZHblJR6tMTx+/k54JL
8MTe1RtpKNyO/VcKkQkiC7FPdTbT0C8jiSFDq0x4FaSx2VWJhvQWvzwefJUB
1KDg7//q0VDf4tKd9R3poBTIcd3KnoYcHc/KoNep8OPEpsmUeBraO5PrfaM7
EUq/PretTqOh0LkG4YV9ieB7wrtm5BoNHZLc45z2MAEGjhcn6jygoW3kmdRa
EgcvAgx1uxtoyED2Ec/wo0uQ7Lc/WpyVjixjRiOnyqPA/POvaSMuOtIx9FLU
fRIJf/nl7vPlp6Np3jumP/0iIPTvMaVqCTpC9lj1t38YuB0LbHfZTkcR6hKV
j4+fBPEpUYMLu+honsNuu8iJ49DpW533rwkdNbRmPxsZ8QO676qQPw505B6k
okoZ9QKWT3cH5V3p6ObRAavhUXeo9DE1s/Kko1yOoBAOwgVUfZIkb56kI5eO
27nvbpnB6IT2xabTdCQvWb4z0FQXco/2zM5G0dH/P78fmAhzEr/EtNBRqRdG
iUwzxuvUfDOYjvH2ykzJYXrpSJHvSCHTZWNWb/jKmPY7Mr9Tp4rpQS8DgQtN
TDd6NlXIj/7P+FzbNpXp/8kf1VGmMc+0Sk7fQ3024xUndk3nm0kyvc9YIMvf
gelRBafQJy+Z5pia0je+Z7LiRZZCvuPxpiu2KGVzkrA3X7Hj1/mlzl2WKxb3
THvbIGC1Yj2p8DmveaZLczW28U5Yr9h55mF5QJvNir/w2tY7FtmueOBz3Q9a
rt2Kl2/89p0/a7/iNezrsscvMC3tvbmx/zLTVA2TLS+Smb6Mk/rTbjEtOrjF
QreOaW0ZM7XTrA4rpl9wcfbjYNpx0v+yOzfTYaWpo6brmK4zGsjZsIlpq8PH
+WsQ0+4N5wxLqEyfUk73vWPCdMZcZUOcFdMD59gjXd2YnhkT+dfGg2k2c8V+
ujfTskKWeuoBTG8LcfPafIppk/4TqetDmD6AztfxhjP93/eLK/4PW+1N4w==

       "]]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
aR2DbWd0ul4wmu3/fj9c9n8ALd978w==
       "]]}}, InsetBox[
     TemplateBox[{
      InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(TraditionalForm\\`15\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 15], 
        Editable -> False],InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(TraditionalForm\\`30\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 30], 
        Editable -> False],InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(TraditionalForm\\`45\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 45], 
        Editable -> False],InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(TraditionalForm\\`60\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 60], 
        Editable -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.01, 0.01}], ImageScaled[{0, 0}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"\[Theta] (\[Degree])\"", TraditionalForm], 
     FormBox["\"Force\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
   PlotRange->{{-70, 70}, {-0.4330126681562524, 0.}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{{{-60, 
       FormBox[
        RowBox[{"-", "60"}], TraditionalForm]}, {-45, 
       FormBox[
        RowBox[{"-", "45"}], TraditionalForm]}, {-30, 
       FormBox[
        RowBox[{"-", "30"}], TraditionalForm]}, {-15, 
       FormBox[
        RowBox[{"-", "15"}], TraditionalForm]}, {15, 
       FormBox["15", TraditionalForm]}, {30, 
       FormBox["30", TraditionalForm]}, {45, 
       FormBox["45", TraditionalForm]}, {60, 
       FormBox["60", TraditionalForm]}}, Automatic}]],
  CellChangeTimes->{
   3.6875617889436398`*^9, 3.687562308067196*^9, 3.687562733128643*^9, 
    3.687605236712493*^9, 3.687606104201973*^9, 3.68760630516457*^9, {
    3.687607653339971*^9, 3.687607701464322*^9}},ExpressionUUID->
  "fc5e7658-e5ca-4304-b4b9-f11f959f5eac"],
 "\nMax torque curve as a function of theta does look linear (approximately \
",
 Cell[BoxData[
  RowBox[{"-", 
   FractionBox["\[Theta]", "36"]}]],
  CellChangeTimes->{{3.745229730198694*^9, 3.74522977450459*^9}, {
   3.745229804905076*^9, 3.745229821260002*^9}, {3.7452298696453876`*^9, 
   3.745229876957452*^9}},ExpressionUUID->
  "4040d28f-3b1a-4341-b274-24511f33a1ee"],
 ", but actual curve is ",
 Cell[BoxData[
  RowBox[{"-", 
   FractionBox[
    RowBox[{
     SuperscriptBox["l", "3"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"6", " ", 
        SuperscriptBox["\[Theta]", "2"]}], "+", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Theta]"}], "]"}]}], ")"}], " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
    RowBox[{"144", " ", 
     SuperscriptBox["\[Theta]", "2"]}]]}]],
  CellChangeTimes->{3.745229701053371*^9},ExpressionUUID->
  "cd6aadbd-4736-4ead-84d4-1d12b8b7859b"],
 ") (given a theta, find the angle of repose that maximizes it): ",
 Cell[BoxData[
  GraphicsBox[{{{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAGIQzcqp+fn//qADDFCgIXLUlG8vgu8ln1ghswvB7zOd
+ddiC4IvlsTJUbQCSf/ulzJPJiDpz13ldiIRwZ9wUXvWBGYEf8s7pfnu5oFw
/sSqn64dFQFwvoXeoVm81f5wPgT4wfmNAlWp4U994XzrCx+Kt2T5wPnqlgF2
cRe84PyCwxdPNtt6wvla2kIz9xx1RzW/wQ3hPxtrFSc9BL9ES/nzrY0ucL6e
lW7zextnOF/qs/z5gBWOcH5558W4o3oOaO63g/P5Jl0P4dW2hfOfBQfktbNb
wfkLLrjxa0iZw/n75/NpJL01hvMPaoacOPTNAM18PTjfn+fagcpGbTi/16vn
a4yxKpyv8Le6SGqxHML++WI9ogUI/lqnjUsFbBF8q45nN9iuy8L5wcKB9p+5
EPw2TTWeM0XScP7b0AtLa50k4PwtP7L2V/Aj+FWzWW8W3xGH89keWvFklSH4
CjlLi8JWicH5IU1V9vpConC+lKpopNZ9ETj/4fH1RaprEPw83qdLpd0QfJNr
7cd+GSD4AOYqpyU=
          "]], LineBox[CompressedData["
1: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
/+UN9A/SJgZb
          "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGBwBWIQbXKt/dgvAxEHBijg2djxVn8qgj/jb8znsiMIvrKX
4c+9nxF8q8c3WXyCROH8Y/rruCY3IviBNU0CtzYg+Bmi2jIZ/GJw/jT3GuOW
Mwj+p9VySXvcJOD8uh+f0pnLEHxO1+O5XksRfIV7+ZU3mCXhfD+BgxO+HEDw
V5Yk79exlobzE2xXyMzVl4Pzj5b877qVhOBrrQn7KT4Nwf8ixXpt0h8Ev/NH
Yn/HSXk4/+ZNXsZdGxXgfKapx4uXeivB+aHc1pE19aoI/UUz5a1PasP5EKAH
5/8xrMsOu2wA5/tHxJ0vZTSB8w8cPrA676cZnF/x5h5rwSNLOP/0Ie0X17ls
0cy3g/Ot7/1ykvxrD+cvDv4zKWG6I5y/I2qPg6KoM5xf6BClm9btAud/r+GP
i1N0QzW/AcHnucPq7TzHHc5/N1G45raZJ5xfovb/9feTXnB+511tCUYnHzg/
53V+x96bvmju94Pz70p/3ZIW5g/nV4rqCJxKDYDzszxeplsZBCL8x3NcVvEt
gj9liszMnA8IfptMkciOzwh+lo4st/8vBN/Ap/hHDXsQnL+nW/7yDUUE/wpX
RceEMAT/2KSzzHciEfztUsr16rEI/iytc6X7khH8BC+V5DcFCP6bzgu2Ht0I
/j1BtZ2T+xD88zOrTe5PRPA3rVTTLpuB4FecrJFYshTBzwq8NPn9CgQ/+qY6
v/UaBN/u5SXWS5sQfINCjUbZbQi+0s/aPxk7EXyRxsvlW/Yg+Kycmp//70fw
AaVW4u4=
          "]]},
        Annotation[#, "Charting`Private`Tag$6871#1"]& ], 
       TagBox[
        {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQzcqp+fn//qADDFCgIXLUlG8vgu8ln1ghswvB7zOd
+ddiC4IvlsTJUbQCSf/ulzJPJiDpz13ldiIRwZ9wUXvWBGYEf8s7pfnu5oFw
/sSqn64dFQFwvoXeoVm81f5wPgT4wfmNAlWp4U994XzrCx+Kt2T5wPnqlgF2
cRe84PyCwxdPNtt6wvla2kIz9xx1RzW/wQ3hPxtrFSc9BL9ES/nzrY0ucL6e
lW7zextnOF/qs/z5gBWOcH5558W4o3oOaO63g/P5Jl0P4dW2hfOfBQfktbNb
wfkLLrjxa0iZw/n75/NpJL01hvMPaoacOPTNAM43at2y4dVLBH/JA5GZQncR
/I7pVzOTDiP4fqzh3EwTEPxbDyL9HDUR/Bf6+1fUb9eD808/q688PxfBXzfX
wUu+BcEv5T70el8Agh9xqGkPnzmCb1Pp3Bsni+BLvXZOrpVA8AF5V5P0
          "]], 
         LineBox[CompressedData["
1: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
FUxYeDHIhltUw7sFohTx//Z3+L/9Hf8f67d+mQ==
          "]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCwBWIQLfXaOblWQs+BAQpSDL5LLHdC8DX3XLkvE4Xgv3Pf
tGxSIYK/5XJ/Lkcngu/w2uv35+0IPlu5xqHM8wj+GSa2zvvPEPxwqYNip0X1
4fw8T3OjRcUI/rnLE01WiBvA+X8M67LDLiP4UzfxvuR7gODrGc9NO/4GwU80
2ZNowWYI5x8z+xUuZYngT7Quc7k3D8FXc82TTcsygvP9I+LOlzKawPkHDh9Y
nffTDM6veHOPteCRJZx/+pD2i+tctnA+BNjB+db3fjlJ/rWH8xcH/5mUMN0R
zt8RtcdBUdQZzi90iNJN63aB87/X8MfFKbqhmt+A4PPcYfV2nuMO57+bKFxz
28wTzi9R+//6+0kvOL/zrrYEo5MPnJ/zOr9j701fNPf7wfl3pb9uSQvzh/Mr
RXUETqUGwPlZHi/TrQwCEf7jOS6r+BbBnzJFZmbOBwS/TaZIZMdnBD9LR5bb
/xeCb+BT/KOGPQjO39Mtf/mGIoJ/hauiY0IYgn9s0lnmO5EI/nYp5Xr1WAR/
lta50n3JCH6Cl0rymwIE/03nBVuPbgT/nqDazsl9CP75mdUm9yci+JtWqmmX
zUDwK07WSCxZiuBnBV6a/H4Fgh99U53feg2Cb/fyEuulTQi+QaFGo+w2BF/p
Z+2fjJ0Ivkjj5fItexB8Vk7Nz//3I/gAnAjKOA==
          "]]},
        Annotation[#, "Charting`Private`Tag$6871#2"]& ], 
       TagBox[
        {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQB2IQzcqp+fn//qADDFCgIXLUlG8vgu8ln1ghswvB7zOd
+ddiC4IvlsTJUbQCSf/ulzJPJiDpz13ldiIRwZ9wUXvWBGYEf8s7pfnu5oFw
/sSqn64dFQFwvoXeoVm81f5wPgT4wfmNAlWp4U994XzrCx+Kt2T5wPnqlgF2
cRe84PyCwxdPNtt6wvla2kIz9xx1RzW/wQ3hPxtrFSc9BL9ES/nzrY0ucL6e
lW7zextnOF/qs/z5gBWOcH5558W4o3oOcH7Zp//JCRoIfkm0XuZvRQS/QLe7
2FAUwb+0qFPA+rs9nL/NqCD59QQEvy7IltPniB2cX6UyS7hpO4Jf/u2b7I5V
CH7BrA1GKhMR/KRHyjF/YhH8uC0NaUaBCH50292CDBcEP0RreusVLQQ/4M/n
fi45BN/3XMAsB0EEv/frwo12PAg+ABV1j3g=
          "]], LineBox[CompressedData["
1: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
/R+UiSLE
          "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwB2IQ3ft14UY7HjsHBigQzbXM2qCK4DetXJJfaYjgf3jK
X+pki+CfiXtWfyUEwW8OmDz1RzOS+p5/sw72I/hxJzMXdM1G8K2cHFbLbEbw
Pxq/PeDwCMGPF3d/0+FgD+db3/vlJPkXwd+Q5fzxPYsDnO+UxukYzI3gp8VO
fSApgeCv814rv9wQwbfXuDv3YAqCn/DQZta3Uwj+4uA/kxKmO8L5O6L2OCiK
OsP5hQ5RumndLnD+9xr+uDhFNzgfDBoQfJ47rN7Oc9zh/HcThWtum3nC+SVq
/19/P+kF53fe1ZZgdPKB83Ne53fsvemLaj6DH5x/V/rrlrQwfzi/UlRH4FRq
AJyf5fEy3cogEOE/nuOyim8R/ClTZGbmfEDw22SKRHZ8RvCzdGS5/X8h+AY+
xT9q2IPg/D3d8pdvKCL4V7gqOiaEIfjHJp1lvhOJ4G+XUq5Xj0XwZ2mdK92X
jOAneKkkvylA8N90XrD16Ebw7wmq7Zzch+Cfn1ltcn8igr9ppZp22QwEv+Jk
jcSSpQh+VuClye9XIPjRN9X5rdcg+HYvL7Fe2oTgGxRqNMpuQ/CVftb+ydiJ
4Is0Xi7fsgfBZ+XU/Px/P4IPAP64uss=
          "]]},
        Annotation[#, "Charting`Private`Tag$6871#3"]& ], 
       TagBox[
        {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQzcqp+fn//qADDFCgIXLUlG8vgu8ln1ghswvB7zOd
+ddiC4IvlsTJUbQCSf/ulzJPJiDpz13ldiIRwZ9wUXvWBGYEf8s7pfnu5oFw
/sSqn64dFQFwvoXeoVm81f5wPgT4wfmNAlWp4U994XzrCx+Kt2T5wPnqlgF2
cRe84PyCwxdPNtt6wvla2kIz9xx1h/Pzztutj9uP4G8qzj7KsBPBt9xz5KPL
GgTfw7fc6+wkBD81/87vu/EI/oLNy+L+/3SD85+EXy5Z+BnB1/jzv8v5LYK/
3iVye/sDBH/fVW4BgeMI/u3vBQcVpiD4cnPmXj/Ui+AnOZx6m9KO4B//dSFC
vg3BBwDYH36N
          "]], LineBox[CompressedData["
1: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
3/8Y+L//Mej/AFetPes=
          "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGDQB2IQffzXhQj5NjcHBihYVyXz4uh0BH/+g9dmJesR/KY1
XVcu3EPw/7XaZex5guBXxX/6vfwVgl8sFKVc/w3BT6nQLNLlc4fz3V1O8HfZ
Ivg8d1i9necg+E+ETq1euwjB3+3ZxyOxEsHP2i527s1WBP/EJPXAaecR/BZP
z/CXTB5w/t9tPcn9mQj+u4nCNbfNPOH8ErX/r7+f9ILzO+9qSzA6+cD5Oa/z
O/be9IXzIcAPzr8r/XVLWpg/nF8pqiNwKjUA4V6Pl+lWBoFw/mKe47KKbxH8
KVNkZuZ8QPDbZIpEdnxG8LN0ZLn9fyH4Bj7FP2rYg+D8Pd3yl28oIvhXuCo6
JoQh+McmnWW+E4ngb5dSrlePRfBnaZ0r3ZeM4Cd4qSS/KUDw33ResPXoRvDv
CartnNyH4J+fWW1yfyKCv2mlmnbZDAS/4mSNxJKlCH5W4KXJ71cg+NE31fmt
1yD4di8vsV7ahOAbFGo0ym5D8JV+1v7J2IngizReLt+yB8Fn5dT8/H8/gg8A
UzOmmA==
          "]]},
        Annotation[#, "Charting`Private`Tag$6871#4"]& ], 
       TagBox[
        {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQzcqp+fn//qADDFCgIXLUlG8vgu8ln1ghswvB7zOd
+ddiC4IvlsTJUbQCSf/ulzJPJiDpz13ldiIRwZ9wUXvWBGYEf8s7pfnu5oFw
/sSqn64dFQFwvoXeoVm81f5w/kHetwe3lSD4Xm/FX8bnIfgxa3LNNyUi+I1a
klfCPBD8U2oFvAtEkdTLyzUYbfCD85/+81h+eyWCn3ev+FzLYgS/Ye5JmevT
EPyl0qU7q2sR/HfiZz4d8ULwy79/k8xzQfAZris6itsh+MLTyvszDRF8CxFl
HT4JBP/gZ9/g7YIIvtfliqoEbgT/+K8LEfJsCD4AYdpwJQ==
          "]], 
         LineBox[CompressedData["
1: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
nuXAoPcfHK19hdH//wfB//8PQv8Dp7Z2uA==
          "]], LineBox[CompressedData["
1:eJxFx2kogwEAxvHlPlaOTGLDi9xpHxS5UtuHpcVGLUIxNrPIFYahJcLKnTYf
fHCEkLzmmIRShhraKyHHFyU1UUtDcpX2PPXv6UeIq7IldjQaLe63vzd8nOYG
OWWm0/73tVlqTWDAqvuDdBYBdycMUg+JcAafo7hKg+nFr0wjF+7vzZOSAnj0
hnhXyuCpDjLQWwNLNaV7DuNw5KKvzDoJz583L18vwWQUhztjgHdPqPIUK3wT
8KqTirJs9p+dkCcXwKJ4QbCnGD7mz6v1lfBua7GY3glP3Bk9yBVYJ8xZbXMR
2NzEiPU8ksBy3mNZElto8yTdwCKe4JERprbiBe5i1vpsWGB5LMs96wNm8+ve
lM7ZNm+pg6gLAj5zU3QPiOD9IaP9dR687h/aHlEIj0Uf12+XwEUZYSXmatjc
c5rKU8O3XuH64T74RNsSfzcIk3PhMQ0aWHGo9JuahuVC0/DzLJx/GeGRvACn
PZocTSTMrolUsdbgkPfWT5ke9lFRjbot2NE1yvK9A/8A71Oh/g==
          "]]},
        Annotation[#, "Charting`Private`Tag$6871#5"]& ], 
       TagBox[
        {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1: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

          "]]},
        Annotation[#, "Charting`Private`Tag$6871#6"]& ], 
       TagBox[
        {RGBColor[0.363898, 0.618501, 0.782349], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1: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
          "]]},
        Annotation[#, 
         "Charting`Private`Tag$6871#7"]& ], {}}, {{}, {}, {}, {}, {}, {}, {}, \
{}, {}}}, {}, {}}, InsetBox[
     TemplateBox[{
      InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(\\*FormBox[\\\"5\\\", TraditionalForm]\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 5], 
        Editable -> False],InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(\\*FormBox[\\\"15\\\", TraditionalForm]\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 15], 
        Editable -> False],InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(\\*FormBox[\\\"30\\\", TraditionalForm]\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 30], 
        Editable -> False],InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(\\*FormBox[\\\"45\\\", TraditionalForm]\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 45], 
        Editable -> False],InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(\\*FormBox[\\\"60\\\", TraditionalForm]\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 60], 
        Editable -> False],InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(\\*FormBox[\\\"75\\\", TraditionalForm]\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 75], 
        Editable -> False],InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(\\*FormBox[\\\"85\\\", TraditionalForm]\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 85], 
        Editable -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.01, 0.2}], ImageScaled[{0, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"\[Theta] (\[Degree])\"", TraditionalForm], 
     FormBox["\"Torque (N\[CenterDot]m)\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Epilog->{{{
       PointBox[
        NCache[{((60 3^Rational[1, 2])/Pi) 
          Sin[Rational[1, 36] Pi], ((
            Rational[-1, 48] (-Cos[Rational[1, 18] Pi] + 
             Cos[(2 3^Rational[-1, 2]) Sin[Rational[1, 36] Pi]])) 
           Csc[Rational[1, 36] Pi]^2) 
          Sin[3^Rational[-1, 2] Sin[Rational[1, 36] Pi]]}, {
         2.8830887627239346`, -0.0013977605027783628`}]], 
       PointBox[
        NCache[{(((-60) 3^Rational[1, 2])/Pi) 
          Sin[Rational[1, 36] Pi], ((
            Rational[1, 48] (-Cos[Rational[1, 18] Pi] + 
             Cos[(2 3^Rational[-1, 2]) Sin[Rational[1, 36] Pi]])) 
           Csc[Rational[1, 36] Pi]^2) 
          Sin[3^Rational[-1, 2] 
            Sin[Rational[1, 36] Pi]]}, {-2.8830887627239346`, 
         0.0013977605027783628`}]]}, {
       PointBox[
        NCache[{(15 6^Rational[1, 2]) ((-1 + 3^Rational[1, 2])/
           Pi), ((Rational[-1, 6] (-1 + 3^Rational[1, 2])^(-2)) (
            Rational[-1, 2] 3^Rational[1, 2] + 
            Cos[6^Rational[-1, 2] (-1 + 3^Rational[1, 2])])) 
          Sin[(Rational[1, 2] 6^Rational[-1, 2]) (-1 + 3^Rational[1, 2])]}, {
         8.561665095029744, -0.004150726438928701}]], 
       PointBox[
        NCache[{((-15) 6^Rational[1, 2]) ((-1 + 3^Rational[1, 2])/
           Pi), ((Rational[1, 6] (-1 + 3^Rational[1, 2])^(-2)) (
            Rational[-1, 2] 3^Rational[1, 2] + 
            Cos[6^Rational[-1, 2] (-1 + 3^Rational[1, 2])])) 
          Sin[(Rational[1, 2] 6^Rational[-1, 2]) (-1 + 
             3^Rational[1, 2])]}, {-8.561665095029744, 
         0.004150726438928701}]]}, {
       PointBox[
        NCache[{
         30 (3^Rational[1, 2]/Pi), (
           Rational[-1, 12] (Rational[-1, 2] + Cos[3^Rational[-1, 2]])) 
          Sin[Rational[1, 2] 3^Rational[-1, 2]]}, {
         16.53986686265376, -0.008016463362809763}]], 
       PointBox[
        NCache[{(-30) (3^Rational[1, 2]/Pi), (
           Rational[1, 12] (Rational[-1, 2] + Cos[3^Rational[-1, 2]])) 
          Sin[Rational[1, 2] 3^Rational[-1, 2]]}, {-16.53986686265376, 
         0.008016463362809763}]]}, {
       PointBox[
        NCache[{
         30 (6^Rational[1, 2]/Pi), (Rational[-1, 24] 
           Cos[Rational[2, 3]^Rational[1, 2]]) Sin[6^Rational[-1, 2]]}, {
         23.390904037010284`, -0.0113274405372919}]], 
       PointBox[
        NCache[{(-30) (6^Rational[1, 2]/Pi), (Rational[1, 24] 
           Cos[Rational[2, 3]^Rational[1, 2]]) 
          Sin[6^Rational[-1, 2]]}, {-23.390904037010284`, 
         0.0113274405372919}]]}, {
       PointBox[
        NCache[{90/Pi, (Rational[-1, 36] (Rational[1, 2] + Cos[1])) Sin[
            Rational[1, 2]]}, {28.64788975654116, -0.013854097036167422`}]], 
       PointBox[
        NCache[{(-90)/Pi, (Rational[1, 36] (Rational[1, 2] + Cos[1])) Sin[
            Rational[1, 2]]}, {-28.64788975654116, 0.013854097036167422`}]]}, {
       PointBox[
        NCache[{(15 6^Rational[1, 2]) ((1 + 3^Rational[1, 2])/
           Pi), ((Rational[-1, 6] (1 + 3^Rational[1, 2])^(-2)) (
            Rational[1, 2] 3^Rational[1, 2] + 
            Cos[6^Rational[-1, 2] (1 + 3^Rational[1, 2])])) 
          Sin[(Rational[1, 2] 6^Rational[-1, 2]) (1 + 3^Rational[1, 2])]}, {
         31.952569132040026`, -0.015431553367001357`}]], 
       PointBox[
        NCache[{((-15) 6^Rational[1, 2]) ((1 + 3^Rational[1, 2])/
           Pi), ((Rational[1, 6] (1 + 3^Rational[1, 2])^(-2)) (
            Rational[1, 2] 3^Rational[1, 2] + 
            Cos[6^Rational[-1, 2] (1 + 3^Rational[1, 2])])) 
          Sin[(Rational[1, 2] 6^Rational[-1, 2]) (1 + 
             3^Rational[1, 2])]}, {-31.952569132040026`, 
         0.015431553367001357`}]]}, {
       PointBox[
        NCache[{((60 3^Rational[1, 2])/Pi) 
          Cos[Rational[1, 36] Pi], ((
            Rational[-1, 48] (Cos[Rational[1, 18] Pi] + 
             Cos[(2 3^Rational[-1, 2]) Cos[Rational[1, 36] Pi]])) 
           Sec[Rational[1, 36] Pi]^2) 
          Sin[3^Rational[-1, 2] Cos[Rational[1, 36] Pi]]}, {
         32.95385535143806, -0.01590727931702363}]], 
       PointBox[
        NCache[{(((-60) 3^Rational[1, 2])/Pi) 
          Cos[Rational[1, 36] Pi], ((
            Rational[1, 48] (Cos[Rational[1, 18] Pi] + 
             Cos[(2 3^Rational[-1, 2]) Cos[Rational[1, 36] Pi]])) 
           Sec[Rational[1, 36] Pi]^2) 
          Sin[3^Rational[-1, 2] 
            Cos[Rational[1, 36] Pi]]}, {-32.95385535143806, 
         0.01590727931702363}]]}}},
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{All, All},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Prolog->{
     Thickness[Tiny], 
     LineBox[
      NCache[{{(-60) (3^Rational[1, 2]/Pi), (
          Rational[1, 48] (1 + Cos[2 3^Rational[-1, 2]])) 
         Sin[3^Rational[-1, 2]]}, {
        60 (3^Rational[1, 2]/Pi), (
          Rational[-1, 48] (1 + Cos[2 3^Rational[-1, 2]])) 
         Sin[3^Rational[-1, 2]]}}, {{-33.07973372530752, 
       0.015967002704829127`}, {33.07973372530752, -0.015967002704829127`}}]]},
   Ticks->{Automatic, Automatic}]],
  CellChangeTimes->{
   3.7377903989028482`*^9, 3.737790430043973*^9, 3.737790516151019*^9, {
    3.7452230312068243`*^9, 3.7452231116983433`*^9}},ExpressionUUID->
  "43a7c3e7-de5e-4cf2-a7b4-754969d82770"]
}], "Section",
 CellChangeTimes->{{3.684065388893179*^9, 3.684065402042365*^9}, {
  3.68760862327945*^9, 3.6876086509850883`*^9}, {3.687608681853881*^9, 
  3.687608690355647*^9}, {3.7112984773981333`*^9, 3.711298490860586*^9}, {
  3.745223183556734*^9, 3.7452232899809637`*^9}, {3.74522989919138*^9, 
  3.74522992513579*^9}, {3.745245511143529*^9, 
  3.745245515309458*^9}},ExpressionUUID->"3ffc317f-3c59-4200-ba76-\
6a4d35291edb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"torque", " ", "simplified"}], "*)"}], 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"Assuming", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", "\[Theta]", "]"}], "\[GreaterEqual]", " ", 
      RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], ",", " ", 
     RowBox[{
      RowBox[{
       SubsuperscriptBox["\[Integral]", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "l"}], "/", "2"}], 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
        FractionBox[
         RowBox[{"l", " ", 
          RowBox[{"Cot", "[", "\[Alpha]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "2"]], 
       RowBox[{"x", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Tan", "[", "\[Alpha]", "]"}], "x"}], "+", 
          RowBox[{
           RowBox[{"l", "/", "2"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], 
              RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "-", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ")"}]}], "  ", "-", 
          RowBox[{
           RowBox[{"Tan", "[", "\[Theta]", "]"}], "x"}]}], ")"}], 
        RowBox[{"\[DifferentialD]", "x"}]}]}], "+", " ", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", 
        FractionBox[
         RowBox[{"l", " ", 
          RowBox[{"Cot", "[", "\[Alpha]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "2"], 
        RowBox[{
         RowBox[{"l", "/", "2"}], 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}]], 
       RowBox[{"x", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "x"}], "+", 
          RowBox[{
           RowBox[{"l", "/", "2"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], 
              RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "+", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ")"}]}], "-", 
          RowBox[{
           RowBox[{"Tan", "[", "\[Theta]", "]"}], "x"}]}], ")"}], 
        RowBox[{"\[DifferentialD]", "x"}]}]}]}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.709316155892724*^9, 3.709316162347558*^9}, {
  3.7093161990302267`*^9, 3.709316250506275*^9}, {3.709316316434452*^9, 
  3.70931632110572*^9}, {3.7093164752487383`*^9, 
  3.709316483297449*^9}},ExpressionUUID->"26dc995b-d8bc-4343-8952-\
9a05aae000ff"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "48"], " ", 
  SuperscriptBox["l", "3"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "\[Theta]"}], "]"}]}], ")"}], " ", 
  SuperscriptBox[
   RowBox[{"Csc", "[", "\[Alpha]", "]"}], "2"], " ", 
  RowBox[{"Sin", "[", "\[Theta]", "]"}]}]], "Output",
 CellChangeTimes->{3.7093163283729362`*^9, 
  3.737790409389419*^9},ExpressionUUID->"c9b2b5ae-3071-41cd-a0d0-\
b105e215a2e4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Force", " ", "simplified"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"Assuming", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", "\[Theta]", "]"}], "\[GreaterEqual]", " ", 
      RowBox[{"Cos", "[", "\[Alpha]", "]"}], "\[GreaterEqual]", "0"}], ",", 
     " ", 
     RowBox[{
      RowBox[{
       SubsuperscriptBox["\[Integral]", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "l"}], "/", "2"}], 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
        FractionBox[
         RowBox[{"l", " ", 
          RowBox[{"Cot", "[", "\[Alpha]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "2"]], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Tan", "[", "\[Alpha]", "]"}], "x"}], "+", 
          RowBox[{
           RowBox[{"l", "/", "2"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], 
              RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "-", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ")"}]}], "  ", "-", 
          RowBox[{
           RowBox[{"Tan", "[", "\[Theta]", "]"}], "x"}]}], ")"}], 
        RowBox[{"\[DifferentialD]", "x"}]}]}], "+", "\[IndentingNewLine]", 
      " ", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", 
        FractionBox[
         RowBox[{"l", " ", 
          RowBox[{"Cot", "[", "\[Alpha]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "2"], 
        RowBox[{
         RowBox[{"l", "/", "2"}], 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}]], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "x"}], "+", 
          RowBox[{
           RowBox[{"l", "/", "2"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], 
              RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "+", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ")"}]}], "-", 
          RowBox[{
           RowBox[{"Tan", "[", "\[Theta]", "]"}], "x"}]}], ")"}], 
        RowBox[{"\[DifferentialD]", "x"}]}]}]}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.709316297675839*^9, 3.7093163307563963`*^9, {3.709316376677346*^9, 
   3.709316378452949*^9}, {3.709316487738435*^9, 
   3.709316491496003*^9}},ExpressionUUID->"9c5c71cb-348f-4318-a73a-\
f95d206d00cc"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "8"], " ", 
  SuperscriptBox["l", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "\[Theta]"}], "]"}]}], ")"}], " ", 
  RowBox[{"Csc", "[", "\[Alpha]", "]"}], " ", 
  RowBox[{"Sec", "[", "\[Alpha]", "]"}]}]], "Output",
 CellChangeTimes->{3.709316333048821*^9, 3.709316382097809*^9, 
  3.737790415270853*^9},ExpressionUUID->"3dce3173-a9b1-4fa5-80c4-\
b3e7234364ca"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Maximizing", " ", "torque", "  ", 
     SuperscriptBox["l", "3"], 
     FractionBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"2", "\[Alpha]"}], "]"}], "-", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", "\[Theta]"}], "]"}]}], ")"}], 
      RowBox[{"48", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Alpha]", "]"}], "2"]}]], 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", " ", 
    RowBox[{
     RowBox[{"when", " ", "\[Theta]m"}], " ", "=", " ", 
     FractionBox[
      RowBox[{"Sin", "[", "\[Alpha]", "]"}], 
      SqrtBox["3"]]}]}], "\[IndentingNewLine]", 
   RowBox[{"\[Alpha]", " ", "=", " ", 
    RowBox[{"ArcSin", "[", 
     RowBox[{
      SqrtBox["3"], " ", "\[Theta]m"}], " ", "]"}]}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{
  3.7452288563608227`*^9, {3.745229554988886*^9, 3.745229609541827*^9}, {
   3.7452296455372877`*^9, 
   3.745229669121962*^9}},ExpressionUUID->"305b46b7-9831-4fa6-98dd-\
e4ccb281eb86"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", " ", 
  RowBox[{
   SuperscriptBox["l", "3"], 
   FractionBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"2", "\[Alpha]"}], "]"}], "-", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", 
        FractionBox[
         RowBox[{"Sin", "[", "\[Alpha]", "]"}], 
         SqrtBox["3"]]}], "]"}]}], ")"}], 
    RowBox[{"48", 
     SuperscriptBox[
      RowBox[{"Sin", "[", "\[Alpha]", "]"}], "2"]}]], 
   RowBox[{"Sin", "[", 
    FractionBox[
     RowBox[{"Sin", "[", "\[Alpha]", "]"}], 
     SqrtBox["3"]], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7452296176329813`*^9, 
  3.7452296378743973`*^9}},ExpressionUUID->"4ebd56f2-7d11-4eac-9f72-\
0467d9367059"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "48"], " ", 
  SuperscriptBox["l", "3"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "\[Alpha]"}], "]"}], "-", 
    RowBox[{"Cos", "[", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], 
      SqrtBox["3"]], "]"}]}], ")"}], " ", 
  SuperscriptBox[
   RowBox[{"Csc", "[", "\[Alpha]", "]"}], "2"], " ", 
  RowBox[{"Sin", "[", 
   FractionBox[
    RowBox[{"Sin", "[", "\[Alpha]", "]"}], 
    SqrtBox["3"]], "]"}]}]], "Output",
 CellChangeTimes->{
  3.7452296398237534`*^9},ExpressionUUID->"eabf27a7-1698-4e36-8148-\
14e65fe61909"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   SuperscriptBox["l", "3"], 
   FractionBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{"2", 
        RowBox[{"ArcSin", "[", 
         RowBox[{
          SqrtBox["3"], " ", "\[Theta]"}], " ", "]"}]}], "]"}], "-", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", "\[Theta]"}], "]"}]}], ")"}], 
    RowBox[{"48", 
     SuperscriptBox[
      RowBox[{"Sin", "[", 
       RowBox[{"ArcSin", "[", 
        RowBox[{
         SqrtBox["3"], " ", "\[Theta]"}], " ", "]"}], "]"}], "2"]}]], 
   RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.745229678399624*^9, 
  3.745229700516617*^9}},ExpressionUUID->"15653cf4-5309-4011-98e6-\
5f6c364f7f60"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["l", "3"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"6", " ", 
       SuperscriptBox["\[Theta]", "2"]}], "+", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}]}], ")"}], " ", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
   RowBox[{"144", " ", 
    SuperscriptBox["\[Theta]", "2"]}]]}]], "Output",
 CellChangeTimes->{
  3.745229701053371*^9},ExpressionUUID->"bd5c752b-37b3-469a-a2bb-\
cdbc37de6076"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Do", " ", "a", " ", "linear", " ", "fit", " ", "at", " ", "0"}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Limit", "[", 
   RowBox[{
    FractionBox[
     RowBox[{"-", 
      FractionBox[
       RowBox[{" ", 
        RowBox[{
         SuperscriptBox["l", "3"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"6", " ", 
            SuperscriptBox["\[Theta]", "2"]}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}]}], ")"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
       RowBox[{"144", " ", 
        SuperscriptBox["\[Theta]", "2"]}]]}], "\[Theta]"], ",", 
    RowBox[{"\[Theta]", "\[Rule]", "0"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.745229835765934*^9, 3.7452298635742283`*^9}, {
  3.745245585693385*^9, 
  3.745245611822236*^9}},ExpressionUUID->"5cc34963-c38a-4083-a0f5-\
4930ce14b743"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   SuperscriptBox["l", "3"], "36"]}]], "Output",
 CellChangeTimes->{{3.745229847035334*^9, 3.745229864074629*^9}, 
   3.745245612512467*^9},ExpressionUUID->"61df9b67-53f6-4640-a733-\
3c58eba2743a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", " ", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{" ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"6", " ", 
            SuperscriptBox["\[Theta]", "2"]}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}]}], ")"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
       RowBox[{"144", " ", 
        SuperscriptBox["\[Theta]", "2"]}]]}], ",", 
     RowBox[{"-", 
      FractionBox["\[Theta]", "36"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", 
     RowBox[{
      RowBox[{"-", "Pi"}], "/", "2"}], ",", " ", 
     RowBox[{"Pi", "/", "2"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.745229730198694*^9, 3.74522977450459*^9}, {
  3.745229804905076*^9, 3.745229821260002*^9}, {3.7452298696453876`*^9, 
  3.745229876957452*^9}, {3.745229963003454*^9, 
  3.745229965923533*^9}},ExpressionUUID->"0910c24d-5f1a-4f69-b527-\
79fb77f639ae"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwBIQPe/CFib1JlAgAAADEAAAACAAAASkkOQ/sh+b9VHSbxiHOiPzu1fPAI
Hvm/SU+ZoaByoj8sIeudFhr5v1fLgh+3caI/DvnH+DES+b8xraKE4G+iP9Go
ga5oAvm/BJ6C+iRsoj9YCPUZ1uL4v9Tmg8h0ZKI/Z8fb8LCj+L9ekkWRMVSi
P1gzSp6+n/i/gFrwYyNToj9In7hLzJv4vwLRlgsUUqI/KneVpueT+L/HkM7a
8U+iP+4mT1wehPi/+pW1f59Loj92hsLHi2T4vzxrGRrDQqI/hEWpnmYl+L9u
sT5MLTCiP8CLelAfIfi/p6KeVuAuoj/80UsC2Bz4v0Pt6AqSLaI/c17uZUkU
+L8+iIhy8SqiP2J3My0sA/i/JP0OR6Aloj8/qb278eD3v9EEf06+GqI/+gzS
2Hyc978C2skn/gOiP3HU+hKTE/e/uhGk8Z/SoT+WUk9alA/3vwF69rAb0aE/
vNCjoZUL978CgPFYls+hPwbNTDCYA/e/n08IZIjMoT+cxZ5NnfP2v+/dzW5f
xqE/yLZCiKfT9r9j8KGX2bmhPx6Ziv27k/a/8gnCQQCgoT/KXRro5BP2v0F+
A5AnaaE//b6qsDoZ9b+4p4fH7/GgP+Oy8ZFRCfS/0YS5IUhgoD82oQbUjQvz
vzpfiViwlJ8/PCLSLov48b/HXsvZNzSePxx7Dn2M6vC/YnS7JW3BnD/QnDFY
Zt3vv8cYZv8jVJs/z2iz5zW77b/bPVy+srWZP6Yp0ThQveu/KScE/w8kmD8w
mtBwcsnpv2vplw+2jpY/ITA92har57+0qUCUJ8yUP+q6RQUGseW/BwICUZUf
kz8ba7thd4zjv0HQ5lENSJE//soSpfBx4b+8rCD/i+eOP3M/DFRp996/+mqg
AhJ3iz+4M83A9bXav+3t8y+1toc/rxHGsBe91r+i7xWR7zKEP3M6mQM+b9K/
DhODu7FhgD86hV9I6GrMv8BEkEnvQXk/72j8j3+IxL8APmmEUEByP4PEmzo/
+Le/t0p2oGxOZT/WuzzEqgOgv7TefPRLeEw/kjdrtMhpUL++qhSW1i39PsSc
n+E=
        "]], LineBox[CompressedData["
1:eJwBAQT++yFib1JlAgAAAD8AAAACAAAAkjdrtMhpUD++qhSW1i39vuFIWFVu
nrg/38XoFCTiZb/0rz+vGDvEP1F3iaOF+3G/2qUebvHQzD81rTUhlpx5v3tu
u0hVn9I/YiFVW2GMgL9YoC9XnI3WP8fjaCbdCIS/ZofJAt/Q2j8H5l1qe86H
v8OEKyuMy94/YjtErn9Qi79eEeXCFFnhPwuLVHkbvI6/8zrHPuF24z9ZVeWE
XzWRv69vDflicOU/jeD+ZF3okr8Ef+aBYpTnP+NDWf8UuZS/gZkjSReU6T+v
W2vP2GKWv0sEfynEies/UsdVTML6l7+uSW3Y7qntP5aGN9tOqJm/OJq/xc6l
7z9CBLiryCqbv65i0kAW5vA/R9LxNBy7nL9mIFQrQfTxPx1x1d6CLp6/suMH
tUbw8j+dUaOh9HKfv0oUBSaLAfQ/g1MytOFboL92SjQ2qgD1P0KyHpJ05aC/
yajyUsX69T+7uR535F2hv/jHArsC//U/YSh61c1fob8m5xIjQAP2PwxSERC2
YaG/giUz87oL9j9b9nsYg2Whvzyic5OwHPY/FKoGbA9tob+wm/TTmz72P+ZO
VMzwe6G/mI72VHKC9j9YIR3p05ihv2h0+lYfCvc/QsyXlQfPob+tW4cpFA73
P8HUZY+J0KG/8kIU/AgS9z8XPll3CtKhv3sRLqHyGfc/KR2SEAnVob+OrmHr
xSn3P8vMfWD52qG/tejIf2xJ9z8lBA04puahvwJdl6i5iPc/wALE2C79ob9H
RCR7roz3Px46LA6O/qG/jCuxTaOQ9z8pVfAo7P+hvxX6yvKMmPc/ppt4DaUC
or8ol/48YKj3P2AKBYsJCKK/TtFl0QbI9z95/TMcnRKiv5tFNPpTB/g/VEHO
vOwmor+qrVeXvgv4P4yGP7RMKKK/uBV7NCkQ+D8lIu1Aqymiv9blwW7+GPg/
IT2OGGQsor8Qhk/jqCr4Pwpz5rbEMaK/hsZqzP1N+D+LGmBgQTyiv3JHoZ6n
lPg/CoYD8iVQor+Br8Q7Epn4P0o7B+JXUaK/kBfo2Hyd+D8BphhciFKiv63n
LhNSpvg/kk8J7eRUor/oh7yH/Lf4PyH4q3iMWaK/XsjXcFHb+D8Wh9DrlGKi
v20w+w283/g/KmBTVK9jor98mB6rJuT4P4vLiUHIZKK/mWhl5fvs+D8TpcCo
9Waiv9QI81mm/vg/ePQqoT5ror/jcBb3EAP5P8zDHSZNbKK/8tg5lHsH+T/P
KCctWm2ivw+pgM5QEPk/KXYywG9vor8eEaRruxT5Pycuj0t4cKK/LHnHCCYZ
+T9bG7hXf3Givzvh6qWQHfk/nBRb5IRyor9KSQ5D+yH5P1UdJvGIc6K/GIwJ
GQ==
        "]]},
      Annotation[#, "Charting`Private`Tag$106916#1"]& ], 
     TagBox[
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwt1Pk71AkcwHEl0UGSdcY22VXT2ORJ17A+rEeu5EzYLVGEcrYdjn0akSNs
ZAg5G99vaMuktdmUT7VKZEvS5Eo7yTmsMWby/RrZ43n64f28/4MXIzDSI2ix
goKCy3/9fydHNVs5g8YOUZGFzn4SLOoTxCqGNJLJuqx8TxJMGKISLT0aEwwK
9DTdSFCjWygzDRqZrnn0KkcSXlYl3gxZTGNi3cU7yhYk+KjIdAXvKTSLTd46
a0jC0ZY+MZ9HIXdpBEswTECyXXVp8NcU+jJs9LmnCIjumtPIXTOLq5zNg79J
qoS2A3qjH9Z8xDi9R+MjZTz41FTDZ+vKMNIr/nfth1dhsG46x32ZFHPOJc4c
eVEB2yuWdmWtmMFQ7/VHX02Wg+X6zs0Z1DT2W67LbJKUwdp4tZ8yx8VIVXgM
PNAohY5iM5/gt1PI8bjLU/Ishhcht0e2NU5ioKgRzocXAcl8udPtvgj5LyR7
7asKYEtRR1RM6xiqpXMkM6J8YGz5tlfr+gg+3VR1vG9ZHozftVNaemsIJ7SV
/JQcckH/WGPA6cxBDJ+UG4QdyoGFNg1CHC3EedPciRjFi3ACVnqFzg6gVL8w
KT8lAxq2/vlAVt+LvO7OFtOmVKhd/YSvfV+ATJPTEpftyXCCXahoFdmJwW6u
bcJADrDP+zuMhrVj2rc1eXnfxcJUyPzFs2nNOK2ccTjaOgaSmq+wgbqDOSOk
dvTeIBA0WjbXKJbjobA05T1n9oC/ye5PXjmlELWB39zDckahg8++iNIGiBGF
mTLfB6G0Fmp1LJqhp+EfZqU8GnsJw4jpjnZI83sf4FASi/ERjQ77yjpB/sr8
q4osDvqUm+4vzhJA/6Cqme7KZAxObV38rqMXlIxuZ+sLUvGPZBYr89kA+Dyb
XFbon4EHVw890vQVwoXWOD+bNz/jDLvFSnhqEM7JxxZ2ueRgbaQqHRg1BF27
A95mq+XikrPDiYHcEWirthr6RcbFxEIjR23uGHg/HI5NuZePzkvOMpvTRfBS
cWfcybgCvOkY3v139SSID0zxmAeLcGcRPn5OTAHveLTfFUYx3gzstNYaFsP8
JV925/JSDF7nxbKRToPth/HzhqIyrBtUrt8tloD6SSNT7utydNJUMs5YJIWO
pCX8+KcVeMrJfHuNggx6J5xmba5fxdYqicfjORkcEAVJL6XzMOTHOe8vl8/C
LdnWlCdxlXjFznzOU5kCd7+jA93fE1hzY//lphUUXN7Y3/fYn8CGL+LNmeoU
9H9066k7TKBg6GHEgg4FobnsrsxjBKqnuA5WbaKA067aZh1PYMqTsPZPLhTw
rX6tryoiMMa+ovQalwJ1o0VZZ3oITKxtttAopMB7+uSFoLcEZmuPdieUUFCM
46keQgJvjGxe40FSsPGHrnMmYwSOpt5Lnb9DgXXetTN/UQQefPomyr2Pgijl
vUccdEgM3yJXvfeOgt9ePwrYtpbEhALD68YfKJjn7fBfv47EwpCgIfkEBWnW
DL/5DSR2qcz4kgsUlMdKXfk7SByM0ppVV6Rh2D7UpcSCREn3Lm68Mg0mWgNO
F4DEVdWc527qNDTUtdgdsSfRcHXlsUZNGhY4lrbuziSaxLaoGOvSYOt6y9rK
lUQL4TiRbUBDuoGxFcuTxM9+wWe/8F+hZ4yB
        "]]},
      Annotation[#, 
       "Charting`Private`Tag$106916#2"]& ], {}}, {{}, {}, {}, {}}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{Rational[-1, 2] Pi, Rational[1, 2] Pi}, {-0.04363322951891002, 
     0.04363322951891002}}, {{-1.5707963267948966`, 
    1.5707963267948966`}, {-0.04363322951891002, 0.04363322951891002}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.745229821799526*^9, {3.74522987272281*^9, 3.745229877365879*^9}, 
   3.745229966829933*^9},ExpressionUUID->"6c825a75-adf9-4440-a737-\
bb5f7de4b746"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", " ", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{" ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"6", " ", 
            SuperscriptBox["\[Theta]", "2"]}], "+", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Theta]"}], "]"}]}], ")"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}]}], 
       RowBox[{"144", " ", 
        SuperscriptBox["\[Theta]", "2"]}]]}], ",", 
     RowBox[{"-", 
      FractionBox["\[Theta]", "36"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", 
     RowBox[{
      RowBox[{"-", "4"}], 
      RowBox[{"Pi", "/", "3"}]}], ",", " ", 
     RowBox[{"4", 
      RowBox[{"Pi", "/", "3"}]}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.745229730198694*^9, 3.74522977450459*^9}, {
  3.745229804905076*^9, 3.7452298068346024`*^9}, {3.745229885422819*^9, 
  3.745229888217371*^9}},ExpressionUUID->"17efe95d-b034-4531-a230-\
c4309102e0c7"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
T9qnN0Ae/Q/OlqsZ
        "]], LineBox[CompressedData["
1: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
/dVXb0kWCW+NHhjuqWOi6N9+BW5aQ8J/JNLkNg==
        "]]},
      Annotation[#, "Charting`Private`Tag$105852#1"]& ], 
     TagBox[
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwt1Ps31GkcwPFBLjlGD0Uh5dKmC0u5FG09TxepiNKm0JGltdlzMCm1idLJ
bdW6tGbMaUUx6zorTUaGeXy+hFBJLVtCTUjaOgzCGozdPacf3uf9H7zMgyK8
v1dlsVj7/+v/99hVWHvXIYZJaxNEtVAcY3noVnktYpL8zzk3N1Bsaji2eJEU
MQeszNqMGYoDZmxnHlUiRlZ7agoqKX7bWNriKkSMyvCSfdoCigf98kOcsxCz
08N/JOcixSPx12+ZhSGmUWvIudmeYtUuzpKRZYhpvazy1DhHinkcT6OGBl2m
Vve33gzfGlxlZSnrjmAznpZHU1PWVeMC5WZevrkOs83Ea+qMigR37dwRtvS+
NmNYJty1Ae7j7Mv3jOmJhUxKs41DxPVKLLBZ9kF3UpN5H2ugdclDjM9P0wKU
qsEIDDdlxulU4Nf0kcuubeqM0immXq1PhJPlj0csn6sxZMyq82jOXVxv4nTB
8aIqs8Jx6mdbTjluCZFNTNqpMNWVrOGRtDK8lsxatKTOg5azLH0VW4hl+Zqa
Wp9mIbVV46dj4mJsPjBtnYsUMJChsNq8vhDPBIdv4O2YgpmVQXumhAI80SHq
kws+gztFf0h88/B5i9ed+W2j8MLMSIyLcrFLvejjmYPDkPwuh68/fgNz/zl7
xztzCLoMgG3TxcUWZdhOPtoHwj+bgnVfpGPZ1QMGJYHd0H9cEv/pcDJ29Y/O
L554Cr5v7Ft5J2NwjleBurOfGDijfn69iiAMpvGH+gMrcFNE1MstpkFwyy69
Pye0HbNcnPE1m1jw4s5vOzv9Cq+9Pb/JTpEEHx+E7p107Mfa73m8hMUZoNzq
VXmqYwgrI3bbWevzoL0zs+Ur/WEc9+qH7Y+rb4CbX6IwUzaKv+saZlY150LC
0ciHoqTPeKhn3L8G58G6pT1qp8yncEDi7GBcmgB2Twco/xqfxuqKTcV5eoWw
/W89jy7uLI4MsLaqO1kMImXvkSuceYx+OdSzZawUVPTCuk+wVchpof3+ewfK
oFe1xOSlvyq5qtpekH+wHM4kjrvkNqmRiV9z600y78IFvc4rDkbqpP6m+zf6
dSLY+vWDUtNkDVKkk/HMSbMC7NdzBnzkmsSGn10W6iYGvq14dwBZSAyy4z8Y
R1aCpFEjWSLUJobqGkQhvg97g+VjfSwdcn4w+PORgSpgv+WHH/Nkk9iBJPkD
nWq4Jt/fsrZKl/DdXLUCPGuAXnlS0LcAkaWWb2LPRkshcsW7Ex2aiLTKoqNF
l6SwWjJr0aSNSEyO4bnheCmkDq/PLUaIyIw8OSFpUgj0TcniLEekBNEgH4EU
Fti6JSvtESHKG25ObVLweMWEGgcj8mOXj96kOQVW1EsrnRBElmeNsTdaURAv
kr+bO4lI+7ep2uHWFFa4rgx6G46IY3uj2qATBfmdWL+iaERYDx0mO90pZCa4
uDtdR4Rbod8tjqKwx8x74RouIm6RZS9GoynMVYc+NOIjorDd12ETRyFEzt85
dxORwNLLT35PobDZf2pLQzEi6/LkwM2l8GlCVyEWItJz/Jr0mYDC7fTVVYV3
EEk3XSNhl1DQbjrscFWMyAT/uCihgkJtYNhYTBUihT4zZXUSCqdn4svDaxDx
W5JVOldLYQ0vOzywFhHd5xuLnBsofPGLfPEL/gVMdnCH
        "]]},
      Annotation[#, 
       "Charting`Private`Tag$105852#2"]& ], {}}, {{}, {}, {}, {}}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{Rational[-4, 3] Pi, Rational[4, 3] Pi}, {-0.11635527871709339`, 
     0.11635527871709339`}}, {{-4.1887902047863905`, 
    4.1887902047863905`}, {-0.11635527871709339`, 0.11635527871709339`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.745229774953155*^9, 3.745229807495339*^9, 
  3.745229888604624*^9},ExpressionUUID->"23cea0ee-b918-4dc0-9c3e-\
00960b643a97"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Final equations :", "Subsubsection",
 CellChangeTimes->{{3.7452239467123613`*^9, 
  3.7452239681353292`*^9}},ExpressionUUID->"2c14682a-bb2a-479f-a7d2-\
8436c2e82faa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Torque", "[", 
    RowBox[{"\[Theta]_", ",", "\[Alpha]_", ",", "l_"}], "]"}], " ", ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", "\[Theta]", "]"}], "<", 
      RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], ",", "0", ",", " ", 
     RowBox[{
      RowBox[{
       SubsuperscriptBox["\[Integral]", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "l"}], "/", "2"}], 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
        FractionBox[
         RowBox[{"l", " ", 
          RowBox[{"Cot", "[", "\[Alpha]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "2"]], 
       RowBox[{"x", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Tan", "[", "\[Alpha]", "]"}], "x"}], "+", 
          RowBox[{
           RowBox[{"l", "/", "2"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], 
              RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "-", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ")"}]}], "  ", "-", 
          RowBox[{
           RowBox[{"Tan", "[", "\[Theta]", "]"}], "x"}]}], ")"}], 
        RowBox[{"\[DifferentialD]", "x"}]}]}], "+", "\[IndentingNewLine]", 
      " ", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", 
        FractionBox[
         RowBox[{"l", " ", 
          RowBox[{"Cot", "[", "\[Alpha]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "2"], 
        RowBox[{
         RowBox[{"l", "/", "2"}], 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}]], 
       RowBox[{"x", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "x"}], "+", 
          RowBox[{
           RowBox[{"l", "/", "2"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], 
              RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "+", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ")"}]}], "-", 
          RowBox[{
           RowBox[{"Tan", "[", "\[Theta]", "]"}], "x"}]}], ")"}], 
        RowBox[{"\[DifferentialD]", "x"}]}]}]}]}], "]"}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", "  ", "\[IndentingNewLine]", "  ", 
   RowBox[{
    RowBox[{"sec", 
     RowBox[{"(", "z", ")"}]}], "\[LongEqual]", 
    RowBox[{
     RowBox[{"1", "/", "cos"}], 
     RowBox[{"(", "z", ")"}], " ", "\[IndentingNewLine]", 
     FormBox[
      RowBox[{
       RowBox[{"csc", "(", "z", ")"}], "\[LongEqual]", 
       RowBox[{"1", "/", 
        RowBox[{
         RowBox[{"sin", "(", "z", ")"}], "."}]}]}],
      TraditionalForm]}]}], "\[IndentingNewLine]", " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"torque", " ", "equation", " ", "evaluated"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"torqAOR", "[", 
   RowBox[{"\[Theta]_", ",", "\[Alpha]_", ",", "l_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", "\[Theta]", "]"}], "<", "\[Alpha]"}], ",", " ", 
    RowBox[{
     SuperscriptBox["l", "3"], 
     FractionBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"2", "\[Alpha]"}], "]"}], "-", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", "\[Theta]"}], "]"}]}], ")"}], 
      RowBox[{"48", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Alpha]", "]"}], "2"]}]], 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Force", "[", 
   RowBox[{"\[Theta]_", ",", "\[Alpha]_", ",", "l_"}], "]"}], " ", ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "<", 
     RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], ",", "0", ",", " ", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      SubsuperscriptBox["\[Integral]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "l"}], "/", "2"}], 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
       FractionBox[
        RowBox[{"l", " ", 
         RowBox[{"Cot", "[", "\[Alpha]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "2"]], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Tan", "[", "\[Alpha]", "]"}], "x"}], "+", 
         RowBox[{
          RowBox[{"l", "/", "2"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "-", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ")"}]}], "  ", "-", 
         RowBox[{
          RowBox[{"Tan", "[", "\[Theta]", "]"}], "x"}]}], ")"}], 
       RowBox[{"\[DifferentialD]", "x"}]}]}], "+", "\[IndentingNewLine]", " ", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", 
       FractionBox[
        RowBox[{"l", " ", 
         RowBox[{"Cot", "[", "\[Alpha]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "2"], 
       RowBox[{
        RowBox[{"l", "/", "2"}], 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}]], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "x"}], "+", 
         RowBox[{
          RowBox[{"l", "/", "2"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "+", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"Tan", "[", "\[Theta]", "]"}], "x"}]}], ")"}], 
       RowBox[{"\[DifferentialD]", "x"}]}]}]}]}], "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.687560664406056*^9, 3.6875607044353027`*^9}, {
   3.687560788023061*^9, 3.687560826163909*^9}, {3.687560874292574*^9, 
   3.687560898291823*^9}, {3.687561215135357*^9, 3.687561217417838*^9}, {
   3.687561303196602*^9, 3.687561304110153*^9}, {3.6875613972576847`*^9, 
   3.687561454760153*^9}, {3.687561503273973*^9, 3.687561519176944*^9}, {
   3.687561640600293*^9, 3.687561649905732*^9}, 3.687608620067401*^9, {
   3.7113644842708397`*^9, 3.711364498278039*^9}, 3.7452234737934637`*^9, {
   3.745223887309059*^9, 3.745223911551332*^9}, 3.7452293191171713`*^9, {
   3.745229494686037*^9, 
   3.7452294989448557`*^9}},ExpressionUUID->"772540df-0c6c-4bcd-a3ae-\
e5e1c5950b63"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"aDeg", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "5", ",", "15", ",", "30", ",", "45", ",", "60", ",", "75", ",", "85"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"aorP", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"torqAOR", "[", 
        RowBox[{
         RowBox[{"\[Theta]", 
          FractionBox["\[Pi]", "180"]}], ",", 
         RowBox[{
          RowBox[{
          "aDeg", " ", "\[LeftDoubleBracket]", "n", "\[RightDoubleBracket]"}], 
          FractionBox["\[Pi]", "180"]}], ",", "1"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", 
         RowBox[{"Length", "[", "aDeg", " ", "]"}]}], "}"}]}], "]"}], "]"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", 
      RowBox[{"-", "75"}], ",", "75"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          RowBox[{
          "\"\<\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]\>\"", 
           ",", "a"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", "aDeg"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"Left", ",", ".2"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Theta] (\[Degree])\>\"", ",", 
       "\"\<Torque (N\[CenterDot]m)\>\""}], "}"}]}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"Prolog", "\[Rule]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Theta]max", "=", 
         FractionBox[
          SqrtBox[
           SuperscriptBox[
            RowBox[{"Sin", "[", 
             FractionBox["\[Pi]", "2"], "]"}], "2"]], 
          SqrtBox["3"]]}], "}"}], " ", ",", 
       RowBox[{"{", 
        RowBox[{"Thin", ",", "Red", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[Theta]max"}], 
               FractionBox["180", "\[Pi]"]}], " ", ",", 
              RowBox[{"-", 
               RowBox[{"torqAOR", "[", 
                RowBox[{"\[Theta]max", ",", 
                 FractionBox["\[Pi]", "2"], ",", "1"}], "]"}]}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\[Theta]max", 
               FractionBox["180", "\[Pi]"]}], " ", ",", 
              RowBox[{"torqAOR", "[", 
               RowBox[{"\[Theta]max", ",", 
                FractionBox["\[Pi]", "2"], ",", "1"}], "]"}]}], "}"}]}], 
           "\[IndentingNewLine]", "}"}], "]"}]}], "}"}]}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Epilog", "\[Rule]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "\[Theta]max", "}"}], " ", ",", 
       RowBox[{"{", 
        RowBox[{"Table", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]max", "=", 
            FractionBox[
             SqrtBox[
              SuperscriptBox[
               RowBox[{"Sin", "[", 
                RowBox[{
                 RowBox[{
                 "aDeg", " ", "\[LeftDoubleBracket]", "n", 
                  "\[RightDoubleBracket]"}], 
                 FractionBox["\[Pi]", "180"]}], "]"}], "2"]], 
             SqrtBox["3"]]}], ";", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Point", "[", 
              RowBox[{"{", "  ", 
               RowBox[{
                RowBox[{"\[Theta]max", 
                 FractionBox["180", "\[Pi]"]}], " ", ",", "   ", 
                RowBox[{"torqAOR", "[", 
                 RowBox[{"\[Theta]max", ",", 
                  RowBox[{
                   RowBox[{
                   "aDeg", " ", "\[LeftDoubleBracket]", "n", 
                    "\[RightDoubleBracket]"}], 
                   FractionBox["\[Pi]", "180"]}], ",", "1"}], "]"}]}], "}"}], 
              "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Point", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "\[Theta]max"}], 
                 FractionBox["180", "\[Pi]"]}], " ", ",", 
                RowBox[{"-", 
                 RowBox[{"torqAOR", "[", 
                  RowBox[{"\[Theta]max", ",", 
                   RowBox[{
                    RowBox[{
                    "aDeg", " ", "\[LeftDoubleBracket]", "n", 
                    "\[RightDoubleBracket]"}], 
                    FractionBox["\[Pi]", "180"]}], ",", "1"}], "]"}]}]}], 
               "}"}], "]"}]}], "\[IndentingNewLine]", "}"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", "aDeg", " ", "]"}]}], "}"}]}], "]"}], 
        "}"}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{"\"\<../pictures/pdf/AngleOfReposeTorque.pdf\>\"", ",", "%"}], 
     "]"}], ";"}], "*)"}]}]}], "Input",
 CellChangeTimes->{
  3.687559813922858*^9, {3.6875598458335657`*^9, 3.68755986165352*^9}, {
   3.6875599898784924`*^9, 3.687559991319036*^9}, {3.687560025601347*^9, 
   3.68756007779023*^9}, {3.687560109254374*^9, 3.6875601171027327`*^9}, {
   3.687560479467846*^9, 3.6875605654545794`*^9}, {3.687560838776292*^9, 
   3.687560847684104*^9}, {3.687560901407469*^9, 3.687560902254848*^9}, {
   3.687561542970385*^9, 3.687561553559671*^9}, {3.687561599783189*^9, 
   3.6875616201068373`*^9}, {3.687562738376577*^9, 3.687562745841164*^9}, {
   3.687605244470797*^9, 3.687605248857699*^9}, {3.687606313778514*^9, 
   3.687606327910445*^9}, {3.687607726330922*^9, 3.687607732088462*^9}, {
   3.687607850913663*^9, 3.687607851661406*^9}, 3.70834838182583*^9, {
   3.7083484118455667`*^9, 3.708348429041971*^9}, {3.708348520575204*^9, 
   3.708348545183717*^9}, {3.708348592002592*^9, 3.708348592369258*^9}, {
   3.708348636236888*^9, 3.708348636562923*^9}, 3.70834872473627*^9, {
   3.708358438393402*^9, 3.708358444471035*^9}, {3.711269546096553*^9, 
   3.711269549210865*^9}, 3.711272060151841*^9, 3.711364466750182*^9, {
   3.7377904434132757`*^9, 3.737790515435232*^9}, {3.745223082072901*^9, 
   3.745223110862434*^9}, {3.7452233497202387`*^9, 
   3.745223410651908*^9}},ExpressionUUID->"d1079389-4360-4b9d-b7f0-\
ba0031de1f26"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAGIQzcqp+fn//qADDFCgIXLUlG8vgu8ln1ghswvB7zOd
+ddiC4IvlsTJUbQCSf/ulzJPJiDpz13ldiIRwZ9wUXvWBGYEf8s7pfnu5oFw
/sSqn64dFQFwvoXeoVm81f5wPgT4wfmNAlWp4U994XzrCx+Kt2T5wPnqlgF2
cRe84PyCwxdPNtt6wvla2kIz9xx1RzW/wQ3hPxtrFSc9BL9ES/nzrY0ucL6e
lW7zextnOF/qs/z5gBWOcH5558W4o3oOaO63g/P5Jl0P4dW2hfOfBQfktbNb
wfkLLrjxa0iZw/n75/NpJL01hvMPaoacOPTNAM18PTjfn+fagcpGbTi/16vn
a4yxKpyv8Le6SGqxHML++WI9ogUI/lqnjUsFbBF8q45nN9iuy8L5wcKB9p+5
EPw2TTWeM0XScP7b0AtLa50k4PwtP7L2V/Aj+FWzWW8W3xGH89keWvFklSH4
CjlLi8JWicH5IU1V9vpConC+lKpopNZ9ETj/4fH1RaprEPw83qdLpd0QfJNr
7cd+GSD4AOYqpyU=
          "]], LineBox[CompressedData["
1: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
/+UN9A/SJgZb
          "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGBwBWIQbXKt/dgvAxEHBijg2djxVn8qgj/jb8znsiMIvrKX
4c+9nxF8q8c3WXyCROH8Y/rruCY3IviBNU0CtzYg+Bmi2jIZ/GJw/jT3GuOW
Mwj+p9VySXvcJOD8uh+f0pnLEHxO1+O5XksRfIV7+ZU3mCXhfD+BgxO+HEDw
V5Yk79exlobzE2xXyMzVl4Pzj5b877qVhOBrrQn7KT4Nwf8ixXpt0h8Ev/NH
Yn/HSXk4/+ZNXsZdGxXgfKapx4uXeivB+aHc1pE19aoI/UUz5a1PasP5EKAH
5/8xrMsOu2wA5/tHxJ0vZTSB8w8cPrA676cZnF/x5h5rwSNLOP/0Ie0X17ls
0cy3g/Ot7/1ykvxrD+cvDv4zKWG6I5y/I2qPg6KoM5xf6BClm9btAud/r+GP
i1N0QzW/AcHnucPq7TzHHc5/N1G45raZJ5xfovb/9feTXnB+511tCUYnHzg/
53V+x96bvmju94Pz70p/3ZIW5g/nV4rqCJxKDYDzszxeplsZBCL8x3NcVvEt
gj9liszMnA8IfptMkciOzwh+lo4st/8vBN/Ap/hHDXsQnL+nW/7yDUUE/wpX
RceEMAT/2KSzzHciEfztUsr16rEI/iytc6X7khH8BC+V5DcFCP6bzgu2Ht0I
/j1BtZ2T+xD88zOrTe5PRPA3rVTTLpuB4FecrJFYshTBzwq8NPn9CgQ/+qY6
v/UaBN/u5SXWS5sQfINCjUbZbQi+0s/aPxk7EXyRxsvlW/Yg+Kycmp//70fw
AaVW4u4=
          "]]},
        Annotation[#, "Charting`Private`Tag$97256#1"]& ], 
       TagBox[
        {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQzcqp+fn//qADDFCgIXLUlG8vgu8ln1ghswvB7zOd
+ddiC4IvlsTJUbQCSf/ulzJPJiDpz13ldiIRwZ9wUXvWBGYEf8s7pfnu5oFw
/sSqn64dFQFwvoXeoVm81f5wPgT4wfmNAlWp4U994XzrCx+Kt2T5wPnqlgF2
cRe84PyCwxdPNtt6wvla2kIz9xx1RzW/wQ3hPxtrFSc9BL9ES/nzrY0ucL6e
lW7zextnOF/qs/z5gBWOcH5558W4o3oOaO63g/P5Jl0P4dW2hfOfBQfktbNb
wfkLLrjxa0iZw/n75/NpJL01hvMPaoacOPTNAM43at2y4dVLBH/JA5GZQncR
/I7pVzOTDiP4fqzh3EwTEPxbDyL9HDUR/Bf6+1fUb9eD808/q688PxfBXzfX
wUu+BcEv5T70el8Agh9xqGkPnzmCb1Pp3Bsni+BLvXZOrpVA8AF5V5P0
          "]], 
         LineBox[CompressedData["
1:eJwtl3k0Fdrbx82ZM4djOOc4x3A4CaUi9q7boJI5yZA5HJyzKVKUECWK6lam
SoUkkSG5kr25FRnK7ZYMqRRKSjJFLt7zrvX7Y6+9vn88z/5+1nqeZ6+H5sdz
ChQSEBBY4J//v4eV6vMSP7NJ/GvSIJwqD4auJC/t6mQTw7jwCW8BGmhx2dp5
pYZNfh/9EeIkzgIZTc0RVklsEpNTn8L7ugZoXG2tjtNgk8Aq58SzWX+AJZe0
5HYhNsluuG5xqmoL+Chl66oxYkSSWkJdFlu2gduHO349vG9EhLnMIe6nncB8
d6fFvJ0RMZWlOu4fdQT20l3kcIIh+Tkt5Mn12gtshop3bQw2JBVJqCnP0h3A
hthecXtDUskdq4UrPIApok1d1jAkNtk5feNPPYHKqzC9mgcs8uL19ghFER/w
Llf47MR3A9JxT+pmq4Q/eHOwS73ulQEJQkkcgUB/0Lnr9q2EhwbkbOKynQLY
HzQt2TXKpRqQzNdW0I8XAIr8c6ZWMgxIlwc7trUxEHANTTxC3fVJT7W/kuTK
YBAkIvLFdKM+sShb831PdDDw6e86+FtPnzw+1Pwk/lEwcMqIO5s6rUfufspM
8rUJAeaTzY23MvXIrhT3slQHDjBuz7HjHdIj764MLfydwQH6heF95vv0SNNr
q+gPHRygvkdx+omhHlGcMRJ4vDUULNbt0x98qku2CvdxnQzDwK8LJvfv3NUl
KTv7Zup8w8B4mMimA3/qEj8b40mZy2Hgo1aJh5CfLnmQlh1zaDEMPE2cPktd
YJKH9r9o0SQcYI8WypdPTKL8Irjafiwc1K7OLS5vZZK7gKWvQeGCkmHYZJ3F
JPpK/0yei+CCMzvSpz3NmOSG9qY5WQUe2CefW/OawiQz3VmJ1DU8sLL79iE7
ESY5x7u6xn4PDzwPbJ4DrxnEgDqbtSybB64addXVPmKQozV7JS/U8gB3cjDW
pIhBzgWc0ANveEA2QWiRfohBRlxLoxbFEXi3TR7nejNI2MFFlvgKBMpkqceV
bBhkwMv4900GAnZ5VkJiagzy2olResEagbMPYsRG6nRIp7jaS+9wBPYdO9ns
e1OHHJnsaxGLQWDllkunetN0yLkbEpw/EhF4/rJKst1Th1g82Xgo/iICV7Ob
2jZv0SE5ZqnP4q8iwPX5J/0RW4cU/a4+v+IWArJjY7Lli3Rid1/FbfkDvr/q
hRd6n+mkSP6LJWrg+4uVPpf/gk6MzV8Fcp4gcGwTxUmtlk4cXirtWGzj+5Vg
KZ7PpxNPrqyX0UsEtDrXvZJMpRMbCwfF6TcIjF3adjEpgk4uvr0w4NbP52EE
rojaRCf1+3uzJ4f5PKMHur+z6OS7sQ7XcJTPU5mYvV+RTtYaz60U+IHAYsw5
9/fzNFIS/dkxcoLPB/IpboM0or7/hm3iNJ9PrPxtZzuN+B5ednHVLJ+v49GV
7fdppFxF8/rR3whY/9m+r+kKjVR6KnwO+Y/P69GnbZlCI/fHrfunF/i8tK8f
qrg00t1O/01b4vN+mb1utIdGPsjsrx7j62Ply/wLAY24NXYnegpEALtoFYaW
Po3srYp8G8rXWlbMoUtyNJK4wXmdJl+PCa8uWj5HJZeWN8pE8OMbWjcFnRqg
kj3LWK+CFhHIOOeoL9hKJapTdGEh/vs+bj4jhyupJCokSAHOI7BKm1cykUMl
tWk9h+lzCAgMHw0NTaKSI/0JFbdnEOgsTTcaDKWSCekMk65JBPIP5H73dKES
1Lg7sngcAWRRUvZ6A5XkBzt8o35HAAr+xbNjUkmzsLYqHEFArqV5VbMMlUhO
p3DFhhAgmnc/xX/TJintkcEHP/D93GkNjHikTfyVJ46d7uPnfyrKcfHWJlH9
+cP3Ovn5XHS+bVmlTXgZRaymVgQ+DEDuWkFtQq0cRUcfI0BdiI1Uv6lFpIfD
RydrEBi+ppKujLTIitGdV5eXI3B3U0WhnJUW8b6QlNxShIDFqeFusTea5FLR
Jx8lfr0KGCZMCBZoEitO9JniNASedlCkF5AmUf9i7v02AQFnRUcwKalJkim0
QCa/H9RrRt3G3miQQxtW/Wvpx/fjlhI5UqBBPJ3Xuk+5IhB29WHhe2sNcgTM
6NsBBFIMdKXbIylkqrZUqkYKAdt2wmwGFHLk3h7R/nkeUOR5gCZpCunyzxLN
e88D+dWZkbVF6iRi33UziUIeqAPz3QW9auRhxfiKv/V44PvuzsKjm1RJorXo
rXYZLqie5eCY5aok9izDufpzODiSK9pz4O0Kkk09rbDIn09iAxbSnOgVhH4j
vKs+IhxQwwojXUtUyAUrk5eS7WHAJfEIMFZQJq7ZJ06LBIYCdabyXtZ7JcK7
R3UrXBMKBprLI5mlSqSr7crJetFQwJUZKqRsVSJrilINnAs44GSWvbT4EUUi
97PTZUtfCKgrY/R8GJAnpukRc54mwWAle62HdaU8iYjc0Hl3IQjcvLO9PzdR
nthePJyW9SwIpBdzB1x15Mmagdgh4BME9t2oHWkPkCO5Ha6lk6f2AzGj7KmI
FzIkJq/N9G1LAMj6/cWc3reM3FKJjtKS9AXRxvKHRId+Ya5ubUlcniM4uMrI
SeD5DKg5sNX7xUsH7P6Pp1RR1i9wOHp2755AR7wx8szjnf6z4M7dQ0Xnfjli
2eox88uzc4A5cfO5AsUZ31pbQVmpswAMRYayFr1243Dt3Al2vSB0yHHPMP9n
L87XpdZ7yIvDkykf+N+4L1Y8VJtVFi0OC36wvEJ4vjil2SFK8K04nOQUWC3d
88XhwQkrbxVJwM2gTHONmR+2KPmYP2EpBfenFfoXmvnjf9mFyan7ZWFAHOqP
0QnESeoXb/V5KcBLrLTC+fvBWDYo5C79jALcMRll9vJzMM6psqoKqVeAU06E
A9RC8D3b4YZf6oowueD4w54jIfjdsbVdit2KkL765/qf6zjY4lOPiK2TMpT3
bhx6ei0UPzUuk7yQoAwf1il5n2kNxY5xiXK995RhZhcw7p0KxcHKhhrBy1Xg
8lfmT4VswvClbXFmJ9pVYKH/45gDX8LwxB0tv/qtqnCwZmJ8XI6Lj81OBAlH
q8K1Ft8KbppxscSW5vAdharQ6VpyZvtuLqa+4x3uFlaDmQZRskezuNhOrjFz
iqjB+PUWFRtW8HCv58VLluNqcF/DOaPkNTwceDskL1FbHW4o2zVk6czDcZsU
iuWOqUPVAheV8XQevn3QHxtZUuDPnh8P9szx8OrGtU8OcCjwwe9lxrESCBMZ
6ba6bAocl/C6s6CMcFdRdZfNLAVK74jXU1+JsN/kqbcZehqQ9jbSsGo9wt+B
18cuVw34NW/WZ2EzwiI9omMB9zVg1cQBzk13hDOZvZN3BjVgpmLOH4sBCFMi
y+YmFDWh9VCVmzgPYVOpPaIJkZqQuS97k34iwj5WxRpXjLVgxdBlXmoBwk8O
Lp3u9dOC82XX0idLEWaVus6tuKQFr0FPw9/VCE+pi3ad/08LspoGonv/Rniv
k+fmTmNtuJJ99UtlK8INqVWVMv7aUGxqJpD5D8Kps74Zp55pQ5Hus8u73iI8
ZvzXwpP/tGGxtquQ4keES8zEawRVqfBMdeuZz8MIe74wC883ocKePyuUnUcR
Xh7qzQA7qTCzT3jR5QfCTWJpff0BVOgu+6Pk2wTCB2/UnI87RoUxoa+Pq80g
rGv9cTsliwrd1toN9s4i3NMjI1hXQYU7JHUtVs0jnB61vtatjQonNb0/qy4g
bC0fyPs1SIV/5Zg4/rmI8M/STN1Li1RoOCTVf30J4QKb+v7VqjSoNXp+HApE
YNfBz3/+a0KDo+jGT8TXEscVbSN30mD4vl1bTfi6ngKE5QNpcEDqnUsCP577
gFNXfowGe852Jfnw81OdL0XYZdHgmNjP9c//Q/jfsUb97xU06PlV+92z3win
nP7+Pq2NBjOczr5x4vtfp6t2mTVEg3ds8s8ETyP8tXGz3bNFGnwoPxkkyee/
4oVEg1XpUC7W6/naMYQd5nLrxUzpcIfuuP74CMJCF5sPFO6kw7jX0+9NhxCu
XjXJ2hxIh0s1kx5L7xEOatf6+PEYHXpW3Bbd3YuwevCO7IQsOhwtU9hq9grh
duFoB2olHV4YCUjJ7kA4/tr1ZbiNDrXMFVadfMqvJ8uOBq8hOvxo31I634Dw
5UgGO1dVB1ZSzJqjyxDeIeswuN5UB3JDItbHFSL83+3Y3O6dOrDFsV1PLI9f
3wMvJVTidaAXM51ReBJhpaOLpDpLB67LCZT4Kw7hZlVWjHOlDlRz2rLCPgJh
I4eE4cwhHWjIK/NackP43WjpFeMlHTh6NZ+raovwuZPdLs9VGVDfMnRvhTXC
Mw3Gf0vZMuDSB2XkQ0e42N3jSEkgA45beEZHKSLsMZNisj2eARPX2EiJi/D7
kf3uWkolA3r3bTfZ1szDkc8k9jDbGfAMT7TPtZCHmYFrZB8PMeDD3EZFr0Qe
Pp2XHieoxoQBNy7ftlnPw7ulLPfGxTOh9qRHc1wOF0+ccHG5mcWEL2QGykcQ
F59dDLdvrWBCI5tiFbutXNzyM3+L6iATOl24xpj7Ho43dIuZVtvoQv93WU/q
VoXjHkcqu89XF85vo1OfLobh6Lb1+kKxurA1yuocaQvD5Q1hWg53daF780T6
Mb8wTC98KflNXg9uvlnzXjApFGOtb6KKhnrw8becD8E2odgzS1TQYrMezElQ
raiRDsUX09b9OhmtByc+Od4SOs/B4pFXP+n06cGvplnOICME/7Dm1HsU6ENW
8v4nwc5BOL026UHiI33I2aDV3yQWhPVNr1Te7tKHHRuL8yZr92M/ZmfxL3ED
eELkoMZrtf24S8r84oVwA3jhKC0+riMA13cLctvMWfDZZuvyhHlf/vyghEzY
s6BwQnVyZ64vnmlbHaAWwoLOX2Y4wxa+2BgHuQflsmD8v+8y/KN88I3Cjq3C
AoYwJDzLVv6BF06NzNa2fGYIlTab6bm+ccV2i9HD9z4Ywt75iIdZS7ux0mmX
u7qzhrCrnNmRz9yN868vt1TQM4It2mMH5jnOuKYz2XXkhBFUP65/3e++PY7z
9Nf0zjOCGZPyl78N7MKbvsDBV1VGcB+1a3BEwhZ3LM1HkI9GcK1uYK+prQ0e
XBl55jJkw43+yr2l2RCX1Nm7yLixIUdt0UPgDyuMtrIpSTw2fNC3wdd7+3o8
7/WlmHuVDWGPfYGxhQkmI094g/fZULFFY5a1nYVTom6au3ewoUGbTut6KTq2
FUxYeDHIhltUw7sFohTx//Z3+L/9Hf8f67d+mQ==
          "]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCwBWIQLfXaOblWQs+BAQpSDL5LLHdC8DX3XLkvE4Xgv3Pf
tGxSIYK/5XJ/Lkcngu/w2uv35+0IPlu5xqHM8wj+GSa2zvvPEPxwqYNip0X1
4fw8T3OjRcUI/rnLE01WiBvA+X8M67LDLiP4UzfxvuR7gODrGc9NO/4GwU80
2ZNowWYI5x8z+xUuZYngT7Quc7k3D8FXc82TTcsygvP9I+LOlzKawPkHDh9Y
nffTDM6veHOPteCRJZx/+pD2i+tctnA+BNjB+db3fjlJ/rWH8xcH/5mUMN0R
zt8RtcdBUdQZzi90iNJN63aB87/X8MfFKbqhmt+A4PPcYfV2nuMO57+bKFxz
28wTzi9R+//6+0kvOL/zrrYEo5MPnJ/zOr9j701fNPf7wfl3pb9uSQvzh/Mr
RXUETqUGwPlZHi/TrQwCEf7jOS6r+BbBnzJFZmbOBwS/TaZIZMdnBD9LR5bb
/xeCb+BT/KOGPQjO39Mtf/mGIoJ/hauiY0IYgn9s0lnmO5EI/nYp5Xr1WAR/
lta50n3JCH6Cl0rymwIE/03nBVuPbgT/nqDazsl9CP75mdUm9yci+JtWqmmX
zUDwK07WSCxZiuBnBV6a/H4Fgh99U53feg2Cb/fyEuulTQi+QaFGo+w2BF/p
Z+2fjJ0Ivkjj5fItexB8Vk7Nz//3I/gAnAjKOA==
          "]]},
        Annotation[#, "Charting`Private`Tag$97256#2"]& ], 
       TagBox[
        {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQB2IQzcqp+fn//qADDFCgIXLUlG8vgu8ln1ghswvB7zOd
+ddiC4IvlsTJUbQCSf/ulzJPJiDpz13ldiIRwZ9wUXvWBGYEf8s7pfnu5oFw
/sSqn64dFQFwvoXeoVm81f5wPgT4wfmNAlWp4U994XzrCx+Kt2T5wPnqlgF2
cRe84PyCwxdPNtt6wvla2kIz9xx1RzW/wQ3hPxtrFSc9BL9ES/nzrY0ucL6e
lW7zextnOF/qs/z5gBWOcH5558W4o3oOcH7Zp//JCRoIfkm0XuZvRQS/QLe7
2FAUwb+0qFPA+rs9nL/NqCD59QQEvy7IltPniB2cX6UyS7hpO4Jf/u2b7I5V
CH7BrA1GKhMR/KRHyjF/YhH8uC0NaUaBCH50292CDBcEP0RreusVLQQ/4M/n
fi45BN/3XMAsB0EEv/frwo12PAg+ABV1j3g=
          "]], LineBox[CompressedData["
1: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
/R+UiSLE
          "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwB2IQ3ft14UY7HjsHBigQzbXM2qCK4DetXJJfaYjgf3jK
X+pki+CfiXtWfyUEwW8OmDz1RzOS+p5/sw72I/hxJzMXdM1G8K2cHFbLbEbw
Pxq/PeDwCMGPF3d/0+FgD+db3/vlJPkXwd+Q5fzxPYsDnO+UxukYzI3gp8VO
fSApgeCv814rv9wQwbfXuDv3YAqCn/DQZta3Uwj+4uA/kxKmO8L5O6L2OCiK
OsP5hQ5RumndLnD+9xr+uDhFNzgfDBoQfJ47rN7Oc9zh/HcThWtum3nC+SVq
/19/P+kF53fe1ZZgdPKB83Ne53fsvemLaj6DH5x/V/rrlrQwfzi/UlRH4FRq
AJyf5fEy3cogEOE/nuOyim8R/ClTZGbmfEDw22SKRHZ8RvCzdGS5/X8h+AY+
xT9q2IPg/D3d8pdvKCL4V7gqOiaEIfjHJp1lvhOJ4G+XUq5Xj0XwZ2mdK92X
jOAneKkkvylA8N90XrD16Ebw7wmq7Zzch+Cfn1ltcn8igr9ppZp22QwEv+Jk
jcSSpQh+VuClye9XIPjRN9X5rdcg+HYvL7Fe2oTgGxRqNMpuQ/CVftb+ydiJ
4Is0Xi7fsgfBZ+XU/Px/P4IPAP64uss=
          "]]},
        Annotation[#, "Charting`Private`Tag$97256#3"]& ], 
       TagBox[
        {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQzcqp+fn//qADDFCgIXLUlG8vgu8ln1ghswvB7zOd
+ddiC4IvlsTJUbQCSf/ulzJPJiDpz13ldiIRwZ9wUXvWBGYEf8s7pfnu5oFw
/sSqn64dFQFwvoXeoVm81f5wPgT4wfmNAlWp4U994XzrCx+Kt2T5wPnqlgF2
cRe84PyCwxdPNtt6wvla2kIz9xx1h/Pzztutj9uP4G8qzj7KsBPBt9xz5KPL
GgTfw7fc6+wkBD81/87vu/EI/oLNy+L+/3SD85+EXy5Z+BnB1/jzv8v5LYK/
3iVye/sDBH/fVW4BgeMI/u3vBQcVpiD4cnPmXj/Ui+AnOZx6m9KO4B//dSFC
vg3BBwDYH36N
          "]], LineBox[CompressedData["
1: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
3/8Y+L//Mej/AFetPes=
          "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGDQB2IQffzXhQj5NjcHBihYVyXz4uh0BH/+g9dmJesR/KY1
XVcu3EPw/7XaZex5guBXxX/6vfwVgl8sFKVc/w3BT6nQLNLlc4fz3V1O8HfZ
Ivg8d1i9necg+E+ETq1euwjB3+3ZxyOxEsHP2i527s1WBP/EJPXAaecR/BZP
z/CXTB5w/t9tPcn9mQj+u4nCNbfNPOH8ErX/r7+f9ILzO+9qSzA6+cD5Oa/z
O/be9IXzIcAPzr8r/XVLWpg/nF8pqiNwKjUA4V6Pl+lWBoFw/mKe47KKbxH8
KVNkZuZ8QPDbZIpEdnxG8LN0ZLn9fyH4Bj7FP2rYg+D8Pd3yl28oIvhXuCo6
JoQh+McmnWW+E4ngb5dSrlePRfBnaZ0r3ZeM4Cd4qSS/KUDw33ResPXoRvDv
CartnNyH4J+fWW1yfyKCv2mlmnbZDAS/4mSNxJKlCH5W4KXJ71cg+NE31fmt
1yD4di8vsV7ahOAbFGo0ym5D8JV+1v7J2IngizReLt+yB8Fn5dT8/H8/gg8A
UzOmmA==
          "]]},
        Annotation[#, "Charting`Private`Tag$97256#4"]& ], 
       TagBox[
        {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQzcqp+fn//qADDFCgIXLUlG8vgu8ln1ghswvB7zOd
+ddiC4IvlsTJUbQCSf/ulzJPJiDpz13ldiIRwZ9wUXvWBGYEf8s7pfnu5oFw
/sSqn64dFQFwvoXeoVm81f5w/kHetwe3lSD4Xm/FX8bnIfgxa3LNNyUi+I1a
klfCPBD8U2oFvAtEkdTLyzUYbfCD85/+81h+eyWCn3ev+FzLYgS/Ye5JmevT
EPyl0qU7q2sR/HfiZz4d8ULwy79/k8xzQfAZris6itsh+MLTyvszDRF8CxFl
HT4JBP/gZ9/g7YIIvtfliqoEbgT/+K8LEfJsCD4AYdpwJQ==
          "]], 
         LineBox[CompressedData["
1:eJwtmXk0Vd0bx1GSikwhZZ5uRGauO+xtrOSGMqbMZKqEpJTKfO85SBneFFGS
ZCZJZe8SzUUTRZE3MkSkDGn4nXet319nfdY5a+9nf5/vfvaz11H227ctUICP
j+8CPx/ff0+64IbL/fMcrHL12/sSpgDY66QmI/iNg6cfmKiavJACJ8QOB7oN
cvBfHYNbfO9UwfGx+rfhfRw8KX3dtNWCBuLbxzkJbzlYxveG/5Er68GRI74m
lU85eDVnaHHQLQMQO7xJaFEjB7fwVZ11JxggAstcqUrhYId4GYWU07bAK+La
F0EaB3uMHPo5KekMGB2TUQ2h9njmYrL6SLsf0KQ7sr067HB1GfD2L44EEa2d
DxNZm7HZW+9bKgZxQEtb4sytto24cSrk8xarE0CayVCz1LXFIvsXtcL2JNDR
E5PqSLPFzRcYDc4vkgA3rm7US8UWS/juzPb5kAR+Na+rjZO2xeV51aI+M0lg
gC7LvvbHBlfYXAv5rZ4Mqkx/uNGe2+CUTT4NlYnJwMawmhCNsMFP16fIt5ml
gD8vRifWhtpgTf7zCs+sUkBTpMY27QAbfPtN3LFnW1OAVl2B7CZ3G5yzI9bh
WkAKENMnL52ANnjtgblauZMpoFc3BH0Xs8HZ/wh2w8EUEK2lOv2u1hq/2LRK
8kNaKqjf5m8jVGGN44GNxplTqeDb4Yt5hqXW+J3Amcgt51JBxGNVJplvjUtt
2WU51akgLFwtmZVojetumKri16nAr0pdpsjZGtvfPQBDldKAkwGNEThrhePN
WcsXqtLAyR3B6VlTVjhAzDUp93oaeJZQ1nd7zAorzcc9pOE0YP+SliTdb4Wb
Dule1e9MA5ui1z29/8AKG74vj3r1LQ3ARi1vrXwrvL/WzMfTiAt0zXUSvzKt
cJ3inzyPGi6QENy1tMDECpea6S6ENHHBzHMy3U7PCvvSN8vuw1xwO/BL3iVV
K7zO2DjSrYML7LOuVngus8JnHautir5yQcjwujf3uyzx9evP/Feu54GSXI11
RZGW+FVR0yv7czyQ5utaxQm3xLO/3JdMXOCB8PUphguBljiUuZpIvMIDhncH
Wa4eljjcOSqBaOSBu+Ml21ZAS7yQLfBWtIMH+qxVj8SKWOLuixLN/XwEkJtW
fO5YZoE3Tl/8W+hBgOgbXsWhFyzwVdpm7h4vAjw9VhCVdM4Cr6EpFuv7E+D4
ijWyTSctcO2KNdH54QQYUpf2VTxkgc1KfA5MxBOg1n3F9PhmC1yS0OBXWEyA
ZYpb2oSsLXDC/MDve5cIEDDIzVNmW+AtR5au+HiFANKRQkwXAwt88sbM4fla
AhwhBJJvyVngIc/o2Kt3CLCpZU6aGIP4c+ObyxJ9BLiQZDpSMgixWrEMyhwg
wIJdzM2WPogXH1trIDBEgKquae9vLyFet9pQ4/4XAkhNTZR53ILYOKFFpXOe
AHuv68RFNUJctEPn+9wvAtw/Gs5Jr4HY58sWGWk+EhxeNjqFSyA+crSHo7eE
BP2qg+a0dIjJ3L+en8RJYD6qKmKZCnHad15+oxQJTtf49XmeoOKrbFSOlyGB
Las/MfMAxFs0rgmOryVBhWvPk5ldENsLFQjZaZLgILfTq02XipfBv4bPnAQx
3/76+9AgjqQ/U3NmkiDaUzdkQRliD1pE8lk2CSJ0iCj9VRD/0lHZuNiKBC8u
cMUYswAPbltay9pCgmfRQ3L7RwF+kK3gup5Dgse2VuqX3wPMb3jETtSBBPdG
f9El7wFM3q+Tr9hGgkaDCP+xkwBbzHW4OXiQoG7x0z3KSQDvnLrt072DBNVv
1sW6HQR4z/uOOuedJCg7/C/Zuot6r3Bvg6Y3CUrsYd68I8CjR3w8jvqQoFih
oHiDNcBuA/kP231JkH/XtfGsFsD9OUVxhgEkyM2ux53yAO875XLLNZDSK0js
sZA4wKzpOIs9QSQglz3qi5plY5NlG2Sig0mQ1qsxemWUjf3WvAwKCCFBclXi
9773bAw2ysxvDCVB/DaWsP09NhY6PP7vcBiVL7V8yYTrbLwi8x6jNJzSd2ZG
vqmcjTf3tL1y3UPp+WA7baKAjRU3XKj6SXFEfo2BWhYbr5EQe5i1lwTh4SKs
HUlsvLb1serafSQIYYduPHmQjaPN8lrOUBwkdt+pPZSN/yian1kWQQK/AdWd
v3axsVnfifq9FHs1HA8ycGLjHactRNop9kx5HxFszcb7xbeViu0ngbu7eVyh
KRsHDmXFb6XYWSsv+ZUWG4u5DeYco9jx13TmMgUqXh+TLxcp5jxzzIfibDza
GH3iJsV2RZUlMYvZuO9+jks7xbaRy6orZllYpSk7+B7Flta7bwyMsvDdgMjm
axQD6Xutsh9Y+LOf8ZZ8ipnDSs+2drLwnb8jcpEUmzUf7U66x8Kn4IV1LIqN
yHcDzddZuGDgwMEFKn59L9PxyXIWVvBMWFxJsa5e9qxGIQuDrtEOJ4q1BKb4
d2Wx8CJmd+8IpY/GK86K00ksbKZxiHaAYtXScumHB1nYY5S/YZrSVylWSPlv
KAuT2RXHAileaxegbezFwvuGm4hHVD5k194xDnNi4aW+4d0qFK+akIfF1ixc
ricRtJfKp+ipLmcRbRZ+qx9v00flX/oAi3VMgYW//DPasJRiefeL6lPiLDym
2derTvllvcK+mVdzTKypPeHG2E0CQ/7XH2y/MPH5M71XDSm/mX8yv9/Ux8Q0
tYUbipQfN5cv+edcOxNz3pUveelH5SM9/LhoMxN/32Num0/52T3iRfDxSiZ2
HZ+xcKH8HmRSSA/IZuK8ZzoRpbtIkHTXuEfbj4kDr7KarrlRfr50trXAhYlN
xZtH5Fwpv6fxV6zczMR7PD17o5xJcGHr0yPTG5i4S29ciN+JBOhdgMLN3wx8
XzE/PW0zCdpvP1qiM8XApj0B74mN1P4u0vta+ImBVRXPf0+wIUFv0C+U8JiB
TebHjthbkODnt9O+dmcYWO3MC1GOGQkE3sxvvkUysDTsr58wJoHwDW8D3eMM
LCT+UzPJkNL7mPYiid0M/L4i6QRPlwTGy1tL3hoxcOfieFlBNcovE7T0LTQG
bnJwdLZRJoF1Z8aB22sYWDRrbfAhBRJsy9thWyzAwAJ3j669LUvtJ9Vvn4M7
zPG8V1JP3QoSxC5x73jXao7XrVL9mSVMgmMjt5vsr5vj9XfnfwZQ9TSjmsvV
KzTHMdmdZUN/CXCVoaw9F2aOu1YP9Lp/o86T7Y57U4XM8el9fj/mXxHgrc6r
yc4FOi6v+Wbj2UmAJ0LuUWsn6Xg+641y3VMC1N30jq3tpuNrMgonYDsBjqru
S+i5QscrzLUE+xup+j+dnrvBno7TbRaFa+cSQOip+OrDkI6/icUrDmUR4Gdp
ztl7RnQsHKcRk5tOgP4dBUUe8nSs6HNMsjuJABV3K8oTJ8zwYNMlZl8kAaxO
PW7pOmmGk2TVHvyxJ4BJuIOFSrIZrsgNOyS1iQA025et4Ycorjw/omhFANGf
7x7w+5lhh1vWorJ0ArzzHX2hbWiGPePPFqSrESBSX/jzsdem2OH3e27mPA8U
ddiupMmZ4irjsBW/z/JA79crs9Eiptis8IPmphweWL1SpP8OnymuvbctITWD
B05xXtZ4fjbBjA5Dvn+P80DSI+9tmQ0m+N5sU7RIIA8E34vNmdlqgg++aZ8z
0OYBvabyNW2JxliSxTHvquKC8C6RxRIHjfHvpaf9akq54MpMxBevUGMc4OVu
GF/IBSrGprfnHI1xYMZg72w6F0jVtXqtVzDGf4/fbvQP54K5q73Fp5uMcLCv
+2MlTS5A50VpfuOG+MePTVe3ZKeB4WuZ5akfDfGnyj3uAUQaEHsiplP52hC/
3GSQFZWQBnzmJAzmbhti7Z2B9Qci0gCfkwwzI8MQ329rWyNsT/VbAkqOzRsM
cU3gwKl9/GkAB+jHSkQa4GcNGjznwFRwZ53zg7szelg6qPu8i0QKMEhuqBkd
0cNpw0JnwJIUUNIvdUbivR7OvLvunOLPZJCW9zrEr1UPL95v9ubOx2SwVdBt
ucBJPbw5h9aQWZMM3vV7bLVYp4dvFNIWXOyTwfAGVHbsui527xxpbjiSBBxW
vMGHTmhj8oqFlvDdBJBuR/7YaaiOX6wJO5Dx8yhQ+h0XKXdRAVdd4vsEjGNA
c5Xa2/6P4nhZ9eXYH/6hIGaD+EHBwVn05eOVBKLdCUTrrd/G92wGRF9qcvGe
dUSJcjmXe3ZJwLO5SwP2yYQhH1bZ2oINCjB2zdGFucEDyGU5w+PIMXXoXfVr
Y+WOeMSNPKPIeKgNe/t010uOJqCtf2KGavq1oWOc0cia2QQkxXOu1JjThreS
78fLL05ERcUrGRKa6+HesjnF5QqJqLEj2XUkaT0U93xRm+mUiD7pRqbnQR3o
vOf6G/r1RATH7Bamr+vCJOOezskjSeiXfnyY60s9yHjp7TE8mYxy6kRGRPv1
oOHEu0XffiUjXcOCoPtf9CB3Vm98amkK8jW65Wu2RB/2iWjufqWUgtpNfrrJ
0fXhCgMQoOqYgrIYMdYfCvWhMnlm6lNFCtKw2SsfFGoAwX7fay+8UhFq+52v
cNAACoqqwPyQVORumy7blWgAP6rP7XaLTkXExgrJTQUGUEOgJ66Om4omN48K
a3UYwFN/6Xpj9amoeWvQzLixIdz7+HST35I05ODu9fwAvxEs9dAss7uYhn59
fF7nImIEH/z2iFxbkYbKwyxyjVcbwdmlw3WfGtLQkmNqu37oGcF/MpO57u1p
qOXS6Gi0jxEcW1Kk+3Q4Da2fjlkSjYzgjKpD1GdtLlqakcmKPGoMmweWJj4s
56JGGX7lbVxjuGjnwhP/Oi4KKI5cbJBjDJV8BjW/3+Ai1ODyeKrCGPbWTy2e
fcBFMT1rPPb3GsM4/GdZ8hAXfaKVRUcwTGDXgN4TpMhDuBVf3TtvAuUPbV9d
wOMhf+a6WglBU2irmWfz6iQPLbmW1dgoZgrlNu46zZ/HQ/alfnf+aJrC9c22
PPZFHupKW9yV4WoK9QyMSy1u8tAEZ5NAdb0p9Ml7cjl0hIey2muEtiNT6Lpl
qF/gKw8ZgdUis49MYWdIsmzWdx46rDcqAwZMobGZdFzmXx4SlCR1nouZQc03
F15JriLQ2u7n7l/3mMEL6ysV6GwCIUczr9OHzKCl/DlHPSsC+T0s8jdNNoOi
I4985TcRqKx5/95j58yg4+czcm+dCGRYIJm08rEZlHGqrH8TQCA7P7fqDTQ6
/HcL+Xs4jUDj71DDS0M65KkpObLSCXRyO635IKDDM177g1KzCPTGev4ecqXD
l4KTXb/OEMhX8+w7h2Q6VLtZfSG8nECxXz4IRgzQoXfs5hSvhwTqVAy+JP6V
DlN715h4PSWQ1vYp6/oFOjR9ffWWUyeB3t9YlDQjZQ5/8CltlHpLIMtUmsDR
jebw+b9WKkLDBDrXXFus4GwOw10fuF8aI9CPcXML7GMOzw08djf9Sq3PmXN8
0WFzGLVHutpkhkAiKpF/uBXm8PBDB96FRSQKclko0L5hDrPV2AMflpAIpyWx
nraZwwd8rbOiy0gU+TX3iFifOYy4we9qJ0ai7ls3f+aKM6CWRv4NnbUkuuAm
OHsxhgEPAXH+Un0SLfAycm0SGbD76ctceSMSObfImHzOZMAb/n5v0kxIJKSu
dUDrCgNuyKrcas4gUfi3rdM1PQyY0FYtJGxNojb17lPbhhmQdd7nubwtiRQ8
fA2+f2dA/4e/zTQ2kagTRe03FWXC/WNRE+L2JDJJ/+frbciEF4iWR87bSZSJ
lTO9OUxYoL+Gt8SFRMPT5br8O5hQ//KHT1ddSXR2x+091lFM+Ee/JaTTg0Tf
021Fho4xIW3i0CknTxJtvfO8IpVkQu8HPdvbdpKIjzYw9ugSE9p2rihM9SbR
Ds8wIryOCQ+KXlZ/40Oi+ozvWqKICdmpR61k/Sg9fywJdepmwk98teBgAIkQ
7aTw9Ccm3Hx8sXx2IIlkd66+kj3FhPfMTmSUBJHo8V3t4a5lLHhGSnF9UTCJ
zP7mjhdJs6CKqNLPuBASlTIEpkNUWFC1MG3GPpREUrF75gx0WbBJT1hZMoxE
CQ3dvxfoLHjX0fXQM4onJ60Wtdmw4Nhl2t/4cBJ56VQvzXBiwbd/mHVqe0hE
L02WVAphwVchhucd9lLjD0zKjkSz4I3yi92vKJZS3KlQd5wFLWwi2Q77qPE9
76vGkSyoWBjR0ULxZJ7BOut/WDCRHp2hGkGN/6pAV6SEBdfcdI09SvETMWGj
N9UsqDX0I/0JxeacaPr5myyYUWD4nLqPoMvcPnbwfRZ8/e8Phh3FUu121vov
WZDVo/EqluIEgcbNPz+w4J22hrxzFE+ylR1aR1lQU/BUCnW/QF5xpDM5w4LT
cteKWil+cn3Ww0WADQ+VyQ5R9xNk/t3PW0GUDfv33nRFFJfpPQv4vJoN5RyK
vlVQvGoPPbRGnQ2HNz+7kfnffFdK9h3SZ8MXxxwrdv833+DKA5YsNtTRN3lk
9N98KnGHl29mQ5GWU5Kz/63Pa+jYK2c2ZJceTav6b31nnZILfNiQxZVY50lx
WdctXlA4G+pr7P/xi9JLWop2ckMsG772vD1+muJEx9M5c4lsGENTlFD6T0/y
T/6dTDbsvXLXr5jS3+thSBHvLBuayXf3yVD8RPD1pe2X2VC+7zQ3kcqfuSW8
uraeDb3CdH0+Ufkti79aM9jChn93fvI3p1j6pnRj1SM2VNo7k51M+WHKcBzD
ATa0i7Q9vkD5ySvCvV14gg3XRcsxNCh+UtH6+MU8GwrUx6jZUv4rU89/EyAO
IN1VOSmQ8qe3zMYvaRDAx2/zTqhQ/n6yvW7KyR5Ap9MjzTOU/81Pys/KuQMY
FPNRHVP7Q1r4O3/lPgC1PhWdMthFoqc/i2Q6CwHsH3B8neNGfW+6Qj6/HMCy
witXJKn9WBZ1UMW/EUBW+9P6FGcSJX3h6Px4CmC6xNsweycSMT78tFz9G8Cz
VSlHXO1IVBNqNfV1MYRycbrvXah6YBkkbLF9OYTcX4M5m6h6EbQrp3+1LITf
/hhLLrUkUdWWSsXL+hA6KkS7fzUjEdwYtW+ZGYT5S8hsLlWPXljS0R42hC0n
yvVkqHo1Q2/zMtoC4Qlhv/QVG0gEaO8L7gRAqBZ9f85bjfpe9eK4WhiEnbFz
zjnKJApQDGGl7YcwIe6kXIsCidKkf/RujYdw8qnY5xFZEnUsFlnbmwdhlCKn
vHwFiXw+MvNnHkG4vGde8sUUgb71Cox6dEJoQkReZU8QKKn7Af12F4TzO7e0
Fo5S9fu589vETxCij+cP0/8l0NTtcFnxPxBa3yg0efuSQAn553K19S1gscrp
8NY6Aknl+g1lmFpAkbeD3cFVBCrNopl8Y1nAnt3rBvip8+dRWsPrJjsL+O5R
yEvRYgJJHHwiZRtgAS93OIdkZxDo4vZfp3zyLGDuc3m6424C4e31OW4FFtAm
w6Aq1Y9AvdtD/9l60QISUl+jGnZR8zl3FzCrLSCMGZsb306gFOeGMtn7FnDl
5SqFj4BAwS7hLR0zFlCmajj7IXU+67r1jkBXS6jSTnysvcFDdm6nv5jutITL
5ap98+p5KMjN7quunyX0/XMzJrKSh867NX1fu9cSDgbohAgX85CYe/bfuWRL
GOaZUd+cykPT7varaq9ZwrPvyBU623moacctqLzKCp6vbpHyH+Aihxd7nX/K
WUHNsX0O6j1cNLRZOfilkhVs4Nzpev+Si6ToKZnJ663g3hzDXv02Lton4/hh
xMoKnrhTzh90mYs0Xv0bVxdpBZVUA435Q7kom7P8ulWHFbwawquRofqv/XCH
ThBhDfeb8ktGP0hFAavkRVuyrOGc+cvj4i2pyHW0b2LVP9bQYElDdAnVD5pn
B9a0lVhD/j0i/FcLU5HAcISheos17Lgvrsug+slTman0T5PWUFh5YTZMPhU1
fGiw8XO1gVh0Xkc/OAXNHlnp5aVsC4MvRt7a3Z+EVvQKbrE6txF6iT7b1VVy
Ak1kSR7pMdkMv/if+DPlHIeiNf6OzT60g8cWVUkFtkUi7nttWX5Lezg7cVAi
sSQA4fEvwj6b7OET+9TL3R4BaO535ULLVntoXlmno74yAAUr6PUd8bSHZbU+
py4e8ke23kalc9H2MKV5uS99qx8S+Mg0mrxsD0+GvYl/MuaNDn/iOPaJcGBh
aaii13FXVPdd1JItxYHElZQp2xEXNLK4w7BAjgN3cn8IaGxzQe7q22Q8NTnw
VMLHyfuqzsgkyPXDG8iB4137XC60O6Hpz17hz6I40EtVxb97lR3SmlP00jnM
gR+JsxK1Q5uQ39KPDuRxDjxf0lQRf30jekHzN7RL58DcmtpbP91tUE3I7p9t
pRyIz/uvTD4L0fAh2he1Sg6ULDKu1uxmUy3tyPvEeg5s4Eklmx5ioozysDsW
mAOVxhDd4KYpCh/bl3b7LRXfkH+Z39H1SJdPRaemjwPVBiROF6+koUmpV50X
Bqn1SanRuopVUd26lJicMQ58q/Qve1mwAopim61Jm+LAupoa3x3kKmS0fRQd
nuXAoPcfHK19hdH//wfB//8PQv8Dp7Z2uA==
          "]], LineBox[CompressedData["
1:eJxFx2kogwEAxvHlPlaOTGLDi9xpHxS5UtuHpcVGLUIxNrPIFYahJcLKnTYf
fHCEkLzmmIRShhraKyHHFyU1UUtDcpX2PPXv6UeIq7IldjQaLe63vzd8nOYG
OWWm0/73tVlqTWDAqvuDdBYBdycMUg+JcAafo7hKg+nFr0wjF+7vzZOSAnj0
hnhXyuCpDjLQWwNLNaV7DuNw5KKvzDoJz583L18vwWQUhztjgHdPqPIUK3wT
8KqTirJs9p+dkCcXwKJ4QbCnGD7mz6v1lfBua7GY3glP3Bk9yBVYJ8xZbXMR
2NzEiPU8ksBy3mNZElto8yTdwCKe4JERprbiBe5i1vpsWGB5LMs96wNm8+ve
lM7ZNm+pg6gLAj5zU3QPiOD9IaP9dR687h/aHlEIj0Uf12+XwEUZYSXmatjc
c5rKU8O3XuH64T74RNsSfzcIk3PhMQ0aWHGo9JuahuVC0/DzLJx/GeGRvACn
PZocTSTMrolUsdbgkPfWT5ke9lFRjbot2NE1yvK9A/8A71Oh/g==
          "]]},
        Annotation[#, "Charting`Private`Tag$97256#5"]& ], 
       TagBox[
        {RGBColor[0.772079, 0.431554, 0.102387], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1: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

          "]]},
        Annotation[#, "Charting`Private`Tag$97256#6"]& ], 
       TagBox[
        {RGBColor[0.363898, 0.618501, 0.782349], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1: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
          "]]},
        Annotation[#, 
         "Charting`Private`Tag$97256#7"]& ], {}}, {{}, {}, {}, {}, {}, {}, \
{}, {}, {}}}, {}, {}}, InsetBox[
     TemplateBox[{
      InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(\\*FormBox[\\\"5\\\", TraditionalForm]\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 5], 
        Editable -> False],InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(\\*FormBox[\\\"15\\\", TraditionalForm]\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 15], 
        Editable -> False],InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(\\*FormBox[\\\"30\\\", TraditionalForm]\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 30], 
        Editable -> False],InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(\\*FormBox[\\\"45\\\", TraditionalForm]\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 45], 
        Editable -> False],InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(\\*FormBox[\\\"60\\\", TraditionalForm]\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 60], 
        Editable -> False],InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(\\*FormBox[\\\"75\\\", TraditionalForm]\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 75], 
        Editable -> False],InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(\\*FormBox[\\\"85\\\", TraditionalForm]\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 85], 
        Editable -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.5147193333333333, 0.28770266666666666`, 
                    0.06825800000000001], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.772079, 0.431554, 0.102387]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.772079, 0.431554, 0.102387]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.772079, 0.431554, 0.102387], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.363898, 0.618501, 0.782349], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.24259866666666668`, 0.412334, 0.521566], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.363898, 0.618501, 0.782349]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.363898, 0.618501, 0.782349]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.363898, 0.618501, 0.782349], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
               ",", #7}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.01, 0.2}], ImageScaled[{0, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"\[Theta] (\[Degree])\"", TraditionalForm], 
     FormBox["\"Torque (N\[CenterDot]m)\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Epilog->{{{
       PointBox[
        NCache[{
         60 3^Rational[1, 2] Pi^(-1) Sin[Rational[1, 36] Pi], 
          Rational[1, 48] (Cos[Rational[1, 18] Pi] - Cos[
           2 3^Rational[-1, 2] Sin[Rational[1, 36] Pi]]) 
          Csc[Rational[1, 36] Pi]^2 
          Sin[3^Rational[-1, 2] Sin[Rational[1, 36] Pi]]}, {
         2.8830887627239346`, -0.0013977605027783628`}]], 
       PointBox[
        NCache[{(-60) 3^Rational[1, 2] Pi^(-1) Sin[Rational[1, 36] Pi], 
          Rational[-1, 48] (Cos[Rational[1, 18] Pi] - Cos[
           2 3^Rational[-1, 2] Sin[Rational[1, 36] Pi]]) 
          Csc[Rational[1, 36] Pi]^2 
          Sin[3^Rational[-1, 2] 
            Sin[Rational[1, 36] Pi]]}, {-2.8830887627239346`, 
         0.0013977605027783628`}]]}, {
       PointBox[
        NCache[{
         15 6^Rational[1, 2] (-1 + 3^Rational[1, 2])/Pi, 
          Rational[1, 6] (-1 + 3^Rational[1, 2])^(-2) (
           Rational[1, 2] 3^Rational[1, 2] - Cos[
           6^Rational[-1, 2] (-1 + 3^Rational[1, 2])]) 
          Sin[Rational[1, 2] 6^Rational[-1, 2] (-1 + 3^Rational[1, 2])]}, {
         8.561665095029744, -0.004150726438928701}]], 
       PointBox[
        NCache[{(-15) 6^Rational[1, 2] (-1 + 3^Rational[1, 2])/Pi, 
          Rational[-1, 6] (-1 + 3^Rational[1, 2])^(-2) (
           Rational[1, 2] 3^Rational[1, 2] - Cos[
           6^Rational[-1, 2] (-1 + 3^Rational[1, 2])]) 
          Sin[Rational[1, 2] 
            6^Rational[-1, 2] (-1 + 3^Rational[1, 2])]}, {-8.561665095029744, 
         0.004150726438928701}]]}, {
       PointBox[
        NCache[{
         30 3^Rational[1, 2]/Pi, 
          Rational[1, 12] (Rational[1, 2] - Cos[3^Rational[-1, 2]]) 
          Sin[Rational[1, 2] 3^Rational[-1, 2]]}, {
         16.53986686265376, -0.008016463362809763}]], 
       PointBox[
        NCache[{(-30) 3^Rational[1, 2]/Pi, 
          Rational[-1, 12] (Rational[1, 2] - Cos[3^Rational[-1, 2]]) 
          Sin[Rational[1, 2] 3^Rational[-1, 2]]}, {-16.53986686265376, 
         0.008016463362809763}]]}, {
       PointBox[
        NCache[{
         30 6^Rational[1, 2]/Pi, Rational[-1, 24] 
          Cos[Rational[2, 3]^Rational[1, 2]] Sin[6^Rational[-1, 2]]}, {
         23.390904037010284`, -0.0113274405372919}]], 
       PointBox[
        NCache[{(-30) 6^Rational[1, 2]/Pi, Rational[1, 24] 
          Cos[Rational[2, 3]^Rational[1, 2]] 
          Sin[6^Rational[-1, 2]]}, {-23.390904037010284`, 
         0.0113274405372919}]]}, {
       PointBox[
        NCache[{90/Pi, Rational[1, 36] (Rational[-1, 2] - Cos[1]) Sin[
            Rational[1, 2]]}, {28.64788975654116, -0.013854097036167422`}]], 
       PointBox[
        NCache[{(-90)/Pi, Rational[-1, 36] (Rational[-1, 2] - Cos[1]) Sin[
            Rational[1, 2]]}, {-28.64788975654116, 0.013854097036167422`}]]}, {
       PointBox[
        NCache[{
         15 6^Rational[1, 2] (1 + 3^Rational[1, 2])/Pi, 
          Rational[1, 6] (1 + 3^Rational[1, 2])^(-2) (
           Rational[-1, 2] 3^Rational[1, 2] - Cos[
           6^Rational[-1, 2] (1 + 3^Rational[1, 2])]) 
          Sin[Rational[1, 2] 6^Rational[-1, 2] (1 + 3^Rational[1, 2])]}, {
         31.952569132040026`, -0.015431553367001357`}]], 
       PointBox[
        NCache[{(-15) 6^Rational[1, 2] (1 + 3^Rational[1, 2])/Pi, 
          Rational[-1, 6] (1 + 3^Rational[1, 2])^(-2) (
           Rational[-1, 2] 3^Rational[1, 2] - Cos[
           6^Rational[-1, 2] (1 + 3^Rational[1, 2])]) 
          Sin[Rational[1, 2] 
            6^Rational[-1, 2] (1 + 3^Rational[1, 2])]}, {-31.952569132040026`,
          0.015431553367001357`}]]}, {
       PointBox[
        NCache[{
         60 3^Rational[1, 2] Pi^(-1) Cos[Rational[1, 36] Pi], 
          Rational[1, 48] (-Cos[Rational[1, 18] Pi] - Cos[
           2 3^Rational[-1, 2] Cos[Rational[1, 36] Pi]]) 
          Sec[Rational[1, 36] Pi]^2 
          Sin[3^Rational[-1, 2] Cos[Rational[1, 36] Pi]]}, {
         32.95385535143806, -0.01590727931702363}]], 
       PointBox[
        NCache[{(-60) 3^Rational[1, 2] Pi^(-1) Cos[Rational[1, 36] Pi], 
          Rational[-1, 48] (-Cos[Rational[1, 18] Pi] - Cos[
           2 3^Rational[-1, 2] Cos[Rational[1, 36] Pi]]) 
          Sec[Rational[1, 36] Pi]^2 
          Sin[3^Rational[-1, 2] 
            Cos[Rational[1, 36] Pi]]}, {-32.95385535143806, 
         0.01590727931702363}]]}}},
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{All, All},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Prolog->{
     Thickness[Tiny], 
     RGBColor[1, 0, 0], 
     LineBox[
      NCache[{{(-60) 3^Rational[1, 2]/Pi, 
         Rational[-1, 48] (-1 - Cos[2 3^Rational[-1, 2]]) 
         Sin[3^Rational[-1, 2]]}, {
        60 3^Rational[1, 2]/Pi, 
         Rational[1, 48] (-1 - Cos[2 3^Rational[-1, 2]]) 
         Sin[3^Rational[-1, 2]]}}, {{-33.07973372530752, 
       0.015967002704829127`}, {33.07973372530752, -0.015967002704829127`}}]]},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{{}, {}, 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1:eJxTTMoPSmViYGAwAGIQzcqp+fn//qADDFCgIXLUlG8vgu8ln1ghswvB7zOd
+ddiC4IvlsTJUbQCSf/ulzJPJiDpz13ldiIRwZ9wUXvWBGYEf8s7pfnu5oFw
/sSqn64dFQFwvoXeoVm81f5wPgT4wfmNAlWp4U994XzrCx+Kt2T5wPnqlgF2
cRe84PyCwxdPNtt6wvla2kIz9xx1RzW/wQ3hPxtrFSc9BL9ES/nzrY0ucL6e
lW7zextnOF/qs/z5gBWOcH5558W4o3oOaO63g/P5Jl0P4dW2hfOfBQfktbNb
wfkLLrjxa0iZw/n75/NpJL01hvMPaoacOPTNAM18PTjfn+fagcpGbTi/16vn
a4yxKpyv8Le6SGqxHML++WI9ogUI/lqnjUsFbBF8q45nN9iuy8L5wcKB9p+5
EPw2TTWeM0XScP7b0AtLa50k4PwtP7L2V/Aj+FWzWW8W3xGH89keWvFklSH4
CjlLi8JWicH5IU1V9vpConC+lKpopNZ9ETj/4fH1RaprEPw83qdLpd0QfJNr
7cd+GSD4AOYqpyU=
           "]], 
          Line[CompressedData["
1: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
/+UN9A/SJgZb
           "]], 
          Line[CompressedData["
1:eJxTTMoPSmViYGBwBWIQbXKt/dgvAxEHBijg2djxVn8qgj/jb8znsiMIvrKX
4c+9nxF8q8c3WXyCROH8Y/rruCY3IviBNU0CtzYg+Bmi2jIZ/GJw/jT3GuOW
Mwj+p9VySXvcJOD8uh+f0pnLEHxO1+O5XksRfIV7+ZU3mCXhfD+BgxO+HEDw
V5Yk79exlobzE2xXyMzVl4Pzj5b877qVhOBrrQn7KT4Nwf8ixXpt0h8Ev/NH
Yn/HSXk4/+ZNXsZdGxXgfKapx4uXeivB+aHc1pE19aoI/UUz5a1PasP5EKAH
5/8xrMsOu2wA5/tHxJ0vZTSB8w8cPrA676cZnF/x5h5rwSNLOP/0Ie0X17ls
0cy3g/Ot7/1ykvxrD+cvDv4zKWG6I5y/I2qPg6KoM5xf6BClm9btAud/r+GP
i1N0QzW/AcHnucPq7TzHHc5/N1G45raZJ5xfovb/9feTXnB+511tCUYnHzg/
53V+x96bvmju94Pz70p/3ZIW5g/nV4rqCJxKDYDzszxeplsZBCL8x3NcVvEt
gj9liszMnA8IfptMkciOzwh+lo4st/8vBN/Ap/hHDXsQnL+nW/7yDUUE/wpX
RceEMAT/2KSzzHciEfztUsr16rEI/iytc6X7khH8BC+V5DcFCP6bzgu2Ht0I
/j1BtZ2T+xD88zOrTe5PRPA3rVTTLpuB4FecrJFYshTBzwq8NPn9CgQ/+qY6
v/UaBN/u5SXWS5sQfINCjUbZbQi+0s/aPxk7EXyRxsvlW/Yg+Kycmp//70fw
AaVW4u4=
           "]]}, "Charting`Private`Tag$97256#1"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1:eJxTTMoPSmViYGDQBGIQzcqp+fn//qADDFCgIXLUlG8vgu8ln1ghswvB7zOd
+ddiC4IvlsTJUbQCSf/ulzJPJiDpz13ldiIRwZ9wUXvWBGYEf8s7pfnu5oFw
/sSqn64dFQFwvoXeoVm81f5wPgT4wfmNAlWp4U994XzrCx+Kt2T5wPnqlgF2
cRe84PyCwxdPNtt6wvla2kIz9xx1RzW/wQ3hPxtrFSc9BL9ES/nzrY0ucL6e
lW7zextnOF/qs/z5gBWOcH5558W4o3oOaO63g/P5Jl0P4dW2hfOfBQfktbNb
wfkLLrjxa0iZw/n75/NpJL01hvMPaoacOPTNAM43at2y4dVLBH/JA5GZQncR
/I7pVzOTDiP4fqzh3EwTEPxbDyL9HDUR/Bf6+1fUb9eD808/q688PxfBXzfX
wUu+BcEv5T70el8Agh9xqGkPnzmCb1Pp3Bsni+BLvXZOrpVA8AF5V5P0
           "]], 
          Line[CompressedData["
1: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
FUxYeDHIhltUw7sFohTx//Z3+L/9Hf8f67d+mQ==
           "]], 
          Line[CompressedData["
1:eJxTTMoPSmViYGCwBWIQLfXaOblWQs+BAQpSDL5LLHdC8DX3XLkvE4Xgv3Pf
tGxSIYK/5XJ/Lkcngu/w2uv35+0IPlu5xqHM8wj+GSa2zvvPEPxwqYNip0X1
4fw8T3OjRcUI/rnLE01WiBvA+X8M67LDLiP4UzfxvuR7gODrGc9NO/4GwU80
2ZNowWYI5x8z+xUuZYngT7Quc7k3D8FXc82TTcsygvP9I+LOlzKawPkHDh9Y
nffTDM6veHOPteCRJZx/+pD2i+tctnA+BNjB+db3fjlJ/rWH8xcH/5mUMN0R
zt8RtcdBUdQZzi90iNJN63aB87/X8MfFKbqhmt+A4PPcYfV2nuMO57+bKFxz
28wTzi9R+//6+0kvOL/zrrYEo5MPnJ/zOr9j701fNPf7wfl3pb9uSQvzh/Mr
RXUETqUGwPlZHi/TrQwCEf7jOS6r+BbBnzJFZmbOBwS/TaZIZMdnBD9LR5bb
/xeCb+BT/KOGPQjO39Mtf/mGIoJ/hauiY0IYgn9s0lnmO5EI/nYp5Xr1WAR/
lta50n3JCH6Cl0rymwIE/03nBVuPbgT/nqDazsl9CP75mdUm9yci+JtWqmmX
zUDwK07WSCxZiuBnBV6a/H4Fgh99U53feg2Cb/fyEuulTQi+QaFGo+w2BF/p
Z+2fjJ0Ivkjj5fItexB8Vk7Nz//3I/gAnAjKOA==
           "]]}, 
         "Charting`Private`Tag$97256#2"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1:eJxTTMoPSmViYGBQB2IQzcqp+fn//qADDFCgIXLUlG8vgu8ln1ghswvB7zOd
+ddiC4IvlsTJUbQCSf/ulzJPJiDpz13ldiIRwZ9wUXvWBGYEf8s7pfnu5oFw
/sSqn64dFQFwvoXeoVm81f5wPgT4wfmNAlWp4U994XzrCx+Kt2T5wPnqlgF2
cRe84PyCwxdPNtt6wvla2kIz9xx1RzW/wQ3hPxtrFSc9BL9ES/nzrY0ucL6e
lW7zextnOF/qs/z5gBWOcH5558W4o3oOcH7Zp//JCRoIfkm0XuZvRQS/QLe7
2FAUwb+0qFPA+rs9nL/NqCD59QQEvy7IltPniB2cX6UyS7hpO4Jf/u2b7I5V
CH7BrA1GKhMR/KRHyjF/YhH8uC0NaUaBCH50292CDBcEP0RreusVLQQ/4M/n
fi45BN/3XMAsB0EEv/frwo12PAg+ABV1j3g=
           "]], 
          Line[CompressedData["
1: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
/R+UiSLE
           "]], 
          Line[CompressedData["
1:eJxTTMoPSmViYGAwB2IQ3ft14UY7HjsHBigQzbXM2qCK4DetXJJfaYjgf3jK
X+pki+CfiXtWfyUEwW8OmDz1RzOS+p5/sw72I/hxJzMXdM1G8K2cHFbLbEbw
Pxq/PeDwCMGPF3d/0+FgD+db3/vlJPkXwd+Q5fzxPYsDnO+UxukYzI3gp8VO
fSApgeCv814rv9wQwbfXuDv3YAqCn/DQZta3Uwj+4uA/kxKmO8L5O6L2OCiK
OsP5hQ5RumndLnD+9xr+uDhFNzgfDBoQfJ47rN7Oc9zh/HcThWtum3nC+SVq
/19/P+kF53fe1ZZgdPKB83Ne53fsvemLaj6DH5x/V/rrlrQwfzi/UlRH4FRq
AJyf5fEy3cogEOE/nuOyim8R/ClTZGbmfEDw22SKRHZ8RvCzdGS5/X8h+AY+
xT9q2IPg/D3d8pdvKCL4V7gqOiaEIfjHJp1lvhOJ4G+XUq5Xj0XwZ2mdK92X
jOAneKkkvylA8N90XrD16Ebw7wmq7Zzch+Cfn1ltcn8igr9ppZp22QwEv+Jk
jcSSpQh+VuClye9XIPjRN9X5rdcg+HYvL7Fe2oTgGxRqNMpuQ/CVftb+ydiJ
4Is0Xi7fsgfBZ+XU/Px/P4IPAP64uss=
           "]]}, 
         "Charting`Private`Tag$97256#3"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1:eJxTTMoPSmViYGCQB2IQzcqp+fn//qADDFCgIXLUlG8vgu8ln1ghswvB7zOd
+ddiC4IvlsTJUbQCSf/ulzJPJiDpz13ldiIRwZ9wUXvWBGYEf8s7pfnu5oFw
/sSqn64dFQFwvoXeoVm81f5wPgT4wfmNAlWp4U994XzrCx+Kt2T5wPnqlgF2
cRe84PyCwxdPNtt6wvla2kIz9xx1h/Pzztutj9uP4G8qzj7KsBPBt9xz5KPL
GgTfw7fc6+wkBD81/87vu/EI/oLNy+L+/3SD85+EXy5Z+BnB1/jzv8v5LYK/
3iVye/sDBH/fVW4BgeMI/u3vBQcVpiD4cnPmXj/Ui+AnOZx6m9KO4B//dSFC
vg3BBwDYH36N
           "]], 
          Line[CompressedData["
1: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
3/8Y+L//Mej/AFetPes=
           "]], 
          Line[CompressedData["
1:eJxTTMoPSmViYGDQB2IQffzXhQj5NjcHBihYVyXz4uh0BH/+g9dmJesR/KY1
XVcu3EPw/7XaZex5guBXxX/6vfwVgl8sFKVc/w3BT6nQLNLlc4fz3V1O8HfZ
Ivg8d1i9necg+E+ETq1euwjB3+3ZxyOxEsHP2i527s1WBP/EJPXAaecR/BZP
z/CXTB5w/t9tPcn9mQj+u4nCNbfNPOH8ErX/r7+f9ILzO+9qSzA6+cD5Oa/z
O/be9IXzIcAPzr8r/XVLWpg/nF8pqiNwKjUA4V6Pl+lWBoFw/mKe47KKbxH8
KVNkZuZ8QPDbZIpEdnxG8LN0ZLn9fyH4Bj7FP2rYg+D8Pd3yl28oIvhXuCo6
JoQh+McmnWW+E4ngb5dSrlePRfBnaZ0r3ZeM4Cd4qSS/KUDw33ResPXoRvDv
CartnNyH4J+fWW1yfyKCv2mlmnbZDAS/4mSNxJKlCH5W4KXJ71cg+NE31fmt
1yD4di8vsV7ahOAbFGo0ym5D8JV+1v7J2IngizReLt+yB8Fn5dT8/H8/gg8A
UzOmmA==
           "]]}, "Charting`Private`Tag$97256#4"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1:eJxTTMoPSmViYGCQBWIQzcqp+fn//qADDFCgIXLUlG8vgu8ln1ghswvB7zOd
+ddiC4IvlsTJUbQCSf/ulzJPJiDpz13ldiIRwZ9wUXvWBGYEf8s7pfnu5oFw
/sSqn64dFQFwvoXeoVm81f5w/kHetwe3lSD4Xm/FX8bnIfgxa3LNNyUi+I1a
klfCPBD8U2oFvAtEkdTLyzUYbfCD85/+81h+eyWCn3ev+FzLYgS/Ye5JmevT
EPyl0qU7q2sR/HfiZz4d8ULwy79/k8xzQfAZris6itsh+MLTyvszDRF8CxFl
HT4JBP/gZ9/g7YIIvtfliqoEbgT/+K8LEfJsCD4AYdpwJQ==
           "]], 
          Line[CompressedData["
1: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
nuXAoPcfHK19hdH//wfB//8PQv8Dp7Z2uA==
           "]], 
          Line[CompressedData["
1:eJxFx2kogwEAxvHlPlaOTGLDi9xpHxS5UtuHpcVGLUIxNrPIFYahJcLKnTYf
fHCEkLzmmIRShhraKyHHFyU1UUtDcpX2PPXv6UeIq7IldjQaLe63vzd8nOYG
OWWm0/73tVlqTWDAqvuDdBYBdycMUg+JcAafo7hKg+nFr0wjF+7vzZOSAnj0
hnhXyuCpDjLQWwNLNaV7DuNw5KKvzDoJz583L18vwWQUhztjgHdPqPIUK3wT
8KqTirJs9p+dkCcXwKJ4QbCnGD7mz6v1lfBua7GY3glP3Bk9yBVYJ8xZbXMR
2NzEiPU8ksBy3mNZElto8yTdwCKe4JERprbiBe5i1vpsWGB5LMs96wNm8+ve
lM7ZNm+pg6gLAj5zU3QPiOD9IaP9dR687h/aHlEIj0Uf12+XwEUZYSXmatjc
c5rKU8O3XuH64T74RNsSfzcIk3PhMQ0aWHGo9JuahuVC0/DzLJx/GeGRvACn
PZocTSTMrolUsdbgkPfWT5ke9lFRjbot2NE1yvK9A/8A71Oh/g==
           "]]}, 
         "Charting`Private`Tag$97256#5"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1: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

           "]]}, "Charting`Private`Tag$97256#6"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.363898, 0.618501, 0.782349], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1: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
           "]]}, 
         "Charting`Private`Tag$97256#7"], {}}, {{}, {}, {}, {}, {}, {}, {}, \
{}, {}}}, {}, {}}, {
     DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
      AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
      GridLines -> {None, None}, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
      DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, 
      AxesLabel -> {"\[Theta] (\[Degree])", "Torque (N\[CenterDot]m)"}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, Epilog -> {{{
          
          Point[{60 3^Rational[1, 2] Pi^(-1) Sin[Rational[1, 36] Pi], 
            Rational[1, 48] (Cos[Rational[1, 18] Pi] - Cos[
             2 3^Rational[-1, 2] Sin[Rational[1, 36] Pi]]) 
            Csc[Rational[1, 36] Pi]^2 
            Sin[3^Rational[-1, 2] Sin[Rational[1, 36] Pi]]}], 
          
          Point[{(-60) 3^Rational[1, 2] Pi^(-1) Sin[Rational[1, 36] Pi], 
            Rational[-1, 48] (Cos[Rational[1, 18] Pi] - Cos[
             2 3^Rational[-1, 2] Sin[Rational[1, 36] Pi]]) 
            Csc[Rational[1, 36] Pi]^2 
            Sin[3^Rational[-1, 2] Sin[Rational[1, 36] Pi]]}]}, {
          
          Point[{15 6^Rational[1, 2] (-1 + 3^Rational[1, 2])/Pi, 
            Rational[1, 6] (-1 + 3^Rational[1, 2])^(-2) (
             Rational[1, 2] 3^Rational[1, 2] - Cos[
             6^Rational[-1, 2] (-1 + 3^Rational[1, 2])]) 
            Sin[Rational[1, 2] 6^Rational[-1, 2] (-1 + 3^Rational[1, 2])]}], 
          
          Point[{(-15) 6^Rational[1, 2] (-1 + 3^Rational[1, 2])/Pi, 
            Rational[-1, 6] (-1 + 3^Rational[1, 2])^(-2) (
             Rational[1, 2] 3^Rational[1, 2] - Cos[
             6^Rational[-1, 2] (-1 + 3^Rational[1, 2])]) 
            Sin[Rational[1, 2] 6^Rational[-1, 2] (-1 + 3^Rational[1, 2])]}]}, {
          
          Point[{30 3^Rational[1, 2]/Pi, 
            Rational[1, 12] (Rational[1, 2] - Cos[3^Rational[-1, 2]]) 
            Sin[Rational[1, 2] 3^Rational[-1, 2]]}], 
          
          Point[{(-30) 3^Rational[1, 2]/Pi, 
            Rational[-1, 12] (Rational[1, 2] - Cos[3^Rational[-1, 2]]) 
            Sin[Rational[1, 2] 3^Rational[-1, 2]]}]}, {
          
          Point[{30 6^Rational[1, 2]/Pi, Rational[-1, 24] 
            Cos[Rational[2, 3]^Rational[1, 2]] Sin[6^Rational[-1, 2]]}], 
          
          Point[{(-30) 6^Rational[1, 2]/Pi, Rational[1, 24] 
            Cos[Rational[2, 3]^Rational[1, 2]] Sin[6^Rational[-1, 2]]}]}, {
          Point[{90/Pi, Rational[1, 36] (Rational[-1, 2] - Cos[1]) Sin[
              Rational[1, 2]]}], 
          Point[{(-90)/Pi, Rational[-1, 36] (Rational[-1, 2] - Cos[1]) Sin[
              Rational[1, 2]]}]}, {
          
          Point[{15 6^Rational[1, 2] (1 + 3^Rational[1, 2])/Pi, 
            Rational[1, 6] (1 + 3^Rational[1, 2])^(-2) (
             Rational[-1, 2] 3^Rational[1, 2] - Cos[
             6^Rational[-1, 2] (1 + 3^Rational[1, 2])]) 
            Sin[Rational[1, 2] 6^Rational[-1, 2] (1 + 3^Rational[1, 2])]}], 
          
          Point[{(-15) 6^Rational[1, 2] (1 + 3^Rational[1, 2])/Pi, 
            Rational[-1, 6] (1 + 3^Rational[1, 2])^(-2) (
             Rational[-1, 2] 3^Rational[1, 2] - Cos[
             6^Rational[-1, 2] (1 + 3^Rational[1, 2])]) 
            Sin[Rational[1, 2] 6^Rational[-1, 2] (1 + 3^Rational[1, 2])]}]}, {
         
          
          Point[{60 3^Rational[1, 2] Pi^(-1) Cos[Rational[1, 36] Pi], 
            Rational[1, 48] (-Cos[Rational[1, 18] Pi] - Cos[
             2 3^Rational[-1, 2] Cos[Rational[1, 36] Pi]]) 
            Sec[Rational[1, 36] Pi]^2 
            Sin[3^Rational[-1, 2] Cos[Rational[1, 36] Pi]]}], 
          
          Point[{(-60) 3^Rational[1, 2] Pi^(-1) Cos[Rational[1, 36] Pi], 
            Rational[-1, 48] (-Cos[Rational[1, 18] Pi] - Cos[
             2 3^Rational[-1, 2] Cos[Rational[1, 36] Pi]]) 
            Sec[Rational[1, 36] Pi]^2 
            Sin[3^Rational[-1, 2] Cos[Rational[1, 36] Pi]]}]}}}, 
      Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{Automatic, Automatic}, {
        Automatic, Automatic}}, Prolog -> {
        Thickness[Tiny], 
        RGBColor[1, 0, 0], 
        Line[{{(-60) 3^Rational[1, 2]/Pi, 
           Rational[-1, 48] (-1 - Cos[2 3^Rational[-1, 2]]) 
           Sin[3^Rational[-1, 2]]}, {
          60 3^Rational[1, 2]/Pi, 
           Rational[1, 48] (-1 - Cos[2 3^Rational[-1, 2]]) 
           Sin[3^Rational[-1, 2]]}}]}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.772079, 0.431554, 0.102387], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.363898, 0.618501, 0.782349], 
         AbsoluteThickness[1.6]]}, {
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 5], 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 15], 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 30], 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 45], 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 60], 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 75], 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 85]}, 
       LegendMarkers -> None, LabelStyle -> {}, LegendLayout -> "Column"]], {
     Left, 0.2}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.745223456933168*^9, {3.745229482284094*^9, 
   3.745229501577667*^9}},ExpressionUUID->"69c2340f-44b8-4d30-a513-\
ce67a1191bda"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"aDeg", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"15", ",", "30", ",", "45", ",", "60"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"as", " ", "=", 
   RowBox[{"aDeg", " ", 
    FractionBox["\[Pi]", "180"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Force", "[", 
        RowBox[{
         RowBox[{"\[Theta]", " ", 
          FractionBox["\[Pi]", "180"]}], ",", "a", " ", ",", "1"}], "]"}]}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "as"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", 
     RowBox[{"-", "90"}], ",", "90"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "60"}], ",", 
        RowBox[{"-", "45"}], ",", 
        RowBox[{"-", "30"}], ",", 
        RowBox[{"-", "15"}], ",", "15", ",", "30", ",", "45", ",", "60"}], 
       "}"}], ",", "Automatic"}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "70"}], ",", "70"}], "}"}], ",", "Automatic"}], "}"}]}], 
   ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"StringForm", "[", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]\>\"", 
          ",", "a"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"a", ",", "aDeg"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Left", ",", "Bottom"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Theta] (\[Degree])\>\"", ",", "\"\<Force (N)\>\""}], 
     "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<../pictures/pdf/AngleOfReposeForce.pdf\>\"", ",", "%"}], 
   "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.687561659787734*^9, 3.687561663305916*^9}, {
   3.687561818817523*^9, 3.687561820772396*^9}, 3.687561863441382*^9, {
   3.6875621531371107`*^9, 3.687562295568671*^9}, {3.6875627138293867`*^9, 
   3.6875627231159782`*^9}, {3.6876052206664753`*^9, 3.687605228277721*^9}, {
   3.687606066194991*^9, 3.687606096090818*^9}, {3.6876062853064613`*^9, 
   3.687606303493332*^9}, {3.687607641992549*^9, 3.687607690022036*^9}, {
   3.708348432242405*^9, 3.708348440242481*^9}, {3.7112696653880463`*^9, 
   3.711269667969633*^9}, {3.7112728467267513`*^9, 
   3.711272847045575*^9}},ExpressionUUID->"f8ce0087-4d2f-42b3-8df2-\
fff88d16e766"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
3ahVkNsC7ymCbLpDnZT+bvScN8trNWcRDB3hlWlGu9Gr9iV1m+eFcPJ+4KCk
1W6kyJIvWb+zEFLVTd0a/XYjvwP7z1G1HsAb/TmXDYW7kfuaNepd4gXgaEnb
XytHRensWfeqRvIg13+pwleNimr7d0xvvpkH44nFoiLbqKhH96jpBZc8COkU
6/GhUdH1gx2Z+l23Icvxs4OQBxWxyZ/Lc264Bb3uGXZHblJR6tMTx+/k54JL
8MTe1RtpKNyO/VcKkQkiC7FPdTbT0C8jiSFDq0x4FaSx2VWJhvQWvzwefJUB
1KDg7//q0VDf4tKd9R3poBTIcd3KnoYcHc/KoNep8OPEpsmUeBraO5PrfaM7
EUq/PretTqOh0LkG4YV9ieB7wrtm5BoNHZLc45z2MAEGjhcn6jygoW3kmdRa
EgcvAgx1uxtoyED2Ec/wo0uQ7Lc/WpyVjixjRiOnyqPA/POvaSMuOtIx9FLU
fRIJf/nl7vPlp6Np3jumP/0iIPTvMaVqCTpC9lj1t38YuB0LbHfZTkcR6hKV
j4+fBPEpUYMLu+honsNuu8iJ49DpW533rwkdNbRmPxsZ8QO676qQPw505B6k
okoZ9QKWT3cH5V3p6ObRAavhUXeo9DE1s/Kko1yOoBAOwgVUfZIkb56kI5eO
27nvbpnB6IT2xabTdCQvWb4z0FQXco/2zM5G0dH/P78fmAhzEr/EtNBRqRdG
iUwzxuvUfDOYjvH2ykzJYXrpSJHvSCHTZWNWb/jKmPY7Mr9Tp4rpQS8DgQtN
TDd6NlXIj/7P+FzbNpXp/8kf1VGmMc+0Sk7fQ3024xUndk3nm0kyvc9YIMvf
gelRBafQJy+Z5pia0je+Z7LiRZZCvuPxpiu2KGVzkrA3X7Hj1/mlzl2WKxb3
THvbIGC1Yj2p8DmveaZLczW28U5Yr9h55mF5QJvNir/w2tY7FtmueOBz3Q9a
rt2Kl2/89p0/a7/iNezrsscvMC3tvbmx/zLTVA2TLS+Smb6Mk/rTbjEtOrjF
QreOaW0ZM7XTrA4rpl9wcfbjYNpx0v+yOzfTYaWpo6brmK4zGsjZsIlpq8PH
+WsQ0+4N5wxLqEyfUk73vWPCdMZcZUOcFdMD59gjXd2YnhkT+dfGg2k2c8V+
ujfTskKWeuoBTG8LcfPafIppk/4TqetDmD6AztfxhjP93/eLK/4PW+1N4w==

       "]]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
aR2DbWd0ul4wmu3/fj9c9n8ALd978w==
       "]]}}, InsetBox[
     TemplateBox[{
      InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(TraditionalForm\\`15\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 15], 
        Editable -> False],InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(TraditionalForm\\`30\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 30], 
        Editable -> False],InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(TraditionalForm\\`45\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 45], 
        Editable -> False],InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(TraditionalForm\\`60\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 60], 
        Editable -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.01, 0.01}], ImageScaled[{0, 0}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"\[Theta] (\[Degree])\"", TraditionalForm], 
     FormBox["\"Force (N)\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
   PlotRange->{{-70, 70}, {-0.4330126681562524, 0.}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{{{-60, 
       FormBox[
        RowBox[{"-", "60"}], TraditionalForm]}, {-45, 
       FormBox[
        RowBox[{"-", "45"}], TraditionalForm]}, {-30, 
       FormBox[
        RowBox[{"-", "30"}], TraditionalForm]}, {-15, 
       FormBox[
        RowBox[{"-", "15"}], TraditionalForm]}, {15, 
       FormBox["15", TraditionalForm]}, {30, 
       FormBox["30", TraditionalForm]}, {45, 
       FormBox["45", TraditionalForm]}, {60, 
       FormBox["60", TraditionalForm]}}, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
3ahVkNsC7ymCbLpDnZT+bvScN8trNWcRDB3hlWlGu9Gr9iV1m+eFcPJ+4KCk
1W6kyJIvWb+zEFLVTd0a/XYjvwP7z1G1HsAb/TmXDYW7kfuaNepd4gXgaEnb
XytHRensWfeqRvIg13+pwleNimr7d0xvvpkH44nFoiLbqKhH96jpBZc8COkU
6/GhUdH1gx2Z+l23Icvxs4OQBxWxyZ/Lc264Bb3uGXZHblJR6tMTx+/k54JL
8MTe1RtpKNyO/VcKkQkiC7FPdTbT0C8jiSFDq0x4FaSx2VWJhvQWvzwefJUB
1KDg7//q0VDf4tKd9R3poBTIcd3KnoYcHc/KoNep8OPEpsmUeBraO5PrfaM7
EUq/PretTqOh0LkG4YV9ieB7wrtm5BoNHZLc45z2MAEGjhcn6jygoW3kmdRa
EgcvAgx1uxtoyED2Ec/wo0uQ7Lc/WpyVjixjRiOnyqPA/POvaSMuOtIx9FLU
fRIJf/nl7vPlp6Np3jumP/0iIPTvMaVqCTpC9lj1t38YuB0LbHfZTkcR6hKV
j4+fBPEpUYMLu+honsNuu8iJ49DpW533rwkdNbRmPxsZ8QO676qQPw505B6k
okoZ9QKWT3cH5V3p6ObRAavhUXeo9DE1s/Kko1yOoBAOwgVUfZIkb56kI5eO
27nvbpnB6IT2xabTdCQvWb4z0FQXco/2zM5G0dH/P78fmAhzEr/EtNBRqRdG
iUwzxuvUfDOYjvH2ykzJYXrpSJHvSCHTZWNWb/jKmPY7Mr9Tp4rpQS8DgQtN
TDd6NlXIj/7P+FzbNpXp/8kf1VGmMc+0Sk7fQ3024xUndk3nm0kyvc9YIMvf
gelRBafQJy+Z5pia0je+Z7LiRZZCvuPxpiu2KGVzkrA3X7Hj1/mlzl2WKxb3
THvbIGC1Yj2p8DmveaZLczW28U5Yr9h55mF5QJvNir/w2tY7FtmueOBz3Q9a
rt2Kl2/89p0/a7/iNezrsscvMC3tvbmx/zLTVA2TLS+Smb6Mk/rTbjEtOrjF
QreOaW0ZM7XTrA4rpl9wcfbjYNpx0v+yOzfTYaWpo6brmK4zGsjZsIlpq8PH
+WsQ0+4N5wxLqEyfUk73vWPCdMZcZUOcFdMD59gjXd2YnhkT+dfGg2k2c8V+
ujfTskKWeuoBTG8LcfPafIppk/4TqetDmD6AztfxhjP93/eLK/4PW+1N4w==

         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
aR2DbWd0ul4wmu3/fj9c9n8ALd978w==
         "]]}}}, {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, 
      AxesLabel -> {"\[Theta] (\[Degree])", "Force (N)"}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
      Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
      PlotRange -> {{-70, 70}, {-0.4330126681562524, 0.}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{0, 0}, {
         Scaled[0.05], 
         Scaled[0.05]}}, 
      Ticks -> {{-60, -45, -30, -15, 15, 30, 45, 60}, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]]}, {
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 15], 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 30], 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 45], 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 60]}, 
       LabelStyle -> {}, LegendLayout -> "Column"]], {Left, Bottom}, 
     Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.6875617889436398`*^9, 3.687562308067196*^9, 3.687562733128643*^9, 
   3.687605236712493*^9, 3.687606104201973*^9, 3.68760630516457*^9, {
   3.687607653339971*^9, 3.687607701464322*^9}, 3.7083487497984324`*^9, 
   3.711270090203685*^9, 
   3.7112728561221743`*^9},ExpressionUUID->"9fd3c8ad-8be6-4f71-8ebb-\
7ec1416098d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "<", 
     RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], ",", "0", ",", " ", 
    RowBox[{
     RowBox[{
      SubsuperscriptBox["\[Integral]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "l"}], "/", "2"}], 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
       FractionBox[
        RowBox[{"l", " ", 
         RowBox[{"Cot", "[", "\[Alpha]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "2"]], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Tan", "[", "\[Alpha]", "]"}], "x"}], "+", 
         RowBox[{
          RowBox[{"l", "/", "2"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "-", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ")"}]}], "  ", "-", 
         RowBox[{
          RowBox[{"Tan", "[", "\[Theta]", "]"}], "x"}]}], ")"}], 
       RowBox[{"\[DifferentialD]", "x"}]}]}], "+", "\[IndentingNewLine]", " ", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", 
       FractionBox[
        RowBox[{"l", " ", 
         RowBox[{"Cot", "[", "\[Alpha]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "2"], 
       RowBox[{
        RowBox[{"l", "/", "2"}], 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}]], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "x"}], "+", 
         RowBox[{
          RowBox[{"l", "/", "2"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "+", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"Tan", "[", "\[Theta]", "]"}], "x"}]}], ")"}], 
       RowBox[{"\[DifferentialD]", "x"}]}]}]}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.687562310834149*^9, 
  3.6875623140180798`*^9}},ExpressionUUID->"d9744b2e-7542-411e-8331-\
d7ddd1a74ad7"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Cos", "[", "\[Theta]", "]"}], "<", 
    RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], ",", "0", ",", 
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"-", "l"}], ")"}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", "l", " ", 
       RowBox[{"Cot", "[", "\[Alpha]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Tan", "[", "\[Alpha]", "]"}], " ", "x"}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", "l", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "-", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"Tan", "[", "\[Theta]", "]"}], " ", "x"}]}], ")"}], 
      RowBox[{"\[DifferentialD]", "x"}]}]}], "+", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{
       FractionBox["1", "2"], " ", "l", " ", 
       RowBox[{"Cot", "[", "\[Alpha]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", "l", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}]], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], " ", "x"}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", "l", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "+", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"Tan", "[", "\[Theta]", "]"}], " ", "x"}]}], ")"}], 
      RowBox[{"\[DifferentialD]", "x"}]}]}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.687562314694036*^9, 
  3.737790589493696*^9},ExpressionUUID->"c03d25b6-9e1d-4018-b0be-\
c278c92617de"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"heightTop", "[", 
      RowBox[{"x_", ",", "\[Alpha]_", ",", "l_", ",", "\[Theta]_"}], "]"}], 
     " ", ":=", " ", 
     RowBox[{"Min", "[", "  ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Tan", "[", "\[Alpha]", "]"}], "x"}], "+", 
        RowBox[{
         RowBox[{"l", "/", "2"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], 
            RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "-", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ")"}]}]}], ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "x"}], "+", 
        RowBox[{
         RowBox[{"l", "/", "2"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], 
            RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "+", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ")"}]}]}]}], "]"}]}], 
    ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DrawGranular", "[", 
     RowBox[{"\[Theta]_", ",", "\[Alpha]_", ",", "s_", ",", "colr_"}], "]"}], 
    ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "p", ",", "h", ",", "d", ",", "lside", ",", "com"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"l", " ", "=", " ", "20"}], ";", " ", 
       RowBox[{"(*", "length", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"a", "=", " ", 
        RowBox[{
         RowBox[{"l", "/", "2"}], "*", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"p", " ", "=", "  ", 
        RowBox[{
         RowBox[{"l", "/", "10"}], "*", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
           RowBox[{"-", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"h", " ", "=", " ", 
        RowBox[{"l", "/", "2"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"d", " ", "=", " ", 
        RowBox[{"l", "/", "2"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"Pink", ",", 
         RowBox[{"Polygon", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"s", "+", "a"}], ",", 
            RowBox[{"s", "+", "a", "+", "p"}], ",", 
            RowBox[{"s", "+", 
             RowBox[{"-", "a"}], "+", "p"}], ",", 
            RowBox[{"s", "-", "a"}]}], "}"}], "]"}], ",", 
         RowBox[{"EdgeForm", "[", 
          RowBox[{"{", "colr", "}"}], "]"}], ",", "colr", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"granular", " ", "media"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"\[Alpha]", ">", 
            RowBox[{"Abs", "[", "\[Theta]", "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"lside", "=", 
               FractionBox[
                RowBox[{"l", " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "+", "\[Alpha]"}], "]"}]}], 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Pi]", "-", 
                  RowBox[{"2", "\[Alpha]"}]}], "]"}]]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"com", " ", "=", 
               RowBox[{
                RowBox[{"1", "/", "3"}], " ", 
                RowBox[{"(", 
                 RowBox[{"s", "+", "a", "+", "s", "+", 
                  RowBox[{"lside", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Alpha]", "]"}], ",", 
                    RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "}"}]}], "-", 
                  "a", "+", "s", "-", "a"}], ")"}]}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"Polygon", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"s", "+", "a"}], ",", 
                 RowBox[{"s", "+", 
                  RowBox[{"lside", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Alpha]", "]"}], ",", 
                    RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "}"}]}], "-", 
                  "a"}], ",", 
                 RowBox[{"s", "-", "a"}]}], "}"}], "]"}]}], ",", 
             "\[IndentingNewLine]", "Black", ",", 
             RowBox[{"Thickness", "[", "0.002", "]"}], ",", " ", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{"s", ",", 
                RowBox[{"s", "+", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Abs", "[", "\[Theta]", "]"}], ">", "\[Alpha]"}], 
                    ",", "0", ",", 
                    RowBox[{"heightTop", "[", 
                    RowBox[{"0", ",", "\[Alpha]", ",", "l", ",", "\[Theta]"}],
                     "]"}]}], "]"}]}], " ", "}"}]}]}], "}"}], "]"}], "  ", 
             RowBox[{"(*", 
              RowBox[{
              "draw", " ", "line", " ", "up", " ", "the", " ", "middle"}], 
              "*)"}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"draw", " ", "the", " ", "center"}], "-", "of", "-", 
                RowBox[{"mass", " ", 
                 RowBox[{"(", "COM", " "}]}]}], "*)"}], "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Thickness", "[", "0.0015", "]"}], ",", "Red", ",", 
               " ", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{"Line", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"s", "+", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "com", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", "0"}], "}"}]}], ",", 
                    RowBox[{"s", "+", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "com", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"heightTop", "[", 
                    RowBox[{
                    RowBox[{
                    "com", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", "\[Alpha]", ",", "l", ",",
                     "\[Theta]"}], "]"}]}], "}"}]}]}], "}"}], "]"}], ","}], 
                "*)"}], "\[IndentingNewLine]", 
               RowBox[{"Line", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    "com", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "s", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    "com", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    RowBox[{
                    "s", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], " ", "+", " ", 
                    RowBox[{"3", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "com", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    "s", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], ")"}]}]}]}], "}"}]}], "}"}], 
                "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"EdgeForm", "[", 
                RowBox[{"Directive", "[", 
                 RowBox[{"Black", ",", "Thin"}], "]"}], "]"}], ",", "Black", 
               ",", 
               RowBox[{"Disk", "[", 
                RowBox[{"com", ",", "1"}], "]"}], ",", " ", "White", ",", 
               RowBox[{"Disk", "[", 
                RowBox[{"com", ",", "1", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"45", " ", "Degree"}], ",", 
                   RowBox[{"135", " ", "Degree"}]}], "}"}]}], "]"}], ",", 
               RowBox[{"Disk", "[", 
                RowBox[{"com", ",", "1", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "45"}], " ", "Degree"}], ",", 
                   RowBox[{
                    RowBox[{"-", "135"}], " ", "Degree"}]}], "}"}]}], "]"}]}],
               "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"s", "+", "a"}], ",", 
              RowBox[{"s", "-", "a"}]}], "}"}], "]"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", 
           RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
           RowBox[{"Disk", "[", 
            RowBox[{"s", ",", 
             RowBox[{"1", "/", "3"}]}], "]"}]}], "}"}]}], 
        "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"aDeg", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"15", ",", "30", ",", "45", ",", "60"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"as", " ", "=", 
     RowBox[{"aDeg", " ", 
      FractionBox["\[Pi]", "180"]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"l", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetDirectory", "[", 
     RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"-", "50"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", 
       RowBox[{"-", "90"}], ",", "90"}], "}"}], ",", 
     RowBox[{"Ticks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "60"}], ",", 
          RowBox[{"-", "45"}], ",", 
          RowBox[{"-", "30"}], ",", 
          RowBox[{"-", "15"}], ",", "15", ",", "30", ",", "45", ",", "60"}], 
         "}"}], ",", "aDeg"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "70"}], ",", "70"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "10"}], ",", "80"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta] (\[Degree])\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\) (\[Degree])\>\""}], 
       "}"}]}], ",", 
     RowBox[{"Prolog", "\[Rule]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"DrawGranular", "[", 
          RowBox[{
           RowBox[{"theta", " ", 
            FractionBox["\[Pi]", "180"]}], ",", 
           RowBox[{
            RowBox[{
            "aDeg", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
            " ", 
            FractionBox["\[Pi]", "180"]}], ",", 
           RowBox[{"{", 
            RowBox[{"theta", ",", 
             RowBox[{
             "aDeg", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}],
             "}"}], ",", 
           RowBox[{
            RowBox[{"ColorData", "[", 
             RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
            "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], "]"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "aDeg", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"theta", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "45"}], ",", 
             RowBox[{"-", "22.5"}], ",", "0", ",", "22.5", ",", "45"}], 
            "}"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Epilog", "\[Rule]", "\[IndentingNewLine]", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", "c", ",", 
          RowBox[{"\[Alpha]", "=", 
           RowBox[{"\[Pi]", "/", "3"}]}], ",", "\[Theta]", ",", 
          RowBox[{"l", " ", "=", " ", "20"}], ",", "b"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "=", 
            RowBox[{"\[Pi]", "/", "8"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"c", " ", "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\[Theta]", "*", 
               FractionBox["180", "\[Pi]"]}], ",", 
              RowBox[{"\[Alpha]", 
               FractionBox["180", "\[Pi]"]}]}], "}"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"a", "=", " ", 
            RowBox[{
             RowBox[{"l", "/", "2"}], "*", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"b", "=", " ", 
            RowBox[{
             RowBox[{"l", "/", "4"}], "*", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
           "Black"}], ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"c", "-", "a", "+", "b"}], ",", 
             RowBox[{"c", "-", "a"}], ",", 
             RowBox[{"c", "-", "a", "+", " ", 
              RowBox[{
               RowBox[{"l", "/", "4"}], "*", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Alpha]", "]"}], ",", 
                 RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "}"}]}]}]}], "}"}], 
           "]"}], ",", "\[IndentingNewLine]", "Black", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"c", "+", "a", "-", "b"}], ",", 
             RowBox[{"c", "+", "a"}], ",", 
             RowBox[{"c", "+", "a", "+", " ", 
              RowBox[{
               RowBox[{"l", "/", "4"}], "*", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], ",", 
                 RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "}"}]}]}]}], "}"}], 
           "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Circle", "[", 
           RowBox[{
            RowBox[{"c", "-", "a"}], ",", 
            RowBox[{"l", "/", "6"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "\[Alpha]"}], "}"}]}], "]"}], ",", "  ", 
          RowBox[{"(*", 
           RowBox[{
           "draw", " ", "a", " ", "few", " ", "alpha", " ", "angles"}], 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"Circle", "[", 
           RowBox[{
            RowBox[{"c", "+", "a"}], ",", 
            RowBox[{"l", "/", "6"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Pi]", ",", 
              RowBox[{"\[Pi]", "-", "\[Alpha]"}]}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Text", "[", 
           RowBox[{"\"\<\[Alpha]\>\"", ",", 
            RowBox[{"c", "-", 
             RowBox[{"{", 
              RowBox[{"3.6", ",", "1.4"}], "}"}]}]}], "]"}], ",", 
          RowBox[{"Text", "[", 
           RowBox[{"\"\<\[Alpha]\>\"", ",", 
            RowBox[{"c", "+", 
             RowBox[{"{", 
              RowBox[{"3.5", ",", "6"}], "}"}]}]}], "]"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"\[Theta]", "=", 
            RowBox[{"\[Pi]", "/", "4"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"c", " ", "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\[Theta]", "*", 
               FractionBox["180", "\[Pi]"]}], ",", 
              RowBox[{"\[Alpha]", 
               FractionBox["180", "\[Pi]"]}]}], "}"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"a", "=", " ", 
            RowBox[{
             RowBox[{"l", "/", "2"}], "*", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"b", "=", " ", 
            RowBox[{
             RowBox[{"l", "/", "4"}], "*", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
           "Black"}], ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"c", "+", "b"}], ",", "c", ",", 
             RowBox[{"c", "+", " ", 
              RowBox[{
               RowBox[{"l", "/", "4"}], "*", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}]}]}], "}"}], 
           "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Circle", "[", 
           RowBox[{"c", ",", 
            RowBox[{"l", "/", "6"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "\[Theta]"}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Text", "[", 
           RowBox[{"\"\<\[Theta]\>\"", ",", 
            RowBox[{"c", "+", 
             RowBox[{"{", 
              RowBox[{"6", ",", "2"}], "}"}]}]}], "]"}]}], 
         "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}]}], 
    "\[IndentingNewLine]", "]"}], " ", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Export", "[", 
      RowBox[{"\"\<../pictures/pdf/AngleOfRepose.pdf\>\"", ",", "%"}], "]"}], 
     ";"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{
  3.687559813922858*^9, {3.6875598458335657`*^9, 3.68755986165352*^9}, {
   3.6875599898784924`*^9, 3.687559991319036*^9}, {3.687560025601347*^9, 
   3.68756007779023*^9}, {3.687560109254374*^9, 3.6875601171027327`*^9}, {
   3.687560479467846*^9, 3.6875605654545794`*^9}, {3.687560838776292*^9, 
   3.687560847684104*^9}, {3.687560901407469*^9, 3.687560902254848*^9}, {
   3.687561542970385*^9, 3.687561553559671*^9}, {3.687561599783189*^9, 
   3.6875616201068373`*^9}, {3.687562738376577*^9, 3.687562745841164*^9}, {
   3.687605244470797*^9, 3.687605248857699*^9}, {3.687605834334362*^9, 
   3.6876060532173433`*^9}, {3.687606106578257*^9, 3.687606157246667*^9}, {
   3.6876062112888193`*^9, 3.68760625966453*^9}, {3.687606347006308*^9, 
   3.687606355625946*^9}, {3.687606675130939*^9, 3.687606759438073*^9}, {
   3.6876068641308413`*^9, 3.6876068667850447`*^9}, {3.687606896839459*^9, 
   3.687606962582535*^9}, {3.687607013778679*^9, 3.687607030577381*^9}, {
   3.6876071666731567`*^9, 3.687607186291253*^9}, {3.687607285983603*^9, 
   3.6876072881055098`*^9}, {3.687607335330193*^9, 3.687607348370677*^9}, {
   3.687608309107409*^9, 3.687608314048029*^9}, {3.687608527919517*^9, 
   3.6876085391967773`*^9}, {3.7083484441633043`*^9, 3.708348454475121*^9}, {
   3.711228786729246*^9, 3.711228842615202*^9}, {3.7112288786256523`*^9, 
   3.711228897633531*^9}, {3.711228942086515*^9, 3.711229011999175*^9}, {
   3.7112290866069307`*^9, 3.711229106819879*^9}, {3.71127011786569*^9, 
   3.7112701793143053`*^9}, {3.7112702167320642`*^9, 
   3.7112702301951933`*^9}, {3.711270260989423*^9, 3.7112704421519613`*^9}, {
   3.711270491609223*^9, 3.711270592033512*^9}, {3.711270633635048*^9, 
   3.7112711012835827`*^9}, {3.711272836702331*^9, 3.711272837606573*^9}, {
   3.7112730774308023`*^9, 3.711273078293826*^9}, {3.711298532395337*^9, 
   3.7112985329070997`*^9}, {3.737790573174683*^9, 3.737790576116074*^9}, {
   3.7377906253203*^9, 3.737790647285966*^9}, {3.737790682201747*^9, 
   3.737790769490415*^9}, {3.737790836753832*^9, 3.737790869019266*^9}, {
   3.737790924778406*^9, 3.7377910741290913`*^9}, {3.737791115285082*^9, 
   3.737791186427857*^9}, {3.737791223368141*^9, 3.737791229428535*^9}, {
   3.737791296285159*^9, 3.7377913804890947`*^9}, {3.737791419126979*^9, 
   3.737791426330103*^9}, {3.7377914820387383`*^9, 3.737791489451543*^9}, {
   3.737791617164002*^9, 3.737791716045895*^9}, {3.737791757673148*^9, 
   3.73779176058875*^9}, {3.73779179345967*^9, 3.737791858253134*^9}, {
   3.737791932425003*^9, 3.7377920027896433`*^9}, {3.737792049268188*^9, 
   3.737792119954608*^9}, {3.7377921806176233`*^9, 3.737792181199522*^9}, {
   3.737792224350836*^9, 3.737792235173802*^9}, {3.737792386475005*^9, 
   3.737792394194154*^9}, {3.7377925594207487`*^9, 3.737792633052071*^9}, {
   3.737792683193573*^9, 3.73779269012036*^9}, {3.7377927360974083`*^9, 
   3.7377927710326443`*^9}, {3.737792831925131*^9, 3.7377929265046453`*^9}, {
   3.737792992615171*^9, 3.737793003813959*^9}, {3.745223160894552*^9, 
   3.745223167514275*^9}},ExpressionUUID->"ecb009d6-bcb5-4e2f-85fd-\
5b7a46465110"],

Cell[BoxData[
 GraphicsBox[{
   GraphicsComplexBox[{{-89.9999963265306, -10.}, {
    89.9999963265306, -10.}}, {}], {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\[Theta] (\[Degree])\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \\(rep\\)]\\) (\[Degree])\"", 
     TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    GrayLevel[0], 
    LineBox[
     NCache[{{
       Rational[55, 2] - 10 Cos[Rational[1, 8] Pi], 60 - 10 
        Sin[Rational[1, 8] Pi]}, {
       Rational[45, 2] - 10 Cos[Rational[1, 8] Pi], 60 - 10 
        Sin[Rational[1, 8] Pi]}, {
       25 - 10 Cos[Rational[1, 8] Pi], 60 + Rational[5, 2] 3^Rational[1, 2] - 
        10 Sin[Rational[1, 8] Pi]}}, {{18.261204674887132`, 
      56.1731656763491}, {13.261204674887132`, 56.1731656763491}, {
      15.761204674887132`, 60.5032926952713}}]], 
    GrayLevel[0], 
    LineBox[
     NCache[{{
       Rational[35, 2] + 10 Cos[Rational[1, 8] Pi], 60 + 
        10 Sin[Rational[1, 8] Pi]}, {
       Rational[45, 2] + 10 Cos[Rational[1, 8] Pi], 60 + 
        10 Sin[Rational[1, 8] Pi]}, {
       20 + 10 Cos[Rational[1, 8] Pi], 60 + Rational[5, 2] 3^Rational[1, 2] + 
        10 Sin[Rational[1, 8] Pi]}}, {{26.738795325112868`, 
      63.8268343236509}, {31.738795325112868`, 63.8268343236509}, {
      29.238795325112868`, 68.1569613425731}}]], 
    CircleBox[
     NCache[{
      Rational[45, 2] - 10 Cos[Rational[1, 8] Pi], 60 - 10 
       Sin[Rational[1, 8] Pi]}, {13.261204674887132`, 56.1731656763491}], 
     NCache[
      Rational[10, 3], 3.3333333333333335`], 
     NCache[{0, Rational[1, 3] Pi}, {0, 1.0471975511965976`}]], 
    CircleBox[
     NCache[{
      Rational[45, 2] + 10 Cos[Rational[1, 8] Pi], 60 + 
       10 Sin[Rational[1, 8] Pi]}, {31.738795325112868`, 63.8268343236509}], 
     NCache[
      Rational[10, 3], 3.3333333333333335`], 
     NCache[{Pi, Rational[2, 3] Pi}, {3.141592653589793, 
      2.0943951023931953`}]], 
    InsetBox[
     FormBox["\"\[Alpha]\"", TraditionalForm], {18.9, 58.6}], 
    InsetBox[
     FormBox["\"\[Alpha]\"", TraditionalForm], {26., 66}], 
    GrayLevel[0], 
    LineBox[
     NCache[{{50, 60}, {45, 60}, {
       45 + 5 2^Rational[-1, 2], 60 + 5 2^Rational[-1, 2]}}, {{50, 60}, {45, 
       60}, {48.53553390593274, 63.53553390593274}}]], 
    CircleBox[{45, 60}, 
     NCache[
      Rational[10, 3], 3.3333333333333335`], 
     NCache[{0, Rational[1, 4] Pi}, {0, 0.7853981633974483}]], 
    InsetBox[
     FormBox["\"\[Theta]\"", TraditionalForm], {51, 62}]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{969.78515625, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-70, 70}, {-10, 80}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Prolog->{{{{
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[
        NCache[{{-45 + 5 2^Rational[1, 2], 15 - 5 2^Rational[1, 2]}, {-45 + 
           4 2^Rational[1, 2], 15 - 6 2^Rational[1, 2]}, {-45 - 6 
           2^Rational[1, 2], 15 + 4 2^Rational[1, 2]}, {-45 - 5 
           2^Rational[1, 2], 15 + 
           5 2^Rational[1, 2]}}, {{-37.928932188134524`, 
         7.9289321881345245`}, {-39.34314575050762, 
         6.514718625761429}, {-53.48528137423857, 
         20.65685424949238}, {-52.071067811865476`, 22.071067811865476`}}]], 
       EdgeForm[{
         RGBColor[0.368417, 0.506779, 0.709798]}], 
       RGBColor[0.368417, 0.506779, 0.709798], 
       LineBox[
        NCache[{{-45 + 5 2^Rational[1, 2], 15 - 5 2^Rational[1, 2]}, {-45 - 5 
           2^Rational[1, 2], 15 + 
           5 2^Rational[1, 2]}}, {{-37.928932188134524`, 
         7.9289321881345245`}, {-52.071067811865476`, 
         22.071067811865476`}}]], {
        GrayLevel[0], 
        EdgeForm[None], 
        DiskBox[{-45, 15}, 
         NCache[
          Rational[1, 3], 0.3333333333333333]]}}, {
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[{{-13.261204674887132`, 
        11.173165676349102`}, {-14.026571539617311`, 
        9.325406611326528}, {-32.50416218984305, 
        16.979075258628328`}, {-31.738795325112868`, 18.8268343236509}}], 
       EdgeForm[{
         RGBColor[0.368417, 0.506779, 0.709798]}], 
       RGBColor[0.368417, 0.506779, 0.709798], 
       LineBox[{{-13.261204674887132`, 
        11.173165676349102`}, {-31.738795325112868`, 18.8268343236509}}], {
        GrayLevel[0], 
        EdgeForm[None], 
        DiskBox[{-22.5, 15}, 
         NCache[
          Rational[1, 3], 0.3333333333333333]]}}, {
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[{{10, 15}, {10, 13}, {-10, 13}, {-10, 15}}], 
       EdgeForm[{
         RGBColor[0.368417, 0.506779, 0.709798]}], 
       RGBColor[0.368417, 0.506779, 0.709798], {
        PolygonBox[
         NCache[{{10, 
           15}, {-10 + 5 (-1 + 3^Rational[1, 2]) (1 + 3^Rational[1, 2]), 15 + 
            5 (-1 + 3^Rational[1, 2])^2}, {-10, 15}}, {{10, 
           15}, {-1.7763568394002505`*^-15, 17.679491924311225`}, {-10, 
           15}}]], 
        GrayLevel[0], 
        Thickness[0.002], 
        LineBox[
         NCache[{{0, 15}, {0, 15 + 10 (2 - 3^Rational[1, 2])}}, {{0, 15}, {
           0, 17.67949192431123}}]], {
         Thickness[0.0015], 
         RGBColor[1, 0, 0], 
         LineBox[
          
          NCache[{{
            Rational[1, 3] (-10 + 
              5 (-1 + 3^Rational[1, 2]) (1 + 3^Rational[1, 2])), 15}, {
            Rational[1, 3] (-10 + 
              5 (-1 + 3^Rational[1, 2]) (1 + 3^Rational[1, 2])), 15 + 
             3 (-15 + Rational[1, 3] (45 + 
                 5 (-1 + 3^Rational[1, 2])^2))}}, {{-5.921189464667501*^-16, 
             15}, {-5.921189464667501*^-16, 17.67949192431123}}]], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Thickness[Tiny]]], 
         GrayLevel[0], 
         DiskBox[
          
          NCache[{Rational[1, 3] (-10 + 
             5 (-1 + 3^Rational[1, 2]) (1 + 3^Rational[1, 2])), 
            Rational[1, 3] (45 + 
             5 (-1 + 3^Rational[1, 2])^2)}, {-5.921189464667501*^-16, 
           15.89316397477041}], 1], 
         GrayLevel[1], 
         DiskBox[
          
          NCache[{Rational[1, 3] (-10 + 
             5 (-1 + 3^Rational[1, 2]) (1 + 3^Rational[1, 2])), 
            Rational[1, 3] (45 + 
             5 (-1 + 3^Rational[1, 2])^2)}, {-5.921189464667501*^-16, 
           15.89316397477041}], 1, 
          
          NCache[{45 Degree, 135 Degree}, {0.7853981633974483, 
           2.356194490192345}]], 
         DiskBox[
          
          NCache[{Rational[1, 3] (-10 + 
             5 (-1 + 3^Rational[1, 2]) (1 + 3^Rational[1, 2])), 
            Rational[1, 3] (45 + 
             5 (-1 + 3^Rational[1, 2])^2)}, {-5.921189464667501*^-16, 
           15.89316397477041}], 1, 
          
          NCache[{(-45) Degree, (-135) 
            Degree}, {-0.7853981633974483, -2.356194490192345}]]}}, {
        GrayLevel[0], 
        EdgeForm[None], 
        DiskBox[{0, 15}, 
         NCache[
          Rational[1, 3], 0.3333333333333333]]}}, {
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[{{31.738795325112868`, 18.8268343236509}, {
        32.50416218984305, 16.979075258628328`}, {14.026571539617311`, 
        9.325406611326528}, {13.261204674887132`, 11.173165676349102`}}], 
       EdgeForm[{
         RGBColor[0.368417, 0.506779, 0.709798]}], 
       RGBColor[0.368417, 0.506779, 0.709798], 
       LineBox[{{31.738795325112868`, 18.8268343236509}, {13.261204674887132`,
         11.173165676349102`}}], {
        GrayLevel[0], 
        EdgeForm[None], 
        DiskBox[{22.5, 15}, 
         NCache[
          Rational[1, 3], 0.3333333333333333]]}}, {
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[
        NCache[{{45 + 5 2^Rational[1, 2], 15 + 5 2^Rational[1, 2]}, {
          45 + 6 2^Rational[1, 2], 15 + 4 2^Rational[1, 2]}, {
          45 - 4 2^Rational[1, 2], 15 - 6 2^Rational[1, 2]}, {
          45 - 5 2^Rational[1, 2], 15 - 5 2^Rational[1, 2]}}, {{
         52.071067811865476`, 22.071067811865476`}, {53.48528137423857, 
         20.65685424949238}, {39.34314575050762, 6.514718625761429}, {
         37.928932188134524`, 7.9289321881345245`}}]], 
       EdgeForm[{
         RGBColor[0.368417, 0.506779, 0.709798]}], 
       RGBColor[0.368417, 0.506779, 0.709798], 
       LineBox[
        NCache[{{45 + 5 2^Rational[1, 2], 15 + 5 2^Rational[1, 2]}, {
          45 - 5 2^Rational[1, 2], 15 - 5 2^Rational[1, 2]}}, {{
         52.071067811865476`, 22.071067811865476`}, {37.928932188134524`, 
         7.9289321881345245`}}]], {
        GrayLevel[0], 
        EdgeForm[None], 
        DiskBox[{45, 15}, 
         NCache[
          Rational[1, 3], 0.3333333333333333]]}}}, {{
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[
        NCache[{{-45 + 5 2^Rational[1, 2], 30 - 5 2^Rational[1, 2]}, {-45 + 
           4 2^Rational[1, 2], 30 - 6 2^Rational[1, 2]}, {-45 - 6 
           2^Rational[1, 2], 30 + 4 2^Rational[1, 2]}, {-45 - 5 
           2^Rational[1, 2], 30 + 
           5 2^Rational[1, 2]}}, {{-37.928932188134524`, 
         22.928932188134524`}, {-39.34314575050762, 
         21.51471862576143}, {-53.48528137423857, 
         35.65685424949238}, {-52.071067811865476`, 37.071067811865476`}}]], 
       EdgeForm[{
         RGBColor[0.880722, 0.611041, 0.142051]}], 
       RGBColor[0.880722, 0.611041, 0.142051], 
       LineBox[
        NCache[{{-45 + 5 2^Rational[1, 2], 30 - 5 2^Rational[1, 2]}, {-45 - 5 
           2^Rational[1, 2], 30 + 
           5 2^Rational[1, 2]}}, {{-37.928932188134524`, 
         22.928932188134524`}, {-52.071067811865476`, 
         37.071067811865476`}}]], {
        GrayLevel[0], 
        EdgeForm[None], 
        DiskBox[{-45, 30}, 
         NCache[
          Rational[1, 3], 0.3333333333333333]]}}, {
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[{{-13.261204674887132`, 
        26.1731656763491}, {-14.026571539617311`, 
        24.325406611326528`}, {-32.50416218984305, 
        31.979075258628328`}, {-31.738795325112868`, 33.8268343236509}}], 
       EdgeForm[{
         RGBColor[0.880722, 0.611041, 0.142051]}], 
       RGBColor[0.880722, 0.611041, 0.142051], {
        PolygonBox[{{-13.261204674887132`, 
         26.1731656763491}, {-29.128271480711838`, 
         35.33402096794177}, {-31.738795325112868`, 33.8268343236509}}], 
        GrayLevel[0], 
        Thickness[0.002], 
        LineBox[{{-22.5, 30}, {-22.5, 31.507186644290872`}}], {
         Thickness[0.0015], 
         RGBColor[1, 0, 0], 
         LineBox[{{-24.709423826903947`, 30}, {-24.709423826903947`, 
           35.33402096794177}}], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Thickness[Tiny]]], 
         GrayLevel[0], 
         DiskBox[{-24.709423826903947`, 31.778006989313923`}, 1], 
         GrayLevel[1], 
         DiskBox[{-24.709423826903947`, 31.778006989313923`}, 1, 
          
          NCache[{45 Degree, 135 Degree}, {0.7853981633974483, 
           2.356194490192345}]], 
         DiskBox[{-24.709423826903947`, 31.778006989313923`}, 1, 
          
          NCache[{(-45) Degree, (-135) 
            Degree}, {-0.7853981633974483, -2.356194490192345}]]}}, {
        GrayLevel[0], 
        EdgeForm[None], 
        DiskBox[{-22.5, 30}, 
         NCache[
          Rational[1, 3], 0.3333333333333333]]}}, {
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[{{10, 30}, {10, 28}, {-10, 28}, {-10, 30}}], 
       EdgeForm[{
         RGBColor[0.880722, 0.611041, 0.142051]}], 
       RGBColor[0.880722, 0.611041, 0.142051], {
        PolygonBox[
         NCache[{{10, 30}, {0, 30 + 10 3^Rational[-1, 2]}, {-10, 30}}, {{10, 
           30}, {0, 35.773502691896255`}, {-10, 30}}]], 
        GrayLevel[0], 
        Thickness[0.002], 
        LineBox[
         NCache[{{0, 30}, {0, 30 + 10 3^Rational[-1, 2]}}, {{0, 30}, {
           0, 35.773502691896255`}}]], {
         Thickness[0.0015], 
         RGBColor[1, 0, 0], 
         LineBox[
          
          NCache[{{0, 30}, {
            0, 30 + 3 (-30 + Rational[1, 3] (90 + 10 3^Rational[-1, 2]))}}, {{
            0, 30}, {0, 35.77350269189625}}]], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Thickness[Tiny]]], 
         GrayLevel[0], 
         DiskBox[
          
          NCache[{0, Rational[1, 3] (90 + 10 3^Rational[-1, 2])}, {
           0, 31.92450089729875}], 1], 
         GrayLevel[1], 
         DiskBox[
          
          NCache[{0, Rational[1, 3] (90 + 10 3^Rational[-1, 2])}, {
           0, 31.92450089729875}], 1, 
          
          NCache[{45 Degree, 135 Degree}, {0.7853981633974483, 
           2.356194490192345}]], 
         DiskBox[
          
          NCache[{0, Rational[1, 3] (90 + 10 3^Rational[-1, 2])}, {
           0, 31.92450089729875}], 1, 
          
          NCache[{(-45) Degree, (-135) 
            Degree}, {-0.7853981633974483, -2.356194490192345}]]}}, {
        GrayLevel[0], 
        EdgeForm[None], 
        DiskBox[{0, 30}, 
         NCache[
          Rational[1, 3], 0.3333333333333333]]}}, {
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[{{31.738795325112868`, 33.8268343236509}, {
        32.50416218984305, 31.979075258628328`}, {14.026571539617311`, 
        24.325406611326528`}, {13.261204674887132`, 26.1731656763491}}], 
       EdgeForm[{
         RGBColor[0.880722, 0.611041, 0.142051]}], 
       RGBColor[0.880722, 0.611041, 0.142051], {
        PolygonBox[{{31.738795325112868`, 33.8268343236509}, {
         29.128271480711838`, 35.33402096794177}, {13.261204674887132`, 
         26.1731656763491}}], 
        GrayLevel[0], 
        Thickness[0.002], 
        LineBox[{{22.5, 30}, {22.5, 31.507186644290872`}}], {
         Thickness[0.0015], 
         RGBColor[1, 0, 0], 
         LineBox[{{24.709423826903944`, 30}, {24.709423826903944`, 
           35.33402096794177}}], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Thickness[Tiny]]], 
         GrayLevel[0], 
         DiskBox[{24.709423826903944`, 31.778006989313923`}, 1], 
         GrayLevel[1], 
         DiskBox[{24.709423826903944`, 31.778006989313923`}, 1, 
          
          NCache[{45 Degree, 135 Degree}, {0.7853981633974483, 
           2.356194490192345}]], 
         DiskBox[{24.709423826903944`, 31.778006989313923`}, 1, 
          
          NCache[{(-45) Degree, (-135) 
            Degree}, {-0.7853981633974483, -2.356194490192345}]]}}, {
        GrayLevel[0], 
        EdgeForm[None], 
        DiskBox[{22.5, 30}, 
         NCache[
          Rational[1, 3], 0.3333333333333333]]}}, {
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[
        NCache[{{45 + 5 2^Rational[1, 2], 30 + 5 2^Rational[1, 2]}, {
          45 + 6 2^Rational[1, 2], 30 + 4 2^Rational[1, 2]}, {
          45 - 4 2^Rational[1, 2], 30 - 6 2^Rational[1, 2]}, {
          45 - 5 2^Rational[1, 2], 30 - 5 2^Rational[1, 2]}}, {{
         52.071067811865476`, 37.071067811865476`}, {53.48528137423857, 
         35.65685424949238}, {39.34314575050762, 21.51471862576143}, {
         37.928932188134524`, 22.928932188134524`}}]], 
       EdgeForm[{
         RGBColor[0.880722, 0.611041, 0.142051]}], 
       RGBColor[0.880722, 0.611041, 0.142051], 
       LineBox[
        NCache[{{45 + 5 2^Rational[1, 2], 30 + 5 2^Rational[1, 2]}, {
          45 - 5 2^Rational[1, 2], 30 - 5 2^Rational[1, 2]}}, {{
         52.071067811865476`, 37.071067811865476`}, {37.928932188134524`, 
         22.928932188134524`}}]], {
        GrayLevel[0], 
        EdgeForm[None], 
        DiskBox[{45, 30}, 
         NCache[
          Rational[1, 3], 0.3333333333333333]]}}}, {{
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[
        NCache[{{-45 + 5 2^Rational[1, 2], 45 - 5 2^Rational[1, 2]}, {-45 + 
           4 2^Rational[1, 2], 45 - 6 2^Rational[1, 2]}, {-45 - 6 
           2^Rational[1, 2], 45 + 4 2^Rational[1, 2]}, {-45 - 5 
           2^Rational[1, 2], 45 + 
           5 2^Rational[1, 2]}}, {{-37.928932188134524`, 
         37.928932188134524`}, {-39.34314575050762, 
         36.51471862576143}, {-53.48528137423857, 
         50.65685424949238}, {-52.071067811865476`, 52.071067811865476`}}]], 
       EdgeForm[{
         RGBColor[0.560181, 0.691569, 0.194885]}], 
       RGBColor[0.560181, 0.691569, 0.194885], 
       LineBox[
        NCache[{{-45 + 5 2^Rational[1, 2], 45 - 5 2^Rational[1, 2]}, {-45 - 5 
           2^Rational[1, 2], 45 + 
           5 2^Rational[1, 2]}}, {{-37.928932188134524`, 
         37.928932188134524`}, {-52.071067811865476`, 
         52.071067811865476`}}]], {
        GrayLevel[0], 
        EdgeForm[None], 
        DiskBox[{-45, 45}, 
         NCache[
          Rational[1, 3], 0.3333333333333333]]}}, {
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[{{-13.261204674887132`, 
        41.1731656763491}, {-14.026571539617311`, 
        39.32540661132653}, {-32.50416218984305, 
        46.97907525862833}, {-31.738795325112868`, 48.8268343236509}}], 
       EdgeForm[{
         RGBColor[0.560181, 0.691569, 0.194885]}], 
       RGBColor[0.560181, 0.691569, 0.194885], {
        PolygonBox[{{-13.261204674887132`, 
         41.1731656763491}, {-26.3268343236509, 
         54.23879532511287}, {-31.738795325112868`, 48.8268343236509}}], 
        GrayLevel[0], 
        Thickness[0.002], 
        LineBox[{{-22.5, 45}, {-22.5, 50.41196100146197}}], {
         Thickness[0.0015], 
         RGBColor[1, 0, 0], 
         LineBox[{{-23.775611441216967`, 45}, {-23.775611441216967`, 
           54.238795325112875`}}], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Thickness[Tiny]]], 
         GrayLevel[0], 
         DiskBox[{-23.775611441216967`, 48.07959844170429}, 1], 
         GrayLevel[1], 
         DiskBox[{-23.775611441216967`, 48.07959844170429}, 1, 
          
          NCache[{45 Degree, 135 Degree}, {0.7853981633974483, 
           2.356194490192345}]], 
         DiskBox[{-23.775611441216967`, 48.07959844170429}, 1, 
          NCache[{(-45) Degree, (-135) 
            Degree}, {-0.7853981633974483, -2.356194490192345}]]}}, {
        GrayLevel[0], 
        EdgeForm[None], 
        DiskBox[{-22.5, 45}, 
         NCache[
          Rational[1, 3], 0.3333333333333333]]}}, {
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[{{10, 45}, {10, 43}, {-10, 43}, {-10, 45}}], 
       EdgeForm[{
         RGBColor[0.560181, 0.691569, 0.194885]}], 
       RGBColor[0.560181, 0.691569, 0.194885], {
        PolygonBox[{{10, 45}, {0, 55}, {-10, 45}}], 
        GrayLevel[0], 
        Thickness[0.002], 
        LineBox[{{0, 45}, {0, 55}}], {
         Thickness[0.0015], 
         RGBColor[1, 0, 0], 
         LineBox[{{0, 45}, {0, 55}}], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Thickness[Tiny]]], 
         GrayLevel[0], 
         DiskBox[
          NCache[{0, 
            Rational[145, 3]}, {0, 48.333333333333336`}], 1], 
         GrayLevel[1], 
         DiskBox[
          NCache[{0, 
            Rational[145, 3]}, {0, 48.333333333333336`}], 1, 
          
          NCache[{45 Degree, 135 Degree}, {0.7853981633974483, 
           2.356194490192345}]], 
         DiskBox[
          NCache[{0, 
            Rational[145, 3]}, {0, 48.333333333333336`}], 1, 
          
          NCache[{(-45) Degree, (-135) 
            Degree}, {-0.7853981633974483, -2.356194490192345}]]}}, {
        GrayLevel[0], 
        EdgeForm[None], 
        DiskBox[{0, 45}, 
         NCache[
          Rational[1, 3], 0.3333333333333333]]}}, {
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[{{31.738795325112868`, 48.8268343236509}, {
        32.50416218984305, 46.97907525862833}, {14.026571539617311`, 
        39.32540661132653}, {13.261204674887132`, 41.1731656763491}}], 
       EdgeForm[{
         RGBColor[0.560181, 0.691569, 0.194885]}], 
       RGBColor[0.560181, 0.691569, 0.194885], {
        PolygonBox[{{31.738795325112868`, 48.8268343236509}, {
         26.326834323650893`, 54.23879532511286}, {13.261204674887132`, 
         41.1731656763491}}], 
        GrayLevel[0], 
        Thickness[0.002], 
        LineBox[{{22.5, 45}, {22.5, 50.41196100146197}}], {
         Thickness[0.0015], 
         RGBColor[1, 0, 0], 
         LineBox[{{23.77561144121696, 45}, {23.77561144121696, 
           54.23879532511283}}], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Thickness[Tiny]]], 
         GrayLevel[0], 
         DiskBox[{23.77561144121696, 48.07959844170428}, 1], 
         GrayLevel[1], 
         DiskBox[{23.77561144121696, 48.07959844170428}, 1, 
          
          NCache[{45 Degree, 135 Degree}, {0.7853981633974483, 
           2.356194490192345}]], 
         DiskBox[{23.77561144121696, 48.07959844170428}, 1, 
          
          NCache[{(-45) Degree, (-135) 
            Degree}, {-0.7853981633974483, -2.356194490192345}]]}}, {
        GrayLevel[0], 
        EdgeForm[None], 
        DiskBox[{22.5, 45}, 
         NCache[
          Rational[1, 3], 0.3333333333333333]]}}, {
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[
        NCache[{{45 + 5 2^Rational[1, 2], 45 + 5 2^Rational[1, 2]}, {
          45 + 6 2^Rational[1, 2], 45 + 4 2^Rational[1, 2]}, {
          45 - 4 2^Rational[1, 2], 45 - 6 2^Rational[1, 2]}, {
          45 - 5 2^Rational[1, 2], 45 - 5 2^Rational[1, 2]}}, {{
         52.071067811865476`, 52.071067811865476`}, {53.48528137423857, 
         50.65685424949238}, {39.34314575050762, 36.51471862576143}, {
         37.928932188134524`, 37.928932188134524`}}]], 
       EdgeForm[{
         RGBColor[0.560181, 0.691569, 0.194885]}], 
       RGBColor[0.560181, 0.691569, 0.194885], 
       LineBox[
        NCache[{{45 + 5 2^Rational[1, 2], 45 + 5 2^Rational[1, 2]}, {
          45 - 5 2^Rational[1, 2], 45 - 5 2^Rational[1, 2]}}, {{
         52.071067811865476`, 52.071067811865476`}, {37.928932188134524`, 
         37.928932188134524`}}]], {
        GrayLevel[0], 
        EdgeForm[None], 
        DiskBox[{45, 45}, 
         NCache[
          Rational[1, 3], 0.3333333333333333]]}}}, {{
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[
        NCache[{{-45 + 5 2^Rational[1, 2], 60 - 5 2^Rational[1, 2]}, {-45 + 
           4 2^Rational[1, 2], 60 - 6 2^Rational[1, 2]}, {-45 - 6 
           2^Rational[1, 2], 60 + 4 2^Rational[1, 2]}, {-45 - 5 
           2^Rational[1, 2], 60 + 
           5 2^Rational[1, 2]}}, {{-37.928932188134524`, 
         52.928932188134524`}, {-39.34314575050762, 
         51.51471862576143}, {-53.48528137423857, 
         65.65685424949238}, {-52.071067811865476`, 67.07106781186548}}]], 
       EdgeForm[{
         RGBColor[0.922526, 0.385626, 0.209179]}], 
       RGBColor[0.922526, 0.385626, 0.209179], {
        PolygonBox[
         NCache[{{-45 + 5 2^Rational[1, 2], 60 - 5 2^Rational[1, 2]}, {-45 - 
            5 2^Rational[1, 2] + 
            5 Rational[2, 3]^Rational[1, 2] (-1 + 3^Rational[1, 2]), 60 + 
            5 2^Rational[1, 2] + 
            5 2^Rational[1, 2] (-1 + 3^Rational[1, 2])}, {-45 - 5 
            2^Rational[1, 2], 60 + 
            5 2^Rational[1, 2]}}, {{-37.928932188134524`, 
          52.928932188134524`}, {-49.08248290463863, 
          72.24744871391589}, {-52.071067811865476`, 67.07106781186548}}]], 
        GrayLevel[0], 
        Thickness[0.002], 
        LineBox[
         NCache[{{-45, 
           60}, {-45, 60 + 
            10 (Rational[3, 2]^Rational[1, 2] - 2^Rational[-1, 2])}}, {{-45, 
           60}, {-45, 65.17638090205041}}]], {
         Thickness[0.0015], 
         RGBColor[1, 0, 0], 
         LineBox[
          
          NCache[{{
            Rational[1, 3] (-135 - 5 2^Rational[1, 2] + 
              5 Rational[2, 3]^Rational[1, 2] (-1 + 3^Rational[1, 2])), 60}, {
            Rational[1, 3] (-135 - 5 2^Rational[1, 2] + 
              5 Rational[2, 3]^Rational[1, 2] (-1 + 3^Rational[1, 2])), 60 + 
             3 (-60 + Rational[1, 3] (180 + 5 2^Rational[1, 2] + 
                 5 2^Rational[1, 2] (-1 + 
                   3^Rational[1, 2])))}}, {{-46.36082763487954, 
             60}, {-46.36082763487954, 72.24744871391587}}]], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Thickness[Tiny]]], 
         GrayLevel[0], 
         DiskBox[
          
          NCache[{Rational[1, 3] (-135 - 5 2^Rational[1, 2] + 
             5 Rational[2, 3]^Rational[1, 2] (-1 + 3^Rational[1, 2])), 
            Rational[1, 3] (180 + 5 2^Rational[1, 2] + 
             5 2^Rational[1, 2] (-1 + 
               3^Rational[1, 2]))}, {-46.36082763487954, 64.08248290463862}], 
          1], 
         GrayLevel[1], 
         DiskBox[
          
          NCache[{Rational[1, 3] (-135 - 5 2^Rational[1, 2] + 
             5 Rational[2, 3]^Rational[1, 2] (-1 + 3^Rational[1, 2])), 
            Rational[1, 3] (180 + 5 2^Rational[1, 2] + 
             5 2^Rational[1, 2] (-1 + 
               3^Rational[1, 2]))}, {-46.36082763487954, 64.08248290463862}], 
          1, 
          
          NCache[{45 Degree, 135 Degree}, {0.7853981633974483, 
           2.356194490192345}]], 
         DiskBox[
          
          NCache[{Rational[1, 3] (-135 - 5 2^Rational[1, 2] + 
             5 Rational[2, 3]^Rational[1, 2] (-1 + 3^Rational[1, 2])), 
            Rational[1, 3] (180 + 5 2^Rational[1, 2] + 
             5 2^Rational[1, 2] (-1 + 
               3^Rational[1, 2]))}, {-46.36082763487954, 64.08248290463862}], 
          1, 
          
          NCache[{(-45) Degree, (-135) 
            Degree}, {-0.7853981633974483, -2.356194490192345}]]}}, {
        GrayLevel[0], 
        EdgeForm[None], 
        DiskBox[{-45, 60}, 
         NCache[
          Rational[1, 3], 0.3333333333333333]]}}, {
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[{{-13.261204674887132`, 
        56.1731656763491}, {-14.026571539617311`, 
        54.32540661132653}, {-32.50416218984305, 
        61.97907525862833}, {-31.738795325112868`, 63.8268343236509}}], 
       EdgeForm[{
         RGBColor[0.922526, 0.385626, 0.209179]}], 
       RGBColor[0.922526, 0.385626, 0.209179], {
        PolygonBox[{{-13.261204674887132`, 
         56.1731656763491}, {-24.709423826903947`, 
         76.0020629038253}, {-31.738795325112868`, 63.8268343236509}}], 
        GrayLevel[0], 
        Thickness[0.002], 
        LineBox[{{-22.5, 60}, {-22.5, 72.1752285801744}}], {
         Thickness[0.0015], 
         RGBColor[1, 0, 0], 
         LineBox[{{-23.23647460896798, 60}, {-23.23647460896798, 
           76.0020629038253}}], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Thickness[Tiny]]], 
         GrayLevel[0], 
         DiskBox[{-23.23647460896798, 65.33402096794177}, 1], 
         GrayLevel[1], 
         DiskBox[{-23.23647460896798, 65.33402096794177}, 1, 
          
          NCache[{45 Degree, 135 Degree}, {0.7853981633974483, 
           2.356194490192345}]], 
         DiskBox[{-23.23647460896798, 65.33402096794177}, 1, 
          
          NCache[{(-45) Degree, (-135) 
            Degree}, {-0.7853981633974483, -2.356194490192345}]]}}, {
        GrayLevel[0], 
        EdgeForm[None], 
        DiskBox[{-22.5, 60}, 
         NCache[
          Rational[1, 3], 0.3333333333333333]]}}, {
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[{{10, 60}, {10, 58}, {-10, 58}, {-10, 60}}], 
       EdgeForm[{
         RGBColor[0.922526, 0.385626, 0.209179]}], 
       RGBColor[0.922526, 0.385626, 0.209179], {
        PolygonBox[
         NCache[{{10, 60}, {0, 60 + 10 3^Rational[1, 2]}, {-10, 60}}, {{10, 
           60}, {0, 77.32050807568876}, {-10, 60}}]], 
        GrayLevel[0], 
        Thickness[0.002], 
        LineBox[
         NCache[{{0, 60}, {0, 60 + 10 3^Rational[1, 2]}}, {{0, 60}, {
           0, 77.32050807568876}}]], {
         Thickness[0.0015], 
         RGBColor[1, 0, 0], 
         LineBox[
          
          NCache[{{0, 60}, {
            0, 60 + 3 (-60 + Rational[1, 3] (180 + 10 3^Rational[1, 2]))}}, {{
            0, 60}, {0, 77.32050807568876}}]], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Thickness[Tiny]]], 
         GrayLevel[0], 
         DiskBox[
          
          NCache[{0, Rational[1, 3] (180 + 10 3^Rational[1, 2])}, {
           0, 65.77350269189625}], 1], 
         GrayLevel[1], 
         DiskBox[
          
          NCache[{0, Rational[1, 3] (180 + 10 3^Rational[1, 2])}, {
           0, 65.77350269189625}], 1, 
          NCache[{45 Degree, 135 Degree}, {0.7853981633974483, 
           2.356194490192345}]], 
         DiskBox[
          
          NCache[{0, Rational[1, 3] (180 + 10 3^Rational[1, 2])}, {
           0, 65.77350269189625}], 1, 
          
          NCache[{(-45) Degree, (-135) 
            Degree}, {-0.7853981633974483, -2.356194490192345}]]}}, {
        GrayLevel[0], 
        EdgeForm[None], 
        DiskBox[{0, 60}, 
         NCache[
          Rational[1, 3], 0.3333333333333333]]}}, {
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[{{31.738795325112868`, 63.8268343236509}, {
        32.50416218984305, 61.97907525862833}, {14.026571539617311`, 
        54.32540661132653}, {13.261204674887132`, 56.1731656763491}}], 
       EdgeForm[{
         RGBColor[0.922526, 0.385626, 0.209179]}], 
       RGBColor[0.922526, 0.385626, 0.209179], {
        PolygonBox[{{31.738795325112868`, 63.8268343236509}, {
         24.70942382690395, 76.0020629038253}, {13.261204674887132`, 
         56.1731656763491}}], 
        GrayLevel[0], 
        Thickness[0.002], 
        LineBox[{{22.5, 60}, {22.5, 72.1752285801744}}], {
         Thickness[0.0015], 
         RGBColor[1, 0, 0], 
         LineBox[{{23.23647460896798, 60}, {23.23647460896798, 
           76.0020629038253}}], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Thickness[Tiny]]], 
         GrayLevel[0], 
         DiskBox[{23.23647460896798, 65.33402096794177}, 1], 
         GrayLevel[1], 
         DiskBox[{23.23647460896798, 65.33402096794177}, 1, 
          
          NCache[{45 Degree, 135 Degree}, {0.7853981633974483, 
           2.356194490192345}]], 
         DiskBox[{23.23647460896798, 65.33402096794177}, 1, 
          
          NCache[{(-45) Degree, (-135) 
            Degree}, {-0.7853981633974483, -2.356194490192345}]]}}, {
        GrayLevel[0], 
        EdgeForm[None], 
        DiskBox[{22.5, 60}, 
         NCache[
          Rational[1, 3], 0.3333333333333333]]}}, {
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[
        NCache[{{45 + 5 2^Rational[1, 2], 60 + 5 2^Rational[1, 2]}, {
          45 + 6 2^Rational[1, 2], 60 + 4 2^Rational[1, 2]}, {
          45 - 4 2^Rational[1, 2], 60 - 6 2^Rational[1, 2]}, {
          45 - 5 2^Rational[1, 2], 60 - 5 2^Rational[1, 2]}}, {{
         52.071067811865476`, 67.07106781186548}, {53.48528137423857, 
         65.65685424949238}, {39.34314575050762, 51.51471862576143}, {
         37.928932188134524`, 52.928932188134524`}}]], 
       EdgeForm[{
         RGBColor[0.922526, 0.385626, 0.209179]}], 
       RGBColor[0.922526, 0.385626, 0.209179], {
        PolygonBox[
         NCache[{{45 + 5 2^Rational[1, 2], 60 + 5 2^Rational[1, 2]}, {
           45 - 5 2^Rational[1, 2] + 
            5 Rational[2, 3]^Rational[1, 2] (1 + 3^Rational[1, 2]), 60 - 5 
            2^Rational[1, 2] + 5 2^Rational[1, 2] (1 + 3^Rational[1, 2])}, {
           45 - 5 2^Rational[1, 2], 60 - 5 2^Rational[1, 2]}}, {{
          52.071067811865476`, 67.07106781186548}, {49.08248290463863, 
          72.24744871391589}, {37.928932188134524`, 52.928932188134524`}}]], 
        GrayLevel[0], 
        Thickness[0.002], 
        LineBox[
         NCache[{{45, 60}, {
           45, 60 + 10 (Rational[3, 2]^Rational[1, 2] - 2^
              Rational[-1, 2])}}, {{45, 60}, {45, 65.17638090205041}}]], {
         Thickness[0.0015], 
         RGBColor[1, 0, 0], 
         LineBox[
          
          NCache[{{
            Rational[1, 3] (135 - 5 2^Rational[1, 2] + 
              5 Rational[2, 3]^Rational[1, 2] (1 + 3^Rational[1, 2])), 60}, {
            Rational[1, 3] (135 - 5 2^Rational[1, 2] + 
              5 Rational[2, 3]^Rational[1, 2] (1 + 3^Rational[1, 2])), 60 + 
             3 (-60 + Rational[1, 3] (180 - 5 2^Rational[1, 2] + 
                 5 2^Rational[1, 2] (1 + 3^Rational[1, 2])))}}, {{
            46.36082763487954, 60}, {46.36082763487954, 72.24744871391587}}]], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Thickness[Tiny]]], 
         GrayLevel[0], 
         DiskBox[
          
          NCache[{Rational[1, 3] (135 - 5 2^Rational[1, 2] + 
             5 Rational[2, 3]^Rational[1, 2] (1 + 3^Rational[1, 2])), 
            Rational[1, 3] (180 - 5 2^Rational[1, 2] + 
             5 2^Rational[1, 2] (1 + 3^Rational[1, 2]))}, {46.36082763487954, 
           64.08248290463862}], 1], 
         GrayLevel[1], 
         DiskBox[
          
          NCache[{Rational[1, 3] (135 - 5 2^Rational[1, 2] + 
             5 Rational[2, 3]^Rational[1, 2] (1 + 3^Rational[1, 2])), 
            Rational[1, 3] (180 - 5 2^Rational[1, 2] + 
             5 2^Rational[1, 2] (1 + 3^Rational[1, 2]))}, {46.36082763487954, 
           64.08248290463862}], 1, 
          
          NCache[{45 Degree, 135 Degree}, {0.7853981633974483, 
           2.356194490192345}]], 
         DiskBox[
          
          NCache[{Rational[1, 3] (135 - 5 2^Rational[1, 2] + 
             5 Rational[2, 3]^Rational[1, 2] (1 + 3^Rational[1, 2])), 
            Rational[1, 3] (180 - 5 2^Rational[1, 2] + 
             5 2^Rational[1, 2] (1 + 3^Rational[1, 2]))}, {46.36082763487954, 
           64.08248290463862}], 1, 
          
          NCache[{(-45) Degree, (-135) 
            Degree}, {-0.7853981633974483, -2.356194490192345}]]}}, {
        GrayLevel[0], 
        EdgeForm[None], 
        DiskBox[{45, 60}, 
         NCache[
          Rational[1, 3], 0.3333333333333333]]}}}}},
  Ticks->{{{-60, 
      FormBox[
       RowBox[{"-", "60"}], TraditionalForm]}, {-45, 
      FormBox[
       RowBox[{"-", "45"}], TraditionalForm]}, {-30, 
      FormBox[
       RowBox[{"-", "30"}], TraditionalForm]}, {-15, 
      FormBox[
       RowBox[{"-", "15"}], TraditionalForm]}, {15, 
      FormBox["15", TraditionalForm]}, {30, 
      FormBox["30", TraditionalForm]}, {45, 
      FormBox["45", TraditionalForm]}, {60, 
      FormBox["60", TraditionalForm]}}, {{15, 
      FormBox["15", TraditionalForm]}, {30, 
      FormBox["30", TraditionalForm]}, {45, 
      FormBox["45", TraditionalForm]}, {60, 
      FormBox["60", TraditionalForm]}}}]], "Output",
 CellChangeTimes->{{3.7377923789547167`*^9, 3.737792389870038*^9}, {
   3.737792537216036*^9, 3.737792582582645*^9}, {3.7377926235395193`*^9, 
   3.737792625833418*^9}, 3.7377926916429873`*^9, {3.737792760036175*^9, 
   3.737792771675932*^9}, {3.737792884335517*^9, 3.737792898172988*^9}, {
   3.737792928697933*^9, 3.737792936141672*^9}, 3.7377930069709806`*^9, {
   3.745223163771737*^9, 
   3.745223166279464*^9}},ExpressionUUID->"3b40bb2c-71d8-4165-bfb5-\
7f974e1f2d68"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1280, 687},
WindowMargins->{{34, Automatic}, {Automatic, 86}},
FrontEndVersion->"11.2 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1388, 26, 265, "Subchapter",ExpressionUUID->"2307a7fc-9fdb-49e5-83a4-ae087b36a4cc"],
Cell[1971, 50, 299, 7, 46, "Input",ExpressionUUID->"609b34b0-4524-4214-9ab2-3cd554013e44",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[2295, 61, 191, 3, 67, "Section",ExpressionUUID->"b5edb8c3-732f-4962-8a73-21bb9853d040"],
Cell[CellGroupData[{
Cell[2511, 68, 14141, 352, 969, "Input",ExpressionUUID->"74c981ce-af32-427d-bbd4-8e16accd0c37"],
Cell[16655, 422, 6410, 129, 597, "Output",ExpressionUUID->"0c411818-54d7-4ef5-b6e2-0cbf529f5930"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[23114, 557, 270, 6, 53, "Section",ExpressionUUID->"ef761106-4ac7-4f7e-8a7f-f1214b54c52f"],
Cell[23387, 565, 3169, 92, 119, "Input",ExpressionUUID->"b801c6f6-abc8-4a91-9d77-580d15169109"],
Cell[26559, 659, 268, 9, 104, "Text",ExpressionUUID->"e9fe129d-aacf-4124-84d6-0cc2c5f50a96"],
Cell[CellGroupData[{
Cell[26852, 672, 485, 12, 30, "Input",ExpressionUUID->"3eef647a-df59-4e9e-83fa-dcd12cff8022"],
Cell[27340, 686, 936, 26, 50, "Output",ExpressionUUID->"bff1c1f4-c1ac-4061-a9d7-123ad1d9da4d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28313, 717, 979, 29, 47, "Input",ExpressionUUID->"41af19b3-a8a9-4926-b956-6e7608d3aa71"],
Cell[29295, 748, 916, 28, 50, "Output",ExpressionUUID->"8076e48f-a9d7-4d50-81a6-997572166d75"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30248, 781, 1406, 40, 52, "Input",ExpressionUUID->"9023d952-b1d2-4846-9be5-7b017149a011"],
Cell[31657, 823, 2612, 50, 361, "Output",ExpressionUUID->"63b65a76-30e6-498a-beb2-66f7d77845ae"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34306, 878, 2480, 74, 165, "Input",ExpressionUUID->"d38bfbcf-ac17-470a-ae76-e2b3fcf6247c"],
Cell[36789, 954, 491, 13, 50, "Output",ExpressionUUID->"9a1c444d-a79b-4cdb-ab46-9448ee39ab15"]
}, Open  ]],
Cell[37295, 970, 1093, 33, 30, "Input",ExpressionUUID->"97326567-8c7d-4379-81f8-2232e3f7b090"],
Cell[CellGroupData[{
Cell[38413, 1007, 179, 4, 30, "Input",ExpressionUUID->"28999075-313f-4b40-aa6b-7fd0f739b403"],
Cell[38595, 1013, 131, 3, 34, "Output",ExpressionUUID->"42b6624e-58b9-43cf-8c9c-c57ec3918d1d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[38775, 1022, 210685, 3936, 618, "Section",ExpressionUUID->"3ffc317f-3c59-4200-ba76-6a4d35291edb"],
Cell[CellGroupData[{
Cell[249485, 4962, 2507, 67, 152, "Input",ExpressionUUID->"26dc995b-d8bc-4343-8952-9a05aae000ff"],
Cell[251995, 5031, 550, 16, 51, "Output",ExpressionUUID->"c9b2b5ae-3071-41cd-a0d0-b105e215a2e4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[252582, 5052, 2532, 69, 124, "Input",ExpressionUUID->"9c5c71cb-348f-4318-a73a-f95d206d00cc"],
Cell[255117, 5123, 544, 15, 51, "Output",ExpressionUUID->"3dce3173-a9b1-4fa5-80c4-b3e7234364ca"]
}, Open  ]],
Cell[255676, 5141, 1086, 31, 127, "Input",ExpressionUUID->"305b46b7-9831-4fa6-98dd-e4ccb281eb86"],
Cell[CellGroupData[{
Cell[256787, 5176, 730, 23, 64, "Input",ExpressionUUID->"4ebd56f2-7d11-4eac-9f72-0467d9367059"],
Cell[257520, 5201, 650, 21, 55, "Output",ExpressionUUID->"eabf27a7-1698-4e36-8148-14e65fe61909"]
}, Open  ]],
Cell[CellGroupData[{
Cell[258207, 5227, 752, 23, 70, "Input",ExpressionUUID->"15653cf4-5309-4011-98e6-5f6c364f7f60"],
Cell[258962, 5252, 541, 17, 57, "Output",ExpressionUUID->"bd5c752b-37b3-469a-a2bb-cdbc37de6076"]
}, Open  ]],
Cell[CellGroupData[{
Cell[259540, 5274, 975, 27, 89, "Input",ExpressionUUID->"5cc34963-c38a-4083-a0f5-4930ce14b743"],
Cell[260518, 5303, 241, 6, 54, "Output",ExpressionUUID->"61df9b67-53f6-4640-a733-3c58eba2743a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[260796, 5314, 1065, 30, 54, "Input",ExpressionUUID->"0910c24d-5f1a-4f69-b527-79fb77f639ae"],
Cell[261864, 5346, 6206, 125, 240, "Output",ExpressionUUID->"6c825a75-adf9-4440-a737-bb5f7de4b746"]
}, Open  ]],
Cell[CellGroupData[{
Cell[268107, 5476, 1060, 31, 54, "Input",ExpressionUUID->"17efe95d-b034-4531-a230-c4309102e0c7"],
Cell[269170, 5509, 12461, 226, 240, "Output",ExpressionUUID->"23cea0ee-b918-4dc0-9c3e-00960b643a97"]
}, Open  ]],
Cell[CellGroupData[{
Cell[281668, 5740, 172, 3, 45, "Subsubsection",ExpressionUUID->"2c14682a-bb2a-479f-a7d2-8436c2e82faa"],
Cell[281843, 5745, 6483, 177, 389, "Input",ExpressionUUID->"772540df-0c6c-4bcd-a3ae-e5e1c5950b63",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[288351, 5926, 6553, 160, 424, "Input",ExpressionUUID->"d1079389-4360-4b9d-b7f0-ba0031de1f26"],
Cell[294907, 6088, 157415, 2841, 242, "Output",ExpressionUUID->"69c2340f-44b8-4d30-a513-ce67a1191bda"]
}, Open  ]],
Cell[CellGroupData[{
Cell[452359, 8934, 2943, 79, 215, "Input",ExpressionUUID->"f8ce0087-4d2f-42b3-8df2-fff88d16e766"],
Cell[455305, 9015, 67803, 1232, 242, "Output",ExpressionUUID->"9fd3c8ad-8be6-4f71-8ebb-7ec1416098d7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[523145, 10252, 2221, 62, 100, "Input",ExpressionUUID->"d9744b2e-7542-411e-8331-d7ddd1a74ad7"],
Cell[525369, 10316, 2209, 62, 91, "Output",ExpressionUUID->"c03d25b6-9e1d-4018-b0be-c278c92617de"]
}, Open  ]],
Cell[CellGroupData[{
Cell[527615, 10383, 21688, 512, 1402, "Input",ExpressionUUID->"ecb009d6-bcb5-4e2f-85fd-5b7a46465110"],
Cell[549306, 10897, 35635, 868, 622, "Output",ExpressionUUID->"3b40bb2c-71d8-4165-bfb5-7f974e1f2d68"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

