(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    508214,      10073]
NotebookOptionsPosition[    504478,       9997]
NotebookOutlinePosition[    504839,      10013]
CellTagsIndexPosition[    504796,      10010]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 "Angle of Repose\n",
 StyleBox["Shiva Shahrokhi and Aaron T. Becker", "Subsubsection"],
 "\n",
 StyleBox["when granular media is dropped in a pile, it forms a cone.  The \
maximum slope of the cone depends on the material used, but is very \
repeatable (due to CLT) and is called the angle of repose.  \nRobot swarms, \
such as the Kilobot, also have an angle of repose\n\n", "Text"],
 ButtonBox["https://en.wikipedia.org/wiki/Angle_of_repose",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://en.wikipedia.org/wiki/Angle_of_repose"], None},
  ButtonNote->"https://en.wikipedia.org/wiki/Angle_of_repose"],
 StyleBox["\nThe angle of repose, or critical angle of repose,[1] of a \
granular material is the steepest angle of descent or dip relative to the \
horizontal plane to which a material can be piled without slumping. At this \
angle, the material on the slope face is on the verge of sliding. The angle \
of repose can range from 0\[Degree] to 90\[Degree]. ", "Text"]
}], "Subchapter",
 CellChangeTimes->{{3.683824312938307*^9, 3.6838243915394907`*^9}, {
  3.683824998055793*^9, 3.683825027831605*^9}, {3.683903155498979*^9, 
  3.6839031755126743`*^9}, {3.6876009940574493`*^9, 
  3.68760102409772*^9}},ExpressionUUID->"2307a7fc-9fdb-49e5-83a4-\
ae087b36a4cc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"l", " ", "=", " ", "1"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"width", " ", "of", " ", "bar", " ", "holding", " ", "material"}],
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "a", ",", "b", ",", "p", ",", "c", ",", "lside", ",", "h", ",", "d", 
         ",", "Area"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Graphics", "[", " ", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"a", "=", " ", 
            RowBox[{
             RowBox[{"l", "/", "2"}], "*", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"b", " ", "=", " ", 
            RowBox[{
             RowBox[{"l", "/", "2"}], "*", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Alpha]", "]"}], ",", 
               RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "}"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"c", " ", "=", " ", 
            RowBox[{
             RowBox[{"l", "/", "2"}], "*", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
           
           RowBox[{"p", " ", "=", "  ", 
            RowBox[{
             RowBox[{"l", "/", "10"}], "*", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
               RowBox[{"-", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "}"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"h", " ", "=", " ", 
            RowBox[{"l", "/", "2"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"d", " ", "=", " ", 
            RowBox[{"l", "/", "2"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", "White"}], ",", 
          RowBox[{"Rectangle", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "l"}], ",", 
              RowBox[{"-", "l"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"l", ",", "2"}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", "Pink", ",", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Rotate", "[", 
               RowBox[{
                RowBox[{"Rectangle", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "l"}], "/", "2"}], ",", 
                    RowBox[{"-", ".1"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"l", "/", "2"}], ",", "0"}], "}"}]}], "]"}], ",", 
                
                RowBox[{
                 RowBox[{"-", "\[Theta]"}], " ", 
                 RowBox[{"\[Pi]", "/", "180"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], "]"}], "}"}], "]"}], ","}],
            "*)"}], "\[IndentingNewLine]", 
          RowBox[{"Polygon", "[", 
           RowBox[{"{", 
            RowBox[{"a", ",", 
             RowBox[{"a", "+", "p"}], ",", 
             RowBox[{
              RowBox[{"-", "a"}], "+", "p"}], ",", 
             RowBox[{"-", "a"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "draw", " ", "piles", " ", "of", " ", "stuff", " ", "on", " ", 
            "ground"}], "*)"}], "\[IndentingNewLine]", "Brown", ",", 
          RowBox[{"Polygon", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "l"}], "/", "2"}], 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
                RowBox[{"h", " ", 
                 RowBox[{"Cos", "[", "\[Alpha]", "]"}]}]}], ",", 
               RowBox[{
                RowBox[{"-", "d"}], "-", "h"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"-", "l"}], "/", "2"}], 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
               RowBox[{
                RowBox[{"h", " ", 
                 RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", "h", "-", 
                "d"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "l"}], "/", "2"}], 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
                RowBox[{"h", " ", 
                 RowBox[{"Cos", "[", "\[Alpha]", "]"}]}]}], ",", 
               RowBox[{
                RowBox[{"-", "h"}], "-", "d"}]}], "}"}]}], "}"}], "]"}], ",", 
          "\[IndentingNewLine]", "Brown", ",", 
          RowBox[{"Polygon", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"l", "/", "2"}], 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "-", 
                RowBox[{"h", " ", 
                 RowBox[{"Cos", "[", "\[Alpha]", "]"}]}]}], ",", 
               RowBox[{
                RowBox[{"-", "d"}], "-", "h"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"l", "/", "2"}], 
                RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ",", 
               RowBox[{
                RowBox[{"h", " ", 
                 RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "-", "h", "-", 
                "d"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"l", "/", "2"}], 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
                RowBox[{"h", " ", 
                 RowBox[{"Cos", "[", "\[Alpha]", "]"}]}]}], ",", 
               RowBox[{
                RowBox[{"-", "h"}], "-", "d"}]}], "}"}]}], "}"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"granular", " ", "media"}], "*)"}], "\[IndentingNewLine]", 
          
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"\[Alpha]", ">", 
             RowBox[{"Abs", "[", "\[Theta]", "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"lside", "=", 
               FractionBox[
                RowBox[{"l", " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "+", "\[Alpha]"}], "]"}]}], 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Pi]", "-", 
                  RowBox[{"2", "\[Alpha]"}]}], "]"}]]}], ";", 
              RowBox[{"Polygon", "[", 
               RowBox[{"{", 
                RowBox[{"a", ",", 
                 RowBox[{
                  RowBox[{"lside", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Alpha]", "]"}], ",", 
                    RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "}"}]}], "-", 
                  "a"}], ",", 
                 RowBox[{"-", "a"}]}], "}"}], "]"}]}], "}"}], ",", 
            RowBox[{
             RowBox[{"lside", "=", "0"}], ";"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"Black", ",", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"N", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"l", "/", "2"}], 
                   RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
                  RowBox[{"h", " ", 
                   RowBox[{"Cos", "[", "\[Alpha]", "]"}]}]}], ",", 
                 RowBox[{
                  RowBox[{"-", "h"}], "-", "d"}]}], "}"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ","}], "*)"}], 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"draw", " ", "angle", " ", "of", " ", "repose"}], "*)"}], 
          "\[IndentingNewLine]", "Black", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "a"}], "+", 
              RowBox[{"c", "/", "2"}]}], ",", 
             RowBox[{"-", "a"}], ",", 
             RowBox[{
              RowBox[{"-", "a"}], "+", " ", 
              RowBox[{
               RowBox[{"l", "/", "4"}], "*", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Alpha]", "]"}], ",", 
                 RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "}"}]}]}]}], "}"}], 
           "]"}], ",", "\[IndentingNewLine]", "Black", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"a", "-", 
              RowBox[{"c", "/", "2"}]}], ",", "a", ",", 
             RowBox[{"a", "+", " ", 
              RowBox[{
               RowBox[{"l", "/", "4"}], "*", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], ",", 
                 RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "}"}]}]}]}], "}"}], 
           "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Circle", "[", 
           RowBox[{
            RowBox[{"-", "a"}], ",", 
            RowBox[{"l", "/", "6"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "\[Alpha]"}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Circle", "[", 
           RowBox[{"a", ",", 
            RowBox[{"l", "/", "6"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Pi]", ",", 
              RowBox[{"\[Pi]", "-", "\[Alpha]"}]}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "measure", " ", "weight", " ", "of", " ", "granular", " ", "media",
             "  ", 
            RowBox[{"(", 
             RowBox[{
             "proportional", " ", "to", " ", "area", " ", "of", " ", 
              "triangle"}], ")"}]}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Area", " ", "=", " ", 
            RowBox[{
             RowBox[{"1", "/", "2"}], " ", "lside", " ", "l", " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Alpha]", "-", "\[Theta]"}], "]"}]}]}], ";", 
           "\[IndentingNewLine]", "Black"}], ",", 
          RowBox[{"Text", "[", 
           RowBox[{
            RowBox[{"StringForm", "[", 
             RowBox[{"\"\<Area = ``\>\"", ",", 
              RowBox[{"N", "[", 
               RowBox[{"Round", "[", 
                RowBox[{"Area", ",", "0.01"}], "]"}], "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{
               RowBox[{"-", "1"}], "/", "2"}]}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
           "measure", " ", "torque", " ", "of", " ", "granular", " ", 
            "media"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"draw", " ", "a", " ", "scale"}], "*)"}], 
          "\[IndentingNewLine]", "Blue", ",", 
          RowBox[{"PointSize", "[", "Large", "]"}], ",", 
          RowBox[{"Point", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], "]"}]}], "\[IndentingNewLine]", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}], "]"}]}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Alpha]", ",", 
         RowBox[{"\[Pi]", "/", "4"}], ",", "\"\<Angle of Repose\>\""}], "}"}],
        " ", ",", "0", ",", 
       RowBox[{"5", 
        RowBox[{"\[Pi]", "/", "12"}]}], ",", 
       RowBox[{"\[Pi]", "/", "36"}], ",", 
       RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "0"}], "}"}], " ", ",", 
       RowBox[{
        RowBox[{"-", " ", "5"}], 
        RowBox[{"\[Pi]", "/", "12"}]}], ",", " ", 
       RowBox[{"5", 
        RowBox[{"\[Pi]", "/", "12"}]}], ",", 
       RowBox[{"\[Pi]", "/", "36"}], ",", 
       RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "add", " ", "setter", " ", "bar", " ", "so", " ", "you", " ", "can", 
       " ", "select", " ", "the", " ", "material", " ", "to", " ", 
       RowBox[{"use", ".", "  ", "Should"}], " ", "change", " ", "the", " ", 
       "angle", " ", "or", " ", "repose", " ", "and", " ", "the", " ", 
       "color", " ", "of", " ", "the", " ", "granular", " ", "media"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"material", ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<sand\>\"", ",", "\"\<salt\>\"", ",", "\"\<corn\>\"", ",", 
         "\"\<wheat\>\""}], "}"}]}], "}"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQAGIQ3fJILSms6LWj2vE7GSA6KVsnF0SfipFZDaJFHFdu
AtGW3Mu3gegDBl6PaoD0rxOOz0H0tO72ryDa6+xfMF3MODd/LkhfJUc7iG76
nNsNoo8Z7loGohdO7F4FosX2n10NojV2yW0F0T2NtQdB9LZKlmMgumi5zgkQ
/WTa+kebgXTLOobfIPpSWMB/EM11N4NxC5DuOMvJBqJdxLpUQTTLpFZtEJ0y
d4MhiLaW1DUD0ULni61B9L3yCAcQHfS22xlEzzh02gNEvz0xORhEh+jtjwXR
iz6w5oPokn0JxSA6YX5uCYj+5PewEkQrde/rA9ENYfOyTgBpg7D0fBB9k3NF
MYhOSm5qBNHHqlb8OA2yR/LNbxB9gamRrazyteP3U+vANAC58Mz/
  
  "],ExpressionUUID->"74c981ce-af32-427d-bbd4-8e16accd0c37"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Area$", "::", "shdw"}], "MessageName"], ":", 
  " ", "\<\"Symbol \[NoBreak]\\!\\(\\\"Area$\\\"\\)\[NoBreak] appears in \
multiple contexts \[NoBreak]\\!\\({\\\"System`\\\", \\\"Global`\\\"}\\)\
\[NoBreak]; definitions in context \[NoBreak]\\!\\(\\\"System`\\\"\\)\
\[NoBreak] may shadow or be shadowed by other definitions. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/shdw\\\", \
ButtonNote -> \\\"Area$::shdw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{{3.708345070634968*^9, 
  3.708345086722825*^9}},ExpressionUUID->"1f326474-cce8-444b-8250-\
543c3325ae11"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`material$$ = 
    "sand", $CellContext`\[Alpha]$$ = Rational[2, 9] 
    Pi, $CellContext`\[Theta]$$ = Rational[-1, 18] Pi, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Alpha]$$], Rational[1, 4] Pi, "Angle of Repose"}, 
      0, Rational[5, 12] Pi, Rational[1, 36] Pi}, {{
       Hold[$CellContext`\[Theta]$$], 0}, Rational[-5, 12] Pi, 
      Rational[5, 12] Pi, Rational[1, 36] Pi}, {
      Hold[$CellContext`material$$], {"sand", "salt", "corn", "wheat"}}}, 
    Typeset`size$$ = {360., {127., 131.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`\[Alpha]$1296$$ = 0, $CellContext`\[Theta]$1297$$ = 
    0, $CellContext`material$1298$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`material$$ = 
        "sand", $CellContext`\[Alpha]$$ = 
        Rational[1, 4] Pi, $CellContext`\[Theta]$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Alpha]$$, $CellContext`\[Alpha]$1296$$, 0], 
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$1297$$, 0], 
        Hold[$CellContext`material$$, $CellContext`material$1298$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`a$, $CellContext`b$, $CellContext`p$, \
$CellContext`c$, $CellContext`lside$, $CellContext`h$, $CellContext`d$, 
         Area$}, 
        Graphics[{$CellContext`a$ = ($CellContext`l/2) {
              Cos[$CellContext`\[Theta]$$], 
              
              Sin[$CellContext`\[Theta]$$]}; $CellContext`b$ = \
($CellContext`l/2) {
              Cos[$CellContext`\[Alpha]$$], 
              
              Sin[$CellContext`\[Alpha]$$]}; $CellContext`c$ = \
($CellContext`l/2) {1, 0}; $CellContext`p$ = ($CellContext`l/10) {
              Sin[$CellContext`\[Theta]$$], -
              Cos[$CellContext`\[Theta]$$]}; $CellContext`h$ = $CellContext`l/
            2; $CellContext`d$ = $CellContext`l/2; White, 
          Rectangle[{-$CellContext`l, -$CellContext`l}, {$CellContext`l, 2}], 
          Pink, 
          
          Polygon[{$CellContext`a$, $CellContext`a$ + $CellContext`p$, \
-$CellContext`a$ + $CellContext`p$, -$CellContext`a$}], Brown, 
          
          Polygon[{{((-$CellContext`l)/2) 
              Cos[$CellContext`\[Theta]$$] - $CellContext`h$ 
             Cos[$CellContext`\[Alpha]$$], -$CellContext`d$ - \
$CellContext`h$}, {((-$CellContext`l)/2) 
             Cos[$CellContext`\[Theta]$$], $CellContext`h$ 
              Sin[$CellContext`\[Alpha]$$] - $CellContext`h$ - \
$CellContext`d$}, {((-$CellContext`l)/2) 
              Cos[$CellContext`\[Theta]$$] + $CellContext`h$ 
              Cos[$CellContext`\[Alpha]$$], -$CellContext`h$ - \
$CellContext`d$}}], Brown, 
          
          Polygon[{{($CellContext`l/2) 
              Cos[$CellContext`\[Theta]$$] - $CellContext`h$ 
             Cos[$CellContext`\[Alpha]$$], -$CellContext`d$ - \
$CellContext`h$}, {($CellContext`l/2) 
             Cos[$CellContext`\[Theta]$$], $CellContext`h$ 
              Sin[$CellContext`\[Alpha]$$] - $CellContext`h$ - \
$CellContext`d$}, {($CellContext`l/2) 
              Cos[$CellContext`\[Theta]$$] + $CellContext`h$ 
              Cos[$CellContext`\[Alpha]$$], -$CellContext`h$ - \
$CellContext`d$}}], 
          
          If[$CellContext`\[Alpha]$$ > 
           Abs[$CellContext`\[Theta]$$], {$CellContext`lside$ = \
$CellContext`l (Sin[$CellContext`\[Theta]$$ + $CellContext`\[Alpha]$$]/Sin[
               Pi - 2 $CellContext`\[Alpha]$$]); 
            Polygon[{$CellContext`a$, $CellContext`lside$ {
                  Cos[$CellContext`\[Alpha]$$], 
                  
                  Sin[$CellContext`\[Alpha]$$]} - $CellContext`a$, \
-$CellContext`a$}]}, $CellContext`lside$ = 0; Null], Black, 
          Line[{-$CellContext`a$ + $CellContext`c$/
             2, -$CellContext`a$, -$CellContext`a$ + ($CellContext`l/4) {
               Cos[$CellContext`\[Alpha]$$], 
               Sin[$CellContext`\[Alpha]$$]}}], Black, 
          
          Line[{$CellContext`a$ - $CellContext`c$/
            2, $CellContext`a$, $CellContext`a$ + ($CellContext`l/
              4) {-Cos[$CellContext`\[Alpha]$$], 
               Sin[$CellContext`\[Alpha]$$]}}], 
          
          Circle[-$CellContext`a$, $CellContext`l/6, {
           0, $CellContext`\[Alpha]$$}], 
          
          Circle[$CellContext`a$, $CellContext`l/6, {
           Pi, Pi - $CellContext`\[Alpha]$$}], 
          Area$ = (((1/2) $CellContext`lside$) $CellContext`l) 
            Sin[$CellContext`\[Alpha]$$ - $CellContext`\[Theta]$$]; Black, 
          Text[
           StringForm["Area = ``", 
            N[
             Round[Area$, 0.01]]], {0, (-1)/2}], Blue, 
          PointSize[Large], 
          Point[{0, 0}]}]], 
      "Specifications" :> {{{$CellContext`\[Alpha]$$, Rational[1, 4] Pi, 
          "Angle of Repose"}, 0, Rational[5, 12] Pi, Rational[1, 36] Pi, 
         Appearance -> "Labeled"}, {{$CellContext`\[Theta]$$, 0}, 
         Rational[-5, 12] Pi, Rational[5, 12] Pi, Rational[1, 36] Pi, 
         Appearance -> "Labeled"}, {$CellContext`material$$, {
         "sand", "salt", "corn", "wheat"}}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{405., {199., 205.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.684058102301015*^9, 3.684058124582138*^9}, {
   3.6840652353852167`*^9, 3.684065247781168*^9}, 3.687559180417255*^9, 
   3.6875604448645477`*^9, 3.687561358371175*^9, 
   3.70834508848234*^9},ExpressionUUID->"28029573-f76a-4faa-88fb-\
99153a45885a"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Global`Area", "::", "shdw"}], "MessageName"], ":", 
  " ", "\<\"Symbol \[NoBreak]\\!\\(\\\"Area\\\"\\)\[NoBreak] appears in \
multiple contexts \[NoBreak]\\!\\({\\\"Global`\\\", \\\"System`\\\"}\\)\
\[NoBreak]; definitions in context \[NoBreak]\\!\\(\\\"Global`\\\"\\)\
\[NoBreak] may shadow or be shadowed by other definitions. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/shdw\\\", \
ButtonNote -> \\\"Global`Area::shdw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.7093161260795803`*^9},ExpressionUUID->"803bcd54-19fa-44b4-8d73-\
5a825f8ca8ee"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Global`Area", "::", "shdw"}], "MessageName"], ":", 
  " ", "\<\"Symbol \[NoBreak]\\!\\(\\\"Area\\\"\\)\[NoBreak] appears in \
multiple contexts \[NoBreak]\\!\\({\\\"Global`\\\", \\\"System`\\\"}\\)\
\[NoBreak]; definitions in context \[NoBreak]\\!\\(\\\"Global`\\\"\\)\
\[NoBreak] may shadow or be shadowed by other definitions. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/shdw\\\", \
ButtonNote -> \\\"Global`Area::shdw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.711226464724553*^9},ExpressionUUID->"752616e3-b35a-4542-b16f-\
8f42030d5ab4"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Global`Area", "::", "shdw"}], "MessageName"], ":", 
  " ", "\<\"Symbol \[NoBreak]\\!\\(\\\"Area\\\"\\)\[NoBreak] appears in \
multiple contexts \[NoBreak]\\!\\({\\\"Global`\\\", \\\"System`\\\"}\\)\
\[NoBreak]; definitions in context \[NoBreak]\\!\\(\\\"Global`\\\"\\)\
\[NoBreak] may shadow or be shadowed by other definitions. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/shdw\\\", \
ButtonNote -> \\\"Global`Area::shdw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.711298465908946*^9},ExpressionUUID->"9487c982-8f54-41ee-abee-\
47e6f4609a0e"],

Cell[BoxData[
 TemplateBox[{
  "Global`Area","shdw",
   "\"Symbol \\!\\(\\*RowBox[{\\\"\\\\\\\"Area\\\\\\\"\\\"}]\\) appears in \
multiple contexts \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"\\\\\\\"Global`\\\\\
\\\"\\\", \\\",\\\", \\\"\\\\\\\"System`\\\\\\\"\\\"}], \\\"}\\\"}]\\); \
definitions in context \\!\\(\\*RowBox[{\\\"\\\\\\\"Global`\\\\\\\"\\\"}]\\) \
may shadow or be shadowed by other definitions.\"",2,1,2,32799266466050076810,
   "Local","Global`Area"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{
  3.7377902522856493`*^9},ExpressionUUID->"26203fe9-9419-406f-8d14-\
492ed806ed14"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"SetDirectory", "[", 
    RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]}]], "Input",
 CellChangeTimes->{{3.708348694590982*^9, 
  3.708348695566518*^9}},ExpressionUUID->"5be02f17-2f20-4d0d-bf5c-\
e9fe378b573d"],

Cell[CellGroupData[{

Cell["Compute the Torque about the center of the object", "Subsection",
 CellChangeTimes->{{3.684065388893179*^9, 
  3.684065402042365*^9}},ExpressionUUID->"ef761106-4ac7-4f7e-8a7f-\
f1214b54c52f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"heightBottom", "[", 
    RowBox[{"x_", ",", "\[Theta]_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Tan", "[", "\[Theta]", "]"}], "x"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"heightTop", "[", 
     RowBox[{"x_", ",", "\[Alpha]_", ",", "l_", ",", "\[Theta]_"}], "]"}], 
    " ", ":=", " ", 
    RowBox[{"Min", "[", "  ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Tan", "[", "\[Alpha]", "]"}], "x"}], "+", 
       RowBox[{
        RowBox[{"l", "/", "2"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], 
           RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ")"}]}]}], ",", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "x"}], "+", 
       RowBox[{
        RowBox[{"l", "/", "2"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], 
           RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "+", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ")"}]}]}]}], "]"}]}], 
   ";"}], " ", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Torque", "[", 
     RowBox[{"\[Theta]_", ",", "\[Alpha]_", ",", "l_"}], "]"}], " ", ":=", 
    " ", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "l"}], "/", "2"}], 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
      RowBox[{
       RowBox[{"l", "/", "2"}], 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}]], 
     RowBox[{"x", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"heightTop", "[", 
         RowBox[{"x", ",", "\[Alpha]", ",", "l", ",", "\[Theta]"}], "]"}], 
        "-", 
        RowBox[{"heightBottom", "[", 
         RowBox[{"x", ",", "\[Theta]"}], "]"}]}], ")"}], 
      RowBox[{"\[DifferentialD]", "x"}]}]}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Torque1", "[", 
   RowBox[{"\[Theta]_", ",", "\[Alpha]_", ",", "l_"}], "]"}], " ", ":=", " ", 
  
  RowBox[{
   SubsuperscriptBox["\[Integral]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "l"}], "/", "2"}], 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
    RowBox[{
     RowBox[{"l", "/", "2"}], 
     RowBox[{"Cos", "[", "\[Theta]", "]"}]}]], 
   RowBox[{"x", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"heightTop", "[", 
       RowBox[{"x", ",", "\[Alpha]", ",", "l", ",", "\[Theta]"}], "]"}], "-", 
      
      RowBox[{"heightBottom", "[", 
       RowBox[{"x", ",", "\[Theta]"}], "]"}]}], ")"}], 
    RowBox[{"\[DifferentialD]", "x"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.684065277136952*^9, 3.684065369793248*^9}, {
   3.68755924043531*^9, 3.6875592471882143`*^9}, {3.687559431042736*^9, 
   3.6875594434384336`*^9}, {3.687559586292943*^9, 3.68755966057832*^9}, {
   3.6875597703378077`*^9, 3.687559826999588*^9}, {3.6875598794995193`*^9, 
   3.6875599100477257`*^9}, {3.6875603585421143`*^9, 3.687560365901042*^9}, 
   3.6875609980810966`*^9},ExpressionUUID->"b801c6f6-abc8-4a91-9d77-\
580d15169109"],

Cell["\<\
Angle of repose for  a list of materials :
  Ashes 40
Asphalt 30
Bark\
\>", "Text",
 CellChangeTimes->{{3.684017584732729*^9, 3.684017597044734*^9}, {
  3.687608590598846*^9, 
  3.687608601081749*^9}},ExpressionUUID->"e9fe129d-aacf-4124-84d6-\
0cc2c5f50a96"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"x", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"heightTop", "[", 
      RowBox[{"x", ",", "\[Alpha]", ",", "l", ",", "\[Theta]"}], "]"}], "-", 
     RowBox[{"heightBottom", "[", 
      RowBox[{"x", ",", "\[Theta]"}], "]"}]}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6875599259413557`*^9, 3.687559930477131*^9}, {
  3.687560343306526*^9, 
  3.687560345970402*^9}},ExpressionUUID->"3eef647a-df59-4e9e-83fa-\
dcd12cff8022"],

Cell[BoxData[
 RowBox[{"x", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Min", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", "l", " ", 
        RowBox[{"Sec", "[", "\[Alpha]", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Alpha]", "+", "\[Theta]"}], "]"}]}], "-", 
       RowBox[{"x", " ", 
        RowBox[{"Tan", "[", "\[Alpha]", "]"}]}]}], ",", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", "l", " ", 
        RowBox[{"Sec", "[", "\[Alpha]", "]"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Alpha]", "-", "\[Theta]"}], "]"}]}], "+", 
       RowBox[{"x", " ", 
        RowBox[{"Tan", "[", "\[Alpha]", "]"}]}]}]}], "]"}], "-", 
    RowBox[{"x", " ", 
     RowBox[{"Tan", "[", "\[Theta]", "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.687560346742908*^9, 
  3.711227796003516*^9},ExpressionUUID->"bff1c1f4-c1ac-4061-a9d7-\
123ad1d9da4d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], 
   RowBox[{"Min", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Sec", "[", "\[Alpha]", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "x", " ", 
         RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "+", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Alpha]", "+", "\[Theta]"}], "]"}]}], ")"}]}], ",", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "x"}], "+", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}], " ", 
        RowBox[{"Tan", "[", "\[Alpha]", "]"}]}]}], ")"}]}], "]"}]}], "-", 
  RowBox[{"x", " ", 
   RowBox[{"Tan", "[", "\[Theta]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.687560328780727*^9, 
  3.6875603356318283`*^9}},ExpressionUUID->"41af19b3-a8a9-4926-b956-\
6e7608d3aa71"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"Min", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Sec", "[", "\[Alpha]", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "x", " ", 
         RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "+", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Alpha]", "+", "\[Theta]"}], "]"}]}], ")"}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", "x"}], "+", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], ")"}], " ", 
       RowBox[{"Tan", "[", "\[Alpha]", "]"}]}]}]}], "]"}]}], "-", 
  RowBox[{"x", " ", 
   RowBox[{"Tan", "[", "\[Theta]", "]"}]}]}]], "Output",
 CellChangeTimes->{
  3.6875603362239857`*^9},ExpressionUUID->"8076e48f-a9d7-4d50-81a6-\
997572166d75"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"heightTop", "[", 
        RowBox[{"x", ",", "\[Alpha]", ",", "1", ",", "\[Theta]"}], "]"}], ",", 
       RowBox[{"heightBottom", "[", 
        RowBox[{"x", ",", "\[Theta]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Alpha]", ",", 
       RowBox[{"\[Pi]", "/", "4"}], ",", "\"\<Angle of Repose\>\""}], "}"}], 
     " ", ",", "0", ",", 
     RowBox[{"5", 
      RowBox[{"\[Pi]", "/", "12"}]}], ",", 
     RowBox[{"\[Pi]", "/", "36"}], ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0"}], "}"}], " ", ",", 
     RowBox[{
      RowBox[{"-", " ", "5"}], 
      RowBox[{"\[Pi]", "/", "12"}]}], ",", " ", 
     RowBox[{"5", 
      RowBox[{"\[Pi]", "/", "12"}]}], ",", 
     RowBox[{"\[Pi]", "/", "36"}], ",", 
     RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.687560148760344*^9, 3.6875602444980593`*^9}, {
  3.6875602812708406`*^9, 
  3.687560283638091*^9}},ExpressionUUID->"9023d952-b1d2-4846-9be5-\
7b017149a011"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Alpha]$$ = Rational[1, 18] 
    Pi, $CellContext`\[Theta]$$ = Rational[-1, 18] Pi, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`\[Alpha]$$], Rational[1, 4] Pi, "Angle of Repose"}, 
      0, Rational[5, 12] Pi, Rational[1, 36] Pi}, {{
       Hold[$CellContext`\[Theta]$$], 0}, Rational[-5, 12] Pi, 
      Rational[5, 12] Pi, Rational[1, 36] Pi}}, Typeset`size$$ = {
    360., {111., 116.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Alpha]$89278$$ = 
    0, $CellContext`\[Theta]$89279$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`\[Alpha]$$ = 
        Rational[1, 4] Pi, $CellContext`\[Theta]$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Alpha]$$, $CellContext`\[Alpha]$89278$$, 0], 
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$89279$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{
         $CellContext`heightTop[$CellContext`x, $CellContext`\[Alpha]$$, 
          1, $CellContext`\[Theta]$$], 
         $CellContext`heightBottom[$CellContext`x, $CellContext`\[Theta]$$]}, \
{$CellContext`x, -1, 1}], 
      "Specifications" :> {{{$CellContext`\[Alpha]$$, Rational[1, 4] Pi, 
          "Angle of Repose"}, 0, Rational[5, 12] Pi, Rational[1, 36] Pi, 
         Appearance -> "Labeled"}, {{$CellContext`\[Theta]$$, 0}, 
         Rational[-5, 12] Pi, Rational[5, 12] Pi, Rational[1, 36] Pi, 
         Appearance -> "Labeled"}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{405., {171., 177.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.6875602256496468`*^9, 3.687560245260846*^9}, 
   3.687560294704483*^9},ExpressionUUID->"c8e95871-5bde-41da-bb63-\
0c14e9bb0b0d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "l", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", " ", 
   RowBox[{
    RowBox[{"l", "/", "2"}], "*", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lside", "=", 
   FractionBox[
    RowBox[{"l", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Theta]", "+", "\[Alpha]"}], "]"}]}], 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Pi]", "-", 
      RowBox[{"2", "\[Alpha]"}]}], "]"}]]}], ";", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{"lside", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", "\[Alpha]", "]"}], ",", 
       RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "}"}]}], "-", "a"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xMid", " ", "=", " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", "\[Alpha]", "]"}], 
      FractionBox[
       RowBox[{"l", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "+", "\[Alpha]"}], "]"}]}], 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Pi]", "-", 
         RowBox[{"2", "\[Alpha]"}]}], "]"}]]}], "-", 
     RowBox[{
      RowBox[{"l", "/", "2"}], 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "*)"}], " ", 
   FractionBox[
    RowBox[{"l", " ", 
     RowBox[{"Cot", "[", "\[Alpha]", "]"}], " ", 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "2"]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"FullSimplify", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "\[Alpha]", "]"}], 
       FractionBox[
        RowBox[{"l", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]", "+", "\[Alpha]"}], "]"}]}], 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Pi]", "-", 
          RowBox[{"2", "\[Alpha]"}]}], "]"}]]}], "-", 
      RowBox[{
       RowBox[{"l", "/", "2"}], 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "]"}], " ", "=", " ", 
    FractionBox[
     RowBox[{"l", " ", 
      RowBox[{"Cot", "[", "\[Alpha]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "2"]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.687560628340609*^9, 3.687560642952182*^9}, {
  3.68756071298022*^9, 3.687560733959805*^9}, {3.687560773164631*^9, 
  3.687560782352359*^9}, {3.687561274145791*^9, 
  3.6875613291123867`*^9}},ExpressionUUID->"d38bfbcf-ac17-470a-ae76-\
e2b3fcf6247c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", "l", " ", 
    RowBox[{"Cot", "[", "\[Alpha]", "]"}], " ", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
   RowBox[{
    FractionBox["1", "2"], " ", "l", " ", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
    RowBox[{"Tan", "[", "\[Alpha]", "]"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.687561309593069*^9, 
  3.6875613299733152`*^9}},ExpressionUUID->"9a1c444d-a79b-4cdb-ab46-\
9448ee39ab15"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"heightTop", "[", 
     RowBox[{"x_", ",", "\[Alpha]_", ",", "l_", ",", "\[Theta]_"}], "]"}], 
    " ", ":=", " ", 
    RowBox[{"Min", "[", "  ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Tan", "[", "\[Alpha]", "]"}], "x"}], "+", 
       RowBox[{
        RowBox[{"l", "/", "2"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], 
           RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "-", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ")"}]}]}], ",", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "x"}], "+", 
       RowBox[{
        RowBox[{"l", "/", "2"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], 
           RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "+", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ")"}]}]}]}], "]"}]}], 
   ";"}], " "}]], "Input",ExpressionUUID->"97326567-8c7d-4379-81f8-\
2232e3f7b090"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Plot force and torque\n",
 Cell[BoxData[
  GraphicsBox[{},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"\[Theta] (\[Degree])\"", TraditionalForm], 
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \\(rep\\)]\\) (\[Degree])\"", 
      TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Epilog->{
     GrayLevel[0], 
     LineBox[
      NCache[{{
        Rational[55, 2] - 10 Cos[Rational[1, 8] Pi], 60 - 10 
         Sin[Rational[1, 8] Pi]}, {
        Rational[45, 2] - 10 Cos[Rational[1, 8] Pi], 60 - 10 
         Sin[Rational[1, 8] Pi]}, {
        25 - 10 Cos[Rational[1, 8] Pi], 60 + Rational[5, 2] 3^Rational[1, 2] - 
         10 Sin[Rational[1, 8] Pi]}}, {{18.261204674887132`, 
       56.1731656763491}, {13.261204674887132`, 56.1731656763491}, {
       15.761204674887132`, 60.5032926952713}}]], 
     GrayLevel[0], 
     LineBox[
      NCache[{{
        Rational[35, 2] + 10 Cos[Rational[1, 8] Pi], 60 + 
         10 Sin[Rational[1, 8] Pi]}, {
        Rational[45, 2] + 10 Cos[Rational[1, 8] Pi], 60 + 
         10 Sin[Rational[1, 8] Pi]}, {
        20 + 10 Cos[Rational[1, 8] Pi], 60 + Rational[5, 2] 3^Rational[1, 2] + 
         10 Sin[Rational[1, 8] Pi]}}, {{26.738795325112868`, 
       63.8268343236509}, {31.738795325112868`, 63.8268343236509}, {
       29.238795325112868`, 68.1569613425731}}]], 
     CircleBox[
      NCache[{
       Rational[45, 2] - 10 Cos[Rational[1, 8] Pi], 60 - 10 
        Sin[Rational[1, 8] Pi]}, {13.261204674887132`, 56.1731656763491}], 
      NCache[
       Rational[10, 3], 3.3333333333333335`], 
      NCache[{0, Rational[1, 3] Pi}, {0, 1.0471975511965976`}]], 
     CircleBox[
      NCache[{
       Rational[45, 2] + 10 Cos[Rational[1, 8] Pi], 60 + 
        10 Sin[Rational[1, 8] Pi]}, {31.738795325112868`, 63.8268343236509}], 
      
      NCache[
       Rational[10, 3], 3.3333333333333335`], 
      NCache[{Pi, Rational[2, 3] Pi}, {3.141592653589793, 
       2.0943951023931953`}]], 
     InsetBox[
      FormBox["\"\[Alpha]\"", TraditionalForm], {18.9, 58.6}], 
     InsetBox[
      FormBox["\"\[Alpha]\"", TraditionalForm], {26., 66}], 
     GrayLevel[0], 
     LineBox[
      NCache[{{50, 60}, {45, 60}, {
        45 + 5 2^Rational[-1, 2], 60 + 5 2^Rational[-1, 2]}}, {{50, 60}, {45, 
        60}, {48.53553390593274, 63.53553390593274}}]], 
     CircleBox[{45, 60}, 
      NCache[
       Rational[10, 3], 3.3333333333333335`], 
      NCache[{0, Rational[1, 4] Pi}, {0, 0.7853981633974483}]], 
     InsetBox[
      FormBox["\"\[Theta]\"", TraditionalForm], {51, 62}]},
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
   PlotRange->{{-70, 70}, {-10, 80}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Prolog->{{{{
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[
         NCache[{{-45 + 5 2^Rational[1, 2], 15 - 5 2^Rational[1, 2]}, {-45 + 
            4 2^Rational[1, 2], 15 - 6 2^Rational[1, 2]}, {-45 - 6 
            2^Rational[1, 2], 15 + 4 2^Rational[1, 2]}, {-45 - 5 
            2^Rational[1, 2], 15 + 
            5 2^Rational[1, 2]}}, {{-37.928932188134524`, 
          7.9289321881345245`}, {-39.34314575050762, 
          6.514718625761429}, {-53.48528137423857, 
          20.65685424949238}, {-52.071067811865476`, 22.071067811865476`}}]], 
        
        EdgeForm[{
          RGBColor[0.368417, 0.506779, 0.709798]}], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        LineBox[
         NCache[{{-45 + 5 2^Rational[1, 2], 15 - 5 2^Rational[1, 2]}, {-45 - 
            5 2^Rational[1, 2], 15 + 
            5 2^Rational[1, 2]}}, {{-37.928932188134524`, 
          7.9289321881345245`}, {-52.071067811865476`, 
          22.071067811865476`}}]], 
        Thickness[Tiny], 
        GrayLevel[0.5], 
        LineBox[{{-45, 15}, {-45, 15}}]}, {
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{-13.261204674887132`, 
         11.173165676349102`}, {-14.026571539617311`, 
         9.325406611326528}, {-32.50416218984305, 
         16.979075258628328`}, {-31.738795325112868`, 18.8268343236509}}], 
        EdgeForm[{
          RGBColor[0.368417, 0.506779, 0.709798]}], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        LineBox[{{-13.261204674887132`, 
         11.173165676349102`}, {-31.738795325112868`, 18.8268343236509}}], 
        Thickness[Tiny], 
        GrayLevel[0.5], 
        LineBox[{{-22.5, 15}, {-22.5, 15}}]}, {
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{10, 15}, {10, 13}, {-10, 13}, {-10, 15}}], 
        EdgeForm[{
          RGBColor[0.368417, 0.506779, 0.709798]}], 
        RGBColor[0.368417, 0.506779, 0.709798], {
         PolygonBox[
          
          NCache[{{10, 
            15}, {-10 + (5 (-1 + 3^Rational[1, 2])) (1 + 3^Rational[1, 2]), 
             15 + 5 (-1 + 3^Rational[1, 2])^2}, {-10, 15}}, {{10, 
            15}, {-1.7763568394002505`*^-15, 17.679491924311225`}, {-10, 
            15}}]]}, 
        Thickness[Tiny], 
        GrayLevel[0.5], 
        LineBox[
         NCache[{{0, 15}, {0, 15 + 10 (2 - 3^Rational[1, 2])}}, {{0, 15}, {
           0, 17.67949192431123}}]]}, {
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{31.738795325112868`, 18.8268343236509}, {
         32.50416218984305, 16.979075258628328`}, {14.026571539617311`, 
         9.325406611326528}, {13.261204674887132`, 11.173165676349102`}}], 
        EdgeForm[{
          RGBColor[0.368417, 0.506779, 0.709798]}], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        LineBox[{{31.738795325112868`, 18.8268343236509}, {
         13.261204674887132`, 11.173165676349102`}}], 
        Thickness[Tiny], 
        GrayLevel[0.5], 
        LineBox[{{22.5, 15}, {22.5, 15}}]}, {
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[
         NCache[{{45 + 5 2^Rational[1, 2], 15 + 5 2^Rational[1, 2]}, {
           45 + 6 2^Rational[1, 2], 15 + 4 2^Rational[1, 2]}, {
           45 - 4 2^Rational[1, 2], 15 - 6 2^Rational[1, 2]}, {
           45 - 5 2^Rational[1, 2], 15 - 5 2^Rational[1, 2]}}, {{
          52.071067811865476`, 22.071067811865476`}, {53.48528137423857, 
          20.65685424949238}, {39.34314575050762, 6.514718625761429}, {
          37.928932188134524`, 7.9289321881345245`}}]], 
        EdgeForm[{
          RGBColor[0.368417, 0.506779, 0.709798]}], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        LineBox[
         NCache[{{45 + 5 2^Rational[1, 2], 15 + 5 2^Rational[1, 2]}, {
           45 - 5 2^Rational[1, 2], 15 - 5 2^Rational[1, 2]}}, {{
          52.071067811865476`, 22.071067811865476`}, {37.928932188134524`, 
          7.9289321881345245`}}]], 
        Thickness[Tiny], 
        GrayLevel[0.5], 
        LineBox[{{45, 15}, {45, 15}}]}}, {{
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[
         NCache[{{-45 + 5 2^Rational[1, 2], 30 - 5 2^Rational[1, 2]}, {-45 + 
            4 2^Rational[1, 2], 30 - 6 2^Rational[1, 2]}, {-45 - 6 
            2^Rational[1, 2], 30 + 4 2^Rational[1, 2]}, {-45 - 5 
            2^Rational[1, 2], 30 + 
            5 2^Rational[1, 2]}}, {{-37.928932188134524`, 
          22.928932188134524`}, {-39.34314575050762, 
          21.51471862576143}, {-53.48528137423857, 
          35.65685424949238}, {-52.071067811865476`, 37.071067811865476`}}]], 
        
        EdgeForm[{
          RGBColor[0.880722, 0.611041, 0.142051]}], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        LineBox[
         NCache[{{-45 + 5 2^Rational[1, 2], 30 - 5 2^Rational[1, 2]}, {-45 - 
            5 2^Rational[1, 2], 30 + 
            5 2^Rational[1, 2]}}, {{-37.928932188134524`, 
          22.928932188134524`}, {-52.071067811865476`, 
          37.071067811865476`}}]], 
        Thickness[Tiny], 
        GrayLevel[0.5], 
        LineBox[{{-45, 30}, {-45, 30}}]}, {
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{-13.261204674887132`, 
         26.1731656763491}, {-14.026571539617311`, 
         24.325406611326528`}, {-32.50416218984305, 
         31.979075258628328`}, {-31.738795325112868`, 33.8268343236509}}], 
        EdgeForm[{
          RGBColor[0.880722, 0.611041, 0.142051]}], 
        RGBColor[0.880722, 0.611041, 0.142051], {
         PolygonBox[{{-13.261204674887132`, 
          26.1731656763491}, {-29.128271480711838`, 
          35.33402096794177}, {-31.738795325112868`, 33.8268343236509}}]}, 
        Thickness[Tiny], 
        GrayLevel[0.5], 
        LineBox[{{-22.5, 30}, {-22.5, 31.507186644290872`}}]}, {
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{10, 30}, {10, 28}, {-10, 28}, {-10, 30}}], 
        EdgeForm[{
          RGBColor[0.880722, 0.611041, 0.142051]}], 
        RGBColor[0.880722, 0.611041, 0.142051], {
         PolygonBox[
          
          NCache[{{10, 30}, {0, 30 + 10 3^Rational[-1, 2]}, {-10, 30}}, {{10, 
            30}, {0, 35.773502691896255`}, {-10, 30}}]]}, 
        Thickness[Tiny], 
        GrayLevel[0.5], 
        LineBox[
         NCache[{{0, 30}, {0, 30 + 10 3^Rational[-1, 2]}}, {{0, 30}, {
           0, 35.773502691896255`}}]]}, {
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{31.738795325112868`, 33.8268343236509}, {
         32.50416218984305, 31.979075258628328`}, {14.026571539617311`, 
         24.325406611326528`}, {13.261204674887132`, 26.1731656763491}}], 
        EdgeForm[{
          RGBColor[0.880722, 0.611041, 0.142051]}], 
        RGBColor[0.880722, 0.611041, 0.142051], {
         PolygonBox[{{31.738795325112868`, 33.8268343236509}, {
          29.128271480711838`, 35.33402096794177}, {13.261204674887132`, 
          26.1731656763491}}]}, 
        Thickness[Tiny], 
        GrayLevel[0.5], 
        LineBox[{{22.5, 30}, {22.5, 31.507186644290872`}}]}, {
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[
         NCache[{{45 + 5 2^Rational[1, 2], 30 + 5 2^Rational[1, 2]}, {
           45 + 6 2^Rational[1, 2], 30 + 4 2^Rational[1, 2]}, {
           45 - 4 2^Rational[1, 2], 30 - 6 2^Rational[1, 2]}, {
           45 - 5 2^Rational[1, 2], 30 - 5 2^Rational[1, 2]}}, {{
          52.071067811865476`, 37.071067811865476`}, {53.48528137423857, 
          35.65685424949238}, {39.34314575050762, 21.51471862576143}, {
          37.928932188134524`, 22.928932188134524`}}]], 
        EdgeForm[{
          RGBColor[0.880722, 0.611041, 0.142051]}], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        LineBox[
         NCache[{{45 + 5 2^Rational[1, 2], 30 + 5 2^Rational[1, 2]}, {
           45 - 5 2^Rational[1, 2], 30 - 5 2^Rational[1, 2]}}, {{
          52.071067811865476`, 37.071067811865476`}, {37.928932188134524`, 
          22.928932188134524`}}]], 
        Thickness[Tiny], 
        GrayLevel[0.5], 
        LineBox[{{45, 30}, {45, 30}}]}}, {{
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[
         NCache[{{-45 + 5 2^Rational[1, 2], 45 - 5 2^Rational[1, 2]}, {-45 + 
            4 2^Rational[1, 2], 45 - 6 2^Rational[1, 2]}, {-45 - 6 
            2^Rational[1, 2], 45 + 4 2^Rational[1, 2]}, {-45 - 5 
            2^Rational[1, 2], 45 + 
            5 2^Rational[1, 2]}}, {{-37.928932188134524`, 
          37.928932188134524`}, {-39.34314575050762, 
          36.51471862576143}, {-53.48528137423857, 
          50.65685424949238}, {-52.071067811865476`, 52.071067811865476`}}]], 
        
        EdgeForm[{
          RGBColor[0.560181, 0.691569, 0.194885]}], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        LineBox[
         NCache[{{-45 + 5 2^Rational[1, 2], 45 - 5 2^Rational[1, 2]}, {-45 - 
            5 2^Rational[1, 2], 45 + 
            5 2^Rational[1, 2]}}, {{-37.928932188134524`, 
          37.928932188134524`}, {-52.071067811865476`, 
          52.071067811865476`}}]], 
        Thickness[Tiny], 
        GrayLevel[0.5], 
        LineBox[{{-45, 45}, {-45, 45}}]}, {
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{-13.261204674887132`, 
         41.1731656763491}, {-14.026571539617311`, 
         39.32540661132653}, {-32.50416218984305, 
         46.97907525862833}, {-31.738795325112868`, 48.8268343236509}}], 
        EdgeForm[{
          RGBColor[0.560181, 0.691569, 0.194885]}], 
        RGBColor[0.560181, 0.691569, 0.194885], {
         PolygonBox[{{-13.261204674887132`, 
          41.1731656763491}, {-26.3268343236509, 
          54.23879532511287}, {-31.738795325112868`, 48.8268343236509}}]}, 
        Thickness[Tiny], 
        GrayLevel[0.5], 
        LineBox[{{-22.5, 45}, {-22.5, 50.41196100146197}}]}, {
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{10, 45}, {10, 43}, {-10, 43}, {-10, 45}}], 
        EdgeForm[{
          RGBColor[0.560181, 0.691569, 0.194885]}], 
        RGBColor[0.560181, 0.691569, 0.194885], {
         PolygonBox[{{10, 45}, {0, 55}, {-10, 45}}]}, 
        Thickness[Tiny], 
        GrayLevel[0.5], 
        LineBox[{{0, 45}, {0, 55}}]}, {
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{31.738795325112868`, 48.8268343236509}, {
         32.50416218984305, 46.97907525862833}, {14.026571539617311`, 
         39.32540661132653}, {13.261204674887132`, 41.1731656763491}}], 
        EdgeForm[{
          RGBColor[0.560181, 0.691569, 0.194885]}], 
        RGBColor[0.560181, 0.691569, 0.194885], {
         PolygonBox[{{31.738795325112868`, 48.8268343236509}, {
          26.326834323650893`, 54.23879532511286}, {13.261204674887132`, 
          41.1731656763491}}]}, 
        Thickness[Tiny], 
        GrayLevel[0.5], 
        LineBox[{{22.5, 45}, {22.5, 50.41196100146197}}]}, {
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[
         NCache[{{45 + 5 2^Rational[1, 2], 45 + 5 2^Rational[1, 2]}, {
           45 + 6 2^Rational[1, 2], 45 + 4 2^Rational[1, 2]}, {
           45 - 4 2^Rational[1, 2], 45 - 6 2^Rational[1, 2]}, {
           45 - 5 2^Rational[1, 2], 45 - 5 2^Rational[1, 2]}}, {{
          52.071067811865476`, 52.071067811865476`}, {53.48528137423857, 
          50.65685424949238}, {39.34314575050762, 36.51471862576143}, {
          37.928932188134524`, 37.928932188134524`}}]], 
        EdgeForm[{
          RGBColor[0.560181, 0.691569, 0.194885]}], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        LineBox[
         NCache[{{45 + 5 2^Rational[1, 2], 45 + 5 2^Rational[1, 2]}, {
           45 - 5 2^Rational[1, 2], 45 - 5 2^Rational[1, 2]}}, {{
          52.071067811865476`, 52.071067811865476`}, {37.928932188134524`, 
          37.928932188134524`}}]], 
        Thickness[Tiny], 
        GrayLevel[0.5], 
        LineBox[{{45, 45}, {45, 45}}]}}, {{
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[
         NCache[{{-45 + 5 2^Rational[1, 2], 60 - 5 2^Rational[1, 2]}, {-45 + 
            4 2^Rational[1, 2], 60 - 6 2^Rational[1, 2]}, {-45 - 6 
            2^Rational[1, 2], 60 + 4 2^Rational[1, 2]}, {-45 - 5 
            2^Rational[1, 2], 60 + 
            5 2^Rational[1, 2]}}, {{-37.928932188134524`, 
          52.928932188134524`}, {-39.34314575050762, 
          51.51471862576143}, {-53.48528137423857, 
          65.65685424949238}, {-52.071067811865476`, 67.07106781186548}}]], 
        EdgeForm[{
          RGBColor[0.922526, 0.385626, 0.209179]}], 
        RGBColor[0.922526, 0.385626, 0.209179], {
         PolygonBox[
          
          NCache[{{-45 + 5 2^Rational[1, 2], 60 - 5 2^Rational[1, 2]}, {-45 - 
             5 2^Rational[1, 2] + (5 Rational[2, 3]^Rational[1, 2]) (-1 + 
               3^Rational[1, 2]), 60 + 
             5 2^Rational[1, 2] + (5 2^Rational[1, 2]) (-1 + 
               3^Rational[1, 2])}, {-45 - 5 2^Rational[1, 2], 60 + 
             5 2^Rational[1, 2]}}, {{-37.928932188134524`, 
           52.928932188134524`}, {-49.08248290463863, 
           72.24744871391589}, {-52.071067811865476`, 67.07106781186548}}]]}, 
        
        Thickness[Tiny], 
        GrayLevel[0.5], 
        LineBox[
         NCache[{{-45, 
           60}, {-45, 60 + 
            10 (Rational[3, 2]^Rational[1, 2] - 2^Rational[-1, 2])}}, {{-45, 
           60}, {-45, 65.17638090205041}}]]}, {
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{-13.261204674887132`, 
         56.1731656763491}, {-14.026571539617311`, 
         54.32540661132653}, {-32.50416218984305, 
         61.97907525862833}, {-31.738795325112868`, 63.8268343236509}}], 
        EdgeForm[{
          RGBColor[0.922526, 0.385626, 0.209179]}], 
        RGBColor[0.922526, 0.385626, 0.209179], {
         PolygonBox[{{-13.261204674887132`, 
          56.1731656763491}, {-24.709423826903947`, 
          76.0020629038253}, {-31.738795325112868`, 63.8268343236509}}]}, 
        Thickness[Tiny], 
        GrayLevel[0.5], 
        LineBox[{{-22.5, 60}, {-22.5, 72.1752285801744}}]}, {
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{10, 60}, {10, 58}, {-10, 58}, {-10, 60}}], 
        EdgeForm[{
          RGBColor[0.922526, 0.385626, 0.209179]}], 
        RGBColor[0.922526, 0.385626, 0.209179], {
         PolygonBox[
          
          NCache[{{10, 60}, {0, 60 + 10 3^Rational[1, 2]}, {-10, 60}}, {{10, 
            60}, {0, 77.32050807568876}, {-10, 60}}]]}, 
        Thickness[Tiny], 
        GrayLevel[0.5], 
        LineBox[
         NCache[{{0, 60}, {0, 60 + 10 3^Rational[1, 2]}}, {{0, 60}, {
           0, 77.32050807568876}}]]}, {
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[{{31.738795325112868`, 63.8268343236509}, {
         32.50416218984305, 61.97907525862833}, {14.026571539617311`, 
         54.32540661132653}, {13.261204674887132`, 56.1731656763491}}], 
        EdgeForm[{
          RGBColor[0.922526, 0.385626, 0.209179]}], 
        RGBColor[0.922526, 0.385626, 0.209179], {
         PolygonBox[{{31.738795325112868`, 63.8268343236509}, {
          24.70942382690395, 76.0020629038253}, {13.261204674887132`, 
          56.1731656763491}}]}, 
        Thickness[Tiny], 
        GrayLevel[0.5], 
        LineBox[{{22.5, 60}, {22.5, 72.1752285801744}}]}, {
        RGBColor[1, 0.5, 0.5], 
        PolygonBox[
         NCache[{{45 + 5 2^Rational[1, 2], 60 + 5 2^Rational[1, 2]}, {
           45 + 6 2^Rational[1, 2], 60 + 4 2^Rational[1, 2]}, {
           45 - 4 2^Rational[1, 2], 60 - 6 2^Rational[1, 2]}, {
           45 - 5 2^Rational[1, 2], 60 - 5 2^Rational[1, 2]}}, {{
          52.071067811865476`, 67.07106781186548}, {53.48528137423857, 
          65.65685424949238}, {39.34314575050762, 51.51471862576143}, {
          37.928932188134524`, 52.928932188134524`}}]], 
        EdgeForm[{
          RGBColor[0.922526, 0.385626, 0.209179]}], 
        RGBColor[0.922526, 0.385626, 0.209179], {
         PolygonBox[
          
          NCache[{{45 + 5 2^Rational[1, 2], 60 + 5 2^Rational[1, 2]}, {
            45 - 5 
             2^Rational[1, 2] + (5 Rational[2, 3]^Rational[1, 2]) (1 + 
               3^Rational[1, 2]), 60 - 5 
             2^Rational[1, 2] + (5 2^Rational[1, 2]) (1 + 
               3^Rational[1, 2])}, {
            45 - 5 2^Rational[1, 2], 60 - 5 2^Rational[1, 2]}}, {{
           52.071067811865476`, 67.07106781186548}, {49.08248290463863, 
           72.24744871391589}, {37.928932188134524`, 52.928932188134524`}}]]}, 
        Thickness[Tiny], 
        GrayLevel[0.5], 
        LineBox[
         NCache[{{45, 60}, {
           45, 60 + 10 (Rational[3, 2]^Rational[1, 2] - 2^
              Rational[-1, 2])}}, {{45, 60}, {45, 65.17638090205041}}]]}}}},
   Ticks->{{{-60, 
       FormBox[
        RowBox[{"-", "60"}], TraditionalForm]}, {-45, 
       FormBox[
        RowBox[{"-", "45"}], TraditionalForm]}, {-30, 
       FormBox[
        RowBox[{"-", "30"}], TraditionalForm]}, {-15, 
       FormBox[
        RowBox[{"-", "15"}], TraditionalForm]}, {15, 
       FormBox["15", TraditionalForm]}, {30, 
       FormBox["30", TraditionalForm]}, {45, 
       FormBox["45", TraditionalForm]}, {60, 
       FormBox["60", TraditionalForm]}}, {{15, 
       FormBox["15", TraditionalForm]}, {30, 
       FormBox["30", TraditionalForm]}, {45, 
       FormBox["45", TraditionalForm]}, {60, 
       FormBox["60", TraditionalForm]}}}]],
  CellChangeTimes->{
   3.687605837775404*^9, {3.687605874792824*^9, 3.687605886496085*^9}, {
    3.687605917515604*^9, 3.6876059674275103`*^9}, 3.687606019020296*^9, {
    3.687606049177376*^9, 3.687606053644273*^9}, {3.687606109723209*^9, 
    3.6876061576467113`*^9}, {3.687606230149214*^9, 3.687606267486062*^9}, 
    3.6876067552018623`*^9, {3.687606809537541*^9, 3.687606867311702*^9}, {
    3.6876068982662697`*^9, 3.687607046845057*^9}, {3.687607083947885*^9, 
    3.687607142974106*^9}, 3.687607186849019*^9, 3.687607288796714*^9, {
    3.687607349424101*^9, 3.687607372887609*^9}, 3.687608314659729*^9, 
    3.6876085441057253`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
oVdBsxNxBGNe7zzezMfJe4NSU60GJq2Gb03IOuVLRr61FEs2+VG+wuTLMoyw
AsavJWtllMm2JjLpRTI5XZXJAa1YqNpoot4TdUe2S98FbWySXdC2bcyZmJhW
/Niy1tpfbD23xyhJnHzFxeH44sUo4T7t9u1/54O8EsdITDVt9cdRWVKMt155
EasHPodaMg7V4/tj7Ov/xNcvdEHp2L6oHtMbvz3bCT2e7oLoj15Hz7+2weNd
nsHin0agTn7BkcmwmfxePL4to6JCFkQbc+6T4/mIZd6cOWTG6p3GWjGHVejK
FauZS6vpX5U5nnPIKH5uyhzFBX0uXJB82Ln4NkVWRFZIeeuGxYSNlHkPFwq1
R6J80meqzL8tZL6tqUmaNx4tBj2T3xhscxQxZw4fc3e3UyMdd/fWqqsjuBUH
e9zBASV03j/kMRcXbepSWa8LYjetw+t/scOtoT0wp/czpCcdcPVX2ndcP1SQ
Dg55uhMCBpNFnvYeDnzybzz1t2eR70KRDT+ewddfLUtaDKmbfrOawfCKCnrN
zlXS91mwpy9lUqOt2MMG4+JFq+lM9mEc61iwp8nDVRCS2GNnQr+6/ZvEhbKE
LXSHpZN12/jla7bVZxqpz/fkoxX1aW9q6SaQG7pzSZscfuhj1NzmYM2MGQib
PgPHXOaIY7z2UUd7LJk+HZsdHFH1P41tXjBjW3NTI34a8jle7twG7/6rM878
+Ba5jn6CljXkQqZ0/Qv+6PUi6ia9ixKiea+2/wevD15H/dTPRHbX7DFbp3j8
DsbJJdM7bOS3CfLN25Q4vqTi2VxTRS75V3bJOqEFrYTEtiPbPVKLNbWUUh1q
Vr/jTZvvZA1RvsnWhIP+InEtm/SpOQd7klMeJZxyV8lBnolmxWcDYHkPjomC
+UgFG0Fy8amZU+loYlyr188XC2sDzstXKn1YX38RPvuLB7AFQO/lgYDJk7Hc
3hlHnZ1gP3EyLrp54bKzA+wnT8MRF1csmDoFqx2c0eIXoCgHvR+f7YJSL2/m
pq94bJqnt/IAcci5cztcv3QBXTp1QuKQV9k8KsrxV5SP74dTn3fF44+1R/SQ
bjj65ct40k6HV/71N9wfRb6c4wQKIKumfyeCyBZvT2Vb34foJE/H8NddGQzy
YacNKUdkQK3wU9VJzhz1jpRLBwYoEUdbxVxy+qM8QZEcRjMKCwvVATdtbNTW
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
tDXcRUNzq+mEuJU61BjKNOx/BSj0dg==\
\>"],ExpressionUUID->"60e067b5-1e36-4a12-b7aa-599f853ce24a"],
 Cell[BoxData[
  GraphicsBox[{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
P/+5TP8/QnzqXA==
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
5e35sLsczwrt3lfTwPH/vR9b8v8AfLtt0Q==
       "]]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
yfPP5SeCSqt5/r/3zX/9/wCJJIEj
       "]]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
FWGR9x5y/H/fu//z/wDrML7K
       "]]}}, InsetBox[
     TemplateBox[{
      InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(TraditionalForm\\`15\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 15], 
        Editable -> False],InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(TraditionalForm\\`30\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 30], 
        Editable -> False],InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(TraditionalForm\\`45\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 45], 
        Editable -> False],InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(TraditionalForm\\`60\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 60], 
        Editable -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.01, 0.2}], ImageScaled[{0, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"\[Theta] (\[Degree])\"", TraditionalForm], 
     FormBox["\"Torque (N\[CenterDot]m)\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Epilog->{{{
       PointBox[
        NCache[{(15 6^Rational[1, 2]) ((-1 + 3^Rational[1, 2])/
           Pi), ((Rational[-1, 6] (-1 + 3^Rational[1, 2])^(-2)) (
            Rational[-1, 2] 3^Rational[1, 2] + 
            Cos[6^Rational[-1, 2] (-1 + 3^Rational[1, 2])])) 
          Sin[(Rational[1, 2] 6^Rational[-1, 2]) (-1 + 3^Rational[1, 2])]}, {
         8.561665095029744, -0.004150726438928701}]], 
       PointBox[
        NCache[{((-15) 6^Rational[1, 2]) ((-1 + 3^Rational[1, 2])/
           Pi), ((Rational[1, 6] (-1 + 3^Rational[1, 2])^(-2)) (
            Rational[-1, 2] 3^Rational[1, 2] + 
            Cos[6^Rational[-1, 2] (-1 + 3^Rational[1, 2])])) 
          Sin[(Rational[1, 2] 6^Rational[-1, 2]) (-1 + 
             3^Rational[1, 2])]}, {-8.561665095029744, 
         0.004150726438928701}]]}, {
       PointBox[
        NCache[{
         30 (3^Rational[1, 2]/Pi), (
           Rational[-1, 12] (Rational[-1, 2] + Cos[3^Rational[-1, 2]])) 
          Sin[Rational[1, 2] 3^Rational[-1, 2]]}, {
         16.53986686265376, -0.008016463362809763}]], 
       PointBox[
        NCache[{(-30) (3^Rational[1, 2]/Pi), (
           Rational[1, 12] (Rational[-1, 2] + Cos[3^Rational[-1, 2]])) 
          Sin[Rational[1, 2] 3^Rational[-1, 2]]}, {-16.53986686265376, 
         0.008016463362809763}]]}, {
       PointBox[
        NCache[{
         30 (6^Rational[1, 2]/Pi), (Rational[-1, 24] 
           Cos[Rational[2, 3]^Rational[1, 2]]) Sin[6^Rational[-1, 2]]}, {
         23.390904037010284`, -0.0113274405372919}]], 
       PointBox[
        NCache[{(-30) (6^Rational[1, 2]/Pi), (Rational[1, 24] 
           Cos[Rational[2, 3]^Rational[1, 2]]) 
          Sin[6^Rational[-1, 2]]}, {-23.390904037010284`, 
         0.0113274405372919}]]}, {
       PointBox[
        NCache[{90/Pi, (Rational[-1, 36] (Rational[1, 2] + Cos[1])) Sin[
            Rational[1, 2]]}, {28.64788975654116, -0.013854097036167422`}]], 
       PointBox[
        NCache[{(-90)/Pi, (Rational[1, 36] (Rational[1, 2] + Cos[1])) Sin[
            Rational[1, 2]]}, {-28.64788975654116, 0.013854097036167422`}]]}}},
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
   PlotRange->{All, All},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Prolog->{
     Thickness[Tiny], 
     LineBox[
      NCache[{{(-60) (3^Rational[1, 2]/Pi), (
          Rational[1, 48] (1 + Cos[2 3^Rational[-1, 2]])) 
         Sin[3^Rational[-1, 2]]}, {
        60 (3^Rational[1, 2]/Pi), (
          Rational[-1, 48] (1 + Cos[2 3^Rational[-1, 2]])) 
         Sin[3^Rational[-1, 2]]}}, {{-33.07973372530752, 
       0.015967002704829127`}, {33.07973372530752, -0.015967002704829127`}}]]},
   Ticks->{Automatic, Automatic}]],
  CellChangeTimes->{3.687560985963759*^9, 3.687561221247024*^9, 
   3.687561419496804*^9, 3.6875614635471497`*^9, 3.6875615270031853`*^9, 
   3.687562758051346*^9, 3.687605259958919*^9, 3.687606340424638*^9, 
   3.6876077475308104`*^9, 3.6876078671966133`*^9},ImageCache->GraphicsData[
  "CompressedBitmap", "\<\
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
Qg==\
\>"],ExpressionUUID->"0be4d333-b1cc-41d5-8370-689bf20ab756"],
 Cell[BoxData[
  GraphicsBox[{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
3ahVkNsC7ymCbLpDnZT+bvScN8trNWcRDB3hlWlGu9Gr9iV1m+eFcPJ+4KCk
1W6kyJIvWb+zEFLVTd0a/XYjvwP7z1G1HsAb/TmXDYW7kfuaNepd4gXgaEnb
XytHRensWfeqRvIg13+pwleNimr7d0xvvpkH44nFoiLbqKhH96jpBZc8COkU
6/GhUdH1gx2Z+l23Icvxs4OQBxWxyZ/Lc264Bb3uGXZHblJR6tMTx+/k54JL
8MTe1RtpKNyO/VcKkQkiC7FPdTbT0C8jiSFDq0x4FaSx2VWJhvQWvzwefJUB
1KDg7//q0VDf4tKd9R3poBTIcd3KnoYcHc/KoNep8OPEpsmUeBraO5PrfaM7
EUq/PretTqOh0LkG4YV9ieB7wrtm5BoNHZLc45z2MAEGjhcn6jygoW3kmdRa
EgcvAgx1uxtoyED2Ec/wo0uQ7Lc/WpyVjixjRiOnyqPA/POvaSMuOtIx9FLU
fRIJf/nl7vPlp6Np3jumP/0iIPTvMaVqCTpC9lj1t38YuB0LbHfZTkcR6hKV
j4+fBPEpUYMLu+honsNuu8iJ49DpW533rwkdNbRmPxsZ8QO676qQPw505B6k
okoZ9QKWT3cH5V3p6ObRAavhUXeo9DE1s/Kko1yOoBAOwgVUfZIkb56kI5eO
27nvbpnB6IT2xabTdCQvWb4z0FQXco/2zM5G0dH/P78fmAhzEr/EtNBRqRdG
iUwzxuvUfDOYjvH2ykzJYXrpSJHvSCHTZWNWb/jKmPY7Mr9Tp4rpQS8DgQtN
TDd6NlXIj/7P+FzbNpXp/8kf1VGmMc+0Sk7fQ3024xUndk3nm0kyvc9YIMvf
gelRBafQJy+Z5pia0je+Z7LiRZZCvuPxpiu2KGVzkrA3X7Hj1/mlzl2WKxb3
THvbIGC1Yj2p8DmveaZLczW28U5Yr9h55mF5QJvNir/w2tY7FtmueOBz3Q9a
rt2Kl2/89p0/a7/iNezrsscvMC3tvbmx/zLTVA2TLS+Smb6Mk/rTbjEtOrjF
QreOaW0ZM7XTrA4rpl9wcfbjYNpx0v+yOzfTYaWpo6brmK4zGsjZsIlpq8PH
+WsQ0+4N5wxLqEyfUk73vWPCdMZcZUOcFdMD59gjXd2YnhkT+dfGg2k2c8V+
ujfTskKWeuoBTG8LcfPafIppk/4TqetDmD6AztfxhjP93/eLK/4PW+1N4w==

       "]]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxN2Hk4Vdv7AHBExhIhikgUSqa6keGsZMo5x0zGkoSLjMkxhBANkiHqSpJc
VNyQQql3pWtMRQPO2SgaREgSMn7373m+P+e7/9nP51n7fZ+zznrXu9ezN3kE
2hzl4uDgMObk4Pi/u3/h5fGlWAfM8d/r2YNHoeHRbK9veT81xmC7eXTrQm8w
25t31/DXHWGb1dItzzBl2+y7lP346v95fk9u7Ydr9suO4XvjVFdit+xbfAZ1
nc9sl/1NLzkj4KPNsjtucSHOcetlJ5tV3n0txPaA7KWpPAmrZRc5lHh07LdY
dtrMxaIGQ7Yjc8KHa3XZtugzCSlQZXvq6OdToSJsf+B90eAtwHbrrSp+1xVs
V1Fz6VbzdBywaOt7L0Id8kYT0o1+0bHUwc0nlxZN4cxFv3faY3Rcwlv17fmA
LYRo2EqpDtKx3G6vCMtmFzAJk78hzqTjxaCHZ2bbjoL6OoHP/K/puPbK/E3+
Z3/C+tofSoutdHxt/J+r6g+Pwdg8Lv9SR8eUpnaF/nchkJ14CFfn07HqR1b3
yItIGMzMfe/kQ8dKVN712O80vN6VuNniMB2vVz18NOlYEtR1+XkbOtOxjGRa
S2pgMqRt0P2uQqPjgdwbA57Hz4L2TebinBr5e46di5U9dQHOVEpszJumYWK1
cw31TQYodaS5DiTRsIjQ9upvwlehi1sz3CCWhoc9w1S/Xr8KSdpv0nPCadg1
NvXtSvVc+HxdvMnGh4bDXm4WuW11DQoCcjSe7adhLy7fhoTM67BBqHBloRCZ
70jvinLhAlhtWl1+NIOKIzWPPaYVF8HPul7uoWvmmMvRgJPBUQ4HhTI1jr0z
w4clf1wrmqqBqWfcJiPipjg/V0+aexpD1wiL77C6Me6z//ZQm9UAjhFSVrZ+
+7C+p7X1SddWkA+vM9aN24sz9dz+cpN+Bbse7jbR06NgV2a+wKfGDvCiN/Ev
1OjigjPWgmHVb0DpmazKraHdeOx08HaTwnegwrHf1splJ06dv3S+Q78LSprd
r32h7sRCNy5YUI26YEs6YzBajxx3mOB8at4Fm+VLom7J7MSux5I08w90gbQR
byHXBy3cWNycpBrcBcJnGiarPLXwnmaxQ/E3u2BS2DBbKkATTybVKfHxdMMT
WV3mQJw6rlm5dlL+UTfEPE+bxcHqOGXN76pg3A0G4V82XPdQx9ojdZvqGrrh
8cv0gy5G5POV0zP72ruh7uTXj2941fH9WPUw2c/dcLx6W+9ZGTXcetfTnXs1
E/zU+nktdFRx6c9e2WhXJgwnpZgLbFDFcZW/LusfZoJv3+4LjfPbsfTSqouz
R5ngcyFVlIK3Y6Xm6UmvQCZ4fdOVUTfdjrst5iL545ngUZytKWq/DZ+8s9fi
eBETnGVpbp1Byrgp/4pZ9zcmiC3oM3LslPF9Wvtx+M6EFyy1zIPaypihNpVR
8JMJKHtty5clJazEbXrDdY4JW1YRO6dTlfAl0RffrguwYGL2TyHJsq3YkWub
r4cSC852Jj9yGlLEM5XeL9vdWWBYFdEp80IR33YODN/pyYL5dL8f/eWKWLpN
ZirTmwUBdMutvgxFnOKgHGwSwAK7fyUyI3kVsXsb1TQiigVylX/7XlVUwA+t
/3oqnsWCmgvPpHoPy+PzZo8zFBpYkFR59SLaJ48dQm5OGDST8V2hPIUK8rjG
IcrK7jkLxuUUfvgObsKM49FcQR0sUKpKbJ7x34RrNCO2+vWy4ArLOFyMIYdT
tB5VB06ywGtJZjTcSQ5bWO5N05lmwU6FKQ9ijxwe0LJyWvzNgnyCds1oThYb
xn+oZSyxQIRrNc19pSwucuG5ri5AwIRF2q3L0jJ4ymPCsnQjAalXUNbB99L4
dZHTO4VNBKgMjMcpFkjj36dsKFc2E+ARZu14b6s0bhXb8SRQiYDXV0V5X2lu
wB7cNnb9GgRUfr3kuXK/FD5XsY/+ch8BofF/yYaFieNIiRiJ50cISOzufETV
E8d7+1KF444ScGmHmKP8CnF8uOxjgro3AVWs1LRXaWJ4WLS0J8GXgEnNRE6V
0rVYpVNn32QQAcc/BnzsGxDBHkYCKXPRZD6d0tj7t0SwnMxhfp8YMt/FoQ0p
QSK4PaRl7lUsmU/X005ncQ1+G/KnQUY8mS/TqSFTag2+reqh8SGZgK9nzlik
5wthLtx8+kY6AXy7ViQb7BDCjSb3tzdkEKDUfxK+PRLE/0gV7PuUSYCPTqi6
SZcA9uB1x2LZBAwNuYnOreLH4fafRg1yCBDI7jYvucqHb+QZrjK4Sv5/hrYJ
9sp8uDPxdI52LgG+OWaTd414sdUwXpDNI2DYXKvTM4oHS25M/FB9g4yfLlst
ys+DSw6G+WQUkPE3lUwhmxvPOzBcfW6S8XMyNVKVK/C9vPfJK/8m4+/w5bz8
yonzS0q+CJaQ8Y4Jr6NOcOLCtkstT0mrcC8KKHNz4tlbfOtCb5Hxrj+jEmQ5
sL9u93jTbQI6peoeBZXOQ9r+81f3lBGgWnQx36xtDoSS45aaSSdqHjktNzIL
+vb+szb/EKBJFbBs3/Yb9O8VVjndJeBsV69WCXUG5o5VhnaS/nCkQjLObxqo
wjotFuVkPUU7Dqjd+QWtUwa7NSsI+My3vYn3+SSMdCdbXiOtl7V05/3wT7jG
7FlYUUnOp6wo7KLKBMwLmEv/S3rvnkhnb/MfELN/Z4rMPQKuNNIpFN9x0K1/
mR5C+vyTIZE+21EI2PCvm3AVATpdacSFzG9gGP178wHSg993/63/ZgjEJS/F
5pDO4nsfMCr6FXjeJAQxSe/blKR9zeYL5FyvnVp7n4AfOqpc9IxP0BizVdSc
9HWbt8/nOwZgMBbXR5Gm+0VllYr0Qztm8N0i/YvX+ElNQR/UHzP+2EHaSifT
WlKegOin0rZTpEt9+z+F3+gCTZ6pAxIPyPrKVWN0yb2F7LSWHxqkPV+cFNyd
3w6dLWly+0nHLVzWV6W0Qo6iyScX0truOz1H9J+B5NbPer6kP5y+IX4gogbG
DvmqHCedn13VcHu0ENyC3pRGkOaO9I71cEuhCPDK/htJukO5imtHagVFrZ8W
FE7awzPq/t00oMS0ulUEko6w3FR1paWRonfNNvkI6fqRxAvM1heU9YYaEzak
eYyPa63yek1xLp/9oU/61tot+WVf3lHqRquSFEjTB7qELLyZlMjVXuUrSU+U
n40YG+yhOOwSD/xEzv85yISa7vxAOZXZWv+YtEzxiVuXJ/splT4X72SQDkx9
9X6w6iNFbEWA8hHST8OUJLTDPlP0IFhPjfRat1O0M7sGKTS+4k9T5HpVb9Oq
VXowTInb1TvJIC2wNuU748QIZXz3vKsWadfZT4otf4xRGlecdR4i6yPOk9pS
RYxTUl5rSZiRVu4O/9Tz6Ael1Yvxdpysr9fUwiXu3AmKwGC4UhZpBa2FXfau
k5R6P46MdrI+XxQpW5/U+0XhPF5T7E36xHoH/7+lpyitgWdtZ8n6bua8W/Cr
Z5oi++X9MVHS/u3uwtluc5QUz5Plq8j9EiToYvvMap6yJdPLPYzcT2Em9pfH
9y1Qxu4XvO8qJSCmbr8sVWWJ0pPfSLtwhwAzu7/WxUVxIivbiS+15P5tDc6u
lfjFiUTV8yRmigmgXcx0KQvgQi/OKq3TIG3deuE66/AKpLfz4flMsh84o/it
u8x4UGYmff96sn/0uMW2PH/Kg+osD61UI/vLwahoPw/dlehUqHa2QT4BRx6c
uHtxBy9akLRWsyD7kf92v93DYvzI/2SfhRrZz2Il7Uyv9wuh52bGSb/TCOD6
w3pol8sq9DPrfsaji2R/sLU43/Z2FRK533mCkUrAmVSzV7+bViPpgitNA+cJ
2B+ft03lwBrkzv1nVkQSATYzGfcS9UWR6JCfTnkkub7J6dxWkaLordeDMdkI
At6Kp9lvqBZFXA9Wx58LJ8BB68J0hfpadKi00sjqOAEuAcm67zeLIUPBPJO8
Y+T++RT1TEdAAiHfgBKjQwRUeI0e+WUogULO0zrj3QhY/HqQuyJKAqVUl2XU
uZD9Y3SvsdKoBFp7q7pG3pFc3yneJon2dahQzbWx1oqAP/gvtf7MkkKUGgHL
tXsJ4N9R2lG2SQbVaC0lh5PvR4dymZA/nWXQ6EauUCVpAgo1L4oqZsog88GU
+bdSBBjsDrHN5d6ITCbjR+XECQhB2u/ODW5EAzbbDiQKEhCg7DFyz0EOndr/
7GUE+b7u0h37niYtj74xWio2t7Fg+D46aqkrj1oyqXuEWsjzh1oma5WzPBLj
O3r/O3l+kFPQbjh3WR4xmieTioEFPkLxOYmim9GejJlyViULZnrEjRl8Ckhz
DWvc8goLJGP0cw5NKqL5O/xj0YdYoDJzUXjj2i2I1dJxo8GFBXohA4k9GltQ
Cy725ndkgbtXcqBT4Ba059tz1XgrFpRYdBjZDm9B7Z5+9dp7WaAte/S7yYet
yMrZhefRJhY44hSjHW3KaI2S9+KG90wYDD0i6DasjGY2RXr2sphwYuue1+f5
VFC0N9+OnE4mXEodPDRkpIIyDtuO87xkQoerYVThYxUU7y9qW1THBPPf0xXr
725DQTM9+YJ/MUFf84gsb4YqEqCbywRbMEHktfTC9zvqKDs4/58fd8jz6VfP
4yseqiOPlvnIiaJu8jxU+k2iWR0Z1t5J/X6DHN+uz9L/pI40VZlpfZfJ8WS3
6vPSGohP+bx8WkI3PNTLC956QQNpaiylGjp3g2ex7JeDAZooMcbAcZS7Gx5E
y796ob4T7fV+N3jTsgtajA4ZYU5txF1KN3ly5R3kGj8vr07XRSFusoRJ2xsQ
O/GEXitMQW2Xi6wtPnTA4uHJxkH/vWhkH4fNNuorsFG84RGmsQ+durv2gMhY
K7iFD1mukjZG4tNaj/xXN0Lz0ZaarV9MUL/8lQMqIU+BZ2REx7TYDBlUT1i9
6a+F3xylQsGp5mj/gcJcIXo5PHH5/Ph8ljm6b53/sle5HBIfbAwsyjVHYo55
MlUry2G1f3oHcdsclUwH+X6IuwsKXSeyTZrMUULbuQgLn3/AomyvnDQHFam7
Lwaq65TCTacuraZgKsrmxETCx2LwqVrzuZ9BRRkCxh2pecWwQ9g8ez6W9KWt
ikVOxVDzb92MRioVDRe92jb7qgheqhU8zr1NRTETZ1J1Hv8NMzzHTEM+UtG7
NyYBCjk3gV7J5SJjT0PDS38qoro8sIiK39XuSkNd+gemjqmQNuJak+BJQ72T
5+sfX7kGFp2cDV9DaeiIoNSvZ2G5YDHLoVaVQUMTsfecAzVywMpwiYvaTkNc
UiGNXnezwEowtnehi4acN8mPN8mSfrtYXf6ehmS+Pqqgp10CK69Ff4nvNCSl
41fQFJwJ1ucWOvtX0VG+/18Q8Uc62Lyeu82g0lGfYOTQrwtnweZq1OlttnT0
NEHqS3DoGbDxnDvU50xHJ83L/tBzSgbbqVkxI186unm7Quqx4mmwWz8bI3yW
js5kqbUx6uPA7mOEU30aHcVT5XM/2MWCXelvrbArdGT+W9ElWPEk2Bn8/soq
piOlRpX0yGYG2HvM2BQ10lHcirgYfYkgcNjGUHV6SUdjjo0Llzv9wGFymleo
k47cyw4ncsV7g0PSdF3wZzoqMrU1PVfrBg6W4ZcVRunI86xzOEXSHhwkp4O7
JunIpa3NXeunGTj0n6Cdm6ejTb2ascTIDnC4PbVFn9sC/f/3CIfQE5zjgv9j
vSmiYC3bB17+SuPbzLbjxOTsm71s17S8G/LYz/a6Gw+6f1ix3WnJeCDszrZd
2VwwNYZtSx+uofqHbJv0CXdVaFkue/3RLGaTqNWytWWjf3pNsl2Zr/6H4JD1
sl3Hyx8EvbBZ9ndB22eOZbbL7hurnzHOt1v2wvVFv8l4+2Wv5hbJ+ZrEtpzP
5uaec2wbqZspNGSwfQ6n92QVsC3Zr0DfXc/2TnnqjkhOB/b8ktxcA3jYdhwO
POfBz3ZU5aUv5iJs1xv25W3YxLbVkWDhx4htj6YE/Qojto9vy/b724ztyz8f
Nl2wYrsvgTvuoDvb44MS/9h4ss1FU+4x8WFbUcxCWy2I7T8Y7l6bj7Nt1hNy
aR2DbWd0ul4wmu3/fj9c9n8ALd978w==
       "]]}}, InsetBox[
     TemplateBox[{
      InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(TraditionalForm\\`15\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 15], 
        Editable -> False],InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(TraditionalForm\\`30\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 30], 
        Editable -> False],InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(TraditionalForm\\`45\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 45], 
        Editable -> False],InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(TraditionalForm\\`60\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 60], 
        Editable -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.01, 0.01}], ImageScaled[{0, 0}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"\[Theta] (\[Degree])\"", TraditionalForm], 
     FormBox["\"Force\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
   PlotRange->{{-70, 70}, {-0.4330126681562524, 0.}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{{{-60, 
       FormBox[
        RowBox[{"-", "60"}], TraditionalForm]}, {-45, 
       FormBox[
        RowBox[{"-", "45"}], TraditionalForm]}, {-30, 
       FormBox[
        RowBox[{"-", "30"}], TraditionalForm]}, {-15, 
       FormBox[
        RowBox[{"-", "15"}], TraditionalForm]}, {15, 
       FormBox["15", TraditionalForm]}, {30, 
       FormBox["30", TraditionalForm]}, {45, 
       FormBox["45", TraditionalForm]}, {60, 
       FormBox["60", TraditionalForm]}}, Automatic}]],
  CellChangeTimes->{
   3.6875617889436398`*^9, 3.687562308067196*^9, 3.687562733128643*^9, 
    3.687605236712493*^9, 3.687606104201973*^9, 3.68760630516457*^9, {
    3.687607653339971*^9, 3.687607701464322*^9}},ImageCache->GraphicsData[
  "CompressedBitmap", "\<\
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
xvKLVSTS72TowT6YdeRvDaeV+w==\
\>"],ExpressionUUID->"fc5e7658-e5ca-4304-b4b9-f11f959f5eac"]
}], "Subsection",
 CellChangeTimes->{{3.684065388893179*^9, 3.684065402042365*^9}, {
  3.68760862327945*^9, 3.6876086509850883`*^9}, {3.687608681853881*^9, 
  3.687608690355647*^9}, {3.7112984773981333`*^9, 
  3.711298490860586*^9}},ExpressionUUID->"3ffc317f-3c59-4200-ba76-\
6a4d35291edb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"torque", " ", "simplified"}], "*)"}], 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"Assuming", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", "\[Theta]", "]"}], "\[GreaterEqual]", " ", 
      RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], ",", " ", 
     RowBox[{
      RowBox[{
       SubsuperscriptBox["\[Integral]", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "l"}], "/", "2"}], 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
        FractionBox[
         RowBox[{"l", " ", 
          RowBox[{"Cot", "[", "\[Alpha]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "2"]], 
       RowBox[{"x", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Tan", "[", "\[Alpha]", "]"}], "x"}], "+", 
          RowBox[{
           RowBox[{"l", "/", "2"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], 
              RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "-", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ")"}]}], "  ", "-", 
          RowBox[{
           RowBox[{"Tan", "[", "\[Theta]", "]"}], "x"}]}], ")"}], 
        RowBox[{"\[DifferentialD]", "x"}]}]}], "+", " ", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", 
        FractionBox[
         RowBox[{"l", " ", 
          RowBox[{"Cot", "[", "\[Alpha]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "2"], 
        RowBox[{
         RowBox[{"l", "/", "2"}], 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}]], 
       RowBox[{"x", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "x"}], "+", 
          RowBox[{
           RowBox[{"l", "/", "2"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], 
              RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "+", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ")"}]}], "-", 
          RowBox[{
           RowBox[{"Tan", "[", "\[Theta]", "]"}], "x"}]}], ")"}], 
        RowBox[{"\[DifferentialD]", "x"}]}]}]}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.709316155892724*^9, 3.709316162347558*^9}, {
  3.7093161990302267`*^9, 3.709316250506275*^9}, {3.709316316434452*^9, 
  3.70931632110572*^9}, {3.7093164752487383`*^9, 
  3.709316483297449*^9}},ExpressionUUID->"26dc995b-d8bc-4343-8952-\
9a05aae000ff"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "48"], " ", 
  SuperscriptBox["l", "3"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "\[Theta]"}], "]"}]}], ")"}], " ", 
  SuperscriptBox[
   RowBox[{"Csc", "[", "\[Alpha]", "]"}], "2"], " ", 
  RowBox[{"Sin", "[", "\[Theta]", "]"}]}]], "Output",
 CellChangeTimes->{3.7093163283729362`*^9, 
  3.737790409389419*^9},ExpressionUUID->"c9b2b5ae-3071-41cd-a0d0-\
b105e215a2e4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Force", " ", "simplified"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"Assuming", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", "\[Theta]", "]"}], "\[GreaterEqual]", " ", 
      RowBox[{"Cos", "[", "\[Alpha]", "]"}], "\[GreaterEqual]", "0"}], ",", 
     " ", 
     RowBox[{
      RowBox[{
       SubsuperscriptBox["\[Integral]", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "l"}], "/", "2"}], 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
        FractionBox[
         RowBox[{"l", " ", 
          RowBox[{"Cot", "[", "\[Alpha]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "2"]], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Tan", "[", "\[Alpha]", "]"}], "x"}], "+", 
          RowBox[{
           RowBox[{"l", "/", "2"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], 
              RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "-", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ")"}]}], "  ", "-", 
          RowBox[{
           RowBox[{"Tan", "[", "\[Theta]", "]"}], "x"}]}], ")"}], 
        RowBox[{"\[DifferentialD]", "x"}]}]}], "+", "\[IndentingNewLine]", 
      " ", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", 
        FractionBox[
         RowBox[{"l", " ", 
          RowBox[{"Cot", "[", "\[Alpha]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "2"], 
        RowBox[{
         RowBox[{"l", "/", "2"}], 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}]], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "x"}], "+", 
          RowBox[{
           RowBox[{"l", "/", "2"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], 
              RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "+", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ")"}]}], "-", 
          RowBox[{
           RowBox[{"Tan", "[", "\[Theta]", "]"}], "x"}]}], ")"}], 
        RowBox[{"\[DifferentialD]", "x"}]}]}]}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.709316297675839*^9, 3.7093163307563963`*^9, {3.709316376677346*^9, 
   3.709316378452949*^9}, {3.709316487738435*^9, 
   3.709316491496003*^9}},ExpressionUUID->"9c5c71cb-348f-4318-a73a-\
f95d206d00cc"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "8"], " ", 
  SuperscriptBox["l", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Alpha]"}], "]"}]}], "+", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "\[Theta]"}], "]"}]}], ")"}], " ", 
  RowBox[{"Csc", "[", "\[Alpha]", "]"}], " ", 
  RowBox[{"Sec", "[", "\[Alpha]", "]"}]}]], "Output",
 CellChangeTimes->{3.709316333048821*^9, 3.709316382097809*^9, 
  3.737790415270853*^9},ExpressionUUID->"3dce3173-a9b1-4fa5-80c4-\
b3e7234364ca"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Torque", "[", 
    RowBox[{"\[Theta]_", ",", "\[Alpha]_", ",", "l_"}], "]"}], " ", ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", "\[Theta]", "]"}], "<", 
      RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], ",", "0", ",", " ", 
     RowBox[{
      RowBox[{
       SubsuperscriptBox["\[Integral]", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "l"}], "/", "2"}], 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
        FractionBox[
         RowBox[{"l", " ", 
          RowBox[{"Cot", "[", "\[Alpha]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "2"]], 
       RowBox[{"x", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Tan", "[", "\[Alpha]", "]"}], "x"}], "+", 
          RowBox[{
           RowBox[{"l", "/", "2"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], 
              RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "-", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ")"}]}], "  ", "-", 
          RowBox[{
           RowBox[{"Tan", "[", "\[Theta]", "]"}], "x"}]}], ")"}], 
        RowBox[{"\[DifferentialD]", "x"}]}]}], "+", "\[IndentingNewLine]", 
      " ", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", 
        FractionBox[
         RowBox[{"l", " ", 
          RowBox[{"Cot", "[", "\[Alpha]", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "2"], 
        RowBox[{
         RowBox[{"l", "/", "2"}], 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}]], 
       RowBox[{"x", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "x"}], "+", 
          RowBox[{
           RowBox[{"l", "/", "2"}], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], 
              RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "+", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ")"}]}], "-", 
          RowBox[{
           RowBox[{"Tan", "[", "\[Theta]", "]"}], "x"}]}], ")"}], 
        RowBox[{"\[DifferentialD]", "x"}]}]}]}]}], "]"}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"torque", " ", "equation", " ", "evaluated"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"torqAOR", "[", 
   RowBox[{"\[Theta]_", ",", "\[Alpha]_", ",", "l_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", "\[Theta]", "]"}], "<", "\[Alpha]"}], ",", 
    RowBox[{
     RowBox[{"-", " ", 
      SuperscriptBox["l", "3"]}], 
     FractionBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Cos", "[", 
         RowBox[{"2", "\[Theta]"}], "]"}], "-", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", "\[Alpha]"}], "]"}]}], ")"}], 
      RowBox[{"48", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Alpha]", "]"}], "2"]}]], 
     RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Force", "[", 
   RowBox[{"\[Theta]_", ",", "\[Alpha]_", ",", "l_"}], "]"}], " ", ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "<", 
     RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], ",", "0", ",", " ", 
    RowBox[{
     RowBox[{
      SubsuperscriptBox["\[Integral]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "l"}], "/", "2"}], 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
       FractionBox[
        RowBox[{"l", " ", 
         RowBox[{"Cot", "[", "\[Alpha]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "2"]], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Tan", "[", "\[Alpha]", "]"}], "x"}], "+", 
         RowBox[{
          RowBox[{"l", "/", "2"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "-", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ")"}]}], "  ", "-", 
         RowBox[{
          RowBox[{"Tan", "[", "\[Theta]", "]"}], "x"}]}], ")"}], 
       RowBox[{"\[DifferentialD]", "x"}]}]}], "+", "\[IndentingNewLine]", " ", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", 
       FractionBox[
        RowBox[{"l", " ", 
         RowBox[{"Cot", "[", "\[Alpha]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "2"], 
       RowBox[{
        RowBox[{"l", "/", "2"}], 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}]], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "x"}], "+", 
         RowBox[{
          RowBox[{"l", "/", "2"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "+", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"Tan", "[", "\[Theta]", "]"}], "x"}]}], ")"}], 
       RowBox[{"\[DifferentialD]", "x"}]}]}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.687560664406056*^9, 3.6875607044353027`*^9}, {
   3.687560788023061*^9, 3.687560826163909*^9}, {3.687560874292574*^9, 
   3.687560898291823*^9}, {3.687561215135357*^9, 3.687561217417838*^9}, {
   3.687561303196602*^9, 3.687561304110153*^9}, {3.6875613972576847`*^9, 
   3.687561454760153*^9}, {3.687561503273973*^9, 3.687561519176944*^9}, {
   3.687561640600293*^9, 3.687561649905732*^9}, 3.687608620067401*^9, {
   3.7113644842708397`*^9, 
   3.711364498278039*^9}},ExpressionUUID->"772540df-0c6c-4bcd-a3ae-\
e5e1c5950b63"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"aDeg", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"15", ",", "30", ",", "45", ",", "60"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"aorP", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"torqAOR", "[", 
        RowBox[{
         RowBox[{"\[Theta]", 
          FractionBox["\[Pi]", "180"]}], ",", 
         RowBox[{
          RowBox[{
          "aDeg", " ", "\[LeftDoubleBracket]", "n", "\[RightDoubleBracket]"}], 
          FractionBox["\[Pi]", "180"]}], ",", "1"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", 
         RowBox[{"Length", "[", "aDeg", " ", "]"}]}], "}"}]}], "]"}], "]"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", 
      RowBox[{"-", "75"}], ",", "75"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"StringForm", "[", 
          RowBox[{
          "\"\<\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]\>\"", 
           ",", "a"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"a", ",", "aDeg"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"Left", ",", ".2"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\[Theta] (\[Degree])\>\"", ",", 
       "\"\<Torque (N\[CenterDot]m)\>\""}], "}"}]}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"Prolog", "\[Rule]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Theta]max", "=", 
         FractionBox[
          SqrtBox[
           SuperscriptBox[
            RowBox[{"Sin", "[", 
             FractionBox["\[Pi]", "2"], "]"}], "2"]], 
          SqrtBox["3"]]}], "}"}], " ", ",", 
       RowBox[{"{", 
        RowBox[{"Thin", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "\[Theta]max"}], 
               FractionBox["180", "\[Pi]"]}], " ", ",", 
              RowBox[{"-", 
               RowBox[{"torqAOR", "[", 
                RowBox[{"\[Theta]max", ",", 
                 FractionBox["\[Pi]", "2"], ",", "1"}], "]"}]}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\[Theta]max", 
               FractionBox["180", "\[Pi]"]}], " ", ",", 
              RowBox[{"torqAOR", "[", 
               RowBox[{"\[Theta]max", ",", 
                FractionBox["\[Pi]", "2"], ",", "1"}], "]"}]}], "}"}]}], 
           "\[IndentingNewLine]", "}"}], "]"}]}], "}"}]}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Epilog", "\[Rule]", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "\[Theta]max", "}"}], " ", ",", 
       RowBox[{"{", 
        RowBox[{"Table", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]max", "=", 
            FractionBox[
             SqrtBox[
              SuperscriptBox[
               RowBox[{"Sin", "[", 
                RowBox[{
                 RowBox[{
                 "aDeg", " ", "\[LeftDoubleBracket]", "n", 
                  "\[RightDoubleBracket]"}], 
                 FractionBox["\[Pi]", "180"]}], "]"}], "2"]], 
             SqrtBox["3"]]}], ";", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Point", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"\[Theta]max", 
                 FractionBox["180", "\[Pi]"]}], " ", ",", 
                RowBox[{"torqAOR", "[", 
                 RowBox[{"\[Theta]max", ",", 
                  RowBox[{
                   RowBox[{
                   "aDeg", " ", "\[LeftDoubleBracket]", "n", 
                    "\[RightDoubleBracket]"}], 
                   FractionBox["\[Pi]", "180"]}], ",", "1"}], "]"}]}], "}"}], 
              "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Point", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "\[Theta]max"}], 
                 FractionBox["180", "\[Pi]"]}], " ", ",", 
                RowBox[{"-", 
                 RowBox[{"torqAOR", "[", 
                  RowBox[{"\[Theta]max", ",", 
                   RowBox[{
                    RowBox[{
                    "aDeg", " ", "\[LeftDoubleBracket]", "n", 
                    "\[RightDoubleBracket]"}], 
                    FractionBox["\[Pi]", "180"]}], ",", "1"}], "]"}]}]}], 
               "}"}], "]"}]}], "}"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"n", ",", "1", ",", 
            RowBox[{"Length", "[", "aDeg", " ", "]"}]}], "}"}]}], "]"}], 
        "}"}]}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{"\"\<../pictures/pdf/AngleOfReposeTorque.pdf\>\"", ",", "%"}], 
     "]"}], ";"}], "*)"}]}]}], "Input",
 CellChangeTimes->{
  3.687559813922858*^9, {3.6875598458335657`*^9, 3.68755986165352*^9}, {
   3.6875599898784924`*^9, 3.687559991319036*^9}, {3.687560025601347*^9, 
   3.68756007779023*^9}, {3.687560109254374*^9, 3.6875601171027327`*^9}, {
   3.687560479467846*^9, 3.6875605654545794`*^9}, {3.687560838776292*^9, 
   3.687560847684104*^9}, {3.687560901407469*^9, 3.687560902254848*^9}, {
   3.687561542970385*^9, 3.687561553559671*^9}, {3.687561599783189*^9, 
   3.6875616201068373`*^9}, {3.687562738376577*^9, 3.687562745841164*^9}, {
   3.687605244470797*^9, 3.687605248857699*^9}, {3.687606313778514*^9, 
   3.687606327910445*^9}, {3.687607726330922*^9, 3.687607732088462*^9}, {
   3.687607850913663*^9, 3.687607851661406*^9}, 3.70834838182583*^9, {
   3.7083484118455667`*^9, 3.708348429041971*^9}, {3.708348520575204*^9, 
   3.708348545183717*^9}, {3.708348592002592*^9, 3.708348592369258*^9}, {
   3.708348636236888*^9, 3.708348636562923*^9}, 3.70834872473627*^9, {
   3.708358438393402*^9, 3.708358444471035*^9}, {3.711269546096553*^9, 
   3.711269549210865*^9}, 3.711272060151841*^9, 3.711364466750182*^9, {
   3.7377904434132757`*^9, 
   3.737790515435232*^9}},ExpressionUUID->"d1079389-4360-4b9d-b7f0-\
ba0031de1f26"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGDQBGIQzcqp+fn//qADDFCgIXLUlG8vgu8ln1ghswvB7zOd
+ddiC4IvlsTJUbQCSf/ulzJPJiDpz13ldiIRwZ9wUXvWBGYEf8s7pfnu5oFw
/sSqn64dFQFwvoXeoVm81f5wPgT4wfmNAlWp4U994XzrCx+Kt2T5wPnqlgF2
cRe84PyCwxdPNtt6wvla2kIz9xx1RzW/wQ3hPxtrFSc9BL9ES/nzrY0ucL6e
lW7zextnOF/qs/z5gBWOcH5558W4o3oOaO63g/P5Jl0P4dW2hfOfBQfktbNb
wfkLLrjxa0iZw/n75/NpJL01hvMPaoacOPTNAM43at2y4dVLBH/JA5GZQncR
/I7pVzOTDiP4fqzh3EwTEPxbDyL9HDUR/Bf6+1fUb9eD808/q688PxfBXzfX
wUu+BcEv5T70el8Agh9xqGkPnzmCb1Pp3Bsni+BLvXZOrpVA8AF5V5P0
          "]], 
         LineBox[CompressedData["
1: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
FUxYeDHIhltUw7sFohTx//Z3+L/9Hf8f67d+mQ==
          "]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGCwBWIQLfXaOblWQs+BAQpSDL5LLHdC8DX3XLkvE4Xgv3Pf
tGxSIYK/5XJ/Lkcngu/w2uv35+0IPlu5xqHM8wj+GSa2zvvPEPxwqYNip0X1
4fw8T3OjRcUI/rnLE01WiBvA+X8M67LDLiP4UzfxvuR7gODrGc9NO/4GwU80
2ZNowWYI5x8z+xUuZYngT7Quc7k3D8FXc82TTcsygvP9I+LOlzKawPkHDh9Y
nffTDM6veHOPteCRJZx/+pD2i+tctnA+BNjB+db3fjlJ/rWH8xcH/5mUMN0R
zt8RtcdBUdQZzi90iNJN63aB87/X8MfFKbqhmt+A4PPcYfV2nuMO57+bKFxz
28wTzi9R+//6+0kvOL/zrrYEo5MPnJ/zOr9j701fNPf7wfl3pb9uSQvzh/Mr
RXUETqUGwPlZHi/TrQwCEf7jOS6r+BbBnzJFZmbOBwS/TaZIZMdnBD9LR5bb
/xeCb+BT/KOGPQjO39Mtf/mGIoJ/hauiY0IYgn9s0lnmO5EI/nYp5Xr1WAR/
lta50n3JCH6Cl0rymwIE/03nBVuPbgT/nqDazsl9CP75mdUm9yci+JtWqmmX
zUDwK07WSCxZiuBnBV6a/H4Fgh99U53feg2Cb/fyEuulTQi+QaFGo+w2BF/p
Z+2fjJ0Ivkjj5fItexB8Vk7Nz//3I/gAnAjKOA==
          "]]},
        Annotation[#, "Charting`Private`Tag$6303#1"]& ], 
       TagBox[
        {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQB2IQzcqp+fn//qADDFCgIXLUlG8vgu8ln1ghswvB7zOd
+ddiC4IvlsTJUbQCSf/ulzJPJiDpz13ldiIRwZ9wUXvWBGYEf8s7pfnu5oFw
/sSqn64dFQFwvoXeoVm81f5wPgT4wfmNAlWp4U994XzrCx+Kt2T5wPnqlgF2
cRe84PyCwxdPNtt6wvla2kIz9xx1RzW/wQ3hPxtrFSc9BL9ES/nzrY0ucL6e
lW7zextnOF/qs/z5gBWOcH5558W4o3oOcH7Zp//JCRoIfkm0XuZvRQS/QLe7
2FAUwb+0qFPA+rs9nL/NqCD59QQEvy7IltPniB2cX6UyS7hpO4Jf/u2b7I5V
CH7BrA1GKhMR/KRHyjF/YhH8uC0NaUaBCH50292CDBcEP0RreusVLQQ/4M/n
fi45BN/3XMAsB0EEv/frwo12PAg+ABV1j3g=
          "]], LineBox[CompressedData["
1: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
/R+UiSLE
          "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwB2IQ3ft14UY7HjsHBigQzbXM2qCK4DetXJJfaYjgf3jK
X+pki+CfiXtWfyUEwW8OmDz1RzOS+p5/sw72I/hxJzMXdM1G8K2cHFbLbEbw
Pxq/PeDwCMGPF3d/0+FgD+db3/vlJPkXwd+Q5fzxPYsDnO+UxukYzI3gp8VO
fSApgeCv814rv9wQwbfXuDv3YAqCn/DQZta3Uwj+4uA/kxKmO8L5O6L2OCiK
OsP5hQ5RumndLnD+9xr+uDhFNzgfDBoQfJ47rN7Oc9zh/HcThWtum3nC+SVq
/19/P+kF53fe1ZZgdPKB83Ne53fsvemLaj6DH5x/V/rrlrQwfzi/UlRH4FRq
AJyf5fEy3cogEOE/nuOyim8R/ClTZGbmfEDw22SKRHZ8RvCzdGS5/X8h+AY+
xT9q2IPg/D3d8pdvKCL4V7gqOiaEIfjHJp1lvhOJ4G+XUq5Xj0XwZ2mdK92X
jOAneKkkvylA8N90XrD16Ebw7wmq7Zzch+Cfn1ltcn8igr9ppZp22QwEv+Jk
jcSSpQh+VuClye9XIPjRN9X5rdcg+HYvL7Fe2oTgGxRqNMpuQ/CVftb+ydiJ
4Is0Xi7fsgfBZ+XU/Px/P4IPAP64uss=
          "]]},
        Annotation[#, "Charting`Private`Tag$6303#2"]& ], 
       TagBox[
        {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQB2IQzcqp+fn//qADDFCgIXLUlG8vgu8ln1ghswvB7zOd
+ddiC4IvlsTJUbQCSf/ulzJPJiDpz13ldiIRwZ9wUXvWBGYEf8s7pfnu5oFw
/sSqn64dFQFwvoXeoVm81f5wPgT4wfmNAlWp4U994XzrCx+Kt2T5wPnqlgF2
cRe84PyCwxdPNtt6wvla2kIz9xx1h/Pzztutj9uP4G8qzj7KsBPBt9xz5KPL
GgTfw7fc6+wkBD81/87vu/EI/oLNy+L+/3SD85+EXy5Z+BnB1/jzv8v5LYK/
3iVye/sDBH/fVW4BgeMI/u3vBQcVpiD4cnPmXj/Ui+AnOZx6m9KO4B//dSFC
vg3BBwDYH36N
          "]], LineBox[CompressedData["
1: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
3/8Y+L//Mej/AFetPes=
          "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGDQB2IQffzXhQj5NjcHBihYVyXz4uh0BH/+g9dmJesR/KY1
XVcu3EPw/7XaZex5guBXxX/6vfwVgl8sFKVc/w3BT6nQLNLlc4fz3V1O8HfZ
Ivg8d1i9necg+E+ETq1euwjB3+3ZxyOxEsHP2i527s1WBP/EJPXAaecR/BZP
z/CXTB5w/t9tPcn9mQj+u4nCNbfNPOH8ErX/r7+f9ILzO+9qSzA6+cD5Oa/z
O/be9IXzIcAPzr8r/XVLWpg/nF8pqiNwKjUA4V6Pl+lWBoFw/mKe47KKbxH8
KVNkZuZ8QPDbZIpEdnxG8LN0ZLn9fyH4Bj7FP2rYg+D8Pd3yl28oIvhXuCo6
JoQh+McmnWW+E4ngb5dSrlePRfBnaZ0r3ZeM4Cd4qSS/KUDw33ResPXoRvDv
CartnNyH4J+fWW1yfyKCv2mlmnbZDAS/4mSNxJKlCH5W4KXJ71cg+NE31fmt
1yD4di8vsV7ahOAbFGo0ym5D8JV+1v7J2IngizReLt+yB8Fn5dT8/H8/gg8A
UzOmmA==
          "]]},
        Annotation[#, "Charting`Private`Tag$6303#3"]& ], 
       TagBox[
        {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBWIQzcqp+fn//qADDFCgIXLUlG8vgu8ln1ghswvB7zOd
+ddiC4IvlsTJUbQCSf/ulzJPJiDpz13ldiIRwZ9wUXvWBGYEf8s7pfnu5oFw
/sSqn64dFQFwvoXeoVm81f5w/kHetwe3lSD4Xm/FX8bnIfgxa3LNNyUi+I1a
klfCPBD8U2oFvAtEkdTLyzUYbfCD85/+81h+eyWCn3ev+FzLYgS/Ye5JmevT
EPyl0qU7q2sR/HfiZz4d8ULwy79/k8xzQfAZris6itsh+MLTyvszDRF8CxFl
HT4JBP/gZ9/g7YIIvtfliqoEbgT/+K8LEfJsCD4AYdpwJQ==
          "]], 
         LineBox[CompressedData["
1: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
nuXAoPcfHK19hdH//wfB//8PQv8Dp7Z2uA==
          "]], LineBox[CompressedData["
1:eJxFx2kogwEAxvHlPlaOTGLDi9xpHxS5UtuHpcVGLUIxNrPIFYahJcLKnTYf
fHCEkLzmmIRShhraKyHHFyU1UUtDcpX2PPXv6UeIq7IldjQaLe63vzd8nOYG
OWWm0/73tVlqTWDAqvuDdBYBdycMUg+JcAafo7hKg+nFr0wjF+7vzZOSAnj0
hnhXyuCpDjLQWwNLNaV7DuNw5KKvzDoJz583L18vwWQUhztjgHdPqPIUK3wT
8KqTirJs9p+dkCcXwKJ4QbCnGD7mz6v1lfBua7GY3glP3Bk9yBVYJ8xZbXMR
2NzEiPU8ksBy3mNZElto8yTdwCKe4JERprbiBe5i1vpsWGB5LMs96wNm8+ve
lM7ZNm+pg6gLAj5zU3QPiOD9IaP9dR687h/aHlEIj0Uf12+XwEUZYSXmatjc
c5rKU8O3XuH64T74RNsSfzcIk3PhMQ0aWHGo9JuahuVC0/DzLJx/GeGRvACn
PZocTSTMrolUsdbgkPfWT5ke9lFRjbot2NE1yvK9A/8A71Oh/g==
          "]]},
        Annotation[#, 
         "Charting`Private`Tag$6303#4"]& ], {}}, {{}, {}, {}, {}, {}, {}}}, \
{}, {}}, InsetBox[
     TemplateBox[{
      InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(\\*FormBox[\\\"15\\\", TraditionalForm]\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 15], 
        Editable -> False],InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(\\*FormBox[\\\"30\\\", TraditionalForm]\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 30], 
        Editable -> False],InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(\\*FormBox[\\\"45\\\", TraditionalForm]\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 45], 
        Editable -> False],InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(\\*FormBox[\\\"60\\\", TraditionalForm]\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 60], 
        Editable -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.01, 0.2}], ImageScaled[{0, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"\[Theta] (\[Degree])\"", TraditionalForm], 
     FormBox["\"Torque (N\[CenterDot]m)\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Epilog->{{{
       PointBox[
        NCache[{(15 6^Rational[1, 2]) ((-1 + 3^Rational[1, 2])/
           Pi), ((Rational[-1, 6] (-1 + 3^Rational[1, 2])^(-2)) (
            Rational[-1, 2] 3^Rational[1, 2] + 
            Cos[6^Rational[-1, 2] (-1 + 3^Rational[1, 2])])) 
          Sin[(Rational[1, 2] 6^Rational[-1, 2]) (-1 + 3^Rational[1, 2])]}, {
         8.561665095029744, -0.004150726438928701}]], 
       PointBox[
        NCache[{((-15) 6^Rational[1, 2]) ((-1 + 3^Rational[1, 2])/
           Pi), ((Rational[1, 6] (-1 + 3^Rational[1, 2])^(-2)) (
            Rational[-1, 2] 3^Rational[1, 2] + 
            Cos[6^Rational[-1, 2] (-1 + 3^Rational[1, 2])])) 
          Sin[(Rational[1, 2] 6^Rational[-1, 2]) (-1 + 
             3^Rational[1, 2])]}, {-8.561665095029744, 
         0.004150726438928701}]]}, {
       PointBox[
        NCache[{
         30 (3^Rational[1, 2]/Pi), (
           Rational[-1, 12] (Rational[-1, 2] + Cos[3^Rational[-1, 2]])) 
          Sin[Rational[1, 2] 3^Rational[-1, 2]]}, {
         16.53986686265376, -0.008016463362809763}]], 
       PointBox[
        NCache[{(-30) (3^Rational[1, 2]/Pi), (
           Rational[1, 12] (Rational[-1, 2] + Cos[3^Rational[-1, 2]])) 
          Sin[Rational[1, 2] 3^Rational[-1, 2]]}, {-16.53986686265376, 
         0.008016463362809763}]]}, {
       PointBox[
        NCache[{
         30 (6^Rational[1, 2]/Pi), (Rational[-1, 24] 
           Cos[Rational[2, 3]^Rational[1, 2]]) Sin[6^Rational[-1, 2]]}, {
         23.390904037010284`, -0.0113274405372919}]], 
       PointBox[
        NCache[{(-30) (6^Rational[1, 2]/Pi), (Rational[1, 24] 
           Cos[Rational[2, 3]^Rational[1, 2]]) 
          Sin[6^Rational[-1, 2]]}, {-23.390904037010284`, 
         0.0113274405372919}]]}, {
       PointBox[
        NCache[{90/Pi, (Rational[-1, 36] (Rational[1, 2] + Cos[1])) Sin[
            Rational[1, 2]]}, {28.64788975654116, -0.013854097036167422`}]], 
       PointBox[
        NCache[{(-90)/Pi, (Rational[1, 36] (Rational[1, 2] + Cos[1])) Sin[
            Rational[1, 2]]}, {-28.64788975654116, 0.013854097036167422`}]]}}},
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
      Charting`ScaledFrameTicks[{Identity, Identity}]}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Identity[#]& )[
          Part[#, 1]], 
         (Identity[#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{All, All},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Prolog->{
     Thickness[Tiny], 
     LineBox[
      NCache[{{(-60) (3^Rational[1, 2]/Pi), (
          Rational[1, 48] (1 + Cos[2 3^Rational[-1, 2]])) 
         Sin[3^Rational[-1, 2]]}, {
        60 (3^Rational[1, 2]/Pi), (
          Rational[-1, 48] (1 + Cos[2 3^Rational[-1, 2]])) 
         Sin[3^Rational[-1, 2]]}}, {{-33.07973372530752, 
       0.015967002704829127`}, {33.07973372530752, -0.015967002704829127`}}]]},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{{}, {}, 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1:eJxTTMoPSmViYGDQBGIQzcqp+fn//qADDFCgIXLUlG8vgu8ln1ghswvB7zOd
+ddiC4IvlsTJUbQCSf/ulzJPJiDpz13ldiIRwZ9wUXvWBGYEf8s7pfnu5oFw
/sSqn64dFQFwvoXeoVm81f5wPgT4wfmNAlWp4U994XzrCx+Kt2T5wPnqlgF2
cRe84PyCwxdPNtt6wvla2kIz9xx1RzW/wQ3hPxtrFSc9BL9ES/nzrY0ucL6e
lW7zextnOF/qs/z5gBWOcH5558W4o3oOaO63g/P5Jl0P4dW2hfOfBQfktbNb
wfkLLrjxa0iZw/n75/NpJL01hvMPaoacOPTNAM43at2y4dVLBH/JA5GZQncR
/I7pVzOTDiP4fqzh3EwTEPxbDyL9HDUR/Bf6+1fUb9eD808/q688PxfBXzfX
wUu+BcEv5T70el8Agh9xqGkPnzmCb1Pp3Bsni+BLvXZOrpVA8AF5V5P0
           "]], 
          Line[CompressedData["
1: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
FUxYeDHIhltUw7sFohTx//Z3+L/9Hf8f67d+mQ==
           "]], 
          Line[CompressedData["
1:eJxTTMoPSmViYGCwBWIQLfXaOblWQs+BAQpSDL5LLHdC8DX3XLkvE4Xgv3Pf
tGxSIYK/5XJ/Lkcngu/w2uv35+0IPlu5xqHM8wj+GSa2zvvPEPxwqYNip0X1
4fw8T3OjRcUI/rnLE01WiBvA+X8M67LDLiP4UzfxvuR7gODrGc9NO/4GwU80
2ZNowWYI5x8z+xUuZYngT7Quc7k3D8FXc82TTcsygvP9I+LOlzKawPkHDh9Y
nffTDM6veHOPteCRJZx/+pD2i+tctnA+BNjB+db3fjlJ/rWH8xcH/5mUMN0R
zt8RtcdBUdQZzi90iNJN63aB87/X8MfFKbqhmt+A4PPcYfV2nuMO57+bKFxz
28wTzi9R+//6+0kvOL/zrrYEo5MPnJ/zOr9j701fNPf7wfl3pb9uSQvzh/Mr
RXUETqUGwPlZHi/TrQwCEf7jOS6r+BbBnzJFZmbOBwS/TaZIZMdnBD9LR5bb
/xeCb+BT/KOGPQjO39Mtf/mGIoJ/hauiY0IYgn9s0lnmO5EI/nYp5Xr1WAR/
lta50n3JCH6Cl0rymwIE/03nBVuPbgT/nqDazsl9CP75mdUm9yci+JtWqmmX
zUDwK07WSCxZiuBnBV6a/H4Fgh99U53feg2Cb/fyEuulTQi+QaFGo+w2BF/p
Z+2fjJ0Ivkjj5fItexB8Vk7Nz//3I/gAnAjKOA==
           "]]}, 
         "Charting`Private`Tag$6303#1"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1:eJxTTMoPSmViYGBQB2IQzcqp+fn//qADDFCgIXLUlG8vgu8ln1ghswvB7zOd
+ddiC4IvlsTJUbQCSf/ulzJPJiDpz13ldiIRwZ9wUXvWBGYEf8s7pfnu5oFw
/sSqn64dFQFwvoXeoVm81f5wPgT4wfmNAlWp4U994XzrCx+Kt2T5wPnqlgF2
cRe84PyCwxdPNtt6wvla2kIz9xx1RzW/wQ3hPxtrFSc9BL9ES/nzrY0ucL6e
lW7zextnOF/qs/z5gBWOcH5558W4o3oOcH7Zp//JCRoIfkm0XuZvRQS/QLe7
2FAUwb+0qFPA+rs9nL/NqCD59QQEvy7IltPniB2cX6UyS7hpO4Jf/u2b7I5V
CH7BrA1GKhMR/KRHyjF/YhH8uC0NaUaBCH50292CDBcEP0RreusVLQQ/4M/n
fi45BN/3XMAsB0EEv/frwo12PAg+ABV1j3g=
           "]], 
          Line[CompressedData["
1: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
/R+UiSLE
           "]], 
          Line[CompressedData["
1:eJxTTMoPSmViYGAwB2IQ3ft14UY7HjsHBigQzbXM2qCK4DetXJJfaYjgf3jK
X+pki+CfiXtWfyUEwW8OmDz1RzOS+p5/sw72I/hxJzMXdM1G8K2cHFbLbEbw
Pxq/PeDwCMGPF3d/0+FgD+db3/vlJPkXwd+Q5fzxPYsDnO+UxukYzI3gp8VO
fSApgeCv814rv9wQwbfXuDv3YAqCn/DQZta3Uwj+4uA/kxKmO8L5O6L2OCiK
OsP5hQ5RumndLnD+9xr+uDhFNzgfDBoQfJ47rN7Oc9zh/HcThWtum3nC+SVq
/19/P+kF53fe1ZZgdPKB83Ne53fsvemLaj6DH5x/V/rrlrQwfzi/UlRH4FRq
AJyf5fEy3cogEOE/nuOyim8R/ClTZGbmfEDw22SKRHZ8RvCzdGS5/X8h+AY+
xT9q2IPg/D3d8pdvKCL4V7gqOiaEIfjHJp1lvhOJ4G+XUq5Xj0XwZ2mdK92X
jOAneKkkvylA8N90XrD16Ebw7wmq7Zzch+Cfn1ltcn8igr9ppZp22QwEv+Jk
jcSSpQh+VuClye9XIPjRN9X5rdcg+HYvL7Fe2oTgGxRqNMpuQ/CVftb+ydiJ
4Is0Xi7fsgfBZ+XU/Px/P4IPAP64uss=
           "]]}, 
         "Charting`Private`Tag$6303#2"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1:eJxTTMoPSmViYGCQB2IQzcqp+fn//qADDFCgIXLUlG8vgu8ln1ghswvB7zOd
+ddiC4IvlsTJUbQCSf/ulzJPJiDpz13ldiIRwZ9wUXvWBGYEf8s7pfnu5oFw
/sSqn64dFQFwvoXeoVm81f5wPgT4wfmNAlWp4U994XzrCx+Kt2T5wPnqlgF2
cRe84PyCwxdPNtt6wvla2kIz9xx1h/Pzztutj9uP4G8qzj7KsBPBt9xz5KPL
GgTfw7fc6+wkBD81/87vu/EI/oLNy+L+/3SD85+EXy5Z+BnB1/jzv8v5LYK/
3iVye/sDBH/fVW4BgeMI/u3vBQcVpiD4cnPmXj/Ui+AnOZx6m9KO4B//dSFC
vg3BBwDYH36N
           "]], 
          Line[CompressedData["
1:eJwt2Xc81d//AHBES2U0aCkjI1n3usvFOdbNKISIMotSkpAVGffe9zshKyrj
k6yUhlVJOCcNlUKTtKSFiBBC+r1/j8f3r/fj+c/7nPMa533O463oc8jBV0xE
RCRHVETk/58cCZ0L3ZE8nFocN3/03gKgrWWvaxPKww7uNd1j+fLg8LNo3uBB
Hpa7RyNjZpTA5MrXwXrePPxVp8HfWE0XGDaKJb5w4+HS2AvsqEg6iPPROXfE
iYfTL8W/0HvMBPPKj7fc2szDofoF76X2GoEVhlwVU20eXpPVi+mbLUD72zDS
Xp2Ht95/LunVygOJR6v6PZR42OXLevOPTpZgpk6j8ugKHjburyl/6WkDejjy
xtdnLfClH1tcmm/Yg6us3y7qbRZY1lInb7DaGVjQryUtCbLAQR5D33QZ3iB0
o/JoV6U5JuJMfizxCADVDrst5l02x+zjpaXHqgLASFTRaXqpOZYU/+DTOPcg
CGpRNkzOMcdrH31KuHL1IDgQoCI04ptj4L61b/NMIPC5ukGuwMkcl+oa9m5q
DgLbaOpc3wkzLKslvuQKLwRoG2jxhwzNsEJ0Rrnan3AgK+E+P59phpV0r2+R
Xx8BxtuSU6x1zbBq0quKPl4EaPAdOF2ibIaPflySpX0qAmxJL7+8c6EZLnic
kwW0IoF/r8br5g5TnGTl0hfqGgWKs1U1CoJNsYxe9tHPZ6PBcW/nq1sDTHHP
0YaHHfXRIGATQZ/2NcVzG81Syj9GA3rTVyNnV1McO++H8y+VGNA0WOywCJpi
7t6AvrErMeCjuXJ0xGJTfDihSvnlrWNg1ei6NvsyE4wbCgN27ooDobc8zu8v
NMHfdNWWNOyPA09j80MEeSaY5PtIS0fGgbhFq+Vr00ywWFTPxhNZceDbhhXe
6yJN8A63rD2tT+NA5Y5Fo4NWJhj+bvQ5xY0Hlo2TK5J+QJwe+pA/Z1ECKBSw
+oq/Qvwu/lJbknwCmLYOu934EWJJ2VZViQ0J4GrHqOfIC4hXyjcOPjZKAMt+
/SxzrYf42o4X5woDE0C38lcD9RSIc3daXI97mgDCE5953NeG+PIDud6+WD4I
G/m320sd4iNlXc9CkvggdKe2/7QixGmFD7p/ZPNBkFZSiN5yiK/I+fmVXuGD
54WJ0twJgIdTq96Zd/HBDVrQ7h9pAC+f3zK8QVcAqsSfHlQUADzhd9ol3UAA
rr3WiHAJB/jYzVMP+80FoCzqc/Jdd4Ad1FLu7nUVgJwm5xu5GwF+v9R4MjFe
AI45GC3Ycs8Yu3e02ga2CkCUSs7ShJvG+JawtelWhwCEj4+vrb1kjPnXhdqj
3QIQlFNBU0k3xpd0S/t0RgXAp0d514y7Mc7odO9sXyEEvOCF1y5PGOF9j6RF
K9yEYElGh9NiTSPcb+d8ovulEKw4YmQUq2CEdwa8VXr0VgjW7ija8EvGCB90
8bUr6BGCTQqHxl9OGuJt/6x8Vw0LgdWluWfyHhjiGUefJKOFBBA0Md5q+lD2
VVgKuQRILsm9m7/dEM9qyS2VNSFA5nHRy1JWhljgW33lOY8AhbZPo0d1DPF7
w4zr6xwIgLr2KNz+y8Uvfzer9O0lwNRIprf1WS4uMftsYpBGALHXf6zqk7k4
beSQ7fgpAiy45UnTjuPiN0lK4ufPEkA+VnOO7F4uVo6/cqipkAAMybvFb/S5
2Nxi1p9RQwDDn+opNupcnC2t1uNXSwDzZyePNKzmYpmPFxeT9QRwOO3GOy/G
xQMpAYLMewQIUh75vq/dAD9567vq/QsCRMzd0d511wAnnrjgLOggQGxfQ+2W
mwY46W6Aw6q3BDh5LTFR9z8DLL1WM1W2hwDlXEXNyQMGOMf76Vb9IQJUKZBL
93saYL1i6xvbRghQJzo4/dbBAO9t3jfg/psAD5trnyCOARZ33fjIdJoA3xzt
A8l5Btgrp/eo8VwSvNF6OfxsmoP/LP2VXTqfBE/m7QhZM8zBfcPtj/8tJEHV
bc+Iyk4Olv2wRCCUIkFJ1uep6SccrH5mYlGVDAnOHNobw7vDwbfnPb3etpQE
McqHEt5e5OC2uszAD3IkCPo7Iq76Hwd7HjFOaFtJAp+OMDIog4OHnlk2VK4m
gWXSsWSJoxycmqtTabWOBMtGU7J1tnBwg3Jwc/MGEsx7KrMyCnIwp3HtVlM1
EkyVZuXe0+dgp2eqC6+qk6DbLb/AdS0Ht3Q00lw1SfBCX1G5WIaDRRZmFp7Z
RIIHS0pKfkpw8E1dO4dHWiS43HT5Ev8nG0cXWkXN6pDgXJ6uVmsPG3slTY+L
6ZEgI6zmmnwHG58sjK6fpCy0Z9N2t7CxjNbypx9pJIjYWF9zBbHxOtZSzVo6
CQ6IQ9ZkNRvPy3zcGa9PAo8Pd2+ZlrGxdeepTkMGCexrNxum5LFxus+zTX2U
zTJaGjvS2LjC/msHwSQBM8DOREnIxuf53HfLWSRQ5724GxDJxvx8c8NsyqvX
u/BuHmTjFJHwqXlsEiyZ6noo6sPGS1ptVx6gLPrSw2aLMxs7f92aiyiPXel5
mm3NxpU90wkSHBJ8J/3sPxmzsYPCt+eGlLu8+59r0qn5lZ9L8aX8lBu4PUyN
jfc437keSxkvH+nAq9l4fUnf1iTK1UNH3CSl2Tj5Zf2O45RLH/15t12cjRmd
XzrDKJ8tivEsmGRhCVeZZ86Uk2NEe/oHWHhdzYSZOuVYF+EexicWbvnjoP+D
ml+w3oLvsa9Y2Hzgc/E5yr6SKf6PH7HwudmgMxaUd3yVHljWyMJ5jg9k3lPr
t0GnAj2rWDi6/vpSP8rGZ+V/XSxl4fc3V5zvpuKnF5IXMpbDwglBD+q3UFbZ
un7cOJWFN9Zf8L9ExXuBqPr0i3AW1qkuTTCg8jPTVR6jEMDCK51LxwKo/P2s
0RHx92Lh6ojcOelUfl/uY0nMWrJwlfU+8au6JGg2vU1aGrHwB3m7mVKqXurW
gIWZeizcdt4qP12bBAXtPCn1VSzsu+D1Ny5Vb++GLk6ELmbhiBHJlx83kmCl
1OLuOyIszB7p+RWsQdXX1hcVO78zsezKijY/VRK0BjDPlnUxse3JjtPNKiSQ
TD4b//spE5+sEjsvp0wCwWNPh9QaJpa6tJoUUv2B+5oM3l1g4mfZEQFFa0nw
d76qskYuExPeN4sqqH4K2zww2hTPxLuCFq88S/XfvnsRWeO2TKxwWOts4RIS
FH9+G2NmysRlPkdI7iISfBIDfmkMJh7d/KT/7gISuJlIsDauYeLBm61KReIk
2NKY3unex8DZr7515v4hwPH3Y/jSOwYeyNEbrhgnwP0Zl4sTbQycf6zg/PVR
AhhzFaLSbzDwf+oS31IGCaBbe2n1fT4DtwxZRUd1EyCgY7G4bDgDl57t/rHo
PQEujgcNeOxnYDO9U2tS3xBAicFqmLRn4FZV91c+zwmwrOquxyYFBk7S8qVZ
3iXAZPm785m1+jgqS1NJitqP9VvAie5yfUz3N1tUkE+Aw/2FwVrn9LHIgKik
IrV/96v7mzUL9bF/scuu0VQCvCv5/WXKQR9fqAN9b6Kp78O5Jeo+g3TcmFCZ
U+1IgN7rqZfIT3S8WrDHucSWANJPpLWuvKJj6Zn4hEQrAnhNytImG+g4+jYA
GoAAItvkDE+epGP/6afPH2gQAIqtt6/ToePQRao1x2aEAO/Ri5ANpuGAmN/z
JM4IQW9U1RTLj4YVTKWSbNOFQDqdHuPuRsM3Q7qVkk4IgVcDI6HMlIa9lTNL
30cLgcgKg2TjpTRcl4/P9HoJAWw2Ldhfo4dNPvEW56oKwR0Np4dN47qY5l7s
n1MmADRhTUV/ny7WkCyoPndOAIq7l52Vfa+Lk+3Yl7OzBeD46Vf+Pnd1ce2J
7Q9dBQJgK+EiKZami6t2u5EMTwHo6na1NdHQxbIL1kpZywpArw4qi72pjR+H
bJddH8gHdote48h4TZwlV0bfOUudp76WbTXZp4lt1CU/8UbiAWw82jXfThPf
tnnUrvotHtCCFMdOr9HEUxUlOXefxoMVLwPUbtzciK2xdvvhvHjwIXfOyZFB
Dbx9s2p2GSseBGrq7Tzgpo4vnZhgId84kGKd/HsXfQNez+DnGlrEgPV/jwav
KlLAtgu/Z1kNHwF1V1XedH+SwRtU/R56WO4HYToy4RJfJ9Dmnh3E0XvbQKju
JgeR1nGwsXuhy6nf9oi/KuvCW3dZaDXmHZX8Zz/yMipbk6+jADffZ9+YLTqC
tktyXaNjN8B/qvmcG/kxaETg5FR0ZgO8lvl3vKUuBp2cPWj3uHID3EDrKW3t
iEEPfxVYyH/ZAOGbjNQcmWPIsHMurcZSFQbcG/a0FhxDSiXPFw7IqEF5I9Ox
Sd9YNGS8v35nsTqM71yGJFLiUHIt/2ZCgzq8wjy7eGtOHFKn5VddfK0OXX3s
ixIvxCGfDe1lE/M1oGLTltieO3HotSQzK/OgBpytMJ+QGY9D9Z2igS3MjXBV
atxXz13xKDH47DruI00Ya2RdE7E+AdnOhn2r6NaEr7YXWSRpJqBlJ5yuqE5q
wiRp+ROZzARUcF6KK6u2Caa6O0kLtySgG+1C5z7BJujUMmX7IzwBfdEOTjkN
tWBdUVRi45MEBH9YT4/e1Ibpg8sO2wfy0dxw9Sb/Nm2otfiq8qIIPnoiNjfx
4zdtaHnburI+no9cVt1Z0bJcB2asv2g2c4qPAq1YtMIQHXh4WVnaWB0ftb5I
1y+T04Wnt+Wy7okL0IzesQPOL3Thybk1c2pSBSiranHfkm5d+C3jZW7lGQHS
puf7NQ/oQtF+Uvv8eQHy1q/3Zs/VgzMmxAbnagF6wJxyWcXRgzFje4+veC1A
6dww8w//6cHv017l/fJCtLFeoim7XA/yVFyDxRWF6J5hFrCr1YPbv7o0SmkI
0bhRjQF+pgeFKYMPp9hCtAuO6BaK06CjeWqP4g4hUrUIXOu3nwYjL0ctuZop
ROj+3xyFcBqUz7R7/y5HiHbwUuQ7+DS4NMumaea8ECVtvrzUMp8GY64NVUtV
CNGwVf+Cje00OKTbfzS+RYjqbP3GBxl0WGIe+/XkPyFybPsdUmpKh+60JNEn
EgQasBP+8rCjwxMHUcsfSQKt21Y80LaPDg+mZG9TkyeQwLGnpzKXDjmD5kce
6RDIbodH2xFRfdgaRnugsotAM5/aqrYv1ocVL1uLpb0JdOmASTZjpT7MmW1/
9dOXQHNjVdx/6+rD4Fer1iQcIlBjSX9/qJc+HAohbsxJINCm0bC5oUgfeh+f
WXWomEBd0b19ji36MPRD82hMGYGOz3V7Su/Qhy5/nrw6dplAn1canRr9qQ/l
xP8WOdcQKAfOUQpRYMAjN44Oud8l0PyTqUbBMQy4q6IxsfkDgW7IiSo6JDKg
k9TU6NgnAu05HyxOy2LAeco9ysu+EgjVbG/5dZkBGTl599R+ECjs7WrXw+8Y
0Ow5J6donEAqvimG23oZMLRVr8njD4Ge/5xdpzfGgNcD9dMkZwikJdbzbViS
CV/rjC8xECXRF/Wy0CAuE85sndzUv5BEGVUrd9hvZkKVUxdX0RaTCBomcXUd
mfCWgJF2QIpEuXaBYsP7mVBhki5evZRElm8+fm0LY0IfD69pvJxE4z7bHl1L
YMJFnLcHsByJHML00w7lMGFscNClzNUkEhEpDbErZcLulJDDe9eS6GqinItO
FRO+PJtdtGkdiRbkT60desSEif/ZcpOUSITv4vLAP0z4eMq284w6iXYbalTK
SrBg56vuF8MaJJp7Pf3GDWkW3OIrUWWgSaItpT53ZtVYcCbjzIJiLRINKbQ8
KKSzYN/b99F3tan1naY/4QEWVNXb/eClDok6jot3nHRmwYkqufYneiSKEj34
jubDgnLhVieqaSRaE/Xq0+uDLCgViZck00mERoy+R0WyYOTDJDdnfRL5HCgd
UBCyYP4k2i/LIJHElyUjTWksWK4Ybogpl+0Kn/DLY8FPn9qfeDJJZPPq48zC
MhZs9hiR/0X551ZLsWvVLGjJm6sQyiJR+oOKeY6IBXvbDN/0UtYHKxdPPGbB
7w0tm+3Y1HxvxsvmvmZBX4+ffhcoR+n2y4EeFjye/JX+i/Laiw5rPw+yYE7l
RPkmDhU/xdtK5B8WVHsQ9MSVsk+OsrqmBBuucyzMiKAssTRZq02aDX8Ef56m
zrOoLGmMFrKGDROfp0lQ511kLe7OllNnw4KqRVeOUR6Mvm90m86GZ3sbh3ZT
TvutZeYJ2PDix2UtBpTpgdmWc2zYsP9svOEcyq+/zW694MyGvpUxJg3U/CI9
9zra+FDju5Id+yiv6WzbMXSQDRU9lGYkKCN7tkdmJBsmqHdePkWt3+dRwW6W
kA0D6lnfl1GWMF3g/zaNDVVuvyqj7guorO5wYGweG87Zs2WIuk8gG3pXiHIZ
G0ZlcWuNKf8sN41srmZD2VZLUSGVL3r+UoFUCxuuPHJo4Tcqv6+XRydWv2bD
pwuG74tQjjj55aRLDxuuH9s1uYiqh8bY62fP/WFDYsP8W3+o+vGeXHvOTIID
19d1mXZR9SV+mCj+Ls2BRiZNBpc3UfHycbmmo86B4VPMAJWNVLy6UM0LOgcu
RMLzj6n6TXNUrwsHHNiZF2Doo0aNb/7nHnLmwFUa93J8Vaj4NHg/3u3Dgf+1
KLs9o+p/DfNx27xADtQ7/CdMW5EaXy23y07IgW/pynfqqf4RL5jTPZrGgVpN
mf2DVH+Vygd8PZ3HgZWsan/pVSQaWGA0/LGaA2t8w7w1VlDrG/ggEdTDgXma
GXPKqf5+tm5ficwQB2bfp2XpS5Joo+Mv8+pp6v11K59dnk+i97fmCMaXGcCQ
1vnAfw6JTEl1sZjNBtBqhU2tzCSB8uoqzys4GcDIhAde0r8J9HvQwAR7GcAw
pdHCv78IVOa0NW5OlAE0Lr08UETtV4uVgmcTLxvA+jkR3uuo/c5v+3S+5i0D
OJC5piiji0D4uMDo6X0DiNTeHhp7TaDgoexo6Y8G0PnUSBG/jUCd9bensmW4
MHK3l1U7IlChi8REURgX6proGyjmE2j6xMlsCz4XCj7NhkafIZBToxzzeyoX
7o+6ofwgk0DzNmw8svEiF97kG3SqnCBQwIjtaMVbLiw/GHVMKoxAzJQzQw3Q
EPYlB306Y02gVKyY6rnVEM62v/3QZU6g3tFL2qJuhnD8j6yJJCBQrlvDQfMQ
Q6hhw9Jj0Qkkot7z43GJIQyY3XXt9ioCtTRp9nYsNIL12c+vh30TIva/7MGC
FUbw6qxI2bJuISrlio36KxlBmZ1HYNEbIUqo6fw7zTGCkm3FuzOeCBGnVLh0
vb8RnKovC6qtFKILiR+N9zUbQY4jKlGOFCK+fWbWJN8Y3vataQqfEaDh5Nmc
O6nG0FHe+erGMQHyeORfcCLXGGbK5W1u/SFABqawfE21MbQ9lyf83iVAv+iD
GPYYQ9qOGFOfWgHylNs8cBwCKCi2D4gMEiDuhynTlX8BlJkvrsZ4xUcV+81+
DYlD6HMhRFr5MR+Z+i0wcZSE8JfWMoV/jXzk557VvVIeQmX64ivxZXx01ebK
ugt6EP42rH9aEcVHQP19/p09EL77L+9l7Wo+8vpkmDP+GMI2VX0i1j4BjbwT
63d9BmGi3v2FTLMEJOh8yGnogNAq++ZMFyMBlbU5veF/gfC+hZz+8KoE9Ksh
QF5mFkJDnTETyy/xKCEnL1tTzwRm6owfqwyJR0WOMxlep03g7j3GLrHCOIQd
q7Nc8k1gBveghXR4HHrnuP+MbZEJfHQcGWXsi0PLnDrzDa+ZQFHCx9XfJg4R
TjVl8s0mUFJ7QfYe6Ti0b3tAY/u4CVzUfWu+ik4s0nZ51wedTaG8J+q9w4hB
tW71UHG5GdRMCKRZD0Qgu+eBTlOrzKBjp/P3jw8j0DcrxX0v1pvBY2J6tW4l
EWgZh0gVbjKD32+3tf9zj0CH5Ow/9JmZQanTJa/mt4Yj1Zefj1YFm0EbwxBp
hYth6NRWyZtm7WawrHR5erZNKDoM3bT8ksyh7+SFj51kINqzfO2SxnRz2JTn
MSatFYic+z/+XH7GHDZbl16Ven4QGZzyrbhfbA7V8kSPe68+iMR6g+gbGs2h
SV2GiFv5AZSRSnK+DJvDvf/hiZt4H6r5UGPh42wBteTFJ2fu+KDS6nDVul0W
0CJs9I+Zlw86c9xgnuxuC/jsR+KR7bPeKJqGH945ZAFZI8t3dnK8kQXRYqOY
aAGt/np9aNrliV5r9Wzrvm0BFdLE5LirXdFEtJSHhyIPmnz/LF6SbYlCne/+
slLjQesG03ttMpvRsE64kKHFgw/t3922TbZAvT0fLi/i8OBf27H1NrGmqMvy
6nSdPQ/KRcl/OFXHRs5KPqmlzjx4R0KTsbmUgZ5PL1fO2MWDIrJG8GIaDbVc
jbH238eDg/oXjUTuqiPL43ofnAJ5UHzhaOZgqhK65/31MAzlQa3IIG9+jTz6
3/8Y+L//Mej/AFetPes=
           "]], 
          Line[CompressedData["
1:eJxTTMoPSmViYGDQB2IQffzXhQj5NjcHBihYVyXz4uh0BH/+g9dmJesR/KY1
XVcu3EPw/7XaZex5guBXxX/6vfwVgl8sFKVc/w3BT6nQLNLlc4fz3V1O8HfZ
Ivg8d1i9necg+E+ETq1euwjB3+3ZxyOxEsHP2i527s1WBP/EJPXAaecR/BZP
z/CXTB5w/t9tPcn9mQj+u4nCNbfNPOH8ErX/r7+f9ILzO+9qSzA6+cD5Oa/z
O/be9IXzIcAPzr8r/XVLWpg/nF8pqiNwKjUA4V6Pl+lWBoFw/mKe47KKbxH8
KVNkZuZ8QPDbZIpEdnxG8LN0ZLn9fyH4Bj7FP2rYg+D8Pd3yl28oIvhXuCo6
JoQh+McmnWW+E4ngb5dSrlePRfBnaZ0r3ZeM4Cd4qSS/KUDw33ResPXoRvDv
CartnNyH4J+fWW1yfyKCv2mlmnbZDAS/4mSNxJKlCH5W4KXJ71cg+NE31fmt
1yD4di8vsV7ahOAbFGo0ym5D8JV+1v7J2IngizReLt+yB8Fn5dT8/H8/gg8A
UzOmmA==
           "]]}, "Charting`Private`Tag$6303#3"], 
        Annotation[{
          Directive[
           Opacity[1.], 
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          Line[CompressedData["
1:eJxTTMoPSmViYGCQBWIQzcqp+fn//qADDFCgIXLUlG8vgu8ln1ghswvB7zOd
+ddiC4IvlsTJUbQCSf/ulzJPJiDpz13ldiIRwZ9wUXvWBGYEf8s7pfnu5oFw
/sSqn64dFQFwvoXeoVm81f5w/kHetwe3lSD4Xm/FX8bnIfgxa3LNNyUi+I1a
klfCPBD8U2oFvAtEkdTLyzUYbfCD85/+81h+eyWCn3ev+FzLYgS/Ye5JmevT
EPyl0qU7q2sR/HfiZz4d8ULwy79/k8xzQfAZris6itsh+MLTyvszDRF8CxFl
HT4JBP/gZ9/g7YIIvtfliqoEbgT/+K8LEfJsCD4AYdpwJQ==
           "]], 
          Line[CompressedData["
1:eJwtmXk0Vd0bx1GSikwhZZ5uRGauO+xtrOSGMqbMZKqEpJTKfO85SBneFFGS
ZCZJZe8SzUUTRZE3MkSkDGn4nXet319nfdY5a+9nf5/vfvaz11H227ctUICP
j+8CPx/ff0+64IbL/fMcrHL12/sSpgDY66QmI/iNg6cfmKiavJACJ8QOB7oN
cvBfHYNbfO9UwfGx+rfhfRw8KX3dtNWCBuLbxzkJbzlYxveG/5Er68GRI74m
lU85eDVnaHHQLQMQO7xJaFEjB7fwVZ11JxggAstcqUrhYId4GYWU07bAK+La
F0EaB3uMHPo5KekMGB2TUQ2h9njmYrL6SLsf0KQ7sr067HB1GfD2L44EEa2d
DxNZm7HZW+9bKgZxQEtb4sytto24cSrk8xarE0CayVCz1LXFIvsXtcL2JNDR
E5PqSLPFzRcYDc4vkgA3rm7US8UWS/juzPb5kAR+Na+rjZO2xeV51aI+M0lg
gC7LvvbHBlfYXAv5rZ4Mqkx/uNGe2+CUTT4NlYnJwMawmhCNsMFP16fIt5ml
gD8vRifWhtpgTf7zCs+sUkBTpMY27QAbfPtN3LFnW1OAVl2B7CZ3G5yzI9bh
WkAKENMnL52ANnjtgblauZMpoFc3BH0Xs8HZ/wh2w8EUEK2lOv2u1hq/2LRK
8kNaKqjf5m8jVGGN44GNxplTqeDb4Yt5hqXW+J3Amcgt51JBxGNVJplvjUtt
2WU51akgLFwtmZVojetumKri16nAr0pdpsjZGtvfPQBDldKAkwGNEThrhePN
WcsXqtLAyR3B6VlTVjhAzDUp93oaeJZQ1nd7zAorzcc9pOE0YP+SliTdb4Wb
Dule1e9MA5ui1z29/8AKG74vj3r1LQ3ARi1vrXwrvL/WzMfTiAt0zXUSvzKt
cJ3inzyPGi6QENy1tMDECpea6S6ENHHBzHMy3U7PCvvSN8vuw1xwO/BL3iVV
K7zO2DjSrYML7LOuVngus8JnHautir5yQcjwujf3uyzx9evP/Feu54GSXI11
RZGW+FVR0yv7czyQ5utaxQm3xLO/3JdMXOCB8PUphguBljiUuZpIvMIDhncH
Wa4eljjcOSqBaOSBu+Ml21ZAS7yQLfBWtIMH+qxVj8SKWOLuixLN/XwEkJtW
fO5YZoE3Tl/8W+hBgOgbXsWhFyzwVdpm7h4vAjw9VhCVdM4Cr6EpFuv7E+D4
ijWyTSctcO2KNdH54QQYUpf2VTxkgc1KfA5MxBOg1n3F9PhmC1yS0OBXWEyA
ZYpb2oSsLXDC/MDve5cIEDDIzVNmW+AtR5au+HiFANKRQkwXAwt88sbM4fla
AhwhBJJvyVngIc/o2Kt3CLCpZU6aGIP4c+ObyxJ9BLiQZDpSMgixWrEMyhwg
wIJdzM2WPogXH1trIDBEgKquae9vLyFet9pQ4/4XAkhNTZR53ILYOKFFpXOe
AHuv68RFNUJctEPn+9wvAtw/Gs5Jr4HY58sWGWk+EhxeNjqFSyA+crSHo7eE
BP2qg+a0dIjJ3L+en8RJYD6qKmKZCnHad15+oxQJTtf49XmeoOKrbFSOlyGB
Las/MfMAxFs0rgmOryVBhWvPk5ldENsLFQjZaZLgILfTq02XipfBv4bPnAQx
3/76+9AgjqQ/U3NmkiDaUzdkQRliD1pE8lk2CSJ0iCj9VRD/0lHZuNiKBC8u
cMUYswAPbltay9pCgmfRQ3L7RwF+kK3gup5Dgse2VuqX3wPMb3jETtSBBPdG
f9El7wFM3q+Tr9hGgkaDCP+xkwBbzHW4OXiQoG7x0z3KSQDvnLrt072DBNVv
1sW6HQR4z/uOOuedJCg7/C/Zuot6r3Bvg6Y3CUrsYd68I8CjR3w8jvqQoFih
oHiDNcBuA/kP231JkH/XtfGsFsD9OUVxhgEkyM2ux53yAO875XLLNZDSK0js
sZA4wKzpOIs9QSQglz3qi5plY5NlG2Sig0mQ1qsxemWUjf3WvAwKCCFBclXi
9773bAw2ysxvDCVB/DaWsP09NhY6PP7vcBiVL7V8yYTrbLwi8x6jNJzSd2ZG
vqmcjTf3tL1y3UPp+WA7baKAjRU3XKj6SXFEfo2BWhYbr5EQe5i1lwTh4SKs
HUlsvLb1serafSQIYYduPHmQjaPN8lrOUBwkdt+pPZSN/yian1kWQQK/AdWd
v3axsVnfifq9FHs1HA8ycGLjHactRNop9kx5HxFszcb7xbeViu0ngbu7eVyh
KRsHDmXFb6XYWSsv+ZUWG4u5DeYco9jx13TmMgUqXh+TLxcp5jxzzIfibDza
GH3iJsV2RZUlMYvZuO9+jks7xbaRy6orZllYpSk7+B7Flta7bwyMsvDdgMjm
axQD6Xutsh9Y+LOf8ZZ8ipnDSs+2drLwnb8jcpEUmzUf7U66x8Kn4IV1LIqN
yHcDzddZuGDgwMEFKn59L9PxyXIWVvBMWFxJsa5e9qxGIQuDrtEOJ4q1BKb4
d2Wx8CJmd+8IpY/GK86K00ksbKZxiHaAYtXScumHB1nYY5S/YZrSVylWSPlv
KAuT2RXHAileaxegbezFwvuGm4hHVD5k194xDnNi4aW+4d0qFK+akIfF1ixc
ricRtJfKp+ipLmcRbRZ+qx9v00flX/oAi3VMgYW//DPasJRiefeL6lPiLDym
2derTvllvcK+mVdzTKypPeHG2E0CQ/7XH2y/MPH5M71XDSm/mX8yv9/Ux8Q0
tYUbipQfN5cv+edcOxNz3pUveelH5SM9/LhoMxN/32Num0/52T3iRfDxSiZ2
HZ+xcKH8HmRSSA/IZuK8ZzoRpbtIkHTXuEfbj4kDr7KarrlRfr50trXAhYlN
xZtH5Fwpv6fxV6zczMR7PD17o5xJcGHr0yPTG5i4S29ciN+JBOhdgMLN3wx8
XzE/PW0zCdpvP1qiM8XApj0B74mN1P4u0vta+ImBVRXPf0+wIUFv0C+U8JiB
TebHjthbkODnt9O+dmcYWO3MC1GOGQkE3sxvvkUysDTsr58wJoHwDW8D3eMM
LCT+UzPJkNL7mPYiid0M/L4i6QRPlwTGy1tL3hoxcOfieFlBNcovE7T0LTQG
bnJwdLZRJoF1Z8aB22sYWDRrbfAhBRJsy9thWyzAwAJ3j669LUvtJ9Vvn4M7
zPG8V1JP3QoSxC5x73jXao7XrVL9mSVMgmMjt5vsr5vj9XfnfwZQ9TSjmsvV
KzTHMdmdZUN/CXCVoaw9F2aOu1YP9Lp/o86T7Y57U4XM8el9fj/mXxHgrc6r
yc4FOi6v+Wbj2UmAJ0LuUWsn6Xg+641y3VMC1N30jq3tpuNrMgonYDsBjqru
S+i5QscrzLUE+xup+j+dnrvBno7TbRaFa+cSQOip+OrDkI6/icUrDmUR4Gdp
ztl7RnQsHKcRk5tOgP4dBUUe8nSs6HNMsjuJABV3K8oTJ8zwYNMlZl8kAaxO
PW7pOmmGk2TVHvyxJ4BJuIOFSrIZrsgNOyS1iQA025et4Ycorjw/omhFANGf
7x7w+5lhh1vWorJ0ArzzHX2hbWiGPePPFqSrESBSX/jzsdem2OH3e27mPA8U
ddiupMmZ4irjsBW/z/JA79crs9Eiptis8IPmphweWL1SpP8OnymuvbctITWD
B05xXtZ4fjbBjA5Dvn+P80DSI+9tmQ0m+N5sU7RIIA8E34vNmdlqgg++aZ8z
0OYBvabyNW2JxliSxTHvquKC8C6RxRIHjfHvpaf9akq54MpMxBevUGMc4OVu
GF/IBSrGprfnHI1xYMZg72w6F0jVtXqtVzDGf4/fbvQP54K5q73Fp5uMcLCv
+2MlTS5A50VpfuOG+MePTVe3ZKeB4WuZ5akfDfGnyj3uAUQaEHsiplP52hC/
3GSQFZWQBnzmJAzmbhti7Z2B9Qci0gCfkwwzI8MQ329rWyNsT/VbAkqOzRsM
cU3gwKl9/GkAB+jHSkQa4GcNGjznwFRwZ53zg7szelg6qPu8i0QKMEhuqBkd
0cNpw0JnwJIUUNIvdUbivR7OvLvunOLPZJCW9zrEr1UPL95v9ubOx2SwVdBt
ucBJPbw5h9aQWZMM3vV7bLVYp4dvFNIWXOyTwfAGVHbsui527xxpbjiSBBxW
vMGHTmhj8oqFlvDdBJBuR/7YaaiOX6wJO5Dx8yhQ+h0XKXdRAVdd4vsEjGNA
c5Xa2/6P4nhZ9eXYH/6hIGaD+EHBwVn05eOVBKLdCUTrrd/G92wGRF9qcvGe
dUSJcjmXe3ZJwLO5SwP2yYQhH1bZ2oINCjB2zdGFucEDyGU5w+PIMXXoXfVr
Y+WOeMSNPKPIeKgNe/t010uOJqCtf2KGavq1oWOc0cia2QQkxXOu1JjThreS
78fLL05ERcUrGRKa6+HesjnF5QqJqLEj2XUkaT0U93xRm+mUiD7pRqbnQR3o
vOf6G/r1RATH7Bamr+vCJOOezskjSeiXfnyY60s9yHjp7TE8mYxy6kRGRPv1
oOHEu0XffiUjXcOCoPtf9CB3Vm98amkK8jW65Wu2RB/2iWjufqWUgtpNfrrJ
0fXhCgMQoOqYgrIYMdYfCvWhMnlm6lNFCtKw2SsfFGoAwX7fay+8UhFq+52v
cNAACoqqwPyQVORumy7blWgAP6rP7XaLTkXExgrJTQUGUEOgJ66Om4omN48K
a3UYwFN/6Xpj9amoeWvQzLixIdz7+HST35I05ODu9fwAvxEs9dAss7uYhn59
fF7nImIEH/z2iFxbkYbKwyxyjVcbwdmlw3WfGtLQkmNqu37oGcF/MpO57u1p
qOXS6Gi0jxEcW1Kk+3Q4Da2fjlkSjYzgjKpD1GdtLlqakcmKPGoMmweWJj4s
56JGGX7lbVxjuGjnwhP/Oi4KKI5cbJBjDJV8BjW/3+Ai1ODyeKrCGPbWTy2e
fcBFMT1rPPb3GsM4/GdZ8hAXfaKVRUcwTGDXgN4TpMhDuBVf3TtvAuUPbV9d
wOMhf+a6WglBU2irmWfz6iQPLbmW1dgoZgrlNu46zZ/HQ/alfnf+aJrC9c22
PPZFHupKW9yV4WoK9QyMSy1u8tAEZ5NAdb0p9Ml7cjl0hIey2muEtiNT6Lpl
qF/gKw8ZgdUis49MYWdIsmzWdx46rDcqAwZMobGZdFzmXx4SlCR1nouZQc03
F15JriLQ2u7n7l/3mMEL6ysV6GwCIUczr9OHzKCl/DlHPSsC+T0s8jdNNoOi
I4985TcRqKx5/95j58yg4+czcm+dCGRYIJm08rEZlHGqrH8TQCA7P7fqDTQ6
/HcL+Xs4jUDj71DDS0M65KkpObLSCXRyO635IKDDM177g1KzCPTGev4ecqXD
l4KTXb/OEMhX8+w7h2Q6VLtZfSG8nECxXz4IRgzQoXfs5hSvhwTqVAy+JP6V
DlN715h4PSWQ1vYp6/oFOjR9ffWWUyeB3t9YlDQjZQ5/8CltlHpLIMtUmsDR
jebw+b9WKkLDBDrXXFus4GwOw10fuF8aI9CPcXML7GMOzw08djf9Sq3PmXN8
0WFzGLVHutpkhkAiKpF/uBXm8PBDB96FRSQKclko0L5hDrPV2AMflpAIpyWx
nraZwwd8rbOiy0gU+TX3iFifOYy4we9qJ0ai7ls3f+aKM6CWRv4NnbUkuuAm
OHsxhgEPAXH+Un0SLfAycm0SGbD76ctceSMSObfImHzOZMAb/n5v0kxIJKSu
dUDrCgNuyKrcas4gUfi3rdM1PQyY0FYtJGxNojb17lPbhhmQdd7nubwtiRQ8
fA2+f2dA/4e/zTQ2kagTRe03FWXC/WNRE+L2JDJJ/+frbciEF4iWR87bSZSJ
lTO9OUxYoL+Gt8SFRMPT5br8O5hQ//KHT1ddSXR2x+091lFM+Ee/JaTTg0Tf
021Fho4xIW3i0CknTxJtvfO8IpVkQu8HPdvbdpKIjzYw9ugSE9p2rihM9SbR
Ds8wIryOCQ+KXlZ/40Oi+ozvWqKICdmpR61k/Sg9fywJdepmwk98teBgAIkQ
7aTw9Ccm3Hx8sXx2IIlkd66+kj3FhPfMTmSUBJHo8V3t4a5lLHhGSnF9UTCJ
zP7mjhdJs6CKqNLPuBASlTIEpkNUWFC1MG3GPpREUrF75gx0WbBJT1hZMoxE
CQ3dvxfoLHjX0fXQM4onJ60Wtdmw4Nhl2t/4cBJ56VQvzXBiwbd/mHVqe0hE
L02WVAphwVchhucd9lLjD0zKjkSz4I3yi92vKJZS3KlQd5wFLWwi2Q77qPE9
76vGkSyoWBjR0ULxZJ7BOut/WDCRHp2hGkGN/6pAV6SEBdfcdI09SvETMWGj
N9UsqDX0I/0JxeacaPr5myyYUWD4nLqPoMvcPnbwfRZ8/e8Phh3FUu121vov
WZDVo/EqluIEgcbNPz+w4J22hrxzFE+ylR1aR1lQU/BUCnW/QF5xpDM5w4LT
cteKWil+cn3Ww0WADQ+VyQ5R9xNk/t3PW0GUDfv33nRFFJfpPQv4vJoN5RyK
vlVQvGoPPbRGnQ2HNz+7kfnffFdK9h3SZ8MXxxwrdv833+DKA5YsNtTRN3lk
9N98KnGHl29mQ5GWU5Kz/63Pa+jYK2c2ZJceTav6b31nnZILfNiQxZVY50lx
WdctXlA4G+pr7P/xi9JLWop2ckMsG772vD1+muJEx9M5c4lsGENTlFD6T0/y
T/6dTDbsvXLXr5jS3+thSBHvLBuayXf3yVD8RPD1pe2X2VC+7zQ3kcqfuSW8
uraeDb3CdH0+Ufkti79aM9jChn93fvI3p1j6pnRj1SM2VNo7k51M+WHKcBzD
ATa0i7Q9vkD5ySvCvV14gg3XRcsxNCh+UtH6+MU8GwrUx6jZUv4rU89/EyAO
IN1VOSmQ8qe3zMYvaRDAx2/zTqhQ/n6yvW7KyR5Ap9MjzTOU/81Pys/KuQMY
FPNRHVP7Q1r4O3/lPgC1PhWdMthFoqc/i2Q6CwHsH3B8neNGfW+6Qj6/HMCy
witXJKn9WBZ1UMW/EUBW+9P6FGcSJX3h6Px4CmC6xNsweycSMT78tFz9G8Cz
VSlHXO1IVBNqNfV1MYRycbrvXah6YBkkbLF9OYTcX4M5m6h6EbQrp3+1LITf
/hhLLrUkUdWWSsXL+hA6KkS7fzUjEdwYtW+ZGYT5S8hsLlWPXljS0R42hC0n
yvVkqHo1Q2/zMtoC4Qlhv/QVG0gEaO8L7gRAqBZ9f85bjfpe9eK4WhiEnbFz
zjnKJApQDGGl7YcwIe6kXIsCidKkf/RujYdw8qnY5xFZEnUsFlnbmwdhlCKn
vHwFiXw+MvNnHkG4vGde8sUUgb71Cox6dEJoQkReZU8QKKn7Af12F4TzO7e0
Fo5S9fu589vETxCij+cP0/8l0NTtcFnxPxBa3yg0efuSQAn553K19S1gscrp
8NY6Aknl+g1lmFpAkbeD3cFVBCrNopl8Y1nAnt3rBvip8+dRWsPrJjsL+O5R
yEvRYgJJHHwiZRtgAS93OIdkZxDo4vZfp3zyLGDuc3m6424C4e31OW4FFtAm
w6Aq1Y9AvdtD/9l60QISUl+jGnZR8zl3FzCrLSCMGZsb306gFOeGMtn7FnDl
5SqFj4BAwS7hLR0zFlCmajj7IXU+67r1jkBXS6jSTnysvcFDdm6nv5jutITL
5ap98+p5KMjN7quunyX0/XMzJrKSh867NX1fu9cSDgbohAgX85CYe/bfuWRL
GOaZUd+cykPT7varaq9ZwrPvyBU623moacctqLzKCp6vbpHyH+Aihxd7nX/K
WUHNsX0O6j1cNLRZOfilkhVs4Nzpev+Si6ToKZnJ663g3hzDXv02Lton4/hh
xMoKnrhTzh90mYs0Xv0bVxdpBZVUA435Q7kom7P8ulWHFbwawquRofqv/XCH
ThBhDfeb8ktGP0hFAavkRVuyrOGc+cvj4i2pyHW0b2LVP9bQYElDdAnVD5pn
B9a0lVhD/j0i/FcLU5HAcISheos17Lgvrsug+slTman0T5PWUFh5YTZMPhU1
fGiw8XO1gVh0Xkc/OAXNHlnp5aVsC4MvRt7a3Z+EVvQKbrE6txF6iT7b1VVy
Ak1kSR7pMdkMv/if+DPlHIeiNf6OzT60g8cWVUkFtkUi7nttWX5Lezg7cVAi
sSQA4fEvwj6b7OET+9TL3R4BaO535ULLVntoXlmno74yAAUr6PUd8bSHZbU+
py4e8ke23kalc9H2MKV5uS99qx8S+Mg0mrxsD0+GvYl/MuaNDn/iOPaJcGBh
aaii13FXVPdd1JItxYHElZQp2xEXNLK4w7BAjgN3cn8IaGxzQe7q22Q8NTnw
VMLHyfuqzsgkyPXDG8iB4137XC60O6Hpz17hz6I40EtVxb97lR3SmlP00jnM
gR+JsxK1Q5uQ39KPDuRxDjxf0lQRf30jekHzN7RL58DcmtpbP91tUE3I7p9t
pRyIz/uvTD4L0fAh2he1Sg6ULDKu1uxmUy3tyPvEeg5s4Eklmx5ioozysDsW
mAOVxhDd4KYpCh/bl3b7LRXfkH+Z39H1SJdPRaemjwPVBiROF6+koUmpV50X
Bqn1SanRuopVUd26lJicMQ58q/Qve1mwAopim61Jm+LAupoa3x3kKmS0fRQd
nuXAoPcfHK19hdH//wfB//8PQv8Dp7Z2uA==
           "]], 
          Line[CompressedData["
1:eJxFx2kogwEAxvHlPlaOTGLDi9xpHxS5UtuHpcVGLUIxNrPIFYahJcLKnTYf
fHCEkLzmmIRShhraKyHHFyU1UUtDcpX2PPXv6UeIq7IldjQaLe63vzd8nOYG
OWWm0/73tVlqTWDAqvuDdBYBdycMUg+JcAafo7hKg+nFr0wjF+7vzZOSAnj0
hnhXyuCpDjLQWwNLNaV7DuNw5KKvzDoJz583L18vwWQUhztjgHdPqPIUK3wT
8KqTirJs9p+dkCcXwKJ4QbCnGD7mz6v1lfBua7GY3glP3Bk9yBVYJ8xZbXMR
2NzEiPU8ksBy3mNZElto8yTdwCKe4JERprbiBe5i1vpsWGB5LMs96wNm8+ve
lM7ZNm+pg6gLAj5zU3QPiOD9IaP9dR687h/aHlEIj0Uf12+XwEUZYSXmatjc
c5rKU8O3XuH64T74RNsSfzcIk3PhMQ0aWHGo9JuahuVC0/DzLJx/GeGRvACn
PZocTSTMrolUsdbgkPfWT5ke9lFRjbot2NE1yvK9A/8A71Oh/g==
           "]]}, 
         "Charting`Private`Tag$6303#4"], {}}, {{}, {}, {}, {}, {}, {}}}, {}, \
{}}, {DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
      AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
      GridLines -> {None, None}, DisplayFunction -> Identity, 
      PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
      DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, 
      AxesLabel -> {"\[Theta] (\[Degree])", "Torque (N\[CenterDot]m)"}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, Epilog -> {{{
          
          Point[{(15 6^Rational[1, 2]) ((-1 + 3^Rational[1, 2])/
             Pi), ((Rational[-1, 6] (-1 + 3^Rational[1, 2])^(-2)) (
              Rational[-1, 2] 3^Rational[1, 2] + 
              Cos[6^Rational[-1, 2] (-1 + 3^Rational[1, 2])])) 
            Sin[(Rational[1, 2] 6^Rational[-1, 2]) (-1 + 3^Rational[1, 2])]}], 
          
          Point[{((-15) 6^Rational[1, 2]) ((-1 + 3^Rational[1, 2])/
             Pi), ((Rational[1, 6] (-1 + 3^Rational[1, 2])^(-2)) (
              Rational[-1, 2] 3^Rational[1, 2] + 
              Cos[6^Rational[-1, 2] (-1 + 3^Rational[1, 2])])) 
            Sin[(Rational[1, 2] 6^Rational[-1, 2]) (-1 + 
               3^Rational[1, 2])]}]}, {
          
          Point[{30 (3^Rational[1, 2]/Pi), (
             Rational[-1, 12] (Rational[-1, 2] + Cos[3^Rational[-1, 2]])) 
            Sin[Rational[1, 2] 3^Rational[-1, 2]]}], 
          
          Point[{(-30) (3^Rational[1, 2]/Pi), (
             Rational[1, 12] (Rational[-1, 2] + Cos[3^Rational[-1, 2]])) 
            Sin[Rational[1, 2] 3^Rational[-1, 2]]}]}, {
          
          Point[{30 (6^Rational[1, 2]/Pi), (Rational[-1, 24] 
             Cos[Rational[2, 3]^Rational[1, 2]]) Sin[6^Rational[-1, 2]]}], 
          
          Point[{(-30) (6^Rational[1, 2]/Pi), (Rational[1, 24] 
             Cos[Rational[2, 3]^Rational[1, 2]]) Sin[6^Rational[-1, 2]]}]}, {
          Point[{90/Pi, (Rational[-1, 36] (Rational[1, 2] + Cos[1])) Sin[
              Rational[1, 2]]}], 
          Point[{(-90)/Pi, (Rational[1, 36] (Rational[1, 2] + Cos[1])) Sin[
              Rational[1, 2]]}]}}}, Frame -> {{False, False}, {False, False}},
       FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{Automatic, Automatic}, {
        Automatic, Automatic}}, Prolog -> {
        Thickness[Tiny], 
        Line[{{(-60) (3^Rational[1, 2]/Pi), (
            Rational[1, 48] (1 + Cos[2 3^Rational[-1, 2]])) 
           Sin[3^Rational[-1, 2]]}, {
          60 (3^Rational[1, 2]/Pi), (
            Rational[-1, 48] (1 + Cos[2 3^Rational[-1, 2]])) 
           Sin[3^Rational[-1, 2]]}}]}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]]}, {
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 15], 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 30], 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 45], 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 60]}, 
       LegendMarkers -> None, LabelStyle -> {}, LegendLayout -> "Column"]], {
     Left, 0.2}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{3.7377903989028482`*^9, 3.737790430043973*^9, 
  3.737790516151019*^9},ExpressionUUID->"b2a2ef5b-3161-488d-a735-\
9711e2a251e4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"aDeg", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"15", ",", "30", ",", "45", ",", "60"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"as", " ", "=", 
   RowBox[{"aDeg", " ", 
    FractionBox["\[Pi]", "180"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"l", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Force", "[", 
        RowBox[{
         RowBox[{"\[Theta]", " ", 
          FractionBox["\[Pi]", "180"]}], ",", "a", " ", ",", "1"}], "]"}]}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "as"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", 
     RowBox[{"-", "90"}], ",", "90"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Ticks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "60"}], ",", 
        RowBox[{"-", "45"}], ",", 
        RowBox[{"-", "30"}], ",", 
        RowBox[{"-", "15"}], ",", "15", ",", "30", ",", "45", ",", "60"}], 
       "}"}], ",", "Automatic"}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "70"}], ",", "70"}], "}"}], ",", "Automatic"}], "}"}]}], 
   ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"StringForm", "[", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]\>\"", 
          ",", "a"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"a", ",", "aDeg"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"Left", ",", "Bottom"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Theta] (\[Degree])\>\"", ",", "\"\<Force (N)\>\""}], 
     "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<../pictures/pdf/AngleOfReposeForce.pdf\>\"", ",", "%"}], 
   "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.687561659787734*^9, 3.687561663305916*^9}, {
   3.687561818817523*^9, 3.687561820772396*^9}, 3.687561863441382*^9, {
   3.6875621531371107`*^9, 3.687562295568671*^9}, {3.6875627138293867`*^9, 
   3.6875627231159782`*^9}, {3.6876052206664753`*^9, 3.687605228277721*^9}, {
   3.687606066194991*^9, 3.687606096090818*^9}, {3.6876062853064613`*^9, 
   3.687606303493332*^9}, {3.687607641992549*^9, 3.687607690022036*^9}, {
   3.708348432242405*^9, 3.708348440242481*^9}, {3.7112696653880463`*^9, 
   3.711269667969633*^9}, {3.7112728467267513`*^9, 
   3.711272847045575*^9}},ExpressionUUID->"f8ce0087-4d2f-42b3-8df2-\
fff88d16e766"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxN2Hk0VnsXB3D0yEzmOZJ5joTQOco8JdNFqJAMXWSIUAoXDUSmBkVdhDyc
RyqV7BNlSITETUok8xxRkfd513rfc+7556zP+v2+a+29/9jrrLPNO8ThKBMD
A4MwIwPDf9/Hi/LmN+JdcIb/PY0Pn4ZHxZEWax38PhtNumVGYf3jCdLbdWvZ
6nxI97f+IxNtTtpiTtR5nvtf93fnP/5805nwGda3bnWlToTLWPfU9TY6Ep4y
TLkS/MWBcFcZE8o4f4BwikV1VTcn6WGp7O+3hOwJl7iUendZ2hFW7MrwGE62
Ifyt7iNl4qYVYS/OrB1/vrMg/L2RYjYtaE64b7qf9YimKWHXU6L2jkH7CMtE
1ZkanDUmrPNE18zQECHsZ9vMtl5rQNbTKKVcNqFLWJnB0tH+4E7C9VIG74fP
ahI+05bxEz9Bek/UqHiBN+lnHZleB01I150e//KWhXTEI5WP5yU1CC9x90mZ
bagTDvdL8GYaIh0m+H4spoh0aHjyYpAK6flXO3QUuUiHyHyMGplVww+rif7N
LqwNs6dSnxR2quF2c243NL2tILhLe92jWg0vn7XorMx2hhnFQUQ0Ww2fKDr6
PnHeE46fvZDwLlINp+5dO28l4wNBGkMsdvpquJO4UCAtMAgmky9ZsYur4Y/b
zD25zodA4CfdtKY1VXx46Jfv864T4J+Wzofgqnh9nWm9+2gk+E0ZSGqaq+LY
hMMertXT4H03V4vPWQW3UHTmjPmUDO5SNp69oUp4u8R8157FKyCwbhR93UkJ
D69fqvH3yoL2fo0sLz0l/KW0vJ7MqyxAc/lbRzcUcU3p1If7CrNBnuvDzpV0
RXzfoyvPjMxzYfFnAKcIVQE/n0q5vRJ/Dc73pjx1m5DD3XPONb27UQB7a071
SrbL4VdxLsHGHwWwlhm0MITJ4ZvH2WNuqRRCsO1+hcBoOVxFMZISlFoITi+E
smJY5PD3S2cu2SK3Qbq6OPCGnCwunrDyQv3OHahNaxT9eEQG/1jEcV3YsBiS
q29cRvfJ4G4MUc1Cx4rBqS+cuUhWBi8f0MrozCyGeWnZhcCxbXis61hD+Ggx
KNYktawe34YHjZZ6RF0qgav9plEC0dK4Vdc3yYC2u+C3ITkT5SaNb8S5R3Au
3oWdst+9P+yWxrl8jSsCREqh8IPNTZNfUviIfm/2Ad9S4GXitjm8WQrvyggU
710thUW7jLI8CUl8c1hWd6lAOaRfRXO8BiXwUO4Wq6+7ykF5eP6s3B0JPIAD
+93vWg7ekQdc7ytI4HKc44sLN8qh+wYfyxstcfxoz19M7VvvQfV4tu9mS1H8
kKIHVUO4AsITrklFRgripoje28BuKiT90/vU2lAQj/Nlu887SYVsdQFXmU2C
OPxZ8f0UYyXU9KdnvMkQwD0TVa6ka1TCklYSo3IFP86h3hHTnFoJEV+Cv3wa
5sX53wxah2tUQZJ+RfyDMl787BHGTrV9VZB9eUL8Uigvbi0s6F3mUgU1Br5O
+r+34KN/1Od/iauCpSy3l1miW3C+ep1xn6YqGE9Ntcss5MQvlHJ/b5bHgFVn
U8oedU7cqnMlp0IdA8Wh0zD1lAO/2lt/7cQuDPz1wzXN+thxhhKtl/mmGExM
ePL94mLDk3nio6K8MWDP/ceq9AYrrjk4w3goAAPlvY6JzkqsuFRiwZB8KAaB
1y2WqkxY8MJj/Nf/OI3BpJV2r28sM979be65YS49v0Ll5mNjxpMy5lvk8+n5
vxXNIZeCrxpniizcpud/SdaKVm/Cc/1WLspT6fl7rNc7xhnx1YD5fIEGet41
sTv2JCP+fLtTA0MzPU/5za5EYcRxs0q59jZ63uNbbKIUA97CnnJ78zsMekXr
noZWrIEzxc5u7SsGaiWXCy1e/4Jg2ufO3gkMkrR8/pKe/gmKv9GXV2Yw0LJm
39+p8gPmLQc3KpcwON/3UbvUehUsVgNMeFYx+OxDEzkbtAI7ig+u2P/CID3O
dVjj3jKUNXgWRzPS4CurajNL2xKUeC3f8qLQwDBn497g5Dfwt2eiyLPQYJJa
EnlZeRH+XO/ncuOkgfHuGPdjVgswftSf9oKbBlebbBEkcB6Gz8w+4+WlwcX6
Cd5PjjPQk13LYy9IA/2+jA9pWVOQ9nLV0ViYBmNzusVGbycglVt5g1+UBjms
g8EzfONQ1TOwpUWMBvu2JevddBgF947SVE8JGizoqzHZXhmBI5vU/HokaVDg
0NO21jUMu9t5ylSlaGAbFJtTwTsETH2/7f2kabDMYlpfe+cT3JSs8jy3jQb2
+lkHRGQ+QOvcQMdpGRpUBA6NRN3uA7lZ66KD22nAmq8R3SfdAyhH80cxWRr4
tp/m0C3shPKL0rFP6T67nmekhryCzZu14ozkaKB3eKfvtFEjbPIZ+FxI9+e/
bgv+caoWgj+ylH2luzC35mX5TBHsYirq4ZCnASXmWLy35yUkFLvrw093l1IN
k3o6DXEV5XVZo9/39o19UJUBiD3+9V4T3af2b6u52tqEjMRoHQ2ju2E6Ke39
q3akIZQjYYNeD7NphDaXXzdSI36JKZjuMn75QuroO+SOed/oM3o/tsN9nHbH
3iNn+IQ15uj9LmLnT82ODSBm03EfGOluA8lw852fkclc4+ll+rwk754sy1sa
QvbLFx9po88zJP3N4FjNF0SLYc4gYSsNnkcqCulFfkXEBv6MFaPPn9/znE2q
zhhi1xglnS1Og0cq2o8VH07S6yvLVxGhATv/pbnok9OI79DtCEshGnj8HJFr
3TWLjNCa7lsI0Ofpa91a82EeaTBNCZjioYHSP1EjA08XkDNG6kPpXDToti7a
oOQvItnrwg38HDSQ1V7XcfZYQupqxRqeM9OgvUTpwGnDZUQ1+NTwJBMNToq5
HC+W+I54HC4JXt7AoIWx6s7ywAoSNmzWXvkDg+Odh3lyPX8hFHnkcfUUBqEc
Bx0b7dcQ/1Xp6KwxDCLNnPPm960jRvEVxvZfMDhTZyllrbyBODnk/fDsx8DC
6Zrw2VhGtM+0S/pVEwavTuQ+FlpmRDHhN64Xn2NgcznrIDWYCe1fVi5RrMPg
wKu0gv4jm1B5eeGUFQwDdzRBQceCGQ0LqkofvYrBgGd8a9tzZrRoxuRW6hUM
vGLjgrwNNqPbXod3br6Egc/Dk1WX1VnQablff+edodevGqQ7KcCG1ghGGHHQ
91m8iJN5wRAnWuKyj81QBgOmXQcmdA5yoQP3THfeFqXvB0e7i697uNCm3+N/
D2/BIDXd4s2PZm406evEg6X1KrBMuKWi/McWdD2PffBndRU4rF65n2TEh8ac
VpYs46kC/pRMin0MH0qVWzz3+0cl9AhmOIs/4kPz+hRaOEcqwUU7bYWmyY9+
4CzhdXpUCQeDUwwGtwugzIOvrNLdK8F3JLZRn10IPa+qIf8oiwo0vxmf5b1C
aFlVLeIVS4Xf4/QtEyuENrc1NDd7U+HqjLGp4owQymKTaDCsSYX27yzNQp3C
6DVrFS+dVxWwiy371bccUZT5l6ac+8I9YFOv6KJuk0RbAs5FtfOWgwsmGRbg
LokyFnTseLNQBkVal/nksiTRTr4sveyuMtijG+aYT9mKjhgqW/tnlEEYqvfu
wthW1K3oz6P6HGUQrOQ9fd9FGmUMeV+cvHwX+gxm5zIkZFDuOk1x9pvFMPkA
PbrfQAYtasjW0w4rhjWNrH4udxn0lP0PRyHzYpCW1Xt5IU8GHdWOf8g+XwT+
nAnXk/i2oxLUTRepe4pgdUDQNJpVFo0HxtrRjjsgcsbo+qElOTTl+mgfe1QB
KK9e5tnKL48etxN5wLOlAAzDhpMGdsijgZ91v18svQWH/VJC3ELk0VzXAvGp
vptQatdl4jgpj97NMELMNfNBT+ronNlnBVRV9k5bZvNVcMUvmai/VkJzuisp
+zMzYSzch8NzUglN3pppVCmeCScVdndfZFVGm0xWytOKMyA7fezQhIky6hwj
a3sj5DJ0eeyNLXqmjMobq8Xfq7gIVj9WaGJVKijbSkiD+UoivK/oiLZsV0GV
7a6Jqa4lgP/hYiR6SgXdIdQrKMiQACnNDu3vFFTRjLE7XN8pZ+FFDnU8o1AV
5Sj/ErHCHA2OlklVUK+KulkebxBlOAnDa+4nZwdU0TfIrReWq+HA4MtKsRFV
Q1VV+A6UvwwBIy0fKZYraujz+92exQle8Pqr/qgOpoZOzY88k1VzAY9rW6i+
HWporU5/QH+BNUzZjIVnTauhDx5GO1EqdCCGoX53A7s6+v/vbbaabMYFRdJX
jwW1SJmTftgh4nI6kbRpwpxExW3SPTpNX/qB9Lf88BN6a6Q1gzoufYvQIAxb
ix1lskjbdceKHaCRPq6vVFo5Q7pnU8PQTm1NwrzdEutz90jXjftGbHpC2m+j
Ykqo5V/nqkb9RiP/Ok/xfHRRYgfhJ4a3Tiikkfa9KzXqFaxF9h8n86Zdcyfh
VpNDJjijHuF80zbsUaYBYYGT9baPeRDCv48sNY0dNybsIHfbO3LHPsKeURP7
uSRMCbccba1VGDUjzDw9rW9+14LwD4YKzhPpVoRtq5kOSjrbEHZdXPr51tiO
sNjRnPfNfPaE9aTivvktka4u1NzFMXGAsMc89jC03YHwHIdjoyvVkfCn2YZV
00InwusFv4OWEpwJc1N4r48nk5b2394ycIG0iaaF7MsrpC/gmQM5d0iLDMna
6jaQ3iljrR7D6ELYLNnTI5iZtOtkyAVvNtKx1dmjVrykG/Z+uiW+jbS9zwme
Zyhp7+ZEI5oJ6QiV3KBiC9J53540p9mT/pRIOet1mPT8mFClgy9pJhulATN/
0nICdnoaoaR3RR/22x5B2mIgLFs4mrQ7+lcDRxzp//1fIfwfq/EoJg==
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
3ahVkNsC7ymCbLpDnZT+bvScN8trNWcRDB3hlWlGu9Gr9iV1m+eFcPJ+4KCk
1W6kyJIvWb+zEFLVTd0a/XYjvwP7z1G1HsAb/TmXDYW7kfuaNepd4gXgaEnb
XytHRensWfeqRvIg13+pwleNimr7d0xvvpkH44nFoiLbqKhH96jpBZc8COkU
6/GhUdH1gx2Z+l23Icvxs4OQBxWxyZ/Lc264Bb3uGXZHblJR6tMTx+/k54JL
8MTe1RtpKNyO/VcKkQkiC7FPdTbT0C8jiSFDq0x4FaSx2VWJhvQWvzwefJUB
1KDg7//q0VDf4tKd9R3poBTIcd3KnoYcHc/KoNep8OPEpsmUeBraO5PrfaM7
EUq/PretTqOh0LkG4YV9ieB7wrtm5BoNHZLc45z2MAEGjhcn6jygoW3kmdRa
EgcvAgx1uxtoyED2Ec/wo0uQ7Lc/WpyVjixjRiOnyqPA/POvaSMuOtIx9FLU
fRIJf/nl7vPlp6Np3jumP/0iIPTvMaVqCTpC9lj1t38YuB0LbHfZTkcR6hKV
j4+fBPEpUYMLu+honsNuu8iJ49DpW533rwkdNbRmPxsZ8QO676qQPw505B6k
okoZ9QKWT3cH5V3p6ObRAavhUXeo9DE1s/Kko1yOoBAOwgVUfZIkb56kI5eO
27nvbpnB6IT2xabTdCQvWb4z0FQXco/2zM5G0dH/P78fmAhzEr/EtNBRqRdG
iUwzxuvUfDOYjvH2ykzJYXrpSJHvSCHTZWNWb/jKmPY7Mr9Tp4rpQS8DgQtN
TDd6NlXIj/7P+FzbNpXp/8kf1VGmMc+0Sk7fQ3024xUndk3nm0kyvc9YIMvf
gelRBafQJy+Z5pia0je+Z7LiRZZCvuPxpiu2KGVzkrA3X7Hj1/mlzl2WKxb3
THvbIGC1Yj2p8DmveaZLczW28U5Yr9h55mF5QJvNir/w2tY7FtmueOBz3Q9a
rt2Kl2/89p0/a7/iNezrsscvMC3tvbmx/zLTVA2TLS+Smb6Mk/rTbjEtOrjF
QreOaW0ZM7XTrA4rpl9wcfbjYNpx0v+yOzfTYaWpo6brmK4zGsjZsIlpq8PH
+WsQ0+4N5wxLqEyfUk73vWPCdMZcZUOcFdMD59gjXd2YnhkT+dfGg2k2c8V+
ujfTskKWeuoBTG8LcfPafIppk/4TqetDmD6AztfxhjP93/eLK/4PW+1N4w==

       "]]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
aR2DbWd0ul4wmu3/fj9c9n8ALd978w==
       "]]}}, InsetBox[
     TemplateBox[{
      InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(TraditionalForm\\`15\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 15], 
        Editable -> False],InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(TraditionalForm\\`30\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 30], 
        Editable -> False],InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(TraditionalForm\\`45\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 45], 
        Editable -> False],InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \
\\(rep\\)]\\)=\\!\\(TraditionalForm\\`60\\)\[Degree]\"", 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 60], 
        Editable -> False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.01, 0.01}], ImageScaled[{0, 0}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"\[Theta] (\[Degree])\"", TraditionalForm], 
     FormBox["\"Force (N)\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
   PlotRange->{{-70, 70}, {-0.4330126681562524, 0.}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{{{-60, 
       FormBox[
        RowBox[{"-", "60"}], TraditionalForm]}, {-45, 
       FormBox[
        RowBox[{"-", "45"}], TraditionalForm]}, {-30, 
       FormBox[
        RowBox[{"-", "30"}], TraditionalForm]}, {-15, 
       FormBox[
        RowBox[{"-", "15"}], TraditionalForm]}, {15, 
       FormBox["15", TraditionalForm]}, {30, 
       FormBox["30", TraditionalForm]}, {45, 
       FormBox["45", TraditionalForm]}, {60, 
       FormBox["60", TraditionalForm]}}, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
3ahVkNsC7ymCbLpDnZT+bvScN8trNWcRDB3hlWlGu9Gr9iV1m+eFcPJ+4KCk
1W6kyJIvWb+zEFLVTd0a/XYjvwP7z1G1HsAb/TmXDYW7kfuaNepd4gXgaEnb
XytHRensWfeqRvIg13+pwleNimr7d0xvvpkH44nFoiLbqKhH96jpBZc8COkU
6/GhUdH1gx2Z+l23Icvxs4OQBxWxyZ/Lc264Bb3uGXZHblJR6tMTx+/k54JL
8MTe1RtpKNyO/VcKkQkiC7FPdTbT0C8jiSFDq0x4FaSx2VWJhvQWvzwefJUB
1KDg7//q0VDf4tKd9R3poBTIcd3KnoYcHc/KoNep8OPEpsmUeBraO5PrfaM7
EUq/PretTqOh0LkG4YV9ieB7wrtm5BoNHZLc45z2MAEGjhcn6jygoW3kmdRa
EgcvAgx1uxtoyED2Ec/wo0uQ7Lc/WpyVjixjRiOnyqPA/POvaSMuOtIx9FLU
fRIJf/nl7vPlp6Np3jumP/0iIPTvMaVqCTpC9lj1t38YuB0LbHfZTkcR6hKV
j4+fBPEpUYMLu+honsNuu8iJ49DpW533rwkdNbRmPxsZ8QO676qQPw505B6k
okoZ9QKWT3cH5V3p6ObRAavhUXeo9DE1s/Kko1yOoBAOwgVUfZIkb56kI5eO
27nvbpnB6IT2xabTdCQvWb4z0FQXco/2zM5G0dH/P78fmAhzEr/EtNBRqRdG
iUwzxuvUfDOYjvH2ykzJYXrpSJHvSCHTZWNWb/jKmPY7Mr9Tp4rpQS8DgQtN
TDd6NlXIj/7P+FzbNpXp/8kf1VGmMc+0Sk7fQ3024xUndk3nm0kyvc9YIMvf
gelRBafQJy+Z5pia0je+Z7LiRZZCvuPxpiu2KGVzkrA3X7Hj1/mlzl2WKxb3
THvbIGC1Yj2p8DmveaZLczW28U5Yr9h55mF5QJvNir/w2tY7FtmueOBz3Q9a
rt2Kl2/89p0/a7/iNezrsscvMC3tvbmx/zLTVA2TLS+Smb6Mk/rTbjEtOrjF
QreOaW0ZM7XTrA4rpl9wcfbjYNpx0v+yOzfTYaWpo6brmK4zGsjZsIlpq8PH
+WsQ0+4N5wxLqEyfUk73vWPCdMZcZUOcFdMD59gjXd2YnhkT+dfGg2k2c8V+
ujfTskKWeuoBTG8LcfPafIppk/4TqetDmD6AztfxhjP93/eLK/4PW+1N4w==

         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
aR2DbWd0ul4wmu3/fj9c9n8ALd978w==
         "]]}}}, {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, 
      AxesLabel -> {"\[Theta] (\[Degree])", "Force (N)"}, 
      AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
      Frame -> {{False, False}, {False, False}}, 
      FrameLabel -> {{None, None}, {None, None}}, 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
      PlotRange -> {{-70, 70}, {-0.4330126681562524, 0.}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{0, 0}, {
         Scaled[0.05], 
         Scaled[0.05]}}, 
      Ticks -> {{-60, -45, -30, -15, 15, 30, 45, 60}, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]]}, {
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 15], 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 30], 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 45], 
        StringForm[
        "\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\)=``\[Degree]", 60]}, 
       LabelStyle -> {}, LegendLayout -> "Column"]], {Left, Bottom}, 
     Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.6875617889436398`*^9, 3.687562308067196*^9, 3.687562733128643*^9, 
   3.687605236712493*^9, 3.687606104201973*^9, 3.68760630516457*^9, {
   3.687607653339971*^9, 3.687607701464322*^9}, 3.7083487497984324`*^9, 
   3.711270090203685*^9, 
   3.7112728561221743`*^9},ExpressionUUID->"9fd3c8ad-8be6-4f71-8ebb-\
7ec1416098d7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Cos", "[", "\[Theta]", "]"}], "<", 
     RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], ",", "0", ",", " ", 
    RowBox[{
     RowBox[{
      SubsuperscriptBox["\[Integral]", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "l"}], "/", "2"}], 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
       FractionBox[
        RowBox[{"l", " ", 
         RowBox[{"Cot", "[", "\[Alpha]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "2"]], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Tan", "[", "\[Alpha]", "]"}], "x"}], "+", 
         RowBox[{
          RowBox[{"l", "/", "2"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "-", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ")"}]}], "  ", "-", 
         RowBox[{
          RowBox[{"Tan", "[", "\[Theta]", "]"}], "x"}]}], ")"}], 
       RowBox[{"\[DifferentialD]", "x"}]}]}], "+", "\[IndentingNewLine]", " ", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", 
       FractionBox[
        RowBox[{"l", " ", 
         RowBox[{"Cot", "[", "\[Alpha]", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "2"], 
       RowBox[{
        RowBox[{"l", "/", "2"}], 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}]], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "x"}], "+", 
         RowBox[{
          RowBox[{"l", "/", "2"}], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], 
             RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "+", 
            RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ")"}]}], "-", 
         RowBox[{
          RowBox[{"Tan", "[", "\[Theta]", "]"}], "x"}]}], ")"}], 
       RowBox[{"\[DifferentialD]", "x"}]}]}]}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.687562310834149*^9, 
  3.6875623140180798`*^9}},ExpressionUUID->"d9744b2e-7542-411e-8331-\
d7ddd1a74ad7"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Cos", "[", "\[Theta]", "]"}], "<", 
    RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], ",", "0", ",", 
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{"-", "l"}], ")"}], " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", "l", " ", 
       RowBox[{"Cot", "[", "\[Alpha]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}]], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Tan", "[", "\[Alpha]", "]"}], " ", "x"}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", "l", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "-", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"Tan", "[", "\[Theta]", "]"}], " ", "x"}]}], ")"}], 
      RowBox[{"\[DifferentialD]", "x"}]}]}], "+", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{
       FractionBox["1", "2"], " ", "l", " ", 
       RowBox[{"Cot", "[", "\[Alpha]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
      RowBox[{
       FractionBox["1", "2"], " ", "l", " ", 
       RowBox[{"Cos", "[", "\[Theta]", "]"}]}]], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], " ", "x"}], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", "l", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "+", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ")"}]}], "-", 
        RowBox[{
         RowBox[{"Tan", "[", "\[Theta]", "]"}], " ", "x"}]}], ")"}], 
      RowBox[{"\[DifferentialD]", "x"}]}]}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.687562314694036*^9, 
  3.737790589493696*^9},ExpressionUUID->"c03d25b6-9e1d-4018-b0be-\
c278c92617de"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"heightTop", "[", 
      RowBox[{"x_", ",", "\[Alpha]_", ",", "l_", ",", "\[Theta]_"}], "]"}], 
     " ", ":=", " ", 
     RowBox[{"Min", "[", "  ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Tan", "[", "\[Alpha]", "]"}], "x"}], "+", 
        RowBox[{
         RowBox[{"l", "/", "2"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], 
            RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "-", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ")"}]}]}], ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "x"}], "+", 
        RowBox[{
         RowBox[{"l", "/", "2"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"Cos", "[", "\[Theta]", "]"}], 
            RowBox[{"Tan", "[", "\[Alpha]", "]"}]}], "+", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ")"}]}]}]}], "]"}]}], 
    ";"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DrawGranular", "[", 
     RowBox[{"\[Theta]_", ",", "\[Alpha]_", ",", "s_", ",", "colr_"}], "]"}], 
    ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "p", ",", "h", ",", "d", ",", "lside", ",", "com"}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"l", " ", "=", " ", "20"}], ";", " ", 
       RowBox[{"(*", "length", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"a", "=", " ", 
        RowBox[{
         RowBox[{"l", "/", "2"}], "*", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"p", " ", "=", "  ", 
        RowBox[{
         RowBox[{"l", "/", "10"}], "*", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
           RowBox[{"-", 
            RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "}"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"h", " ", "=", " ", 
        RowBox[{"l", "/", "2"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"d", " ", "=", " ", 
        RowBox[{"l", "/", "2"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"Pink", ",", 
         RowBox[{"Polygon", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"s", "+", "a"}], ",", 
            RowBox[{"s", "+", "a", "+", "p"}], ",", 
            RowBox[{"s", "+", 
             RowBox[{"-", "a"}], "+", "p"}], ",", 
            RowBox[{"s", "-", "a"}]}], "}"}], "]"}], ",", 
         RowBox[{"EdgeForm", "[", 
          RowBox[{"{", "colr", "}"}], "]"}], ",", "colr", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"granular", " ", "media"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"\[Alpha]", ">", 
            RowBox[{"Abs", "[", "\[Theta]", "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"lside", "=", 
               FractionBox[
                RowBox[{"l", " ", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"\[Theta]", "+", "\[Alpha]"}], "]"}]}], 
                RowBox[{"Sin", "[", 
                 RowBox[{"\[Pi]", "-", 
                  RowBox[{"2", "\[Alpha]"}]}], "]"}]]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"com", " ", "=", 
               RowBox[{
                RowBox[{"1", "/", "3"}], " ", 
                RowBox[{"(", 
                 RowBox[{"s", "+", "a", "+", "s", "+", 
                  RowBox[{"lside", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Alpha]", "]"}], ",", 
                    RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "}"}]}], "-", 
                  "a", "+", "s", "-", "a"}], ")"}]}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"Polygon", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"s", "+", "a"}], ",", 
                 RowBox[{"s", "+", 
                  RowBox[{"lside", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Cos", "[", "\[Alpha]", "]"}], ",", 
                    RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "}"}]}], "-", 
                  "a"}], ",", 
                 RowBox[{"s", "-", "a"}]}], "}"}], "]"}]}], ",", 
             "\[IndentingNewLine]", "Black", ",", 
             RowBox[{"Thickness", "[", "0.002", "]"}], ",", " ", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{"s", ",", 
                RowBox[{"s", "+", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", 
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Abs", "[", "\[Theta]", "]"}], ">", "\[Alpha]"}], 
                    ",", "0", ",", 
                    RowBox[{"heightTop", "[", 
                    RowBox[{"0", ",", "\[Alpha]", ",", "l", ",", "\[Theta]"}],
                     "]"}]}], "]"}]}], " ", "}"}]}]}], "}"}], "]"}], "  ", 
             RowBox[{"(*", 
              RowBox[{
              "draw", " ", "line", " ", "up", " ", "the", " ", "middle"}], 
              "*)"}], ",", "\[IndentingNewLine]", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"draw", " ", "the", " ", "center"}], "-", "of", "-", 
                RowBox[{"mass", " ", 
                 RowBox[{"(", "COM", " "}]}]}], "*)"}], "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Thickness", "[", "0.0015", "]"}], ",", "Red", ",", 
               " ", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{"Line", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"s", "+", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "com", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", "0"}], "}"}]}], ",", 
                    RowBox[{"s", "+", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "com", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"heightTop", "[", 
                    RowBox[{
                    RowBox[{
                    "com", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", "\[Alpha]", ",", "l", ",",
                     "\[Theta]"}], "]"}]}], "}"}]}]}], "}"}], "]"}], ","}], 
                "*)"}], "\[IndentingNewLine]", 
               RowBox[{"Line", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    "com", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "s", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    "com", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    RowBox[{
                    "s", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], " ", "+", " ", 
                    RowBox[{"3", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "com", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    "s", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], ")"}]}]}]}], "}"}]}], "}"}], 
                "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"EdgeForm", "[", 
                RowBox[{"Directive", "[", 
                 RowBox[{"Black", ",", "Thin"}], "]"}], "]"}], ",", "Black", 
               ",", 
               RowBox[{"Disk", "[", 
                RowBox[{"com", ",", "1"}], "]"}], ",", " ", "White", ",", 
               RowBox[{"Disk", "[", 
                RowBox[{"com", ",", "1", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"45", " ", "Degree"}], ",", 
                   RowBox[{"135", " ", "Degree"}]}], "}"}]}], "]"}], ",", 
               RowBox[{"Disk", "[", 
                RowBox[{"com", ",", "1", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "45"}], " ", "Degree"}], ",", 
                   RowBox[{
                    RowBox[{"-", "135"}], " ", "Degree"}]}], "}"}]}], "]"}]}],
               "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
           RowBox[{"Line", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"s", "+", "a"}], ",", 
              RowBox[{"s", "-", "a"}]}], "}"}], "]"}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"Black", ",", 
           RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
           RowBox[{"Disk", "[", 
            RowBox[{"s", ",", 
             RowBox[{"1", "/", "3"}]}], "]"}]}], "}"}]}], 
        "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"aDeg", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"15", ",", "30", ",", "45", ",", "60"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"as", " ", "=", 
     RowBox[{"aDeg", " ", 
      FractionBox["\[Pi]", "180"]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"l", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetDirectory", "[", 
     RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"-", "50"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", 
       RowBox[{"-", "90"}], ",", "90"}], "}"}], ",", 
     RowBox[{"Ticks", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "60"}], ",", 
          RowBox[{"-", "45"}], ",", 
          RowBox[{"-", "30"}], ",", 
          RowBox[{"-", "15"}], ",", "15", ",", "30", ",", "45", ",", "60"}], 
         "}"}], ",", "aDeg"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "70"}], ",", "70"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "10"}], ",", "80"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Theta] (\[Degree])\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(\[Alpha]\), \(rep\)]\) (\[Degree])\>\""}], 
       "}"}]}], ",", 
     RowBox[{"Prolog", "\[Rule]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"DrawGranular", "[", 
          RowBox[{
           RowBox[{"theta", " ", 
            FractionBox["\[Pi]", "180"]}], ",", 
           RowBox[{
            RowBox[{
            "aDeg", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
            " ", 
            FractionBox["\[Pi]", "180"]}], ",", 
           RowBox[{"{", 
            RowBox[{"theta", ",", 
             RowBox[{
             "aDeg", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}],
             "}"}], ",", 
           RowBox[{
            RowBox[{"ColorData", "[", 
             RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], 
            "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], "]"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "aDeg", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"theta", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "45"}], ",", 
             RowBox[{"-", "22.5"}], ",", "0", ",", "22.5", ",", "45"}], 
            "}"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Epilog", "\[Rule]", "\[IndentingNewLine]", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"a", ",", "c", ",", 
          RowBox[{"\[Alpha]", "=", 
           RowBox[{"\[Pi]", "/", "3"}]}], ",", "\[Theta]", ",", 
          RowBox[{"l", " ", "=", " ", "20"}], ",", "b"}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Theta]", "=", 
            RowBox[{"\[Pi]", "/", "8"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"c", " ", "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\[Theta]", "*", 
               FractionBox["180", "\[Pi]"]}], ",", 
              RowBox[{"\[Alpha]", 
               FractionBox["180", "\[Pi]"]}]}], "}"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"a", "=", " ", 
            RowBox[{
             RowBox[{"l", "/", "2"}], "*", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"b", "=", " ", 
            RowBox[{
             RowBox[{"l", "/", "4"}], "*", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
           "Black"}], ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"c", "-", "a", "+", "b"}], ",", 
             RowBox[{"c", "-", "a"}], ",", 
             RowBox[{"c", "-", "a", "+", " ", 
              RowBox[{
               RowBox[{"l", "/", "4"}], "*", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Alpha]", "]"}], ",", 
                 RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "}"}]}]}]}], "}"}], 
           "]"}], ",", "\[IndentingNewLine]", "Black", ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"c", "+", "a", "-", "b"}], ",", 
             RowBox[{"c", "+", "a"}], ",", 
             RowBox[{"c", "+", "a", "+", " ", 
              RowBox[{
               RowBox[{"l", "/", "4"}], "*", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{"Cos", "[", "\[Alpha]", "]"}]}], ",", 
                 RowBox[{"Sin", "[", "\[Alpha]", "]"}]}], "}"}]}]}]}], "}"}], 
           "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Circle", "[", 
           RowBox[{
            RowBox[{"c", "-", "a"}], ",", 
            RowBox[{"l", "/", "6"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "\[Alpha]"}], "}"}]}], "]"}], ",", "  ", 
          RowBox[{"(*", 
           RowBox[{
           "draw", " ", "a", " ", "few", " ", "alpha", " ", "angles"}], 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"Circle", "[", 
           RowBox[{
            RowBox[{"c", "+", "a"}], ",", 
            RowBox[{"l", "/", "6"}], ",", 
            RowBox[{"{", 
             RowBox[{"\[Pi]", ",", 
              RowBox[{"\[Pi]", "-", "\[Alpha]"}]}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Text", "[", 
           RowBox[{"\"\<\[Alpha]\>\"", ",", 
            RowBox[{"c", "-", 
             RowBox[{"{", 
              RowBox[{"3.6", ",", "1.4"}], "}"}]}]}], "]"}], ",", 
          RowBox[{"Text", "[", 
           RowBox[{"\"\<\[Alpha]\>\"", ",", 
            RowBox[{"c", "+", 
             RowBox[{"{", 
              RowBox[{"3.5", ",", "6"}], "}"}]}]}], "]"}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"\[Theta]", "=", 
            RowBox[{"\[Pi]", "/", "4"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"c", " ", "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\[Theta]", "*", 
               FractionBox["180", "\[Pi]"]}], ",", 
              RowBox[{"\[Alpha]", 
               FractionBox["180", "\[Pi]"]}]}], "}"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"a", "=", " ", 
            RowBox[{
             RowBox[{"l", "/", "2"}], "*", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
               RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"b", "=", " ", 
            RowBox[{
             RowBox[{"l", "/", "4"}], "*", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
           "Black"}], ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"c", "+", "b"}], ",", "c", ",", 
             RowBox[{"c", "+", " ", 
              RowBox[{
               RowBox[{"l", "/", "4"}], "*", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}]}]}]}], "}"}], 
           "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Circle", "[", 
           RowBox[{"c", ",", 
            RowBox[{"l", "/", "6"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "\[Theta]"}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Text", "[", 
           RowBox[{"\"\<\[Theta]\>\"", ",", 
            RowBox[{"c", "+", 
             RowBox[{"{", 
              RowBox[{"6", ",", "2"}], "}"}]}]}], "]"}]}], 
         "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}]}], 
       "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{"\"\<../pictures/pdf/AngleOfRepose.pdf\>\"", ",", "%"}], "]"}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{
  3.687559813922858*^9, {3.6875598458335657`*^9, 3.68755986165352*^9}, {
   3.6875599898784924`*^9, 3.687559991319036*^9}, {3.687560025601347*^9, 
   3.68756007779023*^9}, {3.687560109254374*^9, 3.6875601171027327`*^9}, {
   3.687560479467846*^9, 3.6875605654545794`*^9}, {3.687560838776292*^9, 
   3.687560847684104*^9}, {3.687560901407469*^9, 3.687560902254848*^9}, {
   3.687561542970385*^9, 3.687561553559671*^9}, {3.687561599783189*^9, 
   3.6875616201068373`*^9}, {3.687562738376577*^9, 3.687562745841164*^9}, {
   3.687605244470797*^9, 3.687605248857699*^9}, {3.687605834334362*^9, 
   3.6876060532173433`*^9}, {3.687606106578257*^9, 3.687606157246667*^9}, {
   3.6876062112888193`*^9, 3.68760625966453*^9}, {3.687606347006308*^9, 
   3.687606355625946*^9}, {3.687606675130939*^9, 3.687606759438073*^9}, {
   3.6876068641308413`*^9, 3.6876068667850447`*^9}, {3.687606896839459*^9, 
   3.687606962582535*^9}, {3.687607013778679*^9, 3.687607030577381*^9}, {
   3.6876071666731567`*^9, 3.687607186291253*^9}, {3.687607285983603*^9, 
   3.6876072881055098`*^9}, {3.687607335330193*^9, 3.687607348370677*^9}, {
   3.687608309107409*^9, 3.687608314048029*^9}, {3.687608527919517*^9, 
   3.6876085391967773`*^9}, {3.7083484441633043`*^9, 3.708348454475121*^9}, {
   3.711228786729246*^9, 3.711228842615202*^9}, {3.7112288786256523`*^9, 
   3.711228897633531*^9}, {3.711228942086515*^9, 3.711229011999175*^9}, {
   3.7112290866069307`*^9, 3.711229106819879*^9}, {3.71127011786569*^9, 
   3.7112701793143053`*^9}, {3.7112702167320642`*^9, 
   3.7112702301951933`*^9}, {3.711270260989423*^9, 3.7112704421519613`*^9}, {
   3.711270491609223*^9, 3.711270592033512*^9}, {3.711270633635048*^9, 
   3.7112711012835827`*^9}, {3.711272836702331*^9, 3.711272837606573*^9}, {
   3.7112730774308023`*^9, 3.711273078293826*^9}, {3.711298532395337*^9, 
   3.7112985329070997`*^9}, {3.737790573174683*^9, 3.737790576116074*^9}, {
   3.7377906253203*^9, 3.737790647285966*^9}, {3.737790682201747*^9, 
   3.737790769490415*^9}, {3.737790836753832*^9, 3.737790869019266*^9}, {
   3.737790924778406*^9, 3.7377910741290913`*^9}, {3.737791115285082*^9, 
   3.737791186427857*^9}, {3.737791223368141*^9, 3.737791229428535*^9}, {
   3.737791296285159*^9, 3.7377913804890947`*^9}, {3.737791419126979*^9, 
   3.737791426330103*^9}, {3.7377914820387383`*^9, 3.737791489451543*^9}, {
   3.737791617164002*^9, 3.737791716045895*^9}, {3.737791757673148*^9, 
   3.73779176058875*^9}, {3.73779179345967*^9, 3.737791858253134*^9}, {
   3.737791932425003*^9, 3.7377920027896433`*^9}, {3.737792049268188*^9, 
   3.737792119954608*^9}, {3.7377921806176233`*^9, 3.737792181199522*^9}, {
   3.737792224350836*^9, 3.737792235173802*^9}, {3.737792386475005*^9, 
   3.737792394194154*^9}, {3.7377925594207487`*^9, 3.737792633052071*^9}, {
   3.737792683193573*^9, 3.73779269012036*^9}, {3.7377927360974083`*^9, 
   3.7377927710326443`*^9}, {3.737792831925131*^9, 3.7377929265046453`*^9}, {
   3.737792992615171*^9, 
   3.737793003813959*^9}},ExpressionUUID->"ecb009d6-bcb5-4e2f-85fd-\
5b7a46465110"],

Cell[BoxData[
 GraphicsBox[{
   GraphicsComplexBox[{{-89.9999963265306, -10.}, {
    89.9999963265306, -10.}}, {}], {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"\[Theta] (\[Degree])\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SubscriptBox[\\(\[Alpha]\\), \\(rep\\)]\\) (\[Degree])\"", 
     TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    GrayLevel[0], 
    LineBox[
     NCache[{{
       Rational[55, 2] - 10 Cos[Rational[1, 8] Pi], 60 - 10 
        Sin[Rational[1, 8] Pi]}, {
       Rational[45, 2] - 10 Cos[Rational[1, 8] Pi], 60 - 10 
        Sin[Rational[1, 8] Pi]}, {
       25 - 10 Cos[Rational[1, 8] Pi], 60 + Rational[5, 2] 3^Rational[1, 2] - 
        10 Sin[Rational[1, 8] Pi]}}, {{18.261204674887132`, 
      56.1731656763491}, {13.261204674887132`, 56.1731656763491}, {
      15.761204674887132`, 60.5032926952713}}]], 
    GrayLevel[0], 
    LineBox[
     NCache[{{
       Rational[35, 2] + 10 Cos[Rational[1, 8] Pi], 60 + 
        10 Sin[Rational[1, 8] Pi]}, {
       Rational[45, 2] + 10 Cos[Rational[1, 8] Pi], 60 + 
        10 Sin[Rational[1, 8] Pi]}, {
       20 + 10 Cos[Rational[1, 8] Pi], 60 + Rational[5, 2] 3^Rational[1, 2] + 
        10 Sin[Rational[1, 8] Pi]}}, {{26.738795325112868`, 
      63.8268343236509}, {31.738795325112868`, 63.8268343236509}, {
      29.238795325112868`, 68.1569613425731}}]], 
    CircleBox[
     NCache[{
      Rational[45, 2] - 10 Cos[Rational[1, 8] Pi], 60 - 10 
       Sin[Rational[1, 8] Pi]}, {13.261204674887132`, 56.1731656763491}], 
     NCache[
      Rational[10, 3], 3.3333333333333335`], 
     NCache[{0, Rational[1, 3] Pi}, {0, 1.0471975511965976`}]], 
    CircleBox[
     NCache[{
      Rational[45, 2] + 10 Cos[Rational[1, 8] Pi], 60 + 
       10 Sin[Rational[1, 8] Pi]}, {31.738795325112868`, 63.8268343236509}], 
     NCache[
      Rational[10, 3], 3.3333333333333335`], 
     NCache[{Pi, Rational[2, 3] Pi}, {3.141592653589793, 
      2.0943951023931953`}]], 
    InsetBox[
     FormBox["\"\[Alpha]\"", TraditionalForm], {18.9, 58.6}], 
    InsetBox[
     FormBox["\"\[Alpha]\"", TraditionalForm], {26., 66}], 
    GrayLevel[0], 
    LineBox[
     NCache[{{50, 60}, {45, 60}, {
       45 + 5 2^Rational[-1, 2], 60 + 5 2^Rational[-1, 2]}}, {{50, 60}, {45, 
       60}, {48.53553390593274, 63.53553390593274}}]], 
    CircleBox[{45, 60}, 
     NCache[
      Rational[10, 3], 3.3333333333333335`], 
     NCache[{0, Rational[1, 4] Pi}, {0, 0.7853981633974483}]], 
    InsetBox[
     FormBox["\"\[Theta]\"", TraditionalForm], {51, 62}]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{969.78515625, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-70, 70}, {-10, 80}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Prolog->{{{{
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[
        NCache[{{-45 + 5 2^Rational[1, 2], 15 - 5 2^Rational[1, 2]}, {-45 + 
           4 2^Rational[1, 2], 15 - 6 2^Rational[1, 2]}, {-45 - 6 
           2^Rational[1, 2], 15 + 4 2^Rational[1, 2]}, {-45 - 5 
           2^Rational[1, 2], 15 + 
           5 2^Rational[1, 2]}}, {{-37.928932188134524`, 
         7.9289321881345245`}, {-39.34314575050762, 
         6.514718625761429}, {-53.48528137423857, 
         20.65685424949238}, {-52.071067811865476`, 22.071067811865476`}}]], 
       EdgeForm[{
         RGBColor[0.368417, 0.506779, 0.709798]}], 
       RGBColor[0.368417, 0.506779, 0.709798], 
       LineBox[
        NCache[{{-45 + 5 2^Rational[1, 2], 15 - 5 2^Rational[1, 2]}, {-45 - 5 
           2^Rational[1, 2], 15 + 
           5 2^Rational[1, 2]}}, {{-37.928932188134524`, 
         7.9289321881345245`}, {-52.071067811865476`, 
         22.071067811865476`}}]], {
        GrayLevel[0], 
        EdgeForm[None], 
        DiskBox[{-45, 15}, 
         NCache[
          Rational[1, 3], 0.3333333333333333]]}}, {
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[{{-13.261204674887132`, 
        11.173165676349102`}, {-14.026571539617311`, 
        9.325406611326528}, {-32.50416218984305, 
        16.979075258628328`}, {-31.738795325112868`, 18.8268343236509}}], 
       EdgeForm[{
         RGBColor[0.368417, 0.506779, 0.709798]}], 
       RGBColor[0.368417, 0.506779, 0.709798], 
       LineBox[{{-13.261204674887132`, 
        11.173165676349102`}, {-31.738795325112868`, 18.8268343236509}}], {
        GrayLevel[0], 
        EdgeForm[None], 
        DiskBox[{-22.5, 15}, 
         NCache[
          Rational[1, 3], 0.3333333333333333]]}}, {
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[{{10, 15}, {10, 13}, {-10, 13}, {-10, 15}}], 
       EdgeForm[{
         RGBColor[0.368417, 0.506779, 0.709798]}], 
       RGBColor[0.368417, 0.506779, 0.709798], {
        PolygonBox[
         NCache[{{10, 
           15}, {-10 + 5 (-1 + 3^Rational[1, 2]) (1 + 3^Rational[1, 2]), 15 + 
            5 (-1 + 3^Rational[1, 2])^2}, {-10, 15}}, {{10, 
           15}, {-1.7763568394002505`*^-15, 17.679491924311225`}, {-10, 
           15}}]], 
        GrayLevel[0], 
        Thickness[0.002], 
        LineBox[
         NCache[{{0, 15}, {0, 15 + 10 (2 - 3^Rational[1, 2])}}, {{0, 15}, {
           0, 17.67949192431123}}]], {
         Thickness[0.0015], 
         RGBColor[1, 0, 0], 
         LineBox[
          
          NCache[{{
            Rational[1, 3] (-10 + 
              5 (-1 + 3^Rational[1, 2]) (1 + 3^Rational[1, 2])), 15}, {
            Rational[1, 3] (-10 + 
              5 (-1 + 3^Rational[1, 2]) (1 + 3^Rational[1, 2])), 15 + 
             3 (-15 + Rational[1, 3] (45 + 
                 5 (-1 + 3^Rational[1, 2])^2))}}, {{-5.921189464667501*^-16, 
             15}, {-5.921189464667501*^-16, 17.67949192431123}}]], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Thickness[Tiny]]], 
         GrayLevel[0], 
         DiskBox[
          
          NCache[{Rational[1, 3] (-10 + 
             5 (-1 + 3^Rational[1, 2]) (1 + 3^Rational[1, 2])), 
            Rational[1, 3] (45 + 
             5 (-1 + 3^Rational[1, 2])^2)}, {-5.921189464667501*^-16, 
           15.89316397477041}], 1], 
         GrayLevel[1], 
         DiskBox[
          
          NCache[{Rational[1, 3] (-10 + 
             5 (-1 + 3^Rational[1, 2]) (1 + 3^Rational[1, 2])), 
            Rational[1, 3] (45 + 
             5 (-1 + 3^Rational[1, 2])^2)}, {-5.921189464667501*^-16, 
           15.89316397477041}], 1, 
          
          NCache[{45 Degree, 135 Degree}, {0.7853981633974483, 
           2.356194490192345}]], 
         DiskBox[
          
          NCache[{Rational[1, 3] (-10 + 
             5 (-1 + 3^Rational[1, 2]) (1 + 3^Rational[1, 2])), 
            Rational[1, 3] (45 + 
             5 (-1 + 3^Rational[1, 2])^2)}, {-5.921189464667501*^-16, 
           15.89316397477041}], 1, 
          
          NCache[{(-45) Degree, (-135) 
            Degree}, {-0.7853981633974483, -2.356194490192345}]]}}, {
        GrayLevel[0], 
        EdgeForm[None], 
        DiskBox[{0, 15}, 
         NCache[
          Rational[1, 3], 0.3333333333333333]]}}, {
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[{{31.738795325112868`, 18.8268343236509}, {
        32.50416218984305, 16.979075258628328`}, {14.026571539617311`, 
        9.325406611326528}, {13.261204674887132`, 11.173165676349102`}}], 
       EdgeForm[{
         RGBColor[0.368417, 0.506779, 0.709798]}], 
       RGBColor[0.368417, 0.506779, 0.709798], 
       LineBox[{{31.738795325112868`, 18.8268343236509}, {13.261204674887132`,
         11.173165676349102`}}], {
        GrayLevel[0], 
        EdgeForm[None], 
        DiskBox[{22.5, 15}, 
         NCache[
          Rational[1, 3], 0.3333333333333333]]}}, {
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[
        NCache[{{45 + 5 2^Rational[1, 2], 15 + 5 2^Rational[1, 2]}, {
          45 + 6 2^Rational[1, 2], 15 + 4 2^Rational[1, 2]}, {
          45 - 4 2^Rational[1, 2], 15 - 6 2^Rational[1, 2]}, {
          45 - 5 2^Rational[1, 2], 15 - 5 2^Rational[1, 2]}}, {{
         52.071067811865476`, 22.071067811865476`}, {53.48528137423857, 
         20.65685424949238}, {39.34314575050762, 6.514718625761429}, {
         37.928932188134524`, 7.9289321881345245`}}]], 
       EdgeForm[{
         RGBColor[0.368417, 0.506779, 0.709798]}], 
       RGBColor[0.368417, 0.506779, 0.709798], 
       LineBox[
        NCache[{{45 + 5 2^Rational[1, 2], 15 + 5 2^Rational[1, 2]}, {
          45 - 5 2^Rational[1, 2], 15 - 5 2^Rational[1, 2]}}, {{
         52.071067811865476`, 22.071067811865476`}, {37.928932188134524`, 
         7.9289321881345245`}}]], {
        GrayLevel[0], 
        EdgeForm[None], 
        DiskBox[{45, 15}, 
         NCache[
          Rational[1, 3], 0.3333333333333333]]}}}, {{
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[
        NCache[{{-45 + 5 2^Rational[1, 2], 30 - 5 2^Rational[1, 2]}, {-45 + 
           4 2^Rational[1, 2], 30 - 6 2^Rational[1, 2]}, {-45 - 6 
           2^Rational[1, 2], 30 + 4 2^Rational[1, 2]}, {-45 - 5 
           2^Rational[1, 2], 30 + 
           5 2^Rational[1, 2]}}, {{-37.928932188134524`, 
         22.928932188134524`}, {-39.34314575050762, 
         21.51471862576143}, {-53.48528137423857, 
         35.65685424949238}, {-52.071067811865476`, 37.071067811865476`}}]], 
       EdgeForm[{
         RGBColor[0.880722, 0.611041, 0.142051]}], 
       RGBColor[0.880722, 0.611041, 0.142051], 
       LineBox[
        NCache[{{-45 + 5 2^Rational[1, 2], 30 - 5 2^Rational[1, 2]}, {-45 - 5 
           2^Rational[1, 2], 30 + 
           5 2^Rational[1, 2]}}, {{-37.928932188134524`, 
         22.928932188134524`}, {-52.071067811865476`, 
         37.071067811865476`}}]], {
        GrayLevel[0], 
        EdgeForm[None], 
        DiskBox[{-45, 30}, 
         NCache[
          Rational[1, 3], 0.3333333333333333]]}}, {
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[{{-13.261204674887132`, 
        26.1731656763491}, {-14.026571539617311`, 
        24.325406611326528`}, {-32.50416218984305, 
        31.979075258628328`}, {-31.738795325112868`, 33.8268343236509}}], 
       EdgeForm[{
         RGBColor[0.880722, 0.611041, 0.142051]}], 
       RGBColor[0.880722, 0.611041, 0.142051], {
        PolygonBox[{{-13.261204674887132`, 
         26.1731656763491}, {-29.128271480711838`, 
         35.33402096794177}, {-31.738795325112868`, 33.8268343236509}}], 
        GrayLevel[0], 
        Thickness[0.002], 
        LineBox[{{-22.5, 30}, {-22.5, 31.507186644290872`}}], {
         Thickness[0.0015], 
         RGBColor[1, 0, 0], 
         LineBox[{{-24.709423826903947`, 30}, {-24.709423826903947`, 
           35.33402096794177}}], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Thickness[Tiny]]], 
         GrayLevel[0], 
         DiskBox[{-24.709423826903947`, 31.778006989313923`}, 1], 
         GrayLevel[1], 
         DiskBox[{-24.709423826903947`, 31.778006989313923`}, 1, 
          
          NCache[{45 Degree, 135 Degree}, {0.7853981633974483, 
           2.356194490192345}]], 
         DiskBox[{-24.709423826903947`, 31.778006989313923`}, 1, 
          
          NCache[{(-45) Degree, (-135) 
            Degree}, {-0.7853981633974483, -2.356194490192345}]]}}, {
        GrayLevel[0], 
        EdgeForm[None], 
        DiskBox[{-22.5, 30}, 
         NCache[
          Rational[1, 3], 0.3333333333333333]]}}, {
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[{{10, 30}, {10, 28}, {-10, 28}, {-10, 30}}], 
       EdgeForm[{
         RGBColor[0.880722, 0.611041, 0.142051]}], 
       RGBColor[0.880722, 0.611041, 0.142051], {
        PolygonBox[
         NCache[{{10, 30}, {0, 30 + 10 3^Rational[-1, 2]}, {-10, 30}}, {{10, 
           30}, {0, 35.773502691896255`}, {-10, 30}}]], 
        GrayLevel[0], 
        Thickness[0.002], 
        LineBox[
         NCache[{{0, 30}, {0, 30 + 10 3^Rational[-1, 2]}}, {{0, 30}, {
           0, 35.773502691896255`}}]], {
         Thickness[0.0015], 
         RGBColor[1, 0, 0], 
         LineBox[
          
          NCache[{{0, 30}, {
            0, 30 + 3 (-30 + Rational[1, 3] (90 + 10 3^Rational[-1, 2]))}}, {{
            0, 30}, {0, 35.77350269189625}}]], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Thickness[Tiny]]], 
         GrayLevel[0], 
         DiskBox[
          
          NCache[{0, Rational[1, 3] (90 + 10 3^Rational[-1, 2])}, {
           0, 31.92450089729875}], 1], 
         GrayLevel[1], 
         DiskBox[
          
          NCache[{0, Rational[1, 3] (90 + 10 3^Rational[-1, 2])}, {
           0, 31.92450089729875}], 1, 
          
          NCache[{45 Degree, 135 Degree}, {0.7853981633974483, 
           2.356194490192345}]], 
         DiskBox[
          
          NCache[{0, Rational[1, 3] (90 + 10 3^Rational[-1, 2])}, {
           0, 31.92450089729875}], 1, 
          
          NCache[{(-45) Degree, (-135) 
            Degree}, {-0.7853981633974483, -2.356194490192345}]]}}, {
        GrayLevel[0], 
        EdgeForm[None], 
        DiskBox[{0, 30}, 
         NCache[
          Rational[1, 3], 0.3333333333333333]]}}, {
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[{{31.738795325112868`, 33.8268343236509}, {
        32.50416218984305, 31.979075258628328`}, {14.026571539617311`, 
        24.325406611326528`}, {13.261204674887132`, 26.1731656763491}}], 
       EdgeForm[{
         RGBColor[0.880722, 0.611041, 0.142051]}], 
       RGBColor[0.880722, 0.611041, 0.142051], {
        PolygonBox[{{31.738795325112868`, 33.8268343236509}, {
         29.128271480711838`, 35.33402096794177}, {13.261204674887132`, 
         26.1731656763491}}], 
        GrayLevel[0], 
        Thickness[0.002], 
        LineBox[{{22.5, 30}, {22.5, 31.507186644290872`}}], {
         Thickness[0.0015], 
         RGBColor[1, 0, 0], 
         LineBox[{{24.709423826903944`, 30}, {24.709423826903944`, 
           35.33402096794177}}], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Thickness[Tiny]]], 
         GrayLevel[0], 
         DiskBox[{24.709423826903944`, 31.778006989313923`}, 1], 
         GrayLevel[1], 
         DiskBox[{24.709423826903944`, 31.778006989313923`}, 1, 
          
          NCache[{45 Degree, 135 Degree}, {0.7853981633974483, 
           2.356194490192345}]], 
         DiskBox[{24.709423826903944`, 31.778006989313923`}, 1, 
          
          NCache[{(-45) Degree, (-135) 
            Degree}, {-0.7853981633974483, -2.356194490192345}]]}}, {
        GrayLevel[0], 
        EdgeForm[None], 
        DiskBox[{22.5, 30}, 
         NCache[
          Rational[1, 3], 0.3333333333333333]]}}, {
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[
        NCache[{{45 + 5 2^Rational[1, 2], 30 + 5 2^Rational[1, 2]}, {
          45 + 6 2^Rational[1, 2], 30 + 4 2^Rational[1, 2]}, {
          45 - 4 2^Rational[1, 2], 30 - 6 2^Rational[1, 2]}, {
          45 - 5 2^Rational[1, 2], 30 - 5 2^Rational[1, 2]}}, {{
         52.071067811865476`, 37.071067811865476`}, {53.48528137423857, 
         35.65685424949238}, {39.34314575050762, 21.51471862576143}, {
         37.928932188134524`, 22.928932188134524`}}]], 
       EdgeForm[{
         RGBColor[0.880722, 0.611041, 0.142051]}], 
       RGBColor[0.880722, 0.611041, 0.142051], 
       LineBox[
        NCache[{{45 + 5 2^Rational[1, 2], 30 + 5 2^Rational[1, 2]}, {
          45 - 5 2^Rational[1, 2], 30 - 5 2^Rational[1, 2]}}, {{
         52.071067811865476`, 37.071067811865476`}, {37.928932188134524`, 
         22.928932188134524`}}]], {
        GrayLevel[0], 
        EdgeForm[None], 
        DiskBox[{45, 30}, 
         NCache[
          Rational[1, 3], 0.3333333333333333]]}}}, {{
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[
        NCache[{{-45 + 5 2^Rational[1, 2], 45 - 5 2^Rational[1, 2]}, {-45 + 
           4 2^Rational[1, 2], 45 - 6 2^Rational[1, 2]}, {-45 - 6 
           2^Rational[1, 2], 45 + 4 2^Rational[1, 2]}, {-45 - 5 
           2^Rational[1, 2], 45 + 
           5 2^Rational[1, 2]}}, {{-37.928932188134524`, 
         37.928932188134524`}, {-39.34314575050762, 
         36.51471862576143}, {-53.48528137423857, 
         50.65685424949238}, {-52.071067811865476`, 52.071067811865476`}}]], 
       EdgeForm[{
         RGBColor[0.560181, 0.691569, 0.194885]}], 
       RGBColor[0.560181, 0.691569, 0.194885], 
       LineBox[
        NCache[{{-45 + 5 2^Rational[1, 2], 45 - 5 2^Rational[1, 2]}, {-45 - 5 
           2^Rational[1, 2], 45 + 
           5 2^Rational[1, 2]}}, {{-37.928932188134524`, 
         37.928932188134524`}, {-52.071067811865476`, 
         52.071067811865476`}}]], {
        GrayLevel[0], 
        EdgeForm[None], 
        DiskBox[{-45, 45}, 
         NCache[
          Rational[1, 3], 0.3333333333333333]]}}, {
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[{{-13.261204674887132`, 
        41.1731656763491}, {-14.026571539617311`, 
        39.32540661132653}, {-32.50416218984305, 
        46.97907525862833}, {-31.738795325112868`, 48.8268343236509}}], 
       EdgeForm[{
         RGBColor[0.560181, 0.691569, 0.194885]}], 
       RGBColor[0.560181, 0.691569, 0.194885], {
        PolygonBox[{{-13.261204674887132`, 
         41.1731656763491}, {-26.3268343236509, 
         54.23879532511287}, {-31.738795325112868`, 48.8268343236509}}], 
        GrayLevel[0], 
        Thickness[0.002], 
        LineBox[{{-22.5, 45}, {-22.5, 50.41196100146197}}], {
         Thickness[0.0015], 
         RGBColor[1, 0, 0], 
         LineBox[{{-23.775611441216967`, 45}, {-23.775611441216967`, 
           54.238795325112875`}}], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Thickness[Tiny]]], 
         GrayLevel[0], 
         DiskBox[{-23.775611441216967`, 48.07959844170429}, 1], 
         GrayLevel[1], 
         DiskBox[{-23.775611441216967`, 48.07959844170429}, 1, 
          
          NCache[{45 Degree, 135 Degree}, {0.7853981633974483, 
           2.356194490192345}]], 
         DiskBox[{-23.775611441216967`, 48.07959844170429}, 1, 
          NCache[{(-45) Degree, (-135) 
            Degree}, {-0.7853981633974483, -2.356194490192345}]]}}, {
        GrayLevel[0], 
        EdgeForm[None], 
        DiskBox[{-22.5, 45}, 
         NCache[
          Rational[1, 3], 0.3333333333333333]]}}, {
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[{{10, 45}, {10, 43}, {-10, 43}, {-10, 45}}], 
       EdgeForm[{
         RGBColor[0.560181, 0.691569, 0.194885]}], 
       RGBColor[0.560181, 0.691569, 0.194885], {
        PolygonBox[{{10, 45}, {0, 55}, {-10, 45}}], 
        GrayLevel[0], 
        Thickness[0.002], 
        LineBox[{{0, 45}, {0, 55}}], {
         Thickness[0.0015], 
         RGBColor[1, 0, 0], 
         LineBox[{{0, 45}, {0, 55}}], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Thickness[Tiny]]], 
         GrayLevel[0], 
         DiskBox[
          NCache[{0, 
            Rational[145, 3]}, {0, 48.333333333333336`}], 1], 
         GrayLevel[1], 
         DiskBox[
          NCache[{0, 
            Rational[145, 3]}, {0, 48.333333333333336`}], 1, 
          
          NCache[{45 Degree, 135 Degree}, {0.7853981633974483, 
           2.356194490192345}]], 
         DiskBox[
          NCache[{0, 
            Rational[145, 3]}, {0, 48.333333333333336`}], 1, 
          
          NCache[{(-45) Degree, (-135) 
            Degree}, {-0.7853981633974483, -2.356194490192345}]]}}, {
        GrayLevel[0], 
        EdgeForm[None], 
        DiskBox[{0, 45}, 
         NCache[
          Rational[1, 3], 0.3333333333333333]]}}, {
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[{{31.738795325112868`, 48.8268343236509}, {
        32.50416218984305, 46.97907525862833}, {14.026571539617311`, 
        39.32540661132653}, {13.261204674887132`, 41.1731656763491}}], 
       EdgeForm[{
         RGBColor[0.560181, 0.691569, 0.194885]}], 
       RGBColor[0.560181, 0.691569, 0.194885], {
        PolygonBox[{{31.738795325112868`, 48.8268343236509}, {
         26.326834323650893`, 54.23879532511286}, {13.261204674887132`, 
         41.1731656763491}}], 
        GrayLevel[0], 
        Thickness[0.002], 
        LineBox[{{22.5, 45}, {22.5, 50.41196100146197}}], {
         Thickness[0.0015], 
         RGBColor[1, 0, 0], 
         LineBox[{{23.77561144121696, 45}, {23.77561144121696, 
           54.23879532511283}}], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Thickness[Tiny]]], 
         GrayLevel[0], 
         DiskBox[{23.77561144121696, 48.07959844170428}, 1], 
         GrayLevel[1], 
         DiskBox[{23.77561144121696, 48.07959844170428}, 1, 
          
          NCache[{45 Degree, 135 Degree}, {0.7853981633974483, 
           2.356194490192345}]], 
         DiskBox[{23.77561144121696, 48.07959844170428}, 1, 
          
          NCache[{(-45) Degree, (-135) 
            Degree}, {-0.7853981633974483, -2.356194490192345}]]}}, {
        GrayLevel[0], 
        EdgeForm[None], 
        DiskBox[{22.5, 45}, 
         NCache[
          Rational[1, 3], 0.3333333333333333]]}}, {
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[
        NCache[{{45 + 5 2^Rational[1, 2], 45 + 5 2^Rational[1, 2]}, {
          45 + 6 2^Rational[1, 2], 45 + 4 2^Rational[1, 2]}, {
          45 - 4 2^Rational[1, 2], 45 - 6 2^Rational[1, 2]}, {
          45 - 5 2^Rational[1, 2], 45 - 5 2^Rational[1, 2]}}, {{
         52.071067811865476`, 52.071067811865476`}, {53.48528137423857, 
         50.65685424949238}, {39.34314575050762, 36.51471862576143}, {
         37.928932188134524`, 37.928932188134524`}}]], 
       EdgeForm[{
         RGBColor[0.560181, 0.691569, 0.194885]}], 
       RGBColor[0.560181, 0.691569, 0.194885], 
       LineBox[
        NCache[{{45 + 5 2^Rational[1, 2], 45 + 5 2^Rational[1, 2]}, {
          45 - 5 2^Rational[1, 2], 45 - 5 2^Rational[1, 2]}}, {{
         52.071067811865476`, 52.071067811865476`}, {37.928932188134524`, 
         37.928932188134524`}}]], {
        GrayLevel[0], 
        EdgeForm[None], 
        DiskBox[{45, 45}, 
         NCache[
          Rational[1, 3], 0.3333333333333333]]}}}, {{
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[
        NCache[{{-45 + 5 2^Rational[1, 2], 60 - 5 2^Rational[1, 2]}, {-45 + 
           4 2^Rational[1, 2], 60 - 6 2^Rational[1, 2]}, {-45 - 6 
           2^Rational[1, 2], 60 + 4 2^Rational[1, 2]}, {-45 - 5 
           2^Rational[1, 2], 60 + 
           5 2^Rational[1, 2]}}, {{-37.928932188134524`, 
         52.928932188134524`}, {-39.34314575050762, 
         51.51471862576143}, {-53.48528137423857, 
         65.65685424949238}, {-52.071067811865476`, 67.07106781186548}}]], 
       EdgeForm[{
         RGBColor[0.922526, 0.385626, 0.209179]}], 
       RGBColor[0.922526, 0.385626, 0.209179], {
        PolygonBox[
         NCache[{{-45 + 5 2^Rational[1, 2], 60 - 5 2^Rational[1, 2]}, {-45 - 
            5 2^Rational[1, 2] + 
            5 Rational[2, 3]^Rational[1, 2] (-1 + 3^Rational[1, 2]), 60 + 
            5 2^Rational[1, 2] + 
            5 2^Rational[1, 2] (-1 + 3^Rational[1, 2])}, {-45 - 5 
            2^Rational[1, 2], 60 + 
            5 2^Rational[1, 2]}}, {{-37.928932188134524`, 
          52.928932188134524`}, {-49.08248290463863, 
          72.24744871391589}, {-52.071067811865476`, 67.07106781186548}}]], 
        GrayLevel[0], 
        Thickness[0.002], 
        LineBox[
         NCache[{{-45, 
           60}, {-45, 60 + 
            10 (Rational[3, 2]^Rational[1, 2] - 2^Rational[-1, 2])}}, {{-45, 
           60}, {-45, 65.17638090205041}}]], {
         Thickness[0.0015], 
         RGBColor[1, 0, 0], 
         LineBox[
          
          NCache[{{
            Rational[1, 3] (-135 - 5 2^Rational[1, 2] + 
              5 Rational[2, 3]^Rational[1, 2] (-1 + 3^Rational[1, 2])), 60}, {
            Rational[1, 3] (-135 - 5 2^Rational[1, 2] + 
              5 Rational[2, 3]^Rational[1, 2] (-1 + 3^Rational[1, 2])), 60 + 
             3 (-60 + Rational[1, 3] (180 + 5 2^Rational[1, 2] + 
                 5 2^Rational[1, 2] (-1 + 
                   3^Rational[1, 2])))}}, {{-46.36082763487954, 
             60}, {-46.36082763487954, 72.24744871391587}}]], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Thickness[Tiny]]], 
         GrayLevel[0], 
         DiskBox[
          
          NCache[{Rational[1, 3] (-135 - 5 2^Rational[1, 2] + 
             5 Rational[2, 3]^Rational[1, 2] (-1 + 3^Rational[1, 2])), 
            Rational[1, 3] (180 + 5 2^Rational[1, 2] + 
             5 2^Rational[1, 2] (-1 + 
               3^Rational[1, 2]))}, {-46.36082763487954, 64.08248290463862}], 
          1], 
         GrayLevel[1], 
         DiskBox[
          
          NCache[{Rational[1, 3] (-135 - 5 2^Rational[1, 2] + 
             5 Rational[2, 3]^Rational[1, 2] (-1 + 3^Rational[1, 2])), 
            Rational[1, 3] (180 + 5 2^Rational[1, 2] + 
             5 2^Rational[1, 2] (-1 + 
               3^Rational[1, 2]))}, {-46.36082763487954, 64.08248290463862}], 
          1, 
          
          NCache[{45 Degree, 135 Degree}, {0.7853981633974483, 
           2.356194490192345}]], 
         DiskBox[
          
          NCache[{Rational[1, 3] (-135 - 5 2^Rational[1, 2] + 
             5 Rational[2, 3]^Rational[1, 2] (-1 + 3^Rational[1, 2])), 
            Rational[1, 3] (180 + 5 2^Rational[1, 2] + 
             5 2^Rational[1, 2] (-1 + 
               3^Rational[1, 2]))}, {-46.36082763487954, 64.08248290463862}], 
          1, 
          
          NCache[{(-45) Degree, (-135) 
            Degree}, {-0.7853981633974483, -2.356194490192345}]]}}, {
        GrayLevel[0], 
        EdgeForm[None], 
        DiskBox[{-45, 60}, 
         NCache[
          Rational[1, 3], 0.3333333333333333]]}}, {
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[{{-13.261204674887132`, 
        56.1731656763491}, {-14.026571539617311`, 
        54.32540661132653}, {-32.50416218984305, 
        61.97907525862833}, {-31.738795325112868`, 63.8268343236509}}], 
       EdgeForm[{
         RGBColor[0.922526, 0.385626, 0.209179]}], 
       RGBColor[0.922526, 0.385626, 0.209179], {
        PolygonBox[{{-13.261204674887132`, 
         56.1731656763491}, {-24.709423826903947`, 
         76.0020629038253}, {-31.738795325112868`, 63.8268343236509}}], 
        GrayLevel[0], 
        Thickness[0.002], 
        LineBox[{{-22.5, 60}, {-22.5, 72.1752285801744}}], {
         Thickness[0.0015], 
         RGBColor[1, 0, 0], 
         LineBox[{{-23.23647460896798, 60}, {-23.23647460896798, 
           76.0020629038253}}], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Thickness[Tiny]]], 
         GrayLevel[0], 
         DiskBox[{-23.23647460896798, 65.33402096794177}, 1], 
         GrayLevel[1], 
         DiskBox[{-23.23647460896798, 65.33402096794177}, 1, 
          
          NCache[{45 Degree, 135 Degree}, {0.7853981633974483, 
           2.356194490192345}]], 
         DiskBox[{-23.23647460896798, 65.33402096794177}, 1, 
          
          NCache[{(-45) Degree, (-135) 
            Degree}, {-0.7853981633974483, -2.356194490192345}]]}}, {
        GrayLevel[0], 
        EdgeForm[None], 
        DiskBox[{-22.5, 60}, 
         NCache[
          Rational[1, 3], 0.3333333333333333]]}}, {
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[{{10, 60}, {10, 58}, {-10, 58}, {-10, 60}}], 
       EdgeForm[{
         RGBColor[0.922526, 0.385626, 0.209179]}], 
       RGBColor[0.922526, 0.385626, 0.209179], {
        PolygonBox[
         NCache[{{10, 60}, {0, 60 + 10 3^Rational[1, 2]}, {-10, 60}}, {{10, 
           60}, {0, 77.32050807568876}, {-10, 60}}]], 
        GrayLevel[0], 
        Thickness[0.002], 
        LineBox[
         NCache[{{0, 60}, {0, 60 + 10 3^Rational[1, 2]}}, {{0, 60}, {
           0, 77.32050807568876}}]], {
         Thickness[0.0015], 
         RGBColor[1, 0, 0], 
         LineBox[
          
          NCache[{{0, 60}, {
            0, 60 + 3 (-60 + Rational[1, 3] (180 + 10 3^Rational[1, 2]))}}, {{
            0, 60}, {0, 77.32050807568876}}]], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Thickness[Tiny]]], 
         GrayLevel[0], 
         DiskBox[
          
          NCache[{0, Rational[1, 3] (180 + 10 3^Rational[1, 2])}, {
           0, 65.77350269189625}], 1], 
         GrayLevel[1], 
         DiskBox[
          
          NCache[{0, Rational[1, 3] (180 + 10 3^Rational[1, 2])}, {
           0, 65.77350269189625}], 1, 
          NCache[{45 Degree, 135 Degree}, {0.7853981633974483, 
           2.356194490192345}]], 
         DiskBox[
          
          NCache[{0, Rational[1, 3] (180 + 10 3^Rational[1, 2])}, {
           0, 65.77350269189625}], 1, 
          
          NCache[{(-45) Degree, (-135) 
            Degree}, {-0.7853981633974483, -2.356194490192345}]]}}, {
        GrayLevel[0], 
        EdgeForm[None], 
        DiskBox[{0, 60}, 
         NCache[
          Rational[1, 3], 0.3333333333333333]]}}, {
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[{{31.738795325112868`, 63.8268343236509}, {
        32.50416218984305, 61.97907525862833}, {14.026571539617311`, 
        54.32540661132653}, {13.261204674887132`, 56.1731656763491}}], 
       EdgeForm[{
         RGBColor[0.922526, 0.385626, 0.209179]}], 
       RGBColor[0.922526, 0.385626, 0.209179], {
        PolygonBox[{{31.738795325112868`, 63.8268343236509}, {
         24.70942382690395, 76.0020629038253}, {13.261204674887132`, 
         56.1731656763491}}], 
        GrayLevel[0], 
        Thickness[0.002], 
        LineBox[{{22.5, 60}, {22.5, 72.1752285801744}}], {
         Thickness[0.0015], 
         RGBColor[1, 0, 0], 
         LineBox[{{23.23647460896798, 60}, {23.23647460896798, 
           76.0020629038253}}], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Thickness[Tiny]]], 
         GrayLevel[0], 
         DiskBox[{23.23647460896798, 65.33402096794177}, 1], 
         GrayLevel[1], 
         DiskBox[{23.23647460896798, 65.33402096794177}, 1, 
          
          NCache[{45 Degree, 135 Degree}, {0.7853981633974483, 
           2.356194490192345}]], 
         DiskBox[{23.23647460896798, 65.33402096794177}, 1, 
          
          NCache[{(-45) Degree, (-135) 
            Degree}, {-0.7853981633974483, -2.356194490192345}]]}}, {
        GrayLevel[0], 
        EdgeForm[None], 
        DiskBox[{22.5, 60}, 
         NCache[
          Rational[1, 3], 0.3333333333333333]]}}, {
       RGBColor[1, 0.5, 0.5], 
       PolygonBox[
        NCache[{{45 + 5 2^Rational[1, 2], 60 + 5 2^Rational[1, 2]}, {
          45 + 6 2^Rational[1, 2], 60 + 4 2^Rational[1, 2]}, {
          45 - 4 2^Rational[1, 2], 60 - 6 2^Rational[1, 2]}, {
          45 - 5 2^Rational[1, 2], 60 - 5 2^Rational[1, 2]}}, {{
         52.071067811865476`, 67.07106781186548}, {53.48528137423857, 
         65.65685424949238}, {39.34314575050762, 51.51471862576143}, {
         37.928932188134524`, 52.928932188134524`}}]], 
       EdgeForm[{
         RGBColor[0.922526, 0.385626, 0.209179]}], 
       RGBColor[0.922526, 0.385626, 0.209179], {
        PolygonBox[
         NCache[{{45 + 5 2^Rational[1, 2], 60 + 5 2^Rational[1, 2]}, {
           45 - 5 2^Rational[1, 2] + 
            5 Rational[2, 3]^Rational[1, 2] (1 + 3^Rational[1, 2]), 60 - 5 
            2^Rational[1, 2] + 5 2^Rational[1, 2] (1 + 3^Rational[1, 2])}, {
           45 - 5 2^Rational[1, 2], 60 - 5 2^Rational[1, 2]}}, {{
          52.071067811865476`, 67.07106781186548}, {49.08248290463863, 
          72.24744871391589}, {37.928932188134524`, 52.928932188134524`}}]], 
        GrayLevel[0], 
        Thickness[0.002], 
        LineBox[
         NCache[{{45, 60}, {
           45, 60 + 10 (Rational[3, 2]^Rational[1, 2] - 2^
              Rational[-1, 2])}}, {{45, 60}, {45, 65.17638090205041}}]], {
         Thickness[0.0015], 
         RGBColor[1, 0, 0], 
         LineBox[
          
          NCache[{{
            Rational[1, 3] (135 - 5 2^Rational[1, 2] + 
              5 Rational[2, 3]^Rational[1, 2] (1 + 3^Rational[1, 2])), 60}, {
            Rational[1, 3] (135 - 5 2^Rational[1, 2] + 
              5 Rational[2, 3]^Rational[1, 2] (1 + 3^Rational[1, 2])), 60 + 
             3 (-60 + Rational[1, 3] (180 - 5 2^Rational[1, 2] + 
                 5 2^Rational[1, 2] (1 + 3^Rational[1, 2])))}}, {{
            46.36082763487954, 60}, {46.36082763487954, 72.24744871391587}}]], 
         EdgeForm[
          Directive[
           GrayLevel[0], 
           Thickness[Tiny]]], 
         GrayLevel[0], 
         DiskBox[
          
          NCache[{Rational[1, 3] (135 - 5 2^Rational[1, 2] + 
             5 Rational[2, 3]^Rational[1, 2] (1 + 3^Rational[1, 2])), 
            Rational[1, 3] (180 - 5 2^Rational[1, 2] + 
             5 2^Rational[1, 2] (1 + 3^Rational[1, 2]))}, {46.36082763487954, 
           64.08248290463862}], 1], 
         GrayLevel[1], 
         DiskBox[
          
          NCache[{Rational[1, 3] (135 - 5 2^Rational[1, 2] + 
             5 Rational[2, 3]^Rational[1, 2] (1 + 3^Rational[1, 2])), 
            Rational[1, 3] (180 - 5 2^Rational[1, 2] + 
             5 2^Rational[1, 2] (1 + 3^Rational[1, 2]))}, {46.36082763487954, 
           64.08248290463862}], 1, 
          
          NCache[{45 Degree, 135 Degree}, {0.7853981633974483, 
           2.356194490192345}]], 
         DiskBox[
          
          NCache[{Rational[1, 3] (135 - 5 2^Rational[1, 2] + 
             5 Rational[2, 3]^Rational[1, 2] (1 + 3^Rational[1, 2])), 
            Rational[1, 3] (180 - 5 2^Rational[1, 2] + 
             5 2^Rational[1, 2] (1 + 3^Rational[1, 2]))}, {46.36082763487954, 
           64.08248290463862}], 1, 
          
          NCache[{(-45) Degree, (-135) 
            Degree}, {-0.7853981633974483, -2.356194490192345}]]}}, {
        GrayLevel[0], 
        EdgeForm[None], 
        DiskBox[{45, 60}, 
         NCache[
          Rational[1, 3], 0.3333333333333333]]}}}}},
  Ticks->{{{-60, 
      FormBox[
       RowBox[{"-", "60"}], TraditionalForm]}, {-45, 
      FormBox[
       RowBox[{"-", "45"}], TraditionalForm]}, {-30, 
      FormBox[
       RowBox[{"-", "30"}], TraditionalForm]}, {-15, 
      FormBox[
       RowBox[{"-", "15"}], TraditionalForm]}, {15, 
      FormBox["15", TraditionalForm]}, {30, 
      FormBox["30", TraditionalForm]}, {45, 
      FormBox["45", TraditionalForm]}, {60, 
      FormBox["60", TraditionalForm]}}, {{15, 
      FormBox["15", TraditionalForm]}, {30, 
      FormBox["30", TraditionalForm]}, {45, 
      FormBox["45", TraditionalForm]}, {60, 
      FormBox["60", TraditionalForm]}}}]], "Output",
 CellChangeTimes->{{3.7377923789547167`*^9, 3.737792389870038*^9}, {
   3.737792537216036*^9, 3.737792582582645*^9}, {3.7377926235395193`*^9, 
   3.737792625833418*^9}, 3.7377926916429873`*^9, {3.737792760036175*^9, 
   3.737792771675932*^9}, {3.737792884335517*^9, 3.737792898172988*^9}, {
   3.737792928697933*^9, 3.737792936141672*^9}, 
   3.7377930069709806`*^9},ExpressionUUID->"9d4c6525-b9c1-46f7-8f4f-\
a4583cb34359"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1280, 687},
WindowMargins->{{Automatic, 28}, {Automatic, 157}},
FrontEndVersion->"11.2 for Mac OS X x86 (32-bit, 64-bit Kernel) (September \
10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1293, 23, 265, "Subchapter",ExpressionUUID->"2307a7fc-9fdb-49e5-83a4-ae087b36a4cc"],
Cell[CellGroupData[{
Cell[1898, 49, 14141, 352, 969, "Input",ExpressionUUID->"74c981ce-af32-427d-bbd4-8e16accd0c37"],
Cell[16042, 403, 712, 13, 24, "Message",ExpressionUUID->"1f326474-cce8-444b-8250-543c3325ae11"],
Cell[16757, 418, 6396, 129, 423, "Output",ExpressionUUID->"28029573-f76a-4faa-88fb-99153a45885a"],
Cell[23156, 549, 701, 13, 24, "Message",ExpressionUUID->"803bcd54-19fa-44b4-8d73-5a825f8ca8ee"],
Cell[23860, 564, 699, 13, 24, "Message",ExpressionUUID->"752616e3-b35a-4542-b16f-8f42030d5ab4"],
Cell[24562, 579, 699, 13, 24, "Message",ExpressionUUID->"9487c982-8f54-41ee-abee-47e6f4609a0e"],
Cell[25264, 594, 613, 12, 24, "Message",ExpressionUUID->"26203fe9-9419-406f-8d14-492ed806ed14"]
}, Open  ]],
Cell[25892, 609, 287, 7, 52, "Input",ExpressionUUID->"5be02f17-2f20-4d0d-bf5c-e9fe378b573d"],
Cell[CellGroupData[{
Cell[26204, 620, 197, 3, 54, "Subsection",ExpressionUUID->"ef761106-4ac7-4f7e-8a7f-f1214b54c52f"],
Cell[26404, 625, 3169, 92, 119, "Input",ExpressionUUID->"b801c6f6-abc8-4a91-9d77-580d15169109"],
Cell[29576, 719, 268, 9, 104, "Text"],
Cell[CellGroupData[{
Cell[29869, 732, 485, 12, 30, "Input"],
Cell[30357, 746, 936, 26, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31330, 777, 979, 29, 47, "Input"],
Cell[32312, 808, 916, 28, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33265, 841, 1406, 40, 52, "Input"],
Cell[34674, 883, 2607, 49, 367, "Output",ExpressionUUID->"c8e95871-5bde-41da-bb63-0c14e9bb0b0d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37318, 937, 2480, 74, 165, "Input",ExpressionUUID->"d38bfbcf-ac17-470a-ae76-e2b3fcf6247c"],
Cell[39801, 1013, 491, 13, 50, "Output",ExpressionUUID->"9a1c444d-a79b-4cdb-ab46-9448ee39ab15"]
}, Open  ]],
Cell[40307, 1029, 1093, 33, 30, "Input",ExpressionUUID->"97326567-8c7d-4379-81f8-2232e3f7b090"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41437, 1067, 216016, 3840, 283, "Subsection",ExpressionUUID->"3ffc317f-3c59-4200-ba76-6a4d35291edb"],
Cell[CellGroupData[{
Cell[257478, 4911, 2507, 67, 152, "Input",ExpressionUUID->"26dc995b-d8bc-4343-8952-9a05aae000ff"],
Cell[259988, 4980, 550, 16, 51, "Output",ExpressionUUID->"c9b2b5ae-3071-41cd-a0d0-b105e215a2e4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[260575, 5001, 2532, 69, 124, "Input",ExpressionUUID->"9c5c71cb-348f-4318-a73a-f95d206d00cc"],
Cell[263110, 5072, 544, 15, 51, "Output",ExpressionUUID->"3dce3173-a9b1-4fa5-80c4-b3e7234364ca"]
}, Open  ]],
Cell[263669, 5090, 5791, 159, 261, "Input",ExpressionUUID->"772540df-0c6c-4bcd-a3ae-e5e1c5950b63"],
Cell[CellGroupData[{
Cell[269485, 5253, 6345, 158, 357, "Input",ExpressionUUID->"d1079389-4360-4b9d-b7f0-ba0031de1f26"],
Cell[275833, 5413, 96058, 1744, 246, "Output",ExpressionUUID->"b2a2ef5b-3161-488d-a735-9711e2a251e4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[371928, 7162, 2943, 79, 215, "Input",ExpressionUUID->"f8ce0087-4d2f-42b3-8df2-fff88d16e766"],
Cell[374874, 7243, 67803, 1232, 242, "Output",ExpressionUUID->"9fd3c8ad-8be6-4f71-8ebb-7ec1416098d7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[442714, 8480, 2221, 62, 100, "Input",ExpressionUUID->"d9744b2e-7542-411e-8331-d7ddd1a74ad7"],
Cell[444938, 8544, 2209, 62, 91, "Output",ExpressionUUID->"c03d25b6-9e1d-4018-b0be-c278c92617de"]
}, Open  ]],
Cell[CellGroupData[{
Cell[447184, 8611, 21666, 512, 1416, "Input",ExpressionUUID->"ecb009d6-bcb5-4e2f-85fd-5b7a46465110"],
Cell[468853, 9125, 35585, 867, 622, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

