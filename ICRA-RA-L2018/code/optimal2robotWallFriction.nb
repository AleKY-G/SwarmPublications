(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    224644,       4969]
NotebookOptionsPosition[    223207,       4919]
NotebookOutlinePosition[    223565,       4935]
CellTagsIndexPosition[    223522,       4932]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Uses dynamic programming to find an optional path for 2 robots actuated by \
global inputs\
\>", "Section",
 CellChangeTimes->{{3.6949518688287697`*^9, 3.694951887018344*^9}}],

Cell["\<\



Todos:
1) Add graphics Done
2) Add epsilon Done
3) Check if robots are on each other Done\
\>", "Subsubsection",
 CellChangeTimes->{{3.694957212842634*^9, 3.694957326738517*^9}, {
  3.6949573972144117`*^9, 3.694957413205287*^9}, {3.694983808420594*^9, 
  3.69498381162698*^9}, {3.69609876211858*^9, 3.6960987917652283`*^9}, {
  3.696951563994966*^9, 3.696951585009099*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Idea\n", "Text"],
 StyleBox["Base case 1:", "Text",
  FontWeight->"Bold"],
 StyleBox["  deltaX and deltaY are 0, simply move robots to final position\n",
   "Text"],
 StyleBox["Base case 2:", "Text",
  FontWeight->"Bold"],
 StyleBox["  In 2 moves we can make both deltaX and deltaY 0, implement this \
move, then call ", "Text"],
 StyleBox["Base case 1:", "Text",
  FontWeight->"Bold"],
 StyleBox["\n\nWe build a list like in an A* algorithm.  Each item in the \
list has 4 entries, and the list is sorted based on the first entry:\n{", 
  "Text"],
 StyleBox["estimatedPathLength", "Text",
  FontWeight->"Bold"],
 StyleBox[",  ", "Text"],
 StyleBox["r1, r2", "Text",
  FontWeight->"Bold"],
 StyleBox[", ", "Text"],
 StyleBox["MOVES", "Text",
  FontWeight->"Bold"],
 StyleBox["}\n\n", "Text"],
 StyleBox["MOVES", "Text",
  FontWeight->"Bold"],
 StyleBox[" is the moves that have been applied to the robots: \
{{x1,y1},{x2,y2}} for a two move sequence.\n", "Text"],
 StyleBox["r1", "Text",
  FontWeight->"Bold"],
 StyleBox[" and ", "Text"],
 StyleBox["r2 ", "Text",
  FontWeight->"Bold"],
 StyleBox["are the positions of robot 1 and 2 after applying ", "Text"],
 StyleBox["MOVES", "Text",
  FontWeight->"Bold"],
 StyleBox[" to them.\n\n", "Text"],
 StyleBox["estimatedPathLength", "Text",
  FontWeight->"Bold"],
 StyleBox[" is the sum of the euclidean distances of ", "Text"],
 StyleBox["MOVES", "Text",
  FontWeight->"Bold"],
 StyleBox[" + an admissible heuristic (the maximum distance of", "Text"],
 StyleBox[" r1 ", "Text",
  FontWeight->"Bold"],
 StyleBox["or ", "Text"],
 StyleBox["r2", "Text",
  FontWeight->"Bold"],
 StyleBox[" from their goal positions).\n\nHow the solver works:\nStart with \
start positions ", "Text"],
 StyleBox["s1,s2", "Text",
  FontWeight->"Bold"],
 StyleBox[" and goal positions ", "Text"],
 StyleBox["g1, g2", "Text",
  FontWeight->"Bold"],
 StyleBox[".\n\n", "Text"],
 StyleBox["optimalPathList", "Text",
  FontWeight->"Bold"],
 StyleBox[" = { \n   {Max( distance(g1,s1), distance(g2,s2) ), s1,s2, {} }\n\n\
", "Text"],
 StyleBox["While", "Text",
  FontWeight->"Bold"],
 StyleBox[" forever\n     ", "Text"],
 StyleBox[" if ", "Text",
  FontWeight->"Bold"],
 StyleBox["the first item in ", "Text"],
 StyleBox["optimalPathList", "Text",
  FontWeight->"Bold"],
 StyleBox[", the ", "Text"],
 StyleBox["estimatedPathLength", "Text",
  FontWeight->"Bold"],
 StyleBox[" == sum of the euclidean distances of ", "Text"],
 StyleBox["MOVES", "Text",
  FontWeight->"Bold"],
 StyleBox[",\n           we have the optimal solution, so return the ", 
  "Text"],
 StyleBox["MOVES", "Text",
  FontWeight->"Bold"],
 StyleBox[" for the first item\n    ", "Text"],
 StyleBox["else", "Text",
  FontWeight->"Bold"],
 StyleBox["\n          ", "Text"],
 StyleBox["Pop ", "Text",
  FontWeight->"Bold"],
 StyleBox[" the first item from the list,  \n                  call  {move1, \
move2, r1new, r2new} = ", "Text"],
 StyleBox["wallFrictionMove", "Text",
  FontWeight->"Bold"],
 StyleBox["(direction, r1, r2, g1, g2) for the 4 walls \n                 ", 
  "Text"],
 StyleBox[" if", "Text",
  FontWeight->"Bold"],
 StyleBox[" already in contact with one wall, also try a ", "Text"],
 StyleBox["DRIFT_move", "Text",
  FontWeight->"Bold"],
 StyleBox[". Add all the new moves to ", "Text"],
 StyleBox["optimalPathList", "Text",
  FontWeight->"Bold"],
 StyleBox["\n", "Text"],
 StyleBox["end while", "Text",
  FontWeight->"Bold"],
 StyleBox["\n\n", "Text"],
 StyleBox["wallFrictionMove", "Text",
  FontWeight->"Bold"],
 StyleBox["(direction, r1, r2, g1, g2)  should first see if ", "Text"],
 StyleBox["Base case 1", "Text",
  FontWeight->"Bold"],
 StyleBox[": is possible, next see if  ", "Text"],
 StyleBox["Base case 2", "Text",
  FontWeight->"Bold"],
 StyleBox[" is possible, else try to reduce  ", "Text"],
 StyleBox["deltaX", "Text",
  FontWeight->"Bold"],
 StyleBox[" and ", "Text"],
 StyleBox["deltaY", "Text",
  FontWeight->"Bold"],
 StyleBox[".   We will need to ensure that the robots never overlap, which \
means that ", "Text"],
 StyleBox["wallFrictionMove", "Text",
  FontWeight->"Bold"],
 StyleBox[" might return several options.\n\n\n", "Text"],
 "(g2x-g1x)",
 StyleBox["= ", "Text"],
 "\[CapitalDelta]gx\n(r2x-r1x)",
 StyleBox["= ", "Text"],
 "\[CapitalDelta]rx\n\[CapitalDelta]gx-\[CapitalDelta]rx = \[CapitalDelta]ex"
}], "Subsection",
 CellChangeTimes->{{3.6939406005404882`*^9, 3.693940616693581*^9}, {
  3.694951912024303*^9, 3.694951961912994*^9}, {3.694952032107266*^9, 
  3.694952184718564*^9}, {3.694952236477687*^9, 3.694952239352273*^9}, {
  3.694952550956744*^9, 3.6949525902932053`*^9}, {3.694952650348186*^9, 
  3.694952682936309*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "Equation", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"admissibleHeuristic", "[", 
     RowBox[{"s1_", ",", "s2_", ",", " ", "g1_", ",", "g2_"}], "]"}], ":=", 
    RowBox[{"Max", "[", 
     RowBox[{
      RowBox[{"EuclideanDistance", "[", 
       RowBox[{"g1", ",", "s1"}], "]"}], ",", 
      RowBox[{"EuclideanDistance", "[", 
       RowBox[{"g2", ",", "s2"}], "]"}]}], "]"}]}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "a", " ", "distance", " ", "measurement", " ", "that", " ", "never", " ", 
     "over", " ", "estimates", " ", "to", " ", "possible", " ", "distance"}], 
    " ", "*)"}], " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    StyleBox[
     RowBox[{
     "wallFrictionMoveDirjust", " ", "rotates", " ", "or", " ", "unrotates", 
      " ", "the", " ", "coordinate", " ", "frame"}], "Subsection"], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"wallFrictionMoveDir", "[", 
     RowBox[{
     "dir_", ",", "s1_", ",", "s2_", ",", "g1_", ",", "g2_", ",", "moves_", 
      ",", "pm1_", ",", " ", "pm2_", ",", " ", "\[Epsilon]_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[CapitalDelta]ex", ",", " ", "\[CapitalDelta]ey", ",", " ", 
        RowBox[{"path", " ", "=", " ", "moves"}], ",", " ", 
        RowBox[{"path1", "=", " ", "pm1"}], ",", " ", 
        RowBox[{"path2", "=", " ", "pm2"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"s1", " ", "=", " ", 
          RowBox[{
          "starting", " ", "position", " ", "of", " ", "robot", " ", "1", " ",
            "for", " ", "this", " ", "move"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"s2", " ", "=", " ", 
          RowBox[{
          "starting", " ", "position", " ", "of", " ", "robot", " ", "2", " ",
            "for", " ", "this", " ", "move"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
         "moves", " ", "to", " ", "contact", " ", "wall", " ", "in", " ", 
          "direction", " ", 
          RowBox[{
          "dir", ".", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", "  ", "If"}], " ", "one", " ", "robot", " ",
           "is", " ", "already", " ", "touching", " ", "the", " ", "wall", 
          " ", "in", " ", "direction", " ", "dir"}]}], ",", " ", 
        RowBox[{
         RowBox[{"just", " ", "moves", " ", "the", " ", "second", " ", 
          RowBox[{
          "robot", ".", " ", "\[IndentingNewLine]", " ", "Movements"}], " ", 
          "are", " ", "chosen", " ", "to", " ", "minimize"}], " ", "|", 
         "\[CapitalDelta]ex", "|", " ", "and", " ", "|", "\[CapitalDelta]ey", 
         "|"}], ",", " ", 
        RowBox[{
        "the", " ", "error", " ", "from", " ", "the", " ", "desired", " ", 
         "spacing", " ", "of", " ", "the", " ", "robots"}], ",", " ", 
        RowBox[{
         RowBox[{"where", " ", "\[CapitalDelta]ex"}], " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"g2x", "-", "g1x"}], ")"}], " ", "-", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"r2x", "-", "r1x"}], ")"}], "  ", "and", " ", 
            "\[CapitalDelta]ey"}]}], " ", "=", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"g2y", "-", "g1y"}], ")"}], " ", "-", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"r2y", "-", "r1y"}], ")"}], " ", ".", "  ", "If"}], " ",
             "robots", " ", "would", " ", "end", " ", "up", " ", 
            "overlapping"}]}]}]}], ",", " ", 
        RowBox[{
         RowBox[{"returns", " ", "multiple", " ", "possibilities"}], " ", "+", 
         RowBox[{"/", 
          RowBox[{"-", " ", "\[Epsilon]"}]}]}]}], "  ", "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{"STEP", " ", "1"}], ":", " ", 
         RowBox[{"is", " ", "base", " ", "case", " ", "1", " ", 
          RowBox[{"possible", "?", "  ", "If"}], " ", "so"}]}], ",", " ", 
        RowBox[{"do", " ", "it", " ", "and", " ", "return"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[CapitalDelta]ex", ",", " ", "\[CapitalDelta]ey"}], "}"}], 
        " ", "=", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"g2", "-", "g1"}], ")"}], "-", 
         RowBox[{"(", 
          RowBox[{"s2", "-", "s1"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"-", "0.0001"}], "\[LessEqual]", " ", "\[CapitalDelta]ex", 
           "\[LessEqual]", " ", "0.0001"}], " ", "&&", " ", 
          RowBox[{
           RowBox[{"-", "0.0001"}], "\[LessEqual]", " ", "\[CapitalDelta]ey", 
           " ", "<", " ", "0.0001"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"path", ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
               "g2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               "-", "  ", 
               RowBox[{
               "s2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
               ",", " ", 
              RowBox[{
               RowBox[{
               "g2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
               "-", " ", 
               RowBox[{
               "s2", "\[LeftDoubleBracket]", "2", 
                "\[RightDoubleBracket]"}]}]}], "}"}]}], "]"}], ";", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"path1", ",", "  ", "g1"}], "]"}], ";", " ", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"path2", ",", " ", "g2"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Return", "[", " ", 
           RowBox[{"{", " ", 
            RowBox[{
             RowBox[{"distanceMoved", "[", " ", "path", "]"}], ",", "g1", ",",
              "g2", ",", "path", ",", "path1", ",", "path2", ",", " ", 
             "True"}], " ", "}"}], "  ", "]"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"OTHERWISE", ",", " ", 
         RowBox[{
         "move", " ", "in", " ", "the", " ", "desired", " ", "direction", " ",
           "to", " ", "contact", " ", "a", " ", 
          RowBox[{"wall", ".", "  ", "\[IndentingNewLine]", 
           RowBox[{"We", "'"}]}], "ll", " ", "need", " ", "to", " ", "rotate",
           " ", "the", " ", "coordinate", " ", "frames", " ", "so", " ", 
          "the", " ", "movement", " ", "is", " ", "up"}], ",", " ", 
         RowBox[{
         "and", " ", "ensure", " ", "robot", " ", "1", " ", "is", " ", "the", 
          " ", "first", " ", "to", " ", 
          RowBox[{"contact", ".", "\[IndentingNewLine]", "then"}], " ", 
          RowBox[{"we", "'"}], "ll", " ", "call", " ", "wallFrictionMoveUp"}],
          ",", " ", "\[IndentingNewLine]", 
         RowBox[{"then", " ", "we", " ", "take", " ", "the", " ", "answer"}], 
         ",", " ", 
         RowBox[{
         "and", " ", "reassign", " ", "robot", " ", "1", " ", "and", " ", "2",
           " ", "to", " ", "match", " ", "original", "\[IndentingNewLine]", 
          "then", " ", "rotate", " ", "answer", " ", "into", " ", "original", 
          " ", "coordinate", " ", "frame"}]}], "*)"}], "\[IndentingNewLine]", 
       
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "r1", ",", "r2", ",", "newPathEntries", ",", "s1t", ",", "s2t", ",",
            "g1t", ",", "g2t", ",", "movest", ",", " ", "pm1st", ",", " ", 
           "pm2st"}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"if", " ", "move", " ", "is", " ", "up"}], ",", " ", 
           RowBox[{"call", " ", "wallFrictionMoveUp"}], ",", " ", 
           RowBox[{"otherwise", " ", "rotate", " ", "frame"}], ",", " ", 
           RowBox[{"then", " ", "unrotate", " ", "answers"}]}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"dir", "\[Equal]", "\"\<u\>\""}], ",", " ", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"Print", "[", "\"\<up selected:\>\"", "]"}], ";"}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"newPathEntries", "=", " ", 
              RowBox[{"wallFrictionMoveUp", "[", 
               RowBox[{
               "s1", ",", "s2", ",", "g1", ",", "g2", ",", "moves", ",", 
                "pm1", ",", " ", "pm2", ",", "\[Epsilon]"}], "]"}]}], ";"}]}],
            "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"if", " ", "move", " ", "is", " ", "down"}], ",", " ", 
            RowBox[{"rotate", " ", "frame", " ", "180", " ", "deg"}], ",", 
            " ", 
            RowBox[{"then", " ", "unrotate", " ", "answers"}]}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"dir", "\[Equal]", "\"\<d\>\""}], ",", " ", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"Print", "[", "\"\<down selected:\>\"", "]"}], ";"}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"s1t", ",", "s2t", ",", "g1t", ",", "g2t"}], "}"}], 
              "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate180", ",", 
                RowBox[{"{", 
                 RowBox[{"s1", ",", "s2", ",", "g1", ",", "g2"}], "}"}]}], 
               "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"movest", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate180inplace", ",", "moves"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"pm1st", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate180", ",", "pm1"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"pm2st", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate180", ",", "pm2"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"newPathEntries", "=", " ", 
              RowBox[{"wallFrictionMoveUp", "[", 
               RowBox[{
               "s1t", ",", "s2t", ",", "g1t", ",", "g2t", ",", "movest", ",", 
                "pm1st", ",", " ", "pm2st", ",", "\[Epsilon]"}], "]"}]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{"undo", " ", "the", " ", "change"}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "newPathEntries", "\[LeftDoubleBracket]", "2", 
               "\[RightDoubleBracket]"}], " ", "=", " ", 
              RowBox[{"rotate180", "[", 
               RowBox[{
               "newPathEntries", "\[LeftDoubleBracket]", "2", 
                "\[RightDoubleBracket]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "newPathEntries", "\[LeftDoubleBracket]", "3", 
               "\[RightDoubleBracket]"}], " ", "=", " ", 
              RowBox[{"rotate180", "[", 
               RowBox[{
               "newPathEntries", "\[LeftDoubleBracket]", "3", 
                "\[RightDoubleBracket]"}], " ", "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "newPathEntries", "\[LeftDoubleBracket]", "4", 
               "\[RightDoubleBracket]"}], " ", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate180inplace", ",", " ", 
                RowBox[{
                "newPathEntries", "\[LeftDoubleBracket]", "4", 
                 "\[RightDoubleBracket]"}]}], " ", "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "newPathEntries", "\[LeftDoubleBracket]", "5", 
               "\[RightDoubleBracket]"}], " ", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate180", ",", " ", 
                RowBox[{
                "newPathEntries", "\[LeftDoubleBracket]", "5", 
                 "\[RightDoubleBracket]"}]}], " ", "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "newPathEntries", "\[LeftDoubleBracket]", "6", 
               "\[RightDoubleBracket]"}], " ", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate180", ",", " ", 
                RowBox[{
                "newPathEntries", "\[LeftDoubleBracket]", "6", 
                 "\[RightDoubleBracket]"}]}], " ", "]"}]}], ";"}]}], 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"newPathEntries", "=", 
              RowBox[{"Table", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                  "aPathEntry", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], ",", 
                  RowBox[{"Map", "[", 
                   RowBox[{"rotate180", ",", 
                    RowBox[{
                    "aPathEntry", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}], " ", ",", 
                  RowBox[{"Map", "[", 
                   RowBox[{"rotate180", ",", 
                    RowBox[{
                    "aPathEntry", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Map", "[", 
                   RowBox[{"rotate180inplace", ",", 
                    RowBox[{
                    "aPathEntry", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}]}], "]"}]}], " ", "}"}], 
                "\[IndentingNewLine]", "  ", ",", 
                RowBox[{"{", 
                 RowBox[{"aPathEntry", ",", " ", "newPathEntries"}], "}"}]}], 
               "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"if", " ", "move", " ", "is", " ", "right"}], ",", " ", 
            RowBox[{"rotate", " ", "frame", " ", "90", " ", "deg"}], ",", " ", 
            RowBox[{"then", " ", "unrotate", " ", "answers"}]}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"dir", "\[Equal]", "\"\<r\>\""}], ",", " ", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"Print", "[", "\"\<right selected:\>\"", "]"}], ";"}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"s1t", ",", "s2t", ",", "g1t", ",", "g2t"}], "}"}], 
              "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate90", ",", 
                RowBox[{"{", 
                 RowBox[{"s1", ",", "s2", ",", "g1", ",", "g2"}], "}"}]}], 
               "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"movest", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate90inplace", ",", "moves"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"pm1st", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate90", ",", "pm1"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"pm2st", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate90", ",", "pm2"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"newPathEntries", "=", " ", 
              RowBox[{"wallFrictionMoveUp", "[", 
               RowBox[{
               "s1t", ",", "s2t", ",", "g1t", ",", "g2t", ",", "movest", ",", 
                "pm1st", ",", " ", "pm2st", ",", "\[Epsilon]"}], "]"}]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{"undo", " ", "the", " ", "change"}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"newPathEntries", "=", " ", 
                RowBox[{
                "newPathEntries", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}]}], ";"}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "newPathEntries", "\[LeftDoubleBracket]", "2", 
               "\[RightDoubleBracket]"}], " ", "=", " ", 
              RowBox[{"rotate270", "[", 
               RowBox[{
               "newPathEntries", "\[LeftDoubleBracket]", "2", 
                "\[RightDoubleBracket]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "newPathEntries", "\[LeftDoubleBracket]", "3", 
               "\[RightDoubleBracket]"}], " ", "=", " ", 
              RowBox[{"rotate270", "[", 
               RowBox[{
               "newPathEntries", "\[LeftDoubleBracket]", "3", 
                "\[RightDoubleBracket]"}], " ", "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "newPathEntries", "\[LeftDoubleBracket]", "4", 
               "\[RightDoubleBracket]"}], " ", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate270inplace", ",", " ", 
                RowBox[{
                "newPathEntries", "\[LeftDoubleBracket]", "4", 
                 "\[RightDoubleBracket]"}]}], " ", "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "newPathEntries", "\[LeftDoubleBracket]", "5", 
               "\[RightDoubleBracket]"}], " ", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate270", ",", " ", 
                RowBox[{
                "newPathEntries", "\[LeftDoubleBracket]", "5", 
                 "\[RightDoubleBracket]"}]}], " ", "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "newPathEntries", "\[LeftDoubleBracket]", "6", 
               "\[RightDoubleBracket]"}], " ", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate270", ",", " ", 
                RowBox[{
                "newPathEntries", "\[LeftDoubleBracket]", "6", 
                 "\[RightDoubleBracket]"}]}], " ", "]"}]}]}]}], 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"newPathEntries", "=", 
              RowBox[{"Table", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                  "aPathEntry", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], ",", 
                  RowBox[{"Map", "[", 
                   RowBox[{"rotate90", ",", 
                    RowBox[{
                    "aPathEntry", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}], " ", ",", 
                  RowBox[{"Map", "[", 
                   RowBox[{"rotate90", ",", 
                    RowBox[{
                    "aPathEntry", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Map", "[", 
                   RowBox[{"rotate90inplace", ",", 
                    RowBox[{
                    "aPathEntry", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}]}], "]"}]}], " ", "}"}], 
                "\[IndentingNewLine]", "  ", ",", 
                RowBox[{"{", 
                 RowBox[{"aPathEntry", ",", " ", "newPathEntries"}], "}"}]}], 
               "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"if", " ", "move", " ", "is", " ", "left"}], ",", " ", 
            RowBox[{"rotate", " ", "frame", " ", "270", " ", "deg"}], ",", 
            " ", 
            RowBox[{"then", " ", "unrotate", " ", "answers"}]}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"dir", "\[Equal]", "\"\<l\>\""}], ",", " ", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"Print", "[", "\"\<left selected:\>\"", "]"}], ";"}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"s1t", ",", "s2t", ",", "g1t", ",", "g2t"}], "}"}], 
              "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate270", ",", 
                RowBox[{"{", 
                 RowBox[{"s1", ",", "s2", ",", "g1", ",", "g2"}], "}"}]}], 
               "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"movest", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate270inplace", ",", "moves"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"pm1st", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate270", ",", "pm1"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"pm2st", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate270", ",", "pm2"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"newPathEntries", "=", " ", 
              RowBox[{"wallFrictionMoveUp", "[", 
               RowBox[{
               "s1t", ",", "s2t", ",", "g1t", ",", "g2t", ",", "movest", ",", 
                "pm1st", ",", " ", "pm2st", ",", "\[Epsilon]"}], "]"}]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"newPathEntries", "=", " ", 
                RowBox[{
                "newPathEntries", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}]}], ";"}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "newPathEntries", "\[LeftDoubleBracket]", "2", 
               "\[RightDoubleBracket]"}], " ", "=", " ", 
              RowBox[{"rotate90", "[", 
               RowBox[{
               "newPathEntries", "\[LeftDoubleBracket]", "2", 
                "\[RightDoubleBracket]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "newPathEntries", "\[LeftDoubleBracket]", "3", 
               "\[RightDoubleBracket]"}], " ", "=", " ", 
              RowBox[{"rotate90", "[", 
               RowBox[{
               "newPathEntries", "\[LeftDoubleBracket]", "3", 
                "\[RightDoubleBracket]"}], " ", "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "newPathEntries", "\[LeftDoubleBracket]", "4", 
               "\[RightDoubleBracket]"}], " ", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate90inplace", ",", " ", 
                RowBox[{
                "newPathEntries", "\[LeftDoubleBracket]", "4", 
                 "\[RightDoubleBracket]"}]}], " ", "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "newPathEntries", "\[LeftDoubleBracket]", "5", 
               "\[RightDoubleBracket]"}], " ", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate90", ",", " ", 
                RowBox[{
                "newPathEntries", "\[LeftDoubleBracket]", "5", 
                 "\[RightDoubleBracket]"}]}], " ", "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "newPathEntries", "\[LeftDoubleBracket]", "6", 
               "\[RightDoubleBracket]"}], " ", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate90", ",", " ", 
                RowBox[{
                "newPathEntries", "\[LeftDoubleBracket]", "6", 
                 "\[RightDoubleBracket]"}]}], " ", "]"}]}]}]}], 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"undo", " ", "the", " ", "change"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"newPathEntries", "=", 
              RowBox[{"Table", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                  "aPathEntry", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], ",", 
                  RowBox[{"Map", "[", 
                   RowBox[{"rotate270", ",", 
                    RowBox[{
                    "aPathEntry", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}], " ", ",", 
                  RowBox[{"Map", "[", 
                   RowBox[{"rotate270", ",", 
                    RowBox[{
                    "aPathEntry", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Map", "[", 
                   RowBox[{"rotate270inplace", ",", 
                    RowBox[{
                    "aPathEntry", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}]}], "]"}]}], " ", "}"}], 
                "\[IndentingNewLine]", "  ", ",", 
                RowBox[{"{", 
                 RowBox[{"aPathEntry", ",", " ", "newPathEntries"}], "}"}]}], 
               "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Return", " ", "[", "newPathEntries", "]"}]}]}], 
        "\[IndentingNewLine]", "]"}]}]}], 
     RowBox[{"(*", 
      RowBox[{"end", " ", "inner", " ", "module"}], "*)"}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
   RowBox[{"(*", 
    RowBox[{"end", " ", "outer", " ", "module"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    StyleBox[
     RowBox[{"Algorithm", " ", "wallFrictionMoveUp"}], "Subsection"], 
    StyleBox[" ", "Subsection"], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"wallFrictionMoveUp", "[", 
     RowBox[{
     "r1in_", ",", "r2in_", ",", "g1in_", ",", "g2in_", ",", "moves_", ",", 
      "pm1_", ",", " ", "pm2_", " ", ",", " ", "\[Epsilon]_"}], "]"}], ":=", 
    " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "r1", ",", "r2", ",", "g1", ",", "g2", ",", "\[CapitalDelta]gx", ",", 
        "\[CapitalDelta]gy", ",", "m1", ",", "m2", ",", "\[CapitalDelta]tgx", 
        ",", "\[CapitalDelta]tgy", ",", "\[IndentingNewLine]", 
        "\[CapitalDelta]ey", " ", ",", "\[CapitalDelta]ex", " ", ",", 
        "\[IndentingNewLine]", 
        RowBox[{"L", "=", " ", "1"}], " ", 
        RowBox[{"(*", 
         RowBox[{"size", " ", "of", " ", "workspace"}], "*)"}], ",", 
        "\[IndentingNewLine]", "\[CapitalDelta]r", 
        RowBox[{"(*", 
         RowBox[{
         "current", " ", "x", " ", "and", " ", "y", " ", "difference"}], 
         "*)"}], ",", "\[IndentingNewLine]", 
        RowBox[{"path1", "=", " ", "pm1"}], 
        RowBox[{"(*", 
         RowBox[{"desired", " ", "moves", " ", "for", " ", "r1"}], "*)"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"path2", "=", " ", "pm2"}], 
        RowBox[{"(*", 
         RowBox[{"desired", " ", "moves", " ", "for", " ", "r2"}], "*)"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"path", " ", "=", " ", "moves"}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"isMirrored", " ", "=", " ", "False"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"isFlipped", " ", "=", " ", "False"}]}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "robot", " ", "1", " ", "must", " ", "be", " ", "the", " ", "top", 
         " ", "left", " ", 
         RowBox[{"robot", ".", " ", "If"}], " ", "it", " ", "is", " ", "not", 
         " ", "the", " ", "top", " ", "robot"}], ",", " ", 
        RowBox[{"flip", " ", "entries"}], ",", " ", 
        RowBox[{
        "if", " ", "it", " ", "is", " ", "not", " ", "the", " ", "left", " ", 
         "robot"}], ",", " ", 
        RowBox[{"mirror", " ", 
         RowBox[{"entries", ".", " ", "Remember"}], " ", "to", " ", "switch", 
         " ", "again", " ", "at", " ", 
         RowBox[{"end", "!"}], "\[IndentingNewLine]", " ", "then", " ", 
         "move", " ", "robot", "  ", "while", " ", "first", " ", "robot", " ",
          "is", " ", "touching", " ", "wall"}]}], "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
          "r1in", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "<", 
          RowBox[{
          "r2in", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
            "r1in", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            ">", 
            RowBox[{
            "r2in", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"r1", ",", "r2", ",", "g1", ",", "g2"}], "}"}], "=", 
             RowBox[{"{", 
              RowBox[{"r2in", ",", "r1in", ",", "g2in", ",", "g1in"}], 
              "}"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"isFlipped", " ", "=", " ", "True"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"r1", ",", "r2", ",", "g1", ",", "g2"}], "}"}], "=", 
             " ", 
             RowBox[{"Map", "[", 
              RowBox[{"mirror", ",", " ", 
               RowBox[{"{", 
                RowBox[{"r2in", ",", "r1in", ",", "g2in", ",", "g1in"}], 
                "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"path", " ", "=", " ", 
             RowBox[{"Map", "[", 
              RowBox[{"mirrorInplace", ",", " ", "moves"}], "]"}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"isFlipped", " ", "=", " ", "True"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"isMirrored", " ", "=", " ", "True"}]}]}], "]"}], ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
             "r1in", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             ">", 
             RowBox[{
             "r2in", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
             ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"r1", ",", "r2", ",", "g1", ",", "g2"}], "}"}], "=", 
              " ", 
              RowBox[{"Map", "[", 
               RowBox[{"mirror", ",", " ", 
                RowBox[{"{", 
                 RowBox[{"r1in", ",", "r2in", ",", "g1in", ",", "g2in"}], 
                 "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"path", " ", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"mirrorInplace", ",", " ", "moves"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"isMirrored", "=", " ", "True"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"r1", ",", "r2", ",", "g1", ",", "g2"}], "}"}], "=", 
             RowBox[{"{", 
              RowBox[{"r1in", ",", "r2in", ",", "g1in", ",", "g2in"}], 
              "}"}]}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[CapitalDelta]gx", ",", "\[CapitalDelta]gy"}], "}"}], " ", 
        "=", " ", 
        RowBox[{"g2", "-", "g1"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "If", " ", "the", " ", "second", " ", "robot", " ", "is", " ", 
          "already", " ", "touching", " ", "the", " ", "up", " ", "wall"}], 
         ",", " ", 
         RowBox[{"just", " ", 
          RowBox[{"return", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
          "r2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
          "\[Equal]", " ", "1"}], ",", " ", 
         RowBox[{"Return", " ", "[", 
          RowBox[{"{", 
           RowBox[{
           "Infinity", ",", " ", "r1", ",", " ", "r2", ",", " ", "path", ",", 
            " ", "path1", ",", " ", "path2", " ", ",", " ", "False"}], "}"}], 
          "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"if", " ", "the", " ", "goal", " ", "\[CapitalDelta]gx"}], 
         ",", 
         RowBox[{"\[CapitalDelta]gy", " ", "is", " ", "achievable"}], ",", 
         " ", 
         RowBox[{"do", " ", "it", " ", "in", " ", "one", " ", 
          RowBox[{"move", ".", " ", "Otherwise"}]}], ","}], " ", "*)"}], " ", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
           "r2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "-", 
           " ", 
           RowBox[{
           "r1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "-", 
           "1", "+", 
           RowBox[{"2", "\[Epsilon]"}]}], ">", "   ", "\[CapitalDelta]gx"}], 
         " ", ",", " ", 
         RowBox[{"\[CapitalDelta]tgx", " ", "=", " ", 
          RowBox[{
           RowBox[{
           "r2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "-", 
           " ", 
           RowBox[{
           "r1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "-", 
           "1", "+", 
           RowBox[{"2", "\[Epsilon]"}]}]}], ",", "  ", 
         RowBox[{
         "\[CapitalDelta]tgx", " ", "=", "  ", "\[CapitalDelta]gx"}]}], "]"}],
        ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", " ", 
        RowBox[{
         RowBox[{"\[CapitalDelta]gy", " ", ">", " ", "0"}], ",", "  ", 
         RowBox[{"\[CapitalDelta]tgy", " ", "=", " ", "0"}], ",", " ", 
         RowBox[{"\[CapitalDelta]tgy", " ", "=", " ", "\[CapitalDelta]gy"}]}],
         "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"\[CapitalDelta]gy", "  ", "<", " ", 
          RowBox[{
           RowBox[{
           "r2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "-", 
           " ", 
           RowBox[{
           "r1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
         ",", "  ", 
         RowBox[{"\[CapitalDelta]tgy", " ", "=", " ", 
          RowBox[{
           RowBox[{
           "r2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "-", 
           " ", 
           RowBox[{
           "r1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}]}],
         "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
            "r2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "-",
             " ", 
            RowBox[{
            "r1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "-",
             "1", "+", " ", 
            RowBox[{"2", "\[Epsilon]"}]}], "\[LessEqual]", "  ", 
           "\[CapitalDelta]gx", " ", "\[LessEqual]", "  ", "1"}], "  ", "&&", 
          " ", 
          RowBox[{
           RowBox[{
            RowBox[{
            "r2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "-",
             " ", 
            RowBox[{
            "r1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
           " ", "\[LessEqual]", " ", "\[CapitalDelta]gy", "\[LessEqual]", 
           "  ", "0"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", "\"\<Achievable\>\"", " ", "]"}], ";"}], 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"in", " ", "Achievable", " ", "range"}], "*)"}], 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
          "move", " ", "r1", " ", "and", " ", "r2", " ", "so", " ", "that", 
           " ", "r1", " ", "will", " ", "touch", " ", "the", " ", "up", " ", 
           "wall", " ", "in", " ", "the", " ", "line", " ", "of", " ", "the", 
           " ", "goal"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"m1", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             FractionBox[
              RowBox[{"1", "-", 
               RowBox[{
               "r1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
              RowBox[{"2", "-", 
               RowBox[{
               "g1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
               "-", " ", 
               RowBox[{
               "r1", "\[LeftDoubleBracket]", "2", 
                "\[RightDoubleBracket]"}]}]], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
               "g1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               "-", 
               RowBox[{
               "r1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
               ")"}]}], ",", 
            RowBox[{"1", "-", 
             RowBox[{
             "r1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}],
            "}"}]}], ",", " ", 
         RowBox[{"m1", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"1", "-", " ", 
             RowBox[{
             "r1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}],
            "}"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
           "r2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "+", 
           " ", 
           RowBox[{
           "m1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
          " ", ">", " ", "1"}], " ", ",", " ", 
         RowBox[{
          RowBox[{
          "m1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], " ", 
          "=", " ", 
          RowBox[{"1", "-", 
           RowBox[{
           "r2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], 
         ",", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
             "r2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "+", " ", 
             RowBox[{
             "m1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
            "<", " ", "0"}], " ", ",", " ", 
           RowBox[{
            RowBox[{
            "m1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], " ",
             "=", " ", 
            RowBox[{"-", 
             RowBox[{
             "r2", "\[LeftDoubleBracket]", "1", 
              "\[RightDoubleBracket]"}]}]}]}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
             "r1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             " ", "+", " ", 
             RowBox[{
             "m1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
            ">", " ", 
            RowBox[{"1", "-", "\[Epsilon]"}]}], ",", " ", 
           RowBox[{
            RowBox[{
            "m1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], " ",
             "=", " ", 
            RowBox[{"1", "-", "\[Epsilon]", "-", 
             RowBox[{
             "r1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}],
            " ", ",", " ", 
           RowBox[{"If", " ", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
               "r1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               " ", "+", "  ", 
               RowBox[{
               "m1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
               "<", " ", "\[Epsilon]"}], ",", " ", 
             RowBox[{
              RowBox[{
              "m1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              " ", "=", " ", 
              RowBox[{"\[Epsilon]", " ", "-", " ", 
               RowBox[{
               "r1", "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}]}]}]}], "]"}]}], "]"}], ";"}], 
        "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
          "r1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], " ", 
          "\[Equal]", " ", "1"}], ",", " ", 
         RowBox[{"m1", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], ",", " ", 
         RowBox[{"If", "[", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
            "m1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            "\[Equal]", "0"}], ",", "  ", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                "r1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                "\[Equal]", " ", "1"}], " ", "||", " ", 
               RowBox[{
                RowBox[{
                "r2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                "\[Equal]", " ", "1"}]}], ",", " ", 
              RowBox[{
               RowBox[{
               "m1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "-=",
                " ", "\[Epsilon]"}]}], "]"}], ";", " ", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                "r1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                "\[Equal]", " ", "0"}], "||", " ", 
               RowBox[{
                RowBox[{
                "r2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                "\[Equal]", " ", "0"}]}], ",", " ", 
              RowBox[{
               RowBox[{
               "m1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               " ", "+=", " ", "\[Epsilon]"}]}], "]"}]}]}], "]"}]}], "]"}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", " ", "[", "\"\<r1 is:\>\"", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Print", "[", "r1", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", "\"\<m1 is\>\"", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Print", "[", "m1", "]"}], ";"}], "*)"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"r1", " ", "+=", " ", "m1"}], ";", " ", 
       RowBox[{"r2", "+=", " ", "m1"}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[CapitalDelta]ex", ",", " ", "\[CapitalDelta]ey"}], "}"}], 
        " ", "=", " ", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[CapitalDelta]tgx", ",", " ", "\[CapitalDelta]tgy"}], 
          "}"}], "-", 
         RowBox[{"(", 
          RowBox[{"r2", "-", "r1"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "move", " ", "r2", " ", "to", " ", "get", " ", "correct", " ", 
         "spacing"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"\[CapitalDelta]ex", " ", "\[GreaterEqual]", "  ", "0"}], 
         " ", ",", " ", 
         RowBox[{"m2", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Min", "[", 
             RowBox[{
              RowBox[{"\[CapitalDelta]tgx", "-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                 "r2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                  "-", 
                 RowBox[{
                 "r1", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}]}], ")"}]}], ",", " ", 
              RowBox[{"1", "-", 
               RowBox[{
               "r2", "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}]}]}], "]"}], ",", 
            RowBox[{"\[CapitalDelta]tgy", "-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
               "r2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
               "-", 
               RowBox[{
               "r1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}],
               ")"}]}]}], " ", "}"}]}], ",", " ", 
         RowBox[{"m2", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Max", "[", 
             RowBox[{
              RowBox[{"\[CapitalDelta]tgx", "-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                 "r2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                  "-", 
                 RowBox[{
                 "r1", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}]}], ")"}]}], ",", " ", 
              RowBox[{"-", 
               RowBox[{
               "r2", "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}]}]}], "]"}], ",", 
            RowBox[{"\[CapitalDelta]tgy", "-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
               "r2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
               "-", 
               RowBox[{
               "r1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}],
               ")"}]}]}], " ", "}"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
            "r1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "-", 
            RowBox[{"\[Epsilon]", "/", "2"}]}], "\[LessEqual]", " ", 
           RowBox[{
            RowBox[{
            "r2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], " ",
             "+", 
            RowBox[{
            "m2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
           " ", "\[LessEqual]", " ", 
           RowBox[{
            RowBox[{
            "r1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "+", 
            RowBox[{"\[Epsilon]", "/", "2"}]}]}], "&&", " ", 
          RowBox[{
           RowBox[{
           "r1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
           "\[Equal]", "  ", 
           RowBox[{
            RowBox[{
            "r2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "+",
             " ", 
            RowBox[{
            "m2", "\[LeftDoubleBracket]", "2", 
             "\[RightDoubleBracket]"}]}]}]}], " ", ",", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
             "r2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "+", " ", 
             RowBox[{
             "m2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
            "\[GreaterEqual]", "   ", "\[Epsilon]"}], ",", " ", 
           RowBox[{
            RowBox[{
            "m2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], " ",
             "+=", 
            RowBox[{
             RowBox[{
             "r1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "-", "\[Epsilon]", "-", 
             RowBox[{
             "r2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "-", " ", 
             RowBox[{
             "m2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}],
            ",", " ", 
           RowBox[{
            RowBox[{
            "m2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], " ",
             "+=", 
            RowBox[{
             RowBox[{
             "r1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "+", "\[Epsilon]", "-", 
             RowBox[{
             "r2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "-", " ", 
             RowBox[{
             "m2", "\[LeftDoubleBracket]", "1", 
              "\[RightDoubleBracket]"}]}]}]}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
          "r2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], " ", 
          "\[Equal]", " ", "1"}], ",", " ", 
         RowBox[{"m2", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"path", ",", " ", "m1"}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"isMirrored", ",", 
         RowBox[{"If", "[", 
          RowBox[{"isFlipped", ",", " ", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"path1", ",", " ", 
              RowBox[{"mirror", "[", "r2", "]"}]}], "]"}], ";", " ", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"path2", ",", 
              RowBox[{"mirror", "[", "r1", "]"}]}], "]"}]}], ",", " ", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"path1", ",", " ", 
              RowBox[{"mirror", "[", "r1", "]"}]}], "]"}], ";", " ", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"path2", ",", 
              RowBox[{"mirror", "[", "r2", "]"}]}], "]"}]}]}], "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{"isFlipped", ",", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"path1", ",", " ", "r2"}], "]"}], ";", " ", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"path2", ",", "r1"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"path1", ",", "r1"}], "]"}], ";", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"path2", ",", "r2"}], "]"}]}]}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"r2", " ", "+=", " ", "m2"}], ";", "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"path", ",", " ", "m2"}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Change", " ", "the", " ", "robots", " ", "back", " ", "if", " ", 
         "they", " ", "were", " ", "mirrored"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"isMirrored", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"path", " ", "=", " ", 
           RowBox[{"Map", "[", 
            RowBox[{"mirrorInplace", ",", " ", "path"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"r1", ",", "r2"}], "}"}], " ", "=", " ", 
           RowBox[{"Map", "[", 
            RowBox[{"mirror", ",", 
             RowBox[{"{", 
              RowBox[{"r1", ",", "r2"}], "}"}]}], "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Change", " ", "the", " ", "robots", " ", "back", " ", "if", " ", 
         "they", " ", "were", " ", "flipped"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"isFlipped", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"path1", ",", " ", "r2"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"path2", ",", "r1"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Return", "[", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"If", "[", " ", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "0.00001"}], "<", 
                  RowBox[{
                  "m2", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], "<", "0.00001"}], " ", "&&", 
                 " ", 
                 RowBox[{
                  RowBox[{"-", "0.00001"}], "<", 
                  RowBox[{
                  "m2", "\[LeftDoubleBracket]", "2", 
                   "\[RightDoubleBracket]"}], "<", "0.00001"}]}], "||", " ", 
                RowBox[{
                 RowBox[{"Length", "[", "path", "]"}], ">", " ", "8"}]}], ",",
                "Infinity", ",", 
               RowBox[{
                RowBox[{"distanceMoved", "[", " ", "path", "]"}], "+", " ", 
                RowBox[{"admissibleHeuristic", "[", 
                 RowBox[{"r2", ",", "r1", ",", "g2", ",", "g1"}], "]"}]}]}], 
              "]"}], ",", "r2", ",", "r1", ",", "path", ",", "path1", ",", 
             " ", "path2", ",", " ", "False"}], "}"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"path1", ",", " ", "r1"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"path2", ",", "r2"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Return", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"If", "[", " ", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "0.00001"}], "<", 
                  RowBox[{
                  "m2", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], "<", "0.00001"}], " ", "&&", 
                 " ", 
                 RowBox[{
                  RowBox[{"-", "0.00001"}], "<", 
                  RowBox[{
                  "m2", "\[LeftDoubleBracket]", "2", 
                   "\[RightDoubleBracket]"}], "<", "0.00001"}]}], "||", " ", 
                RowBox[{
                 RowBox[{"Length", "[", "path", "]"}], ">", " ", "8"}]}], ",",
                " ", "Infinity", ",", 
               RowBox[{
                RowBox[{"distanceMoved", "[", " ", "path", "]"}], "+", " ", 
                RowBox[{"admissibleHeuristic", "[", 
                 RowBox[{"r1", ",", "r2", ",", "g1", ",", "g2"}], "]"}]}]}], 
              "]"}], ",", "r1", ",", "r2", ",", "path", ",", "path1", ",", 
             "path2", " ", ",", "False"}], " ", "}"}], "  ", "]"}]}]}], 
        "]"}]}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "rotate", " ", "the", " ", "coordinate", " ", "frame", " ", "90", " ", 
     "degrees"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rotate270", "[", "r_", "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "-", " ", 
       RowBox[{"r", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
      ",", " ", 
      RowBox[{"r", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
     "}"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", "changes", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rotate90inplace", "[", "r_", "]"}], ":=", 
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"r", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
      ",", " ", 
      RowBox[{"-", 
       RowBox[{
       "r", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], 
     "}"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rotate90", "[", "r_", "]"}], " ", ":=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"r", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
      ",", 
      RowBox[{"1", "-", " ", 
       RowBox[{
       "r", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], 
     "}"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rotate270inplace", "[", "r_", "]"}], " ", ":=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"r", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
      ",", " ", 
      RowBox[{"r", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
     "}"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rotate180", "[", "r_", "]"}], " ", ":=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "-", 
       RowBox[{"r", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
      ",", 
      RowBox[{"1", "-", " ", 
       RowBox[{
       "r", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
     "}"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rotate180inplace", "[", "r_", "]"}], " ", ":=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"r", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
      ",", 
      RowBox[{"-", " ", 
       RowBox[{
       "r", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
     "}"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mirror", "[", "r_", "]"}], " ", ":=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "-", 
       RowBox[{"r", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
      ",", 
      RowBox[{"r", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
     "}"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mirrorInplace", "[", "r_", "]"}], ":=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"r", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
      ",", 
      RowBox[{"r", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
     "}"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"distanceMoved", "[", "moves_", "]"}], ":=", " ", 
    RowBox[{"Total", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Norm", "[", "m", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"m", ",", "moves"}], "}"}]}], "]"}], "]"}]}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6939408528236227`*^9, 3.693940888469677*^9}, {
   3.6939411305091133`*^9, 3.693941178437819*^9}, {3.693941387876739*^9, 
   3.6939413899004917`*^9}, {3.693941656965639*^9, 3.693941681444265*^9}, {
   3.693941786064103*^9, 3.693941802688339*^9}, {3.693941835689363*^9, 
   3.6939420230542583`*^9}, {3.6939420804095287`*^9, 3.69394220605469*^9}, {
   3.69394230325594*^9, 3.693942380441125*^9}, 3.694163599973598*^9, {
   3.6941707339115133`*^9, 3.6941708591178207`*^9}, {3.694171348574038*^9, 
   3.694171365971092*^9}, {3.694171399959486*^9, 3.694171476406212*^9}, {
   3.694171519220065*^9, 3.694171542443083*^9}, {3.6941717436032553`*^9, 
   3.694171751146134*^9}, {3.694171902501532*^9, 3.6941719175283003`*^9}, 
   3.6941721333534937`*^9, {3.694172366858963*^9, 3.694172475176903*^9}, {
   3.694172510680943*^9, 3.694172536105095*^9}, {3.694172590711431*^9, 
   3.6941726232159843`*^9}, 3.6941726573278637`*^9, {3.694173016287388*^9, 
   3.694173065879181*^9}, {3.6941731495712976`*^9, 3.694173288609469*^9}, {
   3.694175601608252*^9, 3.694175608959155*^9}, {3.6941818589940863`*^9, 
   3.694181883908156*^9}, 3.694189617187634*^9, 3.694373329087708*^9, {
   3.6944577291886044`*^9, 3.6944579604868402`*^9}, {3.6944580908461933`*^9, 
   3.69445816056343*^9}, {3.6944590515411797`*^9, 3.694459057212715*^9}, {
   3.694789332143281*^9, 3.6947893625847692`*^9}, {3.694797839893197*^9, 
   3.694797986266018*^9}, {3.694798020460239*^9, 3.694798110533209*^9}, {
   3.694802568905859*^9, 3.6948025759023943`*^9}, {3.694952267818956*^9, 
   3.694952387671607*^9}, {3.69495242737435*^9, 3.6949524933882837`*^9}, {
   3.694952716828657*^9, 3.694952875425663*^9}, {3.694952961359168*^9, 
   3.69495311078391*^9}, {3.694953177959278*^9, 3.694953206904295*^9}, 
   3.694953353572682*^9, {3.69495374669226*^9, 3.6949537480438547`*^9}, {
   3.694953989397366*^9, 3.69495432042314*^9}, {3.6949543709899073`*^9, 
   3.694954402358076*^9}, {3.6949544336109457`*^9, 3.694954489316423*^9}, {
   3.694954519838024*^9, 3.694954619638063*^9}, {3.694954676439558*^9, 
   3.6949549862473917`*^9}, {3.694955026267868*^9, 3.694955089067938*^9}, {
   3.694955263726976*^9, 3.6949552675503683`*^9}, {3.694955317972886*^9, 
   3.694955348540511*^9}, {3.694955389960005*^9, 3.694955546827735*^9}, {
   3.694955905292438*^9, 3.694956138265617*^9}, {3.6949561742960587`*^9, 
   3.694956339677886*^9}, {3.694956481622334*^9, 3.6949567563090343`*^9}, {
   3.694956795713811*^9, 3.694956926826346*^9}, {3.694956977884089*^9, 
   3.694957174068321*^9}, {3.694957349151458*^9, 3.694957381496011*^9}, {
   3.694981421904965*^9, 3.694981434264557*^9}, {3.694981502435019*^9, 
   3.694981509186743*^9}, {3.6949827486900253`*^9, 3.6949827590582523`*^9}, {
   3.694982827370994*^9, 3.694982832648131*^9}, {3.6949828780827103`*^9, 
   3.6949829576756973`*^9}, {3.694983018442698*^9, 3.6949830212590523`*^9}, {
   3.694983854991313*^9, 3.694983877417363*^9}, {3.694984043135763*^9, 
   3.694984044141467*^9}, {3.694984389561797*^9, 3.694984437264772*^9}, {
   3.6949847596682*^9, 3.694984911493659*^9}, {3.694984957002645*^9, 
   3.69498496866507*^9}, 3.6949864345263557`*^9, {3.694986541891062*^9, 
   3.694986589061227*^9}, {3.694986666712188*^9, 3.6949867112138777`*^9}, {
   3.694986883071473*^9, 3.6949869251433687`*^9}, {3.69498695674946*^9, 
   3.694986958598103*^9}, {3.6949870106651287`*^9, 3.694987051101959*^9}, {
   3.6949870813993473`*^9, 3.6949872322657433`*^9}, {3.6949872635489893`*^9, 
   3.694987266097929*^9}, {3.6949872991364193`*^9, 3.69498733320438*^9}, {
   3.694987380288198*^9, 3.694987415337792*^9}, {3.694987497384099*^9, 
   3.694987530625642*^9}, {3.695114132261832*^9, 3.695114247436159*^9}, {
   3.695114302337232*^9, 3.695114383601592*^9}, {3.695114460485672*^9, 
   3.6951144985194893`*^9}, {3.6951145715752687`*^9, 
   3.6951146459410954`*^9}, {3.695114914419959*^9, 3.695114915116577*^9}, {
   3.695115017420889*^9, 3.695115018785763*^9}, {3.695115293525174*^9, 
   3.695115293993541*^9}, {3.695115382705942*^9, 3.695115414742238*^9}, {
   3.6951333867619953`*^9, 3.6951334311980963`*^9}, 3.695133478801249*^9, {
   3.6951336230798492`*^9, 3.695133634115988*^9}, {3.695133703290842*^9, 
   3.695133718051303*^9}, {3.695133810130382*^9, 3.695133825810014*^9}, {
   3.6951338584057207`*^9, 3.695133884143395*^9}, {3.6951339403553867`*^9, 
   3.695133941458097*^9}, {3.69513423096178*^9, 3.695134231654674*^9}, {
   3.695134643114645*^9, 3.6951346434458303`*^9}, {3.695134831350284*^9, 
   3.695134853876893*^9}, {3.695134907097835*^9, 3.6951349119046392`*^9}, {
   3.695134952165106*^9, 3.695135007544053*^9}, {3.6951350460919933`*^9, 
   3.6951350502816553`*^9}, {3.695135114746902*^9, 3.6951351563867073`*^9}, {
   3.695135215504397*^9, 3.695135219797923*^9}, {3.695135299605201*^9, 
   3.695135367288703*^9}, {3.695135433880102*^9, 3.6951354481919127`*^9}, {
   3.6951355107577868`*^9, 3.695135511981627*^9}, {3.695135747320032*^9, 
   3.695135747951415*^9}, {3.695135862087146*^9, 3.695135866518602*^9}, {
   3.6951359073372097`*^9, 3.695135914691043*^9}, 3.695135951951088*^9, {
   3.695136054858759*^9, 3.695136072862482*^9}, {3.6951361151681013`*^9, 
   3.6951361690937433`*^9}, {3.695136219265359*^9, 3.695136290339938*^9}, {
   3.6951363264918213`*^9, 3.6951363811083107`*^9}, {3.695136443006104*^9, 
   3.69513645214433*^9}, {3.695136840968021*^9, 3.69513688583282*^9}, {
   3.695136920862331*^9, 3.695136935382739*^9}, {3.69513741693909*^9, 
   3.6951374185148478`*^9}, {3.69513745049783*^9, 3.6951375855740547`*^9}, {
   3.695147689239015*^9, 3.695147763713726*^9}, {3.695147799177663*^9, 
   3.695147802009328*^9}, {3.695147851779582*^9, 3.695147857152445*^9}, {
   3.695148018869647*^9, 3.695148035640382*^9}, {3.695148146201255*^9, 
   3.695148168299041*^9}, {3.695148219492519*^9, 3.695148245994914*^9}, {
   3.695148282655971*^9, 3.695148315423513*^9}, {3.6951486744618597`*^9, 
   3.6951486998679733`*^9}, {3.695149203882124*^9, 3.695149211250046*^9}, {
   3.6951498369151897`*^9, 3.695149878423071*^9}, {3.695150342610035*^9, 
   3.6951503428009367`*^9}, {3.695150377088316*^9, 3.6951504009073687`*^9}, {
   3.69515047343148*^9, 3.695150579048259*^9}, {3.6951506350294323`*^9, 
   3.695150673207161*^9}, {3.695150830569168*^9, 3.695150844865888*^9}, {
   3.6951508978807364`*^9, 3.695150937610647*^9}, {3.6951511652811604`*^9, 
   3.695151242626869*^9}, 3.6953966366060257`*^9, {3.695471085896965*^9, 
   3.695471088296464*^9}, {3.695471323503928*^9, 3.695471326260983*^9}, {
   3.695478289964625*^9, 3.695478296729035*^9}, {3.6954783633978148`*^9, 
   3.695478367493156*^9}, {3.6954789728915052`*^9, 3.695478975939292*^9}, {
   3.695479257495571*^9, 3.6954793569462357`*^9}, {3.695479702577841*^9, 
   3.695479718501836*^9}, {3.6954797784820967`*^9, 3.695479793568891*^9}, {
   3.695479895858411*^9, 3.6954799569808807`*^9}, {3.695480257573141*^9, 
   3.69548025787694*^9}, {3.695480307150652*^9, 3.6954803128834763`*^9}, {
   3.695480375532711*^9, 3.6954803764900312`*^9}, {3.695480470909746*^9, 
   3.69548054685798*^9}, {3.6954809610418653`*^9, 3.695480962353393*^9}, {
   3.695481024699416*^9, 3.695481122181431*^9}, {3.6954811678133383`*^9, 
   3.695481170875988*^9}, {3.695482098515862*^9, 3.695482098841221*^9}, {
   3.695482761714617*^9, 3.6954827974500837`*^9}, {3.695482828261257*^9, 
   3.695482994301621*^9}, {3.695483252241049*^9, 3.695483263394676*^9}, {
   3.695483305453971*^9, 3.695483351217512*^9}, {3.69548381894867*^9, 
   3.695483843485095*^9}, {3.6954838879243107`*^9, 3.6954839618541403`*^9}, {
   3.695484008126157*^9, 3.695484032181066*^9}, {3.695484084960411*^9, 
   3.6954841555511923`*^9}, {3.695484216252211*^9, 3.695484232715179*^9}, 
   3.695484330982102*^9, {3.69549427029095*^9, 3.69549428084568*^9}, {
   3.6955067386771097`*^9, 3.695506774703062*^9}, {3.6955073550906477`*^9, 
   3.695507400916543*^9}, 3.6955074406954536`*^9, {3.695507540803385*^9, 
   3.695507555456018*^9}, {3.6955474506884117`*^9, 3.695547480941148*^9}, {
   3.695576443923888*^9, 3.69557644727636*^9}, {3.695645090927307*^9, 
   3.6956450913175783`*^9}, {3.69564515910039*^9, 3.695645216198867*^9}, {
   3.6956506134173107`*^9, 3.695650679002578*^9}, {3.695650743880548*^9, 
   3.695650927951334*^9}, {3.6956511113398848`*^9, 3.695651147834529*^9}, {
   3.6956558012652903`*^9, 3.695655804838427*^9}, {3.695655837990233*^9, 
   3.695655856141406*^9}, {3.695749832400282*^9, 3.69574990325404*^9}, {
   3.695751327929574*^9, 3.695751341306918*^9}, {3.695822526149757*^9, 
   3.695822608560431*^9}, {3.695822676770955*^9, 3.695822756831212*^9}, {
   3.695822839305072*^9, 3.695822843290681*^9}, {3.6958229134022627`*^9, 
   3.695822947392231*^9}, {3.695823434736682*^9, 3.6958235239854507`*^9}, {
   3.6958239130641947`*^9, 3.695823929420844*^9}, {3.69582399024702*^9, 
   3.695824021515864*^9}, {3.6959402239573517`*^9, 3.6959402517950487`*^9}, {
   3.695998712427988*^9, 3.695998718774261*^9}, {3.695998871092621*^9, 
   3.695998875457654*^9}, {3.696095524224514*^9, 3.696095547456152*^9}, {
   3.696096227155026*^9, 3.696096363326599*^9}, {3.696097023880077*^9, 
   3.696097057033454*^9}, {3.696097395919751*^9, 3.696097406607299*^9}, {
   3.6960986339957943`*^9, 3.69609864399922*^9}, {3.696098678322283*^9, 
   3.696098680427602*^9}, {3.696098726798232*^9, 3.6960987302823677`*^9}, {
   3.6960995237169847`*^9, 3.6960995492284517`*^9}, {3.6960996499607077`*^9, 
   3.6961000202066793`*^9}, {3.6961006205376663`*^9, 
   3.6961006302804947`*^9}, {3.6961007617601233`*^9, 3.696100873946089*^9}, 
   3.696100954020831*^9, {3.696101073229007*^9, 3.696101077074892*^9}, {
   3.696183871239448*^9, 3.69618397871594*^9}, {3.69618402260739*^9, 
   3.696184112865005*^9}, {3.6961843667356253`*^9, 3.696184376015024*^9}, {
   3.696184407507903*^9, 3.6961844099682407`*^9}, 3.6961846612955647`*^9, 
   3.696184744616888*^9, {3.696184940625711*^9, 3.696185203716408*^9}, 
   3.696185263959114*^9, {3.6961853140212917`*^9, 3.6961853287239113`*^9}, {
   3.696185434195457*^9, 3.696185486382208*^9}, {3.696185613704336*^9, 
   3.6961856644521837`*^9}, {3.696185781511042*^9, 3.6961857869276876`*^9}, {
   3.696186275692547*^9, 3.696186329228956*^9}, {3.6961870934353447`*^9, 
   3.6961870978617887`*^9}, {3.6961871803924026`*^9, 3.696187190073091*^9}, {
   3.696248520552981*^9, 3.69624856152451*^9}, {3.696248889010866*^9, 
   3.696248948155212*^9}, {3.696249213933255*^9, 3.696249224075479*^9}, {
   3.696249342859386*^9, 3.696249371146927*^9}, {3.696249807923431*^9, 
   3.696249819395149*^9}, {3.696252247627393*^9, 3.696252248345614*^9}, {
   3.6962525067041473`*^9, 3.6962525094401197`*^9}, {3.696253551438973*^9, 
   3.696253562406337*^9}, {3.6962538889064503`*^9, 3.6962539375692053`*^9}, {
   3.696261576948176*^9, 3.696261778994083*^9}, {3.696262264588214*^9, 
   3.696262269002935*^9}, {3.696263031214798*^9, 3.696263031853006*^9}, 
   3.6962630894937162`*^9, {3.696263259648288*^9, 3.6962632613096333`*^9}, {
   3.696264438484576*^9, 3.696264441707724*^9}, {3.696267900167506*^9, 
   3.696267902332087*^9}, {3.696269109818372*^9, 3.696269122529334*^9}, {
   3.6962691919026213`*^9, 3.696269196429139*^9}, {3.696269238917575*^9, 
   3.696269244676887*^9}, {3.696273033507286*^9, 3.696273036202135*^9}, {
   3.69627327591143*^9, 3.6962732777125483`*^9}, {3.696344574129465*^9, 
   3.69634459669189*^9}, {3.696347357536491*^9, 3.696347490383354*^9}, {
   3.696347536872691*^9, 3.696347542633708*^9}, {3.696348181715405*^9, 
   3.6963481912275248`*^9}, {3.696350482097086*^9, 3.696350487595327*^9}, {
   3.69635061452734*^9, 3.696350617815154*^9}, {3.696350648960331*^9, 
   3.696350658471527*^9}, {3.696350721350988*^9, 3.6963507439442883`*^9}, {
   3.696350993561509*^9, 3.6963510709155407`*^9}, {3.696351127940382*^9, 
   3.696351265731701*^9}, {3.6963514556621637`*^9, 3.696351475518982*^9}, {
   3.696351606896888*^9, 3.696351643519766*^9}, {3.6963522515383472`*^9, 
   3.696352252223336*^9}, {3.6963537586795883`*^9, 3.696353762430258*^9}, {
   3.6963546575485773`*^9, 3.69635481075883*^9}, {3.696354885304042*^9, 
   3.696354888024048*^9}, {3.6963597707725773`*^9, 3.696359791699663*^9}, {
   3.696596749399186*^9, 3.696596759399189*^9}, {3.696599028938037*^9, 
   3.69659903680936*^9}, {3.696867642713704*^9, 3.696867683505447*^9}, {
   3.69686780334908*^9, 3.696867852095622*^9}, 3.69686792564242*^9, {
   3.696867984253583*^9, 3.69686801235891*^9}, {3.696868064887858*^9, 
   3.6968683704655523`*^9}, {3.696868410942916*^9, 3.696868424128368*^9}, {
   3.696868483895567*^9, 3.6968685317701483`*^9}, 3.69686859854254*^9, {
   3.696868646854355*^9, 3.696868647147056*^9}, 3.6968688264012213`*^9, {
   3.6968689263308353`*^9, 3.696868990966099*^9}, {3.6968690212158337`*^9, 
   3.6968691176523933`*^9}, {3.6968692561635733`*^9, 
   3.6968692860566597`*^9}, {3.696869528463294*^9, 3.6968695356017017`*^9}, {
   3.696869812876656*^9, 3.696869852972711*^9}, {3.696870042753578*^9, 
   3.696870043125833*^9}, {3.696870081313697*^9, 3.696870129098933*^9}, {
   3.696870419315872*^9, 3.696870431032774*^9}, 3.696870526012164*^9, {
   3.696871850839285*^9, 3.696871862814823*^9}, {3.696874058529585*^9, 
   3.6968740620146513`*^9}, {3.6968744288473463`*^9, 
   3.6968744322634487`*^9}, {3.6968744954262257`*^9, 3.696874499732194*^9}, {
   3.696874746047084*^9, 3.696874748118031*^9}, {3.696874794086958*^9, 
   3.69687487068786*^9}, {3.6968929018483477`*^9, 3.696892910548275*^9}, {
   3.696892983903881*^9, 3.6968930137451773`*^9}, {3.696893049329618*^9, 
   3.696893121773587*^9}, {3.6968931600819902`*^9, 3.696893160898028*^9}, {
   3.69689319337081*^9, 3.696893219365066*^9}, {3.696893390295846*^9, 
   3.6968934990900707`*^9}, {3.6968935826221027`*^9, 3.696893582765203*^9}, 
   3.696893812291098*^9, {3.696893951155719*^9, 3.696893954517185*^9}, {
   3.6968940463023863`*^9, 3.696894063103196*^9}, {3.696894245351758*^9, 
   3.696894257230378*^9}, {3.696894503810678*^9, 3.696894508091383*^9}, {
   3.696894539167807*^9, 3.696894539920251*^9}, {3.6968946028702307`*^9, 
   3.696894641106721*^9}, {3.696895001590529*^9, 3.696895004525691*^9}, {
   3.696895320652412*^9, 3.6968953389715567`*^9}, {3.696895544487842*^9, 
   3.696895827331066*^9}, 3.696895879700541*^9, {3.696896007911306*^9, 
   3.69689610988244*^9}, {3.6968963112458353`*^9, 3.6968963345820637`*^9}, {
   3.696896575296206*^9, 3.6968965784045553`*^9}, {3.6968966586354856`*^9, 
   3.6968966624237556`*^9}, {3.696896707126047*^9, 3.696896711771188*^9}, {
   3.696896756295589*^9, 3.696896763671619*^9}, {3.696896875965954*^9, 
   3.696896889376639*^9}, {3.696896922001892*^9, 3.6968969232636538`*^9}, {
   3.696897527276684*^9, 3.69689752742791*^9}, {3.696897621142767*^9, 
   3.6968976250839777`*^9}, {3.696897693952878*^9, 3.696897721721434*^9}, {
   3.696897849434126*^9, 3.696897861633484*^9}, {3.696897906281145*^9, 
   3.696897915736906*^9}, {3.6968980160292377`*^9, 3.696898024605322*^9}, {
   3.6968987398065243`*^9, 3.6968987406021013`*^9}, {3.696898792378174*^9, 
   3.696898795527816*^9}, {3.696931763836385*^9, 3.6969318424548397`*^9}, {
   3.696964952117866*^9, 3.696964966061205*^9}, {3.696965110832848*^9, 
   3.696965132867584*^9}, {3.6969651629104033`*^9, 3.6969651705238867`*^9}, {
   3.697416840649811*^9, 3.697416848644639*^9}}],

Cell[BoxData[
 StyleBox[
  RowBox[{"optimal2robotPath", ",", " ", 
   RowBox[{"the", " ", "top", " ", "level", " ", "algorithm"}]}], 
  "Subsection"]], "Input",
 CellChangeTimes->{{3.696965082776297*^9, 3.6969650871514273`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Function", " ", "that", " ", "does", " ", "an", " ", "A", "*", " ", 
    "search", " ", "to", " ", "find", " ", "the", " ", "shortest", " ", 
    "path"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"optimal2robotPath", "[", 
    RowBox[{
    "s1_", ",", "s2_", ",", " ", "g1_", ",", "g2_", ",", "\[Epsilon]_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "optimalPathList", ",", "bestMoveSeq", ",", " ", "dist1", ",", " ", 
       RowBox[{"iter", "=", "0"}]}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"{", 
       RowBox[{
        StyleBox[
         RowBox[{"e", 
          StyleBox["stimatedPathLength", "Text",
           FontWeight->"Bold"]}]], ",", "r1", ",", "r2", ",", "MOVES"}], 
       "}"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"optimalPathList", "=", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"Infinity", ",", "s1", ",", "s2", ",", 
          RowBox[{"{", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], "}"}], ",", 
          RowBox[{"{", "s1", "}"}], ",", 
          RowBox[{"{", "s2", "}"}], ",", "False"}], "}"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"dist1", " ", "=", " ", 
       RowBox[{"distanceMoved", "[", " ", 
        RowBox[{
         RowBox[{"admissibleHeuristic", "[", 
          RowBox[{"s1", ",", "s2", ",", " ", "g1", ",", "g2"}], "]"}], "+", 
         "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"optimalPathList", "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "7"}], "\[RightDoubleBracket]"}], " ", 
         "\[NotEqual]", "  ", "True"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
           "pathToExplore", ",", "r1", ",", "r2", ",", "wallMoves", ",", 
            "moves", ",", "pm1", ",", " ", "pm2", ",", " ", 
            "isPathComplete"}], "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"body", " ", "of", " ", "while", " ", "loop"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"pathToExplore", " ", "=", " ", 
            RowBox[{"First", "[", "optimalPathList", "]"}]}], ";", " ", 
           RowBox[{"(*", 
            RowBox[{"pop", " ", "off", " ", "first", " ", "entry"}], "*)"}], 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"optimalPathList", "=", " ", 
            RowBox[{"Delete", "[", 
             RowBox[{"optimalPathList", ",", "1"}], "]"}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"r1", " ", "=", " ", 
            RowBox[{
            "pathToExplore", "\[LeftDoubleBracket]", "2", 
             "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"r2", " ", "=", " ", 
            RowBox[{
            "pathToExplore", "\[LeftDoubleBracket]", "3", 
             "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"moves", "=", " ", 
            RowBox[{
            "pathToExplore", "\[LeftDoubleBracket]", "4", 
             "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"pm1", " ", "=", " ", 
            RowBox[{
            "pathToExplore", "\[LeftDoubleBracket]", "5", 
             "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"pm2", " ", "=", " ", 
            RowBox[{
            "pathToExplore", "\[LeftDoubleBracket]", "6", 
             "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"isPathComplete", " ", "=", " ", 
            RowBox[{
            "pathToExplore", "\[LeftDoubleBracket]", "7", 
             "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"iter", " ", "+=", " ", "1"}], ";", "\[IndentingNewLine]", 
           
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"isPathComplete", " ", "\[NotEqual]", " ", "True"}], ",",
              "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Table", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"wallMoves", " ", "=", " ", 
                  RowBox[{"wallFrictionMoveDir", "[", 
                   RowBox[{
                   "dir", ",", "r1", ",", "r2", ",", "g1", ",", "g2", ",", 
                    "moves", ",", "pm1", ",", " ", "pm2", ",", " ", 
                    "\[Epsilon]"}], "]"}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{"optimalPathList", "=", 
                  RowBox[{"AppendTo", "[", 
                   RowBox[{"optimalPathList", ",", "wallMoves"}], "]"}]}], 
                 ";"}], ",", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{"dir", ",", 
                  RowBox[{"{", 
                   RowBox[{
                   "\"\<u\>\"", ",", "\"\<d\>\"", ",", "\"\<l\>\"", ",", 
                    "\"\<r\>\""}], "}"}]}], "}"}]}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"optimalPathList", " ", "=", " ", 
               RowBox[{"SortBy", "[", 
                RowBox[{"optimalPathList", ",", " ", "First"}], "]"}]}], 
              ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
            "]"}]}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"return", " ", "the", " ", "best", " ", "movement"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
          "optimalPathList", "\[LeftDoubleBracket]", "1", 
           "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
          "\[RightDoubleBracket]"}], ",", " ", 
         RowBox[{
          RowBox[{
          "optimalPathList", "\[LeftDoubleBracket]", "1", 
           "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "5", 
          "\[RightDoubleBracket]"}], ",", " ", 
         RowBox[{
          RowBox[{
          "optimalPathList", "\[LeftDoubleBracket]", "1", 
           "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "6", 
          "\[RightDoubleBracket]"}]}], "}"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.693940726427231*^9, 3.69394085900465*^9}, {
   3.693940895539198*^9, 3.6939409666319933`*^9}, {3.693941015818716*^9, 
   3.693941070387782*^9}, {3.6939411957594147`*^9, 3.693941207223578*^9}, {
   3.69394124639567*^9, 3.69394141470152*^9}, {3.6939414777790194`*^9, 
   3.693941602916482*^9}, {3.693941719143827*^9, 3.6939417800565577`*^9}, {
   3.693941813999855*^9, 3.69394183001812*^9}, {3.6945254015518847`*^9, 
   3.6945254358842783`*^9}, {3.69495315352875*^9, 3.694953153935306*^9}, {
   3.694953365339604*^9, 3.6949534511634703`*^9}, {3.6949534979686403`*^9, 
   3.69495352316755*^9}, {3.694953558657641*^9, 3.694953604338295*^9}, {
   3.694953659629985*^9, 3.694953783907632*^9}, 3.694953852200987*^9, {
   3.6954848051981163`*^9, 3.695484827999157*^9}, {3.695484862111705*^9, 
   3.6954848700006437`*^9}, {3.695487288120407*^9, 3.695487312450974*^9}, {
   3.695487398388719*^9, 3.695487423761672*^9}, {3.695487476483901*^9, 
   3.695487478907104*^9}, {3.695487560722924*^9, 3.695487588476266*^9}, {
   3.695506121817466*^9, 3.695506163585935*^9}, {3.695506204204523*^9, 
   3.6955062080591927`*^9}, {3.695506243271134*^9, 3.6955062803287067`*^9}, {
   3.695506344243822*^9, 3.695506345156135*^9}, {3.695506396459947*^9, 
   3.695506398359313*^9}, {3.695506465459729*^9, 3.695506486564291*^9}, {
   3.695506527566943*^9, 3.695506529798072*^9}, {3.695506820727254*^9, 
   3.69550682389489*^9}, {3.695506877240932*^9, 3.6955068807910337`*^9}, {
   3.695507410967121*^9, 3.695507411422595*^9}, {3.695507493036971*^9, 
   3.6955074987956676`*^9}, {3.695507598300138*^9, 3.695507618827067*^9}, {
   3.695507677460688*^9, 3.695507678282627*^9}, {3.6955235107638903`*^9, 
   3.6955235170042553`*^9}, {3.695523649414487*^9, 3.695523675152113*^9}, {
   3.6955473497759943`*^9, 3.695547424879526*^9}, {3.695547526788433*^9, 
   3.695547560163447*^9}, {3.695547743584434*^9, 3.695547753214528*^9}, {
   3.695547787819676*^9, 3.695547800593453*^9}, {3.6955478490248203`*^9, 
   3.695547895592402*^9}, {3.695547933731194*^9, 3.695547937490453*^9}, {
   3.6955479688806257`*^9, 3.695547979040374*^9}, {3.695548209954042*^9, 
   3.6955482549933863`*^9}, {3.695548504434124*^9, 3.695548507512411*^9}, {
   3.695548732816897*^9, 3.6955487754336357`*^9}, {3.6955488208542747`*^9, 
   3.695548823798354*^9}, {3.695548956254356*^9, 3.6955489564928923`*^9}, {
   3.695549001850164*^9, 3.6955491719566183`*^9}, {3.6955494533902693`*^9, 
   3.695549492159052*^9}, {3.695549554056233*^9, 3.6955495590611973`*^9}, {
   3.695549589608288*^9, 3.695549613206245*^9}, {3.6955496525515623`*^9, 
   3.69554965279846*^9}, {3.695549702614848*^9, 3.6955497031898108`*^9}, {
   3.695549785010944*^9, 3.695549792167667*^9}, {3.695549824302359*^9, 
   3.695549900838828*^9}, {3.695549935186571*^9, 3.695549935377376*^9}, {
   3.69555007697112*^9, 3.695550114877738*^9}, {3.6955501722744913`*^9, 
   3.695550207241391*^9}, {3.695551746175302*^9, 3.695551766059375*^9}, {
   3.695551808776019*^9, 3.695551843793207*^9}, {3.695557869427966*^9, 
   3.6955578877366323`*^9}, {3.6955579248270807`*^9, 3.695557931771722*^9}, {
   3.695561774747747*^9, 3.6955617754346848`*^9}, {3.6955762231148233`*^9, 
   3.695576227961911*^9}, {3.695655998701933*^9, 3.695656027965703*^9}, {
   3.695743481557646*^9, 3.6957434891272697`*^9}, {3.6957499335423203`*^9, 
   3.6957499342865343`*^9}, {3.6958229590222*^9, 3.6958229856917353`*^9}, {
   3.695823610710822*^9, 3.695823631982574*^9}, {3.695823741993531*^9, 
   3.6958237440397253`*^9}, {3.6958237899955597`*^9, 3.695823790729455*^9}, {
   3.6958238521205673`*^9, 3.695823868728142*^9}, {3.695824148708419*^9, 
   3.695824149424796*^9}, {3.695824203981468*^9, 3.695824210196082*^9}, {
   3.695939897582724*^9, 3.69593991153236*^9}, {3.695939949037582*^9, 
   3.695939974592643*^9}, {3.695989496537614*^9, 3.695989509108657*^9}, {
   3.696094405456499*^9, 3.6960944115768557`*^9}, 3.696097586417688*^9, {
   3.6960995622484493`*^9, 3.696099615545146*^9}, {3.69610004473825*^9, 
   3.6961001311836443`*^9}, 3.696100192122633*^9, {3.696184257866287*^9, 
   3.69618426175308*^9}, {3.696184752876293*^9, 3.696184754939089*^9}, {
   3.6961848358932858`*^9, 3.6961848429562273`*^9}, {3.696185687700595*^9, 
   3.696185694531495*^9}, {3.696185836878201*^9, 3.696185840069344*^9}, {
   3.696186003722169*^9, 3.696186006067254*^9}, {3.696186358515051*^9, 
   3.696186371651759*^9}, {3.696188233554964*^9, 3.6961882383227873`*^9}, {
   3.696188392819615*^9, 3.6961884027222567`*^9}, {3.6962499073225527`*^9, 
   3.6962499079540863`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"movesAndPositions", ",", "path", ",", 
        RowBox[{"(*", 
         RowBox[{"paths", " ", "for", " ", "each", " ", "robot"}], "*)"}], 
        "path1", ",", "path2", ",", "\[IndentingNewLine]", 
        RowBox[{"r", " ", "=", " ", 
         RowBox[{"1", "/", "40"}]}], " ", 
        RowBox[{"(*", 
         RowBox[{
         "radius", " ", "of", " ", "start", " ", "and", " ", "end", " ", 
          "markers"}], "*)"}], ",", "\[IndentingNewLine]", 
        RowBox[{"thickness", " ", "=", " ", "0.005"}], ",", "rotateSolution", 
        ",", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"left", " ", "robot"}], "*)"}], " ", "ps1", ",", "pe1", ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"right", " ", "robot"}], "*)"}], " ", "ps2", ",", "pe2", ",",
         "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"current", " ", "particle", " ", "position"}], "*)"}], " ", 
        "pm1", ",", "pm2", ",", "offset", ",", "\[IndentingNewLine]", 
        RowBox[{"c1", "=", "Blue"}], ",", 
        RowBox[{"c2", " ", "=", "Magenta"}], ",", "\[IndentingNewLine]", 
        "mvNum", ",", "\[IndentingNewLine]", "mvFrac"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"(*", 
        RowBox[{
        "ensure", " ", "robots", " ", "do", " ", "not", " ", "overlap"}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"EuclideanDistance", "[", 
            RowBox[{"s1", ",", "s2"}], "]"}], "<", "\[Epsilon]"}], ",", " ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
             "s1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "<", 
             RowBox[{
             "s2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
            ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
               "s1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               ">", 
               RowBox[{"2", "\[Epsilon]"}]}], ",", 
              RowBox[{
               RowBox[{
               "s1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               " ", "=", 
               RowBox[{
                RowBox[{
                "s2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                " ", "-", " ", "\[Epsilon]"}]}], ",", 
              RowBox[{
               RowBox[{
               "s2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               " ", "=", 
               RowBox[{
                RowBox[{
                "s1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                " ", "+", "\[Epsilon]"}]}]}], "]"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
               "s2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               ">", 
               RowBox[{"2", "\[Epsilon]"}]}], ",", 
              RowBox[{
               RowBox[{
               "s2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               "=", " ", 
               RowBox[{
                RowBox[{
                "s1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                "-", " ", "\[Epsilon]"}]}], ",", 
              RowBox[{
               RowBox[{
               "s1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               " ", "=", 
               RowBox[{
                RowBox[{
                "s2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                "+", " ", "\[Epsilon]"}]}]}], "]"}]}], "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"EuclideanDistance", "[", 
            RowBox[{"e1", ",", "e2"}], "]"}], "<", "\[Epsilon]"}], ",", " ", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
             "e1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "<", 
             RowBox[{
             "e2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
            ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
               "e1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               ">", 
               RowBox[{"2", "\[Epsilon]"}]}], ",", 
              RowBox[{
               RowBox[{
               "e1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               " ", "=", 
               RowBox[{
                RowBox[{
                "e2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                " ", "-", " ", "\[Epsilon]"}]}], ",", 
              RowBox[{
               RowBox[{
               "e2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               " ", "=", 
               RowBox[{
                RowBox[{
                "e1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                " ", "+", "\[Epsilon]"}]}]}], "]"}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
               "e2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               ">", 
               RowBox[{"2", "\[Epsilon]"}]}], ",", 
              RowBox[{
               RowBox[{
               "e2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               "=", " ", 
               RowBox[{
                RowBox[{
                "e1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                "-", " ", "\[Epsilon]"}]}], ",", 
              RowBox[{
               RowBox[{
               "e1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               " ", "=", 
               RowBox[{
                RowBox[{
                "e2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                "+", " ", "\[Epsilon]"}]}]}], "]"}]}], "]"}]}], "]"}], ";"}], 
       "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"ps1", " ", ",", "pe1", ",", "ps2", ",", "pe2"}], "}"}], " ",
         "=", " ", 
        RowBox[{"{", 
         RowBox[{"s1", ",", "e1", ",", "s2", ",", "e2"}], "}"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"path", ",", "path1", ",", "path2"}], "}"}], " ", "=", " ", 
        RowBox[{"optimal2robotPath", "[", 
         RowBox[{
         "ps1", ",", "ps2", ",", "pe1", ",", "pe2", ",", "\[Epsilon]"}], " ", 
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"mvNum", " ", "=", " ", 
        RowBox[{"Floor", "[", 
         RowBox[{"progress", "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Length", "[", "path", "]"}], "-", "1"}], ")"}]}], 
         "]"}]}], " ", ";", "\[IndentingNewLine]", 
       RowBox[{"mvFrac", " ", "=", " ", 
        RowBox[{"FractionalPart", "[", 
         RowBox[{"progress", "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Length", "[", "path", "]"}], "-", "1"}], ")"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"pm2", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"mvFrac", ">", "0"}], ",", 
          RowBox[{
           RowBox[{"path2", "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{"mvNum", "+", "1"}], ",", ";;"}], 
            "\[RightDoubleBracket]"}], "+", 
           RowBox[{"mvFrac", "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"path2", "\[LeftDoubleBracket]", 
               RowBox[{
                RowBox[{"mvNum", "+", "2"}], ",", ";;"}], 
               "\[RightDoubleBracket]"}], "-", 
              RowBox[{"path2", "\[LeftDoubleBracket]", 
               RowBox[{
                RowBox[{"mvNum", "+", "1"}], ",", ";;"}], 
               "\[RightDoubleBracket]"}]}], ")"}]}]}], ",", 
          RowBox[{"path2", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{"mvNum", "+", "1"}], ",", ";;"}], 
           "\[RightDoubleBracket]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"pm1", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"mvFrac", ">", "0"}], ",", 
          RowBox[{
           RowBox[{"path1", "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{"mvNum", "+", "1"}], ",", ";;"}], 
            "\[RightDoubleBracket]"}], "+", 
           RowBox[{"mvFrac", "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"path1", "\[LeftDoubleBracket]", 
               RowBox[{
                RowBox[{"mvNum", "+", "2"}], ",", ";;"}], 
               "\[RightDoubleBracket]"}], "-", 
              RowBox[{"path1", "\[LeftDoubleBracket]", 
               RowBox[{
                RowBox[{"mvNum", "+", "1"}], ",", ";;"}], 
               "\[RightDoubleBracket]"}]}], ")"}]}]}], ",", 
          RowBox[{"path1", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{"mvNum", "+", "1"}], ",", ";;"}], 
           "\[RightDoubleBracket]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Graphics", "[", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{"(*", "workspace", "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Darker", "[", "Red", "]"}], ",", " ", 
             RowBox[{"Rectangle", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "0.025"}], 
                RowBox[{"{", 
                 RowBox[{"1", ",", "1"}], "}"}]}], ",", 
               RowBox[{"1.025", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "1"}], "}"}]}]}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Lighter", "[", 
              RowBox[{"Gray", ",", "0.8"}], "]"}], ",", " ", 
             RowBox[{"Rectangle", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "1"}], "}"}]}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"White", ",", " ", 
             RowBox[{"Rectangle", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"\[Epsilon]", ",", " ", "\[Epsilon]"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"1", "-", "\[Epsilon]"}], ",", 
                 RowBox[{"1", "-", "\[Epsilon]"}]}], "}"}]}], "]"}]}], "}"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Lighter", "[", 
              RowBox[{"Gray", ",", "0.8"}], "]"}], ",", " ", 
             RowBox[{"Disk", "[", 
              RowBox[{"ps2", ",", "\[Epsilon]"}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Lighter", "[", 
              RowBox[{"Gray", ",", "0.8"}], "]"}], ",", " ", 
             RowBox[{"Disk", "[", 
              RowBox[{"pe2", ",", "\[Epsilon]"}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"PointSize", "[", "0.01", "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Arrowheads", "[", ".03", "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Thickness", "[", "thickness", "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"starting", " ", "poses"}], ",", " ", 
             RowBox[{
             "dashed", " ", "line", " ", "from", " ", "start", " ", "to", " ",
               "end"}]}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"c1", ",", 
             RowBox[{"{", " ", 
              RowBox[{
               RowBox[{"Opacity", "[", ".3", "]"}], ",", "Dashed", ",", 
               RowBox[{"Arrow", "[", 
                RowBox[{"{", 
                 RowBox[{"ps1", ",", "pe1"}], "}"}], "]"}]}], "}"}], ",", 
             RowBox[{"Point", "@", "ps1"}], ",", 
             RowBox[{"EdgeForm", "[", 
              RowBox[{"Directive", "[", 
               RowBox[{"c1", ",", 
                RowBox[{"Thickness", "[", "thickness", "]"}]}], "]"}], "]"}], 
             ",", 
             RowBox[{"FaceForm", "[", "None", "]"}], ",", 
             RowBox[{"Rectangle", "[", 
              RowBox[{
               RowBox[{"ps1", "-", 
                RowBox[{
                 RowBox[{"2", "/", "3"}], "r", " ", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "1"}], "}"}]}]}], ",", 
               RowBox[{"ps1", "+", 
                RowBox[{
                 RowBox[{"2", "/", "3"}], "r", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "1"}], "}"}]}]}]}], "]"}], ",", 
             RowBox[{"Circle", "[", 
              RowBox[{"pe1", ",", "r"}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"c2", ",", 
             RowBox[{"{", " ", 
              RowBox[{
               RowBox[{"Opacity", "[", ".3", "]"}], ",", "Dashed", ",", 
               RowBox[{"Arrow", "[", 
                RowBox[{"{", 
                 RowBox[{"ps2", ",", "pe2"}], "}"}], "]"}]}], "}"}], ",", 
             RowBox[{"Point", "@", "ps2"}], ",", 
             RowBox[{"EdgeForm", "[", 
              RowBox[{"Directive", "[", 
               RowBox[{"c2", ",", 
                RowBox[{"Thickness", "[", "thickness", "]"}]}], "]"}], "]"}], 
             ",", 
             RowBox[{"FaceForm", "[", "None", "]"}], ",", 
             RowBox[{"Rectangle", "[", 
              RowBox[{
               RowBox[{"ps2", "-", 
                RowBox[{
                 RowBox[{"2", "/", "3"}], "r", " ", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "1"}], "}"}]}]}], ",", 
               RowBox[{"ps2", "+", 
                RowBox[{
                 RowBox[{"2", "/", "3"}], "r", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "1"}], "}"}]}]}]}], "]"}], ",", " ", 
             RowBox[{"Circle", "[", 
              RowBox[{"pe2", ",", "r"}], "]"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
            "plot", " ", "path", " ", "of", " ", "particle", " ", "1"}], 
            "*)"}], "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{"c1", ",", "\[IndentingNewLine]", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Arrow", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"path1", "\[LeftDoubleBracket]", 
                   RowBox[{"i", ",", ";;"}], "\[RightDoubleBracket]"}], ",", 
                  RowBox[{"path1", "\[LeftDoubleBracket]", 
                   RowBox[{
                    RowBox[{"i", "+", "1"}], ",", ";;"}], 
                   "\[RightDoubleBracket]"}]}], "}"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "mvNum"}], "}"}]}], "]"}], ",", 
             "\[IndentingNewLine]", " ", 
             RowBox[{"Arrow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"path1", "\[LeftDoubleBracket]", 
                 RowBox[{
                  RowBox[{"mvNum", "+", "1"}], ",", ";;"}], 
                 "\[RightDoubleBracket]"}], ",", "pm1"}], "}"}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                  "pm1", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], "\[Equal]", "0"}], "||", 
                 RowBox[{
                  RowBox[{
                  "pm1", "\[LeftDoubleBracket]", "2", 
                   "\[RightDoubleBracket]"}], "\[Equal]", "0"}], "||", 
                 RowBox[{
                  RowBox[{
                  "pm1", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], "\[Equal]", "1"}], "||", 
                 RowBox[{
                  RowBox[{
                  "pm1", "\[LeftDoubleBracket]", "2", 
                   "\[RightDoubleBracket]"}], "\[Equal]", "1"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Point", "@", "pm1"}], " ", ",", 
                  RowBox[{"PointSize", "[", "0.005", "]"}], ",", "White", ",", 
                  RowBox[{"Point", "@", "pm1"}]}], " ", "}"}], ",", 
                RowBox[{"Point", "@", "pm1"}]}], "]"}], " ", "}"}]}], 
            "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Inset", "[", 
              RowBox[{
               RowBox[{"RegionPlot", "[", 
                RowBox[{
                 RowBox[{"x", "<", 
                  RowBox[{"-", "3"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", 
                   RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"y", ",", 
                   RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
                 RowBox[{"Epilog", "\[Rule]", 
                  RowBox[{"{", "\[IndentingNewLine]", 
                   RowBox[{"(*", 
                    RowBox[{"reachable", " ", "region"}], "*)"}], 
                   "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"LightBlue", ",", 
                    RowBox[{"EdgeForm", "[", "Blue", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Rectangle", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "pm2", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "-", "1", "-", 
                    RowBox[{
                    "pm1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"-", "1"}]}], "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    "pm2", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    "pm1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}]}], "]"}]}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{"Black", ",", " ", 
                    RowBox[{"Text", "[", 
                    RowBox[{"\"\<Reachable Region\>\"", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"1", "+", 
                    RowBox[{
                    "pm2", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", "\[Epsilon]", "-", "1"}], 
                    "2"], ",", 
                    FractionBox[
                    RowBox[{
                    RowBox[{
                    "pm2", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    "pm1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "2"]}], "}"}]}], "]"}]}], 
                    "*)"}], "\[IndentingNewLine]", "}"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"{", 
                    RowBox[{"LightGreen", ",", 
                    RowBox[{"EdgeForm", "[", "Green", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Rectangle", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", "1"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "pm2", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    "pm1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{"1", "+", " ", 
                    RowBox[{
                    "pm2", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    "pm1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], ",", "1"}], "]"}]}], "}"}]}],
                     "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{"current", " ", "deltas"}], "*)"}], 
                    "\[IndentingNewLine]", "Red", ",", 
                    RowBox[{"Rectangle", "[", 
                    RowBox[{
                    RowBox[{"pm2", "-", "pm1", "-", 
                    RowBox[{
                    RowBox[{"4", "/", "3"}], "r", " ", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}]}], ",", 
                    RowBox[{"pm2", "-", "pm1", "+", 
                    RowBox[{
                    RowBox[{"4", "/", "3"}], "r", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}]}]}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{"goal", " ", "deltas"}], "*)"}], 
                    "\[IndentingNewLine]", "Green", ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Disk", "[", 
                    RowBox[{
                    RowBox[{"pe2", "-", "pe1"}], ",", 
                    RowBox[{"2", "r"}]}], "]"}]}], "\[IndentingNewLine]", 
                   "\[IndentingNewLine]", "}"}]}], ",", 
                 RowBox[{"FrameLabel", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{
                   "\"\<\[CapitalDelta]x\>\"", ",", 
                    "\"\<\[CapitalDelta] y\>\""}], "}"}]}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                  RowBox[{"Directive", "[", 
                   RowBox[{"Black", ",", "Bold"}], "]"}]}], ",", 
                 RowBox[{"ImageSize", "\[Rule]", "385"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"1.54", ",", ".45"}], "}"}]}], "]"}], ","}], "*)"}], 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
            "plot", " ", "path", " ", "of", " ", "particle", " ", "2"}], 
            "*)"}], "\[IndentingNewLine]", " ", 
           RowBox[{"{", 
            RowBox[{"c2", ",", "\[IndentingNewLine]", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Arrow", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"path2", "\[LeftDoubleBracket]", 
                   RowBox[{"i", ",", ";;"}], "\[RightDoubleBracket]"}], ",", 
                  RowBox[{"path2", "\[LeftDoubleBracket]", 
                   RowBox[{
                    RowBox[{"i", "+", "1"}], ",", ";;"}], 
                   "\[RightDoubleBracket]"}]}], "}"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "mvNum"}], "}"}]}], "]"}], ",", 
             "\[IndentingNewLine]", " ", 
             RowBox[{"Arrow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"path2", "\[LeftDoubleBracket]", 
                 RowBox[{
                  RowBox[{"mvNum", "+", "1"}], ",", ";;"}], 
                 "\[RightDoubleBracket]"}], ",", "pm2"}], "}"}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                  "pm2", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], "\[Equal]", "0"}], "||", 
                 RowBox[{
                  RowBox[{
                  "pm2", "\[LeftDoubleBracket]", "2", 
                   "\[RightDoubleBracket]"}], "\[Equal]", "0"}], "||", 
                 RowBox[{
                  RowBox[{
                  "pm2", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], "\[Equal]", "1"}], "||", 
                 RowBox[{
                  RowBox[{
                  "pm2", "\[LeftDoubleBracket]", "2", 
                   "\[RightDoubleBracket]"}], "\[Equal]", "1"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Point", "@", "pm2"}], " ", ",", 
                  RowBox[{"PointSize", "[", "0.005", "]"}], ",", "White", ",", 
                  RowBox[{"Point", "@", "pm2"}]}], " ", "}"}], ",", 
                RowBox[{"Point", "@", "pm2"}]}], "]"}], "}"}]}], 
            "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"mvNum", "+", "1"}], "\[Equal]", " ", 
                 RowBox[{"Length", "[", "path", "]"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"mvNum", "=", " ", 
                   RowBox[{
                    RowBox[{"Length", "[", "path", "]"}], "-", "2"}]}], ",", 
                  RowBox[{"mvFrac", "=", "1"}]}], "}"}]}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"Darker", "[", "Red", "]"}]}], ",", " ", 
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  RowBox[{"\"\<Move `` of ``\>\"", ",", " ", 
                   RowBox[{"mvNum", "+", "1"}], ",", 
                   RowBox[{
                    RowBox[{"Length", "[", "path", "]"}], "-", "1"}]}], "]"}],
                  ",", 
                 RowBox[{"FontSize", "\[Rule]", "18"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"1.55", ",", ".9"}], "}"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Text", "[", 
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"StringForm", "[", 
                  RowBox[{"\"\<Total Distance `` \>\"", ",", " ", 
                   RowBox[{"Round", "[", 
                    RowBox[{
                    RowBox[{"N", "[", 
                    RowBox[{"Total", "[", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"EuclideanDistance", "[", 
                    RowBox[{
                    RowBox[{
                    "path", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "2", ",", " ", 
                    RowBox[{"Length", "[", "path", "]"}]}], "}"}]}], "]"}], 
                    " ", "]"}], " ", "]"}], ",", ".01"}], "]"}]}], "]"}], ",", 
                 RowBox[{"FontSize", "\[Rule]", "18"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"1.55", ",", ".8"}], "}"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"offset", " ", "=", " ", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"1.55", ",", ".5"}], "}"}], "-", 
                RowBox[{
                 FractionBox["1", "2"], 
                 RowBox[{"path", "\[LeftDoubleBracket]", 
                  RowBox[{
                   RowBox[{"mvNum", "+", "2"}], ",", ";;"}], 
                  "\[RightDoubleBracket]"}]}]}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Opacity", "[", "0.3", "]"}], ",", " ", 
                RowBox[{"Arrow", "[", 
                 RowBox[{"{", 
                  RowBox[{"offset", ",", 
                   RowBox[{"offset", "+", 
                    RowBox[{"path", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"mvNum", "+", "2"}], ",", ";;"}], 
                    "\[RightDoubleBracket]"}]}]}], "}"}], "]"}]}], "}"}]}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"Point", "[", 
              RowBox[{"offset", "+", 
               RowBox[{"mvFrac", 
                RowBox[{"(", 
                 RowBox[{"path", "\[LeftDoubleBracket]", 
                  RowBox[{
                   RowBox[{"mvNum", "+", "2"}], ",", ";;"}], 
                  "\[RightDoubleBracket]"}], ")"}]}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Arrow", "[", 
              RowBox[{"{", 
               RowBox[{"offset", ",", "  ", 
                RowBox[{"offset", "+", 
                 RowBox[{"mvFrac", 
                  RowBox[{"(", 
                   RowBox[{"path", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"mvNum", "+", "2"}], ",", ";;"}], 
                    "\[RightDoubleBracket]"}], ")"}]}]}]}], " ", "}"}], 
              "]"}]}], "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
          "}"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "800"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "0.05"}], ",", "2.05"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", ".05"}], ",", "1.05"}], "}"}]}], "}"}]}]}], 
        "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Row", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Control", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"progress", ",", "1", ",", "\"\<progress\>\""}], "}"}], 
          ",", "0", ",", "1", ",", 
          RowBox[{"1", "/", "420"}], ",", "Slider", ",", 
          RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"Control", "@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\[Epsilon]", ",", 
            RowBox[{"1", "/", "20"}], ",", "\"\<\[Epsilon]\>\""}], "}"}], ",", 
          RowBox[{"1", "/", "1000"}], ",", 
          RowBox[{"1", "/", "10"}], ",", 
          RowBox[{"1", "/", "1000"}], ",", "Slider", ",", 
          RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}]}], 
      "}"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"s1", ",", 
          RowBox[{"{", 
           RowBox[{"0.7", ",", "0.11"}], "}"}]}], "}"}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], "+", " ", "\[Epsilon]"}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], "-", " ", "\[Epsilon]"}], ",", 
        "Locator", ",", 
        RowBox[{"Appearance", "\[Rule]", "None"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"s2", ",", 
          RowBox[{"{", 
           RowBox[{"0.8", ",", "0.6"}], "}"}]}], "}"}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], "+", " ", "\[Epsilon]"}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], "-", " ", "\[Epsilon]"}], ",", 
        "Locator", ",", 
        RowBox[{"Appearance", "\[Rule]", "None"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"e1", ",", 
          RowBox[{"{", 
           RowBox[{"0.9", ",", "0.7"}], "}"}]}], "}"}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], "+", " ", "\[Epsilon]"}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], "-", " ", "\[Epsilon]"}], ",", 
        "Locator", ",", 
        RowBox[{"Appearance", "\[Rule]", "None"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"e2", ",", 
          RowBox[{"{", 
           RowBox[{"0.11", ",", "0.11"}], "}"}]}], "}"}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], "+", " ", "\[Epsilon]"}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], "-", " ", "\[Epsilon]"}], ",", 
        "Locator", ",", 
        RowBox[{"Appearance", "\[Rule]", "None"}]}], "}"}]}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"s2", ",", 
          RowBox[{"{", 
           RowBox[{"0.6", ",", "0.8"}], "}"}]}], "}"}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], "+", " ", "\[Epsilon]"}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], "-", " ", "\[Epsilon]"}], ",", 
        "Locator", ",", 
        RowBox[{"Appearance", "\[Rule]", "None"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"s1", ",", 
          RowBox[{"{", 
           RowBox[{"0.85", ",", "0.15"}], "}"}]}], "}"}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], "+", " ", "\[Epsilon]"}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], "-", " ", "\[Epsilon]"}], ",", 
        "Locator", ",", 
        RowBox[{"Appearance", "\[Rule]", "None"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"e2", ",", 
          RowBox[{"{", 
           RowBox[{"0.13", ",", "0.35"}], "}"}]}], "}"}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], "+", " ", "\[Epsilon]"}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], "-", " ", "\[Epsilon]"}], ",", 
        "Locator", ",", 
        RowBox[{"Appearance", "\[Rule]", "None"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"e1", ",", 
          RowBox[{"{", 
           RowBox[{"0.2", ",", "0.85"}], "}"}]}], "}"}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], "+", " ", "\[Epsilon]"}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], "-", " ", "\[Epsilon]"}], ",", 
        "Locator", ",", 
        RowBox[{"Appearance", "\[Rule]", "None"}]}], "}"}]}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"s2", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"3", "/", "4"}], ",", 
          RowBox[{"1", "/", "5"}]}], "}"}]}], "}"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], "+", " ", "\[Epsilon]"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], "-", " ", "\[Epsilon]"}], ",", 
      "Locator", ",", 
      RowBox[{"Appearance", "\[Rule]", "None"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"s1", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"3", "/", "4"}], ",", 
          RowBox[{"4", "/", "5"}]}], "}"}]}], "}"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], "+", " ", "\[Epsilon]"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], "-", " ", "\[Epsilon]"}], ",", 
      "Locator", ",", 
      RowBox[{"Appearance", "\[Rule]", "None"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"e2", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"3", "/", "4"}], ",", 
          RowBox[{"4", "/", "5"}]}], "}"}]}], "}"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], "+", " ", "\[Epsilon]"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], "-", " ", "\[Epsilon]"}], ",", 
      "Locator", ",", 
      RowBox[{"Appearance", "\[Rule]", "None"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"e1", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"3", "/", "4"}], ",", 
          RowBox[{"1", "/", "5"}]}], "}"}]}], "}"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], "+", " ", "\[Epsilon]"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "1"}], "}"}], "-", " ", "\[Epsilon]"}], ",", 
      "Locator", ",", 
      RowBox[{"Appearance", "\[Rule]", "None"}]}], "}"}], 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"s1", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"3", "/", "4"}], ",", 
            RowBox[{"2", "/", "5"}]}], "}"}]}], "}"}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], "+", " ", "\[Epsilon]"}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], "-", " ", "\[Epsilon]"}], ",", 
        "Locator", ",", 
        RowBox[{"Appearance", "\[Rule]", "None"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"s2", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "4"}], ",", 
            RowBox[{"1", "/", "5"}]}], "}"}]}], "}"}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], "+", " ", "\[Epsilon]"}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], "-", " ", "\[Epsilon]"}], ",", 
        "Locator", ",", 
        RowBox[{"Appearance", "\[Rule]", "None"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"e1", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"3", "/", "4"}], ",", 
            RowBox[{"1", "/", "3"}]}], "}"}]}], "}"}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], "+", " ", "\[Epsilon]"}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], "-", " ", "\[Epsilon]"}], ",", 
        "Locator", ",", 
        RowBox[{"Appearance", "\[Rule]", "None"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"e2", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "4"}], ",", 
            RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], "+", " ", "\[Epsilon]"}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "1"}], "}"}], "-", " ", "\[Epsilon]"}], ",", 
        "Locator", ",", 
        RowBox[{"Appearance", "\[Rule]", "None"}]}], "}"}]}], "*)"}], 
    "\[IndentingNewLine]", ",", " ", 
    RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.696099319791697*^9, 3.696099389187009*^9}, {
   3.696099462606688*^9, 3.69609946339041*^9}, {3.696101212158617*^9, 
   3.696101213285096*^9}, 3.6961012694255447`*^9, 3.696101420076013*^9, 
   3.6961647609441032`*^9, {3.696165882986189*^9, 3.696165907072298*^9}, 
   3.6961660358409357`*^9, {3.696166140399232*^9, 3.696166142636907*^9}, 
   3.6961678649323053`*^9, {3.696183632273728*^9, 3.6961837301810493`*^9}, {
   3.696184632838332*^9, 3.6961846492299643`*^9}, {3.696184686458961*^9, 
   3.696184704425688*^9}, 3.696186547481658*^9, 3.696186785632403*^9, {
   3.69625012364227*^9, 3.6962501355701942`*^9}, 3.696344465447665*^9, 
   3.696348271920081*^9, {3.696359799586858*^9, 3.6963598140905247`*^9}, {
   3.6965977790487013`*^9, 3.696597783708753*^9}, {3.696597840753006*^9, 
   3.696597876824052*^9}, 3.6965979499146423`*^9, {3.696598156912805*^9, 
   3.696598176173596*^9}, {3.696598233100769*^9, 3.6965982348024063`*^9}, {
   3.696598502238802*^9, 3.696598549545631*^9}, {3.696598814864511*^9, 
   3.696598916641576*^9}, {3.696599164053749*^9, 3.696599203170083*^9}, {
   3.696599236829175*^9, 3.6965992834487877`*^9}, {3.6965999896613073`*^9, 
   3.696600001700495*^9}, {3.696600075284152*^9, 3.696600100125888*^9}, {
   3.6966005414182053`*^9, 3.696600547050333*^9}, {3.696600859889744*^9, 
   3.696600863318581*^9}, {3.696870954624626*^9, 3.696870957186327*^9}, {
   3.6968731073865347`*^9, 3.6968731110320177`*^9}, {3.69687315656623*^9, 
   3.696873184924979*^9}, {3.69687322455451*^9, 3.696873225159131*^9}, {
   3.696874099910837*^9, 3.6968741096744843`*^9}, {3.6968946563081636`*^9, 
   3.69689475739823*^9}, {3.696930163003133*^9, 3.696930176968874*^9}, {
   3.696930433572462*^9, 3.696930442738103*^9}, {3.6969311033899097`*^9, 
   3.696931113642783*^9}, {3.696931200859735*^9, 3.6969312018518467`*^9}, {
   3.6969321985852337`*^9, 3.6969322643056707`*^9}, 3.696932313692705*^9, {
   3.696943970135454*^9, 3.696943978362948*^9}, {3.696951762032118*^9, 
   3.69695176279718*^9}, {3.696951814475875*^9, 3.696951815129318*^9}, {
   3.6969518495796423`*^9, 3.696951863818798*^9}, 3.696952693171637*^9, {
   3.696955596686164*^9, 3.696955609682706*^9}, {3.6969556626588087`*^9, 
   3.696955673451565*^9}, {3.696955705742146*^9, 3.696955750927525*^9}, {
   3.696955844911785*^9, 3.696955928545268*^9}, {3.6969560278175917`*^9, 
   3.6969560361844473`*^9}, {3.69695627591085*^9, 3.696956312570834*^9}, {
   3.696956352131195*^9, 3.696956358039564*^9}, {3.6974165624806433`*^9, 
   3.697416572037217*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`e1$$ = {
     Rational[3, 4], 
     Rational[1, 5]}, $CellContext`e2$$ = {
     Rational[3, 4], 
     Rational[4, 5]}, $CellContext`progress$$ = 1, $CellContext`s1$$ = {
     Rational[3, 4], 
     Rational[4, 5]}, $CellContext`s2$$ = {
     Rational[3, 4], 
     Rational[1, 5]}, $CellContext`\[Epsilon]$$ = Rational[1, 20], 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`progress$$], 1, "progress"}, 0, 1, 
      Rational[1, 420]}, {{
       Hold[$CellContext`\[Epsilon]$$], 
       Rational[1, 20], "\[Epsilon]"}, 
      Rational[1, 1000], 
      Rational[1, 10], 
      Rational[1, 1000]}, {
      Hold[
       Row[{
         Manipulate`Place[1], 
         Manipulate`Place[2]}]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`s2$$], {
        Rational[3, 4], 
        Rational[1, 5]}}, 
      Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
      Dynamic[{1, 1} - $CellContext`\[Epsilon]$$]}, {{
       Hold[$CellContext`s1$$], {
        Rational[3, 4], 
        Rational[4, 5]}}, 
      Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
      Dynamic[{1, 1} - $CellContext`\[Epsilon]$$]}, {{
       Hold[$CellContext`e2$$], {
        Rational[3, 4], 
        Rational[4, 5]}}, 
      Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
      Dynamic[{1, 1} - $CellContext`\[Epsilon]$$]}, {{
       Hold[$CellContext`e1$$], {
        Rational[3, 4], 
        Rational[1, 5]}}, 
      Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
      Dynamic[{1, 1} - $CellContext`\[Epsilon]$$]}}, Typeset`size$$ = {
    62., {2., 9.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False, $CellContext`progress$285883$$ = 
    0, $CellContext`\[Epsilon]$285884$$ = 0, $CellContext`s2$285885$$ = 
    0, $CellContext`s1$285886$$ = 0, $CellContext`e2$285887$$ = 
    0, $CellContext`e1$285888$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, "Variables" :> {$CellContext`e1$$ = {
          Rational[3, 4], 
          Rational[1, 5]}, $CellContext`e2$$ = {
          Rational[3, 4], 
          Rational[4, 5]}, $CellContext`progress$$ = 1, $CellContext`s1$$ = {
          Rational[3, 4], 
          Rational[4, 5]}, $CellContext`s2$$ = {
          Rational[3, 4], 
          Rational[1, 5]}, $CellContext`\[Epsilon]$$ = Rational[1, 20]}, 
      "ControllerVariables" :> {
        Hold[$CellContext`progress$$, $CellContext`progress$285883$$, 0], 
        Hold[$CellContext`\[Epsilon]$$, $CellContext`\[Epsilon]$285884$$, 0], 
        
        Hold[$CellContext`s2$$, $CellContext`s2$285885$$, 0], 
        Hold[$CellContext`s1$$, $CellContext`s1$285886$$, 0], 
        Hold[$CellContext`e2$$, $CellContext`e2$285887$$, 0], 
        Hold[$CellContext`e1$$, $CellContext`e1$285888$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`movesAndPositions$, $CellContext`path$, \
$CellContext`path1$, $CellContext`path2$, $CellContext`r$ = 
         1/40, $CellContext`thickness$ = 
         0.005, $CellContext`rotateSolution$, $CellContext`ps1$, \
$CellContext`pe1$, $CellContext`ps2$, $CellContext`pe2$, $CellContext`pm1$, \
$CellContext`pm2$, $CellContext`offset$, $CellContext`c1$ = 
         Blue, $CellContext`c2$ = 
         Magenta, $CellContext`mvNum$, $CellContext`mvFrac$}, \
{$CellContext`ps1$, $CellContext`pe1$, $CellContext`ps2$, $CellContext`pe2$} = \
{$CellContext`s1$$, $CellContext`e1$$, $CellContext`s2$$, $CellContext`e2$$}; \
{$CellContext`path$, $CellContext`path1$, $CellContext`path2$} = \
$CellContext`optimal2robotPath[$CellContext`ps1$, $CellContext`ps2$, \
$CellContext`pe1$, $CellContext`pe2$, $CellContext`\[Epsilon]$$]; \
$CellContext`mvNum$ = 
         Floor[$CellContext`progress$$ (Length[$CellContext`path$] - 
            1)]; $CellContext`mvFrac$ = 
         FractionalPart[$CellContext`progress$$ (Length[$CellContext`path$] - 
            1)]; $CellContext`pm2$ = 
         If[$CellContext`mvFrac$ > 0, 
           Part[$CellContext`path2$, $CellContext`mvNum$ + 1, 
             Span[1, All]] + $CellContext`mvFrac$ (
             Part[$CellContext`path2$, $CellContext`mvNum$ + 2, 
               Span[1, All]] - 
             Part[$CellContext`path2$, $CellContext`mvNum$ + 1, 
              Span[1, All]]), 
           Part[$CellContext`path2$, $CellContext`mvNum$ + 1, 
            Span[1, All]]]; $CellContext`pm1$ = 
         If[$CellContext`mvFrac$ > 0, 
           Part[$CellContext`path1$, $CellContext`mvNum$ + 1, 
             Span[1, All]] + $CellContext`mvFrac$ (
             Part[$CellContext`path1$, $CellContext`mvNum$ + 2, 
               Span[1, All]] - 
             Part[$CellContext`path1$, $CellContext`mvNum$ + 1, 
              Span[1, All]]), 
           Part[$CellContext`path1$, $CellContext`mvNum$ + 1, 
            Span[1, All]]]; Graphics[{{
            Darker[Red], 
            Rectangle[(-0.025) {1, 1}, 1.025 {1, 1}]}, {
            Lighter[Gray, 0.8], 
            Rectangle[{0, 0}, {1, 1}]}, {White, 
            
            Rectangle[{$CellContext`\[Epsilon]$$, $CellContext`\[Epsilon]$$}, \
{1 - $CellContext`\[Epsilon]$$, 1 - $CellContext`\[Epsilon]$$}]}, {
            Lighter[Gray, 0.8], 
            Disk[$CellContext`ps2$, $CellContext`\[Epsilon]$$]}, {
            Lighter[Gray, 0.8], 
            Disk[$CellContext`pe2$, $CellContext`\[Epsilon]$$]}, 
           PointSize[0.01], 
           Arrowheads[0.03], 
           Thickness[$CellContext`thickness$], {$CellContext`c1$, {
             Opacity[0.3], Dashed, 
             Arrow[{$CellContext`ps1$, $CellContext`pe1$}]}, 
            Point[$CellContext`ps1$], 
            EdgeForm[
             Directive[$CellContext`c1$, 
              Thickness[$CellContext`thickness$]]], 
            FaceForm[None], 
            
            Rectangle[$CellContext`ps1$ - (2/3) $CellContext`r$ {1, 
              1}, $CellContext`ps1$ + (2/3) $CellContext`r$ {1, 1}], 
            Circle[$CellContext`pe1$, $CellContext`r$]}, {$CellContext`c2$, {
             Opacity[0.3], Dashed, 
             Arrow[{$CellContext`ps2$, $CellContext`pe2$}]}, 
            Point[$CellContext`ps2$], 
            EdgeForm[
             Directive[$CellContext`c2$, 
              Thickness[$CellContext`thickness$]]], 
            FaceForm[None], 
            
            Rectangle[$CellContext`ps2$ - (2/3) $CellContext`r$ {1, 
              1}, $CellContext`ps2$ + (2/3) $CellContext`r$ {1, 1}], 
            Circle[$CellContext`pe2$, $CellContext`r$]}, {$CellContext`c1$, 
            Table[
             Arrow[{
               Part[$CellContext`path1$, $CellContext`i, 
                Span[1, All]], 
               Part[$CellContext`path1$, $CellContext`i + 1, 
                Span[1, All]]}], {$CellContext`i, 1, $CellContext`mvNum$}], 
            Arrow[{
              Part[$CellContext`path1$, $CellContext`mvNum$ + 1, 
               Span[1, All]], $CellContext`pm1$}], {
             If[
              Or[
              Part[$CellContext`pm1$, 1] == 0, Part[$CellContext`pm1$, 2] == 
               0, Part[$CellContext`pm1$, 1] == 1, Part[$CellContext`pm1$, 2] == 
               1], {
               Point[$CellContext`pm1$], 
               PointSize[0.005], White, 
               Point[$CellContext`pm1$]}, 
              Point[$CellContext`pm1$]]}}, {$CellContext`c2$, 
            Table[
             Arrow[{
               Part[$CellContext`path2$, $CellContext`i, 
                Span[1, All]], 
               Part[$CellContext`path2$, $CellContext`i + 1, 
                Span[1, All]]}], {$CellContext`i, 1, $CellContext`mvNum$}], 
            Arrow[{
              Part[$CellContext`path2$, $CellContext`mvNum$ + 1, 
               Span[1, All]], $CellContext`pm2$}], {
             If[
              Or[
              Part[$CellContext`pm2$, 1] == 0, Part[$CellContext`pm2$, 2] == 
               0, Part[$CellContext`pm2$, 1] == 1, Part[$CellContext`pm2$, 2] == 
               1], {
               Point[$CellContext`pm2$], 
               PointSize[0.005], White, 
               Point[$CellContext`pm2$]}, 
              Point[$CellContext`pm2$]]}}, {
           If[$CellContext`mvNum$ + 1 == 
              Length[$CellContext`path$], {$CellContext`mvNum$ = 
               Length[$CellContext`path$] - 2, $CellContext`mvFrac$ = 1}]; 
            Darker[Red], 
            Text[
             Style[
              StringForm[
              "Move `` of ``", $CellContext`mvNum$ + 1, 
               Length[$CellContext`path$] - 1], FontSize -> 18], {1.55, 0.9}], 
            Text[
             Style[
              StringForm["Total Distance `` ", 
               Round[
                N[
                 Total[
                  Table[
                   EuclideanDistance[
                    Part[$CellContext`path$, $CellContext`i], {0, 
                    0}], {$CellContext`i, 2, 
                    Length[$CellContext`path$]}]]], 0.01]], FontSize -> 18], {
             1.55, 0.8}], $CellContext`offset$ = {1.55, 0.5} - (1/2) 
              Part[$CellContext`path$, $CellContext`mvNum$ + 2, 
                Span[1, All]]; {
              Opacity[0.3], 
              
              Arrow[{$CellContext`offset$, $CellContext`offset$ + 
                Part[$CellContext`path$, $CellContext`mvNum$ + 2, 
                  Span[1, All]]}]}, 
            
            Point[$CellContext`offset$ + $CellContext`mvFrac$ 
              Part[$CellContext`path$, $CellContext`mvNum$ + 2, 
                Span[1, All]]], 
            
            Arrow[{$CellContext`offset$, $CellContext`offset$ + \
$CellContext`mvFrac$ Part[$CellContext`path$, $CellContext`mvNum$ + 2, 
                 Span[1, All]]}]}}, ImageSize -> 800, 
          PlotRange -> {{-0.05, 2.05}, {-0.05, 1.05}}]], 
      "Specifications" :> {{{$CellContext`progress$$, 1, "progress"}, 0, 1, 
         Rational[1, 420], ControlType -> Slider, Appearance -> "Labeled", 
         ControlPlacement -> 1}, {{$CellContext`\[Epsilon]$$, 
          Rational[1, 20], "\[Epsilon]"}, 
         Rational[1, 1000], 
         Rational[1, 10], 
         Rational[1, 1000], ControlType -> Slider, Appearance -> "Labeled", 
         ControlPlacement -> 2}, 
        Row[{
          Manipulate`Place[1], 
          Manipulate`Place[2]}], {{$CellContext`s2$$, {
           Rational[3, 4], 
           Rational[1, 5]}}, 
         Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
         Dynamic[{1, 1} - $CellContext`\[Epsilon]$$], ControlType -> Locator, 
         Appearance -> None}, {{$CellContext`s1$$, {
           Rational[3, 4], 
           Rational[4, 5]}}, 
         Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
         Dynamic[{1, 1} - $CellContext`\[Epsilon]$$], ControlType -> Locator, 
         Appearance -> None}, {{$CellContext`e2$$, {
           Rational[3, 4], 
           Rational[4, 5]}}, 
         Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
         Dynamic[{1, 1} - $CellContext`\[Epsilon]$$], ControlType -> Locator, 
         Appearance -> None}, {{$CellContext`e1$$, {
           Rational[3, 4], 
           Rational[1, 5]}}, 
         Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
         Dynamic[{1, 1} - $CellContext`\[Epsilon]$$], ControlType -> Locator, 
         Appearance -> None}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{578., {53., 58.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`r = 1/40, $CellContext`optimal2robotPath[
         Pattern[$CellContext`s1, 
          Blank[]], 
         Pattern[$CellContext`s2, 
          Blank[]], 
         Pattern[$CellContext`g1, 
          Blank[]], 
         Pattern[$CellContext`g2, 
          Blank[]], 
         Pattern[$CellContext`\[Epsilon], 
          Blank[]]] := 
       Module[{$CellContext`optimalPathList, $CellContext`bestMoveSeq, \
$CellContext`dist1, $CellContext`iter = 
          0}, $CellContext`optimalPathList = {{
            Infinity, $CellContext`s1, $CellContext`s2, {{0, 
             0}}, {$CellContext`s1}, {$CellContext`s2}, 
             False}}; $CellContext`dist1 = \
$CellContext`distanceMoved[$CellContext`admissibleHeuristic[$CellContext`s1, \
$CellContext`s2, $CellContext`g1, $CellContext`g2] + 0]; 
         While[Part[$CellContext`optimalPathList, 1, 7] != True, 
           
           Module[{$CellContext`pathToExplore, $CellContext`r1, \
$CellContext`r2, $CellContext`wallMoves, $CellContext`moves, \
$CellContext`pm1, $CellContext`pm2, $CellContext`isPathComplete}, \
$CellContext`pathToExplore = 
             First[$CellContext`optimalPathList]; \
$CellContext`optimalPathList = 
             Delete[$CellContext`optimalPathList, 1]; $CellContext`r1 = 
             Part[$CellContext`pathToExplore, 2]; $CellContext`r2 = 
             Part[$CellContext`pathToExplore, 3]; $CellContext`moves = 
             Part[$CellContext`pathToExplore, 4]; $CellContext`pm1 = 
             Part[$CellContext`pathToExplore, 5]; $CellContext`pm2 = 
             Part[$CellContext`pathToExplore, 6]; $CellContext`isPathComplete = 
             Part[$CellContext`pathToExplore, 7]; AddTo[$CellContext`iter, 1]; 
            If[$CellContext`isPathComplete != True, 
              Table[$CellContext`wallMoves = \
$CellContext`wallFrictionMoveDir[$CellContext`dir, $CellContext`r1, \
$CellContext`r2, $CellContext`g1, $CellContext`g2, $CellContext`moves, \
$CellContext`pm1, $CellContext`pm2, $CellContext`\[Epsilon]]; \
$CellContext`optimalPathList = 
                 AppendTo[$CellContext`optimalPathList, \
$CellContext`wallMoves]; 
                Null, {$CellContext`dir, {
                 "u", "d", "l", "r"}}]; $CellContext`optimalPathList = 
               SortBy[$CellContext`optimalPathList, First]; Null]]]; Return[{
            Part[
             Part[$CellContext`optimalPathList, 1], 4], 
            Part[
             Part[$CellContext`optimalPathList, 1], 5], 
            Part[
             Part[$CellContext`optimalPathList, 1], 6]}]], $CellContext`g1 = {
        1/2, 2/3}, $CellContext`distanceMoved[
         Pattern[$CellContext`moves, 
          Blank[]]] := Total[
         Table[
          
          Norm[$CellContext`m], {$CellContext`m, $CellContext`moves}]], \
$CellContext`admissibleHeuristic[
         Pattern[$CellContext`s1, 
          Blank[]], 
         Pattern[$CellContext`s2, 
          Blank[]], 
         Pattern[$CellContext`g1, 
          Blank[]], 
         Pattern[$CellContext`g2, 
          Blank[]]] := Max[
         EuclideanDistance[$CellContext`g1, $CellContext`s1], 
         EuclideanDistance[$CellContext`g2, $CellContext`s2]], \
$CellContext`wallFrictionMoveDir[
         Pattern[$CellContext`dir, 
          Blank[]], 
         Pattern[$CellContext`s1, 
          Blank[]], 
         Pattern[$CellContext`s2, 
          Blank[]], 
         Pattern[$CellContext`g1, 
          Blank[]], 
         Pattern[$CellContext`g2, 
          Blank[]], 
         Pattern[$CellContext`moves, 
          Blank[]], 
         Pattern[$CellContext`pm1, 
          Blank[]], 
         Pattern[$CellContext`pm2, 
          Blank[]], 
         Pattern[$CellContext`\[Epsilon], 
          Blank[]]] := 
       Module[{$CellContext`\[CapitalDelta]ex, \
$CellContext`\[CapitalDelta]ey, $CellContext`path = $CellContext`moves, \
$CellContext`path1 = $CellContext`pm1, $CellContext`path2 = \
$CellContext`pm2}, {$CellContext`\[CapitalDelta]ex, $CellContext`\
\[CapitalDelta]ey} = ($CellContext`g2 - $CellContext`g1) - ($CellContext`s2 - \
$CellContext`s1); If[
           And[-0.00001 <= $CellContext`\[CapitalDelta]ex <= 0.00001, 
            
            Inequality[-0.00001, LessEqual, $CellContext`\[CapitalDelta]ey, 
             Less, 0.00001]], 
           AppendTo[$CellContext`path, {
             Part[$CellContext`g2, 1] - Part[$CellContext`s2, 1], 
              Part[$CellContext`g2, 2] - Part[$CellContext`s2, 2]}]; 
           AppendTo[$CellContext`path1, $CellContext`g1]; 
           AppendTo[$CellContext`path2, $CellContext`g2]; Return[{
              $CellContext`distanceMoved[$CellContext`path], $CellContext`g1, \
$CellContext`g2, $CellContext`path, $CellContext`path1, $CellContext`path2, 
              True}]]; 
         Module[{$CellContext`r1, $CellContext`r2, \
$CellContext`newPathEntries, $CellContext`s1t, $CellContext`s2t, \
$CellContext`g1t, $CellContext`g2t, $CellContext`movest, $CellContext`pm1st, \
$CellContext`pm2st}, 
           If[$CellContext`dir == 
             "u", $CellContext`newPathEntries = \
$CellContext`wallFrictionMoveUp[$CellContext`s1, $CellContext`s2, \
$CellContext`g1, $CellContext`g2, $CellContext`moves, $CellContext`pm1, \
$CellContext`pm2, $CellContext`\[Epsilon]]; Null]; 
           If[$CellContext`dir == 
             "d", {$CellContext`s1t, $CellContext`s2t, $CellContext`g1t, \
$CellContext`g2t} = 
              Map[$CellContext`rotate180, {$CellContext`s1, $CellContext`s2, \
$CellContext`g1, $CellContext`g2}]; $CellContext`movest = 
              Map[$CellContext`rotate180inplace, $CellContext`moves]; \
$CellContext`pm1st = 
              Map[$CellContext`rotate180, $CellContext`pm1]; \
$CellContext`pm2st = 
              Map[$CellContext`rotate180, $CellContext`pm2]; \
$CellContext`newPathEntries = \
$CellContext`wallFrictionMoveUp[$CellContext`s1t, $CellContext`s2t, \
$CellContext`g1t, $CellContext`g2t, $CellContext`movest, $CellContext`pm1st, \
$CellContext`pm2st, $CellContext`\[Epsilon]]; 
             Part[$CellContext`newPathEntries, 2] = $CellContext`rotate180[
                Part[$CellContext`newPathEntries, 2]]; 
             Part[$CellContext`newPathEntries, 3] = $CellContext`rotate180[
                Part[$CellContext`newPathEntries, 3]]; 
             Part[$CellContext`newPathEntries, 4] = 
              Map[$CellContext`rotate180inplace, 
                Part[$CellContext`newPathEntries, 4]]; 
             Part[$CellContext`newPathEntries, 5] = 
              Map[$CellContext`rotate180, 
                Part[$CellContext`newPathEntries, 5]]; 
             Part[$CellContext`newPathEntries, 6] = 
              Map[$CellContext`rotate180, 
                Part[$CellContext`newPathEntries, 6]]; Null]; 
           If[$CellContext`dir == 
             "r", {$CellContext`s1t, $CellContext`s2t, $CellContext`g1t, \
$CellContext`g2t} = 
              Map[$CellContext`rotate90, {$CellContext`s1, $CellContext`s2, \
$CellContext`g1, $CellContext`g2}]; $CellContext`movest = 
              Map[$CellContext`rotate90inplace, $CellContext`moves]; \
$CellContext`pm1st = 
              Map[$CellContext`rotate90, $CellContext`pm1]; \
$CellContext`pm2st = 
              Map[$CellContext`rotate90, $CellContext`pm2]; \
$CellContext`newPathEntries = \
$CellContext`wallFrictionMoveUp[$CellContext`s1t, $CellContext`s2t, \
$CellContext`g1t, $CellContext`g2t, $CellContext`movest, $CellContext`pm1st, \
$CellContext`pm2st, $CellContext`\[Epsilon]]; 
             Part[$CellContext`newPathEntries, 2] = $CellContext`rotate270[
                Part[$CellContext`newPathEntries, 2]]; 
             Part[$CellContext`newPathEntries, 3] = $CellContext`rotate270[
                Part[$CellContext`newPathEntries, 3]]; 
             Part[$CellContext`newPathEntries, 4] = 
              Map[$CellContext`rotate270inplace, 
                Part[$CellContext`newPathEntries, 4]]; 
             Part[$CellContext`newPathEntries, 5] = 
              Map[$CellContext`rotate270, 
                Part[$CellContext`newPathEntries, 5]]; 
             Part[$CellContext`newPathEntries, 6] = 
              Map[$CellContext`rotate270, 
                Part[$CellContext`newPathEntries, 6]]]; 
           If[$CellContext`dir == 
             "l", {$CellContext`s1t, $CellContext`s2t, $CellContext`g1t, \
$CellContext`g2t} = 
              Map[$CellContext`rotate270, {$CellContext`s1, $CellContext`s2, \
$CellContext`g1, $CellContext`g2}]; $CellContext`movest = 
              Map[$CellContext`rotate270inplace, $CellContext`moves]; \
$CellContext`pm1st = 
              Map[$CellContext`rotate270, $CellContext`pm1]; \
$CellContext`pm2st = 
              Map[$CellContext`rotate270, $CellContext`pm2]; \
$CellContext`newPathEntries = \
$CellContext`wallFrictionMoveUp[$CellContext`s1t, $CellContext`s2t, \
$CellContext`g1t, $CellContext`g2t, $CellContext`movest, $CellContext`pm1st, \
$CellContext`pm2st, $CellContext`\[Epsilon]]; 
             Part[$CellContext`newPathEntries, 2] = $CellContext`rotate90[
                Part[$CellContext`newPathEntries, 2]]; 
             Part[$CellContext`newPathEntries, 3] = $CellContext`rotate90[
                Part[$CellContext`newPathEntries, 3]]; 
             Part[$CellContext`newPathEntries, 4] = 
              Map[$CellContext`rotate90inplace, 
                Part[$CellContext`newPathEntries, 4]]; 
             Part[$CellContext`newPathEntries, 5] = Map[$CellContext`rotate90, 
                Part[$CellContext`newPathEntries, 5]]; 
             Part[$CellContext`newPathEntries, 6] = Map[$CellContext`rotate90, 
                Part[$CellContext`newPathEntries, 6]]]; 
           Return[$CellContext`newPathEntries]]], \
$CellContext`wallFrictionMoveUp[
         Pattern[$CellContext`r1in, 
          Blank[]], 
         Pattern[$CellContext`r2in, 
          Blank[]], 
         Pattern[$CellContext`g1in, 
          Blank[]], 
         Pattern[$CellContext`g2in, 
          Blank[]], 
         Pattern[$CellContext`moves, 
          Blank[]], 
         Pattern[$CellContext`pm1, 
          Blank[]], 
         Pattern[$CellContext`pm2, 
          Blank[]], 
         Pattern[$CellContext`\[Epsilon], 
          Blank[]]] := 
       Module[{$CellContext`r1, $CellContext`r2, $CellContext`g1, \
$CellContext`g2, $CellContext`\[CapitalDelta]gx, \
$CellContext`\[CapitalDelta]gy, $CellContext`m0, $CellContext`m1, \
$CellContext`m2, $CellContext`r1out, $CellContext`r2out, $CellContext`\
\[CapitalDelta]tgx, $CellContext`\[CapitalDelta]tgy, $CellContext`\
\[CapitalDelta]ey, $CellContext`\[CapitalDelta]ex, $CellContext`L = 
          1, $CellContext`path1 = $CellContext`pm1, $CellContext`path2 = \
$CellContext`pm2, $CellContext`path, $CellContext`isMirrored = 
          False, $CellContext`isFlipped = 
          False}, {$CellContext`r1, $CellContext`r2, $CellContext`g1, \
$CellContext`g2, $CellContext`isMirrored, $CellContext`isFlipped, \
$CellContext`path} = $CellContext`ensurer1r2[$CellContext`r1in, \
$CellContext`r2in, $CellContext`g1in, $CellContext`g2in, $CellContext`moves]; \
{$CellContext`\[CapitalDelta]gx, $CellContext`\[CapitalDelta]gy} = \
$CellContext`g2 - $CellContext`g1; If[Part[$CellContext`r2, 2] == 1, 
           
           Return[{Infinity, $CellContext`r1, $CellContext`r2, \
$CellContext`path, $CellContext`path1, $CellContext`path2, False}]]; 
         If[Part[$CellContext`r2, 1] - Part[$CellContext`r1, 1] - 1 + 
            2 $CellContext`\[Epsilon] > $CellContext`\[CapitalDelta]gx, \
$CellContext`\[CapitalDelta]tgx = 
           Part[$CellContext`r2, 1] - Part[$CellContext`r1, 1] - 1 + 
            2 $CellContext`\[Epsilon], $CellContext`\[CapitalDelta]tgx = \
$CellContext`\[CapitalDelta]gx]; 
         If[$CellContext`\[CapitalDelta]gy > 
           0, $CellContext`\[CapitalDelta]tgy = 
           0, $CellContext`\[CapitalDelta]tgy = \
$CellContext`\[CapitalDelta]gy]; 
         If[$CellContext`\[CapitalDelta]gy < 
           Part[$CellContext`r2, 2] - 
            Part[$CellContext`r1, 2], $CellContext`\[CapitalDelta]tgy = 
           Part[$CellContext`r2, 2] - 
            Part[$CellContext`r1, 2]]; $CellContext`m0 = {0, 0}; If[
           And[
           Part[$CellContext`r2, 1] - Part[$CellContext`r1, 1] - 1 + 
             2 $CellContext`\[Epsilon] <= $CellContext`\[CapitalDelta]tgx <= 
            1 - 2 $CellContext`\[Epsilon], 
            Part[$CellContext`r2, 2] - 
             Part[$CellContext`r1, 2] <= $CellContext`\[CapitalDelta]tgy <= 
            0], $CellContext`m1 = {((1 - Part[$CellContext`r1, 2])/(2 - 
               Part[$CellContext`g1, 2] - Part[$CellContext`r1, 2])) (
               Part[$CellContext`g1, 1] - Part[$CellContext`r1, 1]), 1 - 
              Part[$CellContext`r1, 2]}; 
           Null, $CellContext`m1 = {0, 1 - Part[$CellContext`r1, 2]}; Null]; 
         If[Part[$CellContext`r1, 1] + 
            Part[$CellContext`m1, 1] + $CellContext`\[CapitalDelta]tgx > 1, 
           Part[$CellContext`m1, 1] = 
           1 - $CellContext`\[CapitalDelta]tgx - Part[$CellContext`r1, 1], 
           If[
           Part[$CellContext`r1, 1] + 
             Part[$CellContext`m1, 1] + $CellContext`\[CapitalDelta]tgx < 0, 
            Part[$CellContext`m1, 1] = -$CellContext`\[CapitalDelta]tgx - 
             Part[$CellContext`r1, 1]]]; 
         If[Part[$CellContext`r2, 1] + Part[$CellContext`m1, 1] > 1, 
           Part[$CellContext`m1, 1] = 1 - Part[$CellContext`r2, 1], 
           If[
           Part[$CellContext`r2, 1] + Part[$CellContext`m1, 1] < 0, 
            Part[$CellContext`m1, 1] = -Part[$CellContext`r2, 1]]]; 
         If[Part[$CellContext`r1, 2] == 1, $CellContext`m1 = {0, 0}, 
           If[Part[$CellContext`m1, 1] == 0, If[
              Or[
              Part[$CellContext`r1, 1] == 1, Part[$CellContext`r2, 1] == 1], 
              SubtractFrom[
               Part[$CellContext`m1, 1], $CellContext`\[Epsilon]]]; If[
              Or[
              Part[$CellContext`r1, 1] == 0, Part[$CellContext`r2, 1] == 0], 
              AddTo[
               Part[$CellContext`m1, 1], $CellContext`\[Epsilon]]]]]; 
         AddTo[$CellContext`r1, $CellContext`m1]; 
         AddTo[$CellContext`r2, $CellContext`m1]; {$CellContext`\
\[CapitalDelta]ex, $CellContext`\[CapitalDelta]ey} = {$CellContext`\
\[CapitalDelta]tgx, $CellContext`\[CapitalDelta]tgy} - ($CellContext`r2 - \
$CellContext`r1); If[$CellContext`\[CapitalDelta]ex >= 0, $CellContext`m2 = {
             
             Min[$CellContext`\[CapitalDelta]tgx - (Part[$CellContext`r2, 1] - 
              Part[$CellContext`r1, 1]), 1 - 
              Part[$CellContext`r2, 1]], $CellContext`\[CapitalDelta]tgy - (
             Part[$CellContext`r2, 2] - 
             Part[$CellContext`r1, 2])}, $CellContext`m2 = {
             
             Max[$CellContext`\[CapitalDelta]tgx - (Part[$CellContext`r2, 1] - 
              Part[$CellContext`r1, 1]), -
              Part[$CellContext`r2, 1]], $CellContext`\[CapitalDelta]tgy - (
             Part[$CellContext`r2, 2] - Part[$CellContext`r1, 2])}]; If[
           And[
           Part[$CellContext`r1, 1] - $CellContext`\[Epsilon]/2 <= 
            Part[$CellContext`r2, 1] + Part[$CellContext`m2, 1] <= 
            Part[$CellContext`r1, 1] + $CellContext`\[Epsilon]/2, 
            Part[$CellContext`r1, 2] == 
            Part[$CellContext`r2, 2] + Part[$CellContext`m2, 2]], 
           If[
           Part[$CellContext`r2, 1] + 
             Part[$CellContext`m2, 1] > $CellContext`L/2, 
            AddTo[
             Part[$CellContext`m2, 1], 
             Part[$CellContext`r1, 1] + $CellContext`\[Epsilon] - 
             Part[$CellContext`r2, 1] - Part[$CellContext`m2, 1]], 
            AddTo[
             Part[$CellContext`m2, 1], 
             Part[$CellContext`r1, 1] - $CellContext`\[Epsilon] - 
             Part[$CellContext`r2, 1] - Part[$CellContext`m2, 1]]]]; 
         If[Part[$CellContext`r2, 2] == 1, $CellContext`m2 = {0, 0}]; 
         AddTo[If[$CellContext`m1 != {0, 0}, 
             AppendTo[$CellContext`path, $CellContext`m1]; \
{$CellContext`r1out, $CellContext`r2out} = \
$CellContext`returnr1r2[$CellContext`isFlipped, $CellContext`isMirrored, \
$CellContext`r1, $CellContext`r2]; 
             AppendTo[$CellContext`path1, $CellContext`r1out]; 
             AppendTo[$CellContext`path2, $CellContext`r2out]; 
             Null] $CellContext`r2, $CellContext`m2]; 
         AppendTo[$CellContext`path, $CellContext`m2]; {$CellContext`r1out, \
$CellContext`r2out} = $CellContext`returnr1r2[$CellContext`isFlipped, \
$CellContext`isMirrored, $CellContext`r1, $CellContext`r2]; 
         AppendTo[$CellContext`path1, $CellContext`r1out]; 
         AppendTo[$CellContext`path2, $CellContext`r2out]; 
         If[$CellContext`isMirrored, $CellContext`path = 
            Map[$CellContext`mirrorInplace, $CellContext`path]; Null]; Return[{
            If[
             
             And[-0.00001 < Part[$CellContext`m2, 1] < 0.00001, -0.00001 < 
              Part[$CellContext`m2, 2] < 0.00001], 
             Infinity, $CellContext`distanceMoved[$CellContext`path] + \
$CellContext`admissibleHeuristic[$CellContext`r1out, $CellContext`r2out, \
$CellContext`g1, $CellContext`g2]], $CellContext`r1out, $CellContext`r2out, \
$CellContext`path, $CellContext`path1, $CellContext`path2, 
            False}]], $CellContext`ensurer1r2[
         Pattern[$CellContext`r1in, 
          Blank[]], 
         Pattern[$CellContext`r2in, 
          Blank[]], 
         Pattern[$CellContext`g1in, 
          Blank[]], 
         Pattern[$CellContext`g2in, 
          Blank[]], 
         Pattern[$CellContext`moves, 
          Blank[]]] := 
       Module[{$CellContext`r1, $CellContext`r2, $CellContext`isFlipped, \
$CellContext`isMirrored, $CellContext`g1, $CellContext`g2, \
$CellContext`path}, $CellContext`isFlipped = False; $CellContext`isMirrored = 
          False; If[Part[$CellContext`r1in, 2] < Part[$CellContext`r2in, 2], 
           If[
           Part[$CellContext`r1in, 1] > 
            Part[$CellContext`r2in, 
              1], {$CellContext`r1, $CellContext`r2, $CellContext`g1, \
$CellContext`g2} = {$CellContext`r2in, $CellContext`r1in, $CellContext`g2in, \
$CellContext`g1in}; $CellContext`isFlipped = 
             True; $CellContext`path = $CellContext`moves, {$CellContext`r1, \
$CellContext`r2, $CellContext`g1, $CellContext`g2} = 
             Map[$CellContext`mirror, {$CellContext`r2in, $CellContext`r1in, \
$CellContext`g2in, $CellContext`g1in}]; $CellContext`path = 
             Map[$CellContext`mirrorInplace, $CellContext`moves]; \
$CellContext`isFlipped = True; $CellContext`isMirrored = True], 
           If[Part[$CellContext`r1in, 1] > 
             Part[$CellContext`r2in, 
               1], {$CellContext`r1, $CellContext`r2, $CellContext`g1, \
$CellContext`g2} = 
              Map[$CellContext`mirror, {$CellContext`r1in, $CellContext`r2in, \
$CellContext`g1in, $CellContext`g2in}]; $CellContext`path = 
              Map[$CellContext`mirrorInplace, $CellContext`moves]; \
$CellContext`isMirrored = 
              True, {$CellContext`r1, $CellContext`r2, $CellContext`g1, \
$CellContext`g2} = {$CellContext`r1in, $CellContext`r2in, $CellContext`g1in, \
$CellContext`g2in}; $CellContext`path = $CellContext`moves]; Null]; 
         Return[{$CellContext`r1, $CellContext`r2, $CellContext`g1, \
$CellContext`g2, $CellContext`isMirrored, $CellContext`isFlipped, \
$CellContext`path}]], $CellContext`mirror[
         Pattern[$CellContext`r, 
          Blank[]]] := {1 - Part[$CellContext`r, 1], 
         Part[$CellContext`r, 2]}, $CellContext`mirrorInplace[
         Pattern[$CellContext`r, 
          Blank[]]] := {-Part[$CellContext`r, 1], 
         Part[$CellContext`r, 
          2]}, $CellContext`returnr1r2[$CellContext`isFlipped, \
$CellContext`isMirrored, $CellContext`r1, $CellContext`r2] := 
       Module[{$CellContext`r1out, $CellContext`r2out}, 
         If[$CellContext`isMirrored, 
           
           If[$CellContext`isFlipped, $CellContext`r1out = \
$CellContext`mirror[$CellContext`r2]; $CellContext`r2out = \
$CellContext`mirror[$CellContext`r1], $CellContext`r1out = \
$CellContext`mirror[$CellContext`r1]; $CellContext`r2out = \
$CellContext`mirror[$CellContext`r2]], 
           
           If[$CellContext`isFlipped, $CellContext`r1out = $CellContext`r2; \
$CellContext`r2out = $CellContext`r1], $CellContext`r1out = $CellContext`r1; \
$CellContext`r2out = $CellContext`r2]; 
         Return[{$CellContext`r1out, $CellContext`r2out}]], \
$CellContext`returnr1r2[
         Pattern[$CellContext`isFlipped, 
          Blank[]], 
         Pattern[$CellContext`isMirrored, 
          Blank[]], 
         Pattern[$CellContext`r1, 
          Blank[]], 
         Pattern[$CellContext`r2, 
          Blank[]]] := 
       Module[{$CellContext`r1out, $CellContext`r2out}, 
         If[$CellContext`isMirrored, 
           
           If[$CellContext`isFlipped, $CellContext`r1out = \
$CellContext`mirror[$CellContext`r2]; $CellContext`r2out = \
$CellContext`mirror[$CellContext`r1], $CellContext`r1out = \
$CellContext`mirror[$CellContext`r1]; $CellContext`r2out = \
$CellContext`mirror[$CellContext`r2]], 
           
           If[$CellContext`isFlipped, $CellContext`r1out = $CellContext`r2; \
$CellContext`r2out = $CellContext`r1, $CellContext`r1out = $CellContext`r1; \
$CellContext`r2out = $CellContext`r2]]; 
         Return[{$CellContext`r1out, $CellContext`r2out}]], \
$CellContext`rotate180[
         Pattern[$CellContext`r, 
          Blank[]]] := {
        1 - Part[$CellContext`r, 1], 1 - 
         Part[$CellContext`r, 2]}, $CellContext`rotate180inplace[
         Pattern[$CellContext`r, 
          Blank[]]] := {-Part[$CellContext`r, 1], -
         Part[$CellContext`r, 2]}, $CellContext`rotate90[
         Pattern[$CellContext`r, 
          Blank[]]] := {1 - Part[$CellContext`r, 2], 
         Part[$CellContext`r, 1]}, $CellContext`rotate90inplace[
         Pattern[$CellContext`r, 
          Blank[]]] := {
         Part[$CellContext`r, 2], -
         Part[$CellContext`r, 1]}, $CellContext`rotate270[
         Pattern[$CellContext`r, 
          Blank[]]] := {
         Part[$CellContext`r, 2], 1 - 
         Part[$CellContext`r, 1]}, $CellContext`rotate270inplace[
         Pattern[$CellContext`r, 
          Blank[]]] := {-Part[$CellContext`r, 2], 
         Part[$CellContext`r, 1]}, Attributes[PlotRange] = {ReadProtected}}; 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.696596349689871*^9, 3.696596770385838*^9, 3.696597484807027*^9, {
   3.6965975317238207`*^9, 3.696597572442103*^9}, 3.696597790573915*^9, 
   3.696597892365478*^9, 3.696597952257691*^9, 3.696598184304264*^9, 
   3.696598238656169*^9, 3.696598551325549*^9, 3.696598918921794*^9, 
   3.69659904361847*^9, {3.6965991659311132`*^9, 3.696599206336728*^9}, {
   3.696599239721751*^9, 3.69659928596164*^9}, {3.69659999223602*^9, 
   3.6966000032126913`*^9}, 3.6966001045283737`*^9, 3.6966002292285357`*^9, 
   3.696600549313752*^9, 3.6966008650695963`*^9, 3.696784907346849*^9, {
   3.696785448284833*^9, 3.696785473237105*^9}, 3.696786215682714*^9, 
   3.696790142338703*^9, 3.696850261208475*^9, 3.6968676935504627`*^9, 
   3.696869156821389*^9, 3.696869323280109*^9, 3.696869866727229*^9, 
   3.6968700496951923`*^9, 3.696870135991267*^9, 3.696870556112776*^9, 
   3.6968706580516567`*^9, 3.696870724414126*^9, 3.69687076463761*^9, 
   3.6968708145491047`*^9, 3.696870870369032*^9, 3.696870966617997*^9, {
   3.696873099939547*^9, 3.696873113432846*^9}, {3.6968731743418217`*^9, 
   3.6968731974129353`*^9}, {3.696873228625292*^9, 3.696873252294405*^9}, 
   3.69687350423386*^9, {3.696874092287622*^9, 3.696874118668871*^9}, 
   3.696874444460698*^9, 3.696874507416039*^9, 3.6968747631891737`*^9, 
   3.6968749319529247`*^9, 3.696893507011629*^9, 3.696893587992221*^9, 
   3.6968938192927523`*^9, 3.696893968113257*^9, 3.6968940849397297`*^9, 
   3.696894321521831*^9, {3.696894745555423*^9, 3.696894780007739*^9}, 
   3.696895020402419*^9, 3.6968958353865767`*^9, 3.6968958881901417`*^9, {
   3.696896130425001*^9, 3.696896151939064*^9}, 3.6968963422772207`*^9, 
   3.6968965839238157`*^9, 3.6968966671844788`*^9, 3.696896729070181*^9, 
   3.6968967789876137`*^9, 3.696896930803034*^9, 3.69689721846436*^9, 
   3.696897534351199*^9, 3.696897632747707*^9, 3.696897729325592*^9, {
   3.69689792038686*^9, 3.696897962961606*^9}, 3.696898032496999*^9, 
   3.69689875115201*^9, 3.696898802519636*^9, 3.696930047684367*^9, 
   3.6969301796550694`*^9, {3.696930426961829*^9, 3.696930444180419*^9}, 
   3.6969306461762*^9, 3.696930832269413*^9, {3.696931106349225*^9, 
   3.696931116680509*^9}, 3.696931202841717*^9, 3.696931848835948*^9, {
   3.696932201081221*^9, 3.69693226549193*^9}, 3.696932314544334*^9, 
   3.696943981145722*^9, {3.6969517961851473`*^9, 3.696951815693308*^9}, {
   3.6969518516197777`*^9, 3.6969518643863153`*^9}, 3.6969526954312143`*^9, 
   3.696955678224155*^9, {3.6969557140231133`*^9, 3.696955751477454*^9}, {
   3.696955846108911*^9, 3.696955929291895*^9}, 3.696956051900075*^9, 
   3.696956358969976*^9, 3.697416527547702*^9, {3.697416572718725*^9, 
   3.697416578425651*^9}, 3.6974168909721413`*^9}]
}, Open  ]],

Cell[BoxData[" "], "Input",
 CellChangeTimes->{3.696932072022786*^9}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"s1", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "/", "4"}], ",", 
       RowBox[{"3", "/", "4"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s2", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"3", "/", "4"}], ",", 
       RowBox[{"1", "/", "4"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"g1", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"3", "/", "4"}], ",", 
       RowBox[{"3", "/", "4"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Epsilon]", " ", "=", " ", "0.01"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"distanceVals", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", "y", ",", 
           RowBox[{"distanceMoved", "[", 
            RowBox[{"First", "@", 
             RowBox[{"optimal2robotPath", "[", 
              RowBox[{"s1", ",", "s2", ",", " ", "g1", ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", "y"}], "}"}], ",", "\[Epsilon]"}], "]"}]}], 
            "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "\[Epsilon]", ",", 
           RowBox[{"1", "-", "\[Epsilon]"}], ",", "0.1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", "\[Epsilon]", ",", 
           RowBox[{"1", "-", "\[Epsilon]"}], ",", "0.1"}], "}"}]}], "]"}], 
       ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.697058137815222*^9, 3.697058138470049*^9}, {
  3.697059198634025*^9, 3.69705924485569*^9}, {3.697060941409505*^9, 
  3.6970609453635063`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListContourPlot", "[", 
  RowBox[{"distanceVals", ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"InterpolationOrder", "\[Rule]", "0"}]}], "]"}]], "Input"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1:eJyVmbFu01AYhSNGk5G5jXkEdtSRrZLzCJWYKWGoRJgQKTuv4HbNwkAjVh6A
rRNDBiSkwDtA0nuQ/FlH52bp1fH//+e3fb/rXLvtxav5y0eTyeTZvz/78cvJ
atfdrc/c+LWM756sX2zffhvFN4jfFX1z+by577+P6j8jLp/H9/3+yKiecelD
+PJHjK+L/t3tnbfV8dl+OPkZ49Lzw4n/qo5f7w6G1XFp3Ufd9zR/ytc8LIte
wod5br7Zn34aNX+cb84v+yc/5XG+nWZ/+i3hJ02+klY9z49+0uKJfCVek580
+XOa/ZKfNHlNmvXO76roj4b/tH7c+Smf/tS34NStC3HrOHccc6Q/+9OvL7oP
PLvzSH6KN+A38X0DH47yk048U6sfz49+0olnatY7P+nEMzXrnZ90Z3h2mvXO
T3pVuR7Yj37Mpz81n9NcP+TfPddruad/8mvAmeOZ68X9jpDTadFTHGdf1rk8
+mlcBJ6pG+NDP+UlnqnVL/kp3gaeqVWf/KQdz07PUO/81P+6cj2wnzs/5dOf
2u1LavfR7rmbdK2f487xnfZR9BNXjmOO6XeEftLuuNMpT+PrMjqeHd/0cX46
nniWZr/kJz03PDvdot75aX4c/9TsR79F8GM/Xfcm8C7t9vW1+x7ntzF+7rmb
dNonaT1Ka10m7tnP/U44zhzXbh3y/By37rjjexHyOJJfp5MP/aQTz9Ssd367
osU71wfXA/sd68c431Pd+hH/7r22dt9P/+QnzfVA7d5DnJ/y+Rx264N8qz/P
zz3XE8/udyj5kavaUf2Sn+Jt4NmdR/LT6Hh2emZ86Kc8xz81+x3rx3hX6tJ3
ofRdp/a9l37sTz/F076fvLv3Yvq5fYfT6T3a7WsWhmen0z5J+Z3hLvHtfhfo
R64czxrZL/lJO56ddtzTT/0d/9T0PdaP8VUZ3foh//yO6b67JK169qef4rXv
veyX/Ny+22n2c35uX167D5qinpr7Esez4zvtk5RPjhzP0uyX/KQdz25M60R5
0o5/avY51s+NtbxTu3rHn6t375mO38QH/dJ80y/NH+vTfLA+jW4+H+7bh//3
W3r4/75xfPhddZw//C40zh++147zh/vycf5wXzHOHz4Xx/m8fuYrfnqo+3P2
qX24fqffl+t3+rxcv9NPy/U7/aZcv9Pbcv1ON+X6ndb1S/P6XZxcSCuvlivl
X+G+Mf8WHDG/x31lPjljfoP7znxyuMA8sJ755HSHeaIf88nxDPNIP+Z34LzD
vNKP+Xp+unVCv5Sv4xwVZx6P/wVLcHJR
     "], {{{
        EdgeForm[], 
        RGBColor[0.148, 0.33, 0.54], 
        GraphicsGroupBox[{
          
          PolygonBox[{{507, 462, 463, 464, 506}, {509, 465, 466, 467, 
           508}}]}]}, {
        EdgeForm[], 
        RGBColor[0.287962788316832, 0.40490705020719336`, 0.6497918432897857], 
        GraphicsGroupBox[{
          PolygonBox[{{561, 505, 460, 461, 557}, {511, 468, 469, 470, 510}}], 
          
          
          PolygonBox[{{409, 410, 411, 412, 413, 414}, {415, 416, 417, 418, 
           419, 420}}]}]}, {
        EdgeForm[], 
        RGBColor[0.4463043045598436, 0.4605542284395617, 0.5567092906101878], 
        
        GraphicsGroupBox[{
          
          PolygonBox[{{519, 480, 481, 482, 518}, {515, 474, 475, 476, 514}, {
           513, 471, 472, 473, 512}, {554, 406, 407, 408, 553}}], 
          
          PolygonBox[{{427, 428, 429, 430, 431, 432}, {367, 368, 369, 370, 
           371, 372}, {421, 422, 423, 424, 425, 426}}]}]}, {
        EdgeForm[], 
        RGBColor[
        0.6046458208028549, 0.5162014066719298, 0.46362673793059006`], 
        GraphicsGroupBox[{
          
          PolygonBox[{{546, 298, 299, 300, 545}, {550, 352, 353, 354, 549}, {
           517, 477, 478, 479, 516}, {520, 483, 484, 485, 521}}], 
          PolygonBox[CompressedData["
1:eJwNw1k2AlAAANCHBl/twQIMhURkqBSfLSFkSPkyy6z9KDJlXJl7z7kj1YNK
czCEkDDm40AIHbs++WzPG2+9894H23765bc//vrnuRe2vPTKayedctq0M2Yc
dcxxJ0yactc96+7bsOmGm25Zc9sdX3z1zXc/7Ft01ZJl11x31jmzzrtgziEj
Ro0Zd9hFl1x2xbwFDz3y2BNPPfMfmFUj+w==
           "]]}]}, {
        EdgeForm[], 
        RGBColor[
        0.7629873370458664, 0.5718485849042981, 0.37054418525099225`], 
        GraphicsGroupBox[{
          PolygonBox[{{558, 486, 522, 562}}], 
          
          PolygonBox[{{556, 458, 459, 457, 555}, {542, 244, 245, 246, 541}, {
           538, 190, 191, 192, 537}}], 
          PolygonBox[CompressedData["
1:eJwNzsdRAlAUBdAPC2YMYEYwgfUoBlALoAApw0RTZDYoJlBE2gBMeBZncefN
vfP2i6X8ZTSEkCBGh3se6PLIE0uREJZZYZU11qm4ValRp0GTZ154pUefN94Z
8MGQT0bM2ZpngUXiJNggySYp0mzxq/PHjCBHiFKjToMmLdqckqfAGedcsM0O
u+yRIcsV19xwyx1lDjgkxxHHnDD2xoQpX3zzwz8sKyv2
           "]]}]}, {
        EdgeForm[], 
        RGBColor[
        0.9034071650621212, 0.6285179126553029, 0.30056221169257546`], 
        GraphicsGroupBox[{
          PolygonBox[{{534, 136, 137, 138, 533}, {530, 82, 83, 84, 529}}], 
          
          PolygonBox[{{169, 170, 171, 172, 173, 174}, {175, 176, 177, 178, 
           179, 180}, {199, 200, 201, 202, 203, 204}, {229, 230, 231, 232, 
           233, 234}, {163, 164, 165, 166, 167, 168}, {139, 140, 141, 142, 
           143, 144}, {157, 158, 159, 160, 161, 162}, {145, 146, 147, 148, 
           149, 150}, {223, 224, 225, 226, 227, 228}, {85, 86, 87, 88, 89, 
           90}, {151, 152, 153, 154, 155, 156}}]}]}, {
        EdgeForm[], 
        RGBColor[
        0.9287013369859248, 0.6917533424648121, 0.37897414465636703`], 
        GraphicsGroupBox[{
          PolygonBox[{{523, 1, 487, 559}}], 
          
          PolygonBox[{{540, 242, 243, 241, 539}, {526, 28, 29, 30, 525}, {535,
            187, 188, 189, 536}, {552, 404, 405, 403, 551}, {544, 296, 297, 
           295, 543}, {489, 4, 2, 3, 488}}], 
          
          PolygonBox[{{397, 398, 399, 400, 401, 402}, {343, 344, 345, 346, 
           347, 348}, {31, 32, 33, 34, 35, 36}, {97, 98, 99, 100, 101, 102}, {
           289, 290, 291, 292, 293, 294}, {91, 92, 93, 94, 95, 96}, {37, 38, 
           39, 40, 41, 42}, {235, 236, 237, 238, 239, 240}}]}]}, {
        EdgeForm[], 
        RGBColor[0.9539955089097286, 0.7549887722743216, 0.4573860776201588], 
        
        GraphicsGroupBox[{
          
          PolygonBox[{{548, 350, 351, 349, 547}, {493, 10, 8, 9, 492}, {491, 
           7, 5, 6, 490}}], 
          
          PolygonBox[{{109, 110, 111, 112, 113, 114}, {181, 182, 183, 184, 
           185, 186}, {49, 50, 51, 52, 53, 54}, {43, 44, 45, 46, 47, 48}, {
           103, 104, 105, 106, 107, 108}}]}]}, {
        EdgeForm[], 
        RGBColor[0.9792896808335324, 0.818224202083831, 0.5357980105839504], 
        GraphicsGroupBox[{
          
          PolygonBox[{{531, 133, 134, 135, 532}, {495, 13, 11, 12, 494}, {497,
            16, 14, 15, 496}}], 
          
          PolygonBox[{{115, 116, 117, 118, 119, 120}, {55, 56, 57, 58, 59, 
           60}, {73, 74, 75, 76, 77, 78}, {127, 128, 129, 130, 131, 
           132}}]}]}, {
        EdgeForm[], 
        RGBColor[1., 0.8846683288234757, 0.627503116544017], 
        GraphicsGroupBox[{
          
          PolygonBox[{{499, 19, 17, 18, 498}, {527, 79, 80, 81, 528}, {503, 
           25, 23, 24, 502}, {560, 504, 26, 27, 524}}], 
          PolygonBox[{{121, 122, 123, 124, 125, 126}, {61, 62, 63, 64, 65, 
           66}, {67, 68, 69, 70, 71, 72}}]}]}, {
        EdgeForm[], 
        RGBColor[1., 0.95, 0.75], 
        GraphicsGroupBox[{
          PolygonBox[{{501, 22, 20, 21, 500}}]}]}}}], {
    DisplayFunction -> Identity, AspectRatio -> 1, DisplayFunction :> 
     Identity, Frame -> True, FrameLabel -> {None, None}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {"DefaultBoundaryStyle" -> Automatic}, 
     PlotRange -> {{0.01, 0.91}, {0.01, 0.91}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {
       Scaled[0.02], 
       Scaled[0.02]}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{
             
             RasterBox[{{{0.148, 0.33, 0.54}}, {{0.287962788316832, 
              0.40490705020719336`, 0.6497918432897857}}, {{
              0.4463043045598436, 0.4605542284395617, 0.5567092906101878}}, {{
              0.604645820802855, 0.5162014066719298, 0.46362673793059}}, {{
              0.7629873370458664, 0.5718485849042981, 
              0.37054418525099225`}}, {{0.9034071650621212, 
              0.6285179126553029, 0.30056221169257546`}}, {{
              0.9287013369859248, 0.6917533424648122, 
              0.37897414465636714`}}, {{0.9539955089097286, 
              0.7549887722743217, 0.4573860776201589}}, {{0.9792896808335324, 
              0.818224202083831, 0.5357980105839504}}, {{1., 
              0.8846683288234757, 0.627503116544017}}, {{1., 0.95, 
              0.75}}}, {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}}]]}, {
              CapForm[None], {{
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -92.04545454545455}, {
                    Rational[
                    15, 2], -92.04545454545455}}, {{-7.5, \
-92.04545454545455}, {7.5, -92.04545454545455}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -71.59090909090908}, {
                    Rational[
                    15, 2], -71.59090909090908}}, {{-7.5, \
-71.59090909090908}, {7.5, -71.59090909090908}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -51.136363636363626`}, {
                    Rational[
                    15, 2], -51.136363636363626`}}, {{-7.5, \
-51.136363636363626`}, {7.5, -51.136363636363626`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -30.681818181818187`}, {
                    Rational[
                    15, 2], -30.681818181818187`}}, {{-7.5, \
-30.681818181818187`}, {7.5, -30.681818181818187`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -10.22727272727272}, {
                    Rational[
                    15, 2], -10.22727272727272}}, {{-7.5, \
-10.22727272727272}, {7.5, -10.22727272727272}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 10.227272727272748`}, {
                    Rational[15, 2], 10.227272727272748`}}, {{-7.5, 
                  10.227272727272748`}, {7.5, 10.227272727272748`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 30.681818181818187`}, {
                    Rational[15, 2], 30.681818181818187`}}, {{-7.5, 
                  30.681818181818187`}, {7.5, 30.681818181818187`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 51.136363636363626`}, {
                    Rational[15, 2], 51.136363636363626`}}, {{-7.5, 
                  51.136363636363626`}, {7.5, 51.136363636363626`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 71.5909090909091}, {
                    Rational[15, 2], 71.5909090909091}}, {{-7.5, 
                  71.5909090909091}, {7.5, 71.5909090909091}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 92.04545454545453}, {
                    Rational[15, 2], 92.04545454545453}}, {{-7.5, 
                  92.04545454545453}, {7.5, 92.04545454545453}}]]}}}, {
             Antialiasing -> False, 
              StyleBox[
               
               LineBox[{{7.499999999999999, -112.5}, {7.499999999999999, 
                112.49999999999997`}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.499999999999999, -71.59090909090908}, 
                    
                    Offset[{4., 0}, {
                    7.499999999999999, -71.59090909090908}]}, {{
                    7.499999999999999, -30.681818181818187`}, 
                    
                    Offset[{4., 0}, {
                    7.499999999999999, -30.681818181818187`}]}, {{
                    7.499999999999999, 10.227272727272748`}, 
                    
                    Offset[{4., 0}, {7.499999999999999, 
                    10.227272727272748`}]}, {{7.499999999999999, 
                    51.136363636363626`}, 
                    
                    Offset[{4., 0}, {7.499999999999999, 
                    51.136363636363626`}]}, {{7.499999999999999, 
                    92.04545454545453}, 
                    
                    Offset[{4., 0}, {7.499999999999999, 
                    92.04545454545453}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.499999999999999, -71.59090909090908}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["1.4`", TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.499999999999999, -30.681818181818187`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["1.8`", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.499999999999999, 
                    10.227272727272748`}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["2.2`", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.499999999999999, 
                    51.136363636363626`}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["2.6`", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.499999999999999, 
                    92.04545454545453}], {-1, 0.}, Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"M10DefaultDensityGradient\"", ",", "#1"}], 
                   "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.6846897107449476`", ",", "2.6614296550538636`"}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"0.8`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"1.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"1.2`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"1.4`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"1.6`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"1.8`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"2.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"2.2`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"2.4`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"2.6`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.697059178948986*^9, 3.697060955824806*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.696873139800983*^9, 3.696873141538628*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"optimal2robotPath", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "/", "4"}], ",", 
      RowBox[{"4", "/", "5"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"3", "/", "4"}], ",", 
      RowBox[{"1", "/", "5"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "/", "2"}], ",", 
      RowBox[{"2", "/", "3"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"2", "/", "3"}], ",", 
      RowBox[{"1", "/", "2"}]}], "}"}], " ", ",", "0.001"}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.696349663734374*^9, 3.6963497060449877`*^9}, {
  3.6963497753861113`*^9, 3.696349786284967*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"optimal2robotPath", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0.3", ",", "0.8"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.5", ",", "0.2"}], "}"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"0.4", ",", "0.1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.2", ",", "0.6"}], "}"}], ",", "0.001"}], "]"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.694981580971253*^9, 3.694981591643993*^9}, {
  3.695484721793632*^9, 3.695484784239406*^9}, {3.695506284561764*^9, 
  3.695506290271809*^9}, {3.6963444788214407`*^9, 3.696344528554563*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"optimal2robotPath", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "/", "12"}], ",", 
       RowBox[{"1", "/", "3"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", "/", "3"}], ",", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"1", "/", "3"}], "-", 
        RowBox[{"1", "/", "8"}]}], ",", 
       RowBox[{
        RowBox[{"2", "/", "3"}], "+", 
        RowBox[{"1", "/", "8"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"2", "/", "3"}], "+", 
        RowBox[{"1", "/", "8"}]}], ",", 
       RowBox[{
        RowBox[{"1", "/", "3"}], "-", 
        RowBox[{"1", "/", "8"}]}]}], "}"}], ",", "0.001"}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.696096880158083*^9, 3.6960969188533087`*^9}, 
   3.696349655737053*^9}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"optimal2robotPath", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "/", "3"}], ",", 
       RowBox[{"2", "/", "3"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"2", "/", "3"}], ",", 
       RowBox[{"1", "/", "3"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"1", "/", "3"}], "-", 
        RowBox[{"1", "/", "8"}]}], ",", 
       RowBox[{
        RowBox[{"2", "/", "3"}], "+", 
        RowBox[{"1", "/", "8"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"2", "/", "3"}], "+", 
        RowBox[{"1", "/", "8"}]}], ",", 
       RowBox[{
        RowBox[{"1", "/", "3"}], "-", 
        RowBox[{"1", "/", "8"}]}]}], "}"}], ",", "0.001"}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.695743521179147*^9, 3.695743538715521*^9}, {
  3.695821917466638*^9, 3.695821960568234*^9}, {3.695823067722917*^9, 
  3.695823068237626*^9}, {3.696094431789277*^9, 3.696094486523789*^9}}],

Cell[BoxData[
 RowBox[{"wallFrictionMoveDir", "[", 
  RowBox[{"\"\<u\>\"", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "/", "3"}], ",", 
     RowBox[{"2", "/", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", "/", "3"}], ",", 
     RowBox[{"1", "/", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "/", "3"}], ",", 
     RowBox[{"2", "/", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"2", "/", "3"}], "-", 
      RowBox[{"1", "/", "8"}]}], ",", 
     RowBox[{
      RowBox[{"1", "/", "3"}], "+", 
      RowBox[{"1", "/", "8"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{"0", ",", "0"}], "}"}], "}"}], ",", "0.001"}], "]"}]], "Input",
 CellChangeTimes->{{3.694981107235057*^9, 3.694981225932355*^9}, {
   3.694981285968429*^9, 3.694981288141961*^9}, {3.694981553920746*^9, 
   3.6949815968934917`*^9}, {3.694982981114765*^9, 3.694982986334907*^9}, {
   3.694983721427019*^9, 3.694983782631647*^9}, {3.694983820040352*^9, 
   3.694983845572894*^9}, {3.6949838930866623`*^9, 3.694983921401643*^9}, {
   3.694983951479547*^9, 3.694983976596985*^9}, {3.69498447333265*^9, 
   3.694984474112238*^9}, {3.694984596512678*^9, 3.6949846366756268`*^9}, {
   3.69498466872789*^9, 3.694984693021571*^9}, {3.694987448321562*^9, 
   3.6949874489949417`*^9}, {3.694987763104907*^9, 3.694987764432382*^9}, {
   3.695114672173088*^9, 3.69511468306653*^9}, {3.695115996628326*^9, 
   3.695115997227764*^9}, {3.695116052411542*^9, 3.695116053144807*^9}, {
   3.69513344581804*^9, 3.695133446419203*^9}, {3.695133498786571*^9, 
   3.69513357876431*^9}, {3.695135611605853*^9, 3.695135633760593*^9}, {
   3.695148727015169*^9, 3.6951487276428347`*^9}, {3.695148798644844*^9, 
   3.695148805088623*^9}, {3.695149072568799*^9, 3.695149085901082*^9}, {
   3.6951499001738873`*^9, 3.695149900328529*^9}, {3.695151127588915*^9, 
   3.6951511329838343`*^9}, 3.6951512516366367`*^9, {3.695151302092052*^9, 
   3.6951513026307907`*^9}, {3.695471133755427*^9, 3.695471134588367*^9}, {
   3.6954774174325533`*^9, 3.695477419764167*^9}, {3.695478048243367*^9, 
   3.695478060414978*^9}, {3.6954780920603733`*^9, 3.69547812221999*^9}, {
   3.695478319264792*^9, 3.6954783476693277`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.695135545112895*^9, 3.695135548818563*^9}, 
   3.695135591727601*^9}],

Cell[BoxData[
 RowBox[{"wallFrictionMoveDir", "[", 
  RowBox[{"\"\<l\>\"", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "/", "3"}], ",", 
     RowBox[{"2", "/", "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", "/", "3"}], ",", 
     RowBox[{"1", "/", "3"}]}], "}"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "/", "3"}], "-", 
      RowBox[{"1", "/", "8"}]}], ",", 
     RowBox[{
      RowBox[{"2", "/", "3"}], "+", 
      RowBox[{"1", "/", "8"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"2", "/", "3"}], "+", 
      RowBox[{"1", "/", "8"}]}], ",", 
     RowBox[{
      RowBox[{"1", "/", "3"}], "-", 
      RowBox[{"1", "/", "8"}]}]}], "}"}], ",", 
   RowBox[{"{", "}"}], ",", "0.001"}], "]"}]], "Input",
 CellChangeTimes->{{3.69547900419611*^9, 3.695479025042967*^9}, {
  3.695480107228938*^9, 3.695480107369053*^9}, {3.695484181461013*^9, 
  3.695484184703349*^9}, {3.695752077814609*^9, 3.695752127153583*^9}, {
  3.695752180325921*^9, 3.695752230311309*^9}, {3.6960953272463083`*^9, 
  3.6960953781772537`*^9}}],

Cell[BoxData[
 RowBox[{"AppendTo", "[", 
  RowBox[{"optimalPathList", ",", " ", "newPath"}], "]"}]], "Input",
 CellChangeTimes->{{3.695506684126569*^9, 3.695506697323255*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1280, 687},
WindowMargins->{{-2, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September 9, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 185, 4, 64, "Section"],
Cell[610, 21, 386, 12, 179, "Subsubsection"],
Cell[CellGroupData[{
Cell[1021, 37, 4695, 131, 677, "Subsection"],
Cell[5719, 170, 74788, 1608, 3638, "Input",
 InitializationCell->True],
Cell[80510, 1780, 228, 5, 40, "Input"],
Cell[80741, 1787, 11237, 214, 675, "Input"],
Cell[CellGroupData[{
Cell[92003, 2005, 43325, 1045, 1788, "Input"],
Cell[135331, 3052, 37340, 742, 162, "Output"]
}, Open  ]],
Cell[172686, 3797, 69, 1, 28, "Input"],
Cell[172758, 3800, 1776, 48, 131, "Input"],
Cell[CellGroupData[{
Cell[174559, 3852, 212, 4, 28, "Input"],
Cell[174774, 3858, 41233, 855, 376, "Output"]
}, Open  ]],
Cell[216022, 4716, 92, 1, 28, "Input"],
Cell[216117, 4719, 710, 22, 46, "Input"],
Cell[216830, 4743, 627, 15, 63, "Input"],
Cell[217460, 4760, 946, 30, 63, "Input"],
Cell[218409, 4792, 1089, 32, 63, "Input"],
Cell[219501, 4826, 2264, 46, 28, "Input"],
Cell[221768, 4874, 118, 2, 28, "Input"],
Cell[221889, 4878, 1112, 32, 28, "Input"],
Cell[223004, 4912, 175, 3, 28, "Input"]
}, Open  ]]
}, Open  ]]
}
]
*)

