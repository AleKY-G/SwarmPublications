(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    450791,       8526]
NotebookOptionsPosition[    449769,       8488]
NotebookOutlinePosition[    450127,       8504]
CellTagsIndexPosition[    450084,       8501]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"admissibleHeuristic", "[", 
     RowBox[{"s1_", ",", "s2_", ",", " ", "g1_", ",", "g2_"}], "]"}], ":=", 
    RowBox[{"Max", "[", 
     RowBox[{
      RowBox[{"EuclideanDistance", "[", 
       RowBox[{"g1", ",", "s1"}], "]"}], ",", 
      RowBox[{"EuclideanDistance", "[", 
       RowBox[{"g2", ",", "s2"}], "]"}]}], "]"}]}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "a", " ", "distance", " ", "measurement", " ", "that", " ", "never", " ", 
     "over", " ", "estimates", " ", "to", " ", "possible", " ", "distance"}], 
    " ", "*)"}], " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"wallFrictionMoveDir", "[", 
     RowBox[{
     "dir_", ",", "s1_", ",", "s2_", ",", "g1_", ",", "g2_", ",", "moves_", 
      ",", "pm1_", ",", " ", "pm2_", ",", " ", "\[Epsilon]_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[CapitalDelta]ex", ",", " ", "\[CapitalDelta]ey", ",", " ", 
        RowBox[{"path", " ", "=", " ", "moves"}], ",", " ", 
        RowBox[{"path1", "=", " ", "pm1"}], ",", " ", 
        RowBox[{"path2", "=", " ", "pm2"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"s1", " ", "=", " ", 
          RowBox[{
          "starting", " ", "position", " ", "of", " ", "robot", " ", "1", " ",
            "for", " ", "this", " ", "move"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"s2", " ", "=", " ", 
          RowBox[{
          "starting", " ", "position", " ", "of", " ", "robot", " ", "2", " ",
            "for", " ", "this", " ", "move"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
         "moves", " ", "to", " ", "contact", " ", "wall", " ", "in", " ", 
          "direction", " ", 
          RowBox[{
          "dir", ".", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", "  ", "If"}], " ", "one", " ", "robot", " ",
           "is", " ", "already", " ", "touching", " ", "the", " ", "wall", 
          " ", "in", " ", "direction", " ", "dir"}]}], ",", " ", 
        RowBox[{
         RowBox[{"just", " ", "moves", " ", "the", " ", "second", " ", 
          RowBox[{
          "robot", ".", " ", "\[IndentingNewLine]", " ", "Movements"}], " ", 
          "are", " ", "chosen", " ", "to", " ", "minimize"}], " ", "|", 
         "\[CapitalDelta]ex", "|", " ", "and", " ", "|", "\[CapitalDelta]ey", 
         "|"}], ",", " ", 
        RowBox[{
        "the", " ", "error", " ", "from", " ", "the", " ", "desired", " ", 
         "spacing", " ", "of", " ", "the", " ", "robots"}], ",", " ", 
        RowBox[{
         RowBox[{"where", " ", "\[CapitalDelta]ex"}], " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"g2x", "-", "g1x"}], ")"}], " ", "-", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"r2x", "-", "r1x"}], ")"}], "  ", "and", " ", 
            "\[CapitalDelta]ey"}]}], " ", "=", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"g2y", "-", "g1y"}], ")"}], " ", "-", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"r2y", "-", "r1y"}], ")"}], " ", ".", "  ", "If"}], " ",
             "robots", " ", "would", " ", "end", " ", "up", " ", 
            "overlapping"}]}]}]}], ",", " ", 
        RowBox[{
         RowBox[{"returns", " ", "multiple", " ", "possibilities"}], " ", "+", 
         RowBox[{"/", 
          RowBox[{"-", " ", "\[Epsilon]"}]}]}]}], "  ", "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{"STEP", " ", "1"}], ":", " ", 
         RowBox[{"is", " ", "base", " ", "case", " ", "1", " ", 
          RowBox[{"possible", "?", "  ", "If"}], " ", "so"}]}], ",", " ", 
        RowBox[{"do", " ", "it", " ", "and", " ", "return"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[CapitalDelta]ex", ",", " ", "\[CapitalDelta]ey"}], "}"}], 
        " ", "=", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"g2", "-", "g1"}], ")"}], "-", 
         RowBox[{"(", 
          RowBox[{"s2", "-", "s1"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"-", "0.0001"}], "\[LessEqual]", " ", "\[CapitalDelta]ex", 
           "\[LessEqual]", " ", "0.0001"}], " ", "&&", " ", 
          RowBox[{
           RowBox[{"-", "0.0001"}], "\[LessEqual]", " ", "\[CapitalDelta]ey", 
           " ", "<", " ", "0.0001"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"path", ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
               "g2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               "-", "  ", 
               RowBox[{
               "s2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
               ",", " ", 
              RowBox[{
               RowBox[{
               "g2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
               "-", " ", 
               RowBox[{
               "s2", "\[LeftDoubleBracket]", "2", 
                "\[RightDoubleBracket]"}]}]}], "}"}]}], "]"}], ";", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"path1", ",", "  ", "g1"}], "]"}], ";", " ", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"path2", ",", " ", "g2"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Return", "[", " ", 
           RowBox[{"{", " ", 
            RowBox[{
             RowBox[{"distanceMoved", "[", " ", "path", "]"}], ",", "g1", ",",
              "g2", ",", "path", ",", "path1", ",", "path2", ",", " ", 
             "True"}], " ", "}"}], "  ", "]"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"OTHERWISE", ",", " ", 
         RowBox[{
         "move", " ", "in", " ", "the", " ", "desired", " ", "direction", " ",
           "to", " ", "contact", " ", "a", " ", 
          RowBox[{"wall", ".", "  ", "\[IndentingNewLine]", 
           RowBox[{"We", "'"}]}], "ll", " ", "need", " ", "to", " ", "rotate",
           " ", "the", " ", "coordinate", " ", "frames", " ", "so", " ", 
          "the", " ", "movement", " ", "is", " ", "up"}], ",", " ", 
         RowBox[{
         "and", " ", "ensure", " ", "robot", " ", "1", " ", "is", " ", "the", 
          " ", "first", " ", "to", " ", 
          RowBox[{"contact", ".", "\[IndentingNewLine]", "then"}], " ", 
          RowBox[{"we", "'"}], "ll", " ", "call", " ", "wallFrictionMoveUp"}],
          ",", " ", "\[IndentingNewLine]", 
         RowBox[{"then", " ", "we", " ", "take", " ", "the", " ", "answer"}], 
         ",", " ", 
         RowBox[{
         "and", " ", "reassign", " ", "robot", " ", "1", " ", "and", " ", "2",
           " ", "to", " ", "match", " ", "original", "\[IndentingNewLine]", 
          "then", " ", "rotate", " ", "answer", " ", "into", " ", "original", 
          " ", "coordinate", " ", "frame"}]}], "*)"}], "\[IndentingNewLine]", 
       
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "r1", ",", "r2", ",", "newPathEntries", ",", "s1t", ",", "s2t", ",",
            "g1t", ",", "g2t", ",", "movest", ",", " ", "pm1st", ",", " ", 
           "pm2st"}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"if", " ", "move", " ", "is", " ", "up"}], ",", " ", 
           RowBox[{"call", " ", "wallFrictionMoveUp"}], ",", " ", 
           RowBox[{"otherwise", " ", "rotate", " ", "frame"}], ",", " ", 
           RowBox[{"then", " ", "unrotate", " ", "answers"}]}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"dir", "\[Equal]", "\"\<u\>\""}], ",", " ", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"Print", "[", "\"\<up selected:\>\"", "]"}], ";"}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"newPathEntries", "=", " ", 
              RowBox[{"wallFrictionMoveUp", "[", 
               RowBox[{
               "s1", ",", "s2", ",", "g1", ",", "g2", ",", "moves", ",", 
                "pm1", ",", " ", "pm2", ",", "\[Epsilon]"}], "]"}]}], ";"}]}],
            "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"if", " ", "move", " ", "is", " ", "down"}], ",", " ", 
            RowBox[{"rotate", " ", "frame", " ", "180", " ", "deg"}], ",", 
            " ", 
            RowBox[{"then", " ", "unrotate", " ", "answers"}]}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"dir", "\[Equal]", "\"\<d\>\""}], ",", " ", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"Print", "[", "\"\<down selected:\>\"", "]"}], ";"}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"s1t", ",", "s2t", ",", "g1t", ",", "g2t"}], "}"}], 
              "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate180", ",", 
                RowBox[{"{", 
                 RowBox[{"s1", ",", "s2", ",", "g1", ",", "g2"}], "}"}]}], 
               "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"movest", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate180inplace", ",", "moves"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"pm1st", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate180", ",", "pm1"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"pm2st", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate180", ",", "pm2"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"newPathEntries", "=", " ", 
              RowBox[{"wallFrictionMoveUp", "[", 
               RowBox[{
               "s1t", ",", "s2t", ",", "g1t", ",", "g2t", ",", "movest", ",", 
                "pm1st", ",", " ", "pm2st", ",", "\[Epsilon]"}], "]"}]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{"undo", " ", "the", " ", "change"}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "newPathEntries", "\[LeftDoubleBracket]", "2", 
               "\[RightDoubleBracket]"}], " ", "=", " ", 
              RowBox[{"rotate180", "[", 
               RowBox[{
               "newPathEntries", "\[LeftDoubleBracket]", "2", 
                "\[RightDoubleBracket]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "newPathEntries", "\[LeftDoubleBracket]", "3", 
               "\[RightDoubleBracket]"}], " ", "=", " ", 
              RowBox[{"rotate180", "[", 
               RowBox[{
               "newPathEntries", "\[LeftDoubleBracket]", "3", 
                "\[RightDoubleBracket]"}], " ", "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "newPathEntries", "\[LeftDoubleBracket]", "4", 
               "\[RightDoubleBracket]"}], " ", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate180inplace", ",", " ", 
                RowBox[{
                "newPathEntries", "\[LeftDoubleBracket]", "4", 
                 "\[RightDoubleBracket]"}]}], " ", "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "newPathEntries", "\[LeftDoubleBracket]", "5", 
               "\[RightDoubleBracket]"}], " ", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate180", ",", " ", 
                RowBox[{
                "newPathEntries", "\[LeftDoubleBracket]", "5", 
                 "\[RightDoubleBracket]"}]}], " ", "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "newPathEntries", "\[LeftDoubleBracket]", "6", 
               "\[RightDoubleBracket]"}], " ", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate180", ",", " ", 
                RowBox[{
                "newPathEntries", "\[LeftDoubleBracket]", "6", 
                 "\[RightDoubleBracket]"}]}], " ", "]"}]}], ";"}]}], 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"newPathEntries", "=", 
              RowBox[{"Table", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                  "aPathEntry", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], ",", 
                  RowBox[{"Map", "[", 
                   RowBox[{"rotate180", ",", 
                    RowBox[{
                    "aPathEntry", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}], " ", ",", 
                  RowBox[{"Map", "[", 
                   RowBox[{"rotate180", ",", 
                    RowBox[{
                    "aPathEntry", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Map", "[", 
                   RowBox[{"rotate180inplace", ",", 
                    RowBox[{
                    "aPathEntry", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}]}], "]"}]}], " ", "}"}], 
                "\[IndentingNewLine]", "  ", ",", 
                RowBox[{"{", 
                 RowBox[{"aPathEntry", ",", " ", "newPathEntries"}], "}"}]}], 
               "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"if", " ", "move", " ", "is", " ", "right"}], ",", " ", 
            RowBox[{"rotate", " ", "frame", " ", "90", " ", "deg"}], ",", " ", 
            RowBox[{"then", " ", "unrotate", " ", "answers"}]}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"dir", "\[Equal]", "\"\<r\>\""}], ",", " ", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"Print", "[", "\"\<right selected:\>\"", "]"}], ";"}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"s1t", ",", "s2t", ",", "g1t", ",", "g2t"}], "}"}], 
              "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate90", ",", 
                RowBox[{"{", 
                 RowBox[{"s1", ",", "s2", ",", "g1", ",", "g2"}], "}"}]}], 
               "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"movest", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate90inplace", ",", "moves"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"pm1st", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate90", ",", "pm1"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"pm2st", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate90", ",", "pm2"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"newPathEntries", "=", " ", 
              RowBox[{"wallFrictionMoveUp", "[", 
               RowBox[{
               "s1t", ",", "s2t", ",", "g1t", ",", "g2t", ",", "movest", ",", 
                "pm1st", ",", " ", "pm2st", ",", "\[Epsilon]"}], "]"}]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{"undo", " ", "the", " ", "change"}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"newPathEntries", "=", " ", 
                RowBox[{
                "newPathEntries", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}]}], ";"}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "newPathEntries", "\[LeftDoubleBracket]", "2", 
               "\[RightDoubleBracket]"}], " ", "=", " ", 
              RowBox[{"rotate270", "[", 
               RowBox[{
               "newPathEntries", "\[LeftDoubleBracket]", "2", 
                "\[RightDoubleBracket]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "newPathEntries", "\[LeftDoubleBracket]", "3", 
               "\[RightDoubleBracket]"}], " ", "=", " ", 
              RowBox[{"rotate270", "[", 
               RowBox[{
               "newPathEntries", "\[LeftDoubleBracket]", "3", 
                "\[RightDoubleBracket]"}], " ", "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "newPathEntries", "\[LeftDoubleBracket]", "4", 
               "\[RightDoubleBracket]"}], " ", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate270inplace", ",", " ", 
                RowBox[{
                "newPathEntries", "\[LeftDoubleBracket]", "4", 
                 "\[RightDoubleBracket]"}]}], " ", "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "newPathEntries", "\[LeftDoubleBracket]", "5", 
               "\[RightDoubleBracket]"}], " ", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate270", ",", " ", 
                RowBox[{
                "newPathEntries", "\[LeftDoubleBracket]", "5", 
                 "\[RightDoubleBracket]"}]}], " ", "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "newPathEntries", "\[LeftDoubleBracket]", "6", 
               "\[RightDoubleBracket]"}], " ", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate270", ",", " ", 
                RowBox[{
                "newPathEntries", "\[LeftDoubleBracket]", "6", 
                 "\[RightDoubleBracket]"}]}], " ", "]"}]}]}]}], 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"newPathEntries", "=", 
              RowBox[{"Table", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                  "aPathEntry", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], ",", 
                  RowBox[{"Map", "[", 
                   RowBox[{"rotate90", ",", 
                    RowBox[{
                    "aPathEntry", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}], " ", ",", 
                  RowBox[{"Map", "[", 
                   RowBox[{"rotate90", ",", 
                    RowBox[{
                    "aPathEntry", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Map", "[", 
                   RowBox[{"rotate90inplace", ",", 
                    RowBox[{
                    "aPathEntry", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}]}], "]"}]}], " ", "}"}], 
                "\[IndentingNewLine]", "  ", ",", 
                RowBox[{"{", 
                 RowBox[{"aPathEntry", ",", " ", "newPathEntries"}], "}"}]}], 
               "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"if", " ", "move", " ", "is", " ", "left"}], ",", " ", 
            RowBox[{"rotate", " ", "frame", " ", "270", " ", "deg"}], ",", 
            " ", 
            RowBox[{"then", " ", "unrotate", " ", "answers"}]}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"dir", "\[Equal]", "\"\<l\>\""}], ",", " ", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"Print", "[", "\"\<left selected:\>\"", "]"}], ";"}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"s1t", ",", "s2t", ",", "g1t", ",", "g2t"}], "}"}], 
              "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate270", ",", 
                RowBox[{"{", 
                 RowBox[{"s1", ",", "s2", ",", "g1", ",", "g2"}], "}"}]}], 
               "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"movest", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate270inplace", ",", "moves"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"pm1st", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate270", ",", "pm1"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"pm2st", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate270", ",", "pm2"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"newPathEntries", "=", " ", 
              RowBox[{"wallFrictionMoveUp", "[", 
               RowBox[{
               "s1t", ",", "s2t", ",", "g1t", ",", "g2t", ",", "movest", ",", 
                "pm1st", ",", " ", "pm2st", ",", "\[Epsilon]"}], "]"}]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"newPathEntries", "=", " ", 
                RowBox[{
                "newPathEntries", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}]}], ";"}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "newPathEntries", "\[LeftDoubleBracket]", "2", 
               "\[RightDoubleBracket]"}], " ", "=", " ", 
              RowBox[{"rotate90", "[", 
               RowBox[{
               "newPathEntries", "\[LeftDoubleBracket]", "2", 
                "\[RightDoubleBracket]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "newPathEntries", "\[LeftDoubleBracket]", "3", 
               "\[RightDoubleBracket]"}], " ", "=", " ", 
              RowBox[{"rotate90", "[", 
               RowBox[{
               "newPathEntries", "\[LeftDoubleBracket]", "3", 
                "\[RightDoubleBracket]"}], " ", "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "newPathEntries", "\[LeftDoubleBracket]", "4", 
               "\[RightDoubleBracket]"}], " ", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate90inplace", ",", " ", 
                RowBox[{
                "newPathEntries", "\[LeftDoubleBracket]", "4", 
                 "\[RightDoubleBracket]"}]}], " ", "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "newPathEntries", "\[LeftDoubleBracket]", "5", 
               "\[RightDoubleBracket]"}], " ", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate90", ",", " ", 
                RowBox[{
                "newPathEntries", "\[LeftDoubleBracket]", "5", 
                 "\[RightDoubleBracket]"}]}], " ", "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "newPathEntries", "\[LeftDoubleBracket]", "6", 
               "\[RightDoubleBracket]"}], " ", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate90", ",", " ", 
                RowBox[{
                "newPathEntries", "\[LeftDoubleBracket]", "6", 
                 "\[RightDoubleBracket]"}]}], " ", "]"}]}]}]}], 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"undo", " ", "the", " ", "change"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"newPathEntries", "=", 
              RowBox[{"Table", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                  "aPathEntry", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], ",", 
                  RowBox[{"Map", "[", 
                   RowBox[{"rotate270", ",", 
                    RowBox[{
                    "aPathEntry", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}], " ", ",", 
                  RowBox[{"Map", "[", 
                   RowBox[{"rotate270", ",", 
                    RowBox[{
                    "aPathEntry", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Map", "[", 
                   RowBox[{"rotate270inplace", ",", 
                    RowBox[{
                    "aPathEntry", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}]}], "]"}]}], " ", "}"}], 
                "\[IndentingNewLine]", "  ", ",", 
                RowBox[{"{", 
                 RowBox[{"aPathEntry", ",", " ", "newPathEntries"}], "}"}]}], 
               "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Return", " ", "[", "newPathEntries", "]"}]}]}], 
        "\[IndentingNewLine]", "]"}]}]}], 
     RowBox[{"(*", 
      RowBox[{"end", " ", "inner", " ", "module"}], "*)"}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
   RowBox[{"(*", 
    RowBox[{"end", " ", "outer", " ", "module"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"wallFrictionMoveUp", "[", 
     RowBox[{
     "r1in_", ",", "r2in_", ",", "g1in_", ",", "g2in_", ",", "moves_", ",", 
      "pm1_", ",", " ", "pm2_", " ", ",", " ", "\[Epsilon]_"}], "]"}], ":=", 
    " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "r1", ",", "r2", ",", "g1", ",", "g2", ",", "\[CapitalDelta]gx", ",", 
        "\[CapitalDelta]gy", ",", "m1", ",", "m2", ",", "\[CapitalDelta]tgx", 
        ",", "\[CapitalDelta]tgy", ",", "\[IndentingNewLine]", 
        "\[CapitalDelta]ey", " ", ",", "\[CapitalDelta]ex", " ", ",", 
        "\[IndentingNewLine]", 
        RowBox[{"L", "=", " ", "1"}], " ", 
        RowBox[{"(*", 
         RowBox[{"size", " ", "of", " ", "workspace"}], "*)"}], ",", 
        "\[IndentingNewLine]", "\[CapitalDelta]r", 
        RowBox[{"(*", 
         RowBox[{
         "current", " ", "x", " ", "and", " ", "y", " ", "difference"}], 
         "*)"}], ",", "\[IndentingNewLine]", 
        RowBox[{"path1", "=", " ", "pm1"}], 
        RowBox[{"(*", 
         RowBox[{"desired", " ", "moves", " ", "for", " ", "r1"}], "*)"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"path2", "=", " ", "pm2"}], 
        RowBox[{"(*", 
         RowBox[{"desired", " ", "moves", " ", "for", " ", "r2"}], "*)"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"path", " ", "=", " ", "moves"}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"isMirrored", " ", "=", " ", "False"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"isFlipped", " ", "=", " ", "False"}]}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "robot", " ", "1", " ", "must", " ", "be", " ", "the", " ", "top", 
         " ", "left", " ", 
         RowBox[{"robot", ".", " ", "If"}], " ", "it", " ", "is", " ", "not", 
         " ", "the", " ", "top", " ", "robot"}], ",", " ", 
        RowBox[{"flip", " ", "entries"}], ",", " ", 
        RowBox[{
        "if", " ", "it", " ", "is", " ", "not", " ", "the", " ", "left", " ", 
         "robot"}], ",", " ", 
        RowBox[{"mirror", " ", 
         RowBox[{"entries", ".", " ", "Remember"}], " ", "to", " ", "switch", 
         " ", "again", " ", "at", " ", 
         RowBox[{"end", "!"}], "\[IndentingNewLine]", " ", "then", " ", 
         "move", " ", "robot", "  ", "while", " ", "first", " ", "robot", " ",
          "is", " ", "touching", " ", "wall"}]}], "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
          "r1in", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "<", 
          RowBox[{
          "r2in", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
            "r1in", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            ">", 
            RowBox[{
            "r2in", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"r1", ",", "r2", ",", "g1", ",", "g2"}], "}"}], "=", 
             RowBox[{"{", 
              RowBox[{"r2in", ",", "r1in", ",", "g2in", ",", "g1in"}], 
              "}"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"isFlipped", " ", "=", " ", "True"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"r1", ",", "r2", ",", "g1", ",", "g2"}], "}"}], "=", 
             " ", 
             RowBox[{"Map", "[", 
              RowBox[{"mirror", ",", " ", 
               RowBox[{"{", 
                RowBox[{"r2in", ",", "r1in", ",", "g2in", ",", "g1in"}], 
                "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"path", " ", "=", " ", 
             RowBox[{"Map", "[", 
              RowBox[{"mirrorInplace", ",", " ", "moves"}], "]"}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"isFlipped", " ", "=", " ", "True"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"isMirrored", " ", "=", " ", "True"}]}]}], "]"}], ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
             "r1in", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             ">", 
             RowBox[{
             "r2in", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
             ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"r1", ",", "r2", ",", "g1", ",", "g2"}], "}"}], "=", 
              " ", 
              RowBox[{"Map", "[", 
               RowBox[{"mirror", ",", " ", 
                RowBox[{"{", 
                 RowBox[{"r1in", ",", "r2in", ",", "g1in", ",", "g2in"}], 
                 "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"path", " ", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"mirrorInplace", ",", " ", "moves"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"isMirrored", "=", " ", "True"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"r1", ",", "r2", ",", "g1", ",", "g2"}], "}"}], "=", 
             RowBox[{"{", 
              RowBox[{"r1in", ",", "r2in", ",", "g1in", ",", "g2in"}], 
              "}"}]}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[CapitalDelta]gx", ",", "\[CapitalDelta]gy"}], "}"}], " ", 
        "=", " ", 
        RowBox[{"g2", "-", "g1"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "If", " ", "the", " ", "second", " ", "robot", " ", "is", " ", 
          "already", " ", "touching", " ", "the", " ", "up", " ", "wall"}], 
         ",", " ", 
         RowBox[{"just", " ", 
          RowBox[{"return", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
          "r2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
          "\[Equal]", " ", "1"}], ",", " ", 
         RowBox[{"Return", " ", "[", 
          RowBox[{"{", 
           RowBox[{
           "Infinity", ",", " ", "r1", ",", " ", "r2", ",", " ", "path", ",", 
            " ", "path1", ",", " ", "path2", " ", ",", " ", "False"}], "}"}], 
          "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"if", " ", "the", " ", "goal", " ", "\[CapitalDelta]gx"}], 
         ",", 
         RowBox[{"\[CapitalDelta]gy", " ", "is", " ", "achievable"}], ",", 
         " ", 
         RowBox[{"do", " ", "it", " ", "in", " ", "one", " ", 
          RowBox[{"move", ".", " ", "Otherwise"}]}], ","}], " ", "*)"}], " ", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
            "r2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "-",
             " ", 
            RowBox[{
            "r1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "-",
             "1"}], "\[LessEqual]", "  ", "\[CapitalDelta]gx", " ", 
           "\[LessEqual]", "  ", "1"}], "  ", "&&", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
            "r2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "-",
             " ", 
            RowBox[{
            "r1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
           " ", "\[LessEqual]", " ", "\[CapitalDelta]gy", "\[LessEqual]", 
           "  ", "0"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", "\"\<Achievable\>\"", " ", "]"}], ";"}], 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"in", " ", "Achievable", " ", "range"}], "*)"}], 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
          "move", " ", "r1", " ", "and", " ", "r2", " ", "so", " ", "that", 
           " ", "r1", " ", "will", " ", "touch", " ", "the", " ", "up", " ", 
           "wall", " ", "in", " ", "the", " ", "line", " ", "of", " ", "the", 
           " ", "goal"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"m1", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{"1", "-", 
                RowBox[{
                "r1", "\[LeftDoubleBracket]", "2", 
                 "\[RightDoubleBracket]"}]}], 
               RowBox[{"2", "-", 
                RowBox[{
                "g1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                "-", " ", 
                RowBox[{
                "r1", "\[LeftDoubleBracket]", "2", 
                 "\[RightDoubleBracket]"}]}]], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                "g1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                "-", 
                RowBox[{
                "r1", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}]}], ")"}]}], ",", 
             RowBox[{"1", "-", 
              RowBox[{
              "r1", "\[LeftDoubleBracket]", "2", 
               "\[RightDoubleBracket]"}]}]}], "}"}]}], ";", 
          RowBox[{"r1", " ", "+=", "  ", "m1"}], ";", " ", 
          RowBox[{"r2", " ", "+=", " ", "m1"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
             "r2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             ">", "1"}], ",", 
            RowBox[{
             RowBox[{"r1", " ", "-=", " ", "m1"}], ";", " ", 
             RowBox[{"r2", " ", "-=", " ", "m1"}], ";", "  ", 
             RowBox[{"m1", " ", "=", 
              RowBox[{"{", " ", 
               RowBox[{
                RowBox[{"1", "-", 
                 RowBox[{
                 "r2", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}]}], ",", 
                RowBox[{"1", "-", 
                 RowBox[{
                 "r1", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}]}]}], "}"}]}], ";", " ", 
             RowBox[{"r1", " ", "+=", " ", "m1"}], ";", " ", 
             RowBox[{"r2", "+=", " ", "m1"}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
             "r2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "<", "0"}], ",", " ", 
            RowBox[{
             RowBox[{"r1", " ", "-=", " ", "m1"}], ";", " ", 
             RowBox[{"r2", " ", "-=", " ", "m1"}], ";", " ", 
             RowBox[{"m1", " ", "=", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", " ", 
                 RowBox[{
                 "r2", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}]}], ",", " ", 
                RowBox[{"1", "-", 
                 RowBox[{
                 "r1", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}]}]}], "}"}]}], ";", " ", 
             RowBox[{"r1", " ", "+=", " ", "m1"}], ";", " ", 
             RowBox[{"r2", " ", "+=", " ", "m1"}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
           "move", " ", "r2", " ", "to", " ", "get", " ", "correct", " ", 
            "spacing"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"m2", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[CapitalDelta]gx", "-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                "r2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                "-", 
                RowBox[{
                "r1", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}]}], ")"}]}], ",", 
             RowBox[{"\[CapitalDelta]gy", "-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                "r2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                "-", 
                RowBox[{
                "r1", "\[LeftDoubleBracket]", "2", 
                 "\[RightDoubleBracket]"}]}], ")"}]}]}], " ", "}"}]}], ";", 
          RowBox[{"r2", " ", "+=", " ", "m2"}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{
            "if", " ", "r2", " ", "is", " ", "getting", " ", "out", " ", "of",
              " ", "bound"}], ",", " ", 
            RowBox[{
            "change", " ", "m1", " ", "and", " ", "m2", " ", "so", " ", 
             "that", " ", "it", " ", "would", " ", "stay", " ", "in", " ", 
             "the", " ", "bound"}]}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
              "r2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              "\[GreaterEqual]", " ", "1"}], ",", " ", 
             RowBox[{
              RowBox[{"r1", " ", "-=", " ", "m1"}], ";", " ", 
              RowBox[{"r2", "-=", " ", "m2"}], ";", " ", 
              RowBox[{"r2", "-=", "m1"}], ";", " ", 
              RowBox[{"m1", " ", "=", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", "-", "\[CapitalDelta]gx"}], ")"}], "-", 
                  RowBox[{
                  "r1", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}]}], ",", 
                 RowBox[{"1", "-", 
                  RowBox[{
                  "r1", "\[LeftDoubleBracket]", "2", 
                   "\[RightDoubleBracket]"}]}]}], "}"}]}], ";", " ", 
              RowBox[{"r1", "+=", " ", "m1"}], ";", " ", 
              RowBox[{"r2", "+=", "m1"}], ";", 
              RowBox[{"m2", "=", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\[CapitalDelta]gx", "-", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    "r2", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    "r1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ")"}]}], ",", 
                 RowBox[{"\[CapitalDelta]gy", "-", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    "r2", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    "r1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], ")"}]}]}], " ", "}"}]}], ";",
               " ", 
              RowBox[{"r2", "+=", " ", "m2"}], ";"}]}], "]"}], 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
              "r2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              "\[LessEqual]", " ", "0"}], ",", " ", 
             RowBox[{
              RowBox[{"r1", " ", "-=", " ", "m1"}], ";", " ", 
              RowBox[{"r2", "-=", " ", "m2"}], ";", " ", 
              RowBox[{"r2", "-=", "m1"}], ";", " ", 
              RowBox[{"m1", " ", "=", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\[CapitalDelta]gx", "-", 
                  RowBox[{
                  "r1", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}]}], ",", 
                 RowBox[{"1", "-", 
                  RowBox[{
                  "r1", "\[LeftDoubleBracket]", "2", 
                   "\[RightDoubleBracket]"}]}]}], "}"}]}], ";", " ", 
              RowBox[{"r1", "+=", " ", "m1"}], ";", " ", 
              RowBox[{"r2", "+=", "m1"}], ";", 
              RowBox[{"m2", "=", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\[CapitalDelta]gx", "-", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    "r2", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    "r1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ")"}]}], ",", 
                 RowBox[{"\[CapitalDelta]gy", "-", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    "r2", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    "r1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], ")"}]}]}], " ", "}"}]}], ";",
               " ", 
              RowBox[{"r2", "+=", " ", "m2"}]}]}], "]"}]}], ";"}], 
         "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"not", " ", "achievable", " ", "range"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "move", " ", "the", " ", "robots", " ", "to", " ", "minimize", " ", 
           "the", " ", 
           RowBox[{"error", ".", "  ", "Gets"}], " ", "the", " ", "minimum", 
           " ", "distance", " ", "to", " ", "the", " ", "wall", " ", "to", 
           " ", "make", " ", "minimize", " ", "the", " ", 
           RowBox[{"error", "."}]}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", "\"\<not achieveable\>\"", "]"}], ";"}], 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
              "r2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              "-", " ", 
              RowBox[{
              "r1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              "-", "1"}], ">", "   ", "\[CapitalDelta]gx"}], " ", ",", " ", 
            RowBox[{"\[CapitalDelta]tgx", " ", "=", " ", 
             RowBox[{
              RowBox[{
              "r2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              "-", " ", 
              RowBox[{
              "r1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              "-", "1"}]}], ",", "  ", 
            RowBox[{
            "\[CapitalDelta]tgx", " ", "=", "  ", "\[CapitalDelta]gx"}]}], 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", " ", 
           RowBox[{
            RowBox[{"\[CapitalDelta]gy", " ", ">", " ", "0"}], ",", "  ", 
            RowBox[{"\[CapitalDelta]tgy", " ", "=", " ", "0"}], ",", " ", 
            RowBox[{
            "\[CapitalDelta]tgy", " ", "=", " ", "\[CapitalDelta]gy"}]}], 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"\[CapitalDelta]gy", "  ", "<", " ", 
             RowBox[{
              RowBox[{
              "r2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
              "-", " ", 
              RowBox[{
              "r1", "\[LeftDoubleBracket]", "2", 
               "\[RightDoubleBracket]"}]}]}], ",", "  ", 
            RowBox[{"\[CapitalDelta]tgy", " ", "=", " ", 
             RowBox[{
              RowBox[{
              "r2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
              "-", " ", 
              RowBox[{
              "r1", "\[LeftDoubleBracket]", "2", 
               "\[RightDoubleBracket]"}]}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"m1", " ", "=", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", " ", 
             RowBox[{"1", "-", " ", 
              RowBox[{
              "r1", "\[LeftDoubleBracket]", "2", 
               "\[RightDoubleBracket]"}]}]}], "}"}]}], ";", " ", 
          RowBox[{"r1", "+=", " ", "m1"}], ";", " ", 
          RowBox[{"r2", "+=", " ", "m1"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
             "r2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             ">", "1"}], ",", 
            RowBox[{
             RowBox[{"r1", " ", "-=", " ", "m1"}], ";", " ", 
             RowBox[{"r2", " ", "-=", " ", "m1"}], ";", " ", 
             RowBox[{"m1", " ", "=", 
              RowBox[{"{", " ", 
               RowBox[{
                RowBox[{"1", "-", 
                 RowBox[{
                 "r2", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}]}], ",", 
                RowBox[{"1", "-", 
                 RowBox[{
                 "r1", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}]}]}], "}"}]}], ";", " ", 
             RowBox[{"r1", " ", "+=", " ", "m1"}], ";", " ", 
             RowBox[{"r2", "+=", " ", "m1"}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
             "r2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "<", "0"}], ",", " ", 
            RowBox[{
             RowBox[{"r1", " ", "-=", " ", "m1"}], ";", " ", 
             RowBox[{"r2", " ", "-=", " ", "m1"}], ";", " ", 
             RowBox[{"m1", " ", "=", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", " ", 
                 RowBox[{
                 "r2", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}]}], ",", " ", 
                RowBox[{"1", "-", 
                 RowBox[{
                 "r1", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}]}]}], "}"}]}], ";", " ", 
             RowBox[{"r1", " ", "+=", " ", "m1"}], ";", " ", 
             RowBox[{"r2", " ", "+=", " ", "m1"}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"m2", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[CapitalDelta]tgx", "-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                "r2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                "-", 
                RowBox[{
                "r1", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}]}], ")"}]}], ",", 
             RowBox[{"\[CapitalDelta]tgy", "-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                "r2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                "-", 
                RowBox[{
                "r1", "\[LeftDoubleBracket]", "2", 
                 "\[RightDoubleBracket]"}]}], ")"}]}]}], " ", "}"}]}], ";", 
          RowBox[{"r2", " ", "+=", " ", "m2"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
             "r2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             ">", "1"}], ",", " ", 
            RowBox[{
             RowBox[{"r1", " ", "-=", " ", "m1"}], ";", " ", 
             RowBox[{"r2", "-=", " ", "m2"}], ";", " ", 
             RowBox[{"r2", "-=", "m1"}], ";", " ", 
             RowBox[{"m1", " ", "=", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"Min", "[", 
                  RowBox[{
                   RowBox[{"Abs", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[CapitalDelta]tgx"}], ")"}], "-", 
                    RowBox[{
                    "r1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                   RowBox[{
                   "r1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}]}], ",", 
                RowBox[{"1", "-", 
                 RowBox[{
                 "r1", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}]}]}], "}"}]}], ";", " ", 
             RowBox[{"r1", "+=", " ", "m1"}], ";", " ", 
             RowBox[{"r2", "+=", "m1"}], ";", 
             RowBox[{"m2", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Min", "[", 
                 RowBox[{
                  RowBox[{"\[CapitalDelta]tgx", "-", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "r2", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    "r1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ")"}]}], ",", " ", 
                  RowBox[{"1", "-", 
                   RowBox[{
                   "r2", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], "]"}], ",", 
                RowBox[{"\[CapitalDelta]tgy", "-", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                   "r2", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "-", 
                   RowBox[{
                   "r1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], ")"}]}]}], " ", "}"}]}], ";",
              " ", 
             RowBox[{"r2", "+=", " ", "m2"}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
             "r2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "<", "0"}], ",", " ", 
            RowBox[{
             RowBox[{"r1", " ", "-=", " ", "m1"}], ";", " ", 
             RowBox[{"r2", "-=", " ", "m2"}], ";", " ", 
             RowBox[{"r2", "-=", "m1"}], ";", " ", 
             RowBox[{"m1", " ", "=", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Min", "[", 
                 RowBox[{
                  RowBox[{"Abs", "[", 
                   RowBox[{"\[CapitalDelta]tgx", "-", 
                    RowBox[{
                    "r1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", " ", 
                  RowBox[{"Abs", "[", 
                   RowBox[{"1", "-", 
                    RowBox[{
                    "r2", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}]}], "]"}], ",", 
                RowBox[{"1", "-", 
                 RowBox[{
                 "r1", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}]}]}], "}"}]}], ";", " ", 
             RowBox[{"r1", "+=", " ", "m1"}], ";", " ", 
             RowBox[{"r2", "+=", "m1"}], ";", 
             RowBox[{"m2", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Max", "[", 
                 RowBox[{
                  RowBox[{"\[CapitalDelta]tgx", "-", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "r2", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    "r1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ")"}]}], ",", " ", 
                  RowBox[{"-", 
                   RowBox[{
                   "r2", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}]}], "]"}], ",", 
                RowBox[{"\[CapitalDelta]tgy", "-", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                   "r2", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "-", 
                   RowBox[{
                   "r1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], ")"}]}]}], " ", "}"}]}], ";",
              " ", 
             RowBox[{"r2", "+=", " ", "m2"}]}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"path", ",", " ", "m1"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"r2", " ", "-=", " ", "m2"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"isMirrored", ",", 
         RowBox[{"If", "[", 
          RowBox[{"isFlipped", ",", " ", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"path1", ",", " ", 
              RowBox[{"mirror", "[", "r2", "]"}]}], "]"}], ";", " ", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"path2", ",", 
              RowBox[{"mirror", "[", "r1", "]"}]}], "]"}]}], ",", " ", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"path1", ",", " ", 
              RowBox[{"mirror", "[", "r1", "]"}]}], "]"}], ";", " ", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"path2", ",", 
              RowBox[{"mirror", "[", "r2", "]"}]}], "]"}]}]}], "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{"isFlipped", ",", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"path1", ",", " ", "r2"}], "]"}], ";", " ", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"path2", ",", "r1"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"path1", ",", "r1"}], "]"}], ";", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"path2", ",", "r2"}], "]"}]}]}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"r2", " ", "+=", " ", "m2"}], ";", "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"path", ",", " ", "m2"}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Change", " ", "the", " ", "robots", " ", "back", " ", "if", " ", 
         "they", " ", "were", " ", "mirrored"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"isMirrored", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"path", " ", "=", " ", 
           RowBox[{"Map", "[", 
            RowBox[{"mirrorInplace", ",", " ", "path"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"r1", ",", "r2"}], "}"}], " ", "=", " ", 
           RowBox[{"Map", "[", 
            RowBox[{"mirror", ",", 
             RowBox[{"{", 
              RowBox[{"r1", ",", "r2"}], "}"}]}], "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Change", " ", "the", " ", "robots", " ", "back", " ", "if", " ", 
         "they", " ", "were", " ", "flipped"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"isFlipped", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"path1", ",", " ", "r2"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"path2", ",", "r1"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Return", "[", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"If", "[", " ", 
              RowBox[{
               RowBox[{"m2", " ", "\[Equal]", " ", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], ",", "Infinity", ",", 
               RowBox[{
                RowBox[{"distanceMoved", "[", " ", "path", "]"}], "+", " ", 
                RowBox[{"admissibleHeuristic", "[", 
                 RowBox[{"r2", ",", "r1", ",", "g2", ",", "g1"}], "]"}]}]}], 
              "]"}], ",", "r2", ",", "r1", ",", "path", ",", "path1", ",", 
             " ", "path2", ",", " ", "False"}], "}"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"path1", ",", " ", "r1"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"path2", ",", "r2"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Return", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"If", "[", " ", 
              RowBox[{
               RowBox[{"m2", " ", "\[Equal]", " ", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], ",", " ", "Infinity", ",", 
               
               RowBox[{
                RowBox[{"distanceMoved", "[", " ", "path", "]"}], "+", " ", 
                RowBox[{"admissibleHeuristic", "[", 
                 RowBox[{"r1", ",", "r2", ",", "g1", ",", "g2"}], "]"}]}]}], 
              "]"}], ",", "r1", ",", "r2", ",", "path", ",", "path1", ",", 
             "path2", " ", ",", "False"}], " ", "}"}], "  ", "]"}]}]}], 
        "]"}]}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "rotate", " ", "the", " ", "coordinate", " ", "frame", " ", "90", " ", 
     "degrees"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rotate90", "[", "r_", "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "-", " ", 
       RowBox[{"r", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
      ",", " ", 
      RowBox[{"r", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
     "}"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", "changes", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rotate90inplace", "[", "r_", "]"}], ":=", 
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"r", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
      ",", " ", 
      RowBox[{"-", 
       RowBox[{
       "r", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], 
     "}"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rotate270", "[", "r_", "]"}], " ", ":=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"r", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
      ",", 
      RowBox[{"1", "-", " ", 
       RowBox[{
       "r", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], 
     "}"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rotate270inplace", "[", "r_", "]"}], " ", ":=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"r", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
      ",", " ", 
      RowBox[{"r", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
     "}"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rotate180", "[", "r_", "]"}], " ", ":=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "-", 
       RowBox[{"r", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
      ",", 
      RowBox[{"1", "-", " ", 
       RowBox[{
       "r", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
     "}"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rotate180inplace", "[", "r_", "]"}], " ", ":=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"r", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
      ",", 
      RowBox[{"-", " ", 
       RowBox[{
       "r", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
     "}"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mirror", "[", "r_", "]"}], " ", ":=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "-", 
       RowBox[{"r", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
      ",", 
      RowBox[{"r", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
     "}"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mirrorInplace", "[", "r_", "]"}], ":=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"r", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
      ",", 
      RowBox[{"r", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
     "}"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"distanceMoved", "[", "moves_", "]"}], ":=", " ", 
    RowBox[{"Total", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Norm", "[", "m", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"m", ",", "moves"}], "}"}]}], "]"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Function", " ", "that", " ", "does", " ", "an", " ", "A", "*", " ", 
     "search", " ", "to", " ", "find", " ", "the", " ", "shortest", " ", 
     "path"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"optimal2robotPath", "[", 
     RowBox[{
     "s1_", ",", "s2_", ",", " ", "g1_", ",", "g2_", ",", "\[Epsilon]_"}], 
     "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "optimalPathList", ",", "bestMoveSeq", ",", " ", "dist1", ",", " ", 
        RowBox[{"iter", "=", "0"}]}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"{", 
        RowBox[{
         StyleBox[
          RowBox[{"e", 
           StyleBox["stimatedPathLength", "Text",
            FontWeight->"Bold"]}]], ",", "r1", ",", "r2", ",", "MOVES"}], 
        "}"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"optimalPathList", "=", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"Infinity", ",", "s1", ",", "s2", ",", 
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], "}"}], ",", 
           RowBox[{"{", "s1", "}"}], ",", 
           RowBox[{"{", "s2", "}"}], ",", "False"}], "}"}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"dist1", " ", "=", " ", 
        RowBox[{"distanceMoved", "[", " ", 
         RowBox[{
          RowBox[{"admissibleHeuristic", "[", 
           RowBox[{"s1", ",", "s2", ",", " ", "g1", ",", "g2"}], "]"}], "+", 
          "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"optimalPathList", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "7"}], "\[RightDoubleBracket]"}], " ", 
          "\[NotEqual]", "  ", "True"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "pathToExplore", ",", "r1", ",", "r2", ",", "wallMoves", ",", 
             "moves", ",", "pm1", ",", " ", "pm2", ",", " ", 
             "isPathComplete"}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"body", " ", "of", " ", "while", " ", "loop"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"pathToExplore", " ", "=", " ", 
             RowBox[{"First", "[", "optimalPathList", "]"}]}], ";", " ", 
            RowBox[{"(*", 
             RowBox[{"pop", " ", "off", " ", "first", " ", "entry"}], "*)"}], 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"optimalPathList", "=", " ", 
             RowBox[{"Delete", "[", 
              RowBox[{"optimalPathList", ",", "1"}], "]"}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"r1", " ", "=", " ", 
             RowBox[{
             "pathToExplore", "\[LeftDoubleBracket]", "2", 
              "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"r2", " ", "=", " ", 
             RowBox[{
             "pathToExplore", "\[LeftDoubleBracket]", "3", 
              "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"moves", "=", " ", 
             RowBox[{
             "pathToExplore", "\[LeftDoubleBracket]", "4", 
              "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"pm1", " ", "=", " ", 
             RowBox[{
             "pathToExplore", "\[LeftDoubleBracket]", "5", 
              "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"pm2", " ", "=", " ", 
             RowBox[{
             "pathToExplore", "\[LeftDoubleBracket]", "6", 
              "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"isPathComplete", " ", "=", " ", 
             RowBox[{
             "pathToExplore", "\[LeftDoubleBracket]", "7", 
              "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"iter", " ", "+=", " ", "1"}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"isPathComplete", " ", "\[NotEqual]", " ", "True"}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Table", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"wallMoves", " ", "=", " ", 
                   RowBox[{"wallFrictionMoveDir", "[", 
                    RowBox[{
                    "dir", ",", "r1", ",", "r2", ",", "g1", ",", "g2", ",", 
                    "moves", ",", "pm1", ",", " ", "pm2", ",", " ", 
                    "\[Epsilon]"}], "]"}]}], ";", "\[IndentingNewLine]", 
                  RowBox[{"optimalPathList", "=", 
                   RowBox[{"AppendTo", "[", 
                    RowBox[{"optimalPathList", ",", "wallMoves"}], "]"}]}], 
                  ";"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{"dir", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    "\"\<u\>\"", ",", "\"\<d\>\"", ",", "\"\<l\>\"", ",", 
                    "\"\<r\>\""}], "}"}]}], "}"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"optimalPathList", " ", "=", " ", 
                RowBox[{"SortBy", "[", 
                 RowBox[{"optimalPathList", ",", " ", "First"}], "]"}]}], 
               ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
             "]"}]}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"return", " ", "the", " ", "best", " ", "movement"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
           "optimalPathList", "\[LeftDoubleBracket]", "1", 
            "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
           "\[RightDoubleBracket]"}], ",", " ", 
          RowBox[{
           RowBox[{
           "optimalPathList", "\[LeftDoubleBracket]", "1", 
            "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "5", 
           "\[RightDoubleBracket]"}], ",", " ", 
          RowBox[{
           RowBox[{
           "optimalPathList", "\[LeftDoubleBracket]", "1", 
            "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "6", 
           "\[RightDoubleBracket]"}]}], "}"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6939408528236227`*^9, 3.693940888469677*^9}, {
   3.6939411305091133`*^9, 3.693941178437819*^9}, {3.693941387876739*^9, 
   3.6939413899004917`*^9}, {3.693941656965639*^9, 3.693941681444265*^9}, {
   3.693941786064103*^9, 3.693941802688339*^9}, {3.693941835689363*^9, 
   3.6939420230542583`*^9}, {3.6939420804095287`*^9, 3.69394220605469*^9}, {
   3.69394230325594*^9, 3.693942380441125*^9}, 3.694163599973598*^9, {
   3.6941707339115133`*^9, 3.6941708591178207`*^9}, {3.694171348574038*^9, 
   3.694171365971092*^9}, {3.694171399959486*^9, 3.694171476406212*^9}, {
   3.694171519220065*^9, 3.694171542443083*^9}, {3.6941717436032553`*^9, 
   3.694171751146134*^9}, {3.694171902501532*^9, 3.6941719175283003`*^9}, 
   3.6941721333534937`*^9, {3.694172366858963*^9, 3.694172475176903*^9}, {
   3.694172510680943*^9, 3.694172536105095*^9}, {3.694172590711431*^9, 
   3.6941726232159843`*^9}, 3.6941726573278637`*^9, {3.694173016287388*^9, 
   3.694173065879181*^9}, {3.6941731495712976`*^9, 3.694173288609469*^9}, {
   3.694175601608252*^9, 3.694175608959155*^9}, {3.6941818589940863`*^9, 
   3.694181883908156*^9}, 3.694189617187634*^9, 3.694373329087708*^9, {
   3.6944577291886044`*^9, 3.6944579604868402`*^9}, {3.6944580908461933`*^9, 
   3.69445816056343*^9}, {3.6944590515411797`*^9, 3.694459057212715*^9}, {
   3.694789332143281*^9, 3.6947893625847692`*^9}, {3.694797839893197*^9, 
   3.694797986266018*^9}, {3.694798020460239*^9, 3.694798110533209*^9}, {
   3.694802568905859*^9, 3.6948025759023943`*^9}, {3.694952267818956*^9, 
   3.694952387671607*^9}, {3.69495242737435*^9, 3.6949524933882837`*^9}, {
   3.694952716828657*^9, 3.694952875425663*^9}, {3.694952961359168*^9, 
   3.69495311078391*^9}, {3.694953177959278*^9, 3.694953206904295*^9}, 
   3.694953353572682*^9, {3.69495374669226*^9, 3.6949537480438547`*^9}, {
   3.694953989397366*^9, 3.69495432042314*^9}, {3.6949543709899073`*^9, 
   3.694954402358076*^9}, {3.6949544336109457`*^9, 3.694954489316423*^9}, {
   3.694954519838024*^9, 3.694954619638063*^9}, {3.694954676439558*^9, 
   3.6949549862473917`*^9}, {3.694955026267868*^9, 3.694955089067938*^9}, {
   3.694955263726976*^9, 3.6949552675503683`*^9}, {3.694955317972886*^9, 
   3.694955348540511*^9}, {3.694955389960005*^9, 3.694955546827735*^9}, {
   3.694955905292438*^9, 3.694956138265617*^9}, {3.6949561742960587`*^9, 
   3.694956339677886*^9}, {3.694956481622334*^9, 3.6949567563090343`*^9}, {
   3.694956795713811*^9, 3.694956926826346*^9}, {3.694956977884089*^9, 
   3.694957174068321*^9}, {3.694957349151458*^9, 3.694957381496011*^9}, {
   3.694981421904965*^9, 3.694981434264557*^9}, {3.694981502435019*^9, 
   3.694981509186743*^9}, {3.6949827486900253`*^9, 3.6949827590582523`*^9}, {
   3.694982827370994*^9, 3.694982832648131*^9}, {3.6949828780827103`*^9, 
   3.6949829576756973`*^9}, {3.694983018442698*^9, 3.6949830212590523`*^9}, {
   3.694983854991313*^9, 3.694983877417363*^9}, {3.694984043135763*^9, 
   3.694984044141467*^9}, {3.694984389561797*^9, 3.694984437264772*^9}, {
   3.6949847596682*^9, 3.694984911493659*^9}, {3.694984957002645*^9, 
   3.69498496866507*^9}, 3.6949864345263557`*^9, {3.694986541891062*^9, 
   3.694986589061227*^9}, {3.694986666712188*^9, 3.6949867112138777`*^9}, {
   3.694986883071473*^9, 3.6949869251433687`*^9}, {3.69498695674946*^9, 
   3.694986958598103*^9}, {3.6949870106651287`*^9, 3.694987051101959*^9}, {
   3.6949870813993473`*^9, 3.6949872322657433`*^9}, {3.6949872635489893`*^9, 
   3.694987266097929*^9}, {3.6949872991364193`*^9, 3.69498733320438*^9}, {
   3.694987380288198*^9, 3.694987415337792*^9}, {3.694987497384099*^9, 
   3.694987530625642*^9}, {3.695114132261832*^9, 3.695114247436159*^9}, {
   3.695114302337232*^9, 3.695114383601592*^9}, {3.695114460485672*^9, 
   3.6951144985194893`*^9}, {3.6951145715752687`*^9, 
   3.6951146459410954`*^9}, {3.695114914419959*^9, 3.695114915116577*^9}, {
   3.695115017420889*^9, 3.695115018785763*^9}, {3.695115293525174*^9, 
   3.695115293993541*^9}, {3.695115382705942*^9, 3.695115414742238*^9}, {
   3.6951333867619953`*^9, 3.6951334311980963`*^9}, 3.695133478801249*^9, {
   3.6951336230798492`*^9, 3.695133634115988*^9}, {3.695133703290842*^9, 
   3.695133718051303*^9}, {3.695133810130382*^9, 3.695133825810014*^9}, {
   3.6951338584057207`*^9, 3.695133884143395*^9}, {3.6951339403553867`*^9, 
   3.695133941458097*^9}, {3.69513423096178*^9, 3.695134231654674*^9}, {
   3.695134643114645*^9, 3.6951346434458303`*^9}, {3.695134831350284*^9, 
   3.695134853876893*^9}, {3.695134907097835*^9, 3.6951349119046392`*^9}, {
   3.695134952165106*^9, 3.695135007544053*^9}, {3.6951350460919933`*^9, 
   3.6951350502816553`*^9}, {3.695135114746902*^9, 3.6951351563867073`*^9}, {
   3.695135215504397*^9, 3.695135219797923*^9}, {3.695135299605201*^9, 
   3.695135367288703*^9}, {3.695135433880102*^9, 3.6951354481919127`*^9}, {
   3.6951355107577868`*^9, 3.695135511981627*^9}, {3.695135747320032*^9, 
   3.695135747951415*^9}, {3.695135862087146*^9, 3.695135866518602*^9}, {
   3.6951359073372097`*^9, 3.695135914691043*^9}, 3.695135951951088*^9, {
   3.695136054858759*^9, 3.695136072862482*^9}, {3.6951361151681013`*^9, 
   3.6951361690937433`*^9}, {3.695136219265359*^9, 3.695136290339938*^9}, {
   3.6951363264918213`*^9, 3.6951363811083107`*^9}, {3.695136443006104*^9, 
   3.69513645214433*^9}, {3.695136840968021*^9, 3.69513688583282*^9}, {
   3.695136920862331*^9, 3.695136935382739*^9}, {3.69513741693909*^9, 
   3.6951374185148478`*^9}, {3.69513745049783*^9, 3.6951375855740547`*^9}, {
   3.695147689239015*^9, 3.695147763713726*^9}, {3.695147799177663*^9, 
   3.695147802009328*^9}, {3.695147851779582*^9, 3.695147857152445*^9}, {
   3.695148018869647*^9, 3.695148035640382*^9}, {3.695148146201255*^9, 
   3.695148168299041*^9}, {3.695148219492519*^9, 3.695148245994914*^9}, {
   3.695148282655971*^9, 3.695148315423513*^9}, {3.6951486744618597`*^9, 
   3.6951486998679733`*^9}, {3.695149203882124*^9, 3.695149211250046*^9}, {
   3.6951498369151897`*^9, 3.695149878423071*^9}, {3.695150342610035*^9, 
   3.6951503428009367`*^9}, {3.695150377088316*^9, 3.6951504009073687`*^9}, {
   3.69515047343148*^9, 3.695150579048259*^9}, {3.6951506350294323`*^9, 
   3.695150673207161*^9}, {3.695150830569168*^9, 3.695150844865888*^9}, {
   3.6951508978807364`*^9, 3.695150937610647*^9}, {3.6951511652811604`*^9, 
   3.695151242626869*^9}, 3.6953966366060257`*^9, {3.695471085896965*^9, 
   3.695471088296464*^9}, {3.695471323503928*^9, 3.695471326260983*^9}, {
   3.695478289964625*^9, 3.695478296729035*^9}, {3.6954783633978148`*^9, 
   3.695478367493156*^9}, {3.6954789728915052`*^9, 3.695478975939292*^9}, {
   3.695479257495571*^9, 3.6954793569462357`*^9}, {3.695479702577841*^9, 
   3.695479718501836*^9}, {3.6954797784820967`*^9, 3.695479793568891*^9}, {
   3.695479895858411*^9, 3.6954799569808807`*^9}, {3.695480257573141*^9, 
   3.69548025787694*^9}, {3.695480307150652*^9, 3.6954803128834763`*^9}, {
   3.695480375532711*^9, 3.6954803764900312`*^9}, {3.695480470909746*^9, 
   3.69548054685798*^9}, {3.6954809610418653`*^9, 3.695480962353393*^9}, {
   3.695481024699416*^9, 3.695481122181431*^9}, {3.6954811678133383`*^9, 
   3.695481170875988*^9}, {3.695482098515862*^9, 3.695482098841221*^9}, {
   3.695482761714617*^9, 3.6954827974500837`*^9}, {3.695482828261257*^9, 
   3.695482994301621*^9}, {3.695483252241049*^9, 3.695483263394676*^9}, {
   3.695483305453971*^9, 3.695483351217512*^9}, {3.69548381894867*^9, 
   3.695483843485095*^9}, {3.6954838879243107`*^9, 3.6954839618541403`*^9}, {
   3.695484008126157*^9, 3.695484032181066*^9}, {3.695484084960411*^9, 
   3.6954841555511923`*^9}, {3.695484216252211*^9, 3.695484232715179*^9}, 
   3.695484330982102*^9, {3.69549427029095*^9, 3.69549428084568*^9}, {
   3.6955067386771097`*^9, 3.695506774703062*^9}, {3.6955073550906477`*^9, 
   3.695507400916543*^9}, 3.6955074406954536`*^9, {3.695507540803385*^9, 
   3.695507555456018*^9}, {3.6955474506884117`*^9, 3.695547480941148*^9}, {
   3.695576443923888*^9, 3.69557644727636*^9}, {3.695645090927307*^9, 
   3.6956450913175783`*^9}, {3.69564515910039*^9, 3.695645216198867*^9}, {
   3.6956506134173107`*^9, 3.695650679002578*^9}, {3.695650743880548*^9, 
   3.695650927951334*^9}, {3.6956511113398848`*^9, 3.695651147834529*^9}, {
   3.6956558012652903`*^9, 3.695655804838427*^9}, {3.695655837990233*^9, 
   3.695655856141406*^9}, {3.695749832400282*^9, 3.69574990325404*^9}, {
   3.695751327929574*^9, 3.695751341306918*^9}, {3.695822526149757*^9, 
   3.695822608560431*^9}, {3.695822676770955*^9, 3.695822756831212*^9}, {
   3.695822839305072*^9, 3.695822843290681*^9}, {3.6958229134022627`*^9, 
   3.695822947392231*^9}, {3.695823434736682*^9, 3.6958235239854507`*^9}, {
   3.6958239130641947`*^9, 3.695823929420844*^9}, {3.69582399024702*^9, 
   3.695824021515864*^9}, {3.6959402239573517`*^9, 3.6959402517950487`*^9}, {
   3.695998712427988*^9, 3.695998718774261*^9}, {3.695998871092621*^9, 
   3.695998875457654*^9}, {3.696095524224514*^9, 3.696095547456152*^9}, {
   3.696096227155026*^9, 3.696096363326599*^9}, {3.696097023880077*^9, 
   3.696097057033454*^9}, {3.696097395919751*^9, 3.696097406607299*^9}, {
   3.6960986339957943`*^9, 3.69609864399922*^9}, {3.696098678322283*^9, 
   3.696098680427602*^9}, {3.696098726798232*^9, 3.6960987302823677`*^9}, {
   3.6960995237169847`*^9, 3.6960995492284517`*^9}, {3.6960996499607077`*^9, 
   3.6961000202066793`*^9}, {3.6961006205376663`*^9, 
   3.6961006302804947`*^9}, {3.6961007617601233`*^9, 3.696100873946089*^9}, 
   3.696100954020831*^9, {3.696101073229007*^9, 3.696101077074892*^9}, {
   3.696183871239448*^9, 3.69618397871594*^9}, {3.69618402260739*^9, 
   3.696184112865005*^9}, {3.6961843667356253`*^9, 3.696184376015024*^9}, {
   3.696184407507903*^9, 3.6961844099682407`*^9}, 3.6961846612955647`*^9, 
   3.696184744616888*^9, {3.696184940625711*^9, 3.696185203716408*^9}, 
   3.696185263959114*^9, {3.6961853140212917`*^9, 3.6961853287239113`*^9}, {
   3.696185434195457*^9, 3.696185486382208*^9}, {3.696185613704336*^9, 
   3.6961856644521837`*^9}, {3.696185781511042*^9, 3.6961857869276876`*^9}, {
   3.696186275692547*^9, 3.696186329228956*^9}, {3.6961870934353447`*^9, 
   3.6961870978617887`*^9}, {3.6961871803924026`*^9, 3.696187190073091*^9}, {
   3.696248520552981*^9, 3.69624856152451*^9}, {3.696248889010866*^9, 
   3.696248948155212*^9}, {3.696249213933255*^9, 3.696249224075479*^9}, {
   3.696249342859386*^9, 3.696249371146927*^9}, {3.696249807923431*^9, 
   3.696249819395149*^9}, {3.696252247627393*^9, 3.696252248345614*^9}, {
   3.6962525067041473`*^9, 3.6962525094401197`*^9}, {3.696253551438973*^9, 
   3.696253562406337*^9}, {3.6962538889064503`*^9, 3.6962539375692053`*^9}, {
   3.696261576948176*^9, 3.696261778994083*^9}, {3.696262264588214*^9, 
   3.696262269002935*^9}, {3.696263031214798*^9, 3.696263031853006*^9}, 
   3.6962630894937162`*^9, {3.696263259648288*^9, 3.6962632613096333`*^9}, {
   3.696264438484576*^9, 3.696264441707724*^9}, {3.696267900167506*^9, 
   3.696267902332087*^9}, {3.696269109818372*^9, 3.696269122529334*^9}, {
   3.6962691919026213`*^9, 3.696269196429139*^9}, {3.696269238917575*^9, 
   3.696269244676887*^9}, {3.696273033507286*^9, 3.696273036202135*^9}, {
   3.69627327591143*^9, 3.6962732777125483`*^9}, {3.696344574129465*^9, 
   3.69634459669189*^9}, {3.696347357536491*^9, 3.696347490383354*^9}, {
   3.696347536872691*^9, 3.696347542633708*^9}, {3.696348181715405*^9, 
   3.6963481912275248`*^9}, {3.696350482097086*^9, 3.696350487595327*^9}, {
   3.69635061452734*^9, 3.696350617815154*^9}, {3.696350648960331*^9, 
   3.696350658471527*^9}, {3.696350721350988*^9, 3.6963507439442883`*^9}, {
   3.696350993561509*^9, 3.6963510709155407`*^9}, {3.696351127940382*^9, 
   3.696351265731701*^9}, {3.6963514556621637`*^9, 3.696351475518982*^9}, {
   3.696351606896888*^9, 3.696351643519766*^9}, {3.6963522515383472`*^9, 
   3.696352252223336*^9}, {3.6963537586795883`*^9, 3.696353762430258*^9}, {
   3.6963546575485773`*^9, 3.69635481075883*^9}, {3.696354885304042*^9, 
   3.696354888024048*^9}, {3.6963597707725773`*^9, 3.696359791699663*^9}, {
   3.696596749399186*^9, 3.696596759399189*^9}, {3.696599028938037*^9, 
   3.69659903680936*^9}, {3.696613869445801*^9, 3.69661387286445*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"movesAndPositions", ",", "path", ",", 
       RowBox[{"(*", 
        RowBox[{"paths", " ", "for", " ", "each", " ", "robot"}], "*)"}], 
       "path1", ",", "path2", ",", "\[IndentingNewLine]", 
       RowBox[{"r", " ", "=", " ", 
        RowBox[{"1", "/", "40"}]}], " ", 
       RowBox[{"(*", 
        RowBox[{
        "radius", " ", "of", " ", "start", " ", "and", " ", "end", " ", 
         "markers"}], "*)"}], ",", "\[IndentingNewLine]", 
       RowBox[{"thickness", " ", "=", " ", "0.002"}], ",", "rotateSolution", 
       ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"left", " ", "robot"}], "*)"}], " ", "ps1", ",", "pe1", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"right", " ", "robot"}], "*)"}], " ", "ps2", ",", "pe2", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"current", " ", "particle", " ", "position"}], "*)"}], " ", 
       "pm1", ",", "pm2", ",", "offset", ",", "\[IndentingNewLine]", 
       RowBox[{"c1", "=", "Blue"}], ",", 
       RowBox[{"c2", " ", "=", "Magenta"}], ",", "\[IndentingNewLine]", 
       "mvNum", ",", "\[IndentingNewLine]", "mvFrac"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "ensure", " ", "robots", " ", "do", " ", "not", " ", "overlap"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"EuclideanDistance", "[", 
           RowBox[{"s1", ",", "s2"}], "]"}], "<", "\[Epsilon]"}], ",", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
            "s1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "<", 
            RowBox[{
            "s2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
           ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
              "s1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              ">", 
              RowBox[{"2", "\[Epsilon]"}]}], ",", 
             RowBox[{
              RowBox[{
              "s1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              " ", "=", 
              RowBox[{
               RowBox[{
               "s2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               " ", "-", " ", "\[Epsilon]"}]}], ",", 
             RowBox[{
              RowBox[{
              "s2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              " ", "=", 
              RowBox[{
               RowBox[{
               "s1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               " ", "+", "\[Epsilon]"}]}]}], "]"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
              "s2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              ">", 
              RowBox[{"2", "\[Epsilon]"}]}], ",", 
             RowBox[{
              RowBox[{
              "s2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              "=", " ", 
              RowBox[{
               RowBox[{
               "s1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               "-", " ", "\[Epsilon]"}]}], ",", 
             RowBox[{
              RowBox[{
              "s1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              " ", "=", 
              RowBox[{
               RowBox[{
               "s2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               "+", " ", "\[Epsilon]"}]}]}], "]"}]}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"EuclideanDistance", "[", 
           RowBox[{"e1", ",", "e2"}], "]"}], "<", "\[Epsilon]"}], ",", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
            "e1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "<", 
            RowBox[{
            "e2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
           ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
              "e1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              ">", 
              RowBox[{"2", "\[Epsilon]"}]}], ",", 
             RowBox[{
              RowBox[{
              "e1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              " ", "=", 
              RowBox[{
               RowBox[{
               "e2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               " ", "-", " ", "\[Epsilon]"}]}], ",", 
             RowBox[{
              RowBox[{
              "e2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              " ", "=", 
              RowBox[{
               RowBox[{
               "e1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               " ", "+", "\[Epsilon]"}]}]}], "]"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
              "e2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              ">", 
              RowBox[{"2", "\[Epsilon]"}]}], ",", 
             RowBox[{
              RowBox[{
              "e2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              "=", " ", 
              RowBox[{
               RowBox[{
               "e1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               "-", " ", "\[Epsilon]"}]}], ",", 
             RowBox[{
              RowBox[{
              "e1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              " ", "=", 
              RowBox[{
               RowBox[{
               "e2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               "+", " ", "\[Epsilon]"}]}]}], "]"}]}], "]"}]}], "]"}], ";"}], 
      "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"ps1", " ", ",", "pe1", ",", "ps2", ",", "pe2"}], "}"}], " ", 
       "=", " ", 
       RowBox[{"{", 
        RowBox[{"s1", ",", "e1", ",", "s2", ",", "e2"}], "}"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"path", ",", "path1", ",", "path2"}], "}"}], " ", "=", " ", 
       RowBox[{"optimal2robotPath", "[", 
        RowBox[{
        "ps1", ",", "ps2", ",", "pe1", ",", "pe2", ",", "\[Epsilon]"}], " ", 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"mvNum", " ", "=", " ", 
       RowBox[{"Floor", "[", 
        RowBox[{"progress", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Length", "[", "path", "]"}], "-", "1"}], ")"}]}], "]"}]}],
       " ", ";", "\[IndentingNewLine]", 
      RowBox[{"mvFrac", " ", "=", " ", 
       RowBox[{"FractionalPart", "[", 
        RowBox[{"progress", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Length", "[", "path", "]"}], "-", "1"}], ")"}]}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"pm2", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"mvFrac", ">", "0"}], ",", 
         RowBox[{
          RowBox[{"path2", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{"mvNum", "+", "1"}], ",", ";;"}], 
           "\[RightDoubleBracket]"}], "+", 
          RowBox[{"mvFrac", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"path2", "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{"mvNum", "+", "2"}], ",", ";;"}], 
              "\[RightDoubleBracket]"}], "-", 
             RowBox[{"path2", "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{"mvNum", "+", "1"}], ",", ";;"}], 
              "\[RightDoubleBracket]"}]}], ")"}]}]}], ",", 
         RowBox[{"path2", "\[LeftDoubleBracket]", 
          RowBox[{
           RowBox[{"mvNum", "+", "1"}], ",", ";;"}], 
          "\[RightDoubleBracket]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"pm1", " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"mvFrac", ">", "0"}], ",", 
         RowBox[{
          RowBox[{"path1", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{"mvNum", "+", "1"}], ",", ";;"}], 
           "\[RightDoubleBracket]"}], "+", 
          RowBox[{"mvFrac", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"path1", "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{"mvNum", "+", "2"}], ",", ";;"}], 
              "\[RightDoubleBracket]"}], "-", 
             RowBox[{"path1", "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{"mvNum", "+", "1"}], ",", ";;"}], 
              "\[RightDoubleBracket]"}]}], ")"}]}]}], ",", 
         RowBox[{"path1", "\[LeftDoubleBracket]", 
          RowBox[{
           RowBox[{"mvNum", "+", "1"}], ",", ";;"}], 
          "\[RightDoubleBracket]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{"(*", "workspace", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Darker", "[", "Red", "]"}], ",", " ", 
            RowBox[{"Rectangle", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "0.025"}], 
               RowBox[{"{", 
                RowBox[{"1", ",", "1"}], "}"}]}], ",", 
              RowBox[{"1.025", 
               RowBox[{"{", 
                RowBox[{"1", ",", "1"}], "}"}]}]}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Lighter", "[", 
             RowBox[{"Gray", ",", "0.8"}], "]"}], ",", " ", 
            RowBox[{"Rectangle", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}]}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"White", ",", " ", 
            RowBox[{"Rectangle", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"\[Epsilon]", ",", " ", "\[Epsilon]"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"1", "-", "\[Epsilon]"}], ",", 
                RowBox[{"1", "-", "\[Epsilon]"}]}], "}"}]}], "]"}]}], "}"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Lighter", "[", 
             RowBox[{"Gray", ",", "0.8"}], "]"}], ",", " ", 
            RowBox[{"Disk", "[", 
             RowBox[{"ps2", ",", "\[Epsilon]"}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Lighter", "[", 
             RowBox[{"Gray", ",", "0.8"}], "]"}], ",", " ", 
            RowBox[{"Disk", "[", 
             RowBox[{"pe2", ",", "\[Epsilon]"}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"PointSize", "[", "0.01", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Arrowheads", "[", ".02", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Thickness", "[", "thickness", "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"starting", " ", "poses"}], ",", " ", 
            RowBox[{
            "dashed", " ", "line", " ", "from", " ", "start", " ", "to", " ", 
             "end"}]}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"c1", ",", 
            RowBox[{"{", " ", 
             RowBox[{
              RowBox[{"Opacity", "[", ".3", "]"}], ",", "Dashed", ",", 
              RowBox[{"Arrow", "[", 
               RowBox[{"{", 
                RowBox[{"ps1", ",", "pe1"}], "}"}], "]"}]}], "}"}], ",", 
            RowBox[{"Point", "@", "ps1"}], ",", 
            RowBox[{"EdgeForm", "[", 
             RowBox[{"Directive", "[", 
              RowBox[{"c1", ",", 
               RowBox[{"Thickness", "[", "thickness", "]"}]}], "]"}], "]"}], 
            ",", 
            RowBox[{"FaceForm", "[", "None", "]"}], ",", 
            RowBox[{"Rectangle", "[", 
             RowBox[{
              RowBox[{"ps1", "-", 
               RowBox[{
                RowBox[{"2", "/", "3"}], "r", " ", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "1"}], "}"}]}]}], ",", 
              RowBox[{"ps1", "+", 
               RowBox[{
                RowBox[{"2", "/", "3"}], "r", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "1"}], "}"}]}]}]}], "]"}], ",", 
            RowBox[{"Circle", "[", 
             RowBox[{"pe1", ",", "r"}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"c2", ",", 
            RowBox[{"{", " ", 
             RowBox[{
              RowBox[{"Opacity", "[", ".3", "]"}], ",", "Dashed", ",", 
              RowBox[{"Arrow", "[", 
               RowBox[{"{", 
                RowBox[{"ps2", ",", "pe2"}], "}"}], "]"}]}], "}"}], ",", 
            RowBox[{"Point", "@", "ps2"}], ",", 
            RowBox[{"EdgeForm", "[", 
             RowBox[{"Directive", "[", 
              RowBox[{"c2", ",", 
               RowBox[{"Thickness", "[", "thickness", "]"}]}], "]"}], "]"}], 
            ",", 
            RowBox[{"FaceForm", "[", "None", "]"}], ",", 
            RowBox[{"Rectangle", "[", 
             RowBox[{
              RowBox[{"ps2", "-", 
               RowBox[{
                RowBox[{"2", "/", "3"}], "r", " ", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "1"}], "}"}]}]}], ",", 
              RowBox[{"ps2", "+", 
               RowBox[{
                RowBox[{"2", "/", "3"}], "r", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "1"}], "}"}]}]}]}], "]"}], ",", " ", 
            RowBox[{"Circle", "[", 
             RowBox[{"pe2", ",", "r"}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
           "plot", " ", "path", " ", "of", " ", "particle", " ", "1"}], 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"c1", ",", "\[IndentingNewLine]", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Arrow", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"path1", "\[LeftDoubleBracket]", 
                  RowBox[{"i", ",", ";;"}], "\[RightDoubleBracket]"}], ",", 
                 RowBox[{"path1", "\[LeftDoubleBracket]", 
                  RowBox[{
                   RowBox[{"i", "+", "1"}], ",", ";;"}], 
                  "\[RightDoubleBracket]"}]}], "}"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", "mvNum"}], "}"}]}], "]"}], ",", 
            "\[IndentingNewLine]", " ", 
            RowBox[{"Arrow", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"path1", "\[LeftDoubleBracket]", 
                RowBox[{
                 RowBox[{"mvNum", "+", "1"}], ",", ";;"}], 
                "\[RightDoubleBracket]"}], ",", "pm1"}], "}"}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                 "pm1", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}], "\[Equal]", "0"}], "||", 
                RowBox[{
                 RowBox[{
                 "pm1", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}], "\[Equal]", "0"}], "||", 
                RowBox[{
                 RowBox[{
                 "pm1", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}], "\[Equal]", "1"}], "||", 
                RowBox[{
                 RowBox[{
                 "pm1", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}], "\[Equal]", "1"}]}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Point", "@", "pm1"}], " ", ",", 
                 RowBox[{"PointSize", "[", "0.005", "]"}], ",", "White", ",", 
                 
                 RowBox[{"Point", "@", "pm1"}]}], " ", "}"}], ",", 
               RowBox[{"Point", "@", "pm1"}]}], "]"}], " ", "}"}]}], 
           "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Inset", "[", 
             RowBox[{
              RowBox[{"RegionPlot", "[", 
               RowBox[{
                RowBox[{"x", "<", 
                 RowBox[{"-", "3"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", 
                  RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"y", ",", 
                  RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
                RowBox[{"Epilog", "\[Rule]", 
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{"(*", 
                   RowBox[{"reachable", " ", "region"}], "*)"}], 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"LightBlue", ",", 
                    RowBox[{"EdgeForm", "[", "Blue", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Rectangle", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "pm2", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "-", "1", "-", 
                    RowBox[{
                    "pm1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    "pm2", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    "pm1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}]}], "]"}]}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{"Black", ",", " ", 
                    RowBox[{"Text", "[", 
                    RowBox[{"\"\<Reachable Region\>\"", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"1", "+", 
                    RowBox[{
                    "pm2", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", "\[Epsilon]", "-", "1"}], 
                    "2"], ",", 
                    FractionBox[
                    RowBox[{
                    RowBox[{
                    "pm2", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    "pm1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "2"]}], "}"}]}], "]"}]}], 
                    "*)"}], "\[IndentingNewLine]", "}"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"{", 
                    RowBox[{"LightGreen", ",", 
                    RowBox[{"EdgeForm", "[", "Blue", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Rectangle", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", "1"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "pm2", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    "pm1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"1", "+", " ", 
                    RowBox[{
                    "pm2", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    "pm1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], "}"}]}], "]"}]}], 
                    "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
                   
                   RowBox[{"(*", 
                    RowBox[{"current", " ", "deltas"}], "*)"}], 
                   "\[IndentingNewLine]", "Red", ",", 
                   RowBox[{"Rectangle", "[", 
                    RowBox[{
                    RowBox[{"pm2", "-", "pm1", "-", 
                    RowBox[{
                    RowBox[{"4", "/", "3"}], "r", " ", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}]}], ",", 
                    RowBox[{"pm2", "-", "pm1", "+", 
                    RowBox[{
                    RowBox[{"4", "/", "3"}], "r", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}]}]}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"(*", 
                    RowBox[{"goal", " ", "deltas"}], "*)"}], 
                   "\[IndentingNewLine]", "Green", ",", "\[IndentingNewLine]", 
                   RowBox[{"Disk", "[", 
                    RowBox[{
                    RowBox[{"pe2", "-", "pe1"}], ",", 
                    RowBox[{"2", "r"}]}], "]"}]}], "\[IndentingNewLine]", 
                  "\[IndentingNewLine]", "}"}]}], ",", 
                RowBox[{"FrameLabel", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<\[CapitalDelta]x\>\"", ",", 
                   "\"\<\[CapitalDelta] y\>\""}], "}"}]}], ",", 
                RowBox[{"ImageSize", "\[Rule]", "250"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"1.5", ",", ".5"}], "}"}]}], "]"}], ","}], 
           "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
           "plot", " ", "path", " ", "of", " ", "particle", " ", "2"}], 
           "*)"}], "\[IndentingNewLine]", " ", 
          RowBox[{"{", 
           RowBox[{"c2", ",", "\[IndentingNewLine]", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Arrow", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"path2", "\[LeftDoubleBracket]", 
                  RowBox[{"i", ",", ";;"}], "\[RightDoubleBracket]"}], ",", 
                 RowBox[{"path2", "\[LeftDoubleBracket]", 
                  RowBox[{
                   RowBox[{"i", "+", "1"}], ",", ";;"}], 
                  "\[RightDoubleBracket]"}]}], "}"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", "mvNum"}], "}"}]}], "]"}], ",", 
            "\[IndentingNewLine]", " ", 
            RowBox[{"Arrow", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"path2", "\[LeftDoubleBracket]", 
                RowBox[{
                 RowBox[{"mvNum", "+", "1"}], ",", ";;"}], 
                "\[RightDoubleBracket]"}], ",", "pm2"}], "}"}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                 "pm2", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}], "\[Equal]", "0"}], "||", 
                RowBox[{
                 RowBox[{
                 "pm2", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}], "\[Equal]", "0"}], "||", 
                RowBox[{
                 RowBox[{
                 "pm2", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}], "\[Equal]", "1"}], "||", 
                RowBox[{
                 RowBox[{
                 "pm2", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}], "\[Equal]", "1"}]}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Point", "@", "pm2"}], " ", ",", 
                 RowBox[{"PointSize", "[", "0.005", "]"}], ",", "White", ",", 
                 
                 RowBox[{"Point", "@", "pm2"}]}], " ", "}"}], ",", 
               RowBox[{"Point", "@", "pm2"}]}], "]"}], "}"}]}], 
           "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"mvNum", "+", "1"}], "\[Equal]", " ", 
                RowBox[{"Length", "[", "path", "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"mvNum", "=", " ", 
                  RowBox[{
                   RowBox[{"Length", "[", "path", "]"}], "-", "2"}]}], ",", 
                 RowBox[{"mvFrac", "=", "1"}]}], "}"}]}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"Darker", "[", "Red", "]"}]}], ",", " ", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"StringForm", "[", 
                 RowBox[{"\"\<Move `` of ``\>\"", ",", " ", 
                  RowBox[{"mvNum", "+", "1"}], ",", 
                  RowBox[{
                   RowBox[{"Length", "[", "path", "]"}], "-", "1"}]}], "]"}], 
                ",", 
                RowBox[{"FontSize", "\[Rule]", "18"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"1.55", ",", ".9"}], "}"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"StringForm", "[", 
                 RowBox[{"\"\<Total Distance `` \>\"", ",", " ", 
                  RowBox[{"Round", "[", 
                   RowBox[{
                    RowBox[{"N", "[", 
                    RowBox[{"Total", "[", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"EuclideanDistance", "[", 
                    RowBox[{
                    RowBox[{
                    "path", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "2", ",", " ", 
                    RowBox[{"Length", "[", "path", "]"}]}], "}"}]}], "]"}], 
                    " ", "]"}], " ", "]"}], ",", ".01"}], "]"}]}], "]"}], ",", 
                RowBox[{"FontSize", "\[Rule]", "18"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"1.55", ",", ".8"}], "}"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"offset", " ", "=", " ", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1.55", ",", ".5"}], "}"}], "-", 
               RowBox[{
                FractionBox["1", "2"], 
                RowBox[{"path", "\[LeftDoubleBracket]", 
                 RowBox[{
                  RowBox[{"mvNum", "+", "2"}], ",", ";;"}], 
                 "\[RightDoubleBracket]"}]}]}]}], ";", "\[IndentingNewLine]", 
             
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Opacity", "[", "0.3", "]"}], ",", " ", 
               RowBox[{"Arrow", "[", 
                RowBox[{"{", 
                 RowBox[{"offset", ",", 
                  RowBox[{"offset", "+", 
                   RowBox[{"path", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"mvNum", "+", "2"}], ",", ";;"}], 
                    "\[RightDoubleBracket]"}]}]}], "}"}], "]"}]}], "}"}]}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"Point", "[", 
             RowBox[{"offset", "+", 
              RowBox[{"mvFrac", 
               RowBox[{"(", 
                RowBox[{"path", "\[LeftDoubleBracket]", 
                 RowBox[{
                  RowBox[{"mvNum", "+", "2"}], ",", ";;"}], 
                 "\[RightDoubleBracket]"}], ")"}]}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Arrow", "[", 
             RowBox[{"{", 
              RowBox[{"offset", ",", "  ", 
               RowBox[{"offset", "+", 
                RowBox[{"mvFrac", 
                 RowBox[{"(", 
                  RowBox[{"path", "\[LeftDoubleBracket]", 
                   RowBox[{
                    RowBox[{"mvNum", "+", "2"}], ",", ";;"}], 
                   "\[RightDoubleBracket]"}], ")"}]}]}]}], " ", "}"}], 
             "]"}]}], "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
         "}"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "800"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.05"}], ",", "2.05"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", ".05"}], ",", "1.05"}], "}"}]}], "}"}]}]}], 
       "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Control", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"progress", ",", "1", ",", "\"\<progress\>\""}], "}"}], ",",
          "0", ",", "1", ",", 
         RowBox[{"1", "/", "420"}], ",", "Slider", ",", 
         RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"Control", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Epsilon]", ",", 
           RowBox[{"1", "/", "1000"}], ",", "\"\<\[Epsilon]\>\""}], "}"}], 
         ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"1", "/", "10"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", "Slider", ",", 
         RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}]}], 
     "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s1", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"3", "/", "4"}], ",", 
         RowBox[{"1", "/", "5"}]}], "}"}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], "+", " ", "\[Epsilon]"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], "-", " ", "\[Epsilon]"}], ",", 
     "Locator", ",", 
     RowBox[{"Appearance", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s2", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "/", "4"}], ",", 
         RowBox[{"4", "/", "5"}]}], "}"}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], "+", " ", "\[Epsilon]"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], "-", " ", "\[Epsilon]"}], ",", 
     "Locator", ",", 
     RowBox[{"Appearance", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"e1", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"2", "/", "3"}], ",", 
         RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], "+", " ", "\[Epsilon]"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], "-", " ", "\[Epsilon]"}], ",", 
     "Locator", ",", 
     RowBox[{"Appearance", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"e2", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "/", "2"}], ",", 
         RowBox[{"2", "/", "3"}]}], "}"}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], "+", " ", "\[Epsilon]"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], "-", " ", "\[Epsilon]"}], ",", 
     "Locator", ",", 
     RowBox[{"Appearance", "\[Rule]", "None"}]}], "}"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"s1", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"3", "/", "4"}], ",", 
           RowBox[{"1", "/", "5"}]}], "}"}]}], "}"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], "+", " ", "\[Epsilon]"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], "-", " ", "\[Epsilon]"}], ",", 
       "Locator", ",", 
       RowBox[{"Appearance", "\[Rule]", "None"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"s2", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "/", "4"}], ",", 
           RowBox[{"1", "/", "5"}]}], "}"}]}], "}"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], "+", " ", "\[Epsilon]"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], "-", " ", "\[Epsilon]"}], ",", 
       "Locator", ",", 
       RowBox[{"Appearance", "\[Rule]", "None"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"e1", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"3", "/", "4"}], ",", 
           RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], "+", " ", "\[Epsilon]"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], "-", " ", "\[Epsilon]"}], ",", 
       "Locator", ",", 
       RowBox[{"Appearance", "\[Rule]", "None"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"e2", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "/", "4"}], ",", 
           RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], "+", " ", "\[Epsilon]"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], "-", " ", "\[Epsilon]"}], ",", 
       "Locator", ",", 
       RowBox[{"Appearance", "\[Rule]", "None"}]}], "}"}]}], "*)"}], 
   "\[IndentingNewLine]", ",", " ", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`e1$$ = {
     Rational[2, 3], 
     Rational[1, 2]}, $CellContext`e2$$ = {
     Rational[1, 2], 
     Rational[2, 3]}, $CellContext`progress$$ = 1, $CellContext`s1$$ = {
     Rational[1, 4], 
     Rational[4, 5]}, $CellContext`s2$$ = {
     Rational[3, 4], 
     Rational[1, 5]}, $CellContext`\[Epsilon]$$ = 0.001, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`progress$$], 1, "progress"}, 0, 1, 
      Rational[1, 420]}, {{
       Hold[$CellContext`\[Epsilon]$$], 
       Rational[1, 1000], "\[Epsilon]"}, 
      Rational[1, 1000], 
      Rational[1, 10], 
      Rational[1, 1000]}, {
      Hold[
       Row[{
         Manipulate`Place[1], 
         Manipulate`Place[2]}]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`s1$$], {
        Rational[3, 4], 
        Rational[1, 5]}}, 
      Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
      Dynamic[{1, 1} - $CellContext`\[Epsilon]$$]}, {{
       Hold[$CellContext`s2$$], {
        Rational[1, 4], 
        Rational[4, 5]}}, 
      Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
      Dynamic[{1, 1} - $CellContext`\[Epsilon]$$]}, {{
       Hold[$CellContext`e1$$], {
        Rational[2, 3], 
        Rational[1, 2]}}, 
      Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
      Dynamic[{1, 1} - $CellContext`\[Epsilon]$$]}, {{
       Hold[$CellContext`e2$$], {
        Rational[1, 2], 
        Rational[2, 3]}}, 
      Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
      Dynamic[{1, 1} - $CellContext`\[Epsilon]$$]}}, Typeset`size$$ = {
    800., {207., 212.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False, $CellContext`progress$1046738$$ = 
    0, $CellContext`\[Epsilon]$1046739$$ = 0, $CellContext`s1$1046740$$ = 
    0, $CellContext`s2$1046741$$ = 0, $CellContext`e1$1046742$$ = 
    0, $CellContext`e2$1046743$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, "Variables" :> {$CellContext`e1$$ = {
          Rational[2, 3], 
          Rational[1, 2]}, $CellContext`e2$$ = {
          Rational[1, 2], 
          Rational[2, 3]}, $CellContext`progress$$ = 1, $CellContext`s1$$ = {
          Rational[3, 4], 
          Rational[1, 5]}, $CellContext`s2$$ = {
          Rational[1, 4], 
          Rational[4, 5]}, $CellContext`\[Epsilon]$$ = Rational[1, 1000]}, 
      "ControllerVariables" :> {
        Hold[$CellContext`progress$$, $CellContext`progress$1046738$$, 0], 
        Hold[$CellContext`\[Epsilon]$$, $CellContext`\[Epsilon]$1046739$$, 0], 
        Hold[$CellContext`s1$$, $CellContext`s1$1046740$$, 0], 
        Hold[$CellContext`s2$$, $CellContext`s2$1046741$$, 0], 
        Hold[$CellContext`e1$$, $CellContext`e1$1046742$$, 0], 
        Hold[$CellContext`e2$$, $CellContext`e2$1046743$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`movesAndPositions$, $CellContext`path$, \
$CellContext`path1$, $CellContext`path2$, $CellContext`r$ = 
         1/40, $CellContext`thickness$ = 
         0.002, $CellContext`rotateSolution$, $CellContext`ps1$, \
$CellContext`pe1$, $CellContext`ps2$, $CellContext`pe2$, $CellContext`pm1$, \
$CellContext`pm2$, $CellContext`offset$, $CellContext`c1$ = 
         Blue, $CellContext`c2$ = 
         Magenta, $CellContext`mvNum$, $CellContext`mvFrac$}, \
{$CellContext`ps1$, $CellContext`pe1$, $CellContext`ps2$, $CellContext`pe2$} = \
{$CellContext`s1$$, $CellContext`e1$$, $CellContext`s2$$, $CellContext`e2$$}; \
{$CellContext`path$, $CellContext`path1$, $CellContext`path2$} = \
$CellContext`optimal2robotPath[$CellContext`ps1$, $CellContext`ps2$, \
$CellContext`pe1$, $CellContext`pe2$, $CellContext`\[Epsilon]$$]; \
$CellContext`mvNum$ = 
         Floor[$CellContext`progress$$ (Length[$CellContext`path$] - 
            1)]; $CellContext`mvFrac$ = 
         FractionalPart[$CellContext`progress$$ (Length[$CellContext`path$] - 
            1)]; $CellContext`pm2$ = 
         If[$CellContext`mvFrac$ > 0, 
           Part[$CellContext`path2$, $CellContext`mvNum$ + 1, 
             Span[1, All]] + $CellContext`mvFrac$ (
             Part[$CellContext`path2$, $CellContext`mvNum$ + 2, 
               Span[1, All]] - 
             Part[$CellContext`path2$, $CellContext`mvNum$ + 1, 
              Span[1, All]]), 
           Part[$CellContext`path2$, $CellContext`mvNum$ + 1, 
            Span[1, All]]]; $CellContext`pm1$ = 
         If[$CellContext`mvFrac$ > 0, 
           Part[$CellContext`path1$, $CellContext`mvNum$ + 1, 
             Span[1, All]] + $CellContext`mvFrac$ (
             Part[$CellContext`path1$, $CellContext`mvNum$ + 2, 
               Span[1, All]] - 
             Part[$CellContext`path1$, $CellContext`mvNum$ + 1, 
              Span[1, All]]), 
           Part[$CellContext`path1$, $CellContext`mvNum$ + 1, 
            Span[1, All]]]; Graphics[{{
            Darker[Red], 
            Rectangle[(-0.025) {1, 1}, 1.025 {1, 1}]}, {
            Lighter[Gray, 0.8], 
            Rectangle[{0, 0}, {1, 1}]}, {White, 
            
            Rectangle[{$CellContext`\[Epsilon]$$, $CellContext`\[Epsilon]$$}, \
{1 - $CellContext`\[Epsilon]$$, 1 - $CellContext`\[Epsilon]$$}]}, {
            Lighter[Gray, 0.8], 
            Disk[$CellContext`ps2$, $CellContext`\[Epsilon]$$]}, {
            Lighter[Gray, 0.8], 
            Disk[$CellContext`pe2$, $CellContext`\[Epsilon]$$]}, 
           PointSize[0.01], 
           Arrowheads[0.02], 
           Thickness[$CellContext`thickness$], {$CellContext`c1$, {
             Opacity[0.3], Dashed, 
             Arrow[{$CellContext`ps1$, $CellContext`pe1$}]}, 
            Point[$CellContext`ps1$], 
            EdgeForm[
             Directive[$CellContext`c1$, 
              Thickness[$CellContext`thickness$]]], 
            FaceForm[None], 
            
            Rectangle[$CellContext`ps1$ - ((2/3) $CellContext`r$) {1, 
              1}, $CellContext`ps1$ + ((2/3) $CellContext`r$) {1, 1}], 
            Circle[$CellContext`pe1$, $CellContext`r$]}, {$CellContext`c2$, {
             Opacity[0.3], Dashed, 
             Arrow[{$CellContext`ps2$, $CellContext`pe2$}]}, 
            Point[$CellContext`ps2$], 
            EdgeForm[
             Directive[$CellContext`c2$, 
              Thickness[$CellContext`thickness$]]], 
            FaceForm[None], 
            
            Rectangle[$CellContext`ps2$ - ((2/3) $CellContext`r$) {1, 
              1}, $CellContext`ps2$ + ((2/3) $CellContext`r$) {1, 1}], 
            Circle[$CellContext`pe2$, $CellContext`r$]}, {$CellContext`c1$, 
            Table[
             Arrow[{
               Part[$CellContext`path1$, $CellContext`i, 
                Span[1, All]], 
               Part[$CellContext`path1$, $CellContext`i + 1, 
                Span[1, All]]}], {$CellContext`i, 1, $CellContext`mvNum$}], 
            Arrow[{
              Part[$CellContext`path1$, $CellContext`mvNum$ + 1, 
               Span[1, All]], $CellContext`pm1$}], {
             If[
              Or[
              Part[$CellContext`pm1$, 1] == 0, Part[$CellContext`pm1$, 2] == 
               0, Part[$CellContext`pm1$, 1] == 1, Part[$CellContext`pm1$, 2] == 
               1], {
               Point[$CellContext`pm1$], 
               PointSize[0.005], White, 
               Point[$CellContext`pm1$]}, 
              Point[$CellContext`pm1$]]}}, {$CellContext`c2$, 
            Table[
             Arrow[{
               Part[$CellContext`path2$, $CellContext`i, 
                Span[1, All]], 
               Part[$CellContext`path2$, $CellContext`i + 1, 
                Span[1, All]]}], {$CellContext`i, 1, $CellContext`mvNum$}], 
            Arrow[{
              Part[$CellContext`path2$, $CellContext`mvNum$ + 1, 
               Span[1, All]], $CellContext`pm2$}], {
             If[
              Or[
              Part[$CellContext`pm2$, 1] == 0, Part[$CellContext`pm2$, 2] == 
               0, Part[$CellContext`pm2$, 1] == 1, Part[$CellContext`pm2$, 2] == 
               1], {
               Point[$CellContext`pm2$], 
               PointSize[0.005], White, 
               Point[$CellContext`pm2$]}, 
              Point[$CellContext`pm2$]]}}, {
           If[$CellContext`mvNum$ + 1 == 
              Length[$CellContext`path$], {$CellContext`mvNum$ = 
               Length[$CellContext`path$] - 2, $CellContext`mvFrac$ = 1}]; 
            Darker[Red], 
            Text[
             Style[
              StringForm[
              "Move `` of ``", $CellContext`mvNum$ + 1, 
               Length[$CellContext`path$] - 1], FontSize -> 18], {1.55, 0.9}], 
            Text[
             Style[
              StringForm["Total Distance `` ", 
               Round[
                N[
                 Total[
                  Table[
                   EuclideanDistance[
                    Part[$CellContext`path$, $CellContext`i], {0, 
                    0}], {$CellContext`i, 2, 
                    Length[$CellContext`path$]}]]], 0.01]], FontSize -> 18], {
             1.55, 0.8}], $CellContext`offset$ = {1.55, 0.5} - (1/2) 
              Part[$CellContext`path$, $CellContext`mvNum$ + 2, 
                Span[1, All]]; {
              Opacity[0.3], 
              
              Arrow[{$CellContext`offset$, $CellContext`offset$ + 
                Part[$CellContext`path$, $CellContext`mvNum$ + 2, 
                  Span[1, All]]}]}, 
            
            Point[$CellContext`offset$ + $CellContext`mvFrac$ 
              Part[$CellContext`path$, $CellContext`mvNum$ + 2, 
                Span[1, All]]], 
            
            Arrow[{$CellContext`offset$, $CellContext`offset$ + \
$CellContext`mvFrac$ Part[$CellContext`path$, $CellContext`mvNum$ + 2, 
                 Span[1, All]]}]}}, ImageSize -> 800, 
          PlotRange -> {{-0.05, 2.05}, {-0.05, 1.05}}]], 
      "Specifications" :> {{{$CellContext`progress$$, 1, "progress"}, 0, 1, 
         Rational[1, 420], ControlType -> Slider, Appearance -> "Labeled", 
         ControlPlacement -> 1}, {{$CellContext`\[Epsilon]$$, 
          Rational[1, 1000], "\[Epsilon]"}, 
         Rational[1, 1000], 
         Rational[1, 10], 
         Rational[1, 1000], ControlType -> Slider, Appearance -> "Labeled", 
         ControlPlacement -> 2}, 
        Row[{
          Manipulate`Place[1], 
          Manipulate`Place[2]}], {{$CellContext`s1$$, {
           Rational[3, 4], 
           Rational[1, 5]}}, 
         Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
         Dynamic[{1, 1} - $CellContext`\[Epsilon]$$], ControlType -> Locator, 
         Appearance -> None}, {{$CellContext`s2$$, {
           Rational[1, 4], 
           Rational[4, 5]}}, 
         Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
         Dynamic[{1, 1} - $CellContext`\[Epsilon]$$], ControlType -> Locator, 
         Appearance -> None}, {{$CellContext`e1$$, {
           Rational[2, 3], 
           Rational[1, 2]}}, 
         Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
         Dynamic[{1, 1} - $CellContext`\[Epsilon]$$], ControlType -> Locator, 
         Appearance -> None}, {{$CellContext`e2$$, {
           Rational[1, 2], 
           Rational[2, 3]}}, 
         Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
         Dynamic[{1, 1} - $CellContext`\[Epsilon]$$], ControlType -> Locator, 
         Appearance -> None}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{851., {255., 260.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`s1$$ = {1/4, 4/5}, $CellContext`s2$$ = {
        3/4, 1/5}, $CellContext`optimal2robotPath[
         Pattern[$CellContext`s1, 
          Blank[]], 
         Pattern[$CellContext`s2, 
          Blank[]], 
         Pattern[$CellContext`g1, 
          Blank[]], 
         Pattern[$CellContext`g2, 
          Blank[]], 
         Pattern[$CellContext`\[Epsilon], 
          Blank[]]] := 
       Module[{$CellContext`optimalPathList, $CellContext`bestMoveSeq, \
$CellContext`dist1, $CellContext`iter = 
          0}, $CellContext`optimalPathList = {{
            Infinity, $CellContext`s1, $CellContext`s2, {{0, 
             0}}, {$CellContext`s1}, {$CellContext`s2}, 
             False}}; $CellContext`dist1 = \
$CellContext`distanceMoved[$CellContext`admissibleHeuristic[$CellContext`s1, \
$CellContext`s2, $CellContext`g1, $CellContext`g2] + 0]; 
         While[Part[$CellContext`optimalPathList, 1, 7] != True, 
           
           Module[{$CellContext`pathToExplore, $CellContext`r1, \
$CellContext`r2, $CellContext`wallMoves, $CellContext`moves, \
$CellContext`pm1, $CellContext`pm2, $CellContext`isPathComplete}, \
$CellContext`pathToExplore = 
             First[$CellContext`optimalPathList]; \
$CellContext`optimalPathList = 
             Delete[$CellContext`optimalPathList, 1]; $CellContext`r1 = 
             Part[$CellContext`pathToExplore, 2]; $CellContext`r2 = 
             Part[$CellContext`pathToExplore, 3]; $CellContext`moves = 
             Part[$CellContext`pathToExplore, 4]; $CellContext`pm1 = 
             Part[$CellContext`pathToExplore, 5]; $CellContext`pm2 = 
             Part[$CellContext`pathToExplore, 6]; $CellContext`isPathComplete = 
             Part[$CellContext`pathToExplore, 7]; AddTo[$CellContext`iter, 1]; 
            If[$CellContext`isPathComplete != True, 
              Table[$CellContext`wallMoves = \
$CellContext`wallFrictionMoveDir[$CellContext`dir, $CellContext`r1, \
$CellContext`r2, $CellContext`g1, $CellContext`g2, $CellContext`moves, \
$CellContext`pm1, $CellContext`pm2, $CellContext`\[Epsilon]]; \
$CellContext`optimalPathList = 
                 AppendTo[$CellContext`optimalPathList, \
$CellContext`wallMoves]; 
                Null, {$CellContext`dir, {
                 "u", "d", "l", "r"}}]; $CellContext`optimalPathList = 
               SortBy[$CellContext`optimalPathList, First]; Null]]]; Return[{
            Part[
             Part[$CellContext`optimalPathList, 1], 4], 
            Part[
             Part[$CellContext`optimalPathList, 1], 5], 
            Part[
             Part[$CellContext`optimalPathList, 1], 6]}]], $CellContext`g1 = {
        1/2, 2/3}, $CellContext`\[Epsilon]$$ = 
       0.001, $CellContext`distanceMoved[
         Pattern[$CellContext`moves, 
          Blank[]]] := Total[
         Table[
          
          Norm[$CellContext`m], {$CellContext`m, $CellContext`moves}]], \
$CellContext`admissibleHeuristic[
         Pattern[$CellContext`s1, 
          Blank[]], 
         Pattern[$CellContext`s2, 
          Blank[]], 
         Pattern[$CellContext`g1, 
          Blank[]], 
         Pattern[$CellContext`g2, 
          Blank[]]] := Max[
         EuclideanDistance[$CellContext`g1, $CellContext`s1], 
         EuclideanDistance[$CellContext`g2, $CellContext`s2]], \
$CellContext`wallFrictionMoveDir[
         Pattern[$CellContext`dir, 
          Blank[]], 
         Pattern[$CellContext`s1, 
          Blank[]], 
         Pattern[$CellContext`s2, 
          Blank[]], 
         Pattern[$CellContext`g1, 
          Blank[]], 
         Pattern[$CellContext`g2, 
          Blank[]], 
         Pattern[$CellContext`moves, 
          Blank[]], 
         Pattern[$CellContext`pm1, 
          Blank[]], 
         Pattern[$CellContext`pm2, 
          Blank[]], 
         Pattern[$CellContext`\[Epsilon], 
          Blank[]]] := 
       Module[{$CellContext`\[CapitalDelta]ex, \
$CellContext`\[CapitalDelta]ey, $CellContext`path = $CellContext`moves, \
$CellContext`path1 = $CellContext`pm1, $CellContext`path2 = \
$CellContext`pm2}, {$CellContext`\[CapitalDelta]ex, $CellContext`\
\[CapitalDelta]ey} = ($CellContext`g2 - $CellContext`g1) - ($CellContext`s2 - \
$CellContext`s1); If[
           And[-0.0001 <= $CellContext`\[CapitalDelta]ex <= 0.0001, 
            Inequality[-0.0001, LessEqual, $CellContext`\[CapitalDelta]ey, 
             Less, 0.0001]], 
           AppendTo[$CellContext`path, {
             Part[$CellContext`g2, 1] - Part[$CellContext`s2, 1], 
              Part[$CellContext`g2, 2] - Part[$CellContext`s2, 2]}]; 
           AppendTo[$CellContext`path1, $CellContext`g1]; 
           AppendTo[$CellContext`path2, $CellContext`g2]; Return[{
              $CellContext`distanceMoved[$CellContext`path], $CellContext`g1, \
$CellContext`g2, $CellContext`path, $CellContext`path1, $CellContext`path2, 
              True}]]; 
         Module[{$CellContext`r1, $CellContext`r2, \
$CellContext`newPathEntries, $CellContext`s1t, $CellContext`s2t, \
$CellContext`g1t, $CellContext`g2t, $CellContext`movest, $CellContext`pm1st, \
$CellContext`pm2st}, 
           If[$CellContext`dir == 
             "u", $CellContext`newPathEntries = \
$CellContext`wallFrictionMoveUp[$CellContext`s1, $CellContext`s2, \
$CellContext`g1, $CellContext`g2, $CellContext`moves, $CellContext`pm1, \
$CellContext`pm2, $CellContext`\[Epsilon]]; Null]; 
           If[$CellContext`dir == 
             "d", {$CellContext`s1t, $CellContext`s2t, $CellContext`g1t, \
$CellContext`g2t} = 
              Map[$CellContext`rotate180, {$CellContext`s1, $CellContext`s2, \
$CellContext`g1, $CellContext`g2}]; $CellContext`movest = 
              Map[$CellContext`rotate180inplace, $CellContext`moves]; \
$CellContext`pm1st = 
              Map[$CellContext`rotate180, $CellContext`pm1]; \
$CellContext`pm2st = 
              Map[$CellContext`rotate180, $CellContext`pm2]; \
$CellContext`newPathEntries = \
$CellContext`wallFrictionMoveUp[$CellContext`s1t, $CellContext`s2t, \
$CellContext`g1t, $CellContext`g2t, $CellContext`movest, $CellContext`pm1st, \
$CellContext`pm2st, $CellContext`\[Epsilon]]; 
             Part[$CellContext`newPathEntries, 2] = $CellContext`rotate180[
                Part[$CellContext`newPathEntries, 2]]; 
             Part[$CellContext`newPathEntries, 3] = $CellContext`rotate180[
                Part[$CellContext`newPathEntries, 3]]; 
             Part[$CellContext`newPathEntries, 4] = 
              Map[$CellContext`rotate180inplace, 
                Part[$CellContext`newPathEntries, 4]]; 
             Part[$CellContext`newPathEntries, 5] = 
              Map[$CellContext`rotate180, 
                Part[$CellContext`newPathEntries, 5]]; 
             Part[$CellContext`newPathEntries, 6] = 
              Map[$CellContext`rotate180, 
                Part[$CellContext`newPathEntries, 6]]; Null]; 
           If[$CellContext`dir == 
             "r", {$CellContext`s1t, $CellContext`s2t, $CellContext`g1t, \
$CellContext`g2t} = 
              Map[$CellContext`rotate90, {$CellContext`s1, $CellContext`s2, \
$CellContext`g1, $CellContext`g2}]; $CellContext`movest = 
              Map[$CellContext`rotate90inplace, $CellContext`moves]; \
$CellContext`pm1st = 
              Map[$CellContext`rotate90, $CellContext`pm1]; \
$CellContext`pm2st = 
              Map[$CellContext`rotate90, $CellContext`pm2]; \
$CellContext`newPathEntries = \
$CellContext`wallFrictionMoveUp[$CellContext`s1t, $CellContext`s2t, \
$CellContext`g1t, $CellContext`g2t, $CellContext`movest, $CellContext`pm1st, \
$CellContext`pm2st, $CellContext`\[Epsilon]]; 
             Part[$CellContext`newPathEntries, 2] = $CellContext`rotate270[
                Part[$CellContext`newPathEntries, 2]]; 
             Part[$CellContext`newPathEntries, 3] = $CellContext`rotate270[
                Part[$CellContext`newPathEntries, 3]]; 
             Part[$CellContext`newPathEntries, 4] = 
              Map[$CellContext`rotate270inplace, 
                Part[$CellContext`newPathEntries, 4]]; 
             Part[$CellContext`newPathEntries, 5] = 
              Map[$CellContext`rotate270, 
                Part[$CellContext`newPathEntries, 5]]; 
             Part[$CellContext`newPathEntries, 6] = 
              Map[$CellContext`rotate270, 
                Part[$CellContext`newPathEntries, 6]]]; 
           If[$CellContext`dir == 
             "l", {$CellContext`s1t, $CellContext`s2t, $CellContext`g1t, \
$CellContext`g2t} = 
              Map[$CellContext`rotate270, {$CellContext`s1, $CellContext`s2, \
$CellContext`g1, $CellContext`g2}]; $CellContext`movest = 
              Map[$CellContext`rotate270inplace, $CellContext`moves]; \
$CellContext`pm1st = 
              Map[$CellContext`rotate270, $CellContext`pm1]; \
$CellContext`pm2st = 
              Map[$CellContext`rotate270, $CellContext`pm2]; \
$CellContext`newPathEntries = \
$CellContext`wallFrictionMoveUp[$CellContext`s1t, $CellContext`s2t, \
$CellContext`g1t, $CellContext`g2t, $CellContext`movest, $CellContext`pm1st, \
$CellContext`pm2st, $CellContext`\[Epsilon]]; 
             Part[$CellContext`newPathEntries, 2] = $CellContext`rotate90[
                Part[$CellContext`newPathEntries, 2]]; 
             Part[$CellContext`newPathEntries, 3] = $CellContext`rotate90[
                Part[$CellContext`newPathEntries, 3]]; 
             Part[$CellContext`newPathEntries, 4] = 
              Map[$CellContext`rotate90inplace, 
                Part[$CellContext`newPathEntries, 4]]; 
             Part[$CellContext`newPathEntries, 5] = Map[$CellContext`rotate90, 
                Part[$CellContext`newPathEntries, 5]]; 
             Part[$CellContext`newPathEntries, 6] = Map[$CellContext`rotate90, 
                Part[$CellContext`newPathEntries, 6]]]; 
           Return[$CellContext`newPathEntries]]], \
$CellContext`wallFrictionMoveUp[
         Pattern[$CellContext`r1in, 
          Blank[]], 
         Pattern[$CellContext`r2in, 
          Blank[]], 
         Pattern[$CellContext`g1in, 
          Blank[]], 
         Pattern[$CellContext`g2in, 
          Blank[]], 
         Pattern[$CellContext`moves, 
          Blank[]], 
         Pattern[$CellContext`pm1, 
          Blank[]], 
         Pattern[$CellContext`pm2, 
          Blank[]], 
         Pattern[$CellContext`\[Epsilon], 
          Blank[]]] := 
       Module[{$CellContext`r1, $CellContext`r2, $CellContext`g1, \
$CellContext`g2, $CellContext`\[CapitalDelta]gx, \
$CellContext`\[CapitalDelta]gy, $CellContext`m1, $CellContext`m2, \
$CellContext`\[CapitalDelta]tgx, $CellContext`\[CapitalDelta]tgy, \
$CellContext`\[CapitalDelta]ey, $CellContext`\[CapitalDelta]ex, \
$CellContext`L = 
          1, $CellContext`\[CapitalDelta]r, $CellContext`path1 = \
$CellContext`pm1, $CellContext`path2 = $CellContext`pm2, $CellContext`path = \
$CellContext`moves, $CellContext`isMirrored = False, $CellContext`isFlipped = 
          False}, If[
          Part[$CellContext`r1in, 2] < Part[$CellContext`r2in, 2], 
           If[
           Part[$CellContext`r1in, 1] > 
            Part[$CellContext`r2in, 
              1], {$CellContext`r1, $CellContext`r2, $CellContext`g1, \
$CellContext`g2} = {$CellContext`r2in, $CellContext`r1in, $CellContext`g2in, \
$CellContext`g1in}; $CellContext`isFlipped = 
             True, {$CellContext`r1, $CellContext`r2, $CellContext`g1, \
$CellContext`g2} = 
             Map[$CellContext`mirror, {$CellContext`r2in, $CellContext`r1in, \
$CellContext`g2in, $CellContext`g1in}]; $CellContext`path = 
             Map[$CellContext`mirrorInplace, $CellContext`moves]; \
$CellContext`isFlipped = True; $CellContext`isMirrored = True], 
           If[Part[$CellContext`r1in, 1] > 
             Part[$CellContext`r2in, 
               1], {$CellContext`r1, $CellContext`r2, $CellContext`g1, \
$CellContext`g2} = 
              Map[$CellContext`mirror, {$CellContext`r1in, $CellContext`r2in, \
$CellContext`g1in, $CellContext`g2in}]; $CellContext`path = 
              Map[$CellContext`mirrorInplace, $CellContext`moves]; \
$CellContext`isMirrored = 
              True, {$CellContext`r1, $CellContext`r2, $CellContext`g1, \
$CellContext`g2} = {$CellContext`r1in, $CellContext`r2in, $CellContext`g1in, \
$CellContext`g2in}]; 
           Null]; {$CellContext`\[CapitalDelta]gx, $CellContext`\
\[CapitalDelta]gy} = $CellContext`g2 - $CellContext`g1; 
         If[Part[$CellContext`r2, 2] == 1, 
           
           Return[{Infinity, $CellContext`r1, $CellContext`r2, \
$CellContext`path, $CellContext`path1, $CellContext`path2, False}]]; If[
           And[
           Part[$CellContext`r2, 1] - Part[$CellContext`r1, 1] - 
             1 <= $CellContext`\[CapitalDelta]gx <= 1, 
            Part[$CellContext`r2, 2] - 
             Part[$CellContext`r1, 2] <= $CellContext`\[CapitalDelta]gy <= 
            0], $CellContext`m1 = {((1 - Part[$CellContext`r1, 2])/(2 - 
               Part[$CellContext`g1, 2] - Part[$CellContext`r1, 2])) (
               Part[$CellContext`g1, 1] - Part[$CellContext`r1, 1]), 1 - 
              Part[$CellContext`r1, 2]}; 
           AddTo[$CellContext`r1, $CellContext`m1]; 
           AddTo[$CellContext`r2, $CellContext`m1]; 
           If[Part[$CellContext`r2, 1] > 1, 
             SubtractFrom[$CellContext`r1, $CellContext`m1]; 
             SubtractFrom[$CellContext`r2, $CellContext`m1]; $CellContext`m1 = \
{1 - Part[$CellContext`r2, 1], 1 - Part[$CellContext`r1, 2]}; 
             AddTo[$CellContext`r1, $CellContext`m1]; 
             AddTo[$CellContext`r2, $CellContext`m1]]; 
           If[Part[$CellContext`r2, 1] < 0, 
             SubtractFrom[$CellContext`r1, $CellContext`m1]; 
             SubtractFrom[$CellContext`r2, $CellContext`m1]; $CellContext`m1 = \
{-Part[$CellContext`r2, 1], 1 - Part[$CellContext`r1, 2]}; 
             AddTo[$CellContext`r1, $CellContext`m1]; 
             AddTo[$CellContext`r2, $CellContext`m1]]; $CellContext`m2 = \
{$CellContext`\[CapitalDelta]gx - (Part[$CellContext`r2, 1] - 
              Part[$CellContext`r1, 1]), $CellContext`\[CapitalDelta]gy - (
              Part[$CellContext`r2, 2] - Part[$CellContext`r1, 2])}; 
           AddTo[$CellContext`r2, $CellContext`m2]; 
           If[Part[$CellContext`r2, 1] >= 1, 
              SubtractFrom[$CellContext`r1, $CellContext`m1]; 
              SubtractFrom[$CellContext`r2, $CellContext`m2]; 
              SubtractFrom[$CellContext`r2, $CellContext`m1]; $CellContext`m1 = \
{(1 - $CellContext`\[CapitalDelta]gx) - Part[$CellContext`r1, 1], 1 - 
                 Part[$CellContext`r1, 2]}; 
              AddTo[$CellContext`r1, $CellContext`m1]; 
              AddTo[$CellContext`r2, $CellContext`m1]; $CellContext`m2 = \
{$CellContext`\[CapitalDelta]gx - (Part[$CellContext`r2, 1] - 
                 Part[$CellContext`r1, 1]), $CellContext`\[CapitalDelta]gy - (
                 Part[$CellContext`r2, 2] - Part[$CellContext`r1, 2])}; 
              AddTo[$CellContext`r2, $CellContext`m2]; Null] 
            If[Part[$CellContext`r2, 1] <= 0, 
              SubtractFrom[$CellContext`r1, $CellContext`m1]; 
              SubtractFrom[$CellContext`r2, $CellContext`m2]; 
              SubtractFrom[$CellContext`r2, $CellContext`m1]; $CellContext`m1 = \
{$CellContext`\[CapitalDelta]gx - Part[$CellContext`r1, 1], 1 - 
                 Part[$CellContext`r1, 2]}; 
              AddTo[$CellContext`r1, $CellContext`m1]; 
              AddTo[$CellContext`r2, $CellContext`m1]; $CellContext`m2 = \
{$CellContext`\[CapitalDelta]gx - (Part[$CellContext`r2, 1] - 
                 Part[$CellContext`r1, 1]), $CellContext`\[CapitalDelta]gy - (
                 Part[$CellContext`r2, 2] - Part[$CellContext`r1, 2])}; 
              AddTo[$CellContext`r2, $CellContext`m2]]; Null, 
           If[Part[$CellContext`r2, 1] - Part[$CellContext`r1, 1] - 
              1 > $CellContext`\[CapitalDelta]gx, \
$CellContext`\[CapitalDelta]tgx = 
             Part[$CellContext`r2, 1] - Part[$CellContext`r1, 1] - 
              1, $CellContext`\[CapitalDelta]tgx = $CellContext`\
\[CapitalDelta]gx]; 
           If[$CellContext`\[CapitalDelta]gy > 
             0, $CellContext`\[CapitalDelta]tgy = 
             0, $CellContext`\[CapitalDelta]tgy = \
$CellContext`\[CapitalDelta]gy]; 
           If[$CellContext`\[CapitalDelta]gy < 
             Part[$CellContext`r2, 2] - 
              Part[$CellContext`r1, 2], $CellContext`\[CapitalDelta]tgy = 
             Part[$CellContext`r2, 2] - 
              Part[$CellContext`r1, 2]]; $CellContext`m1 = {
             0, 1 - Part[$CellContext`r1, 2]}; 
           AddTo[$CellContext`r1, $CellContext`m1]; 
           AddTo[$CellContext`r2, $CellContext`m1]; 
           If[Part[$CellContext`r2, 1] > 1, 
             SubtractFrom[$CellContext`r1, $CellContext`m1]; 
             SubtractFrom[$CellContext`r2, $CellContext`m1]; $CellContext`m1 = \
{1 - Part[$CellContext`r2, 1], 1 - Part[$CellContext`r1, 2]}; 
             AddTo[$CellContext`r1, $CellContext`m1]; 
             AddTo[$CellContext`r2, $CellContext`m1]]; 
           If[Part[$CellContext`r2, 1] < 0, 
             SubtractFrom[$CellContext`r1, $CellContext`m1]; 
             SubtractFrom[$CellContext`r2, $CellContext`m1]; $CellContext`m1 = \
{-Part[$CellContext`r2, 1], 1 - Part[$CellContext`r1, 2]}; 
             AddTo[$CellContext`r1, $CellContext`m1]; 
             AddTo[$CellContext`r2, $CellContext`m1]]; $CellContext`m2 = \
{$CellContext`\[CapitalDelta]tgx - (Part[$CellContext`r2, 1] - 
              Part[$CellContext`r1, 1]), $CellContext`\[CapitalDelta]tgy - (
              Part[$CellContext`r2, 2] - Part[$CellContext`r1, 2])}; 
           AddTo[$CellContext`r2, $CellContext`m2]; 
           If[Part[$CellContext`r2, 1] > 1, 
             SubtractFrom[$CellContext`r1, $CellContext`m1]; 
             SubtractFrom[$CellContext`r2, $CellContext`m2]; 
             
             SubtractFrom[$CellContext`r2, $CellContext`m1]; $CellContext`m1 = \
{-Min[
                  
                  Abs[(1 - $CellContext`\[CapitalDelta]tgx) - 
                   Part[$CellContext`r1, 1]], 
                  Part[$CellContext`r1, 1]], 1 - Part[$CellContext`r1, 2]}; 
             AddTo[$CellContext`r1, $CellContext`m1]; 
             AddTo[$CellContext`r2, $CellContext`m1]; $CellContext`m2 = {
                
                Min[$CellContext`\[CapitalDelta]tgx - (
                 Part[$CellContext`r2, 1] - Part[$CellContext`r1, 1]), 1 - 
                 Part[$CellContext`r2, 
                  2]], $CellContext`\[CapitalDelta]tgy - (
                Part[$CellContext`r2, 2] - Part[$CellContext`r1, 2])}; 
             AddTo[$CellContext`r2, $CellContext`m2]]; 
           If[Part[$CellContext`r2, 1] < 0, 
             SubtractFrom[$CellContext`r1, $CellContext`m1]; 
             SubtractFrom[$CellContext`r2, $CellContext`m2]; 
             SubtractFrom[$CellContext`r2, $CellContext`m1]; $CellContext`m1 = {
                Min[
                 
                 Abs[$CellContext`\[CapitalDelta]tgx - 
                  Part[$CellContext`r1, 1]], 
                 Abs[1 - Part[$CellContext`r2, 1]]], 1 - 
                Part[$CellContext`r1, 2]}; 
             AddTo[$CellContext`r1, $CellContext`m1]; 
             AddTo[$CellContext`r2, $CellContext`m1]; $CellContext`m2 = {
                
                Max[$CellContext`\[CapitalDelta]tgx - (
                 Part[$CellContext`r2, 1] - Part[$CellContext`r1, 1]), -
                 Part[$CellContext`r2, 
                   1]], $CellContext`\[CapitalDelta]tgy - (
                Part[$CellContext`r2, 2] - Part[$CellContext`r1, 2])}; 
             AddTo[$CellContext`r2, $CellContext`m2]]; Null]; 
         AppendTo[$CellContext`path, $CellContext`m1]; 
         SubtractFrom[$CellContext`r2, $CellContext`m2]; 
         If[$CellContext`isMirrored, 
           If[$CellContext`isFlipped, AppendTo[$CellContext`path1, 
              $CellContext`mirror[$CellContext`r2]]; 
            AppendTo[$CellContext`path2, 
              $CellContext`mirror[$CellContext`r1]], 
            AppendTo[$CellContext`path1, 
              $CellContext`mirror[$CellContext`r1]]; 
            AppendTo[$CellContext`path2, 
              $CellContext`mirror[$CellContext`r2]]], 
           If[$CellContext`isFlipped, 
            AppendTo[$CellContext`path1, $CellContext`r2]; 
            AppendTo[$CellContext`path2, $CellContext`r1], 
            AppendTo[$CellContext`path1, $CellContext`r1]; 
            AppendTo[$CellContext`path2, $CellContext`r2]]]; 
         AddTo[$CellContext`r2, $CellContext`m2]; 
         AppendTo[$CellContext`path, $CellContext`m2]; 
         If[$CellContext`isMirrored, $CellContext`path = 
            Map[$CellContext`mirrorInplace, $CellContext`path]; \
{$CellContext`r1, $CellContext`r2} = 
            Map[$CellContext`mirror, {$CellContext`r1, $CellContext`r2}]; 
           Null]; If[$CellContext`isFlipped, 
           AppendTo[$CellContext`path1, $CellContext`r2]; 
           AppendTo[$CellContext`path2, $CellContext`r1]; Return[{
              
              If[$CellContext`m2 == {0, 0}, 
               Infinity, $CellContext`distanceMoved[$CellContext`path] + \
$CellContext`admissibleHeuristic[$CellContext`r2, $CellContext`r1, \
$CellContext`g2, $CellContext`g1]], $CellContext`r2, $CellContext`r1, \
$CellContext`path, $CellContext`path1, $CellContext`path2, False}], 
           AppendTo[$CellContext`path1, $CellContext`r1]; 
           AppendTo[$CellContext`path2, $CellContext`r2]; Return[{
              
              If[$CellContext`m2 == {0, 0}, 
               Infinity, $CellContext`distanceMoved[$CellContext`path] + \
$CellContext`admissibleHeuristic[$CellContext`r1, $CellContext`r2, \
$CellContext`g1, $CellContext`g2]], $CellContext`r1, $CellContext`r2, \
$CellContext`path, $CellContext`path1, $CellContext`path2, 
              False}]]], $CellContext`mirror[
         Pattern[$CellContext`r, 
          Blank[]]] := {1 - Part[$CellContext`r, 1], 
         Part[$CellContext`r, 2]}, $CellContext`mirrorInplace[
         Pattern[$CellContext`r, 
          Blank[]]] := {-Part[$CellContext`r, 1], 
         Part[$CellContext`r, 2]}, $CellContext`rotate180[
         Pattern[$CellContext`r, 
          Blank[]]] := {
        1 - Part[$CellContext`r, 1], 1 - 
         Part[$CellContext`r, 2]}, $CellContext`rotate180inplace[
         Pattern[$CellContext`r, 
          Blank[]]] := {-Part[$CellContext`r, 1], -
         Part[$CellContext`r, 2]}, $CellContext`rotate90[
         Pattern[$CellContext`r, 
          Blank[]]] := {1 - Part[$CellContext`r, 2], 
         Part[$CellContext`r, 1]}, $CellContext`rotate90inplace[
         Pattern[$CellContext`r, 
          Blank[]]] := {
         Part[$CellContext`r, 2], -
         Part[$CellContext`r, 1]}, $CellContext`rotate270[
         Pattern[$CellContext`r, 
          Blank[]]] := {
         Part[$CellContext`r, 2], 1 - 
         Part[$CellContext`r, 1]}, $CellContext`rotate270inplace[
         Pattern[$CellContext`r, 
          Blank[]]] := {-Part[$CellContext`r, 2], 
         Part[$CellContext`r, 1]}}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.696613921497096*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\

Contour Plot\
\>", "Section",
 CellChangeTimes->{{3.696608750471386*^9, 3.696608792071826*^9}, {
  3.696609144983279*^9, 3.696609149550158*^9}}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{{3.6966091514137278`*^9, 3.696609153344668*^9}, {
  3.696609247462015*^9, 3.696609247894002*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"s1", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "/", "4"}], ",", 
       RowBox[{"4", "/", "5"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s2", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"3", "/", "4"}], ",", 
       RowBox[{"1", "/", "5"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"g1", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "/", "2"}], ",", 
       RowBox[{"2", "/", "3"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Epsilon]", " ", "=", " ", "0.001"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"distanceVals", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", "y", ",", 
           RowBox[{"distanceMoved", "[", 
            RowBox[{"First", "@", 
             RowBox[{"optimal2robotPath", "[", 
              RowBox[{"s1", ",", "s2", ",", " ", "g1", ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", "y"}], "}"}], ",", "\[Epsilon]"}], "]"}]}], 
            "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "\[Epsilon]", ",", 
           RowBox[{"1", "-", "\[Epsilon]"}], ",", "0.01"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", "\[Epsilon]", ",", 
           RowBox[{"1", "-", "\[Epsilon]"}], ",", "0.01"}], "}"}]}], "]"}], 
       ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.696609500780052*^9, 3.6966095250952597`*^9}, {
  3.696609581523547*^9, 3.696609612794346*^9}, {3.696609645689085*^9, 
  3.696609650648962*^9}, {3.696964185217176*^9, 3.6969641866081047`*^9}, {
  3.696964317410137*^9, 3.696964319360435*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListContourPlot", "[", 
  RowBox[{"distanceVals", ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"InterpolationOrder", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6966093107946453`*^9, 3.696609317773464*^9}, 
   3.6966093480580883`*^9, {3.6966094100029707`*^9, 3.6966094142413683`*^9}, {
   3.6966094794385977`*^9, 3.696609480772698*^9}, {3.6966095272742577`*^9, 
   3.696609580279361*^9}, 3.696609632124337*^9, {3.696609731433222*^9, 
   3.696609772788293*^9}, 3.696964173838447*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1:eJyVmbFrU2EUxYuL7WTawUFcRAg4Sd3EoZOjILqIY9G12WycRAQbBPFPENPJ
1FEcRXARBykqSQWlSB3UhII4uCjYynfE93s9ntcll/Puvecm7zv3e/d7ObbY
uXD1wNTU1Kmdj137pT0//ejoYCHZlcPvXv24+Dz6vxY8+Pb63GJrvebfhl/x
rUunH7+4Nqzl0z8uePnp/SMnP7y3+fJvFdyZu/Xs5YOPtXz6ld8/++T7r7ef
ol942N39pZ+jX/V3Pi5fOTOOfuK0DmndhN31tN6Jr1es1s+tt9NH4tN1rrfD
rJ/4hKkv4aS/xHe7YOmJ+nJ6U37ik5/6c5j1Ep8w9Z4w8x2f1sfpP/UP+RhP
fmLqNPWF03nP6NlZ8rFPqFt33el7JcTJPiw26VnY8Tg+Yadnh5nv+ISdnp2+
me/4hJOehVkv8Qk7PTvMfMe3VvDBhv3AeuRjPPmJ3XM+zQXj9t77bNM+2G7/
/znhdOZ07fow8c0WPBv0LMw6iU+2G/RM3DI85DtU8FLQM7HqJT75V4OeiVUv
8QmPjJ4d7iPf8c0VPNOwH1iPfIwnP7GbS9g/aa5J+z6xm4vcvp50755Dia8L
nSWbniPkE3bXHU5xsqq/ZPTs9E0ex6fr1K/DrJf4hEdGzw4z3/FdL9jpn5j1
yNcNfKzn5nKnfzfX9xrOPeRnffK5fTfhFeSTb4B9ttVQ92mOcrpeNnp2VvX4
/cgnf8fo2em7a+LIJ38/6FmY9RKf8DDomXgV+Y5PdTXPsT/YD6y3Xz76eU5N
52LFj9t7nzOdnom3kJ/OrdQz+4P+XjgnKJ77MPuD+mb9xEcdOt2751Dio66o
Z6fvZdMn5JM/6VmY9RKfrNOzw33DQz5hp39i1tsvH/3KS/3D9yqb5j1L03Ow
+FnfnWvXGs797j2SO7e6ucPhdI52c03a990clvic7hx2c5Tjo66Sdc8Rxyfs
rjuc4mQ3ip0x+neYPE356HfvJdU/1H96z9/0PdAm8smveJ5D3bmXfuU7PuW7
udth1uf3S3N5mntYj9+Pc4zbd5O+3ZxEPqc7h1kv8XGfb2pTn4ygc6d/YtbZ
Lx9t+h+A+nRY+dQv9cf8dM50/ZDmaPFxfd16k8+tn8tP60G+ZN16/vxzI87/
/X9DWPfT+TXPunjNvy5e86SL15zk4vVcc/HqSxc/jd/P+Op5Z7Jw98S/81cd
36jMU3V8rzIP1fHxyjxTx/OVebuOb1bmizq+U5kH6vhN+f3CM/j9zk9dVOfU
SdQV43u4b4ynjhi/hvvKeOqM8XO474ynDrtYB+YznjrtYJ3Ix3jqeBXrSD7G
j6DzDawr+RjPvqFOyJfidZ22+v0n9vpv3sLsLQ==
     "], {{{
        EdgeForm[], 
        RGBColor[0.148, 0.33, 0.54], 
        GraphicsGroupBox[{
          PolygonBox[{{507, 462, 463, 464, 506}}]}]}, {
        EdgeForm[], 
        RGBColor[
        0.25221259174808086`, 0.38789588430448935`, 0.6375959192561392], 
        GraphicsGroupBox[{
          
          PolygonBox[{{554, 406, 407, 408, 553}, {561, 505, 460, 461, 557}, {
           509, 465, 466, 467, 508}}], 
          PolygonBox[{{355, 356, 357, 358, 359, 360}, {361, 362, 363, 364, 
           365, 366}, {301, 302, 303, 304, 305, 306}, {415, 416, 417, 418, 
           419, 420}, {409, 410, 411, 412, 413, 414}}]}]}, {
        EdgeForm[], 
        RGBColor[
        0.4233207485561436, 0.45247694038714315`, 0.5702203906251424], 
        GraphicsGroupBox[{
          
          PolygonBox[{{515, 474, 475, 476, 514}, {511, 468, 469, 470, 510}, {
           550, 352, 353, 354, 549}, {513, 471, 472, 473, 512}}], 
          
          PolygonBox[{{253, 254, 255, 256, 257, 258}, {367, 368, 369, 370, 
           371, 372}, {307, 308, 309, 310, 311, 312}, {421, 422, 423, 424, 
           425, 426}, {313, 314, 315, 316, 317, 318}, {247, 248, 249, 250, 
           251, 252}, {427, 428, 429, 430, 431, 432}}]}]}, {
        EdgeForm[], 
        RGBColor[0.599702841488679, 0.5144642573921875, 0.4665325149076136], 
        GraphicsGroupBox[{
          PolygonBox[{{517, 477, 478, 479, 516}, {546, 298, 299, 300, 545}}], 
          
          PolygonBox[CompressedData["
1:eJwNzUtaAWAAheE/iSj20EooXQ1bQgtgJHS/moRsJaVUJtJFVKoVeQfv6Hue
c5Z2ituFSAghRYybmRDa3HJHh3v62gsDXnnjnYyWZZkVcqySIMkCi6RIs8Y6
G2yyRZ4Su5SpUGWPU84454JLanz7/mHCL3/8M6tFmSNGnHke6PLIE8/02OeA
Q4445oQPW0M+GTHmiyvqNGhyTYspAnIodw==
           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.7760849344212143, 0.5764515743972318, 0.3628446391900849], 
        
        GraphicsGroupBox[{
          
          PolygonBox[{{520, 483, 484, 485, 521}, {542, 244, 245, 246, 541}, {
           534, 136, 137, 138, 533}, {519, 480, 481, 482, 518}}], 
          PolygonBox[CompressedData["
1:eJwNzDVSA1AARdEPBS0QnI71oMMMLoHglgCbQBskuLvvAN0C7roQTnGqO+8V
xRKV8dQQQoQ0ttlhlz32OWCKaWaYJckchxxxzAmnnLHKGutssMkWIykhjDLG
OBNM8qy98Mob73yQrmWQSYQssqnSqqmhljrqaaCRJpqJ0kKxTQmllFFOBTnk
kkc+BRRyzgWXXHHNDZ++vvjmh1/+GCBOgkGGGGaeBRZZYpkVWonRRjsddNJF
Nz300kc/t9xxzwOPPPEPiXg6MQ==
           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.9083813142737619, 0.6409532856844048, 0.315982074248662], 
        GraphicsGroupBox[{
          PolygonBox[{{558, 486, 522, 562}}], 
          
          PolygonBox[{{556, 458, 459, 457, 555}, {526, 28, 29, 30, 525}, {538,
            190, 191, 192, 537}}], 
          
          PolygonBox[{{181, 182, 183, 184, 185, 186}, {283, 284, 285, 286, 
           287, 288}, {43, 44, 45, 46, 47, 48}, {31, 32, 33, 34, 35, 36}, {37,
            38, 39, 40, 41, 42}, {175, 176, 177, 178, 179, 180}, {235, 236, 
           237, 238, 239, 240}, {337, 338, 339, 340, 341, 342}, {343, 344, 
           345, 346, 347, 348}, {397, 398, 399, 400, 401, 402}, {115, 116, 
           117, 118, 119, 120}, {451, 452, 453, 454, 455, 456}}]}]}, {
        EdgeForm[], 
        RGBColor[0.936557367457873, 0.7113934186446825, 0.40332783911940634`], 
        GraphicsGroupBox[{
          PolygonBox[{{523, 1, 487, 559}}], 
          
          PolygonBox[{{530, 82, 83, 84, 529}, {501, 22, 20, 21, 500}, {491, 7,
            5, 6, 490}, {548, 350, 351, 349, 547}, {489, 4, 2, 3, 488}, {552, 
           404, 405, 403, 551}, {493, 10, 8, 9, 492}, {531, 133, 134, 135, 
           532}, {540, 242, 243, 241, 539}, {544, 296, 297, 295, 543}, {503, 
           25, 23, 24, 502}}], 
          
          PolygonBox[{{229, 230, 231, 232, 233, 234}, {73, 74, 75, 76, 77, 
           78}, {289, 290, 291, 292, 293, 294}, {67, 68, 69, 70, 71, 72}, {55,
            56, 57, 58, 59, 60}, {49, 50, 51, 52, 53, 54}, {121, 122, 123, 
           124, 125, 126}, {127, 128, 129, 130, 131, 132}}]}]}, {
        EdgeForm[], 
        RGBColor[0.9647334206419841, 0.7818335516049603, 0.4906736039901507], 
        
        GraphicsGroupBox[{
          PolygonBox[{{535, 187, 188, 189, 536}, {495, 13, 11, 12, 494}}], 
          PolygonBox[{{61, 62, 63, 64, 65, 66}}]}]}, {}, {
        EdgeForm[], 
        RGBColor[1., 0.95, 0.75], 
        GraphicsGroupBox[{
          
          PolygonBox[{{560, 504, 26, 27, 524}, {499, 19, 17, 18, 498}, {497, 
           16, 14, 15, 496}, {527, 79, 80, 81, 528}}]}]}}}], {
    DisplayFunction -> Identity, AspectRatio -> 1, DisplayFunction :> 
     Identity, Frame -> True, FrameLabel -> {None, None}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {"DefaultBoundaryStyle" -> Automatic}, 
     PlotRange -> {{0.001, 0.901}, {0.001, 0.901}}, PlotRangeClipping -> True,
      PlotRangePadding -> {
       Scaled[0.02], 
       Scaled[0.02]}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{
             
             RasterBox[{{{0.148, 0.33, 0.54}}, {{0.25221259174808086`, 
              0.38789588430448935`, 0.6375959192561392}}, {{
              0.4233207485561436, 0.45247694038714315`, 
              0.5702203906251424}}, {{0.599702841488679, 0.5144642573921875, 
              0.4665325149076136}}, {{0.7760849344212143, 0.5764515743972318, 
              0.3628446391900849}}, {{0.9083813142737619, 0.6409532856844048, 
              0.315982074248662}}, {{0.936557367457873, 0.7113934186446825, 
              0.40332783911940634`}}, {{0.9647334206419841, 
              0.7818335516049602, 0.4906736039901506}}, {{0.9929094738260952, 
              0.852273684565238, 0.5780193688608951}}, {{1., 0.95, 
              0.75}}}, {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}}]]}, {
              CapForm[None], {{
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -89.99999999999997}, {
                    Rational[
                    15, 2], -89.99999999999997}}, {{-7.5, \
-89.99999999999997}, {7.5, -89.99999999999997}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -67.49999999999997}, {
                    Rational[
                    15, 2], -67.49999999999997}}, {{-7.5, \
-67.49999999999997}, {7.5, -67.49999999999997}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -44.99999999999997}, {
                    Rational[
                    15, 2], -44.99999999999997}}, {{-7.5, \
-44.99999999999997}, {7.5, -44.99999999999997}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -22.49999999999997}, {
                    Rational[
                    15, 2], -22.49999999999997}}, {{-7.5, \
-22.49999999999997}, {7.5, -22.49999999999997}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 2.842170943040401*^-14}, {
                    Rational[15, 2], 2.842170943040401*^-14}}, {{-7.5, 
                  2.842170943040401*^-14}, {7.5, 2.842170943040401*^-14}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 22.50000000000003}, {
                    Rational[15, 2], 22.50000000000003}}, {{-7.5, 
                  22.50000000000003}, {7.5, 22.50000000000003}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 45.00000000000003}, {
                    Rational[15, 2], 45.00000000000003}}, {{-7.5, 
                  45.00000000000003}, {7.5, 45.00000000000003}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 67.50000000000003}, {
                    Rational[15, 2], 67.50000000000003}}, {{-7.5, 
                  67.50000000000003}, {7.5, 67.50000000000003}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 90.}, {
                    Rational[15, 2], 90.}}, {{-7.5, 90.}, {7.5, 90.}}]]}}}, {
             Antialiasing -> False, 
              StyleBox[
               
               LineBox[{{7.499999999999999, -112.49999999999997`}, {
                7.499999999999999, 112.49999999999999`}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.499999999999999, -89.99999999999996}, 
                    
                    Offset[{4., 0}, {
                    7.499999999999999, -89.99999999999996}]}, {{
                    7.499999999999999, -44.99999999999997}, 
                    
                    Offset[{4., 0}, {
                    7.499999999999999, -44.99999999999997}]}, {{
                    7.499999999999999, 5.1251942175642544`*^-14}, 
                    
                    Offset[{4., 0}, {7.499999999999999, 
                    5.1251942175642544`*^-14}]}, {{7.499999999999999, 
                    45.00000000000004}, 
                    
                    Offset[{4., 0}, {7.499999999999999, 
                    45.00000000000004}]}, {{7.499999999999999, 
                    90.00000000000001}, 
                    
                    Offset[{4., 0}, {7.499999999999999, 
                    90.00000000000001}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["0.5`", TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.499999999999999, -89.99999999999996}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    
                    Offset[{7., 0.}, {
                    7.499999999999999, -44.99999999999997}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["1.5`", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.499999999999999, 
                    5.1251942175642544`*^-14}], {-1, 0.}, Automatic, {1, 0}], 
                    
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.499999999999999, 
                    45.00000000000004}], {-1, 0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["2.5`", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.499999999999999, 
                    90.00000000000001}], {-1, 0.}, Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"M10DefaultDensityGradient\"", ",", "#1"}], 
                   "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.44153656917270295`", ",", "2.6597322686060334`"}],
                  "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"0.5`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "GrayLevel[0]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.75`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "GrayLevel[0]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"1.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "GrayLevel[0]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"1.25`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "GrayLevel[0]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"1.5`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "GrayLevel[0]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"1.75`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "GrayLevel[0]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"2.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "GrayLevel[0]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"2.25`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "GrayLevel[0]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"2.5`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "\[InvisibleSpace]"}], 
                    "GrayLevel[0]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.696609638141736*^9, {3.696609715216153*^9, 3.696609719383151*^9}, {
   3.6966097516466093`*^9, 3.696609773762312*^9}, 3.696614015111457*^9, {
   3.696964177933792*^9, 3.6969641972846212`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"optimal2robotPath", "[", 
  RowBox[{
  "s1_", ",", "s2_", ",", " ", "g1_", ",", "g2_", ",", "\[Epsilon]_"}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"s1", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "/", "4"}], ",", 
       RowBox[{"4", "/", "5"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s2", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"3", "/", "4"}], ",", 
       RowBox[{"1", "/", "5"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"g1", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "/", "2"}], ",", 
       RowBox[{"2", "/", "3"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Epsilon]", " ", "=", " ", "0.001"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numMoves", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", "y", ",", 
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"First", "@", 
              RowBox[{"optimal2robotPath", "[", 
               RowBox[{"s1", ",", "s2", ",", " ", "g1", ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "y"}], "}"}], ",", "\[Epsilon]"}], "]"}]}],
              "]"}], "-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "\[Epsilon]", ",", 
           RowBox[{"1", "-", "\[Epsilon]"}], ",", "0.01"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", "\[Epsilon]", ",", 
           RowBox[{"1", "-", "\[Epsilon]"}], ",", "0.01"}], "}"}]}], "]"}], 
       ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.696609500780052*^9, 3.6966095250952597`*^9}, {
  3.696609581523547*^9, 3.696609612794346*^9}, {3.696609645689085*^9, 
  3.696609650648962*^9}, {3.696609834727414*^9, 3.696609875719789*^9}, {
  3.6966099864321747`*^9, 3.696609994975519*^9}, {3.696875704081355*^9, 
  3.696875706658462*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListContourPlot", "[", 
  RowBox[{"numMoves", ",", 
   RowBox[{"InterpolationOrder", "\[Rule]", "0"}], ",", " ", 
   RowBox[{"Contours", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}], 
     "}"}]}], ",", 
   RowBox[{"ColorFunction", "\[Rule]", "\"\<Rainbow\>\""}]}], " ", 
  "]"}]], "Input",
 CellChangeTimes->{{3.696609965130673*^9, 3.696609968774691*^9}, {
  3.696610037023973*^9, 3.696610070936337*^9}, {3.6968756132783337`*^9, 
  3.696875627690091*^9}, {3.6968761834019823`*^9, 3.6968761866569366`*^9}, {
  3.696876219504899*^9, 3.69687644391785*^9}, {3.696876478778688*^9, 
  3.696876543737103*^9}, {3.6968765789023457`*^9, 3.6968766154436083`*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJyUvX/Q9Xddnwmxos7sLBVtdQF3YSs/tkmbxJ1uTUCYTmAtEKT+hERnpwU7
JCTYFtsYtbNKu9MVxFbJUkILa+lMZ0fQBTWg1a4mbHcNwrYUQRPUYgUrSbUd
fo0kIbDkybluPNfx4vX0H85cz+f7er0/z3POfedzn3PxvR/7/L/2DX/1goc8
5CHv/tBDHvLA433/84v+xd+86can1uMnefyxD7/72c//4ZP1ew+P92v98ltu
v+EXfvQfneTv1Tr85Pc/54de/R3/9CTvdfqu/vYnfeZP/o+T9Xtj/bvvevyl
X/jjP36S/wOtM//Zf/5lf+Ev/86bT/KsX3lYf8j3Pci/cc8DCz+dedbhB/73
y//YW0/yf6B1+s4t3/SzJ/nj5+Nnz/IPTH/Xf/vzmWcd/vI/9i3/5Z/5qf/r
JP8HWqfvmz7wz/7xv3zMrSd5r//+gV/7Lx/z5pdcc9vJ+n1ap+/c8pvfdpL/
Pa2Tv+h//ZN3/qs/+L9P8l5/6OHf+zuv+ZHf/9tP/X9O1mHW6fu5Z/wXF1z4
v/6/J/nf0zr5z7vwgcJfOsl7/X0HPrf8J99+sg4/87BO3wPT/9z/9Msn+S/5
vuN18nf8qz/4xg/8s3ec5L3+xEP+sZ/51/6R33/nyTrMOn0vPFf4r07y7Id1
8ueW//a/Psl7nX/vB79/vOtk/ez7lNb/ySMv/s2vfNi/OcnDrHP9037w+t+9
78f+zUne63y93nXfA4XvPlnn7/MhrZ9b/vC7T/Lsh3Wu/7Ofmf7SV/3KSR6+
5LBO/lee/fw//rzL3pN5r3/XL/zoZ/6G7znJP+f7jte5/lEP/HO89L0nea/T
94sPLH/lr2aedf69Hph+y+2/epK/U+vkP/+lr7riB6//tZO81+l7wwNP/x+/
42Qd9vrXnSu84yQPs87155afd+dJ3uvk/+EVDzyjd2aedf5+l5377+H7TvJ3
ap38bzzw9F/x65lnnevP/XP87q+f5Lne6497YPkHf+Mkz+vH6w9M/8wzepLn
+l/W+ovPvdx/8yTPfljn73fu6b/h357kn/B9f/T6uX+OR77/JE8/61x/bvkX
3n+S53qvf+o9N37mxPBbJ3mu9/pf+szp5RF/97dO8lzv9X/69Ld+9P73nOa5
3usfu/+Bwn93kud6r/+PDyzf+O9O8jxfXr/5M9Nv/eXTPP1eP3ecevRvn+S5
/m6tf825891vZ97r5/45bt3rzDu3/IgPnPf6A9Ov/vYPzHX4M3+51z/9rXud
vvc+8PR/4QfPe/0J5wo/ONfhB8+ze52+d7z+gRfM+a9/xbkD9u/MdfivPfD0
v/535jp9tz3wz/HR81//0nP/gP9+rsPnfjx49b+f66879J17ud91/utf8MDT
/6Tfnevwgz+v/O5c5+93bvn957/+6XPfbz4014+/33xorh9/Pzr/9Y+f+35z
11w//n5z11yn7zXnvt+c//p/OPf95u65Dj/48+jdc/0nD/wPzn2/Of/1B7/f
/Ie5fvz95j/M9W8/8P9y7vvN+a//6rnvN78314+/3/zeXKfvwe8357/+/537
frPXj7/f/P5cp++vn/t+8/vnvf62c99v9jp8bvnp/3Gu8/w/+P3mP573+s+e
e7nvdfjc0/+k/zTX+fr41nOF/2mum+/X+0T3jUdfz/tMfr+J69b7WauPR78/
Bd8nPpkfj5fxftmB/X7W4suVN5+9f3Zgvz8Gr/fXVh/8PYf3y/z+mt9PO5kf
fVx/z4F5/41/bzPvv3m+9/dJ9cF+vw6u9/vIe3/3q4/+B1IPvH/n9/v8/p7n
e3/wdYfrH/KGP/z6/Vm9vj/LvB/o+d4fzPXwy/X+od8v9PuPzPf+PqE++h+p
9yN5f9HvN3q+9wefvT95YL//WOz53t8n1Qf7/U54vh/q/amPft7f9Puh9f6n
89XH83Oh3g/1+6Ow57sP5nr4JXr/lfdT1/uzJ/tTH/0/f3i/1e/P1vux36l8
9THvoXp/1u/Xwp7vPviCw/Ww3w/m/d/5frH29xH10X/T4f1fv19c7w8/U3n3
vZLrD+z3i4s93/uD7zxcDz9G70/zfvN8/9r7Ux/91x7ej/b71/V+9WOVd981
XH/gN+n9a7+fDXu+9wdz/fG54rPvh/v973w/3ftTH/1+f93vl5udrz7mXaH3
4/3+POz57vuk+mDen/f79ev9fe/vE+qjn/fr6/192PO9P/fx9Xyx3t+/RPxn
9fkAefd9Un3wu/V5AZ8P1OcNzD/Zn/rov+Hw+UF93mD+FeWr7/MP/33w5w3F
nu8+mOthf74Br88/vL+PqI/+v3L4PMOff9TnHc6buZ55/vyj2PO9v0+qDz73
8Ic+T/HnJ/V5jPf3EfXR789n/HmL+Q3KVx/zzi0/rz+fgT3ffZ9UH/wqff7D
5znr8yHv7yPqo//PHz7v8edD/jzI872/459P3/fZnz/0+ZA/T4I93/tzH/z9
h8+T6vOnl2rd+eqD/5Q+f/LnVbDnV99XHq6Hf+nweVV9vnW71h+n/J8Sv/1w
PXz94fMtfx5GP+z53h/M9fDDD5+H+fOz+rzM+evFXA//lD4/8+dtsOd7f/BP
H66Hv0Wft/nzOX8ed4vyPyXmevh+fT7nz/P8+Z3z3yLmetif5/nzP687f3/0
wa/X53/+vNCfDzpv5nr4o4fPC+vzxY9p3fnXi7kefvrh88X6PNKfPzr/UTHX
w6/W55H+/BL2fO8P5nqYzy/r806vO//q6Dt+f64//4Q9f/XB/nx18dcoX32c
j/g81Z+vrs9rVx/r/vy12PNWH+zPexc7X33/1WH+ew6f7/rz3vX58epj/XH6
PNifD9fnzasPvlGfP/vz6Pp8evUxn8+b/fnz+jx79bHuz6eLPW/1wd+hz8P9
+Xh9Xr76OC/y+bc/D1+fr68+1h+hz8v9+Xl9Hr/6YH8+v/hLla8+nh8+j/fn
8+vz/tXHuj+/L/a81QfbF1jsfPUxHz/AvsDyD1bf8fml/YLyFVbf8fmlfYby
G1Yfr9/XH3wF+wvLh1h9x+eX9h3Kn1h9x+eh9ivKt1h9PD/4E/Yplp+x+o7P
L+1flM+x+o7PL+17lP+x+j514L9/8DnsdyxfZPWxbv+j2PNWH3yJfBP7J+Wj
rD5ev3/34JfYN1n+yupj/T3yUeynlO+y+uAnyn+xD1N+zOrj9XvjwXex/7J8
mtXH+jvkx9iXKf9m9cGPlo9jP6d8ndXH/L928G/s4yy/Z/Wxfpt8Hfs75QOt
vuPzy6nvU/w25auPr298IPtByzdafay/Rf6QfaLyk1bf8fnl1D8q/lnlq4/n
5+rwl5b/5D5f736zPSP7SmZfb89oPa6+8o78557r9XWdH5ePZL4sei5TH7x8
JDN57+9y9dFvH2n5Sc5XH/PsM5Wf5Pmrj3X8o/KbzOTd99Xqo/+BV9cf9o+u
+xd/tJ/k+d6f+45fv5/1mfCb7Cd5/upjHR+p/CYz8933JPXR/2Xyj8pP8nzv
Dyb/1APbZyo/yfO9v8vVB5/5T4f88pPIe3/ug5ePdOZHad7qY759pvKTPM99
l6sPPvOfDnn7SGby3t9T1Uf/8pHsO71E+eqDP08+0wXhJ3le9XE9jH9UfpP5
AuU/L/pg+0ivDD/J81cffId8pjvDT/L81Qef+U+HvH0k853KVx9sH+ma8JM8
f/VdemD7TOUneb77Llff8bnjXek3mcl7f5eqj/7lI9l3cr764KfJZ7oi/CTP
W30w/lP5TeYrlKfvv1cf68tHgj3f+3Mfz8cl8pkuDj/J89x3ufrgM//pkH/3
8JOY5/25D14+Euz5qw+2z1R+kudV36MP18P4R+U3mR+lPPwE9bH+7fKPyk/y
fO8PJg/bZyo/yfO9P/gLDtfD+EjlN5k/X3kzffBzho9k3+nHlHcf18Pnlv+Q
zwTbT/I87w/+6OF6GB+p/Cbzh5U303f8899n/aPykzy/+sjDy0cyO3959MHL
RzI7X32wfST7TfaTvl/56oPtI9lvsp/0lcpXH/wd8o+Wn/R25d1HHv5i+UfL
T3L+O8Tk4XMPf8g/st9kP8n5L44++Cr5R8tP+mnl3Uce/rT8o+UnOX+VmDz8
9cNHMjv/aTHXw/aRlp/k/NdHH/xx+UfLT3LeTB7+WvlHy09y/uNi8rB9pOUn
Of+10QcvH8nsfPXxfsrykczMW32sl49UzLzVB5ePVH6S89UHf9XwkWDPW31w
+UjFlypffXD5SOUnOV998PKRYM9bfXD5SMWPU776OE+Xj1R+EvNWH+vLR4I9
b/XB5SMVO199zC8fqfwk5q0+1r9k+Eiw560+vn+Uj1TMvNX3dQcuH6n8JPKr
7+znpeEjwZ63+uDykYqdrz6en/KRyk8iv/pYt39U7Hmr7/g8dOojFTtffcwv
H6n8JPKr7/j80j4S7Hmr7/g8dOojFX9U+erj9Vs+UvlJ5Fcf6/aPij1v9cHl
IxU7X30XHbh8pPKTyK++4/NL+0iw560+uHykYuerj9dv+UjlJzFv9bFu/6jY
81bf8fnl1Ecqdr76mF8+UvlJzFt9rL9z+Eiw562+4/PLqY9U/A7lq4/55SOV
n8S81cf6rcNHgj1v9cHlIxXfpnz18fVdPlL5SeRXH+tvHT4S7HmrDy4fqfgt
ylcf/304X5/J89zn691vrvsi2Vc69mZP76vEvrgeLj/pfPvsBZ3vo/Nme0z1
55cH15+7j0f8o+PzavtJ1eM+GP/JPlL5Sc6buR4uH8nsed6f+2D8o/KbYM9b
ffCLwkcye3714Tc95ej1e+ojmT3P+4Pxm2B8pPKbYM/z/p6kPvofKR+p/CTP
9/5g8rD9o/KTPN/7cx+8fCSz82f7Ux/ry0cyO199PD8XymcqP8nz3AdzPYyP
VH6Tmbz35z54+Uiw58++A9tnMttPYp77YPwmePlI5rP53p/66L9p+Ehm581n
ftOB7R8tZp73B+M3wctHMp/N0/6eoj76rx0+kvmxyrvvzG868JvkM5Wf5Hne
H8z1x+eLd6XfZD6b5/2pj/7lI8Ge7/25j+ejfKRi8u57svpgfKTym8zM8/4u
Ux/9y0eCPd/7O+k78MXyjy4ZfhJ59z1ZffC7h49kPpunvqeoj/4bho9k/hXl
q4959pHsN3mdee57svpg/KPym8zM9/7+nPro/yvyj8pP8nzvDybPfPtH9pu8
Tt77e7L64HNf3p/DRzIz3/t7ivrot4+0/KQ3KF99PB/nlv+Qf2S/yevk3fdk
9cHLRzIz3/t7ivqOf278rH+0/KR/qHz1nf38MXwks/PVBy8fyex89cHLRzK/
VPnqg5ePZH6c8tUHXy//aPlJv6y8+8jD9pGWn+T89dEHLx/J7Hz1wfaRlp90
i/LVB+M/kV9+kvNm8rB9pOUnOX9/9MHLRzI7X32wfaTlJzlffbB9pOUnOV99
MP4T+eUnOW/merh8pGLn2d+fU9/x+3KnPlL5SXcrX33wDw0fCfa81cd/z849
fA4fyUx+9bG+fCQz+dUHLx/J/FXKVx/zl49kJr/6WLd/tJh5qw8uH6nY+epj
fvlI5Scxb/Wxvnwk2PNWH1w+UrHz1XfhgctHKj+JeauPde7XRP5Lgj1v9cHl
I5k9b/Xx/JSPZPa81cf6Fw4fCfa81QeXj1T8BcpXH/PLRyo/ifzqOz4PtY8E
e97qOz6/nPpIxfcrX33MLx+p/CTyq+/4/NI+Eux5q+/4/HLqIxV/XPnqY375
SOUnkV99rN89fCTY81bf8fnl1Ecqvkv56mN++UjlJ5Fffaw/eH5pHwn2vNUH
l49U7Hz1Mb98pPKTmLf6WF8+Eux5qw8uH6nY+epjfvlI5Scxb/Wxvnwk2PNW
H1w+UvE7la8+5pePVH4S81Yf68tHgj1v9cHlIxXfqnz1Mb98pPKTyK8+1peP
BHve6oPLRyp+q/LV9w1H55ftM3me+3y9+814Mef7e+V8fd33aPH59tkrIr88
JufN9pKO/zu3H52/PPrg5SPVPlYfj/aPlp9UPTySh5ePZHb+e6IPXj6S2fnq
g6+Tf2S2n+R89R2/fj/rM90TfpLnrz74zI865O0jme9Rnr5vVR/r9pHKT/J8
789933bg8pGKybvvavXBZ/7TIb/8JPLen/vg5SOd+VGat/qYb/9o+Unk3QeT
h+0fLSbv/X2b+uj/58NHMjtv5nr4ofKZLgg/yfO8P/fBZ/7TIb/8pAuUp++5
6mP9lfKPzDfJd3K++ng+7pDPdGf4SZ7vPpg8jH9UfpOZvPf3beqj/xr5R2b8
JM/3/tzH8/Em+UzlJ3m++2Dyx+eLd6XfZCbv/T1XffS/fvhIZ76U5nl/MNcz
zz7TFeEneZ73B+M3XXVg/KPym8zM8/6+WX3Me8XwkWDP9/7o4/pvPLB9povD
T/I87w/Gb4Lxj8pvMjPP+/s29dG/fKQb5Ds5b+Z65tlnelT4SZ7n/V2tPhj/
qPwmM3nv7xvVx/NvH6n8JM/3/tzH69c+k30kr5N3H/Medrgexj8qv8nMPO/v
ueqjf/lIsOd7f+5jnn2mD4ef5Hnugz9yuB7GPyq/ycw87++56uP5efDnv/aR
YM/3/ujj+rOfP4aPZCbv/bkPtn+02Pnqg+0fLXa++mD7R4udrz7YPtLyk5yv
Pp6f5SOZya8+1u0fLSa/+uDlI5mdrz7YPtLyk5yvPnj5SGbnqw9ePpLZ+eqD
l49kdr764OUjmZ2vPhj/iHz5SZ5XfeRh/KPym8zOM/+56uPr48Fc+0iw53t/
7mP9h8JHKia/+v7Kgc8t/xE+UvlJ5Fcf6/aPij1v9cHlIxU7X33Mxz+yj1R+
EvnVx/rykWDPW30w/hF9i52vPuaXj1R+EvnVx/rykWDPW30w/hF9i52vPr5f
lI9UfhL51cc692sibx8J9rzVx/ePcw9/hI9UzLzVd92By0cqP4n86mP+8pFg
z1t98IOPpz5S8RcqX308P+UjlZ9EfvWxvnwk2PNW3/H55dRHKv6U8tXH/NeH
j1R+EvnVd3x+aR8J9rzVd3x+OfWRip2vPl6/5SOVn0R+9R2fX9pHgj1v9cEP
9pz6SMV3K199vB/098NHKj+J/Opj/dzy5/CRYM9bfTD+EX2Lna8+Xr/4R/aR
yk8iv/pYf+/wkWDPW30w/hF9i9+jfPUxH//IPlL5SeRXH+v2j4o9b/XB+Ef0
LXa++piPf2Qfqfwk8quPdftHxZ63+o7PL6c+UrHz1cfX94Pnl1Mfqfwk8quP
9eUjwZ63+o7PL6c+UvFblK8+/vvw4J9vn8nz3Ofr3W/GW1m+Euzr/XvcuH5x
9fn3wPk+SOSXn+R89ZU3tHjdp+lrDtfbEzrfR+Z5f/aMYP/58pPWdTzeeHhc
PpL5u9VTffz58pHM5FcfvHwks/NmfKrj1++pj1R8nfLwjepjHf+o/Caz89UH
Lx8J9vzVB9s/Wn6S8/CN6oOXj2Qm7/25j9fx8pHM5Fff9x74QvlM5Sd5nvtu
VB/M/ZrKbzIz3/tzH/N/Tv5R+Umev/pYLx+pmPmrD/6LB/+o/CbzQ5Wn7wb1
MX/5SLDne3/u4/m5Qz5T+Ume574b1Qdzv6bym8zM9/6+V33Mf+HwkWDP9/7c
x/PxJvlM5Sd5nvtuVB+Mf1R+k5n53t8N6qPfPlL5SZ7v/bmP5wP/iL6nhZ/k
+e67UX0w/pH9pvKTmO/9fZf66LePVH6S53t/7uP5uFg+0yXhJ3m++25UH4x/
VH6Tmfne3/eqj377SOUneb735z7m2WcqP8nz3Xej+uBfOPhH9puuDibv/d2g
PvrLRzJ7vvfnPubZZ3pY+Eme5z6Y62H8o/KbzMz3/m5QH/3LR7Lv5Hz1Me/D
8pk+En6S57nvRvXB+Ef2m64OZr73d4P66LePVH6S53t/7oOXjwR7/uqDl49k
dr764OUjmZ2vPvj24SOZna8+uHyk4rcrX31w+UjlJzlfffDykWDPW33w8pHM
zlcfjP9EfvlJzpu5Hl4+ktn5+6MPXj6S2fnqg5ePZHa++uDlI5mdrz4Y/4h8
+Umet/pg7tdkv+nq4JuVp+8G9R3//xBPfSSz53t/7mP9h8JHMnve6vv+A59b
/iN8pPKTyK8+1i8dPhLseasP/jvhIxU7X33MLx+p/CTmrT7Wl48Ee97qgx98
PPWRip2vPr4efjl8pPKTyK8+1pePBHve6oO5XxN95Sd53upj/q3hI5WfxLzV
xzr3ayL/iGDPW318/3jBA7E/wkcye97qe/mB3xI+ktnzVh/zl48Ee97qgx/s
OfWRir9A+erj+Xlj+EjlJ5FffcfnofaRYM9bfcfnl1Mfqfh+5auP+eUjlZ9E
fvUdn1/aR4I9b/XBTw8fqdj56mP+q8NHKj+Jeavv+PzSPhLseasPLh+p+C7l
q+87Dlw+UvlJ5Fcf6+8fPhLseasPLh+p2Pnq4/n5O+EjlZ9EfvWxbv+o2PNW
3/H55dRHKna++pj/4J+f+kjlJzFv9bG+fCTY81bf8fnl1Ecqdr76mM/9muwj
lZ/EvNXH+vKRYM9bfXD5SMXOVx9f3w+eZ059pPKTyK8+1u0fFXve6oPLRyp2
vvo4fz2Y2z6T57nP17vf/OyDV3Lf8JVgX4+Xgn9UfpPXz7fPv8etfCT7Ts5X
X933CL+p7st0mfLVZ29oeUyev/rsCdlHqkfnqw+uPzd7zurjcflI8OpxH3yt
fCT7TfaVnK8+Xr/4Rzcevb7bT2K++2Du/wQvHwn2fO/PfXD5SMXOVx/z7R+V
n+R57rtSfXD5SMXkvT/3sf7B8JHKTyK/+uCL5B9dGH6S57nvSvXB3xk+UjHz
vL9nqw/+ufCRyk8i7/2571kHLh/J7Hnuu1J9MD6S/aYbg5nn/T1Lfcy/KXwk
s+d7f+6D7TPZR4I9z31Xqg/GP7LfdGMwee/v69THevlIZs/3/tzH82GfyT4S
7Hnuu1J9x+eLd6XfZCbv/T1LffQvHwn2fO/Pfcx7mnymK8JP8jz3Xak+GP+o
/CYz87y/v6i+s//+DB8J9nzvD+Z65ttnujj8JM/z/q5UH8zvsyu/yUze+3uW
+uj/ruEj2Xd6t/LVx9ezfabykzzPfVeqD8Y/Kr/JTN77e4b66F8+kn0n56uP
eQ+Tz/T54Sd5nvtgfj8ezO+zK7/JzHzv71nqo3/5SPadfkz56mOefSb7SF4n
774r1QfjH5XfZCbv/T1LffR/9fCRYM/3/o5/nnzfZ3/+GD6S+TLlvzr64JcO
H8nsfPXBy0cyf7/y7uP348H2jxZ/pfJm/Cb4+uEjmW9X3kwf/PDhI5lfrLz7
uB5ePpLZ+YdHH7x8JLPz1QfbP1p+kvNm8vBzho9kdv5+MdfDy0cyO/+c6IOX
j2R2vvrg5SOZna8+2D7TYuerDz4Xe/Rvn/hNNwY7Dz9Lfcfvz536SGbP9/7c
B5ePZPa81feXDvz+8JHKTyK/+li/dPhIsOetPrh8pGLnq4/5/D47+0jlJzFv
9bF+7un/HD4S7HmrD+b32dF34+AnKF99fD2Uj1R+EvNWH+vLR4I9b/XB+Ef0
LXa++ph/a/hI5SeRX32s4x+RL/a81QfjH9lHMnve6vvmA5ePZPa81ce6/aNi
z1t98FXhIxU7X308P+UjlZ/EvNV3fH5pHwn2vNV3fB469ZGKP6V89TGf32dn
H6n8JPKr7/j80j4S7Hmr7/j8cuojFTtffbx+y0cqP4l5q+/4/NI+Eux5qw/+
mvCRiu9Wvvqec2B+n519pPKTmLf6WF8+Eux5qw8uH6nY+erj9Vs+UvlJ5Fcf
69yviXz5SZ63+mD8o+PzTfN7la8+5vP77OwjlZ9EfvWxvnwk2PNW3/H55dRH
Kna++phfPlL5SeRXH+vLR4I9b/XB5SMVO199fH2/IHyk8pPIrz7W3zJ8JNjz
Vh9cPlLxW5WvPv77wO/DWz6T57nP17vfjPdRvpLZ18PLR4L/c/vgrx4+ktl5
M35T/d62xZcr/9XRV/c9Wux89dkjIn/jYOer79flBZ3vI/PKc+I6ePlIZh69
P/fxuHwkc/W47/j1+1n/CL+p/KRrla8+ePlI5nuUrz54+Uhm56sPtn+0/CTn
qw8uH6nYefjX1cd6+UjlJzlfffCF8pnsI5k/qHz1wfaPyk/y/NUH/3z4SMXO
m7n+fQe+QD6TfSTY87y/31AfjI9kv+nKYOZ5f7+uPvrLRzJ7vvfnPtg+U/lJ
nld9v3a4HsY/st90ZfAdypu5Hr4mfCSz51cffhNsn6n8JM/z/tx3fL54V/pN
ZuerD/7R4SPZd3LezPXwFfKZnhZ+kud5f+6D8Y/KbzI/TXn6fl19Z//9kX9U
fpLne38web6+7TOVn+T53t9vqA/GRyq/yUze+3u/+uhfPhLs+d6f+5hnn6n8
JM9z32+oD8Y/Kr/JTN77e5/66F8+kn0n56sPfph8pi8IP8nzqg+/CcZHKr/J
/AXKPyz64OUj2Xd6g/LVx/Nhn6n8JM9z32+oD8Y/Kr/JTN77e5/6jn+e/Kx/
ZL8JP8nzvT/3nf3cMXwk8+XKVx+8fCSz89UH22cy2096qfLu43rY/pH9Jq8/
Tnkz18PLRzK/Xfnqg79Y/tHyk65X3n3k4VuGj2R2/ovFXA9fNXwks/O3iLke
to+0/CTnr4o+2D7S8pOcrz54+Uhm56sPXj6S2fnqg5ePZHa++uCbw0cqdt7M
9TA+UvlNZufZ3/vUx/rXDB8J9nzvz31w+UjFT1a++vj7lI9UfhL51cf6pcNH
gj1v9cHlIxU7X32cH8tHKj+JeauP9eUjwZ63+uDykYofr3z18fyUj1R+EvNW
H+vLR4I9b/XB5SMVO1997z1w+UjlJ5FffawvHwn2vNUHl49U7Hz18fotH6n8
JPKrj/XlI8Get/rg8pGKna8+np/ykcpPYt7qOz6/tI8Ee97qOz6/nPpIxfcr
X33MLx+p/CTyq+/4/NI+Eux5qw8uH6nY+erj9Vs+UvlJzFt9x+eX9pFgz1t9
cPlIxXcpX32/duDykcpPYt7qY335SLDnrT64fKRi56uP56d8pPKTyK8+1u0f
FXve6js+v5z6SMXOVx/zy0cqP4n86mN9+Uiw562+4/PLqY9U7Hz1Mb98pPKT
yK8+1m8dPhLseasPLh+p+Dblq+/fHbh8pPKTyK8+1u0fFXve6oPLRyp2vvru
Ojq/bJ/J89zn691vftHBy7CfVOzrue/O8pHM1fci9cH/g/wj+032k8h7f/SR
h5ePZHae/V2nvvq9bYvJe3/uY335SPV77KqP68sbgstP8n2Sboy+F8kLOt9H
8qsPrj8vXtfxeN3R67d9JLN7eOTvc8/hev58+Uhm5nl/16mP/uUjmZ2vPuaV
j1RM3n3Xqg/GPyq/yUze+3Mf8+0fFXv+6rv+wPaPFpN337Xqg5ePZCbv/V2n
PubbR1p+Ennvz33XHNg+0wXhJ3m++5iH3wTjH5XfZGae9+c+5ts/Kvb81cfz
Yf/IfpPXybuPeeTh5SOZyXt/16uP+faZzPaTyHt/7mN9+Uhm8qsPXj6S2fnq
g+0fLT/JeTN5ng/7TIvJe3/Xqo9/P/yj8pvM5L0/9zHP/lH5SZ5ffeRh+0zl
J3m+9+c+GP+o/Caz8/D16mPd/lGx53t/7mOefabykzzPffAjD9fD+EflN5mZ
5/25j+d/+Uiw568+1u0f2W/yOvnqIw/bP1rsPPOvVx/ry0cyO199zLPPVH6S
57nvWvXB+EflN5nJe3/Xq4/nx/5Rsed7f+47+/9RDB/JTH71wfaPFjtffbB9
JrP9JOerD7Z/tNj56oPtHy12vvp4fuwjLT+J/Opj3T7S8pPIrz7YPtLyk5yv
Pnj5SGbnqw9ePpLZ+eqDl49kdr764OUjmZ2vPnj5SGbnqw+2j1R+kuetPhj/
qPwms/Pw9erj62P5SLDne3/uY718pGLmrT7+PuUjlZ9EfvWxvnwk2PNWH4x/
RN9i56vvbxwY/8g+UvlJ5Fcf68tHgj1v9cH4R/QtfoLy1cfzg39kH6n8JPKr
j/VHDx8J9rzVB5ePVPwVylffCw9cPlL5SeRXH+vLR4I9b/Xx/aN8pGLyq4/n
5y3hI5WfRH71MX/5SLDnrT746vCRip2vPua/MXyk8pPIr77j80v7SLDnrb7j
88upj1TsfPUxH//IPlL5SeRX3/H5pX0k2PNWH/z08JGKna8+5r86fKTyk8iv
PtaXjwR73uqD8Y/oW3y38tXHfPwj+0jlJ5FffawvHwn2vNUHl49U7Hz1MR//
yD5S+UnkVx/ry0eCPW/1weUjFTtffczHP7KPVH4S+dXH+vKRYM9bfXD5SMXO
Vx/z8Y/sI5WfRH71sW7/qNjzVh9cPlKx89XHfPwj+0jlJ5Fffay/dfhIsOet
Prh8pOK3KF99zC9/yex57vP17jefu/ymnz27nxPnzfKXfD3ehf2j5SdV3z3q
u+/Al8tHKj/J870/9zHP/lH5SZ7vPuY95XA9XD5SMfO8P/fV720rP8nzqo/r
mV8+ktnz6/fM+b5KvK7JF3ue91deEn/vF53no/Nm9gH7z+/RXNY9pzwmP+If
ld8Ee/7qg8tHMnv+6oPtH5Wf5HmrDy4fqdh5+B718fX9wfCRzJ7n/bnvkwe+
SD5T+Ume57571QfjH9lvujaYed6f+5hfPpLZ81cfz4d9poeGn+R57rtXffAz
wkcqJu/9fUJ9zL8pfCSz53l/7mP+HfKZyk/yPPfdqz4Y/8h+07XBzPf+7lEf
868NH8ns+d4fffhUPB/LR4I9z/tj3k8erj8+X7SPZGae93eP+ui3j7T8JOer
j3ncr4l8+Ume77571QeXj2T2fO/vHvXR/wr5R+UneZ73B5P/gwOXj1RM3vuD
LzlcD3O/pvKbzMzz/j6pPvq/a/hI9p3erXz1Mc/+0SOHn8Q8992rPrh8pGLm
e39/oD76XxA+ktnzvD+Y63m9Pkw+UvlJnuf93as+mPs1ld9kZr73d4/66F8+
kn2nH1O++ng+7DOVn+R57oM/crgexj+y33RtMPO8v3vUR//l4SOZPd/7c9/Z
zx/DR4I9b/XBLx0+ktn56oMfN3wk8/crX33w24ePZP5K5asPvj58pOLbla8+
uHwks+etPnj5SLDnrT54+Uhm56sPXj6S2fnqg5ePZHa++uDlI5mdrz54+Uhm
56sPXj6S2fnqg8tHKna++mDu12S/6dpg5+F71Mc6/hFfP8We7/25Dy4fyex5
q4+/T/lI5SeRX32sLx8J9rzVB3O/JvrKT/K81fepA3O/JvtI5Scxb/Wxbv+o
2PNWH8z9mugrP8nzVh/PD/drso9UfhLzVh/ry0eCPW/1weUjFT9a+er72IHL
Ryo/ifzqY718JLPnrb6znz/CRzJ73urj+Xlr+Ehmz1t9rC8fCfa81Qdzvyb6
yk/yvNXH/B8PH6n8JOatPta5X9Px+eaUPW/1HZ9fTn2k4k8pX33M535N9pHK
TyK/+o7PL+0jwZ63+o7PL6c+UrHz1cf814SPVH4S81Yf68tHgj1v9cHcr4m+
8pM8b/Xx/iv3a7KPVH4S81Yf68tHgj1v9Z29nxg+UrHz1cfzw/2a7COVn0R+
9bG+fCTY81YfXD5SsfPVx3zu12Qfqfwk8quP9eUjwZ63+o7PL6c+UrHz1cd8
7tdkH6n8JPKrj/Xbho8Ee97qg8tHKr5V+erj65v7NdlHKj+J/Opj/WeGjwR7
3uqDy0cqfqvy1cfzw/2els/kee4r/+lbg1925DW0rwT7erwI/CP7TfeK/3P7
WH9S+EjlO5GvPvwm1u0f4TfZT/I874++Jx2uh5ePZH6K8k+OPtj+0Y1irztf
fT/wF45/bxv5Zw8/ifnuq98Lt3wkM/O9v7qvkv2ja8V1H6jq4+c0e0Hn+3it
8ss7Wj5S7WP18bh8JHP1uA8uH6nY+eqD8Y/sN90b7Dz8A+rj67t8JLPne3/u
+8EDXyj/6KLwkzzPfS9XH1w+UjHzvD/3Mb98pPKTyK8+no8L5DOVn+R57mMe
18P4SPab7g0m7/39gPqYXz6S2fO9P/exbp/JPhLseasPxj+y33RvsPPVx/xr
5COZ8ZM8v/rwm3g+3iSf6SfDT/J87+/l6js+X7wr/SYz870/98HLR7Lv5Hz1
8fV9hXwm+0j2nci77+Xq498P/6j8JjPzvD/3Mc8+UvlJnr/6/t6BL5bPdEn4
SZ7vvperD8ZHKr/JzHzv74fUR//fGj6SfadfUd59+E3Ms8/0qPCTPM/7e7n6
YPyj8pvM5L2/H1Afz7/9o/KTPN/7o488r1/7TPaRvE7e+2MefhOMj1R+k5l5
3t8Pqo/+5SPBnu/9uY/X74flM30k/CTPc9/L1QfjH5XfZGa+9/f31MfzY/+o
2PO9v+OfT9/32Z8/ho9kZp735z54+Uhm56sPXj6S+aXKVx9s/2jx45R3H34T
vHwk89uVN9PH8/PFw0cyM6/6uJ715SOZyXt/7oOvGj6S2Xkz18PLRzI7f1X0
wctHMjtfffDykczOVx+8fCSz89UHLx/J7Hz1weUjFTtffTD+UflNZudhvv/j
N/H1sXwk2PO9P/exXj5SMfnVx3/vy0cqP4n86mN9+Uiw560+uHykYuerj/nl
I5WfxLzVxzr3ayJffpLnrT64fKTixytffXw9lI9UfhLzVh/r9o+KPW/1weUj
FTtffcwvH6n8JPKrj/XlI8Get/rOfv4IH6mY/Orj9Vs+UvlJ5Fcf879g+Eiw
560+uHyk4i9Uvvp4fspHKj+Jeavv+PzSPhLseavv+Pxy6iMV36989TG/fKTy
k8ivvuPzS/tIsOetPrh8pGLnq4/55SOVn8S81Xd8fmkfCfa81QeXj1R8t/LV
93cPXD5S+UnMW32sLx8J9rzVB5ePVOx89fH8lI9UfhL51cf68pFgz1t9x+eX
Ux+p2Pnq++Gj88upj1R+EvnVx/ovDx8J9rzVd3x+OfWRit+hfPUxv3yk8pPI
rz7Wl48Ee97qg8tHKr5N+erj/enykcpPIr/6WH/L8JFgz1t9x+eXUx+p+GeU
rz6en/P1mTzPfb7e/eZj7+HUVzL7erh8JPPqe6T6WH+SfKTLhp/kvJk88+wf
2W9i3fO9P/jyw/Xw8pHMzPf+3AcvH8nsvJnrYftHVw4/yfkbo69+b9ti56vP
90Eib7af5Hz1lTe02HkzX8f2gs738V7lzVwHLx+p9rH6eCwfqbh63AfjH9lv
enmw89UHfyB8JLPnrz7Y/tGF4Sd53uqDy0cqdr764PKRyk9yvvrgC+QzlZ/k
edVHHsY/st/08mDnmf9l6mP9leEjmT3f+3MfvHwk2PNWH1w+UrHz1QfbR3rh
8JOcN5Pn+bB/9Kbwkzzf+/ty9R2fL9pHMpP3/twHLx/J7Hz1wfhH5K8IP8nz
Vh9cPlL5Sc7Df0J9rC8fCfY87899zLPPdHH4SZ7nvi9XH4x/VH6Tmbz35z74
BvlH5r8l38n56oPtM5Wf5PmrD8Y/st/08mDn4S9RH+t/WT5S+Ume7/3B5Hl+
Hiaf6fPDT/J87+/L1QfjH5XfZGa+9/cn1Ef/8pFgz/f+3AfbZ7KP5HXnqw/G
P7Lf9PJg56sP/mr5SJeFn+T51Uf+7OeP4SPBnu/9uQ+2f7TY+eqD7R8tdr76
4F+Sf2S/yX6S82by8IvDRyp2/peiD364fKTlJzlvJg8vHwn2fO/PffC3yD9a
fpLzZvLw8pHMzn9L9MHLRzI7X33w64ePZHbezPXw8pHMzr8++uDlI5mdrz64
fKRi56sPxj+y30SffSXnzeTh8pHMnu/9uQ8uH8nseavvKw5cPlL5SeRXH+vL
R4I9b/XB+Ef0LXa++piPf2Qfqfwk8quP9eUjwZ63+mD8I/oWP0H56oPxj+wj
lZ/kfPXB3K+JfPlJnrf64PKRir9C+erj543ykcpPIr/6WC8fyex5qw8uH8ns
eauP1+9bwkcye97qY93+UbHnrT746vCRip2vPua/MXyk8pPIrz7Wl48Ee97q
Oz6/nPpIxZ9Svvp4/eIf2UcqP4n86mP9o8NHgj1v9cFPDx+p+GPKVx/Pz6vD
Ryo/ifzqOz6/tI8Ee97qOz6/nPpIxc5XH4x/ZB+p/CTnqw/+t8NHgj1v9cHl
IxW/X/nq4/WLf2Qfqfwk8quP9eUjwZ63+uDykYqdrz5ev/hH9pHKTyK/+o7P
L+0jwZ63+uDykYqdrz7m4x/ZRyo/ifzqY93+UbHnrT64fKRi56sPxj+yj1R+
kvPVB9s/Kva81Xd8fjn1kYqdrz6en/KXzJ7nPl/vfjNewH3Df4J9PYx/VH6T
+Xz74KfKPyo/yfOrj/s/wfaP8JvKT7pM+adGH7x8JPPlylcfbB9p+UnOm7ke
Xj6S+XuUN3P/J3j5SOYrlTdzvX+PG/nlJzlv5v5Pdd8j+01ef5Hy/j1zXF/e
0OJ7lK8+e0Hn++h89cHLR6p9rD4el49krh73wdyvifzyk5yvvm8+8EXDRzIz
z33fpD54+Uhm5nl/7oOXj2R2vvpg+0jlJ3ne6oO5X1P5TWbnqw++afhIsOev
Pnj5SOZXKl998PKRzM5X39n3U/lHy09y3sz1sP2j5Se9UPlro+/4fNE+ktn5
6oOXj2R2vvrgp4WPVOx89cH4R+U3ma9Qnr5vVB/rrxg+kn0n581c/w0Htn+0
/CTy3h/M/Z/gXxk+kpl53t83q4/+7xo+kvndylcf88pHKmae+75JfTD+UflN
ZvLe3zeoj377SOUneb735z7YPpN9JK87X30w92sqv8nsfPXBy0eCPX/1wctH
MjtfffDykczOV9/xz5Of9Y+Wn+R89Z39/DF8JPNlylcf/NLhI5mdrz54+Ujm
71fefdz/CbaPtPykr1TejE8FXz98JPPtypvpg+0jLT/pxcpXH7x8JLPz1Qfb
R1p+kvPVBy8fyex89cHLRzI7X32wfaTlJzlfffDykczOVx+8fCSz89UHLx/J
7Hz1wfaRlp/kPPz1B+Z61pePZL5beTPXw+UjFTtffXD5SOUnOV998PKRYM9b
fTD3a6Kv/CTPW30w92uyj1R+0t9Rvvpg+0fFnrf6YO7XRN/yk5yvvm85MPdr
Ir/8JOatPtaXj2Rm3uqDy0cqfrTy1cf3i/KRyk8iv/pYXz4S7HmrDy4fqdj5
6nvegblfk32k8pPIrz7Wv2j4SLDnrT6Y+zXRV36S560++MfDRyo/6Wrlqw+2
f1Tseavv+Pxy6iMVO199x+eXUx+p/CTnq+/4/NI+Eux5q+/4/HLqIxV/VPnq
g18TPlL5SU9XvvqOzy/tI8Get/pg7td0fL5pvkv56vtLB+Z+TeSXn8S81cf6
bw0fycy81QeXj1T8b5WvvuPzy6mPVH6S89UHLx8J9rzVB5ePVOx89R2fX059
pPKTnK8+mPs1HZ9vTtnzVt/x+eXURyr+ZeWr7/j8cuojlZ/kfPXB3K+JfPlJ
nrf64OUjmW9Vvvr4+uZ+TeSXn0R+9bHO/ZrILz+JeasPLh+p+C3KVx/M/Z6W
z+R57iv/6VuD+dzeflKxr4eXj2Suvtepj3X7TGb7Sc5XH2z/aLHzJ3y4Hl4+
kvnJypu5HrbPZLaf5Hz1wfaP7Dd53fnqg5ePZH628tUH22cy209yvvrq97Yt
dt5cv6eN/OJ7lTdzfXlDi52vPr6eyZ3vI/nynLgOXj6SmUfvz32s2z9a7J7q
g+0fXTT8JOdh5uA3wctHMjPP+3ud+uDlI5nJe3/uY335SGbyqw+2f7TY+epj
/vKRzOSrj+tZXz6Smbz35z54+Uhm5+HXqQ+2z2S2n0Te+3Mf68tHMpNffcfn
i/aRzM5XH7x8JLPz1cffzz7TYvLug/GbYPyj8pvMzPP+3AfbRyo/yfNX3z8+
8MXymS4JP8nz3fda9cH4R+U3mZnv/b1OffTbPyr2fO/Pfcyzz1R+kue5D37k
4XoY/6j8JjPzvL9/rD76l48Ee7735z54+Uhm56sPtn+02Pnqg5ePZHa++uDl
I5mdrz54+Uhm56vv+Oe/9pHMzlff2c8fw0cyO199sP2jxc5XH2yfyWw/yfnq
g+0f2W/yuvNm8rD9o8XO3x598PKRzM5XH7x8JLPz1QcvH8nsfPXBy0cyO199
8PKRzM5XH7x8JLPz1QcvH8nsfPXBy0cyO1998M3hIxU7b+Z6GJ+p/Cb7Sc7f
HH3w8pFgz1998PKRzM5X3/9+4OUjmcmvPtaXj2Qmv/pg+0eLna8+5ts/Wkx+
9bG+fCQz+dUH4x+RX+x89f2jA+Mf2UcqP4n86mN9+Uiw560+uHyk4q9Qvvrg
8pHKT3K++uDlI8Get/rg8pGKna8+GP/IPlL5Sc5X39nPN8NHgj1v9cH2jxZ/
kfLVx9e3/aPF5Fcf68tHMpNffcfnl/aRzM5XH1/f9o8Wk199x+eX9pHM5Fff
8fmlfSSz89XH82P/aDH51Xd8fmkfyUx+9cH4R+QX36189f3ogfGP7COVn0R+
9bH+m8NHgj1v9cHLRzL/lvLVx/Nj/2gx+dXH+vKRzORXH7x8JLPz1cd8+0eL
ya8+1u0fLSa/+uDlI5mdrz7m2z9aTH71HZ9f2kcyk199cPlIxbcpX318feMf
2UcqP4n86mPd/lGx560+uHykYuerj+en/KVi8rU/rne/+dzlb37b2f2c6Ct/
ydfD+EflN5nPtw9+0vKRDuz51cf1sP0j+00n68o/SUweXj6S2fknRx/8XcNH
Mjtv/u7D9XgXy0cyM8/7o+9Zh+tZXz6SmXnen/vgFw0fyex89TH/PvlH9pvs
JzGv+siz/rLhI5nJe3/ug79s+Ejmlytfv/etvCG4/CTy3l95SfS89jwfna8+
5n9Af778pNfGde5j/SL5TBcOP+mD6qk+2P5R+Umev/qYWz5SMfnVx/oFw0eC
PW/1weUjFT9U+epj/ivlIy0/ifzqY/3O8JHMnr/6YPtH5Sd53upjfvlIxeRX
H+tvHj4S7HmrD14+kvlNylcfvHwks/PVB9s/umL4Sc5XH3zX8JHMVyhfffDy
kcwfUt59+FS/feBL5DNdHH6S53l/H1QfjH9UfpOZed7f76iP/uUj2XdyvvqY
9yj5TI8MP8nz3AeTh3/x4B/x7738JPLe32+rj/4XDB8J9nzvz33w8pHMz1e+
+uA3Dh/J7Hz1wctHMr9B+eqDPzJ8JLPz1Qe/evhI5g8rX33wZcNHMr9K+eqD
l49kvlz56oOXj2R2vvrg5SOZna8+2D7S8pOcrz74xcNHMjtfffAjho9kvl55
93E9fMvwkczOPyL64OcOH8n808q7j9/HB396+Ejm5yn/XDHXw8tHMjv/6eiD
l49kdr764OUjmZ03f/xwPfy1w0cyf0x5M9fDr5F/tPwk579WzPVn57vhI5lf
rTz74zyBT8X61wwfyXyX8mb64PKRip+sfPX97oHLRyo/ifzqY/2rho8Ee97q
g8tHKr5U+epjfvlI5SeRX32s8/vsyJef5HmrDy4fqfjxylcf5+l3ho9UfhL5
1ce6/aNiz1t98PKRzM5XH/NvGz6SmfzqY/1Lh49kZt7qg799+EjmL1G++vh+
unwkM/NWH+tfOHwkM/nVB18dPlLxw5SvPub/RPhI5Scxb/Udn4faR4I9b/Ud
n19OfaTi+5Wvvt86Or+c+kjlJ5FffcfnofaRYM9bfTD3azo+3zR/TPnq4/m5
OXyk8pOYt/pYXz4S7Hmr7/j8cuojFd+lfPUx/4fDRyo/ifzqY/39w0eCPW/1
wZeGj1T8m8pXH/PLRyo/iXmrj/X3Dh8J9rzVBz8xfKTi9yhffcz/nvCRyk9i
3upjfflIsOetPrh8pGLnq4/53K/JPlL5SeRXH+tvGz4S7Hmr7+z9j/CRim9V
vvqY/1fDRyo/ifzqY335SLDnrb7j88upj1TsfPXdfeDz9Zk8z32+3v1mPvde
vhLs6/kcfflI5uq7SH3wU+0fDT+JvPdHH3nY/tHyk5xnf8x7yuF6ePlIZuZ7
fxepj/7vlY/03eLvEjtvxm9inn2kZw0/ifneH31cz/rykWDP9/7cB18fPlKx
82b8JubfKx9p+UnM8/7OXv+H61lfPhLs+d6f++r3tpWf5Hmrr+57VOz51ef7
KvF9kb7lMX2T8rDvu2QvyD5S+Un2mqoPrj83e97q47F8pOLqcR/88+EjlZ/k
vJnreT6WjwR7nvcHf97herh8pGLmeX8Xqo/+8pHKT3K++uDlI8Get/rg8pGK
71S++uBrw0cqP8l5M9fzfCwfCfY87+8i9R2fV9pHMjPP+7tQffQvH8nsfPXB
9o8WO199/H2Wj2Qm774/rT7WXyH/yGw/iXneH31cz/rF8pkuCT/J870/mOth
/KPym8zkvT/3wctHsu/kfPXBj5LPVH6S560+GB+p/CbzI5Wn70L1wctHgj3f
+3MfvHwk8wuUp+8i9cHLRzKT9/7cBy8fyfxG5auP+ctHMpN330Xqg5ePZGae
93eh+uDlI5mZ5/25j/XlI5mZt/rg5SOZna8+ePlIZuerD14+ktn56oPtHy12
3ozfxPPzcPlHy09invdHH3nWl49kJu/9uQ+2z2S2n3SL8u7Db4LtIy0/6Srl
zeThrx8+ktl5M9fDy0cyO//10QfbP7Lf5HXnqw+2j7T8pI8rX32wfSbza8TO
m/GbYPyj8pvsJ92sPHyh+uDlI8Ge7/25j/XykYqZt/r+zIHLRyo/ifzqY335
SLDnrT64fKTir1K++phfPlL5SeRXH+vLR4I9b/XB5SMVP0H56uP1VT5S+Unk
Vx/r3K+JfPlJnrf64PKRih+tfPU98cDlI5WfRH71sb58JNjzVh//fuUjFTNv
9fH6LR+p/CTmrT7m2z8q9rzVd3a+CB+p2Pnq4+9XPlL5Scxbfax/evhIsOet
vuPz0KmPVPwp5auP+eUjlZ9EfvUdn1/aR4I9b/Udn19OfaTijytffcwvH6n8
JOatvuPzS/tIsOetPrh8pOK7la++/+7A5SOVn0R+9bFu/6jY81bf2fuJ4SMV
O199PD/lI5WfxLzVx/rykWDPW31w+UjF71W++phfPlL5ScxbfawvHwn2vNV3
fH459ZGKna8+5pePVH4S+dXH+m3DR4I9b/XB5SMVv0356vuzR+eXUx+p/CTy
q4/1twwfCfa81QeXj1T8M8pXH8/P+fpMnuc+X+9+M59L208q9vUvObD9o+Un
Vd93qg9+qnyk8pM83/ujjzyMf2S/iT77Sc4z/yXqg/GPyC8/ifnen/tYx2ey
31R+EvnVB18pH+nZw09y3kweXj4S7Pnen/vg6+QjXRt+kudVH3n4XvlInxx+
kvPXRR9s/6jY81cfXD5SsfPVV7+3rX5vnOetvrrvkX0k8zcrX33lDRV7/uqz
F3S+j85XH7x8pNrH6uPRPtLyk6rHfTD+EXn8JvtJnr/6YPyj8pvMn6c8fS9R
H+v2j4o93/tzH2z/aLHz1QcvH8nsfPXB9pGWn+R89cH2mewjed356js+r7wr
/Saz89UHLx8J9vzVB5ePVOy8mfs/wfhH9pvKT3qa8vBL1Mf6D8o/MuMneb73
5z7m2T9afhJ5932n+uDlI5mZ7/25D14+ktn56vubB7bPtJi8+2D8Jtj+0S+E
n+R53t9L1Ee/fabFzlcf8+wflZ/kee77TvXB9o8Wk/f+XqI++pePZHa++mD7
TPaRvO589cH2j14VfpLnr77jnydPfaRi56vv7OeP4SPBnrf64OUjmZ2vPnj5
SGbnqw++ffhIZufNXA/bR7o+/CTP8/5g8rB9pOUnOf/i6IPtHxV7/uqD7TOZ
7Sc5X33w8pHMzlcfbB9p+UnOVx+8fCSz89UH2z9a7Hz1wctHMjtffbB9JrN9
JeerD7Z/BF8U7Hz1Hb/fd+ojFZNffayXj2T2vNUHl49UfpLz1QfbPyr2vNUH
l49U7Hz1/a0Dl49UfhL51ce6/aNiz1t9cPlIxc5XH/yO8JHKT3K++mD7R8We
t/rg8pGKna++v3HgW8NHKj+J/OpjHf+IfLHnrT6+f+Af2Ucye97q4/VbPpLZ
81Yf85ePBHve6oOvCh+p2Pnqg388fKTyk5yvPpj7NZG3jwR73uo7Pr+c+kjF
n1a++o7PL6c+UvlJzlff8fmlfSTY81bf8fnl1Ecqdr76eP2+Jnyk8pPIr77j
80v7SLDnrT64fKRi56uP94fwj+wjlZ9EfvWxzu+zI19+kuetPhj/6Oz9wcHv
V776+O9D+UjlJ5FffazbPyr2vNUH4x/Rt9j56uP1i39kH6n8JPKr7/j80j4S
7Hmr7/j8cuojFTtffczHP7KPVH4S+dXH+q3DR4I9b/XB5SMV36Z89fH1jX9k
H6n8JPKrj/XlI8Get/pg/CP6Fr9F+erj+Tlfn8nz3Ofr3W/mc+N7h68E+3o+
97Z/tPyk8+1j/UnykcpP8vzqI8+6/SP4O4PJe3/ug8tHKnYe/ufqYz73a2J/
5Sd5nvfnPtg+0vKTblS++uDlI5mdh39efazbP1p+kvNm7v8E3zd8JPO1yl8X
ffDLho9kvlf56oOXj2R+ufLVB9s/Wux89dXvbVt+kvPVV/c9Wvxa5ev3vpU3
tJh53l95SuTO95G891fe0fKRah+rj0fu18R19pvM1eM+GP+o/CbzQ5WvPpj7
NZEvP8nzVx985/CRzDcpX33w8pHMdyhfffC52OfwkczOVx/85uEjmZ2vPnj5
SOY3KV998PKRzM5XH1/f9pHsN3mdvPt+Tn0w92sqv8nMfO/PffArho9k3+lD
ylcffIn8o4uHn/SDylcfvHwk88XK0/fz6mN9+Uhm56uPeY+Sz/TI8JM8z30/
pz6Y+zWV32Rmvvf3z9VH/wuGj2Tf6ReUrz7YPlP5SZ63+mDu11R+k9n56oOX
jwR7/uqDPzJ8JLPz1Qe/evhI5g8rT9/Pq4/1y4aPZH6V8tV39vPH8JHMlytf
ffDykczOVx+8fCSz89UH20dafpLz1QfbP1p+kvPVBy8fyXy98tUH3zJ8JLPz
1Qc/d/hI5p9W3n34VPDykczPU/650QcvH8nsfPXBy0cyO1998PKRzM6buf8T
vHwk88eUN3M9fPPwkczOVx/M/ZrIl5/keauP/x5wvyb7SOUnMW/1sb58JNjz
Vt+/OPDykczkVx/r3K+J/PKTyK8+uHyk4kuVrz7ml49UfhL51cc692siX36S
560+ePlI5scrX33wO4ePZHa++uDlI5nfoXz1weUjFTtfffBt4SOVn+R89cHl
I5k9b/Xx/YP7NdlHMnve6uP1Wz6S2fNWH/OXjwR73uqDrx4+ktn56mP+Twwf
ycy81Xd8fmkfycy81Xd8fmkfyXy/8tV3fH5pH8nsfPUdn4faRzI7X30w92s6
Pt80f0z56vvFo/PLqY9UfhLzVt/x+aV9JNjzVh9cPlLxXcpXH6/fHw4fqfwk
8quP9eUjwZ63+mDu10Rf+Umet/qOzy+nPlL5SZcoX30w92siX36S560+mPs1
0Vd+kuetPpj7NdlHKj/pCcpX3/H5pX0k2PNW3/H55dRHKn6H8tUHc78m+0jl
JzlfffDbho8Ee97qg8tHKr5V+erj65v7NdlHKj+J/Opj3f5RseetvuPzy6mP
VOx89cHn6zN5nvvKfyrmPhjlK5l9PZ8Tl49UflL1XaA+1u0jLT+JvPfnPuaV
j2T2fPcxj9+PB+Mf2W+yn+R53p/7WF8+Euz5q4/1K8NHKmZe9fH78VjHPyq/
ycw878998DXyj+w34Sd5fvXhNzF/+Uhm5nt/9PH78VhfPpKZed7fQ9VH//KR
zC9TvvqYt3wkM/nVBy8fyex89THf/lH93jjPW33+PW/kl5/EfPf597yVN7SY
ed6f+5hP7nwfya8+1pePVPtYfTyeW/4cPpL5guhxH9fZP1pMvvrwm1hfPpKZ
ed6f++DlI5nvVL76zr7/PfD0fw4fyUx+9bG+fCQz+dV3fL5oH8n8ZuWrD14+
ktn56oPtHz1t+EnOm/Gb+PdbPpKZed6f+87+ezZ8JDPzqg+/CS4fqfgVyr88
+mD8o/KbzJcoT9/nqY/15SPZd3K++phnn+lR4Sd5nvtg/CYYH6n8JjPzvL+H
qI/nf/lIsOd7f+5jfflIZuatPnj5SGbnqw9ePpL5jcpXH89H+UjF5N33UPXB
+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
vHwk8xuUrz7+fh8ZPpKZvPtuUh/86uEjmZnn/b1SffBlw0cyM8/7cx/ry0cy
M2/1wctHMjtfffDjh49kdt7M9bB9pOUnOf/46INfPHwks/PVx/PzCPlHy09i
XvWRZ/2W4SOZyXt/7oOvGj6S+aeVrz7408NHMj9PefdxPWwfaflJzn86+uDl
I5mdrz6Y+zWRX36S89UHLx/J/DHlqw++WT5S+Umet/pg7tdUfpP51crT90r1
wdyviXz5SZ7v/bmP9fKRipm3+jgflY9UfhL51cf68pFgz1t9cPlIxc5XH/9+
5SOVn0R+9bHO/ZrIl5/keasPLh+p+PHKVx/PzzvDRyo/ifzqY335SLDnrT64
fKTiRytfff/gwLeFj1R+EvnVx/rykWDPW328vrhfE33lJ3ne6vuHBy4fqfwk
5q0+5i8fCfa81QdfHT5SsfPVx9/vJ8JHKj+JeauP9eUjwZ63+o7PL6c+UrHz
1cf88pHKTyK/+o7PL+0jwZ63+mDu13R8vmn+mPLVx/ybw0cqP4l5q+/4/NI+
Eux5qw8uH6n4LuWrj+9/Pxw+UvlJ5Fcf68tHgj1v9R2fX059pGLnq4/55SOV
n8S81cc692siX36S560+mPs10Vd+kuetPuZzvyb7SOUnMW/1sf7O4SPBnrf6
js8vpz5S8TuUrz7mc78m+0jlJ5Fffay/bfhIsOetPrh8pOJbla8+5nO/JvtI
5SeRX32sLx8J9rzVd3x+OfWRit+ifPVxfj9fn8nz3Ofr3W/mc8zylcy+HsY/
Yj/LT6q+O9XHun2k8pM83/tzH/PsH+E30ce657vvjA/Xw8tHMjPf+7tTffR/
b/hIxc6b8ZvgK8NHMnue9wdzPbx8JNjzvL9fUx/r18lHelH4SZ7n/cH4TfC9
4SOZPd/7g7n/E7x8JNjzvD/3weUjFb9M+eqDy0cye97qg18r/+h14Sd53urj
680+0gfCT/L81ce6/aNiz199cPlIxc5XX/3etuUnkV99vg8S+Qsu/Nx+EvnV
Z29oeUyev/rsBdlHqkfyq4/15SPBnrP6eCwfqfjO6HEf15WPVH4S+dXH+pvk
M9lHMpNffcfni3el32R+s/LVBy8fCfb81Qc/LXykYufN+E38++Ej2W8qP4l5
3t8d6oOXjwR7vvfnPs4TF8tnuiT8JM9z3x3qg/GPym8yM8/7cx+8fCT7Ts5X
3/sObJ/pUeEneZ77YPwm+BfkH/1i+Eme7/39mvp4/stHKmae9+c+1pePBHve
6oOXj2R2vvrg5SOZ36h89fF8fFg+k30k+07k3XeH+uBXyT96dfhJnu/9uY/n
p3ykYuatvrOfP4aPBHve6oOXj2R2vvpg+0jLT3K++uDbh49kdt7M9fCLw0cq
dv52MX4Tz499pOUnMc/7cx/ry0eCPX/1wctHMt+ifPXB9pGWn3SV8tUHLx/J
7Hz1wctHMjtfffDykczOVx+8fCTzx5WvPrh8pGLnqw/GR7LfdFPwzcpXH1w+
UvHdylcfXD6S2fNWH1w+UvlJzlcfvHwk2PNWH1w+UrHz1ffrBy4fqfwk8quP
9eUjwZ63+uDykYqfoHz1/eqBy0cqP4n86mN9+Uiw560+uHyk4q9Qvvrg8pHK
T3K++uDykcyet/rg8pHMnrf64PKRzJ63+s5+vhk+Eux5qw8uH6n4C5WvPr6+
y0cqP4l5q4/15SPBnrf6js8vpz5SsfPVx9d3+UjlJ5Fffcfnl/aRYM9bfcfn
l1Mfqfjjylcfz0/5SOUnMW/1HZ9f2keCPW/1weUjFd+tfPXx8335SOUnkV99
x+eX9pFgz1t9cPlIxc5X3/H55dRHKj/pUuWrD14+Eux5qw8uH6n4vcpX3/H5
5dRHKj/picpXH7x8JNjzVh9cPlLxO5WvvuPzy6mPVH6S89UH3zZ8JNjzVh9c
PlLx25SvPr6+y0cqP4n86mN9+Uiw560+uHyk4p9Rvvp+88Dn6zN5nvt8vfvN
fK5o36nY1z/mwPhH5TeZq++x6oOnjyTfibz35z4Y/+isL/wkz3Mf855yuB7G
Pyq/ycx87++x6oPtH9lvYt3zvT/6yLN+pXyk8pM83/uDv+5wPYx/VH6Tmfne
32PUR//18o/sN+Eneb73B5OH7R/Zb/K689eLycP2jxY7z/zHqI/15SOZna8+
ePlIZuerD35t+EjFzlcf/MHwkcpPcr764OUjwZ63+uDykYqdrz64fKTyk5yv
vvq9bcWet/rqvkeLnYcfo77yhoo9r+7TxPX2hNZj3cep+uD68+J1nR/LRyo/
qXrcB9s/Kva81Xd8Xmkfyex89cHLRzI7X32w/aMrhp/kfPXB9o8+NPykK5Sn
7zHqY93+0WLnq4959o8uHn4Sefc9Vn3w8pHM5L0/98HLRzI7X33wo+QzPTL8
JM9bfTD+kf2mO4IfqTx9j1Ef688PH8ns+d6f++DlI8Get/pg+0eLna++s/P6
8JHMzlcfz4f9ow8PP4m8+x6rPvhV4SMVk/f+HqO+45//Tn2k8pOcr76znz+G
jwR73uqDl49kdr764OUjmZ2vPtj+0fKTnDeTh+0jXR9+kud7f2c/7x2uh8tH
Kj/J+RdHH2z/qNjzVh9s/2ix89UHLx/J7Hz1wctHMjtfffDykczOVx9s/2ix
89UHLx/J7Hz1wfaPFjtffbD9o8XOVx9s/2ix89UHLx/J7Hz1wctHMjtfffDy
kczOVx9cPlKx89UHl49UfpLz1QfbPyr2vNUHl49U7Hz1we8IH6n8JOerD14+
Eux5qw9ePpL50cpX36MPbP9oMfnVx/ojho9kJr/6YPtHi79E+er7UwdePpKZ
/Opj/YuGj2Qmv/rgq8JHKn6Y8tX3Xx/4x8NHKj+J/OpjfflIsOetvuPzy6mP
VOx89R2fX059pPKTnK++4/NL+0iw562+4/PLqY9U7Hz1wa8JH6n8JOerD14+
Eux5qw8uH6n4LuWr7785MP6RfaTyk8ivPtZ/a/hIsOetPtj+0eL3K199fH0v
H8lMfvWxbv9oMfnVB9s/Wux89THf/tFi8qvv+PzSPpKZ/Oo7Pr+0j2R2vvqY
b/9oMfnVx/rykczkV9/x+eXURyq+Tfnq4/yFf2Qfqfwk8quP9eUjwZ63+mD8
I/oWv0X56uP8db4+k+e5z9e73/zCw+d+9w5fCfb11xzY/tHyk6rvWvWx/qTw
kYrJe3/0cT3z8I/sNx2/v/BPT+Z5f8zj/k+w/aPykzzf+3Mf87lfE/3LTyK/
+lh/tnymrws/yfNXH+v4R+U3mZnvvmvUR/918o/KT/J87w/m/k88P/fJRyo/
yfO9v2vUxzr3ayq/ycx87+8a9dG/fCTY870/9zF/+Uhm8u67Rn3w64aPZCbv
/bkPXj6S+bXKu4/7PzF/+Uhm5nl/16gPXj6Smbz35z54+Uhm56sPviB8pGLn
qw/GPyq/yfxQ5asP5v83Q778JM9ffTCfa9F3x+CblF/3TSJ3vo93KL+8o/rz
4nWdH88tfw4fyVw97oOXj2R+k/LVBy8fyex89fH1bZ9pMXn3XaM+mPs1ld9k
Ju/9uQ9+xfCR7Dt9SPnq478/l8g/Wn4S89x3jfrg5SOZmef9Xas++pePZHa+
+phnn2kxefddoz6Y+zWV32Qm7/29UH30v2D4SLDne3/ug5ePZH6+8tUHv3H4
SGbnqw9ePpL5DcpXH/wR+UzlJ3ne6oO5X1P5TeYPK1998GXDR4I9f/XBy0cy
X6589cHLRzI7X33w44ePZHbezPWwfaTlJzn/+OiD7R8tP8n56oMfMXwk8/XK
u4/r4VuGj2R2/hHRB181fCTzTytffTD3hyK//KTnKe8+roeXj2R2/tPRBy8f
yex89cHcr4n88pOcrz54+UjmjylfffDNw0cyO199MPdrIr/8pFcrT98L1cc6
92siv/yku5SvPnj5SOYnK199nI+Wj2Qmv/pY/6rhI5nJrz54+UjmS5WvPuYv
H8lMfvWx/sThI5nJrz54+UjmxytffXw9vHP4SGbyq491+0eLmbf64PKRip2v
PubfFj5S+UnkVx/rXzp8JNjzVh/M/ZroKz/J81Yfr9/ykcpPYt7qY537NZG3
jwR73uqDrw4fqfiLlK8+5v9E+EjlJzFv9bH+kPd+bh8J9rzVd3x+aR/JzLzV
9+1H55f2kczkV9/x+aV9JDP51Qdzv6bj803zx5SvvuuPzi/tI5mZt/qOzy/t
I5mZt/qOzy+nPlKx89UH/3D4SOUnOV998PKRYM9bfTD3a6Kv/CTPW318fZeP
VH4S81Yf69yviXz5SZ63+o7PL6c+UvF7lK8+5nO/JvtI5Scxb/Wxvnwk2PNW
3/H55dRHKna++pjP/ZrsI5WfRH71sb58JNjzVh9cPlLx25SvvusOzP2a7COV
n0R+9bFu/6jY81bf8fnl1Ecqdr76vuPA5+szeZ77fL37zecu/9v/On0ls6/n
cz78I/tN14hX35vVB18qH6n8JM/3/ugjD9s/wm+yn+T53h/zuP8TXD5SMfO9
vzerj/4bwkcqP8l5M34TfOXwkew7fbfyN4ifdbgexj+ir/wkz/P+3AfbR3rR
8JOcr76fPPC98o/uCz/J890Hf+JwPYyPRL99pJdpnXnen/vgLwsfqfyklynv
Pq6H7R+Vn+R53p/74OUjmZ2vPr7e7B99YPhJzFt9rNs/Wn4S86vvwsP18PKR
zBcpb+Z65i8fyUx+9bG+fCQz+dUHLx/JfIHy1cf89XvjzOSrD7/J90Eiv+7D
VL9Xru6rxLmD/OI7la8+5pM730fyq4/15SPVPlbf8fmifSTzm6PHffDykczO
Vx//fbB/tPwk8u6Duf8Tf8/lI5mZ5/25j3nLRzIzb/XBF8tnuiT8JM9bfTD+
UflN5kuUp+8n1cf68pHsOzlffcyzz1R+kue5D+b+TzA+UvlNZuZ5f/+n+nj+
l48Ee7735z7Wl49kZt7qg5ePZHa++uDlI5nfqHz1wctHMjtfffDykcwfUb76
jn+ebB/JzLzVd/bzx/CRzMxbffDykczOVx9sH2n5Sc5XH3z78JHMzpu5HrZ/
tNj528X4TTw/D5d/tPwk5nl/9JFnfflIZvLen/vg5SOZb1G++mD7SMtPukr5
6oOfM3wks/NmroeXj2R2/jnRBy8fyex89cHLRzJ/XPnqg8tHKna++mB8pPKb
zDcrX33H78+1jwR7/upjvXykYuatPrh8pPKTnK8+ePlIsOetPrh8pOKvUr76
furA5SOVn0R+9bG+fCTY81YfXD5S8ROVrz64fKTyk5yvPnj5SLDnrT64fKRi
56vvJw5cPlL5SeRXH+vcr4m8fSTY81Yf3z/KRypm3urj9Vs+UvlJzFt9zLd/
VOx5qw8uH6nY+eqDy0cqP+lq5asPXj4S7Hmr7/g8dOojFTNv9fH6LR+p/CTy
q+/4/NI+Eux5q+/4/HLqIxV/XPnq4/VbPlL5Scxbfcfnl/aRYM9bffDykcx3
K199vB+0fCQz+dXH+vKRzMxbfXD5SMXvV776js8vpz5S+UmXKl998PKRYM9b
fXD5SMXvVb76js8vpz5S+UlPVL76js8v7SPBnrf6js8vpz5SsfPVd3x+OfWR
yk9yvvpg+0fFnrf64PKRip2vvuPzy6mPVH4S+dXH+vKRYM9bfXD5SMXOV98t
Bz5fn8nz3Ofr3W/mczP7ScW+HrZ/tPyk8+2DL5WPVH6S51cfeRj/iP3iN5Wf
5PylYvIw/lH5TWbnmX+/+li3f2S/iXXP9/5g8rD9I/tNXnf+BjF5ePlIZuev
jD7Y/tFi56sPtn/0ieEnOW/m/k+w/aPFn1D+3uiD7SMtP8n56oOXj2R2vvrg
14aPVOx89cEfDB+p/CTnqw+2f2S/iXXPqz7ycPlIxc5fFH1w+UjlJzlffbD9
o2LPW31w+UjFzlcfbB/pJrH9JOfN5Ov3thV7vvdXvxeufKRi56uvvKFiz1t9
9oLWo+etvuPzRftItY/Vx+PykczV4z4Y/4j8FeEneV71kYc/FD5S+UnOPy36
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
ez8fzJ+PB68eycx5fj774NUjmb0vH+z+CK4+yfvywatHMnsPPygfvHokM3s/
n33w6pHM3sMPyQevHsnM3s/3oHz4V49k9r58nHd2+TY9kpm9fQ/JB68eycze
z/egfPDqkczs/Xz2cX31SGb2ywevHsnsffng1SOZvS8f7B5p9Unelw92f3T1
b27fJ3lvZs/nZ/VIZvZ+Pvu4vnokM/vlg1ePZPa+fPDqkczelw9ePZLZ+/LB
q0cye18+ePVIZu/LB68eyex9+WD3R6tP8t7MHl49ktl7zn9QvuPP57pHMrP3
89nH9dUjmdkvH7x6JLP35YNXj2T2vnxw9UjF3pcPrh6p+iTvywevHgn2ecsH
rx7J7H35+PpaPZKZ/fJxffVIZvbLB1ePVOx9+f6LE1ePVH0S++Xj+uqRYJ+3
fPzvVz1SMfvl+/kTV49UfRL75eP81SPBPm/54NUjmb0vH39/q0cys18+rq8e
ycx++Y7vLxd7pGLvy8f51SNVn8R++Y7vL90jwT5v+Y7vLxd7pGLvy8f51SNV
n8R++bjOn2d3fL+5yD5v+eDVI5lf0r58/Pq3eiQz++Xj+uqRzOyX7/znidEj
FXtfPs6vHqn6JPbLd3x/6R4J9nnLB68eyfwl7cvH1+/qkczsl4/rq0cys1++
4/tL90hm78vH+atHMrNfPq67P1rMfvng1SOZvS8fX7+rRzKzXz6urx7JzH75
4OqRir0vH5+fy/ZMPq+ej/vtN/PfhW5Fr2T2/cf/3//FHqn6pMv6XjrxfxY9
ktnnlY/7uU5/VH2T+yT2fj5895/uh5849UfsV5/0c9o/ED74t9QjrT7pV7W3
jz1/fw+rR3rH6JPY+/ngf3a6H149Euzz/Xz2wb+hHqn6JJ+3fMev3+/1SKtP
ep/29rGHPzh6JNjn+/nsg38ieqTiZ7S3j/vh6pHMPs/PB//y6X6Y/qj6JvOj
2pu5n6+v1SPBPn/5uF49UjH78v3U6X6Y/qj6JvO92r85fJzvHqn6JJ+/fFx/
jXqm6pN8/vLB9EfVN5lfrX35OP93R4/k3ol9+fj9prj+FfVHq0/iPD8fPu6H
V49k9v4r4eN890irT2K/fP5z3Nh/Ovokn7989fserT7p09qvP/eN9zr2xT5/
+fj7Y/fQJT+yr87J3VH99eqT+Ojns4+PZ5dfudg3wfRJy2Mf/N2/u+/vj+ib
qk/yvnzw6pHM92mP7yX5zt+/Ro9k9r58nFc9UjF7+/4/+eA/U39UfZLP8/P9
jXz4q0cqfl778sHumVaf5H35YPqj6pvM3pcPXj2Seyfvywd/Qz3TK9En+bzl
gz+u/qj6JJ+/fOff70WPVPwx7ct3/v3H6JFgn7d88NOjRzJ7Xz74yuiRzB/Q
vnzwzdEjmd+kffngf/jl+2LfBF8Tf1778sFviB6p+iTvywevHgn2ecsHv3v0
SGbvywevHsn8uPblg1ePZPa+fPDqkczelw9ePZLZ+/LBq0cye18++Lp6pOqT
fN7ywS+rP6o+yecvH1w9UvFL2pcPXj0S7POWD149ktn78sH3jR7J7H354N8e
PZL5Z7QvH++PXxo9kpnzlo/rq0cyc97ywU9Fj1TsffngL0SPVH3S+7UvH7x6
JNjnLR9cPVKx9+WDX4geqfok78sH/+Pokcw+b/ngX48eyezzlg/+TPRIZp+3
fPDrRo8E+7zlg6tHKn699uXjn+9PRo9UfRL75eP6d0aPBPu85YMfiR6p+Nva
l+9vTvz70SNVn8R5y8f1vxs9Euzzlg9+e/RIxX+vffn4/FSPVH0S5y0f11eP
BPu85YOrRyp+Wfvycf7vRI9UfRL75eP6V0ePBPu85Tu+v1zskYq/rn354OqR
qk/yvnzw6pFgn7d8cPVIxf+v9uXj8/NU9EjVJ7FfvuP7S/dIsM9bPvju6JGK
/1z78h3fXy72SNUn3aN9+WB+vyb21Sf5vOWDq0cqfkH78vH5qR6p+iT2y3d8
f+keCfZ5y3d8f7nYIxX/ifble/nEv3rJnsnn2ef77Tef3f7KF2evBPt+uHqk
4sv6YPdIq0/yvnyw+yP3TVz3+eXj93+CV49kvl97zv+wfFynfzp+v9l90hPa
28f+mRO7P/pno09i7+eD+f2f4NUjmTnfz/eMfPivjh7J7L2ZvonPh/uj1Sdx
np8PZg+vHsnM3s9nH+weafVJH9S+fJzv/sh9k6+zt+9D8sHVIxVzvp/PPq5X
j1R9Evvlg90juW+iT/J59nEe98PVIxVzvp/PPq5Xj1R9Evvl45/n1SPBPs++
D8kHV49UzHl+vmfk4/yPqEcyu09i7+fDR9/EdfdI1Sf5fD+ffXD1SMXel4/z
q0eqPon98nH9udEjwT5v+Y7vF/vPjfN5ywevHsnsffn8+xqxP//vOGKfZx/M
/TC7y35k7+ezD66/XrzuO//32umje6bF9vgj98P0R9U3mdn7+T4sH/7VI7l3
8r58nOeeqfokn2ffh+SD6ZH+5rR3j2Rm7+d7Rj78q0eCfb6fzz549Uhm78sH
rx7J7H35zt/XR49k9r58fD5eGT2Smb19H5IPXj2SmfP8fM/Id/z+r3sk88e1
L9/59x+jRzLfr3354NUjmb0vH7x6JPPT2pcPdn+0+Ir29tE3wfRP7K8Ovqm9
mfvhO0aPZPb+mpi+CV49kvkN2t8RPnj1SGbvywevHsn8bu3LB68eyex9+eDV
I5m9Lx+8eiSz9+WDV49k9r58sPujxd6b6Zvg1SOZr2tvxgevHsn8svblg1eP
ZPa+fPDqkczelw9ePZLZ+/LB1SMV36d9+Xh/rB6p+iTOWz6urx4J9nnLB68e
yex9+XgfWj2SmfOWj+t3jx7JzHnLB68eyXyP9uXj/NUjmdkvH9dXj2TmvOWD
V49k/sfal4+v39UjmTlv+bi+eiQz5y0fXD1S8eu0Lx/nV49UfRL75eP66pFg
n7d8x/eXiz1S8Xe0Lx9fv9UjmX3e8h3fX7pHgn3e8h3fXy72SMV/p335+PxU
j1R9EuctH9dXjwT7vOWDq0cqfkn78sHVI1Wf5H35ju8v3SPBPm/54NUjmb+q
ffn4+l09kpn98nHd/dFi9ssHV49U7H35OL96pOqT2C8f11ePBPu85YNXj2T+
gvbl45/v1SOZOW/5uL56JDP75YOrRyq+oX35+PxUj1R9Evvl4/rqkWCft3xw
9UjFn9G+fHx+Ltsz+Tz7fL/95v/09N9V3CcV+37+u8zqkcyX9fH/k/+Z1SOJ
2ZeP+7lOf3Tuiz7J5/n58LGH6Y+qbzJ7z/n3ycf1J9UfVZ/k8/18MHv4YfVM
/zz6JJ/v54P5/Z9g+qPqm8z/XPuHwwe/T/2RmT7J5y8fnw/3R6tPYm8f/K3T
/ef/HXT0SGbO9/PZB//E6JHM3pu5n/PdHz06+iT2fj74l073w9UjFXOen88+
rv919EjVJ7EvH/fD7o/eHH2Sz/PzcR57uHqkYvZ+Pvu4Xj1S9Unsl4/r7pnc
I8E+b/lg+iP3TR8K9r58nO8e6feiT/L55WPP9dUjwT7fz4fvy6f74eqRiv9S
ezP3c/57o0eqPol9+bif6+6Pin2en8++4/tF90hm78sHrx7J7H35/Oe8sV99
Env7YP++Sry3sl/M3s9XXRL/3Hzokh+9N3MfXH/dfZLPqfv8kf6o+iZzee6T
7/z9a/RI7p28N3M/57lnqj7J5/n54LtO98P0R9U3mTnPz2cfvHok2OcvH7x6
JLP35YNXj2T2vnzw6pHM3pcPfkU90yvRJ/m85YPpj6pvMntfPvito0eCfX75
uP/8+4/vfrhNj2T2/q3hg90fLfa+fPDZ5dv0SGbvzdwPuz9y3+Tr3l8Rs4f/
YdZ9k/sk72+GD3Z/5L7J1703s4dXj2T2/o7wwY+NHsnsvZn74dUjmb1/LHzw
I6NHMntv5n549Uhm7x8JH7x6JLP35YNXj2T2vnyweyaz+yTvywe7P1rsffng
1SOZvS8fvHoks/flg1ePZPa+fLD7o8Xelw+mP2K/2Pvy8f5If+Qeqfok9svH
9dUjwT5v+WD6I3yLvS8f/OfRI1Wf5H354NUjwT5v+eDqkYrv1r588I3okapP
8r588I+PHgn2ecsH0x/hW/yPtC8fX7/0R+6Rqk9iv3xcd39U7POWD64eqdj7
8nH+H0aPVH0S++XjuvujYp+3fMf3oYs9UrH35Tu+v1zskapP8r58x/eX7pFg
n7d8x/eXiz1Ssffl4/NTPVL1SeyX7/j+0j0S7POWD149kvll7csHuz9a7H35
ju8v3SOZvS8fXD1SsfflO76/XOyRqk/yvnzw6pFgn7d8cPVIxd6X7/j+crFH
qj7J+/Id31+6R4J93vId318u9kjF3pfv+P5ysUeqPsn78sHuj4p93vId318u
9kjF3pfv+P5ysUeqPsn78sGrR4J93vLB1SMV/4n25fuZE1e/ZPZ59vl++838
d4/qlcy+/4snrh7J/MP6uO4eafVJ7JeP6/RH7FefxL58/Pl4MP1R9U3mt2nP
+f9SPq7TP7GvPsnn+/lg9pzn/sh9k6+z9/PhY8/11SOZ2fv57IOvjh7J7L2Z
+znf/dG3Rp/E3s+H79+f7uf66pHMnO/nsw92j7T6JO/Lx/nuj35p9Ensy/cr
p/vh6pGKf0l7zv+ifFx/UT3S6pO8N7OH3R9Vn+Tz/Xz2wdUjFb9Z+/LBfxo9
UvVJ3pu5n8/H6pFgn+fng197uh+uHqmY8/x8X5QP/0fVI60+yXsze9j9kfsm
rvt8P599cPVIxV/Wvnzw+9QjrT7JezN7ePVIsM/388H8+Xjnv17/we17JPNz
2pu5H149ktn78vnPbWO/+iTvy1e/79HiB7Uvn7si9h8S1+8DVT72/PPM7rIf
2Vf35I6p/vpPB/PRz2cfH90jVZ9Uz1U+2P0RfVP1Sd6XD149kvku7fF9UT6u
v2f0SGbvzdwP/+jokczevyd88OqRzN6XD149ktn78vH5WD2Smb19/1I+ePVI
ZvZ+vi/Kd/z+73v90eqTvC8fvHoks/flg1ePZPa+fLB7pNUneV8+2D3S6pO8
Lx9M/8T+6mDvzdwP36n+yOw+yftr4YNXj2T2vnzwE+qPVp/kvZk9vHoks/dP
hA92j7T6JO/LB68eyex9+eDVI5m9Lx+8eiSz9+WDr48eyey9mfvh1SOZvef5
vigf11ePZPa+fPDqkczelw9ePZLZ+/LBq0cye18+uHqkYu/LB1ePVH2S9+WD
V48E+7zlg1ePZPa+fPDqkczelw92f7TY+/LBq0cye18+fr1YPZKZ/fJxffVI
ZvbLd/79R/RIxT+uffng6pGqT/K+fPDqkWCft3zn7xfRIxV7Xz64eqTqk7wv
H8zv18S++iSft3zH95fukczf1r58f3F4f+keycx++Y7vL90jmdkv3/H95WKP
VOx9+b504uqRqk9iv3zH95fukWCft3zw6pHM3pcPXj2S2fvyHd9fukcye18+
ePVIZu/Ld3x/6R7J7H354NUjmb0vH7x6JLP35Tu+v3SPZPa+fMf3l+6RzN6X
7/j+0j2S2fvyHd9fukcye18++Mbokczelw9ePZL5Be3Lx69/q0cys18+rq8e
ycx++eDqkYo/o335OP+yPZPPs8/322/mv0tUr2T2/fx3leqRqk+6rI/r1SOZ
fd7ycZ3+qPom90nsy8cepj9iv/ok7zn/t+TjOv2R+6bqk7w3s+e8h9UjrT6J
vZ8PH3uurx4J9vl+Pvvgq+qRqk/yeeVjz/m31CP9+9Ensffz4WPP9dUjwT7f
z/ffyYe/eqRi78vH+Y+qR3Lf5D6JffnYw/RH1TeZvX80fLD7o+qTfH752MPu
jxZ7/2L44NUjmb0vH+z+aPVJ3pvZw69Wz/Ta6JN8vp8PZg/TH1XfZPb+1eGD
3R9Vn+Tzy8cedn+02PuPhg9ePZLZ+/LB7o9Wn+S9mT3s/sh9k697/z4x+/Nf
r0ePZPb+ufDBz44eyey9mfth90eLvX82fP5z3Ngv9r589fserT7JezN7/75G
59/vn7j6JPZ+Pv++S+6CLvuRvZ+vuqPVI9VzLB8f3TMtLo99MP1R9U1m7+En
5eO6+6Nfu/MH90k+388Hs4d/dPRIZu/fEz549Uhm78sHrx7J7H35+Hy4Z6o+
yefZB/Pn48H0R9U3mTnPz2ff8fu/7pFgn7988OqRzN6XD149ktn78sGrRzJ7
Xz549Uhm78sHuz9afZL3ZvbwnaNHMnt/LXzw6pHM3pcPdn+0+iTvzezh1SOZ
vX8ifPDqkczelw9ePZLZ+/LBq0cye18+ePVIZu/LB19Xj1R9ks8rH3uY/qj6
JrP318N3/Plc90iwz18+rq8eycx++eDVI5m9Lx+8eiSz9+WDV49k9r588OqR
zN6XD149ktn78sGrRzJ7Xz549Uhm78sHrx7J7H354OqRir0vH//8VY9UfRL7
5eO6+6Nin7d8XF89kpn98j114tUjmdkvH+f/2OiRzOyX7/z9YvRI5tdrXz7+
/laPZGa/fFxfPZKZ/fId318u9kjF39G+fMf3l4s9UvVJ3pfv+P7SPRLs85bv
+P5ysUcq9r58cPVI1Sd5Xz6Y36/p+D51kX3e8sGrRzK/pH35+O9hq0cys18+
rn999Ehm9ssHrx7J/DXty8c/36tHMrNfPq6vHsnMfvng1SOZvS8f568eycx+
+Y7vL90jmdkv3/H9pXsks/fl4/zVI5nZLx/X/8Xokczslw+uHqn4hvblO76/
XOyRqk9iv3xcd39U7POWD64eqdj78sGX7Zl8nn3VPxXz3w2qVzL7frh6pOqT
LuuDq0cy+7zlg+mPqm9yn+S9mT1Mf8R+9UnePxA+mP7IfVP1Sd6b2cMPq0da
fZL3/72YPx8PXj0S7PP9fPbBV9UjVZ/k88rHHr6lHqn6JJ/v5zv/ej3dD9Mf
Vd8E+3w/n31w9Uhmn798sPuj6pN8XvnYw6tHMnvP+XfJx3X3R6tP8t7MHl49
ktn7F8MHrx7J7D18l3xcd3+0+iTvzew5z/3R6pPY+/lg9vDqkczs/Xx3yYff
/dHqk7w3s+e81SOZ2fv54L863Q+vHsnMeX4++85/PVV/tPok783sOd/90eqT
2Pv5YPbH94vukczs/Xx3yYff/dHqk7w3s4dXj2T2/tnwwatHMntfPv85buxX
n+S9mT2fD/dHq09iX3/OnH9fJd7r2S9m7+erLondZT96Xz64/nrxus8fzy5f
+VfZN5nLc5d8/HX3R7925w/uk3y+nw9mz3mrRzKz9/O9UT549Uhm9n6+u+Q7
f18/e6Dukczel4/z3B99Y/RJ7O2D2cOrRzKz9/PdJd/x+7/ukczel+/8+48r
t++RzN6XD149ktn78sGrRzJ7Xz549Uhm78sHuz9afZL3ZvbwnaNHMnt/LXzw
6pHM3pcPdn+0+iTvzezh1SOZvX8ifPAvjh7J7L2Z++HVI5m9/8XwwatHMntf
Pnj1SGbvywe7P1p9kvdm9nD1SMXec/5d8nG9eqTqk7wvH7x6JNjnLR+8eiSz
9+WDV49k9r588OqRzN6X754Trx7JzH75uL56JDP75YNXj2T2vnzw6pHM3pcP
Xj2S2fvywdUjFXtfPn69qB6p+iT2y8f16pHMPm/5zr//iB7J7POWD64eyezz
lg9ePRLs85bv/P0ieqTiH9O+fHD1SNUneV8+ePVIsM9bvuP7UPdI5m9rX77/
8PD+0j2Smf3yHd9fukcys1++4/tL90hm78vHvx9Wj2Rmv3zH95fukczslw+u
Hqn4Ze3LB1ePVH2S9+U7vr90jwT7vOWDq0cq/rr25Tu+v1zskapP8r588OqR
YJ+3fHD1SMXel+/4/nKxR6o+yfvyHd9fukeCfd7yHd9fLvZIxd6X7/j+crFH
qj7J+/LBL4weCfZ5ywdXj1T8L7Qv3/H95WKPVH2S9+WDV48E+7zlg6tHKva+
fPz74bI9k8+r5+N++81/9t3br/yr2SvBvh9ePZL5sj74J0ePZPbezP2w+6PV
J3n/k+K3nO6HV49k/jntHwjf8yfmz89jv/ok9uVjf+PE7o/cN/k6ez8f/Aun
++HVI5k5389nH+weafVJ3peP890frT6JvX0wfz4evHokM+f7+eyD/9Hokcze
m7mf8x9Vj1R9ks/z88H8+Xgw/RHf768+ifP9fDfk45+Pv1Z/VH2Sz/fz4WPP
edUjFbP383Eefz4eTH/E860+ifP8fDfk4/z/S/1R9Uk+38+Hjz3nvVo9U/VJ
Pt/Px3mvOt1//uvRqT/Ct/okzvfz2cf5H1F/VH2Szy8fe853f/RXo09i7+fj
PP58PHj1SGbO9/PdkI/z36v+aPVJ7P18+Nhz3nPqmapP8vl+Ps77o9P9MP0R
vtUncb6f74Z8+N0jVZ/k8/189nHe6pHM7O2D+fPx+N9v9UhmzvPz2Xf+7x/1
R6tPYl8+9vDZ7Pv6o9Unef9M+ODVI5nv0x7fDfnO379O3xew/63B3pu5n/PY
XfYjez8fzP+ucP31Nwbz0c9nH59/90jVJ9VzlY+/7p6p+iSfv3ww/RG+1Sd5
D9+Qj+urR3Lv5H354FfUM1Wf5POWD6Y/wrf6pG9oXz4+P28dPRLs88vH/eff
f1y5fY9kZu/nsw9ePZLZ+/LBV0aPZPbezP0wf34e+9UneX9FzP2we6TVJ3l/
M3x8fu4YPZKZffm4n+urRzKz9/PZBz+m/mj1Sd6b2cOrRzJ7/1j4YP78PPar
T/LezB5ePZLZ+0fCB68eyex9+eDVI5m9Lx/sHqn6JJ+3fDD9Eb/+rj7Je/iG
fMefz3WPBPt8P599XF89kpn98vH3s3okM/vl4/rqkczslw+uHqnY+/JxfvVI
1SexXz6urx4J9nnLB68eyex9+eDVI5m9Lx989+iRzN6XD64eqfge7csHV49k
9nnLB/Pn2bGvPsnnLR+/fqweycx5y8fX7+qRzOyXj/PdHy1mv3zw6pHM3pcP
Xj2S2fvywatHMntfvuP70MUeqfg72pfv+P5ysUeqPsn78h3fX7pHgn3e8h3f
Xy72SMXelw+uHqn6JO/Ld3x/6R4J9nnLB68eyex9+eDVI5m9Lx+8eiSz9+WD
V49k/pr25fu/D+8v3SOZ2S8f11ePZGa/fPDqkczel+/4/tI9ktn78h3fX7pH
MntfPnj1SGbvy3d8f+keyex9+WD3R4u9L9/x/aV7JLP35YNXj2T2vnzw6pHM
3pcPrh6p2Pvy8f512Z7J59nn++0383P3W6NXgn0/vHokc/n+a/m4/k/UH60+
yXsze85zf+S+ydfZ+/lg+ib4ieiRijnfz2ff+f/PXf1R9Uk+r3zsYfdHvzD6
JO9/S/zO0/3w6pHMv6D9w+GDf2P0SGbvy/eew9fv9/qjb40+ifPsg//d6X74
g6NHMnO+n+898uF3j7T6pGe0Lx/8qHqmX4o+yeeX75dP98P0R+6bng/+Je0f
DR//e7lHqj7J5y8f190zvTn6JJ+/fDD9kfum54O9Lx/nu0eqPsnnLx/XX6P+
6FXRJ/n88nE/XD1S8au0f034OP931SOtPol9+bif619Rz/Tl6JN8vp8PH/fD
9Efum54P/rL2Xwkf57tHqj7J5y8f1z+lnumPok/y+ct3fL/4i+ybzH+kffng
1SO5d/K+fDA9E74Ho0/yecsHV49UfZL35YPdI1Wf5POWDz57rf4BPVKx9+WD
z39f3tN+9Unew/XnxLlHqj7J5/v56vdV4vsSfHeduPok9vZVp8Tn7flLfuR8
P191R/XXq096ftznj9UjmZfHPpj+qPoms/flg1ePBPv85YNXj2T2vnzwx6NH
Kn5F+/LB96tHWn3Sx7Qv3/n3H1du3yPBPn/54KdHj2T2vnzwFfVHq0/6gPbl
g90frT7pTdqXD64eqfjz2pcPfsN3P3xfj3Sn2H2S9+WDV48E+/zlg999/7E/
evz+2/dJ3pcPXj2S+XHtywe7R1p9kvflg1ePZPa+fPDqkczelw9ePZLZ+/LB
16NHKva+fPDLp/7IfdPzwZ/Qvnxw9Uhmn798cPVIZp+3fHD1SNUneV8+ePVI
sM9bPvi3o0cq9r58vD9+KXqk6pM4b/m4vnok2OctH/zU6JHM3pcP/sLokczv
17588OqRzH+uffng1SOZ79a+fPALo0cye18+uHqk4hvalw/+9eiRzD5v+fj6
/Uz0SGaft3xcf93okWCft3zw6pHMr9e+fPAnR49k9r588OqRzH+offngR0aP
ZP629uWDf3/0SOZ3aV8++JujRzL/b9qXD3776JHMf699+fj6XT2SmfOWj+ur
RzKzXz549Uhm78sH/87okczelw/+6uiRzP+L9uWDq0cq/rr25YOrR6o+yfvy
watHgn3e8sGrRzJ7X77j+0v3SGbvywevHsn8fu3LB989eiSz9+U7vr90j2S+
R/vywTdGj2T2vnzw6pHML2hfPnj1SGbvywd/dvRIZu/Ld3x/udgjFf+J9uX7
9RP/6iV7Jp9nn++33/wjp5+Lr/4J9v0w/VH1TebL+mD3SNUn+fzlg90f0TdV
n+S9mT28eiSz95z/o/LB9E/HXw+7T+I8Px8+9q87sfsj902+zt7PB9M3watH
MnO+n+9H5MO/eiSz9+WDb6ln+nfRJ/m88rGH6ZGqbzJ7z/k/Ih/Xf2L0SLDP
9/PB3A+7P3Lf5Ove/0T44OqRin9Z+/LB1SNVn+R9+eB7R48E+7zycT9cPVKx
9/eGD64eqfok78sHu2cy0yf5vOU7//UoeqRi78sHu0f6yOiTvC8f7J7JTJ/k
85cPrh6p2PvywdUjVZ/kffng50aPBPu85YNXj2T+lPblg1ePZPa+fPBDo0cy
e2/mfnj1SGbvHwofvHoks/flg386eqRi78sH0x9V32T2vnzw6pHcO3lfvvp9
j87/fyhin1e+u073uyNivzqmN2pvxucu6LIf/0z78sGrR6rnWD4+rh7JXB77
4NUjmb0vH7x6JLP35YM/9uDteyTzN7QvH7x6JPPHtS/f+fcfo0cy3699+eCz
D7fpkczelw9ePZL5ae3LB7s/WnxFe/vom+Bro0cy39TezP3w2ew2PZLZ+2vh
g1ePZH6D9uWDzy7fpkcye18+ePVI5ndrXz549Uhm78sHrx7J7H354NUjmb0v
H7x6JLP35YNXj2T2vnzw6pHM17UvH7x6JPPL2pcPXj2S2fvywatHMntfPnj1
SGbvywdXj1Tsffn4+WL1SNUncd7ycX31SLDPWz549Uhm78sHrx7J/JT25YPd
Hy3+gvblg1ePZPa+fP/BiVePZGa/fFx3f7SY85YPrh6p2Pvy8fVbPVL1SZy3
fFxfPRLs85YPXj2S+XXalw9ePZLZ+/LBq0cyf1L78h3fX7pHMn9H+/Lx9bt6
JDPnLd/x/aV7JDPnLd/x/eVij1T8Te3Lx9dv9UjVJ3He8h3fX7pHgn3e8sGr
RzJ7Xz549Uhm78t3fH/pHsn8O9qXD149kvmr2pfv+P7SPZLZ+/LBq0cye18+
ePVIZu/Lx9fv6pHM7Jfv+P7SPZKZ85bv+P7SPZLZ+/Jx/uqRzJy3fFx3f7SY
/fLBq0cye18+zl89kpn98nF99Uhm9ssHV49U/Fnty/f6E1+2Z/J59vl++838
3Np9UrHv/4MTrx7JfFkf11ePZGa/fFynP6q+ydfZl4897P4Idp/k8/18n5SP
6+6PVp/kvZk9f38Pq2f6heiTfL6fD987Tvdznf6o+iYz5/v57IOvjh4J9vnl
437Ov6Ueqfokn+fnw8ee6/RH1TeZ2fv57IPdH1Wf5PPLx57z3R8tZu/nsw9e
PZLZ+/Lxz9vqkczsl4/r7o9Wn8R++eDVI5nfrD2+T8oHrx7JzN7PZx/XV49k
Zr988OqRzN6Xj/PdHy1mv3xcXz2Smf3ywatHMntfPs5fPZKZ/fJx3f3RYvbL
B68eyex9+eDVI5m9Lx/s/ujB0Sd5b2YPrx7J7P1D4YNXj2T2vnzw6pHM3pcP
Xj2S2fvywatHMntfPv75cH/kvsnX2dtXf06c+6PF7P18fyBfdUOLvS+fu6DL
fvS+fPDqkeo5lo+Pq0cyl8c++OzDbXoks/flgz/24O17JLP35Tt+/9c9ktn7
8sGrRzJ7Xz74bHabHsnsfflg90eLvS8f7P7IfZOve29mD7s/Wn2S9zfF7OGz
f7xv0yOZvb8WPnj1SGbvywefXb5Nj2T2vnzw6pHM3pcPXj2S2fvywatHMntf
Pnj1SGbvywevHsnsffng1SOZvTdzP+z+aLH318N3/Plc90hm9svH9dUjmdkv
H+9Hq0cys18+rq8eycx++WD6I/aLvS8f59MfuUeqPon98nF99Uiwz1s+2P3R
Yu/LB7s/Wux9+eDVI5m9Lx9cPVKx9+Xjn78b0SNVn8R++bi+eiTY5y0f1+mP
8C1mv3x8/X42eqTqk9gvH+e7Pyr2ecsHrx7J7H35YPdHi70vH+z+aLH35Tu+
v1zskYq9L9/x/eVij1R9kvflO76/dI8E+7zlO76/XOyRir0vH1w9UvVJ3pcP
fnn0SLDPWz549Ujml7Qv3/9+YvdHi9kvH9f5/ZqO7zfN7JcPXj2S+Wval49f
X1ePZGa/fFxfPZKZ/fLB1SMVe18+zqc/co9UfRL75Tu+v3SPBPu85Tu+v1zs
kYq9Lx/nV49UfRL75eP6C6NHgn3e8sHVIxXf0L58x/eXiz1S9Unsl4/r7o+K
fd7ywdUjFXtfPrj6JbPPs6/6p2J+rly9ktn3w9UjVZ90WR9cPZLZ5y0fTH9U
fRPXfV752MP0R9U3mb1/IHww/ZH7JvdJPr987OGH1SO9Y/RJ3j8pZg+vHgn2
+X4+++Cr6pGqT/J55WMP31KPtPok76+K2cOrR4J9vp/PPvgn1CNVn+Tzysce
Xj0S7PP9fPbB1SMVe18+uHqk6pO8Lx/snqnY5y0f7P6o+iSft3xw9UjF3pcP
Xj0S7PPK99rT/XD1SMWv1t7M/XD1SNUneV8+ePVIsM9bPrh6pGLvy3f+62n0
SNUneW/mfnj1SLDP8/PZd3y/6B7J7H354NUjmb0vH+z+6MHRJ3lvZg+vHsns
/UPhg1ePZPa+fPDqkczelw9ePZLZ+/LBq0cye18++I3qmapP8nnL5z/Hrfom
813al69+36Nin7981Q0t9r587oIu+9H78sGrR6rnWD4+nl2+TY9kLo998Mce
vH2PZPa+fMfv/7pHMntfvvPvP0aPZPa+fPDZp/82PZLZ+/LBq0cye18+2D3S
6pO8Lx/s/mj1Sd6b2cNn/3jfpkcye38tfPDqkczelw9+fPRIZu/LB68eyex9
+eDVI5m9Lx+8eiSz9+WDV49k9r588OqRzN6XD3Z/tPok783s4eqRir2/Hj64
eqTqk7wvH1w9ktnnLR9cPVL1Sd6XD149Euzzlg+uHqnY+/LB1SNVn+R9+eDV
I8E+b/ng1SOZvS8fvHoks/flg1ePZPa+fHD1SMXel++dJ64eqfok9svH9eqR
zD5v+eDqkcw+b/keOXH1SGaft3xcXz0S7POWD149ktn78sGrRzJ7Xz549Uhm
78t3fH/pHsnsffn4+l09kpn98h3fX7pHMrNfvuP7S/dIZu/Lx9fv6pHM7Jfv
+P7SPZKZ/fLB1SMVv6x9+eDqkapP8r58x/eX7pFgn7d8cPVIxV/XvnzH95eL
PVL1Sd6XD149Euzzlg+uHqnY+/Lx9Vs9UvVJ7Jfv+P7SPRLs85bv+P5ysUcq
9r58nF89UvVJ7JeP66tHgn3e8sHVIxW/oH35ju8vF3uk6pO8Lx+8eiTY5y0f
XD1Ssffl4/Nz2Z7J59Xzcb/95rPbH//K7JVg3w+vHsl8WR+8eiSz9+WD3R+t
Psl781tO98OrRzL/nPac/w35uO7+aPVJ3pvZw+6PVp/k/ZNi9vDqkczePxw+
2P3R6pO8N7Pn8+H+aPVJ7P188LdO98OrRzJzvp/PPtg90uqTvC8fvHoks/fl
g1ePZPa+fPzvt3okM/vl4/rqkczsy8fv/wSvHsl8r/Zm7uf81SOZ2S8f190f
uW/ydfble9Xpfnj1SObXav/q8HH+R0aPZGZfPu7n+uqRzOz9fPi+fLofXj2S
+S+1N3M/57tHWn0S++Xj+uqRzOyX7/h+0T2S2fvywatHMntfPtj90eqTvDez
53+/1SOZ2fv57Dv/98/okczsy8f98OqRzN4/Ez549Uhm78t3/v41eiSz92bu
538/90eL2fv5YPomePVIZs7z89lXf27bYvbLx/XVI5nZLx/M933sF3tfPpjd
ZT96Xz64/nrxus8fV49kLo99fH7eOnokM/vycf/59x+jRzKz9/PZB68eyex9
+eAro0cye2/mfvjm6JHM3l8Rc//592fqj1af5P3N8PH5uePx2/dIZvbl436u
rx7JzN7PZx/8+OiRzN6XD149ktn78sGPjB7J7L2Z++HVI5m9fyR88OqRzN6X
D149ktn78sHukVaf5H354NUjmb0vH7x6JLP35YNXj2T2vnzw6pHM3pcPXj2S
2fvywatHMntfPn79Wz2Smf3ycX31SGb2ywevHsnsffng1SOZvS8ffPfokcze
lw+uHqn4Hu3LB1ePZPZ5ywevHgn2ecsHV49U7H35+PqtHqn6JPbLx/XVI8E+
b/ng1SOZvS8fvHoks/flg1ePZPa+fMf3oYs9UrH35Tu+v1zskcw+b/mO7y/d
I8E+b/mO7y8Xe6Ri78vH12/1SNUnsV++4/tL90iwz1s+ePVIZu/LB68eyex9
+Y7vL90jmb0vH7x6JLP35Tu+v3SPZPa+fPDqkczelw+uHqnY+/Id318u9kjV
J3lfvuP7S/dIsM9bPrh6pGLvy3d8f7nYI1Wf5H35ju8v3SPBPm/54NUjmb0v
3/H9pXsks/flg1ePZPa+fHD1SMXel49/P1y2Z/J59vl++80fP/1cdvVKsO/n
57qrRzJf1sf11SOZ2S8f1+mP2Ltv8nX25aNvgumPqm8yv0V7zv+EfFx3f1R9
ks/388HsYfdHq0/y/kkxe3j1SGbvHw4f7P5o9Unem9nD7o++Nfok76+K6Zvg
1SOZv6X9rfDBq0cye18+ePVIZu/LB1ePVOx9+fjnrXqk6pPYLx+/frg/ct/E
dZ9nH+exh6tHKmbv57OP8/80eqTqk9iXj/s53/2R+yau+zw/H+exh6tHKmbv
57OP8z+iHmn1SezLx57r7o/cN3Hd5/v57IOrRyr+svb4Pi4f51ePVH0Sez+f
fVxfPRLs85bv+H7RPZLZ+/LBq0cye18+Ph/0R+yrT/J59sHs8VePVH2S9w+F
7/zfP+qPqk/yeeVjD68eyez9M+GDV49k9h7+uHxcd4+0+iTvy8d57o/uGn0S
e/tg9nD1SMXs/Xz2cf3s26Yf0CNVn8R++bi+eiTY5y1f/b5Hi70vX3VDi70v
nzuhy370vnxw/fXidR8f+fy8VT3S6pPssY/9+fcfo0eCfb6fzz549Uhm78sH
u0dafZL35YPdH60+yXsz+/Pvz6JHKvb+Zvj4/NAfuW+qPol9+dhzffVIsM/3
89kHPz56JLP35YNXj2T2vnywe6TVJ3lfPnj1SGbvywevHsnsffng1SOZvS8f
vHoks/flg1ePZPa+fPzzsXokM/vl4/rqkczsl4/rq0cys18+rq8eycx++eDq
kYq9Lx/nV49UfRL75eP66pFgn7d88OqRzN6XD149ktn78sGrRzJ7Xz549Ujm
u7Uv30dPvHokM/vl4/rqkczsl4+vr+qRitkvH1w9UvVJ3peP81ePBPu85YNX
j2T2vnzw6pHM3pcPXj2S2fvyHd9fukcye1++4/tL90hm78t3fH/pHsnsffmO
7y8Xe6Ri78vH12/1SNUnsV++4/tL90iwz1s+ePVIZu/LB68eyex9+eDVI5m9
Lx+8eiSz9+U7vr90j2T2vnzw6pHM3pcPXj2S2fvyHd9fukcye1++4/tL90hm
78t3fH/pHsnsffmO7y/dI5m9Lx/8wuiRzN6XD149kvmG9uWDV49k9r588OqR
zN6XD64eqdj78vHvh8v2TD7Pvuqfiu8//dz0VvRKZt8PV49kXr7/XD6u/5Po
kapP8t7M/TD9EXv3TVz3eX4++J+e7oefOPVH1TeZf057zn+bfFz/b9UfVZ/k
8/18MHt+ru7+aPVJ7P18PP87T/dzffVIZs7389kHv1f90eqTvDf/xun+tx2+
fr/XH7lv8nXO9/PhY8/1D44eyczez/c2+fCvHsn8jPbl47zVI5nZl++XT/fD
1SMVP6q9mfs5/6+jR6o+iX35uJ/r7pmqT/J5fj58P3W6H64eqfjN2pu5n/Pd
I60+if3ycf016o+qT/L55WMPV49U7P1rwsf5v6seafVJ7MvH/Vz/SvRIZp/v
58PH/TD9kfumjwV7/5XwcX71SGafv3xc/9TokWCfVz7uh1ePZPb+U+GDV49k
9r588NnsD7pvekjXvS8f//tVj1R9Evvl4/rZ5Ve6b6JP8nnLx/tF9UjF7O17
m3ww/VH1TWb2fj774CdHj+TeyXsz98Puj1af5P2TYvbwn0WPVOw9579VPj7/
vxY9UvVJnOfns4/rq0eCfd7y1Z/bttj78tXve7TY+/K5K2L/ymD29fs0/e3p
fndCH7vkR87z871VPj4/9+uvrz7pY3GffVxfPRLs85cPfvpM1D2S2fvywVdG
j2T+gPblg28+eeyPVp/0Ju3LB1+NHqn489qXj8/LHeqRVp/EvnxvON3P9dUj
wT7fz2cf/O7RI5m9Lx+8eiTz49qXD149ktn78sGrRzJ7Xz549Uhm78sHrx7J
7H354NUjmb038/tNwS9Hj1T8Ce3ht8p3/PncxR6p+iTO8/PZx/Xqkcw+b/ng
6pGqT/K+fPB9o0eCfd7ywb8dPVLxz2hfPvhL0SNVn/Q/a18+ePVIsM9bPvip
0SOZvS8f/IXRI5nfr335YPdHi/9c+/LB1SMVe18+/nvGC9EjVZ/Efvm4Xj2S
2ectH79+/ProkWCft3xc/0z0SMWct3zw60aPBPu85YNXj2R+vfblgz85eiSz
9+WDV49k/kPtywc/Mnoks/fl49/Hvz96JDPnLR/Xvzl6JDPnLR/89uiRiv9e
+/LB1SNVn/Tz2pcPXj0S7POWD149ktn78vHrx++MHsnMfvm4/tXRI5k5b/mO
7y/dI5m/pn35+PpdPZKZ/fId31+6RzKzXz549Uhm78t3fH/pHsnsffng1SOZ
3699+eC7R49k9r58fH5Wj2TmvOXj+uqRzOyXD149kvkF7cvHP9+rRzKzXz6u
f3b0SGb2y3d8f7nYIxX/ifblg3/1kj2Tz7PP99tv5ueaq3+CfT9Mf1R9k7l8
fyXf8eeu/6t+znuxT/L5fj77YPqj6pt83XszfRNMj3R8X+0+6Z9qz/n/Rj6u
P60eafVJT2hvH/t/fWL6I/bvHH0Sez8f/K7T/fDqkWCf7+ezD76qHuk3ok/y
eeWjb4LdH1Wf5PP9fDB7mB4Jn3ukD+q695z/b+Tj+j3RI1Wf9EHt7eN+2P2R
+yau+zw/H/wrp/vh6pGKf1n7R8MHv6geafVJ3pvZw/eqP3LfRJ/k8/189sHV
IxX/lPblg/80eqTqk7w3cz/8avVH1Sf5PD+ffXD1SMWv0r58sHukj4w+yfvy
we6Rqk/y+csHV49U7H35zn89jR6p+iTvzdwPu0eqPsnn+fngT5/uP75fdI9k
fk57M/fDq0cye18+mP6J/YODvS8fXD1S9UkPal8++MNXb98jwT6vfNzP+4X7
o9Unsffzwfed7odXj2TmPD+ffbB7pNUneV8++I3qkapP8vnLB9MjuW96W/Bd
2uP71/Jx/T3RI5l9vp8P5n549Uiwz/Pz2QevHsnsffnqz21b7H35/Psgsf/b
6JN83vK5I3Lf9Lbgv9W+fO6C3CP5o89fvvPvP+Kvm33e8vHx7NN/mx7JXB77
4NUjmZ/Wvnzw6pHMV7QvH3wteqTim9rbx/2we6Q3jD7J+2vhg1ePBPv85YNX
j2T2vnzw6pHM79a+fPDqkczelw9ePZLZ+/LBq0cye18+ePVIZu/LB7tnMrtX
8t7M/TA9kvumtwVf196MD64eyezzlw9ePRLs85YPXj2S2fvywatHMntfPnj1
SOb7tC8fvHok829rXz549UjmL2lfPnj1SGbvywevHsn8lPblg1ePZP6C9uWD
q0cq9r58fL9RPVL1SeyXj+vVI5l93vKdf/8RPVL1Sd6XD149Euzzlg9ePZL5
M9qXD149kvl12pcPXj2S2fvywatHMn9S+/Id318u9kjF3pePr9/qkapP4rzl
O76/dI8E+7zlO76/dI9k/qb25YNXj2R+u/blO76/dI9k9r58cPVIxd6XD64e
qfok78sHf330SLDPWz64eqTir2pfPr5+q0eqPon98nF99Uiwz1s+ePVIZu/L
d3x/6R7J7H35ju8v3SOZn9K+fMf3l4s9UrH35Tu+v1zskapPulv78sGrR4J9
3vLB1SMV39C+fMf3l4s9UvVJ3pcPXj0S7POWD64eqfiz2pfvqye+bM/k8+r5
uN9+8wdOP3d071Ts+/k5Jv1R9U3m8v2P8n3g8HPZ7pFgn+/ns4/r9Ef43Df5
OvvysYfpj6pvMnvP+R+Qj+vuj6pP8vl+Ppg97P7oXaNP8p7zeX725z8HHz2S
2fuHwwe7P3Lf5Ovem9nz93NLPVL1ST7fz4ePPdfpj6pvMrP389kHuz+qPsnn
l48957s/ct/k6+z9fPbBq0cy/4r2+J6Wj+vuj1af5L2ZPez+aLH3L4YPXj2S
2Xv4afm4/jn1R6tP8t7MHnZ/tNj7z4UPXj2S2Xv4afm47v5osffl47zVI5nZ
2wf/1el+ePVIZs7z89kHuz9afZL3Zvac7/7IfZOvs/fzwezh1SOZ2fv5npYP
/7OjRzJ7b+Z+2P3RYu+fDR9/P6tHMrNfPq67P1p9Evvysee6+6P7Rp/E3s8H
s4dXj2Rm7+ezD149ktn78sHumRZ7Xz6Y/qj6JrP38NPywe6Pqk/y+X4+fOy5
/qMfuH2PZGbv57MPXj2S2fvywatHMntfPv7+3B8tZm/fB+SDzz7cpkcys/fz
+fdZqm5oMXs/n31cP/++5JIf2S8fXH+9eN3nj+6PFpfHPtj90WLvywe7P1p9
kvdm9nx+3B8tZu/ns4/rq0cys18+2P3RYu/LB68eyex9+eDVI5m9Lx+8eiSz
9+WDV49k9r588OqRzN6XD3Z/5L7J1703s4fdHy32nvOflu/487nukczs/Xz2
cX31SGb2ywevHsnsfflg90eLvS8f7P5osffl+59O7P5oMfvl4/rqkczslw92
f7TY+/Lx9eX+aDH75eP66pHM7JcPrh6p2Pvycf6N6JGqT2K/fFxfPRLs85bv
/PuP0SOZ2S8fX7/ujxazXz7Od3+0mP3ywatHMntfPtj90WLvywevHsnsffmO
7y8Xe6Ri78vH55/+yD1S9Unsl+/4/tI9Euzzlu/4/tI9ktn78sGrRzJ7X77j
+0v3SGbvywevHsnsffn4/Lg/Wsx++bju/mgx++WDq0cq9r58nF89UvVJ7JeP
66tHgn3e8sGrRzJ7X77j+0v3SGbvywevHsnsffmO7y/dI5m9L9/x/aV7JLP3
5YPdHy32vnzw6pHM3pfv+P7SPZKZ/fJx3f3RYvbLB1ePVOx9+Xj/qn7J7PPs
8/32m/m5YPVKZt9/5cT0R+6bqk8q338k3/H/d3qxRzL7fD+ffVynP6q+yX0S
+/Kxh+mP2K8+yfsHwgfTH1Xf5D7JezN7mP6I/eqTvOd8/vdiz/XVI8E+38/3
Jvm4flU9UvVJPs/PB7PnvFvqkVafxN7Ph48911ePBPt8P5998D3qkapP8nnl
Yw+7Zyr2+X4+/n4eO90P0x9V32TmPD+ffbD7o+qTfH752MPVIxV7/2L4YPqj
6pvM3pcPdn9UfZLPLx97uHqkYu8/Fz6Y/qj6JrP35YNXj+Teyfvywe6P/mr0
Sd6b2cOrRzJ7/5fhg90frT7JezN7+Dn1TNUn+Xw/H8wepj+qvsns/XPhg90f
VZ/k88vHHq4eqdj7Z8PHr6/VI1WfxH75uO7+6EPRJ/m88rHnuvuj1Sex9/PB
7OHVI5nZ+/nsg1ePZPa+fHD1SMXelw92f1R9ks+z74p88HvUI1Wf5PP9fPjY
c/3sw216JNjn+/nsg1ePZPa+fPDqkczel4+/P/dM1Sf5PPtgfr8p/7ltl/1z
5DjPz2cf16tHKma/fNUNFa8/h666JDyX/eh9+eDVI9VzLB8fV49kLo998DX1
SNUn+bzysefzUz1S9Uns/Xz2cX31SLDPWz549Uhm78sHrx7J7H35zn8eMXok
s/flg1ePZPa+fPDqkczelw9ePZLZ+/LB19UjVZ/k88rHHnZ/VH2Sz/fz2QdX
j1Tsffng1SPBPm/54NUjmb0vH7x6JLP35YOrRyr2vnxw9UjVJ3lfPnj1SLDP
Wz64eqRi78sHV49UfZL35YNXjwT7vOWDq0cq9r58/PuzeqTqk9gvH9erRzL7
vOWDq0cy+7zlg6tHMvu85YNXjwT7vOWDV49k9r588OqRzN6XD149ktn78h3f
Xy72SMXel4+v3+qRqk9iv3zH95fukWCft3zH95fukczelw9ePZLZ+/Id31+6
RzJ7Xz64eqRi78vH56d6pOqT2C8f11ePBPu85YOrRyr2vnycXz1S9Unsl4/r
q0eCfd7ywatHMntfvuP7S/dIZu/Ld3x/6R7J7H35ju8v3SOZvS/f8f2leySz
9+WDV49k9r58cPVIxd6X7/znu9EjVZ/Efvm4vnok2OctH1w9UrH35fuPT3zZ
nsnn2ef77TffPP3crnols+/n5370R+6bqk8q3/8j3xee/P7fF/9ij2T2+X4+
+7ju/qj6JJ9XPvbw6pHM3j8QPv73oz+qvsnX2ZePPez+qPokn+/n4zz2XKc/
wl99ks/389kHX1WPtPok783s+fu5pR5p9Uns/Xz42HN99Uiwz/fzfV4+/Peo
R6o+yef5+WD2sPujx6JP8vl+Pp6fPbx6JDN7P99N+fC7P1p9kvdm9vDqkcze
vxg+ePVIZu/hm/Jx3f3R6pO8N7PnvNUjmdn7+eDXnu6HV49k5jw/30358H90
9Ehm783cz3nuj1afxN7PB7OHV49kZu/nuykffvdHq0/y3sye89wfrT6JvZ8P
Zn98v+geyczez3dTPvzuj1af5L2ZPVw9UrH3z4aPv5/qkapPYr98XHd/9KHo
k3xe+dhz3f3R6pPY+/lg9vDqkczs/Xz2watHMntfPrh6pGLvywe7P6o+yefZ
d1M++D3qkapP8vl+Pnzs4bPZbXok2Of7+T4vH7x6JDN7P99N+fCvHsnsffk4
z/3RN0afxN4+mD189m3xD+iRitn7+W7KB1ePVH0Sez+fffX7HhX7vOWrbmix
9+VzF3TZj96XD149Uj3H8vHxmnqk6pOWh4/s+fxUj1R9Ens/n31cXz0S7POW
D35i9Ehm783cD68eyez9E+E7/3nE6JHM3pcPXj2S2fvywatHMntfPnj1SGbv
ywe7P1p9kvdm9jB/nh371Sd5z/n888D9x5/PdY9k9v7l8MGrRzJ7Xz549Uhm
78sHrx7J7H354NUjmb0vHz/fXT2Smf3ycX31SGb2ywevHsnsffn452H1SGb2
y8f11SOZ2S8fXD1Ssffl4/zqkapPYr98XF89Euzzlg9ePZLZ+/Lx9bt6JDP7
5eP66pHM7Jfv/P1i9Ehm78vH52f1SGb2y8f174weycx++Y7vLxd7pOJva18+
zq8eqfok9st3fH/pHgn2ect3fH/pHsnsffng1SOZvS/f8f2leySz9+WDq0cq
fkn78sHVI1Wf5H354NUjwT5v+eDqkYq9Lx9fv9UjVZ/Efvm4vnok2OctH7x6
JLP35Tu+v3SPZPa+fPDqkczel+/4/tI9ktn78vH5WT2Smf3ycX31SGb2ywdX
j1TsffmO7y8Xe6Tqk7wvH7x6JNjnLR9cPVKx9+WDL9sz+Tz7fL/9Zn6uVr2S
2ffD9Efumz4vXr6r8nH9J6NHMvt8Px/M/Zzn/qj6JJ/n54Pfcrofrh6pmPP9
fPbBT6pHWn2S92b2nE9/dP4+Ofok9n4+fO843X/+5xKMHgn2+X4+++D3qkeq
PsnnlY8957s/qj7J5/v58LHnOv0RvuqTfL6fzz7YPdLqk7wvH+c/qp5p9Uns
lw+mP6q+yfyY9uXj/L9Wf1R9ks8vH3u4eqRi73k+znvz6X6Y/qj6JjPn+fmu
yQe7R6o+yef7+eyDX62e6bXRJ/l8+zjvVaf7Yfqj6pvMnO/ns4/rH1F/VH2S
zy8fe/gv1TNVn+Tz/Xyc9+XT/TD9UfVNZs73812T7/zXP/VH1Sf5fD8fPvbw
c+qZqk/y+X4+zvuj0/3H95W/yL7JzPl+vmvy4XePVH2Sz/fz2cd51SMVs7cP
fvB0P1w9UvVJnOfnsw9+Rv1R9Uk+r3zsYfdHq0/y/pnwwatHMt+nPb5r8nH9
H2bdI5m9N3M/51WPVMzezwffdbofPrv8ff0R/PlgzvPz2Qe7R6o+yecvH+ef
fVv2fT0TXH0Se/uuygfTH1XfZGbv57smH/7VI7l38r588CvqmapP8nnLB39M
/dHHok/y+csHvzV6pGLvzdwPrx4J9nl+Pvv8+yDhW+x9+fz7JLF/02Dvzdzv
zujzl/zo/RUx98H11+FrYt93M3x8vCN6pOqTysNH7odXjwT7PD+fffBj6o9W
n+S9mT28eiSz94+FD35k9Ehm783cD68eyez9I+GDV49k9r588OqRzN6XD3aP
VH2Sz1s+mB6p+ib3Sd6Xj3/uV48E+/zl4/rqkczsl4/rq0cys18+rq8eycx+
+eDqkYq9Lx/nV49UfRL75eP66pFgn7d8cPVIxd6Xj/OrR6o+if3ycf3u0SPB
Pm/54OqRiu/Rvnz/zYmrR6o+if3ycX31SLDPWz7+96seqZj98sHVI1Wf5H35
OH/1SLDPWz64eqRi78vH+dUjVZ/Efvm4vnok2Oct3/F96GKPVPwd7ct3fH+5
2CNVn+R9+Y7vL90jwT5v+Y7vL90jmb0vH5+f1SOZ2S/f8f2leyQz++WDV49k
fln78nH+6pHM7JeP618bPZKZ/fLB1SMVf1378h3fXy72SNUneV8+ePVIsM9b
Pnj1SGbvy3d8f+keyex9+eDVI5m9Lx9cPVKx9+U7vr9c7JGqT/K+fPCN0SPB
Pm/54NUjmV/QvnzH95fukczsl4/rq0cys18+uHqkYu/Lx/mX7Zl8Xj2f+6di
fg52a/RPsO+H6Y94ntUnle8O+bj+s+qPqk/y+X4+mD3s/oi+CZ+ve/+zYvom
+InRI5nfov0D4YP/B/VI1Sf5vPKx5/PxsHqkd4w+ib2fD37n6X549Uiwz/fz
vUG+85/zqkeqPsnn+fng3zjdf/z6/V6PtPqk92l/Vcwe/uDokWCf7+d7g3xc
vyt6pOJntLeP+2H3R8U+z89nH1w9UrH35YNfVI+0+iTvzez5+nXP9ObRJ7H3
88HcD7s/qj7J5/v57IM/Fz1Ssfdm7odfo/7oVdEn+Tw/n31w9UjFr9Ie3x3y
cf0j6pFWn+R9+eCvqGf68uiTfk/78sHuj6pP8vnLB79PPVL1ST6/fOz5fHxK
PdMfjT6JvZ/vTvmO7xd/kX2TmfP9fHfIh5/+iX31ST7fzwdzP+ye6cHRJ3n/
rJj7+ffN6pHMnO/ns4/r7pFWn8R++fh8uGdazN4+mL4Jpj+qvsnMeX4++2D3
SNUn+fzlg90f3TX6JO/LB//Zdy/fpkcy36U9vjvk4/NP/8R+9Umc5+fDx/1c
d89UfZLP8/PZB9MfVd9k9r588OqRYJ+/fHw+Vo9kZm/fnfLBHx89kpnz/Hx3
yMfnxz3S6pM4z8+H7/7T/efff4weycz5fj774KdHj2T2vnyw+6PVJ31A+/Xn
vrk/ckfk62/Sfv2+Sb952l295MfPa1/dEZ+fN+iv+z73Sb7vN8PH9dUjme+U
p3zw2Yfnu29yn+S9+d2n++HVI5kf197M/bB7pNUneV8+ePVIZu/LB68eyex9
+eDVI5m9Lx98ffRIZu/LB9M/sa8+yefZd4d8/HPxs9EjVZ/EeX4++7hePZLZ
5y0fXD1S9Unelw9ePRLs85YP/u3okYq9L9+Pn/hL0SNVn8R5y8f11SPBPm/5
4KeiRyr2vnz88/CF6JGqT+K85eP66pFgn7d8cPVIxXdrXz7OfyF6pOqT2C8f
16tHMvu85ePXj18fPRLs85aPr9/PRI9UzHnLx/k/Nnok2OctH1w9UvHrtS8f
/MnokapP8r588OqRYJ+3fPAjo0cyf1v78vH1+/ujRzJz3vJx/ZujRzJz3vLB
b48eqfjvtS8fXD1S9Uk/r3354H87eiTY5y0fXD1S8Uval4/Pz+9Ej1R9Evvl
O76/dI8E+7zlg1ePZPa+fJy/eiQz++Xj+uqRzOyXD149ktn78h3fX7pHMntf
Pnj1SOb3a18++O7RI5m9L9/x/aV7JPM92pcPdn+02PvywdUjFXtfvvOf70aP
VH0S++Xj+mdHjwT7vOWDq0cq/hPty8f7169esmfyefb5fvvNf3z6udTqn2Df
z8+16I+qbzKX7/+Qj+vukapP8vl+Pvu47v7IfZOvsy8fe3j1SGbvHwgfTP90
/PWw+6QntLePPfyweqZ3Rp/k8/18MH0TTH9UfZP5ndpz/h/Ld/5zX/VH7pu4
7vP9fDB9E3xLPVL1ST7fzwezh+mRqm8ye38rfLB7pOqTfP7ywatHMntfPnj1
SGbvy8fXk/uj1SexLx97rrtnunf0Sez9fPi4H149kvle7c3cz/nukVafxH75
uP7q6JGK2ZePvgmmP6q+yfwa7V8dPs5fPRLs85eP6385eiQz5y0fvHok81e0
Lx/nu0dafRL75eP6c+qZ3CO5d2K/fMf3i7/Ivsn8Ke3LB7tHqj7J5y8f/JB6
JLN7Je/N3A9Xj1R90kPam7kfXj0S7POWD3Z/dN/ok7wvH7x6JPN92pcPXj2S
2fvywe6ZFntvpm+C6ZHcN90Z/Ebtzfhg90jVJ/n85YNXjwT7/OWDV49k9r58
8OqRzN6XD35FPZN7JPdO3pcPpkdy33Rn8De0Lx/sHul+Mdd9/vKdf/8xeiTY
5y8fvHoks/fl85/jxn79OXJPa1+++n2PFl/R3r76fY7Ov18U/6b4pvZm9u6C
3CNVn+R9+eDVI8E+b/n4eHb5+e6bfL089sGrRzK/W/vywatHMntfPnj1SGbv
ywevHsnsffng1SOZvS8fXD1Ssfflg+mR3DfdGXxd+/LB1SOZff7ywatHgn3e
8sGrRzJ7Xz549Uhm78sHV49U7H35PnPi6pGqT+K85eP66pFgn7d8cPVIxd6X
D64eqfqkp7QvH+z+qNjnLR9cPVKx9+Xjv2dUj1R9Evvl43r1SGaft3xw9Uhm
n7d8fP1Wj2T2ecvH9dUjwT5v+eDVI5l/TPvywatHMntfPnj1SOZPal++4/vL
xR6p+Dval+/4/nKxR6o+6RHty3d8f+keCfZ5y3d8f+keyfxN7cvH1+/qkcyc
t3zH95fukczslw+uHqn432pfPrh6pOqTvC8fzO/XdHy/ucg+b/ng6pGKv6Z9
+Y7vLxd7pOqTvC8fvHok2OctH7x6JLP35Tu+v3SPZPa+fMf3l+6RzE9pX77j
+0v3SGbvy3d8f+keyXy39uWDXxg9ktn78sHVIxXf0L58x/eXiz1S9Unelw9e
PRLs85YPrh6p+LPal49/P1y2Z/J59vl++81ntz//vT7pj0/Xi30/TH/kvun/
FC/fY/JxvXoks8/389kHuz+qPsnnlY897P5osfcPhA92f7T6JO/N7OGH1SO5
b/J1758Us4fpj/jfd/VJ3nP+E/Jx3f2R+yau+3w/H8wedn+0+iTvr4rZw+6P
FnvP+U/Ix/XVI5m9Lx+8eiSz9+WDq0cq9r58/O/1onqk1SexLx972P2R+yau
+3w/H+exh6tHKmbv57OP69UjmX3e8nHd/ZH7Jq77vOWDq0cqfpX25eP834se
yezzlo/r7o+Kfd7ywdUjFXtfPs6vHsns85aP6+6Pin3e8h3fL7pHMntfPnj1
SGbvywe7P3Lf5Ovel4//Trl6JDPnLx/XV49kZr98vI+6P1rM3r7H5YNXj2Rm
7+d7Qj78q0cye18+znN/5L7J19nbB7OHnx89kpm9n+8x+fj8rx7JzN7PZx/X
V49kZr988OqRzN6XD149ktn78sHujxZ7Xz7Y/dFi78vH58f90WL2y3f+/cfo
kczslw92f7TY+/LB7o8We18++Gz20/vPjfN55fOf03Zt9Ehm72+Kud8dEfvF
7P181SWxu+xH9ssH118vXvf54+qRzOWxD149ktn78sGrRzJ7Xz549Uhm78sH
rx7J7H35YPdHi70vH+z+aLH35YPdHy32vnzw6pHM3pcPXj2S2fvywatHMntf
Ppj+iP1i78vH+yP9kXuk6pPYLx/XV48E+7zlg90fLfa+fLD7o8Xelw9ePZLZ
+/LB1SMVe18+vt+4ET1S9Unsl4/rq0eCfd7ywfRH+BZ7Xz6+fj8bPVL1SeyX
j+vuj4p93vLBq0cye18+2P3RYu/LB7s/Wux9+Y7vL90jmb0vH1+/7o8Ws1++
4/tL90hm9st3fH+52CMVe18+vn6rR6o+if3yHd9fukeCfd7ywatHMntfPr6/
cX+0mP3ycd390WL2ywevHsnsffmO7y/dI5m9Lx+8eiSz9+WDV49k9r58x/eX
7pHM3pfv+P7SPZLZ+/Id31+6RzJ7X77j+0v3SGbvywe7P1rsffng1SOZvS8f
/3yvHsnMfvm47v5oMfvlg6tHKva+fPz7ofols8+zD64+yufxc53VP8G+H6Y/
qr7JXL5vy8f11SPBPt/PZx/nuT9afRJ7+2D28OqRzOz9fPbB7o9Wn+S9mT3n
P6weqfokn+/ng991uh+mP6q+ycz5fj77zn/fffVH1Sf5/PKxh2+pR6o+yef7
+WD2MP1R9U1m72+FD149Euzzlw9ePZLZ+/LB1SMVe18++EX1SKtP8t7MHnZ/
VH2Sz/fzwezh6pGKvb83fPDnokeqPsl7M/fD7o+KfZ6fzz64eqRi78sHV49U
fZL35YNXjwT7vOWDq0cq9r58cPVI1Sd5Xz549Uiwz1u+4/tF90hm78sHrx7J
7H354IeiRyr2vnxw9UjVJ3lfPnj1SLDPWz7YPVP1ST5v+WD6o+qbzN6XD149
knsn78sHv1E9U/VJPq987OHnT/2R+6bHg71/Y/jg6pHMPn/54NUjwT5v+eDV
I5m9Lx+8eiSz9+WDV49k9r58cPVIxd6X7/j938Ueqfok78t3/v3H6JFgn7d8
8OqRzN6XD149ktn78sHukVaf5H354GvqkapP8vnlYw9Xj1R9kvfXwgfzcyP2
xfXn2pUPxnPZj96XD66/Xrzu88fVI5nLYx+8eiSz9+WDV49k9r588OqRzN6X
D149ktn78sEvjR7J7H354NUjmb0vH7x6JLP35YNXj2T2vnzw6pHM3pcPrh6p
2PvyfefE1SNVn8R++bi+eiTY5y0fvHoks/flg1ePZPa+fPDqkczelw+uHqnY
+/Lx8+nqkapPYr98XF89Euzzlg+uHqnY+/Lx9Vs9UvVJ7JeP66tHgn3e8sGr
RzJ7Xz549Uhm78sHrx7J7H35ju8vF3ukYu/Ld3x/udgjVZ/kffmO7y/dI8E+
b/mO7y8Xe6Ri78sHV49UfZL35Tu+v3SPBPu85YOrRyr2vnxw9UjVJ3lfPnj1
SLDPWz549Uhm78vHvx9Wj2Rmv3xcP/twmx7JzH754NUjmb0v3/H9pXsks/fl
O76/dI9k9r58x/eX7pHM3pfv+P7SPZLZ+/LBq0cye18+uHqkYu/Ld3x/udgj
VZ/kffng1SPBPm/54NUjmb0vH+9f/v2c6JvcM/m8H9bn6/zcZfVPsO+H6Y+q
bzJf1gevHsm9k/flg90frT7JezN7ePVIZu8fCB/s/ugpsa97b2b/yIndH71r
9Ens/Xwwe3j1SGb2fj77YPdHq0/y3swedn+0+iTvr4rZw6tHMnt/K3zw6pHM
3pcPXj2S2fvywatHMntfPtj90eqTvDez/8UTuz9afRJ7Px/MHl49kpm9n88+
2P3R6pO8N7OHV49k9v5z4YNXj2T2Hn5EPq5/ZPRIZu/N3A+vHsns/UfCB68e
yex9+eDVI5m9Lx+fj9UjmdnbB3/6dP/x/aJ7JDPn+fnsg1ePZPa+fPDqkcze
lw9ePZLZ+/LBq0cye18+Pj+rRzKzt+9d8sGrRzKz9/PZB68eyex9+fj3g/uj
1Sextw9mD68eyczez/eIfPhXj2T2vnzw6pHM3pcPXj2S2fvywatHMntfPj4f
q0cys7fvXfLBq0cys/fz2Xf8/q97JLP35Tv//mP0SGbvywevHsnsffng1SOZ
vS8fvHoks/flg90frT7JezN7ePVIZu+vhQ9ePZLZ+/LB/JyJ/WLvywezu+xH
78t3/vOI+OvF6z5/XD2SuTz2watHMntfPnj1SGbvywfz59mx/8Rg783cD780
eiSz99fDB68eyex9+eCzD7fpkczelw9ePZLZ+/LBq0cye18+uHqkYu/Lx/tj
9UjVJ7FfPq6vHgn2ecsHrx7J7H354NUjmb0vH7x6JLP35YOrRyr2vny8P1aP
VH0S++Xj+uqRYJ+3fHD1SMXel4+v3+qRqk9iv3xcXz0S7POWD149ktn78sGr
RzJ7Xz549Uhm78t3fG/pHsnsffn4+l09kpn98h3fX7pHMrNfvuP7S/dIZu/L
x9fv6pHM7JeP6y+PHsnMfvng1SOZX9K+fPDqkczelw9ePZLZ+/LB1SMVe18+
vn6rR6o+if3ycf1sdpseCfZ5ywevHsnsffmO7y/dI5m9L9/x/aV7JLP35Tu+
v3SPZPa+fMf3l+6RzN6XD149ktn78sGrRzJ7X77j+0v3SGbvywevHsnsffng
6pGKvS8f/374r6JfMvu8H9bn6/xcZPVKsO+HV49kLt+z8nF99Uhm78sHuz9a
fZL3Zvbw6pHM3j8QPtj90VNiX/fezB52f7T6JO+fFLOHV49k9v7h8MHuj1af
5L2ZPez+aPVJ3l8Vs4dXj2T2/lb44HtGj2T23sz98OqRzN7fI37sdD+8eiTz
o9qbuR92f7T6JO/N7GH3R6tP8v5F8X9yuh9ePZL5zdrfGz7Y/dHqk7w3s4er
Ryr2/nPhg+mPqm8ye18++KPqj6pP8vnlYw+vHsns/UfDB68eyex9+c5/PR09
ktl7M/fD7o8+Pfok798nZn98v+geyez9c+GDV49k9r588OqRzN6XD149ktn7
8sGrRzJ7Xz7Y/dHqk7wvH7x6JLP35YNXj2T2vnzwG9UzVZ/k85YPpj+qvsl8
l/blg1ePBPv85YNXj2T2vnzw6pHM3pcPXj2S2fvywe6PVp/kffng1SOZvS/f
8fu/7pHM3pfv/PuP0SOZvS8fvHoks/flg1ePZPa+fPDqkczelw92f7T6JO/N
7OHVI5m9vxY+ePVIZu/LB68eyex9+WB3Q4u9Lx98/nOFS370fnVH9deL133+
uHokc3nsg1ePZPa+fLD7o0+Ifd17M3v4pdEjmb2/Hj549Uhm78sHn81u0yOZ
vS8fvHoks/flg1ePZPa+fHD1SMXelw+uHqn6JO/LB68eCfZ5ywevHsnsffng
1SOZvS8fvHoks/flg6tHKva+fHD1SNUneV8+ePVIsM9bPrh6pGLvywef/fL9
A3qk6pO8Lx+8eiTY5y0fvHoks/flg1ePZPa+fPDqkczel+/4/nKxRyr2vnzH
95aLPVL1Sd6X7/j+0j0S7POW7/j+crFHKva+fHD1SNUneV8+2P1Rsc9bPnj1
SGbvywevHsnsffng1SOZvS8fXD1SsfflO76/XOyRqk/yvnzw6pFgn7d88OqR
zN6X7/j+0j2S2fvyHd9fukcye1++4/tL90hm78t3fH/pHsnsffng1SOZvS8f
vHoks/flO76/dI9k9r588OqRzN6XD64eqdj78v3+iatfMvu8H9bn6/zcYvVP
sO+H6Y+qbzKX7+/k4/rqkWCf7+ezD3Z/tPok783s4dUjmb1/IHzw0+qPVp/k
vZk97P5o9UnePy1mD68eyez9w+GD3R+tPsl7M3vY/dHqk7y/KmYPrx7J7P2t
8MHuj1af5L2ZPez+yH2Tr3t/T/jg1SOZH9O+fN88sfuj1SexLx97rrs/ct/k
6+z9fPjYw6tHMnt/b/g43/3R6pPYl48911ePZGbv57MPXj2S2fvycb77o9Un
sS8fe66vHsnM3s9nH7x6JLP35eN890erT2JfPvZcd3+0+iT2fj587I/vF90j
mb1/Lnzws6NHMntv5n549Uhm758NH7x6JLP35YM/PHoks/dm7odXj2T2/sPh
g1ePZPa+fPDqkczelw92f7TY+/LBq0cye18+ePVIZu/LB68eyex9+eDVI5m9
Lx+8eiSz9+WDV49k9r588OqRzN6X7/j9X/dIZu/Ld/79x+iRzN6XD149ktn7
8sGrRzJ7Xz549Uhm78sHuz9afZL3Zvbw6pHM3l8LH7x6JLP35YNXj2T2vnzw
6pHM3pfv/OcRh/+utfsk78sHs7vsx9U5cR9cf7143eePq0cyl8c+2P3RJ8S+
7r2ZPbx6JLP318MHrx7J7H354LNP/216JLP35YNXj2T2vnzw6pHM3pcPXj2S
2fvy8f3f6pHM7JeP66tHMrNfPnj1SGbvywevHsnsffng1SOZvS8fvHoks/fl
g1ePZPa+fPDqkczelw9ePZLZ+/Lx9Xv2y/dteiQz++Xj+uqRzOyXD149ktn7
8sGrRzJ7Xz747MNteiSz9+U7vr90j2T2vnzH95fukczel+/43tI9ktn78h3f
X7pHMntfPr5+V49kZr98XF89kpn98sGrRzJ7Xz549Uhm78sHrx7J7H354NUj
mb0v3/H9pXsks/flg8/+8b5Nj2T2vnzw6pHM3pfv+P7SPZLZ+/Id31+6RzJ7
X77j+0v3SGbvy3d8f+keyex9+eDVI5m9Lx+8eiSz9+U7vr90j2T2vnzw6pHM
3pcPrh6p2Pvy8e+H6pfMPu+H9fk6P1dY/RPs+2H6o7873b/6pPK9XT6urx4J
9vl+Pvtg90erT/LezB5ePZLZ+wfCB7s/emr0Sd6b2cPuj1af5P3TYvbw6pHM
3j8cPtj90eqTvDezh90frT7J+6ti9vDqkcze3wof7P5o9Unem9nD7o8We3+P
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
fZx/Tz5S+UmeX33kObd/9K7wkzzf+9FHHi4fqdj526KP+eUjlZ9EfvVxXj6S
2fNWH2z/qPwkz1t9zP+kfKTykzy/+shzvnwk2PO9n/vg8pGKna8+5n9IPtLy
k8hXH3nO7TMVe773c9/xffHX6TeZna8+ePlI9p2crz4Y/4g++00+d95Mnu+/
8pHKTyLv/dzHuX2k8pM8b/XB9pkWO199MP5R+U1m56sPXj6SfSfnqw+2f/TW
4Sc5byYPl49U7Pzboo/Pf/lI5SeRX32cl49k9rzVB+Mfld9kdr764OUjwZ6/
+uDlI5mdrz64fKRi56uPz8/Py0dafhL56iPP+fKRYM/3fu6Dl49kdr76YPtI
y09yvvpg+0fLT3LeTB4uH6nY+a9EH5+fN8pHWn4S+eojz/nykWDP937ug5eP
ZHa++uDlI5mdrz7YPtLyk5yvPnj5SGbnqw9ePpLZ+eqD+X1H8oudrz6Y3GU/
Ol99cH178brnj8tHMleP++DykYqdrz64fKTyk5yvPvjH//dGPhLseasP/nj4
SMXOVx8//5WPVH4S+dXH+dmHG/hIsOetPnj5SGbnqw9ePpLZ+eqD7R8tdr76
4OUjmZ2vPnj5SGbnqw9ePpLZ+eqDy0cqdr76+PFbPlL5SeRXH+dvGD4S7Hmr
Dy4fqdj56oPLRyo/yfnqg5ePBHve6ju+X9pHMjtffcf3S/tIZuer7/h+aR/J
7Hz1Hd8vF32kYuerjx+/5SOVn0R+9R3fLe0jwZ63+uDlI5mdrz54+Uhm56vv
+H5pH8nsfPXBy0cyO199x/dL+0hm56sPXj6S2fnqg5ePZHa++o7vl/aRzM5X
3/H90j6S2fnqg5ePZHa++o7vl/aRzM5X3/H90j6S2fnqg8+Ob+AjmZ2vvuP7
pX0ks/PVBy8fyex89cHlIxU7X338+lD+ktnzXmufz99z+rp5+Uqw7/N1d/lI
xZft4/y28JHKTyJffb94us+5/aPykzzP+9H3353uww+Ej1T8c8rfFX2wfaTl
Jz2ovPt+53Qfvkc+0vKTHlPe/N+f7sPLR4I93/u9R32cf0g+UvlJnuf94N84
3YftH5Wf5PneD/4vp/vw75/8I/rKT/J87+c+uHyk8pMeV776YPtH94Wf5HnV
9y9O9+HykYrvU/6D0cePp+/JR1p+EvnqI8+5faTykzzf+9H3357uw78dPlLx
u5Q308f88pHKT2Je9f3l6T7ny0eCPc/70fePTvfh8pGKX6e8mfvM/1/lIy0/
iXz1cZ/z5SPBnu/96PtPp/tw+UjF31TezH3m20dafhL51cf5nw8fCfb86vv3
p/vH90X7SOanlf/z6IOXj2R2vvpg+0jlJ3ne6uP7r3yk8pPIu+8u9cGPDx8J
9jzvRx/34eUjmZ1/PPrg5SOZna8++NHhI5mdrz7Y/tHyk/6N8u4jD38hfKRi
598WfXz+y0cqP4l5q4/z5SPBnrf64D8dPpLZ+eqD3z98JPO/U9593IeXj2R2
/v3RB/9R+EjFzlcfn59fkI+0/CTmrb7zrz+GjwR7/uqDPzp8JLPz1Qe/Y/hI
5t9V3n3ch+0jLT/J+XdEH/xI+EjFzlcfn583ykdafhLzqu+nT/c5Xz4S7Pne
z33w8pHMzlcfvHwks/PVBy8fyex89cHLRzI7X33w8pHMzlcfvHwks/PVBx//
u9Zm56sPJnfZj85XH1zfXrzu+ePZp/8GPpK5etwHn324gY9kdr764B+nbuQj
mZ2vPvjj4SMVO1998NfDRyo/yfnqg6//97H2kWDPW33w8pHM71S++uCvDh/J
7Hz1wVeGj2T+K+WrD14+kvntylcf/KXhI5mdrz54+UjmLypfffDD4SMVO199
vC/KRyo/iXmrj/PXDx8J9rzVBz84fCTzG5SvPnj5SOYHlK8+ePlIZuer7/h+
aR/J7Hz1Hd8v7SOZna++4/ulfSSz89UHvy98pGLnqw8uH6n8pF9Rvvpg/rym
4/vmInve6ju+W9pHMl9TvvrgPxg+kvk9ylff8f3SPpL5D5WvPnj5SGbnq+/4
fmkfyex89R3fL+0jmZ2vPvjWs/dL+0hm56vv+H5pH8l8i/LVB39t+Ehm56vv
+H5pH8n8V8pX3/H90j6S2fnqO75f2kcyO1998PKRzF9UvvqO75f2kczOVx/8
ueEjmR9SvvqO75eLPlLx55WvPt5f5S+ZPe+19vn8E6eva8tXMvs+XD6SefU9
oT7O7SP94vCTnK++Jw5f17/qH9lv4tzz3Qfz9+PBy0cyM9/7uQ/Gfzr+fNh+
0gPKu4/7zL9HPpL9Jp8z3/vB/P14MP5R+U1m5ns/98FX5R/Zb8JP8vzqw2+C
7R/Zb/L5byh/VYzfBC8fyfxflH8p+uDlI5l/X/nq4/Nj/8h+k8/Juw/m78eD
y0cqZr73cx/8XflIy09y3kz+D058m/wj+034SZ7v/WDuw+UjFTPf+7kPfk4+
0l8OP+m3lXcf92H7R/abOPd87+c+uHyk4n+kPH1PqI/zT8lH+uTwk5w34zfB
9o/sN3Hu+d7PfXD5SMX/SfnqO//5NHyk8pOcN3Mfto9kvwk/yfO8n/vg5SOZ
/73y1QcvH8nsfPXx7/fdw0cyk3cfzH3Y/tHyk8h7vyfUR799pOUnOV99zFs+
kpm8+z6hPnj5SGby3s998PKRzM5XH2z/aPlJjypffXD5SMVvVZ6+J9THeflI
5Sd9QfnqY97ykWDPc98n1AcvH8lM3vu5D7aPtPykP1W++pi/fCQzefd9Qn1w
+UjF5L3fE+qjv3yk8pP+SPnqg5ePBHve6oOXj2R2vvpg+0jLT/qo8tUHLx/J
7Hz1wY+Ej1TsvBm/CbaP9NPDT3pEeTN98PKRYM9fffDykczOVx+8fCSz89UH
Lx/J7Hz1wctHMjtfffDykczOVx+8fCSz89UH87/jJP/kYOfN3If5fVPyi51/
Kvpgcpf96Hz1wfXtxeueP54d38BHMleP++Cz//xzAx/J7Hz1wctHMjtffXz9
sXwkM/nVx/nZp/8GPpKZeasPXj6S+Rblqw9ePpLZ+eqD7R8t/qry1QcvH8ns
fPXxXlw+kpn86uN8+Uhm5q0+uHykYuerjx+/5SOVn8S81cf58pFgz1t98PKR
zK9Xvvrg5SOZH1S++uDlI5mdrz54+Uhm56uPH7/LRzKTX32cLx/JTH71wctH
Mjtfffz4XT6SmXmrj3P7R4vJrz54+Uhm56uPz8/ykczMW32c8/fZHd83zcxb
ffDykczfVr76mL98JDP51cf58pHM5FcfvHwks/PVBy8fyXyr8tUHLx/J7Hz1
wctHMn9N+eqDl49kdr76YPtHi52vPvhNw0cyO1998PKRzM5XH7x8JPPDylcf
XD5S8eeUrz5+fSh/yex5r7XP59d/nvx/pv8E+z6Mf1R+k/myfbD9o2LPX33w
9e/XV/0j/Kbyk5w3k4ftHy12/q7ogz8q/+gxsf0k583kYftHvzb8JOc/KiYP
Lx/J7Pw90QfbP7Lf5HPnzeRh+0f2m3zu/FUxedj+0WLnX4o++MrwkczOm7kP
2z+6f/hJzl+JPnj5SOb7la8++Pvyj5af5LyZPGz/6F3DT3L+++LbT/dh+0eL
36X8bdEH2z+y3+Rz583kYftMi51/Lvpg/KPym8zOVx9s/8h+E+eeX33kYftH
i53/VPTBy0cyO1995z+fyj9afpLzZvKw/aPFzn84+o7vi/aRzM5XH7x8JLPz
1QffLZ+p/CTPW30w/lH5Teb3Kk/f36iP8+Uj2Xdyvvpg+0fLT3K++uDlI5md
rz7Y/tFi56sPts+02Pnqg/GPym8yO1998PKR7Ds5X32w/aPlJzlffbD9o8XO
Vx+8fCSz89UH22cqP8nzVh+Mf1R+k9n56jt+/dc+Euz5q+/864/hI5mdrz7Y
/tFi56sPXj6S2fnqg5ePZHa++mD7R/abfO68mTxs/2ix849EH7x8JLPz1Qcv
H8nsfPXBy0cyO1998PKRzM5XH7x8JLPz1QcvH8nsfPXBy0cyO199sP2jJ8U+
d95MHl4+ktn59fe+XdZb8rzVB5O77MflOXEPrm8vXvf8cflI5upxH1w+UrHz
1QfjH9lHKj/J+eqD7R8Ve97qg5ePZHa++mD7R4udrz54+Uhm56sPLh+p2Pnq
g78YPlL5Sc5XH7x8JNjzVh+Mf0TfYuer7zsnLh+p/CTyq49z+0fFnrf6YPtH
i52vPnj5SGbnqw9ePpLZ+eo7vl8u+kjFzlff8f1y0UcqP8n56ju+X9pHgj1v
9R3fLxd9pGLnqw8uH6n8JOerD14+Eux5qw/GP6JvsfPVB+Mf2UcqP8n56oPt
HxV73uqDy0cqdr76ju+Xiz5S+UnOVx+8fCTY81YfbP9osfPVd3y/tI9kdr76
ju+X9pHMzlff8f3SPpLZ+eo7vl/aRzI7X33w8pHMzlcf/KbhI5mdr77j+6V9
JLPz1QfbP1rsfPXB5SMVO199vL/KXzJ73mvt8zlfFy5fCfZ9ePlI5sv2wctH
Mjtffcf/3dKr/tHyk5w3k4eXj2R2/q7og+0fLT/JeTN52P7R8pOc/6iYPLx8
JLPz90QfbP9o+UnOm8nD9o+Wn+T8VTF5ePlIZudfij7Y/tHyk5w3k4ftHy12
/ooYvwlePpL5g8qbuf+zJ/6u/KPlJ5GvPvKc2z+y3+Rz8t6PPvLw8pHMzt8W
fcy3f7T8JPLVR57z5SOZyXs/98HLRzI7X33Mt3+0/CTy1Uee8+Ujmcl7P/fB
y0cyO199zLd/tPwk8tVHnvPlI5nJez/3Hd8X7SOZna8+ePlIZuerD7bPtNj5
6oPxj8pvMjsP36k+zp8YPhLs+d4P5j68fCSz809EH7x8JLPz1QcvH8nsfPXB
y0cyO1998PKRzM5XH7x8JLPz1QcvH8nsfPXBy0cyO1998PKRzM5XH7x8JLPz
1QcvH8nsfPUdv/5rH8nsfPWdf/0xfCSz89UHLx/J7Hz1wctHMjtfffDykczO
Vx9s/2j5Sc6bycPLRzI7/0j0wctHMjtfffDykczOVx+8fCSz89V3/vsRP47d
wEcyO1998PKRzM5XH7x8JLPz1QcvH8nsfPXB9o+eFPvceTN5ePlIZuefij54
+Uhm56sPPvv0X8Jb8rzVB5O77Efnqw+uby9e9/xx+Ujm6nEfvHwks/PVBy8f
yex89cHLRzI7X33w8pHMzlcfvHwks/PVBy8fyex89cHLRzI7X33w8pHMzlcf
XD5SsfPVx++vlI9UfhL51cf52Ycb+Eiw560+ePlIZuerDz47voGPZHa++uBX
ho9kdr76ju+X9pHMLytffcf3S/tIZuer7/h+aR/J7Hz1Hd8v7SOZna8+ePlI
ZuerD14+ktn56oOXj2R2vvrg5SOZna8+ePlIZuerD14+ktn56ju+X9pHMjtf
ffDykczOVx+8fCSz89V3fL+0j2R2vvqO75f2kczOV9/x/dI+ktn56ju+X9pH
MjtfffDykczOVx+8fCSz89V3fL+0j2R2vvrg5SOZna8+uHykYuerj/dX+Utm
z3utfT7n67blK8G+Dy8fyVx9H1Mf58tHMjtffbD9o+UnOW8mDy8fyew88z+m
Ptj+0fKTyHs/+shzbv9o+UnkvR995DlfPpKZvPf7PfXRb/9o+UnOm8kz3/7R
8pPIez/6yHO+fCQzee/3e+qj3/7R8pOcN5Nnvv0j+00+J+/93AeXj1R8v/LV
B39fPtLyk5w3k4ftH5Wf5PneDyYPl49U7Pxt0Qc/Jx9p+UnOm8nDy0eCPd/7
uQ8uH6nY+eqDPykfaflJzpvJw8tHgj3f+8HfOt2Hy0cq/qbyZu7DH5aPtPwk
583k4eUjwZ7v/eBnTveP74v2kcxPK2/mPrx8JLPz1QeXj1TsfPXx6w3+UflN
ZvLu+5j6OLd/VH6S53s/+sjDy0cyO/+E+M7TfXj5SOY7lDdzH14+ktn56oOX
j2R2vvrg5SOZna8+Pv8PDR/JTL76uM/58pHM5L2f++DlI5mdrz54+Uhm56sP
Xj6S2fnqg5ePZHa++vj8LB/JTH71cb58JDP51QcvH8nsfPXBy0cyO1998PKR
zM5XH2z/aPlJzpvJ8/lZPpKZvPdzH+fLRzKTX33wA8NHMjtv5j68fCSz8w9E
3/nvR5z997H2kczOVx+8fCSz89UHLx/J7Hz1wctHMjtffbD9oyeHn+S8mTz8
/PCRzM4/FX3w8pHM15SvPvjs03+JP3fJ81YfzO8rk1/sfPXB5C770fnqg+vb
i9c9f1w+krl63AcvH8nsfPXBy0cyO1998PKRzM5XH7x8JLPz1QcvH8nsfPXx
9erZhxv4SGbyq4/z5SOZya8+uHykYuerDy4fqfwk56sPPovdwEeCPW/1nb8v
ho9kdr764LPjG/hIZuerD7Z/tNj56ju+X9pHMjtffcf3S/tIZuer7/h+aR/J
7Hz1Hd8v7SOZna8+ePlIZuer7/h+aR/J7Hz1wctHMjtfffDykczOVx+8fCSz
89UHLx/J7Hz1Hd8t7SOZna8+ePlIZuerD14+ktn56ju+X9pHMjtffcf3S/tI
Zuer7/h+aR/J7Hz1Hd8v7SOZna8+ePlIZuerD14+ktn56ju+X9pHMjtfffDy
kczOVx9cPlKx89UHl79k9rzX2udzvq5a/hPs+18/Mf5R+U3my/Zxvnwk2PNX
3/HvlX/VRyo/yfPcxzzysP2j8pM83/u5D8Y/st9kP8nzq4888++Rj1R+kud7
P/rIc45/VH4T7Pnez33wb8lHKj/J86uPPPNfko9UfpLnez/6/uF0n3P8o/Kb
YM/3fu6Dr8hHKj/J86uPPPPtHxV7vvdzH7x8JLPz1QfbP1p+kvNm8rD9o+Un
Of99MXl4+Uhm52+LPtj+0fKTnDeTh5ePZHb+OfFNp/vw8pHMr1PezH3Y/tHy
k5w3k4ftH9lv8rnznxSTh5ePZHb+m9EH2z9afpLzZvKw/SP7TT53/sNi8vDy
kczOPx198KeHj2R23sx9uHykYuc/HX38/I1/ZL+p/CTyq49z+0flJ3l+9ZGH
7R/Zb/K580+IycPLRzI7f0f0wctHMjtfffDykczOm6+c7sPlIxW/TXkz9/n8
PyQfaflJ5KuPPOfLR4I93/vR9/rTfXj5SOablTdzH14+ktn56oOXj2R23vzD
0324fKTiHyhv5j6fn/KRyk8iv/o4Xz4S7HmrD14+ktn56oOXj2R2vvrgrw4f
yey8mfvwI/KRyk/yPO8Hk+fz86bwkcpPIu/96OM+588OHwn2PO9HH/dh+0fL
T3L+WTF5+JXhI5mdf0DMffi+4SOZnX9FzH14+Uhm5++LPvjF4SOZnTdzH14+
ktn5F6MPtn+0/CTnzeRh+0eLnX8q+vj3Y/lIZvKrj/PlI5nJrz54+Uhm56sP
Pv53re0nOV99MLnLfnS++uD69uJ1zx/PPv038JHM1eM+ePlIZuerD14+ktn5
6jv/emD4SGbnqw8uH6nY+erj37+z2E/wkcpPIr/6OF8+Eux5q+/864/hI5nJ
rz7Ol49kJr/64OUjmZ2vvvP3xfCRzM5XH7x8JLPz1Xd8v7SPZHa++o7vofaR
zM5XH5//5SOZya++43uofSQz+dV3fL+0j2R2vvrg5SOZna++4/ulfSSz89UH
Lx/J7Hz18flZPpKZ/OrjfPlIZvKrD14+ktn56ju+X9pHMjtfffDykczOVx+8
fCSz89V3fL+0j2R2vvqO75f2kczOV9/x/dI+ktn56ju+X9pHMjtfffDykczO
Vx+8fCSz89V3fL+0j2Qmv/o4Xz6Smfzqg5ePZHa++uDyl4qdv2yfz285fd1T
vpLZ9+HykcpPqr7/Rn2cl49k9jzv5z7Y/lH5SZ5XfT93ug8vH8n8S8rfFX3w
o2c//73qIz0m/qjYeTP5d574HvlIy08i7/3o+9XTfc6XjwR7vvdzH3xVPlL5
SZ5XfeSZ/5J8pH8YfhJ570cffhPny0eCPd/7uQ+2j1R+kuetPuYvHwn2/Orj
z3+Cl49k/qDyZu4z/7vyj5afRL76yHNu/2j5SeS9H33vOt2Hl49kvl3526KP
+faRlp9EfvVxbv/IfpPPya8+ePlI5puUrz7mf0r+0fKTyFcfec7tHy0/ibz3
o+8bp/vw8pHM31L+m9HH/A/JP1p+EvnqI8+5/aPlJ5H3fu6Dl49kfkb56oPt
Iy0/yfnqg8tHKnbe/N7Tfbh8pPKT7lbezH34cflH5Sd5XvWRh+0fLT/J+cej
D14+kvlO5asPfnT4SGbnzdyH7R/Zb/K584+K33q6D5ePVHxF+bdFH2wfaflJ
zlcfbP/IfhPnnr/64OUjmV+vfPXBy0cyO199sP0j+00+d7764PKRin+ofPXB
5SOVn+R89cHLR4I9b/XBy0cyO1998PKRzM5XH/wV+UfLT3LeTB5+RD5S+Ume
7/1g8vAb5SMtP8n5R8TkYftI5Sd5vvdzH2wfaflJzlcfbB9p+UnOVx9sH2n5
Sc5XH7x8JLPz1QfbR1p+kvPVBy8fyex89cH2kZaf5Hz1wdfO/p+LPlKx89V3
/P25iz5S+UnMW32cLx8J9rzVBy8fyex89cFnHy7x5y553uqD+X1u8oudrz6Y
3GU/Ol99cH178brnj8tHMleP++DlI5mdrz747cNHMjtffXD5SMVXlK8+uHyk
8pOcrz64fCSz560+fv4oH6n8JPKrj/PlI8Get/rgs3+9b+AjmZ2vPnj5SGbn
qw/+s+EjmZ2vPpi/z+74nmp2vvrg8pGKX1G++uDykcpPcr764OUjwZ63+uDl
I5mdrz54+Uhm56sPvv5+aR/J7Hz1weUjFT+vfPXx80f5SOUnkV99nH97+Eiw
560+ePlI5u8oX33w8pHMzlcfvHwks/PVBy8fyex89cHLRzI7X33w8pHMzlcf
vHwks/PVBy8fyex89cHLRzI7X31w+UjFzlff8f1y0UcqP4n86uN8+Uiw560+
ePlIZuerDy5/qdj5y/b5nK9Llv8E+/5jJ8Y/Kr/JfNk+zj8wfCTY86uP+5zb
P7Lf5HPy3o++f366Dy8fyfxzyt8VfTD+k/0m+0meV33k+ee7Rz7Srw4/ibz3
ow+/ifPlI8Ge7/3cB/+WfKTykzyv+sgz/yX5SH8//CTy3o8+/CbOl48Ee773
cx98JXykYufN3Ge+/SP7TZx7nvdzH1w+UvH9ytP3mPo4/758pOUnOW8mD9s/
st/Eued7Pxi/CS4fqfhdyjP/MfVx/lz4SOUnOW/mPvPsHxV7nveD8Zvg8pGK
mef9HlMf/Z+Sj7T8JOfN5Jln/8h+E+ee7/1g/Ca4fKRi5ns/98FX5SMtP8l5
M3nm2z8q9nzvB+M3wctHMjPP+z2mPvo/PXwks/Nm7sP2j+w3+dz5T0cf/zzL
RzIzf/Vx/oT8o+Unka8+8pzbP1pM3vvB+E3w8pHMzPN+j6mP/sfkHy0/yXkz
edj+kf0mnzv/WPTBy0cyv1V5+h5TH/zQ8JHM5L0ffdyH7R8tdp79mIffBC8f
ycw87/eY+ui/d/hIZufN3Gee/aPF5L0fjN8ELx/JzDzv95j64OUjmcl7P/dx
vnwkM/nVBy8fyex89cHLRzI7X33wV+UfLT/JeTN52P7R8pOc/6qYPJ+fN8k/
Wn4See9HH3nOnx0+kpm896OP+/ADw0cyO/+smPsw/hP55Sc5/4CY+zD+E/nl
Jzn/ipj78GeGj2R2/j4x9+EXh49kdv4zYu7Dy0cyO/9i9MFPDR/J7LyZ+3D5
SMXOPxV98HvCRyo/6Zry1QcvHwn2vNUHLx/J7Hz1wfw9BuTfPdj56oOXj2R+
t/LVB1/WW/K81Qffesq985Ifl+dEH8zHd+rbi/3t1cfH5SOZq8d98PKRzM5X
H7x8JPPbla8+fv1cPpKZ/OrjvHykYvKrDy4fqfwk56sPXj4S7HmrD/6pP7ux
j2R2vvrO3xfDRzK/Qfnqg/9s+Ehm56vv+H5pH8nsfPUd30PtI5lfVr76+PG7
fCQz+dV3fA+1j2Qmv/qO75f2kczOVx+8fCSz89V3fL+0j2R2vvqO75eLPlLx
NeWrDy4fqfwk56sPXj4S7HmrD14+kvnbylcfP36Xj2Qmv/o4Xz6Smfzqg5eP
ZHa++ph//dvbRzKTX33H90v7SGbyq+/4fmkfyex89TF/+Uhm8quP8+Ujmcmv
Prh8pGLnq+/4frnoI5Wf5Hz1wctHgj1v9cHLRzI7X31w+UvFzl+2z+d83VC+
ktn34fKRyk+qvq+qj/Nb5CMtP8l5M3nY/pH9Js493/vB/PlP8PKRzP9ceeZ/
VX0w/pP9JvtJnuf96CPP+T3ykX5t+EnkvR99+E2cLx8J9nzv5z74qnyk8pM8
r/rIM/8l+Uj/MPwk8t6PPvwmzpePBHu+93MfbB+p/CTPW33Mt89U7PnVh98E
4x+V32T+oPLw19QHf1f+UflJnu/96CPP+W3ykew3+Zy896MPvwnGPyq/yXy7
8rdFH/PtI5Wf5Pmrj/PXyWe6Kfwkz199MP5R+U3mm5SvPubbPyo/yfOrjzxs
/+hbw09ynvnMw2+Cl49kZr73cx/nH5J/tPwk8tVHnvOn5TM9E36S53s/9x3f
F3+dfpP5GeWrD7aPVH6S568++O7wkYqdN+M38fN3+UjlJzHP+7mP88flH5Wf
5HnVRx6+Qz7TneEneb73cx+Mf1R+k/lO5asPto9UfpLnrz7YPtNi56sPtn9U
fpLnrT4+//aRyk/y/NXH+c3ymV4//CTyqw/GPyq/yfx65asPto9UfpLnrz74
B/KZfhh+kuevPtj+UflJnr/6+PyUj1RMfvVxvnwk2PNWH7x8JLPz1QcvH8ns
fPXBX5F/tPwk583k4UfkI5Wf5PneDybP5+eN8pGWn0Te+9FHnnP7SOUneb73
cx9sH2n5Sc5XH2wfaflJzlcfbB9p+UnOVx9sH2n5Sc5XH2wfaflJzlcfvHwk
s/PVB9tHWn6S89UHn8Vu4COZna8+/v1YPpKZeauP8+UjmZm3+uDlI5mdrz74
3Wf/fax9JLPz1QcvH8n8s8pXH3zZP3fJ81YffPbpv4GPZF5/ThN9MLnLfrxV
+eqD69uL1z1/XD6SuXrcB5ePVHxF+eqDy0cqP8n56oOXjwR73urj54/lI5nJ
rz5+f+Vzw0cyk199zF8+kpn86oOXj2T+KeWrD14+ktn56oOXj2R2vvqO75eL
PlLxK8pX3/H9ctFHKj/J+eo7vl/aR4I9b/Ud3y/tI5mdrz54+Uhm56vv+H5p
H8nsfPXBy0cyP6989fHzx/KRzORX3/H90j6Smfzqg8tHKv6O8tV3fL9c9JHK
T3K++uDlI8Get/rg8pGKna++4/vloo9UfpLz1Xd8t7SPBHve6oPLRyp2vvqO
75eLPlL5Sc5XH7x8JNjzVh+8fCSz89V3fL+0j2Qmv/o4Xz6Smfzqg5ePZHa+
+nh/lb9UTP619vmcd/7yn2Dfh/GPym8yX7YPtn9UfpLnVx95GP+IPvtNPnf+
FvG7Tvdh+0flJ3m+93MffPXs8/yqj1R+kudXH3n4HvlIvzr8JOfZj68jf+V0
n/PlI8Ge7/3cB39IPlL5SZ5XfeThl+Qj/f3wk5xnP75/fnS6z/nykWDP937u
g98cPlKx82buw/aR7Ddx7nnej++f+073YftH5Sd5vvdzH+fflY9UfpLnVx95
2P6R/SbOPd/7Me/W0324fKRi5nu/K+qDPx8+UvlJ5L0ffdyH7R8Ve573Y94r
/+T6fbh8pGLmeT/3cf6H8pGWn0S++shzbv/oG+Eneb73cx9cPlLxN5Sn74r6
zn/+k4+0/CTy3o8+8rD9o2LP937M++zpPrx8JDPzvN8V9dH/J8NHMjtv5j7z
7CO9N/wkz/N+8C+f7tNfPlL5Se9V/u7oY579o/KTPK/6yHNu/2gxee8H3366
Dy8fycw873dFffQ/Onwks/Nm7jNv+Uhm8t4P5s9/gstHKmae93Mf5/8qfKTy
k8hXH/dh+0fFnuf9mHfT6T68fCQz87zfFfXR//7hI5mdN3Mftn+02Pn3Rx9c
PlKx8/AV9cH/NHyk8pPIe7/j16f/9/n58pFgz/N+7oOXj2R2vvrgnxk+ktl5
M/dh+0fLT3L+Z8Tk4Y/IRyo/yfO9H0yez88b5SMtP4m896OPPOfPDB8J9nzv
Rx/34fuHj2R2/hkx9+GXh49kdv5+Mffhe4ePZHb+ZTH34eUjmZ2/N/rOf79g
+Ehm56vv/PdrPndjH8nsfPXBy0cyO1998PX/PnbRRyp2vvqOvz930UcqP4n8
6uN8+Uiw560+zpePZCa/+jh/9/CRzORXH7x8JLPz1Vd/b9ti8quP87NP/yX+
3CXPW33wZb0lz1t9MLnLfnS++uD69uJ1zx+Xj2SuHvfBy0cyO1998JvCRyp2
vvr48VU+ktnzVh/8ufCRzJ63+ph/8/CRYM9bffDykcxvUL76mL98JDP51Xd8
v7SPZCa/+o7vofaRzM5X3/H90j6S2fnqg18YPpLZ+eo7vl/aRzL/SPnq4/Oz
fCQz+dV3fL+0j2Qmv/rg8pGKna++89//Dh+p/CTyq49z+0fFnrf64OUjmZ2v
vuP7pX0ks/PVBy8fyex89cHLRzI7X31HL7t9JDP51Xd8v7SPZCa/+uDlI5md
rz7mLx/JTH71Hd8v7SOZya++4/vloo9U/CXlq+/4frnoI5WfRH71cf7s8JFg
z1t9cPlIxZ9XvvqYX/6S2fNea5/PeXcvXwn2/d888fKRzJft49z+0fKTyFcf
edj+kf0mnzvPfObhN8FnsRv4SGbmez/3cY7/VH7TVTH56iMP4x+dv5eGn+T8
o2L+/Cd4+Uiw53s/98FX5SOVn+R51Ucexj9iP/tN9pOcvyrGb4KXjwR7vvdz
H2wfqfwkz1t9sP2j+8JP8vzqw2+Cy0cqvk/5D0Yf/F35SMtPct5MHr5NPtOt
w09y/rti/CbY/lH5SZ7v/dwHPycfqfwkz68+8rD9I/wm+0me7/3cB5ePVMz8
1Qd/Sj7S8pOcN5OH7TMVe773g/GbYPtH5Sd5nvdzH/wh+UjlJ3l+9ZGHn5bP
9NnhJzn/oeiD8Y/KbzJ/Vvnqg+0jlZ/k+asPxj+iz36Tz52vPrh8pPKTfln5
6oOfkH9UfpLnVR95+A75TLeHn+T53g/mz3+C8Y/KbzLfrvwd0QfbRyo/yfNX
H2z/6K3DT3K++uDykYrfqnz1wfaRlp/kfPXBN8tnumn4Sc5XH4x/VH6T+Sbl
qw+2j1R+kuevPrh8pGLnqw+2f1R+kuetvuPXk6/6SOUnef7qO//6Y/hIsOev
Pnj5SGbnqw+2j7T8JOerD7Z/tPwk583k4UfkI5Wf5Pne7/zrvdN92D7S8pOc
fyT6YPtI5Sd5/uqD7SMtP8n56oPtIy0/yfnqg+0jLT/J+eqDl49kdr764OUj
mZ2vPnj5SGbnqw/mz4civ/wk583ch8tHKnb+qeiDy0cqP8n56oPLRzJ73uqD
y0cqP8n56oOXjwR73uqDf/x/f5KPVOx89cHlI5Wf5Hz1wctHgj1v9cHLRzI7
X33wZb0lz1t9MP/cb7/kx+U5Hf+72EX/aLG/vfr4+MXhI5mrx31w+UjFzlcf
vHwk2PNWH1w+UrHz1QcvHwn2vNUHl49UfLPy1QeXj1R+kvPVBy8fCfa81Xd8
v7SPZHa++o7vl/aRzM5X3/H90j6S2fnqO75fLvpIxS8oX31w+UjlJzlffTB/
XtPxfXORPW/1weUjFV9Tvvr475/lI5WfRH71Hd8v7SPBnrf64OUjmZ2vvuP7
pX0ks/PVBy8fyex89cHlIxU7X33H98tFH6n8JOer7/h+aR8J9rzVd3y/XPSR
ip2vvuO75aKPVH6S89UHLx8J9rzVB19/z1z0kYq/qHz18e93+UjlJ5FffZwv
Hwn2vNUHl49U/Kzy1QeXv2T2vNfa5/Mvnd7F5SuZfR8uH6n8pOr7ovo4v0U+
0vKTnDeTh+0f4TfRf5fY+VvE+E3w2afhJ/hIxb+k/F3Rx/eX/aPykzyv+sjD
9o/sN/nc+UfF/PlP8PKRzL+mPPO/pD7OPyT/aPlJzpvJf/nE9o/sN/mcvPeD
8Zvg5SOZme/9vqQ++t88fCSz82buM9/+kf0mn5P3fjB+E7x8JDPzvZ/7+P6y
f7T8JPLVR5759o/sN/mcvPdjHn4TvHwkM/O9n/uYbx9p+UnkVx/n9o8Wk68+
/CZ4+Uhm5nk/9zH/D+UfLT+JfPWR59z+kf0mn5P3fu6Dl49k/oby9H1Zfcy3
f7T8JPLejz7ynNs/Wkze+9GH33R8r7SPZH5aeTP34T8ZPpLZeTP3+XzYP1pM
3vvB+E18/y0fycw87+e+819/5B8tP4l89ZGH7R/Zb/K5849HH7x8JPOdylff
+ftr+Ehm583ch+0fLXb+UTF+E7x8JPPblDdzn8//8pHM5Fcf5/aPFpOvPvwm
ePlI5puVN3Mffv/wkczOm7kPLx/J7Pz7ow9ePpLZ+erj8/NPh49kJl993Od8
+Uhm8t7PffDykczOVx/8juEjmZ03cx+2f7T8JOffISYPf0T+0fKTnP+KmDyf
nzcOH8lM3vvRx33Onxk+kpm896OP+/D9w0cyO/+MmPsw/hP55Sc5f7+Y+zD+
E/nlJzn/spj78PKRzM7fG33w8pHMzlcfvHwks/PVB9tHWn6S89UHLx/J7Hz1
HX9/rn0kM/nVx/nykczkVx+8fCSz89UHLx/J7Hz1wR8/+3/aRzI7X318/bF8
JDP51cf58pHM5FcffNm/N87zVh982T93yfNWH7x8JPP6c5rKE7rsxyvKL++o
vr143fPHs+Mb+Ejm6nEfP38sH8nMvNXHj9/lI5nJrz7m2z9aTH71wctHMjtf
ffDykczOVx+8fCSz89UHLx/J7Hz1wctHMjtfffDykczOVx+8fCTzj5SvPn78
Lh/JTH71cb58JDP51QeXj1T8vPLVd/773+EjlZ9EfvVxvnwk2PNWH7x8JLPz
1Qdff7+0j2R2vvrg5SOZna8+ePlIZuerD14+ktn56oOXj2R2vvrg5SOZna8+
+HqufSSz89UHX//YPpLZ+eqDr79fLvpIxV9SvvqO75eLPlL5SeRXH+fLR4I9
b/XBy0cyf1756uPXh/KXism/1j6f/+PTu3X5T7Dv8+7FP2Kf5Sddto9z+0fl
J3l+9ZGH7R/Zb/K588xnHn4TXD5SMfO9n/v4OsT+UflJnld95OF75CPZb/K5
84+KycP4R+U3mZ2/J/rgq/KPyk/y/OojD78kn+lH4Sd5vveD8Ztg/KPym8w/
Uv6l6IOvyD8qP8nzq488bP/ovuEnOX9FjN8El49UfJ/yH4w+/v37rnyk5SeR
rz7ynNs/ujX8JM/3fvTdfroPl49UfKvyt0Uf858LH6n8JPLVx33O7R/Zb+Lc
87yf++DykYqZv/qY/yn5SMtPIl995Dm3z1Ts+d7PfTD+kf2mLwY7D79Jfcz/
kHyk8pM83/vRR55z+0f2mzj3fO/nPnj5SObPKl99sH2k5Sc5X30w/hH5Xw4/
yfNXH1w+UvlJv6w8ff9YfZw/If+o/CTP834weX682j9aTN77wfhN8PKRzMzz
fu6D7SMtP8n56oPtH9lv8rnz1QeXj1T8VuXpe5P6OH8ofKTyk5w3cx+2f2S/
iXPP837ug5ePZL5J+eqD7SMtP8n56oOXj2R2vvrg8pGKna8+2D7S8pOcr77z
rz+GjwR7/uqDl49kdr76YPtIy09yvvpg+0jLT3K++uBH5COVn+T51Uceto+0
/CTnH4k+2D5S+Umev/pg+0jLT3K++mD7SMtPcr76YPtIy09yvvrg5SOZna8+
ePlIZuerD14+ktn56oPxn8gvP8l5M/fh8pGKnX8q+uDykcpPcr764OUjwZ63
+uDlI5mdrz54+Uhm56sPPvvwE3ykYuerDy4fqfwk56sPXj4S7HmrD14+ktn5
6oMv+/fGed7qg5ePZF5/z9z5n4t/4st6S563+vh6g9xlP5bX5D7O36xv973a
Y/Wdf/0RPpLZvasPLh/J7HmrD14+Eux5qw9ePpLZ+eqDl49kdr764OUjmZ2v
vuP7pX0ks/PVx4+z5SOZya++4/ulfSQz+dV3fL9c9JGKX1C++uDykcpPcr76
4OUjwZ63+uDykYqvKV99cPlI5Sc5X33H90v7SLDnrT54+Uhm56vv+H5pH8ns
fPXBy0cyO1998PKRzM5X3/H90j6S2fnqO75f2kcyO199x/dL+0hm56vv+H5p
H8nsfPXBy0cyO199cPlIxV9UvvqO75eLPlL5Sc5XH7x8JNjzVh9cPlLxs8pX
H1z+ktnzXmufzx8+vSvLVzL7Plw+UvlJ1feQ+jj/F/KRlp/kvPkXT/dh+0f4
TfaTPN/7weThB8JHKnb+rujj++tj8o/KT/K86vud033Y/tHykx5T/mPie0/3
4eUjmX9Veeb/T+rj3P7R8pOcN//G6T7ff/aP7Df5nPneD375dB/+/eEjmZnv
/dx3/uckyz9aftLjyruPPPPtH9lv8jl57wf/+uk+XD5SMfO9n/s4/758pOUn
ka8+8vC75B/Zb8JP8nzvxzzuw78dPlIx872f+zh/Tj7S8pOYV31/ebrPuf2j
Ys/3fvT9V6f7cPlIxa9T3sx95ttHWn4S+er75Ok+5+UjmT3f+53/fHe6D+Mf
2W96c/A3lYcfVh/8EflI5Sd5vvejjzznfz58JNjzvR99/+fp/vG90j6S+Wnl
/zz64E8PH8nsvJn7/PO9N3ykYvLe7yH10Y9/VH6T+W7l6XtIfbD9o/KTPN/7
0Ucetn905/CTnH9CTB5ePpLZ+TuiD35s+Ehm5834VLB9psX/RvnHog/+wsk/
Kr/J7Hz18fm3f1R+kudXH3nO7R8tJu/96Hv96T78p8NHMt+svJk+ePlI5n+n
fPXBy0cyO2/+4ek+/EfDRzL/QHkzfXx+lo9kZl71/cLp/vmvx8NHMjPP+7kP
/ujwkczOVx/8zuEjmX9XefdxH14+ktn5d0Yf/Jvyj5af5LyZ+3x+3jR8JDPz
vR99P326z/lfDB/JzDzvd/7+Od2Hl49kdv4vog9+ZfhIZufN3IeXj2R2/pXo
g5ePZHa++uAXh49kdt7MffifDR/J7PyLYu7D9o+Wn+T8PxOTh58fPpLZ+aei
j38/rv/3sfaRzMxbfZwvH8nMvNXH+dnxDXwkM/nVx/nPDh/JTH71wWexG/hI
5ncrX33M//rwkczkVx/ntwwfycy81QcvH8n8TuWrD/6q/KPlJzlffee//zd8
JPNfKV998GX/3CXPW30w/91peUuet/pgcuuj560+fnw9rG/3vdpj9fFx+Ujm
h6LHfdxbPpKZ/OqDHxw+ktn56mP+8pHMzFt9x/dL+0hm8qvv+H656CMVv6x8
9R3fLxd9pPKTnK++4/ulfSTY81Yf/L7hI5l/pHz18flZPpKZeavv+H5pH8lM
fvXB198z7SOZna8++A+Gj2R+j/LVB19/v7SPZP5D5asPXj6S2fnqO75f2kcy
O1998H8cPpLZ+eqDbx0+kvnrylff8f3SPpL5FuWrD/7a8JHMzlff8f3SPpL5
r5SvvuP7pX0ks/PVd3y/tI9kdr764OUjmZ2vvuM7pn0ks/PVB9s/WvyQ8tUH
Lx/J7Hz18etD+UvF5F9rn8959y3/CfZ9GP+IfZafVH1/oT7OPyD/yH4TfpLn
ez8Yvwm2f7T8pF9U/gNi8nD5SMXO3xV9z574cflH9pvwkzyv+vCb4HvkI9lv
8vnvKM9+zPv1033O8Y/KbzLfqzzzP6c+zu0f/Ub4SZ7v/WD8JubZP3p5+EnM
93704Tedf/8NH8nMfO/nPtj+0fKTfl9595GH7R/9+vCTnGc+/zz/8nQfLh+p
mPnez33w9+QjLT/JeTN52D7TbeEneb73g/Gb4PKRim9THn5WfZw/Jx/pL4ef
9NvKuw+/iXn2j+w3ce753g++6XQfLh+pmPne71n10f9H8pE+Ofwk583ch+0j
2W+yn/RJ5f8o+mD7R+Uneb77nlUf5x+Wj1R+kud7P5g88+wj2W/CT/J87wc/
c7p/fF+0j2Rmvvd7Vn302z9afpLzZvLMu1v+kf0m+0nkvR/8K6f79Ns/Wn7S
e5W/O/qYZ/9o+Unkq4885/aPlp9E3vvB5OHlI5nJez/3wfaP7Df53HkzfhO8
fCTzo8o/Fn1w+UjFzsPPqg9+SD7S8pOY5/3oIw/bP7LfxLnnez/mkYeXj2Qm
7/2eVR/99w4fyfynyruP+8yzf2S/yefkvR9MHi4fqZi893tWfbB9pF8YfhLz
vJ/7zr+eGT4S7PmrD14+ktn56oPtIy0/6aPKVx/81eEjmZ03cx9+RD6S+TfF
zn9VjN/E5+dN8pF+evhJzPd+9OE3cf6s/KPykzzf+9FHHn5g+Ehm558Vcx+2
f7T8JOcfEJOH7xs+ktn5V8Tch5ePZHb+vuiD7R8tP8l5M/nz99zZ/9N+k/0k
51+MPtj+0fKTnDeTh/GPyC92/qnog/GP7COVn+R89cHlI5k9b/XBZ8c/wUcq
P8n56oPtHxV73uqDr//3sYs+UrHz1QeXj1R+kvPVBy8fCfa81QcvH8l8i/LV
x68Py0cyk199nC8fycy81Qdf9u+N87zVx/zlI9XfY7f6OL+st+R5qw8mVz7S
+ddJmrf6YD7aRyoub8l9fFw+Euze1Xf+vggfqdj56oPLRyo/6UHlq+/4fmkf
Cfa81Xd8D7WPZHa++vjxu3wkM/nVd3wPtY9kJr/6ju+Xiz5S8YvKVx9cPlL5
Se9TvvqO75f2kWDPW33H90v7SGbnqw9ePpL5LuWrD/7OvTf2kcx/oHz1wctH
Mn9b+erjx+/ykczkVx/nXx8+kpn86oOXj2T+j8pXH/OXj2Rm3urjfPlIZvKr
7/h+aR/J/DXlq4/5y0cyk199nC8fyUx+9cHLRzI7X33H90v7SGbnqw9ePpL5
YeWrDy4fqdj56oPLXzJ73mvt8/nrT++y5T/Bvg/jH5XfZL5sH3yL/CP7TfhJ
nl995HmX2j9afhJ57weTh/GPyC8m7/3cxzl/PlT5TfaTyFcfedj+kf2me8TO
Pyrmz3+C8Y/oLz/J872f++Cr8pE+PPwk583k4ZfkI/398JOcvyomD9s/KvZ8
7/d69XFuH6n8JM/zfu77qRPbP/qX4Sd5vvtg/n48ePlIZuZ7v5vVR7/9o+Un
OW8mD9tHst/kc+e/J8angvGPym8y3678bdEH/1/yj8zPyXdyvvrg18lnuin8
JM9ffTD+UflN5puUrz7YPpL9Jvwkz68+8vx4tc+0mLz3g791ug/jH5XfZGae
9/sp9Z3/fCr/qPwkz/d+MHn4aflMz4Sf5Pnez30w/lH5TeZnlK8+2D5S+Ume
v/pg/KPz3w8JP8nzqw+/iV9vykcqP4n53s9957/+yD8qP8nzqo88bP9o+UnO
Px598PKRzHcqX33n7y/5R/ab7Cc5byYPl49U7Pyj0QfbP/oP4Sd53urj828f
qfwkz199nN8sn2n5SeRXH4x/VH6T+fXKVx9sH6n8JM9fffAP5DOVn+T5qw+2
f/S/hZ/k+avv+PXkRR+pmPzqO//6Y/hIsOetPtj+0WLnqw9ePpLZ+eqDvyL/
aPlJzpvJw/aRroaf5Pne7/zrvdN9Pj9vlI/0Xw8/ibz3o4885/aRyk/yfO/n
Ptg+0vKTnK8+2D7S8pOcrz7YPtLyk5yvPnj5SGbnqw+2j7T8JOerD14+ktn5
6oPtHy0/yXkzeZg/r4n88pOcfyr6YP68JvLLT3pe+eqDl49kfo/y1Qdf/+9l
7SOZna8+mD+vifzyk5yvPnj5SOafVb76YPtHi52vPtj+0WLnqw8uH6nY+eqD
/yp8pPKTnK8+ePlIsOetPrh8pGLnqw/+YvhI5Sc5X33wZf/cJc9bfbD9o8Xr
z2kqT+iyH5fnxD24vr143fNH+0eLq8d98NmHG/hIZuerDz775fkGPpLZ+eo7
vl8u+kjFryhffcf3y0Ufqfwk56vv+H5pHwn2vNV3fL+0j2R2vvrg5SOZna++
4/ulfSSz89UH2z9a/Lzy1cfXN/aPFpNffcf3S/tIZvKrDy4fqfg7ylff8f1y
0UcqP8n56oO/Pnwk2PNWH4x/RN9i56vv+H656COVn+R89R3fL+0jwZ63+o7v
l4s+UrHz1Xd8v1z0kcpPcr764OUjwZ63+uDlI5mdr77j+6V9JLPz1QcvH8ns
fPXBy0cyO199/PfC8peKyb/WPp8/eHo3LV8J9n14+Ujm6ntAfZzbP1p+kvNm
8rD9o+UnOX+L+F2n+/CD4SMV/5Lyd0UfbP+o/CTPqz7yfD7sH9lv8jl570cf
ec6Xj2Qm7/3cB/9r+UfLT3LeTJ75L8lHKj/J870ffeQ5xz8qv8lM3vu5D37z
8JFgz68+7jP/g/KZ7gs/yfO8n/tg/KPym8z3KU/fg+qDvyP/qPwkz/d+9JGH
7R/Zb/K58+zHvFtP9+HlI5mZ7/0eVB+8fCQzee/nPtj+0WLnYea98k+u34eX
j2RmnvdzH+f2j5afRL76yMPflM/0rfCTPN/7Me/rp/sw/lH5TWbmez/3cf6w
/KPykzy/+sjD9o8WO89+zPvs6f7xvdI+kpl53u9B9dH/J8NHMjtv5j58t3yk
94af5HneDyYPl49UfpLzzP8f1ce5/aPykzzP+8Hk+XzYP1pM3vvBt5/uw8tH
MjPP+z2oPvrtHy0/yXkzeeYtH8lM3vvBbzndh8tHKmae93Mf/K/CRyo/yXkz
95lv/6jY87wffNPpPrx8JDPzvN+D6qP//cNHMjtv5j7z7B8tJu/94L873YfL
Rypmnvd7UH30/3z4SOUnOW/mPrx8JNjzvJ/74OUjmZ2vPvhnho9kdt7Mfdj+
0fKTnP8ZMXn4I/KRyk/yfO8Hk4ffKB9p+UnOf0RMHn5m+Eiw53s/mPvw/cNH
Mjv/jJj78PX/PtY+ktn5+8Xch+8dPpLZ+ZfF3IeXj2R2/t7og5ePZHa++uDr
f55A+0hm583ch+0jLT/J+fdFH2z/aLHz1cevB/aPFpNffZwvH8lMfvVx/u3h
I5nJrz7O7R8tJr/64OUjmZ2vPuYvH8lMfvVxvnwkM/nVBy8fyex89TF/+Uhm
8quP87efHbSPZCa/+uDlI5mvKF998PKRzM5XH8zf60V++UnOVx/ff8tHMvvv
eas++LLekuetPuaTu+xH8qsPrm8vXvf4yPyz4xv4SGb3VN/x/dI+kpn86ju+
h9pHMjtffcf3S/tIZuerD35h+Ehm56vv+B5qH8n8I+Wrj8/P8pHM5Fff8f3S
PpKZ/OqDy0cqdr76mF8+UvlJ5Fcf598ePhLseasPXj6S2fnqO75f2kcyO199
8PKRzM5XH7x8JLPz1cfnZ/lIZvKrj/PlI5nJrz54+Uhm56uP+ctHMpNffcf3
S/tIZvKr7/h+aR/J/CXlq+/4fmkfyUx+9XH+7PCRzORXH1w+UvHnla8+5pe/
ZPa819rnc941y3+CfR/GP2Kf5Sddtg+2f1R+kudXH3nY/pH9Jp87f4sYv+n4
jmwfyfwu5e+Kvv/jxPhH5MtP8rzqI8/5PfKRlp9E3vvRR57z5SPBnu/9/kx9
9F+Vj1R+kud5P5g8816Sj7T8JPLejz7ynC8fCfZ87+c++Ip8pPKTPK/6yDPf
PlOx53s/98H2j8pP8rzV99kTf08+UvlJnl995Dm/TT7TrcNPIu/96MNvgu0f
lZ/k+d7Pfcx/LnykYvLVx33O7R/hN9FnX4m893MfXD5SMfNXH/M/KR9p+Unk
q4885/aPvh5+kud7P/rwm+DykYq/rvw3o4/5H5aPtPwk8tVHnvOn5TN9dvhJ
5L2f+47vi79Ov8n8WeWrD7aPVH6S568++G75SOUneX71kefnb/yj8pvM5L2f
+zh/Qv5R+UmeX33k4TvkM90efpLnez+YP/8Jxj+ib/lJtyt/R/TB9o/KT/L8
6iMP2z96y/CTnH80+uDlI5nfonz18fm3j7T8JPKrj/Ob5TPdFH6S568+GP+I
vuUn3aR89cH2kcpP8vzVB/9APtPfhZ/k+asPxj+ib/lJf6d89fH5sY9UfpLn
r77zr2eGj2Qmv/rg5SOZna8+2D7S8pOcrz7Y/tHyk5w3k4cfkX+0/CTnvyIm
z+fHPtLyk8h7P/dxbh9p+UnkVx9sH2n5Sc5XH2wfaflJzlcfbB9p+UnOVx+8
fCSz89UHLx/J7Hz1wfaRlp/kfPXBTw0fyey8mftw+UjFzj8Vfcffn7voI5k9
b/XB5SOZPW/1wd8OH8nseasPXj4S7HmrDy4fqdj56oPLRzJ73uqDl48Ee97q
g8tHKna++uDykcyet/rg5SPBnrf64OUjmd+ufPXBy0cyO199cPlIxc5XH3zZ
vzfO81YfXD5SsfPVB1/WW/K81QfTc9mPy3PiHszHB/XtZs9ZfXxcPhLseavv
+H5pH8nsfPUd3y/tI5mdr77j+6V9JLPz1Xd8v1z0kYpfUL764PKRzJ63+mD+
vKbj++Yie97qg8tHKr6mfPXB5SOZPW/1Hd8v7SPBnrf64OUjmZ2vvuP7pX0k
s/PVBy8fyex89cHlIxU7X33H98tFH8nseavv+H5pHwn2vNV3fL9c9JGKna++
4/vloo9k9rzVBy8fCfa81QeXj1T8ReWr7/h+uegjmT1v9cHLR4I9b/XB5SMV
P6t89cHlL5k977X2+Zw/x3L5SrDv/8OJl49krr6X1ce5/aPlJ5H3fvSR59z+
kf0mn5P3fvThN8HXPw8XfaTiX1Ke+S+rj3P8I/tN5Sc5bybPPPtH5Sd5vvej
jzzn+Ef0lZ/k+d7PffC/lo+0/CTnzeSZ/5J8pOUnkfd+9JHnfPlIsOd7P/fB
b5aPVH6S51UfeeYvHwn2fO/nPrh8pGLnq4/535GPtPwk8tVHnp8/7B/Zb+Lc
870f8/Cb4PKRipnv/dzHfPtIy08iv/o4t39U7PnVh98El49UzDzv5z7mf1I+
0vKTyFcfec7tH9lv4tzzvR993zjdh8tHKv6W8t+MPuY/LB9p+Unkq4885/aP
ij3f+9GH33R8r7SPZH5aeTP34T8ZPpLZeTP34bvlI5Wf5HneDyYPl49UfpLz
zH9FfZw/Lv+o/CTP834wedj+kf0mnzv/ePTBy0cy36k8fa+oj3P7R8tPct5M
nnn2jxaT934wfhNcPlIx87yf++DykcpPcr76YPtHxZ5XffhN8PKRzDcrb+Y+
/P7hI5mdN3Mftn+02Pn3i/Gb4PKRin+gvJn78M+Hj1R+kvNm7sPLR4I9z/u5
D14+ktn56oPfMXwks/Nm7sP2j5af5Pw7xOThj8hHKj/J870fTB5+Y/hI5Sc5
/xEx9+HlI8Ge5/3cB98/fCSz82buw9c/to9kdv5+Mfdh/Cfyy09y/mUx9+Hl
I5mdvzf64OUjmZ2vPnj5SGbnqw+2j7T8JOerD742fCSz89UHLx/J7Hz1wctH
MjtfffC3h49kdr764OUjmZ2vPnj5SGbnq4/34/KRzORXH+fLRzKTX33w8pHM
zlcfvHwks/PVB5/FbuAjmZ2vPnj5SOYrylcfvHwks/PVBy8fyex89cHLRzK/
Wfnqq7+3bTH51cf58pHM5FcfvHwks/PVB5O77MflOXHv+H5pH6n2WH3H91D7
SObqcd/x/dI+ktn56oOXj2R2vvqO75f2kcw/Ur76+PG7fCQz+dV3fL+0j2Qm
v/rg5SOZn1e++uDlI5mdr77j+6V9JLPz1QcvH8nsfPUd3y/tI5mdrz747MMN
fCSz89UHLx/J7Hz1Hd8v7SOZna++4/ulfSSz89UHLx/J7Hz1Hd8v7SOZna++
4/ulfSSz89V3fL+0j2T+kvLVd3y/tI9kdr764OUjmZ2vPnj5SObPK199/PpQ
/lIx+dfa53PeBeUrmX0fxj9in+UnVd+96uP8A/KRyk/yfO8Hk4fxj8pv4tzz
vR+M3wSf/ev9if/9fD+4/KR3KX9X9MH4R/abyk9y3kwevkc+0vKTnH9UTB5e
PhLs+d7PffBV+UjlJ3le9ZGHX5KPtPwk56+KycPLR4I93/u5D74iH6n8JM+r
PvLw8pFgz/d+7oPLRyp2Hr5XfZx/Tz7S8pOcN5OH7R/dGn6S53s/+PbTfbh8
pOJblb8t+uDnwkcqP8l5M/dh+0f2mzj3PO/nPrh8pGLmrz74k/KRlp/kvJk8
P17tH9lv4tzzvR+M3wSXj1TMfO/nvvOfT+UjLT/JeTN52P6R/SbOPd/7ue/4
vmgfyfxZ5asPto+0/CTnqw++Wz5S+UmeX33k+fzjH5XfZCbv/dzH+RPyj8pP
8vzqI8+5fabF5L0fjN8E4x+V32Rmnve7V33n7y/5R+Uneb73g8nD9o/eMvwk
5x+NPnj5SOa3KF99fH89NHwkM/nq4z5s/8h+k8+dZz/mvf50H14+kpn53s99
51/fyD9afpLz1cd8+0f2m3xO3n3wD0/34eUjmZnv/dzHuX2k5SeRX33nX38M
H8lMfvXBy0cyO199sH2k5Sc5X32wfaTlJzlfffAj8o+Wn+S8mTyfH/tIy08i
7/3cx/nykczkVx/8gPyj5Sc5byYP20dafpLzD0QffP1j+032k5yvPnj5SGbn
qw9ePpLZ+eqDl49kdr76YPwn8k8Odt7Mffja8JHMzj8VffDykczOVx989uEG
PpLZ+eqDl49kdr764OUjmZ2vPrh8pGLnqw8uH6n8JOerD14+Eux5qw9ePpLZ
+eqDl49kdr764OUjmZ2vPnj5SOa3K199/Pq5fCQz+dXH+fKRzORXH1w+UvGb
lK8+uHyk8pOcrz54+Uiw562+8/fF8JHMzlcffFlvyfNWH8w/98uX/Lg8J/qO
75f2kcz+9uo7vl/aRzJXj/uO75f2kczOV9/x/XLRRyp+Qfnqg8tHKj/J+eqD
l48Ee97qg5ePZL6mfPXBy0cyO1998HeGj2R2vvrg5SOZv6189R3fL+0jmZ2v
PvgsdgMfyex89cHLRzI7X33H90v7SGbnq+/4fmkfyex89R3fL+0jmZ2vvuP7
pX0ks/PVBy8fyex89cHLRzJ/UfnqO75f2kcyO1998PKRzM5XH1w+UvGzylcf
XP6S2fNea5/P+XV7+U+w73/6xPhH5TeZL9vH+S3yj8pP8vzqI/+ZE9s/st/k
c/Lej3nk4eUjmcl7P/fB9o8eE/vceTN5/vnsHy0/ibz3o48858tHMpP3fv9W
ffTbP1p+kvNm8syzf7T8JPLejz7ynC8fyUze+7kPfrP8o+UnOW8mz/zykYrJ
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
I5l/VXnm/4r6OLd/tPwk583kmWf/aPlJ5L0ffeTPv/+Gj2Qm7/3cB9s/Wn6S
82byzF8+kpm893MfXD5SsfPVx/zn5SMtP4l89ZGH7R+Vn+T53o95d5zuw+Uj
FTPf+7mP8y/IR1p+EvnqI3/+6827buwjwZ7v/ei76XQfLh+p+HXKm7nP/E/K
R1p+EvnqI8+5/SP7TZx7vvejjzxcPlKx89+MvvOf/+QjLT+JfPWR59z+kf0m
zj3f+9FH/vi+aB/J7PzT0Qd/evhIZufN3Ifvlo9UfpLneT+YPN9/+Ee8z5af
RN77uY9z+0flJ3l+9ZE///lU/pH9Jp87/4SYPLx8JLPzd0QfbB9p+UnOVx9s
/8h+k8+dN5OHy0cqdv5t0cfn/yH5SMtPIl995Dm3f2S/iXPP9370kYeXj2R2
/ubog+0fLT/JeTN52P6R/SafO3+vmDxcPlKx8z+IPj4/5SOVn0R+9XH+N8NH
gj2v+rgPLx/J7PzfRB+8fCSz89UHLx/J7Hz1wY/IRyo/yfOqjzyfn/KRyk8i
7/3cx/mzw0eCPa/6uA/bP1p+kvPPisnDy0cyO/9A9MH2j5af5LyZ/PG/a7WP
ZHb+vuiDr3/e2kcyO2/mPrx8JLPzL0YfbP9o+UnOm8nDzw8fyez8U2Lu8+/H
8pHM5L2f+zhfPpKZfPX9wek+vHwk8yeUN3MfXj6S2fnqg5ePZHa++uDlI5md
rz54+Uhm56sPXj6S2fnqg8tHKna++mD8I75+W36S8/D71Mf58pFgz/d+7oPt
Hy0/yXkzedj+0WLnvxx9sP0j/Kbyk5yH+f4nz/n1D+0jmZ1/KPrg5SOZna8+
/nnsH+E38ePF5+TdB5OHy0cqJu/93AefxX7C3xP3o2Dn4fep7/ge2n/ukud7
P/fB9o+Wn7T+nKbyhC770fnPRN/x/dI+Uu2x+vi4fCRz9bjv+H5pH8nsfPXB
y0cyO199/HhdPpKZ/Oo7vl/aRzKTd9/71Ef/8pHMzpvffboP/97wkcx3Km/m
Pnz2r/cNfCSz878XffDykczOm2893T++X9pHMt+ivJn7x/dL+0hm56sPXj6S
2fnqO75f2kcyO199sP2jxc5XH7x8JLPz1Xd8D7Xf5HPy1Ueec/tHi8l7P/dx
bv8Iv4lfz31O3n3H99CrflL5S8Xkvd/q8zm/Li3/iXPucw7jH5XfZHae/ifV
x7n9o/KTPN/7weRh/CP6yk/yfO8Hk4ftH5Wf5Pnez318f+E/ld/0uJh89ZGH
7R/Zb7pH7Dz7MY885/hH9Jef5Pne74/Vx/lV+UjLT3LeTJ55L8lHWn4See9H
H3nOl48Ee773cx98RT5S+UmeV33kmb98JNjzvZ/74PKRip2Hn1TfUyf+nnyk
5SeR9370kefc/tEd4Sd5vvejD78JLh+p+A7lmf+k+pj/BflIy08i7/3oI3/+
6438I/tNnHu+93MfXD5S8U3KVx/zPykfaflJ5KuPPJ8P+0flJ3m+92Meebh8
pGLy3s99zL8qH2n5SeSrjzzz7R+Vn+T53o955I/vi/aRzOS935Pqo9/+0fKT
nDeTh++Wj1R+kud7P5g8XD5S+UnOM/9J9XFu/6j8JM/zfjB55tk/Wn4See8H
k4eXj2Qm7/2eVB/9y0cyO199zLN/tPwk8u6DycPlIxWT937ugx+Sj7T8JOfN
5Jlv/6j8JM/3fjB5ePlIZvLez32w/aPlJzlvJs98+0fLTyLv/WDycPlIxeS9
35PqO349edFHKj/J+eo7/3pG/lH5SZ63+uDlI5mdrz54+Uhm56sPXj6S2fnq
gx+Rj1R+kue57/zrvdN9zstHKj/J+UeiD7Z/VH6S57mP/clzbv9o+UnOM59+
8pwvH8ns/APRB9s/Wn6S82byx/9dfvtIZufviz7Y/tGPxD533kz++N+t2kcy
O/9i9MH2j5af5DzMjx/ynOMfkS8/yfO9H/3k4fKRyk8i7/3cx7n9I/tNnHte
9ZGHl49kdv4T0QcvH8nsfPXBHx8+ktn56oOXj2R2vvrg5SOZna8+ePlIZuer
Dy4fqdj56oPxj8pvMjsPP6k+zpePBHu+93MfbP9o+UnOm8nD5SMVO//l6Dv/
+uPkH5XfZD/JeTN5+HqsfSTY872f++DlI5mdrz5+PNk/Wn4SeffB5OHykYrJ
ez/3wWe/PL/7/02/yew8/KT6ju+h/ffGeb73cx9s/2j5SevvmSN/fA9d3mNy
fv25Scd3zf64PCfuwfXtxeuePy4fyVw97oPLRyp2vvrg5SPZd3K++o7vl79N
v8nnzsNPqo9z+0f2mzj3fO/nvuP7pf0m+0nvVr764K8PH8nsfPXx/WX/yH6T
z8m7DyZ/fL+0j2Qm7/3cd3y/tI9kdr764OUjmZ2vvuP7pX0ks/PVBy8fyex8
9cFnxz/BRyp2vvqO76GLflP5Sc6bycPLR7Lv5PzD0cePX/tHy08i777je+hV
P6n8pWLy3m/1+Zw/h3D5T5xzn3MY/6j8JrPz7uc+bP+o/CTPrz7y/Lpp/2j5
SeS9H0weLh+pmLz3cx+M/1R+k/0k583kYftH5Sd5vvfjn4c85/hH9Jef5Pne
73n1cX5VPtLyk5w3k2feS/KRlp9E3vvRR/78+2/4SLDnez/3wVfkI5Wf5HnV
R5755SOZPd/7uQ/GP7Lf9MfBzsPX1Mf58/KRyk/yfO8Hk2febfKR7Ddx7vne
D8ZvgvGP7Df9cTDzvd819dH/BflI5Sd5vveDycP2j4o93/u5Dy4fqdh5+Jr6
OP+UfKTlJzlvJs88+0flJ3m+94PJw+UjFZP3fu6Dr8pHWn6S82byzH9aPlP5
SZ7v/WDyMP5R+U1m8t7vmvrot39UfpLnez+YPHy3fKTykzzf+7mPfx78o/Kb
zMxffZzbPyo/yfOrjzznd8hnKj/J870fTB7GPyq/yUze+11TH/3LR7Lv5Hz1
Mc/+0fKTyLsPJg8vH8lM3vtdUx9s/2j5SeS9H33kYftHy09ynvnMe8PpPrx8
JDPzvZ/7YPtHy09y3kye+T+Qz1R+kud7P5g8jH9UfpOZvPe7pr7j15PtI8Ge
7/3cx/nfDB/JTN5951/PnO7T/7HhI5mdZz/6uc/5O4ePZHae/ejnPuflIxU7
/87og/GPym+yn+Q8fP713uk+/Kbwkcye7/3+9sTc59z+UflJnuf9YPL04x+V
3+Rz55lPP3nOX/n6jX0k2PO9H/3c59z+0fKTnH9FTP749460j2R2/r7og+0f
LT/JeTP543/Xar/J7PyL0QfbPyo/yfPcx+eX/PnXx2cfX/WFlp/kPPPpJ3/8
/bmLPlKx889HH2z/qPwkz6s+8vDykczOfyL64B//3xv5SGbnqw/++PCRzM5X
H7x8JLPz1Xf+68/ZAu0jmZ2Hr6mP8+UjmZ2vPvhr4SMVO2/mPox/VH6T2Xn2
u6Y+zpePBHu+93MfbP9o+UnOm8nDy0cyO//l6IPtHy0/yXkzeXj5SGbnH4q+
86+Xho9kdh6+pj7Y/tHyk8h7P5g8XD5SMXnv5z4Y/6j8JrPz8DX1Hd9D7SPB
nu/93AfX3xMH+9x5M/nje+jyfw6T85+JvuP75fIe0/pzmsoTuuzH5Tkd303P
57cXr3v+uHwkc/W4Dy4fqdj56ju+X/42/Saz8/A19cH2j4o93/sd30OvMv7T
8X3TzDzvd3wPvcrLRzI7z37X1AfbP1p+EnnvB5OH/+fhI5nJe7/je+hVXj6S
2Xn2u6Y+zpePZHa++uDfOnu/tI9kdt7MfXj5SGbnfyv64LPjG/hIZuer7/ge
ar/J586bycPLRzI7/3D08ePJ/tEbhp9E3n3H99B/Pufyl4rJe7/V5/O7Tj+v
L/+Jc+5zDi8fyey8+7kP2z9afpLzZvKw/aPlJzn/AfH/cLoPLx/J/EvK3xV9
MP5T+U2Pi503k4ftH5Wf5Pnej3cEec7xj+gvP8nzvd971Mf5VflIy09y3kye
eS/JR1p+EnnvRx95zpePBHu+93MffEU+UvlJnld95JlfPpLZ872f+2D8I/LL
T3K++uDvyT8qP8nzq488fJt8pjvCT/J87wfjN8H4R/QtP+kO5W+LPtj+UflJ
nl995OHykYqd/0L0wfhH7Lf8JOfhu9THuf2j8pM83/vB5GH7R8tPcv5TYvLw
8pHMzn8z+mD7R8tPct5MHn5aPlP5SZ7v/WDyMP7R8f3RfpLzT0cfbP+o/CTP
rz7y8N3hIxU7/2kxfhNcPpLZ87zfL6qPc/tH5Sd5nveDycN3yGcqP8nzvR9M
HsY/om/5Sc7fEX3w8pHsOzlfffDb5DOVn+R51Ucetn9UfpLnez/3wQ/JRyo/
yfOrjzxs/+gN4Sd5vveD8Zvg5SOZ36D8zdEH2z9afpLzZvLwD+QzlZ/k+d4P
Jg/bPyo/yfO9n/vg5SOZna++869n5B8tP8n56oN/V/7R8pOcrz4YH4l8+Ume
v/rg8pHMnr/64EfkM5Wf5HnVRx7GR7LfxDz7Sc4/En2w/aPykzy/+sjD9o+W
n+T8s2LyMP4R+fKTPN/7weRh+0flJ3m+94PJw8tHMjt/X/TB9o+Wn+S8mTxc
PlKx8y9GH2z/qPwkz6s+8vD13HfTb/K580+JyR9/f659JNjzvZ/7OP+E/KPl
J5GvPvLw2Ycb+Ehm5z8RffCPUzfykczOVx/88eEjmZ2vPrh8pGLnqw8+iz3Y
fpPZ+eqDl48Ee/7qg+0jlZ/keasPxj9iv+UnOQ/fpT7Ol48Ee773cx/8/zV2
/jF+3/V9V8WIr5qm6BJUbW0sTVqITeuR3CZNlBimEgNSm+ZSBA2+SJs0X9Ul
dRyCFsfJPwsh/8RybMoYZJpWOlxVgpKRABfWgoqJNMkNQUsnZ0FKk3g/vIFR
RwNjArOQKd/v5/G9vR/H8573D8fD7/fz+Xrb5x+fH4/c2T9qfpLzZvJw85HM
zj8Z+vj1sn/U/CTyqY8868lHSkze53MfvCSfCb4Y2PnUx3z7R8lP8nz3weTh
5CMlJu/zuQ/GP+J8zU9yHt6vvvF6KPtIsOf7fO6D7R81P8l5M/nxemjn30fO
+dOhb7x+2fnXYWrfZy59nSPyjdvXaUqe0E4/Ns+JfXD68cRtHx/5/Zp8pMTu
SX3j9cumvwNfDEzeffvVR7/9o5Wln+4neb7P5z4Y/2i8vtnqJ3l+6iMP22dq
fpLzD4Y+2P5R8pM8P/WRH69fst90n9j5PaFvvH7JfpPZ+dQHNx8J9vzWN16/
ZL/JfpLzqQ9uPpLZ+dQHNx/J7HzqG6+Hst/kdfKpjzzrzUcyk/f53Me6/aOl
4ieRd994PfTdBSd/KTF5n6/1eZ2/d5v/xDr7H5/45MTNRzLT7/nuY32f/KPm
J5FPfddP+08O/+5s+kf2m7zOfJ+PPvwm+GDxkczvUX5/6IOPyEdKfpLnpb57
p/2w/aPkJ3m+z8ev1+q0n3X8I/qTn+T5Pp/74MPykZqf5Lz59mk/P59L8pGa
n8R8n4++H077WX+o+Eiw5/t87oPtIyU/yfNaH/ObjwR7fuq7edoPNx/J/F7l
zez/yMT2j5qfRD71kefnZ5/JbD+JvM/HvDdN++EPFh/JzHyfz33M/4r8o+Yn
MS/1fXnaz3rykRIz3+ej73XTfhj/KPlN5p9RHj6pPuafkn+U/CTP9/no4+tN
Mc/+UfOTmO/zMe+5aT/cfCQz830+9zHfPlLzk8i3PtYfk3/U/CTyqe/fTfvh
5iOZP6/8Y6EPto/U/CTnUx9sn8lsX8l58zum/Xz+8Y+S32Rmvs/nPtbtIyU/
yfNbH2z/qPlJzqc+uPlI5uuUT33w3cVHMjtvPjrth+0fNT/pHuXvDn3wV4uP
ZN6tfOrj828fqflJzGt9rNs/st/kdfKtD/508ZHMu5RPfbB9pOYnfUb51Afb
P2p+kvOpD/548ZHM31M+9fH5+eXiI5mZ1/pYbz6SmXmtD76/+Ehm51MffHXx
kcwfUt597Iebj2R2/urQB9s/an6S86mPz8/lxUcyM9998PK0H7aP1Pwk5vl8
7oNvkX/U/CTnzeRh+0jNT3L+ltC3uJ98+LX/k/0m+0nOpz64+Uhm51MfbB+p
+UnOp77x+4pkH8nsfOobv29I9pvsJzmf+sb/7n7T30l+kue3vvH53FYfKflJ
5Fsf67NP/5nsN7HueanvxLQfni1v4yOZTyr/cOiD5+/Lso9kdj71wc1HMjuf
+uBzxUcyO5/64Pn7sewjmZ9VPvXBzUcyX6N86oOfCj5SYudTH7x78o+S32T+
uvL0nVQf681Hgj3f54OPTPvhr8k/an7Sncqb6YOTj5T4jPKpj+cf9pGan0Te
ffz6s5/15iPBnu/zuQ9uPpLZ+dTHz8c+U/OTyLvvlPrg5CMlJu/zuQ/GP0p+
k9l5+KT6xuuX7CPBnu/zuW+8fsl+k/0k51PfeP2SfSSz86kP5vsQjdc3mZ1P
ffBOv+6S57U+eKfekue1PpjfF2/b4cfmOdHH79eT+nHvgz2n9Y3XL9+JfpPX
T6nHH9nPPvtHiT3f53PfeP2S/Sb7Sc6nvvH6JftIZudTH2wfqflJzpvZDx8r
PpJ5r/Jm9sNPFx/J7Pyx0Ddev2Qfyfx15VPfeP2SfSSz86lvvH7JPpLZ+dQH
XxF8pMTOpz7+POMf2W9KfhL51jdev2Qfyb4T81sf6/aPmp/EPPedUh+c/KXE
zPf5Wp/X+Xsx+U8w6+xfFycfKflJjyvvfvbDe+QjXV/8JOfN+E3jv0ub/pH9
JtY93+eDycPNRzI7vz/0wfhPyW86Ij6ovPvwm2D8I37+9pvsJ92r/FHxr037
4eYjwZ7v87kPPiwf6fbgJ3le6sNvgi/JR/ph8ZNuV/6wGL8Jbj4S7Pk+n/vg
K4OPlPgh5d3H/vMT2z+y38S65/l88Oq0H04+UmLm+3wvqI/+C/KRmp/kvJk8
vE/+0ZuCn+T5Ph/Mfjj5SInfpDznO68+1u0jfbn4SR9UPvXB9pHsN7Hu+a0P
xj+y33Qq8OuUT32L+w75SB8NfpLnpz78Jtj+0XPBT/J8n899cPKREj+nPH3n
1bf4+zT4SMlPct7MfuZ9Tv6R/Sb8JM/z+eBHp/3j9UX2kczM9/nOq4/+TxYf
yey8mf3MOyAf6R3BT/I8nw8mDycfKflJ5H2+F9W3+Pen+Eiw5/l8MPth+0eN
nT8e+uDmI5mdT32w/SP7TV533ozfBNs/anxU+btDH5x8pMTOw+fVx3rykZKf
9FXlUx9s/yix57U+uPlIZufh8+pjvflI5k8rn/pg+0eNnU99cPKREjuf+uC3
BB8p+UkfVz71wc8XHwn2PPfx+WU/6/aPGjvP+ejHb2Ld/lHzk+5XHqafPOtn
i49kdp759LN/cX9WfCSz82dDH2z/aLn4SXco7z78JvjzxUcyLyvPfH592M/6
b8o/an6S85yPfvKsv1J8JLPznI9+9i/uJ1/7sI2PZHae89HPftabj2R2nvOd
Vx/rzUcyOw+fVx/rzUcyOw+fVx/rs9g2PpLZ+dQHJx8psfOpD04+UvKTnE99
/HrNPv1nst/Euue5DyYPzz9mH8lM3udzH9x8JLPz8Hn1wc1HMpP3+V5SH2z/
qDF5n48+/Ca4+Ujmc8qb6WN+85HMzHMffGzaDycfKTHzfD73wfhIyW8yP6V8
6oPtHx0Rs+75rQ9uPpL5iPKpD04+UuKvKZ/6YHwm+03JT3I+9cEbxUeCPT/1
sR9uPpLZ+Y3QB+M/kW9+kvOpD04+UuI15VPfeP3yreg3mZ1PfeP1UPaRYM93
33g9tMnNRzIzz+dz33j9kn0ks/PwefWN10PZRzKT9/lg9o/XL/37xnmez0ef
vy/cTr/ukuf5fOfVBycfKXH6ukzj9dAmJw8p+U7kfT76xuuY72yZk/YlD8rs
j81HgluP+8broewjmZ1PfeP1S/aRzM6nPtg+k9l+kvOpD7aP1Pwk51PfeP2S
fSSz86kPbj6S+WnlU994/ZJ9JLPzqQ9uPpLZefi8+uArgo+UmLzPBy9P+8fr
l60+UvKTmOfzuQ9uPpJ9p3Xl6TuvPtbtH8HJT3pC+dQHrwV/KbHzMOdvPhTz
Vqa/t5r/xDr7WefvveYjmdfVR/+16mPd/pH9Jq+T9/noI888+0fNTyLv8zGP
PGz/qDF5n899sP0j+01ed95MHrZ/ZL/J684fFZOHm49kdp75K+pj3f6R/Sav
O28mD9s/st/kdecPi8nD9o8aO38p9MG75R81P8l5M3n4vfKZVoOf5Pk+n/tg
/KPkN5lXlafvWvXx+8n+UfKTPN/no4886/vkI9lv8jp5n48+8jD+UfKbzM4z
f0V9sP2jxJ7v87mPdftHjcm3Prj5SGbnUx/z7R/Zb/I6+dRHnnX7TI3J+3zu
g/GPkt9kdh5eUR9s/yj5SZ7v89FHnvXPyWd6NPhJnu/zuW+8vngm+k3mR5VP
fbB9pOQneX7r4+d3QD5T8pM8330weRj/KPlNZvI+n/sW//7IP0p+kuenPvJw
85HMzh8PfXDzkczOp77F9Zf8I/tN9pOcN5OHk4+U2PmjoQ/GP0p+k9n51Ac3
Hwn2/NYHJx8psfOpD8Y/Sn6T2Xl4RX2sNx8J9nyfz31w85HMzqc+2P5RY+dT
H2yfqbHzqQ+2f5T8JM9z3+L+aNrPuv0j+01ed5759JNn3f5R85OcZz795FnH
P0p+k9edZz795Bf3Z8VHgj3f53MffLl8JPtNXnfeTB7+gvyj5Cd5vs/nPvj9
8o+an+R86oPxkZLfZD/J+dQH4yMlv2lV686nPtj+UfOTnE99sP2j5ic5D6+o
j3X8o+Q3ed15eEV9rH9i9n4s+0iw5/t87oObj2R2PvXBzUcyO5/64Nmn/8xW
vyn5Sc6bycPz3FYfKbHzD4c+2D5T85OcT32w/aPkJ3l+64PtM5ntJzmf+mD7
R42dT338ebN/hN+U/CTy7oPJw/aPGpP3+dwHX1V8JLPzqQ+2f9TY+dQH2z9q
7Hzqg5uPZHY+9cHNRzI7n/pg+0fNT3LeTB6efdjGRzI7vxH6YPtHjZ1PffBs
eRsfyex86oObj2R2PvWN1y9b/abkJzmf+sbrl+w3mVeVT33j9cu3dX2T/STn
U994PbTVb7Kf5Pnuu059sH2k5Cd5vs/nPtg+U/OTnIdX1Md6+jpL9pM83+dz
H2xPKXlLnt/6xuuXnX9snhP74PTjids+f2w+kjn1uA9uPpLZ+dQHNx/J7Hzq
g5uPZHY+9Y3XL9lHMjuf+uDmI5mdT33j9Uv2m8zOpz7YPlPzk5xPffx9ZP8I
v8l+kue7DyY/Xr9kv8lM3udzH4x/lPwms/PwivpYTz6S2fN9PvfB+Er2m+hf
EzsPc/5bQ5/n8XXxkv9kf4n9rPP3Ev6R/abrxO73/AfUx/oe+UjJT/J8n48+
8qzbP0p+kuf7fPSRh5uPZHZ+f+jj18v+UfOTyKc+8qzfKB8p+Ume7/PRR551
/KPkN5nJ+3zug+0fJT/J81MfeebbP2p+Enmfjz7yrDcfyUze53MffKX8o+Yn
OW8mz3z7TI3J+3zug/GP7DddF9j51AdfkI+U/CTPT33k4X3ykZqf5PwFMXnY
/lHykzzf53MfnHykxM6nPrj5SLDntT44+UiJnU99i/+uQj5S85OcN5OHk49k
9nyfz32w/aPkJ3le64Nvk4+U/CTPT33kYftHiT3f53PfeH2RfSSz86kP/mTx
kczOm9nP9Yv9o+Ynkff5YPJw85HM5H2+B9RHv/2j5ic5byYPNx/J7Pzx0Ac3
H8nsfOqD7R81P8l5M3m4+Uhm54+GPrj5SGbnUx/cfCSz86kPTj5SYudTH4x/
lPwms/OpD24+Euz5rQ9uPpLZ+dQHNx/J7Hzqg5OPlNj51AfbP0p+kuelPvKw
/aPmJzn/vJg8bP+o+UnO3y8mD+MfJb/J685fLSYPNx8J9nyfz32w/aPmJzlv
Jg83H8ns/OWhD24+ktn51AfjP5FvfpLzZvbD8/dl2UcyO/+KmP1w8pESO78a
+mD7R8lP8rzWB+MfJb/J686nPvgTxUeCPb/1wc1HMjuf+uDmI5mdT33w7NN/
JvtNXnfeTB6eP1fOPpLZ+YdDH9x8JLPzqQ+ef8w+ktn51Ac3H8nsfOqDm49k
dj71cf9k/6j5SeTdB5OHm49kJu/zuQ++qvhIZudTH9x8JLPzqQ+efdjGRzI7
n/rg5iOZnU99fH6aj2Qm774Pqw+2f9T8JPI+H33k4VlsGx/J7PxG6IObj2R2
PvXBs+VtfCSz86lvvH7JPpLZ+dQ3Xg9lH8nsfOobr1+yj2R2PvWN1y/ZRzI7
n/r4/Wv/CE5+Enn3wfhN4/VL9pvMzPP56GM/jH+U/Caz85zvQfWl79uW2PN9
vvF6aJPxn+hrflL6vnL0pa9zNF7fZHb+ZOiDye30Y/OcxuuY7iOlc7Q+PjYf
yZx63Ac3H8nsfOqDm49kdj71jdcv2UcyO5/64OYjmZ1PfeP1S/aRzM6nPrj5
SGbnUx9s/6j5Sc6byY/XQ9lvMjt/ReiD8Y+S32R2Hn5QfawnH8ns+T6f+2B/
PafkM3me+zj/raHP8/hzn/wn+0vsZ/3ZifGP7Dd9WOx+zz+nPniPfKTkJ3m+
z0cfedj+UfKTPN/nYx55OPlIicn7fO5jHf/IflPyk8inPvLwjfKRmp/k/FEx
ebj5SLDn+3zugw/LR0p+kuelPvLwJflIzU9y/rCYPNx8JNjzfT73wbvlIyU/
yfNSH3m4+Uiw5/t87oObj2R2PvXx58P+UfOTyKc+8qzbP2p+Enmfjz7ycPOR
zM7vC33Mbz6SmXzrY735SGbyrQ9uPpLZ+dTHfPtHzU8in/rIs958JDN5n899
cPORzM6nPubbP2p+EvnUR5715iOZyft87huvV7KPZHY+9cH2kZqf5Hzq4+d3
QD5T8pM8330weRj/KPlNZvI+n/sW//7IP0p+kuenPvJw85HMzh8PfXDzkczO
p77F9Zf8o+YnOW8mDzcfyez80dAHNx/J7Hzqg5uPZHY+9cHNRzI7b9417Yeb
j2S+THkz++HmI5mdT31w85HMzqc+uPlIZudTH9x8JLPzqW9x/yH/qPlJzqc+
2D5S85OcT32w/aPmJzlvJg/bP2p+kvNXi8kv7s+Kj2R2/mzog+0jNT/J+dQH
Nx/J7Hzqg5uPZHY+9cH2kZqf5Hzqg+0jNT/J+dQHNx/J7Hzqg5uPZHY+9cHN
RzI7n/rg5iOZnU998Gv/u52PZHY+9cHNRzI7n/pg+0fNT3LeTB5uPpLZ+YdD
H9x8JLPzqQ+e57KPZHY+9cHNRzI7n/rga4qPZHY+9cH2j45NnPwk583k4eYj
mZ2/N/TBzUcyO5/64OYjmZ1PffAsto2PZHY+9cHNRzI7n/q4/7Z/1Pwk8u47
pz7Y/lHzk8j7fPSRh5uPZHZ+I/TBzUcyO5/64OYjmZ1PfXDzkczOp77x+iX7
SGbnU994/ZJ9JLPzqW+8fsk+ktn51Ddev2z1m5Kf5Hzqg+0jJT/J81sfbJ+p
+UnOpz7Y/hF+k/0kz299cPu+cfaT9iuf+sbrl51/Hab2febYD+/UW/K81jde
v3QvyfNaH5x+PHHb54/NRzKnHveN1y/ZRzI7n/rG65fsI5mdT31w85HMzqe+
8fol+0hm51Mf3Hwks/OpD7Z/1Pwk51PfeD2U/SbzsvKpD8Y/Sn6T2fnUBycf
yez5rQ/213NKPpPnpb5bQ5/n8ecy+U8w6+xnne/baf+o+Unr6qP/GvWxvkc+
UvKTPN/no4888+wfJT/J830+5pGHk4+UmLzP5z7m2z86Jmbd81Ifedj+UfOT
nD8qJg83H8ns/I2hD7Z/1Pwk583kYftHzU9y/rCYPNx8JLPzl0IffKX8o+Yn
OW8mDzcfyez8laEPTj5SYufha9THn48L8pGan0Te56OPPOv2j5Kf5Pk+H33k
4eQjJXae+XvVBycfKflJ5H0+97HefCTY81ofnHykxM6nvsX3tZaP1Pwk8qmP
POvNR4I93+dzH5x8pMTOw3vVB98mH6n5SeR9PvrIs958JNjzfT73wc1HMjsP
71Uf681HMjuf+phn/6j5SeTdB5OHm49kJu/zXaO+xb8/8o+an+S8mTzcfCSz
88dDH9x8JLPzqW9x/SX/qPlJzpvJw81HMjt/NPTBzUcyO5/64OYjmZ1PfbD9
I/tNXnc+9cHNRzLvUp6+vepjvflIZudTH9x8JLPzqQ9uPpLZ+dQHNx/J7Hzq
g58vPpLZeZjPL/tZv7/4SGbnOR/97Gfd/lHzk5znfPSTZ93+UfOTnGc+/eQX
92fFRzI7fzb0wZcXH8nsvJn9cPORzM5fHvrg5iOZnU99cPORzM6nPrj5SGbn
Ux/cfCSz8/Be9bHefCSz8/Be9bHefCSz8/Be9bHefCSz86kP/vbswjH7SGbn
Ux/cfCSz86kPtn/U/CTnzeTh5iOZnX849MGzD9v4SGbnUx88fy6efSSz86kP
bj6S2fnUB8/va7KPZHY+9fHnzf7RMbHXybsPJg83H8lM3udzH9x8JLPzqQ9u
PpLZ+dQHNx/J7Hzqg5uPZHY+9fH5sX/U/CTyrY91+0fNTyKf+sjDsz/e2/hI
Zuc3Qh/cfCSz86kP/mzxkczOpz64+Uhm51PfeP2SfSSz86lvvH7JPpLZ+dQ3
Xr9kH8nsfOobr4eyj2Qm77496huvX7KPZCbv89HHfrj5SGbnOd9e9cH2jxqT
9/n2qG/x/Lv4SGbnU994/bLz7yNHvvXBO/26S57X+sbrl+4teV7rg8nt9GPz
nNgHpx9P3Pb5Y/ORzKnHfeP1S/aRzM6nPrj5SGbnU994/ZJ9JLPzqQ9uPpLZ
+dTHnz/7R43Juw/GbxqvX7KPZL5CeTP7mdd8JDN59+1VH/3NRzI7n/pgfz2n
5DN5nvs4v/Ow5/HnJvlPMOvsZ/3YxPhH10z7m5+0rr4fh77Fn2v5SMlP8vzU
R551+0fJT/J8n48+8nDykRI7vz/0wfaPjolZ97zUR56fn/2j5ieR9/noI896
85HM5H0+98H2j5qf5LyZPPPtHzU/ibzPRx951puPZCbv892jPvp3yz9qfpLz
ZvLMTz5SYvI+n/tg/CP+vCY/yfPcd4/67pv4gnyk5Cd5vs9HH3nW98lHan4S
eZ+PPvKw/aPkJ3m+z3eP+piffKTE5H0+97HefCTY81ofnHykxM6nPuafko/U
/CTyqY8868lHMnu+z+c+2P5R8pM8z333qQ++TT5S8pM83+ejjzzryUcye77P
5z4Y/yj5TWbn4XvUx3rzkew7OZ/64APymZKf5Hmp74ZpP39/4x/x92Pzk5jv
87mPdftHyU/y/NRHHm4+ktn546EPbj6S2fnUB9s/an6S82bycPORzM4fDX1w
85HMzqc+Pv/NRzKTb338ebbP1Ji8+5iH3wTjHyW/ycw8n+8+9dG/Wnwk2PN9
Ppj9cPORzM6vhj64+Uhm51Mfn5+3Bh8pMfnWx/pfyD9KfpLntT74Q/KPmp/k
fOqD3yj/qPlJzqc+GB8p+U1nte586oObjwR7fuvj82MfqflJ5Fsf681HMpNv
fXDzkczOpz64+Uhm51MfnHykxM6nPtj+UfKTPK/1wfaPmp/kfOqD8Y+S3+R1
51Mf3Hwk2PNbHzz7sI2PZHY+9cHNRzI7n/pg+0fNT3I+9cHNRzKfUD71wbPY
Nj6S2fnUBzcfyex86oObj2R2PvXB8/uS7COZnU99XM/Nf3yr35T8JPLug8nD
zUcyk/f53Ac3H8nsPHyP+lhvPpLZ+dQHNx/J7Hzqg5OPlNj51AcnHyn5Sc6n
Ptj+UfKTPC/1kYdnf7y38ZHMzm+EPn4/NR/JTN598Nq0H/5s8ZHMzPP53Ac3
H8nsfOobr1+yj2R2PvWN1y/ZRzI7n/rG65fsI5mdT33j9ctWvyn5Sc6nPtg+
UvKTPL/1wfaZmp/kPHyf+ljHPyLf/CTnUx+cfKTkJzmf+sbrl+wjwZ7X+uCd
ft84z2t94/VL/7pLntf64J16S57X+mByO/3YPCf2wenHE7d9/th8JHPqcR/c
fCSz86lvvH7JPpLZ+dQHNx/J7Hzqg/GPyNtv8rrzqW+8fsk+kn2nZeVTH4x/
lPwmrzuf+ri+SD6S2fPdN14PbfpJ+Er2m+j313tins/Hvy+3hj7Pe3r6fZ38
J5h19rPOn4vkIyU/aV19Pw59rO+Rj9T8JPKpjzzr9o+Sn+T5Ph995OHmI5md
3x/6YPwj+032kzwv9ZGHb5SP1Pwk54+KycPNR4I93+dzH3xYPlLykzwv9ZGH
L8lHSn6S5/t8MHkY/yj5TbDn+3xPqY/13fKRkp/k+T4fTB5OPpLZ830+98H4
R/ab7g3sfOrjz/cF+UjJT/L81Eee9X3ykZKf5Pk+H33kYfwj+033BnZ+X+hj
fvKRzJ7f+lhvPhLsea0PTj5SYudTH/NPyUdqfhL51Eee9eQjmT3f53MfbP8o
+Ume1/qYf5t8pOQneX7qI8968pHMnu/zuW+8vngm+k1m51Mf3Hwk2PNbH3xA
PtINwU/yvNRHHk4+UvKTnGf+U+pb/Psj/yj5SZ7n88Hk4eYjmZ0/Hvrg5iOZ
nU99i+sv+UfNT3LeTB5uPpLZ+aOhD04+UmLnUx+cfKTkJzmf+uDL5DPtCn6S
56U+8jD+UfKbzM5fFvpg+0jJT/L81gc3H8nsfOqDk4+U2PnUBycfKflJzqe+
xf1H8ZFgz2t98P3FRzI7b2Y/fHXxkczO3y9mP3y2+Ehm568Ws39xfxZ8pMTO
nw19cPKRkp/kfOqDm48Ee17rg5uPZHY+9cHNRzI7n/rg5iOZnU99cPORzM6n
Prj5SGbnUx/cfCSz86kPbj6S2fnUB89i2/hIZudTH/cHzUcyk299rNs/aky+
9cHNRzI7n/rgldkD7+wjmZ1PfXDzkczOpz64+Uhm51MfPPv0b+MjmZ1PffA8
t9VvSn6S82by8Pxj9pvMzt8b+mD8o+Q3mZ1PfXDzkWDPb31w85HMzqc+uPlI
ZudTH39/NB/JTL71sW7/6IniJ5FPfeTh5iOZnd8IfbD9o7XiJzmf+uDmI5nX
lE99cPORzM6nvvH6JftIZudT33j9kn0ks/Opb7x+yT6S2fnUN16/ZB/J7Hzq
g5OPlNj51AfjHyW/yex86oObjwR7futbPP8uPpKZfOsbr1+yj2Qm3/rg5iOZ
nU994/VL/75xntf64J1+3SXPa33wTr0lz2t94/XLzj82z2m8juk+UjpH6+Nj
85HMqcd94/VL9pHMzqc+uPlIZudTH2z/qLHzqW+8fsk+kpl862O9+Uhm8q0P
xj8ar2+2+kme1/pgfCX7TeP1ztb5qe/W0Od5/L5L/pP9Jfb/zD+f81UTJx/J
7H7Pd9/CW5SP1Pwk8qmPPOv2j5Kf5Pk+H33vmfbDzUcyv135/aGP+faPmp9E
PvWRh+0fNT/J+aNi8nDzkczOM/8q9bFu/6j5Sc6bycOX5CMlP8nzfT6YPIx/
lPwms/PMv0p9rNs/Sn6S5/t8MHm4+Uhm53eHPjj5SImdT33wBflIzU9y3kwe
tn+U/CTP9/lg8nDykRI7vy/0wclHSn6S86lv8e9N8ZFgz2t9cPKREjuf+uBT
8pGan+S8mTzcfCTY830+98HJR0rsfOpb/H0qH6n5Sc6bycPNR4I93+dzH9x8
JLPzqQ9uPpLZ+dQHH5CPlPwkz0t95Pn3Bv8o+U1m8j6f+1g/If8o+Umen/rI
w81HMjt/QnzdtB9uPpL5WuXN7F9cf8k/an6S82bycPORzM4fDX1w85HMzqc+
Pv/NRzKTb32s2z9qfhL51Ecebj6S2fnLQh+8Wnwks/Nm9sPNRzI7vxr64OYj
mZ1PfXx+mo9kJt/6FvcfxUcyM6/1wfaRmp/kfOqD7SM1P8n51AfbR2p+kvOp
D76j+Ehm583s5/PTfCQzeZ/Pfaw3H8lMvvXBzUcyO5/64OYjmZ1PfXDzkczO
pz64+Uhm51Mf3Hwks/OpD24+ktn51Ac3H8nsfOqDZ4+ffoqPlNj51Dc+n9vq
IyU/iXzrY735SLDntT64+Uhm51MfvFJ8JLPzqQ9uPpLZ+dQHNx/J7Hzqg2ef
/m18JLPzqQ+2f9T8JOdTHzzPZR/JfEz51Ac3H8nsfOqDm49kdj71wc1HMjuf
+uDkIyV2PvXByUdKfpLzqQ+2f/RE8JM8L/WRh5uPZHZ+I/TB9o8aO29em/bD
zUcyH1TezH64+Uhm51PfeP2SfSSz86lvvH7JPpLZ+dQ3Xr9kH8nsfOobr1+y
j2R2PvXBzUcyO5/64OYjmZ1PfXDykRI7n/rg5CMlP8n51Ddev2QfCfa81gc3
H8nsfOobr1+yj2R2PvXBzUcyO5/64J1+3SXPa33j9cvOPab2dZqSJ7TTj81z
Yh+cfjxx2+ePzUcypx73wc1HMjuf+uDkIyV2PvWN1y9bfaTkJzmf+uDmI8Ge
1/pg+0eNnTfjN8H2l5LP5Hk+X+vz+gem3xfJf4JZZz9+E7+vko+U/CT6Pd99
rO+Rj9T8JPKpjzzr9o/sN7Hu+T4fffhN8Pzzt9VHSvwe5feHPubbP0p+kuel
PvKs3ygfKflJnu/z0Ueedfyj5DeZyft8d6qPfvtHyU/yfJ8PJs+8S/KRkp/k
+T4ffeRZxz9KfpOZvM93p/rot3+U/CTP9/lg8sxrPpKZvM/nPrj5SGbn4SPq
Y779o+Ynkff56CPPuv2j5ieR9/noIw83H8nsPPOPqI/5zUcyk/f53Md685HM
5Fsf3Hwks/Opj/n2j5qfRD71kWe9+Uhm8j6f++DmI5mdh+9S3+LvU/lHzU8i
7/PRR5715iOZyft87huvL7KPZHYevkt9rDcfyex86oMPyEdKfpLnpT7ycPKR
kp/kPPOPqI91+0fJT/I8nw8mD9s/st/kdedPhD64+Ujm65RPfbD9o+YnOW8m
Dzcfyez80dAHJx8psfOpD04+UvKTnE99/H61f5T8JM9zH0webj6SmbzPd5f6
6Ld/1Pwk583k4eYjmZ1fDX1w8pESO5/64OQjJT/J+dS3uJ8pPhLsea0Pbj6S
2fnUBzcfyex86oPPFh/J7DzM73/2s24fKflJnufzuQ9OPlLyk5xPfXDzkWDP
a31w85HMzqc+uPlIZudTH9x8JLPzqQ9uPpLZ+dQHNx/J7Hzqg5uPZHY+9cHN
RzI7n/rg5CMldj71jc/ntvpIyU9yPvXBzUeCPa/1wc1HMjuf+uDmI5mdT33w
a/+7nY9kdj71wc1HMjuf+uDmI5mdT338e2b/qDF598H4TXDzkczM8/ncBzcf
yew8fER9rM8/Zh/J7Hzqg88UH8nsfOqDm49kdj718flpPpKZvPvuVB9s/6j5
SeR9PvrIw81HMju/Efr4/WT/aE3sdfLug8nDzUcyk/f53Ac3H8nsfOobr1+y
j2R2PvWN1y/ZRzI7n/rG65fsI5mdT33j9Uv2kczOpz64+Uhm51Mf3Hwks/Pw
XepjvflIZudTH9x8JLPzqW+8fsk+ktn51Ac3H8nsfOobr1+yj2R2PvXBzUcy
O5/64J1+3zjPa33wTr/ukue1vvH6pXtLntf6YHI7/dg8p/E6Zqt/1Ljt88fm
I5lTj/vg2YdtfCSz86lvvB7KPpLZ+dQHNx/J7Hzqg+0f2W/yuvOpb7we2uov
JV5Snj7+fUl5z3ty+rwl/8n+Evvxm/i8Jx/J7H7Pdx/rN8lHan4S+dRHnnX7
R/abWPd8n48+/CZ4/uu91UdK/Hbl94e+MxPjH9lvSn4S+dRHnnX7R8lP8nyf
jz7yrOMf0Zf8JM/3+dwHH5aP1Pwk583kmW//KPlJnu/z0Ueedfwj+pKf5Pk+
n/vg3fKRmp/kvJk885OPZPZ8n899MP6R/aY7AzsPn1Eff74vyEdKfpLn+3z0
kWd9n3yk5Cd5vs9HH3kY/8h+052BnWf+GfUxP/lIZs/3+dzHevORYM9rfXDy
kRI7D59RH/NPyUdqfhJ5n48+8qwnH8ns+T6f+2D8I/tNdwZ2Hn5SffBt8pGS
n+T5Ph995FlPPpLZ830+943XF89Ev8nsPHxGfaw3Hwn2fJ/PffAB+UjJT/K8
1Ecexj9KfpPZeeafUR/r9o+Sn+T5Ph9MHrZ/1Nj5E6EPbj6S2Xn4jPpYt3/U
/CTnzeTh5iOZnT8a+uDmI5mdT33woeIjmZ03s5/Px2XymZKf5Hk+H0wexj9K
fpOZvM/nPtj+UfKTPD/1kWd+85HM5H0++HvTfrj5SGbm+Xzug5uPZHY+9cHN
RzK/RfnUBzcfyex86oOTj5TY+dQH4yMlv8l+kvOpD76j+Eiw57tvcb837We9
+Uhm5znfGfWx3nwks/OpD24+ktn51Ac3H8nsfOqDm49kdj71wc1HMjuf+uDm
I5mdT31w85HMzqc++JHiI5mdh/n9z37WLxYfyew856Of/ePzuewjmZ2/GPrg
5iOZnU99cPORzM6nPrj5SGbnUx/84dknJvtIZudTH9x8JLPzqQ9uPpLZ+dQH
2z/Cb0p+kvOpD04+UuJjyqc+GP8o+U1m5+Ez6mN9nss+Euz5Pp/74Pnc7COZ
nU99cPORzM6nvsX9h/yj5ic5n/pg+0jNT3I+9cHNRzI7n/r4/WT/qPlJ5N0H
k4ebj2Qm7/O5D24+ktl5+Iz6xuuX7COZnU998Ol3bu8jmZ03s3+8fsk+ktn5
06FvvH7JPpLZ+dQHJx8psfOpb7x+uRj9JrPzqQ9uPhLs+a0Pbj6S2fnUN16/
ZB/J7Dx8Rn2sNx/J7HzqG69fso9kdj71wc1HMjuf+uDmI5mdT33j9cvOv4+c
86lvvH7pX3fJ81ofvFNvyfNa33j9svOPzXNiH5x+PHHb54+z5W18JHPqcR+8
Xnwks/Nm9sPNRzI7vx76+PvIPlNj8u4br4e+u2D8JftN4/XO1nk+X+vzOr+u
yX+yv8R+1uHkI5nd7/nL6mP9JvlIzU9y3kwetn9kv4l1z/f5YPJw8pESO78/
9MH4R/x+aH6S82byfD5ulI/U/CTyPh/8vmk/3Hwk2PN9PvfBh+UjJT/J81If
efiSfKTmJzl/WEwebj4S7Pk+37L6WN8tHyn5SZ7n88Hk4eQjmT3f53MfjH9E
PvlJnue+ZfWxfkE+UvKTPN/ng8nD++QjJT/J830+mDyMf8T5kp/k+T7fsvpY
/2rwkcye7/PB7F/8exN8JLPn+Xzug/GPOF/ykzzPfcvqY/1j8pGSn+T5Ph9M
nnnJRzJ7vs8HvzDth+0fJT/J83y+N6hv8fepfKTkJ3m+zweTh5OPZPZ8n899
4/XFM9FvMjsPL6uP9eYjwZ7v87kPPiAfKflJnpf6yMP4R5yv+UnOM39Zfazb
P0p+kuf7fDB55iUfKTF5nw9emfbD+Eecr/lJzPP5ltVHv32k5Cd5vs/nPuY1
H8lM3n2Lf++n/XDzkczM8/ncB9s/an6S82byzLd/1Pwk8j4fTB5uPpKZvM/n
Ptj+UfOTnDeTZ779o+8VP4m8zweTh5uPZCbv8y2rb7yfzD6S2fnUt7j/KD6S
2fnUBzcfyex86oObj2R2PvXByUdK7Hzqg+0fJT/J89zH7x/yrOMf0Z/8JM/3
+dwHbxQfCfZ893F+9rN+sPhIZuc5H/3sZ/3V4iOZned89LOf9eYjmZ1/NfTB
zUcyO5/64OYjmZ1PfXDykRI7n/pg+0fJT/I89/H5Jc86/hH9yU/yfJ+PfvKs
Nx8J9nyfz31w85HMzqc+uPlIZudT3+J6t/hIZudTHzz7sI2PZHY+9cHNRzI7
n/rg5iOZnYeX1ce6/aPGzqc+OPlIiZ1PfTD+EX9+mp/kPLysPtabjwR7vs/n
Pnj+XCH7SGbnzeyHm49kdv7J0Hcl9x/FRzKTdx+8Pu2Hm49kZp7P5z64+Uhm
51Mfv5/sHzU/ibz7YPJw8pESk/f53AfjH3He5ic5Dy+rb7x+yT4S7Pk+n/tg
+0fNT3LeTH68fsk+ktn506FvvH7JPpLZ+dQHNx/J7HzqG69fso9kdj71wc1H
Mjuf+uDkIyV2PvWN1y/fiX6T2Xl4WX1w85Fgz/f5xuuhTZ5fv2Qfycw8n899
cPORzM6nPuY3H8lM3n3w3mn/eP2SfSQz83w+943XL/37xnle64N3+nWXPK/1
jdcvO/eY2tdpSp7QTj82z4l9cPrxxG2fP9o/an5S6uEjebj5SGbn10Mfv3/t
H+E38feN18m7b7we2vSTkr+UmLzP1/q8zs+7+U+ss/9xMf5R8pvM9Hv+IfWx
vk/+UfKTPN/ng6+f9jPP/lHzk5jv88F8/Sf4YPGRzMz3+Q6pj/4j8o+an7Sm
vPvunfYzz/7R+4qfxHyfj77VaT/rzUcyM9/nO6Q++u0fNT/JefPt037mXZKP
lPwkz/f56PvhtJ/1hyb/KPlNZub7fIfUR799pOQneb7P5z44+UiJnYc5/83T
fhj/KPlNZub5fO77rYntHyU/yfNTH3nW7SMlP8nzfT763jzthz84+UfJbzL/
kvJm+pj/FflHyU/y/NT35Wk/n5/kIyVmvs/HvNdN+2H8o+Q3mZnn87mP+afk
HyU/yfNT30en/ax/Uz7TC8FP8nyfj77npv0w/lHym8wvKP/N0Mf835F/lPwk
z0995Fl/LPhIicn7fO4br1eeiX6T+XPKpz64+Uiw57c+fv/aR0p+kue5D37H
tB/GP0p+k5n5Pp/74OPyj5Kf5Pmpjzx8rXymleAneb7P5z4Y/yj5TeYV5VMf
fLT4SPadnE99sP2j3cVPukf51Ad/tfhI5t3Kpz7YPlLzk/5U+dQH2z9qfpLz
ZvLwp4uPZHb+stAH20dqftJnlE998MvymZKf5PmtD/745B8lv8n8PeVTH/zL
xUeCPb/1Le5nio9kfqvyqQ++v/hIZudTH3x18ZHMH1LefeyHk4+U2PmrQx+M
f5T8JvtJzqc+eDn4SGbPd99vqY/1L8g/Sn6S5/l87oNvkX/U/CTnzeRhfKTk
N72qdedvCX2L+8niI8Ge3/rg5iOZnU99cPORzM6nPjj5SImdT33wJ+QfJT/J
81ofjI+U/KaLWnc+9XF92nwk2PNbH+vNRzKTb33wbHkbH8nsfOqDm49kdj71
wbPYNj6S2fnUB58LPlJi51MfvGfyj5LfZH5W+dQ3Ps/NPhLs+e47pD74qck/
oi/5SZ7n87kP3j35R8lvMn9d+dQHNx8J9vzUd2TaD8/fw2S/yX7Sncqb6YOb
j2Q+o3zq4/NjnwlOfhL51Md+1puPZGa+z+c+uPlIZudTH2yfqflJzqc+OPlI
iZ1PfTD+UfKbzM6nvvH6JftIsOe3vvH6JftN9pOcT33j9Uv2kczOw+vqg99Z
fCQzeZ/vkPrg5iOZmefzuQ9uPpLZeXhdfeP1S/aRzOR9vkPqo/9k8JESv035
1Ddev2z6QvAVgZnX+mD7R/hN9pM8v/WN1y/ZRzKvKJ/6xuuX7COZnU99sH0m
OPlJzpvZP14PZR/JvFd5M/vhp4uPZHY+9Y3XLzv/PnJfVz71jdcvO/86TO37
zKWvc0S+cfq6TPaQ7AXt9GPynA6pb7x+yX5TOod/3H3j9Uv2kcyH1OOP9LHP
/lHzk76kfOqDk7+UeEl5+tZLn+dxruY/sc5+/CYY/4j+5ic9rj76N9TH+k3y
j64PfpLn+3wwfhPz8I/sN43/nn5qy3yfD8ZvgvGR6LOPZGa+z+c++Lh8pHvF
9pMOKu8+/Cbm2z9aDX6S5/t8/LnAb2Id/4i+5Cd5vs+3oT76D8tHur34Sc6b
8Zv4+dg/+mHwkzzf56MPv2nx6zf5R/TZR3pI68z3+TbUR//u4CMlP+kh5d3H
fubbP7o5+Eme5/O5D04+UuKblU998EX5SM1Pct5Mns/HPvlH9pvwkzzf54Ov
nfbDyUdKzHyfz32wfaQvFz/pg8qnPtj+0euCn+T5rQ9OPlLi1ylP34b6WP+Y
fKSPFj/JeTN+E/PsH9lvYt3zfT4YvwlOPlJi5vt87oNvk4/U/CTnzeTh5iPB
nu/zuQ9uPpL5MeVTH9x8JLPzqQ8+IP/oHcVPct7Mfv7+bj6Smfk+34b6WD8h
/6j5SeR9PvrIM8/+UWPyPh+M3wQ3H8nMPJ/PfXDzkczOpz7Y/lHjo8q7D78J
bj6S+ReUN9O3uC8rPpKZeamP/azbP2p+Enmfjz7ycPORzM5fFvrg1eIjmT+t
vPvYD9s/auz8qhi/CW4+kvll5c30jfeT2UcyM6/1sf5i8ZHMzEt97Iebj2R2
/sXQB9tHan7S/cqnPrj5SGbnUx9sn6mx82b8Jj4/+EjJbzIzz+dzH+sbxUeC
PT/1sR8+KP+o+UnOb4jJw/hP5Juf5PxBMfvh3yg+ktn5V8Xsh08XH8ns/G+I
2Q83H8ns/OnQBzcfyex86oMfkX/U/CTnzexf3B8HHymx84+I2c+fj+QjJT+J
vM/nPtabjwR7Xuo7Oe2Hz69u7yOZH1bezP7F9W7xkczOnw998Pz9WPaRzM6n
Prj5SGbnUx/cfCTzOeVTH2z/qPlJe5RPffDTxUcyO2/Gb4Kbj2R+SnnOt6E+
1u0f2W/y+m7lUx+M/0TePpL5iPLuw2+Ck4+U+GvKPxn64Hluq9+U/CTnYf4+
Yj/rzUeCPd/ncx/cfCSz86mP30/4T+Sbn0TefTD74eYjmcn7fO6DZ/88b+Mj
mZ2HN9Q3Xg9lH8nsfOobr1+y32R23sz+8fpl099pfpLzp0PfeP2y1W+yn+T5
rQ9OPlLidyqf+sbrl02fp/lJzqc+GB+JvH0ks/Opj7+Pko+U/CTmtb7xeij7
SLDnuW9DffTbP2rsvBm/CX6w+Ejm65Q3sx8+V3wks/MPhj7YPpPZfpLzZvaP
1y/ZRzLvUd7M/vF6KPtIZudTH9x8JPPTyqe+8fqlf984z2t9cPo6S4cCt+8z
l77OEfnmJ7Wv08T+8Xqof/T81Mc+1r+kOd6XzuEfdx9/H9lnSuxe943XQ99d
sL+eU/KZPM/na31e5xzNf2Kd/esTMxf/KPlNZvo9332s75F/9NbgJ3l+6iPP
uv0j/KbkJ5H3+ejDb4LtHzV+j/L7Qx/M14ey32Q/yfNSH3kY/4jfP+8LfpLn
+3ww3x8Pxj9KfhPs+T6f++B/Ih/ptuAneX7qIw9fko/0o+Aneb7PB5OH8Y+S
3wR7vs/nPvhK+UjJT/L81EeePx/2jxJ7vs8Hr0774eYjmZnn8y2pD74g/6j5
SeR9PvrIs27/6NriJ5H3+ejDp4LtHzW+VnnmL6kP3ig+kpm8z0cf+1m3z9SY
vM/nPhj/KPlNZudTH/NPyT/6F8FP8vzUR551+0cvFD+JvM/nPrj5SOYXlKdv
SX2w/aPmJ5H3+egjz7r9o8bkfT73jdcX2UcyOw8vqY/15iOZnU99zDsgH+mG
4Cd5nvvgX5n2w/hH9puSn8R8n8998EPyj5Kf5Pmpjzxs/2il+EnOPxT64OYj
mVeUp29JfazfXXwks/Nm9jPP/pH9Jq+T9/ngn5/2w38afKTEzPf5ltS3uP6S
j9T8JOdTH2z/KPlJnt/6YPtHjXcpT9+S+li3j9T8JOdTH/PsH9lv8jp598F/
Ne2H/2XwkRIz3+dbUh/9bwk+UvKTnE998PPyj5Kf5Hnu4/zkWW8+ktl5zkc/
+1m/uvhIZuc5H/3sZ/1s8ZHMznM++tnP+mH5SGb7Ss6fDX3w5cFHSn6S8zDn
Zz/rn5d/lPwkz/P56CfP+m/KP2p+kvOcj37yrL+W+v/9o+YnOc/56Ce/uJ+U
f9T8JOc5H/3kWbeP1Pwk5znfkvpYbz6S2Xl4SX2sNx/J7Dy8pD7W7SM1P8l5
eEl9rNtHSn6S5/t8S+qDk4+U/CTyPp/7YPtH9ptY9zz3Me/EtB+evx/b9HfM
9pOY7/O5D24+ktl5eEl9cPORzOR9vl3qg88VH8lM3uejj/2w/aPGznO+JfXB
zUcyk/f5xufDm/xn8pHsNz0tZp7PRx95+LX/fc0/Sn6T2fk/C33Mt3+U2PPd
t0t9sH0ms/0k8j6f+xbPR4OPlNh5eEl943+Hn/0m+0nkfb5d6oPnv67ZR4I9
3+ejj/1w85HMznO+JfWxbv9orfhJzqc+ePbhp/hIideUT33j9cu3ot9kdj71
jddD2UeCPd994/XQJttHan4S83w+943XL9lHMjsPL6lvvB7KPpKZvM8H4zeN
1y/ZRzIzz+ejj/1w85HMznO+JfXB+EfkG5P3+WD8Jjj5SMl3Yp7PRx/7x+uX
70S/CfY8n899sP0j+02se37rG6+Hst9kP2lF+dQ3Xr9kH8nsfOqD7R/Zb/K6
86lv8Ty0+Ejmvcq7j/3j9VD2kczO3xP6+P3bfCQzefftUt94PZR9JDN5n899
8E6/b5znuW9JffBOv+6S5/l8sL+ukj2l5C15ns/nPphc++j57rO3xLrnLN67
ap/n+cfdx8e14C8lXgo9/HjKex4/nvwn+0vsx2+iJ/lIZvd7vvtYv0k+UvOT
yKc+8qzbP7LfxLrn+3z04TfBa8VHMr9d+f2hD8Z/Gu9fs5/kvJk8bP/IfpPX
ned8/HrhN7HefCTzryl/Y+iDD8s/an6S82by/HzsHzU/ibzPRx/5xa9f8ZHM
5H0+98G75R81P8l5M3nmv1c+02rwkzzf53MfbP8o+Ume77419bF+UT5S8pM8
3+eDycP75CPZb7Kf5PxFMXnY/lHykzzf51tTH+v2kZKf5Pk+n/uY13wk2PPd
B1827YeTj5SYeT7fmvro/5h8pOYnOW8mzzz7TIk93+eD8Ztg+0fJT/I8n29N
ffQfkY+U/CTP9/lg8sxLPpLZ830++IvTfhj/KPlNZub5fGvqo7/5SPadnE99
sP2jXyl+kvNm/CZ+Ps1HMjPf5zuoPtZPyD9qfhJ5n48+8qzbZ2pM3ueD8Ztg
/KPkN5mZ5/OtqY9++0jJT/J8n899zPsF+Uw/H/wkz3cfjN8E4x8lv8nMfJ9v
TX3wevGRYM/3+ehjP2yfqbHznG/x37VM+2H8o+Q3mZnn87kPXi0+kn0n583s
Z/7L8pn+KvhJnufzwfhNMP5R8pvMzPf51tQHJx/J7Pk+n/tYf1H+UfKTPM99
MHn6H5B/1Pwk5zkf/eRZv0b+UfOTnOd89JNnHR+JfPKTPN/ncx98R/CRzJ7v
Ps7PfvgK+UfJT/I8n48+8qxvyD9qfhJ5nw8mT/9B+UfNT3Ke89FPnnX8J/LN
T3Ke89FPnnX8p/F9WfaTnOd89JNn/bT8o+YnOc/56Gc/6z+Y/QJs+jvNT3Ke
89HPftbfLf+o+UnOcz762c/6I/KPmp/kPOejn/2L+2P5R81Pcp7z0c9+1pOP
lNj5i6GPefaP8Jvoe1hM3n0wfhOM/0T/S4WZ7/PRx/7F9e7sYFv9pl2Bned8
a+qD7R8lP8nzfb5b1QfbR0p+kuf7fO5b/Psjn6n5Sc7Da+pj3f4RfhPz7Cs5
n/rgp+UfNT/pmPLuIw9fNfuJZR/J7DznW1MfbP+o+Unkfb5b1Qc/GXykxOR9
PvrYD9tnan6S80+GPtj+EbwU2Hnz+rQfto+U/CTP9/nct7hfmuX+Z/SbzM7D
a+qD7R8l9nyfD16b9sOz5W18JDPzfD73wc1HMjsPr6mPdftH+E3j9c7WeT6f
+8brl+w3mVeVdx/7YftMzU9y/nTog+0f4TeN1ztb57c+2D5S8pM8v/WN1y+b
vlDzk5xPfbD9I/wm5tlXcj71wfaRmp+0X/nUN14PZR/J7Dy8pj7Y/lFj8j7f
eD20yfhP4/VNZub5fOP11SY3H8nsPOdbUx9s/6gxeZ8Pxm+C75N/1Pwk5vl8
4/XQJjcfyew851tT3+J562xh099pfpLzqQ++K/hIiZ03sx+2z9T8JOfvCn2w
/SP8JubZV3I+9Y3XQzv/OkzLyrfvE2dvqPlJzq+HPn4/kWsfPd994/XQpp+U
fpzedA7/eOtLH/Gd4OQrmVO++UPus0+ED+Q+1ucfs9/jvuTrOM88+zv2b9yX
fJrUl/yYlG++i/uSv+I+1pOPkvL2U+yXuK/5Iu5L/kfqSz6H+8g3P8N9ybdI
fZcFfyLlmw9hnyP5DanvheAruI/15h/Yn0g+Qer7YvAD3Df+fZHf99tXSO/v
U98N4X28834/vyZOfel9eXrfvxLef7uP9fY+2+/j0/vp1Lc7vG9O+fT+OPWl
98Gpbym833Uf+9v7Wr9vbu9fnf9eeJ/qPtbT+9HU5/ebZr9fbe8vnW/vI/9C
+fR+MfW194VvVD69/0v59j7P7yPb+zn3tfdtX1C+vT97v/LtfdhPlG/vt25W
vr2v+pTy7f3T/1a+vU96l/Lp/VDqS+97Ut/J8v7GfS+F9zGpr71fcV96X5L6
0vuP1NfeZzjv9xFw6kvvG1K+vT9wX3ofkPra832/T2jP6903+7DN83fn0/N0
9/Hzac/HnZ/ntj7vTn3p+XXqa8+jnffzZDj1tefF7mvPf93n57dm59vzWefb
81bn/bzU7Hx6Huo8v74vleebzq+E55WpLz1/TH3teaL79obng6kvPe9Lfe35
nfvS87jU156vua89L3Ofn3eZnW/Ps5xvz6fct1SeNznfPqbnUvP7spsXz59g
nheldZ4Ppf08T0r7ef6T9t87Pe9J+399er6T9vM8J+2/fXp+k/bzvCbt5/vd
p/08j0n7ef6S9vO8Je3/b9PzlbSf5zFpP89P0n6el6T9fL/ztJ/nIWn/707P
P9J+npek/TzfSPt/e3qekfbz/bbTfp5XpP08n0j7eZ6R9n97ev6Q9vO8Ie1/
8/R8Ie3neULaz/ODtJ/nDWk/3+847ed5QNr/+un+P+3nfj/t5/4+7ed5QNrP
99tN+/l+uWk/9+dpP/fjaT/332k/fnHaz/152s/9dNr/xen+Oe3nfjnt5/44
7ed+OO3n/jft53437ef+Nu3nfjjt5/417Z9f//3XuJ/727T/pel+NO3n/jPt
534z7ef+Mu3n+zWm/dw/pv3cL6b9fL/DtJ/7wbSf7zeY9r9hut9L+7m/S/u5
n0v7d033b2k/92tpP/dnaf+r0/1Y2s/9V9rP/Vba/4Pp/irt534q7ef+Ke3/
znS/lPbjq6T93A+l/dz/pP3c76T93B+l/f95up9J+7n/Sfu5X0n7vzHdn6T9
3I+k/R+Y7j/S/ien+420n/uLtJ/7kbT/30/3D2k/9wtpv+8fvH+8D918X534
n81yH4n8o8/N7x8S//GL8/uHxI/+0/n9Q+Lj35rfPyT+1HT/kPj66f4h8Ynp
/iHx353uHxI/MN0/JD433T8kvn66f0h8Ybp/SPzEdP+Q+B9P9w+Jr53uHxJ/
c7p/SPzoL87vHxK/Z7p/SPzG6f4h8Z9P9w+Jb358fv+Q+N3T/UPiH0z3D4n/
y+z3+zORn5juHxLvnu4fEn9/un9IvDbdPyTmfWbiv3bT/P4h8R3T/UPi5948
v39I/HO/P79/SHzFdP+Q+H3T/UPir7w8v39IfPV0/5D4R9P9Q+JvTPcPiZ/6
wvz+IfG/me4fEr803T8kfv718/uHxLvnN3iRH5zuHxL/5S3z+4fEZ6b7h8S/
ON0/JP4Hz87vHxK/cmJ+/5D496b7h8Q/+5P5/UPit033D4n/cLp/SLy8Z37/
kPhd0/1D4gPT/UPi/z7dPyS+abp/SPzA7GPmv5zuHxJfvG5+/5D4xHT/kPj/
/Nv5/UPiN033D4n/0XT/kPijr334fua/P/s//yPyb0/3D4n/fLp/SPwf/2h+
/5D4A9P9Q+I/mO4fEv+NZ+f3D4lvmO4fEj863T8k/ps/md8/JP656f4h8Zem
+4fE3D8k/tvT/UPi49P9Q+LvT/cPifdM9w+Jf3f2MfN/mO4fEv/4uvn9Q+J/
Pd0/JH79p+b3D4m/cXB+/5D4D6b7h8Sfmv15yPzXZ//nf0W+e7p/SPxHw9ch
3cpvGDz87/7DX9X9Q1r3ewnfV3j9lem+Iu3/W58Z7zu83+8xvB/vFvZ+v+fw
fjxa2Pv9HsT7f2d9vK/x/vv0nsT78XRh7/d7FO9/n+6LvN/vWbz/27pv8n6/
h/H+w7qv8n6/p/H+H+m+y/vTex/2f0T3Zd7v9zzev1v3bd7v90De/17d13l/
eq/E/t/TfZ/3+z2S91/UfaH3+z2T9/+S7hu93++hvP9u3Vd6v99Tef+f6L7T
+9N7L/bjDcPe/6t6z+X9N+q+1fv9Hsz7P6b7Wu/3ezLvf0H3vd7v92je/3ce
G++Lvd/v2bz/iO6bvd/v4bz/i7qv9v7/O91Xw97/iu67vd/v8bz/93Vf7v3p
veDiukz37d7/Lb0H9P6Luq/3fr8n9P4Tuu/3fr9H9H4/F/B+v2f0/nO/Pj43
8H6/h/T+e/RcwfvTe83F37/Xjs8dvN/vMb3/zCfH5xLe7/ec3r+u5xbe7/eg
3r+k5xre7/ek3s+6eXG9Et67sn9Vz0W8/+X/NL5n9X48bNj7/R7W+z+u5yre
n97rjtdrm89dvN/vcb3/RT2X8X6/5/X+B/Tcxvv9Htj78cJh7/d7Yu/H84a9
3++Rvf8OPRfy/vRemv145LD3+z2092/ouZL3+z31+/WcyXnv93tsPHPvh73f
77nxztnvPu/3e/DTeo7lPu/3e3K8dPa7z/v9Hv3deg7mPu/3e/ZH9JzMfd7v
9/B47N6/uJ/Qfr+nf5ues7nP+/0e/6Sew7nP+/2e/7ye07nP++0B/D09x3Of
989/fCuz333eb4/gWT0HdJ/32zPAe/d+2PvtIdyr54ju8357Cnj13g97vz2G
3XoO6T7vt+dwp55Tus/77UHg4Xs/7P32JPDq2e8+77dHsa7noO7zfnsWT+g5
qfu83x7Gz352fI7qPu+3p7Gm56zu8357HJ/Vc1j3eb89D9j7x38Psgdys57j
us/77Ymc1nNe93m/PRI8//Hfj82899szeZeeE7vP++2h/Cs9R3af939bnspF
PWd2n/fbY3mbnkO7z/vtuZzSc2r3eb89mPN6ju0+77cns6Ln3O7zfns0sPfD
3s9/Z2D2ftj77eHw3yF4//jvR/Z07tNzdvd5//zv903mv1Ngv/u8354PPP57
s5n3fntAd+k5vvu8354Q/10D+93n/faI4PHfm82899szWtd7Avd5P99vCf6S
3iO4z/vtKS3pvYL7ktdk9n647efH/XG8nvpu/PH/B+GiWvs=
   "], {{}, {}, {}, 
    {RGBColor[0.266122, 0.486664, 0.802529], EdgeForm[None], 
     GraphicsGroupBox[{PolygonBox[{{59598, 58806, 59202, 59602}}], 
       PolygonBox[CompressedData["
1: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
        "]], 
       PolygonBox[CompressedData["
1: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
UYrxMwlJRGKSkJTilAh+r0cpSlOGpjSjOS1oSavg96hUCX4fRzWqU4P6NKAh
jWhME34iGtGJQUxi0Zo2tKUd7elAWcpRngpUpBK/kIzkpCAlqchIJjKThaxk
C/rDvUECfiYhiUhMaMLwA2EJR3j+RwQiEonIROE/Y/yN74TwPiShgvsiZaQh
LelIT4bgd4T+7g1vecd7PvCRT3zmC//yNdgv5DWTWcxmDnOZxGSmMJVpTGcM
YxnHeCYwkafyesZzXvCSV8E8NbdqUZs61KUeNdW1FrWpQ13q8QNhCUd4/kcE
/lbGdf7hBje5xW3ucJd73OcBz3nBS17xmjc85FFw38aToN484yznOM8FLnKJ
FdqwklWsZg1rmcNc5jGfBSwM1re2NaM5LWhJK1rTJthXaEd7OtCRTsH+Rxe6
0i24DslrMUtYyjKWE1FfRCIyUfiRqMHvRtX1He/5wEc+cZkr/MlV/uIaW9nG
dnawk13sZg972cd+DvCdEMoJSShCE4aDPj/EYY5wlGN85gv/8jWYx3xjAxv5
g01sZgvzmM8CFrKIxRznBCc5xWnOsE5frGcDG/mDTcE4ia1mDWuDv2M9S1jK
MpYH48pKktgrk/ILyUhOCopSjOKUoCSlKE0ZylKO8lQIzocntJd/+cp/fCPn
KfsmuclDXvKRlnSkJwMZycRbad7xng985BOZxbKQlWxkJwfPxV7wkle85g07
jxtPdrOHvexjBStZxWrWsJZ1rGcDG/mDTWxmC1vZFvyemx3s5wAHOcRhjnCU
YxznBCc5FfxuQV3z8xsFKEghClOEohSjOCUISShCE4YfCEt0YhCTWMQmDuEI
z/+IQEQi8f6kfuQjn/jMFxKJJSYJSfmFZLwUe8Vr3vCWd3zXpyG8hiQUoQlD
SWlKUZoylKUcyUlBSlKRmjTEJR7xScDPJORfeX3lP74F5RHC55GJwo9E5Sei
cVqfnuEs5zjPBf7iGn9znX+4EfQ/+fmNAhSkEJnJQlaykZ0c5CQXuclDXvIF
/w+gH8LwA2EJR3gKixWhKMUoTglqU4e61KM+DRjFaMYwNvj+gPH0ZwADGcTv
DKYhjWhME5rSjCEMZRjDg9+pM5LmtKAlrWhNGy5yictc4U+uUpVqVKcGNalF
eSpQkUpUpgqLWMwSlrKM5XzkE5/5wr985T++8Z0Q+iskoYL16v0b3vKO93yg
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
eMwTXvOGt7zjPR+C+dteO5GaNKQlHf8D3OpeBQ==
        "]]}]}, {}, 
    {RGBColor[0.857359, 0.131106, 0.132128], EdgeForm[None], 
     GraphicsGroupBox[{PolygonBox[{{59203, 1, 58807, 59599}}], 
       PolygonBox[CompressedData["
1:eJwl1nWYVdUaB+A9MNQMKTVwgaHkkiYg6kWQi8hQwtACMozUANJyFYYwaFRK
lBSDVBqVYQhJUWmDNJBUqYuSYrzr8Y/3Od9vn3P22Xvttb51yqT2S+6bJYqi
d8kWXs9G0aFaUXSYI7wnf8mKVlG0klV8Jf/vTBSViYmiREozRB7Ev9TFKM5A
uRO3nPcGN+kod+C6+irXeFJe5JyVHo6iylRhsfy84+WdpyzleE4exr/Vd1KB
oXILzjmPl8jXoubhOnhD/TozKC4XY7p6KtNIkEsyS/0mMykhN+VH9Q+coIn8
BKfVJzlFM7kzf6h/5zZPye35TX2FX2knt+ai+jwXaCW35Bf1T/xMstybfO4p
D3npJa9wQ3vqRNFe9rFS/p4FHaJoIYv4Qc5qAMb2j6JxjCdW3uaCCzp3Ae5g
q9zDOXM5dw5y0l1OZK73ZzOHUnIaub0fRzw95afJqo4hC6lyW/7vO5e4TBv5
WUp5vwQlGSx3I7s6lmx0lQeQoC5CUfrL/SisLkgh+srPcIc6PwXoEz7Dq35v
Eq9QKMxH5qvn8Ral5XJn/pnbb/MOZeVqrFavZBVV5QfYot7MJ9SUH2R7GDe2
UUt+mE/VO9jJQ3JtPlfv4jP+I9/Nh+o1rOUu+V7WqT/iY+6R7ydTncF67pNr
sEm9gY1UD+PiGS8rHkXLWUF/+X2G1Y6idIbzgZzks8d95yjHaCjvc7xTsvlJ
Z/bLmymcZOwpyifyG5y419znJG/Kx2jZ3pylNcflLeZRfufOS74wXvLjfueI
+hCHaSA/xjfqr/ia+nJj3/9Co9nNHprIuRxP9/5QhpEzfI7v1d/yHY3kgkxU
j2dCmNNyUaaoX2MyReR4RqqHM4I4uQDj1GMYS345Dy+qR/ECucP6Y7T6JV4O
9yg/yn71XvZRV67DHvUX7OYRuUpYr+plLKey/F++VB/gIPVC/2KJehGLqSDf
yUL1eyygvFyJD9RLeZ+K8mZjnUcdH66XTXImOaJ/+nf2MI/kDGLVobdnZZ28
3lgPrm99MoQM+UVulNObucUL8lBaJXretOF5uRl7/cA+9tNUbkS6kw9nBEny
avbrUwc4yCo5mdI5rU/K0kL+iLL1rE/K86G8lKp6fzXuYok8JvxOBfOBJoyW
F3LU3nSM4yyQlzPCGhjJKJbJO+nVWF+lDzvkrSSY78UozhZ5U/hsA+uaXWyU
G1BZr6lCVR6THw97kvscyjAahnvVZ9M9l4o+U4n6YU3ybhnPkgWky39Ro6++
wgOEDauDYwUtoEIUpqP8Uvgd99mQJF6WO9NNE+9OD1LCfZG7iLlAXtLkVHp6
P41edJG7s94mkMkGusl9eSrBeUnhmTB2YVxd6yIWM1xuw8A4+zqDaS1PpW41
a4J6TAnnoojrL0oCncL3WKlPrWI1A+Qn2W7S7mAn7eUhZClpjhLLs/IE5lS0
JzGP8fKrXKxsn+Eyr8gzwvXcbS9nOq/LV7jc1Z7ElfAqn+FWJ/s0tzktfxfu
Tz9rSzu+DXOK2LbWEdk5Iv/IYnvsEpZyQv6ZJinWAM34KVwb81LtO8znQuhz
xDf3nMjDbvljBlh7AxnEOnmjtRkX+h65Qt+X1zieaF2Upgxr5WvU66GnUJ+r
ctvQj43lVrbRLvw3o4V1m0xLnpMvccF4XOQSl+VpvGbcJjMljKH8Oyd7+4/D
aW7Lf4YxVJ/lHH/I2c3fCf5nTGQS2eSRjl/VQ65xnVHyL8w2HnOYy/kwTtSs
bh1Qi7nyLE7Zc05zhpnyO4yr6fkzgbflX6nj3uvyKL/JLelnAPszgFbyoLDm
ShhMcyqGwfLnbGhqvNnEZ2Huue5a1uODPESMnJOjA/UXjpBDvuWz09PMMWZw
U36Ckh5aKRJpLh8kxR7bhVQOyHvJ6/nnIz975G9Y7b/0GtbytbyNHvpUT9LY
LncJf2r1lT+9/EWKPNbxmdbFLGYzTj5EjDmbhawclnvTwfruSCf6yJ+S4d7X
k8ku+TpT3NNUpnFDnhienXV2ngtMkp8O81cPWUcGXcP1kkv/iSOenvJbjPa8
xjCW+XJmuD+9dTs72BDmWfht6/EGNzklnyXJmmpEY86FOUptveYR6jA5zCnu
N3eqU4M58t8IrAGO
        "]], PolygonBox[CompressedData["
1:eJwk3WO0XdcCBtA0tu00ttGGjZrGaGM7aYNGTVLEtm3btm3btp28ucf7MccZ
J99d2Asb597TpmjYpnLrkCFChDgZLkSIsF5XVAgRYiWrWM0a1rInZYgQe9nH
fg5wkBOc5BSnOcNZLilzmStc5RrXOSQ7zBGOcozjnOM8F7gYlOcyD3jIIx7z
hKfc4jZ3uMs97nOFq1zjOje4SQ9t96QXvelDX9axng1sZBObeVY1RIjnvOAl
r3jNHNlc5jGfBSzkVE7HzxnOco7zHJAdDI6bwxzhKFvYyja2s4Od7GJ3MN7s
ZR/7g/LaPswRjnKM48F7bRzlGMc5wcngvTLHOcHJoH+cDuqT7Q/6xUEOcZhF
ssUsYSnLWM40pjODmcxidvBzpf0cy1jOClbySZ8+84WvfCNENePrdSOb2MwW
tvJdqhAhQhKK0IQhLPNk81nAQhaxmDENQ4QYyzjGM4GJDDDHAxnEYIYwlBmy
mcxiNnOYSy9604e+9KM/n5T5zBe+8o0Q+jNANpBBDGYIQ/mX/+hGd3rQk2EM
ZwQjGcVoZqhvJrOYzRzmsoSlLGM5K1jJPOazgIUsYjEdzUEn/qIzXegarFvZ
c17wkle8DsbB2M1kFrODdcxctsm2s4Od7GI3q1jNGtayjvUMYzgjGMkoRjNG
XWMZx3gmMJFJTGYKU5nG9KBdtrODnexid/Dz6prMFKYyjelB/YxlHOOZwEQ2
sJFNbGYLW/nbWPzDv/xHN7ozhKEMYzgjGMkEJjKJyUxhKjWKhwhRk1rUpg51
KUd5KlCRSlTmd/6gFa1pQ1vqUZ8GNKQRjanCr/xGVapRndRFQ4RIQ1rSkZ4M
bCnm+NjGdnawkxgVQ4SISSxiE4e4/KyuUvxCacpQljCysIQjPBGIyAp1rWQV
q1nDWiaVMy5MYSrTmM5P6ipKMYpTgpI0oSnNaE4LWjJMmeGMYCSjGE1+WQEK
UojCFOFf/qMb3elBT7KSjezkICe5GKCugQxiMEMYyi7HsJs97GUf+/lmjkM4
7u8ISShC00tdvelDX/rRP6ifgQxiMEMYSm7ykJd8/MCP/EVnutCVv/knGAeG
M4KRjGI0YxjLOMYzgYnBOtLPtvxJO9rTgX70ZwADGcRgXvGaN7zlHe+D87ix
mMksZjOHuWR1zNnITg5ykouC1lwhClOEnyhKEllSkpGcFHxPejKQkUxkJgvF
lClOCUryM6VYZw7Ws4GNbGIzN/T1Jre4zR3u8sA54iGPeMwTnpJXXfn4gR/J
TwHmOefOZwELWcRizqjrLOc4zwUuMorRjGEs4xhPdnXlICe5yE0eUjq2VKQm
DWlJxx592ss+9nOAg0F/1fU0OE/znBe8DM5Pha1vetCTXvSmD33pR38GMJB5
5mw+C1jIIhYH6142mCEMZRjDWSJbyjKWs4KVXNGnq1zjOje4yT19uh+MNw95
xONgPmS3ucPd4Oe4zwfZRz7xmS98DcZXdp4LXOQSlznBSU5xmjOcJZ6xi08C
EpKIxKwyZ6tZw1rWsZ5Yrs2xiUNc4hGfKEQlGtGJQUz+VKYd7elARzoF1+kU
9iGjGM0YxpKzsfkmN3nISz6aKNOUZjSnBS25ks94co3r3OAm6dPYF2QkE5nJ
QlaykZ0c5CQXD5R5yCMe84Sn5HZty0Ne8vEDP/KTMkUpRnFKUJKUpCI1aUhL
OnKTh7zk4wd+JD8FKEghClMk6K9jzkJWspGdHPTSp970oS/96M/v+vQHrWhN
G9pSj/o0oCGNaEw5ylOBilSiMn/SjvZ0CO576EQTmtKM5rSgZVBOnypThV/5
jar8LCvFL5SmDGWDcaMoxShOCUoG46rMj+SnAAUpRGGK8BNFKUbx4OeUKUBB
ClGYIkF9spJB+5TiF0pTzpiWpwIVqURlkpCUZCQnBd8Tg5jEIjZxiMu1tNYZ
N7jJLW5TQ1aTWtSmDnX5IvvKN0Kkc90jJL/VN05Uozo1qEkTZZrSjOa0oCW/
8wetaE0b2nJBvRe5xGWucJVm6mpOC1ryO38QQdsRiURkohCVWrLa1KEu9ahP
K1rThrb8STsa0JBGNA76TVNCqSs0YQhLOMLzTp/e84GPfOIzd7jLPe7zgIfB
z6X2c3ziM1/4ShjHHJZwhCcCEYlHfBKQkEQk5okyT3nGc17wkle85g1vecd7
alhDNalFbepQl0jqikwUohKN6NxT5j4PeMgjHgftOIaXvOI1b3gbrANZCOW+
IyShCM0j2WOe8JRnPKeK7Fd+oyrVqE496tOAhjSicTAuzrnhiUBEIhGZKo7h
V36jKtWoHrzaG9WpQU1qUZtBeVzXGMJQhjGcbnSnBz3pRW8GuJYMZBCDGcJQ
usi68jf/8C//MY7xTGAik5hMezrQkU78RWda0Zo2tOVP2tFCX1vyO3/Qita8
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
AvwfK+FQOg==
        "]]}]}}],
  AspectRatio->1,
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic},
  PlotRange->{{0.001, 0.991}, {0.001, 0.991}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6966099169127827`*^9, 3.696609970008493*^9, 3.696610072164768*^9, 
   3.696876188584804*^9, {3.696876230796077*^9, 3.69687638260366*^9}, {
   3.6968764127607822`*^9, 3.696876445914824*^9}, {3.696876483934087*^9, 
   3.696876545665324*^9}, {3.696876583949461*^9, 3.6968766175022087`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"ListPlot3D", "[", 
   RowBox[{"numMoves", ",", 
    RowBox[{"Mesh", "\[Rule]", "None"}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", "\"\<SouthwestColors\>\""}]}], " ", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.696875649635929*^9, 3.69687565840539*^9}, {
  3.696875718538041*^9, 3.696875719280403*^9}, {3.6968757799936943`*^9, 
  3.696875848823057*^9}, {3.696875881570263*^9, 3.69687595401506*^9}, {
  3.696876008255534*^9, 3.696876008544957*^9}, {3.6968760485837803`*^9, 
  3.696876077222649*^9}}],

Cell[BoxData[LineWrapBox["\[AutoOperand]"], InputForm], "Output",
 CellChangeTimes->{
  3.696875660120224*^9, 3.696875757090417*^9, 3.696875788644178*^9, 
   3.696875850437949*^9, {3.696875884642268*^9, 3.696875921609929*^9}, 
   3.696875956969995*^9, 3.696876011791628*^9, {3.696876049700994*^9, 
   3.696876078655311*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{808, 587},
WindowMargins->{{Automatic, -69}, {Automatic, 0}},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September 9, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 82762, 1784, 4689, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[83345, 1808, 35334, 876, 1890, "Input"],
Cell[118682, 2686, 35228, 702, 532, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[153947, 3393, 155, 5, 99, "Section"],
Cell[154105, 3400, 162, 2, 46, "Input"],
Cell[154270, 3404, 1877, 49, 165, "Input"],
Cell[CellGroupData[{
Cell[156172, 3457, 556, 9, 28, "Input"],
Cell[156731, 3468, 38173, 784, 376, "Output"]
}, Open  ]],
Cell[194919, 4255, 152, 4, 28, "Input"],
Cell[195074, 4261, 1954, 51, 165, "Input"],
Cell[CellGroupData[{
Cell[197053, 4316, 747, 15, 46, "Input"],
Cell[197803, 4333, 251013, 4128, 374, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[448853, 8466, 561, 11, 46, "Input"],
Cell[449417, 8479, 324, 5, 354, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

