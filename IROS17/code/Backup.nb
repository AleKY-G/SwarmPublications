(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    647614,      11948]
NotebookOptionsPosition[    646708,      11914]
NotebookOutlinePosition[    647066,      11930]
CellTagsIndexPosition[    647023,      11927]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"admissibleHeuristic", "[", 
     RowBox[{"s1_", ",", "s2_", ",", " ", "g1_", ",", "g2_"}], "]"}], ":=", 
    RowBox[{"Max", "[", 
     RowBox[{
      RowBox[{"EuclideanDistance", "[", 
       RowBox[{"g1", ",", "s1"}], "]"}], ",", 
      RowBox[{"EuclideanDistance", "[", 
       RowBox[{"g2", ",", "s2"}], "]"}]}], "]"}]}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "a", " ", "distance", " ", "measurement", " ", "that", " ", "never", " ", 
     "over", " ", "estimates", " ", "to", " ", "possible", " ", "distance"}], 
    " ", "*)"}], " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"wallFrictionMoveDir", "[", 
     RowBox[{
     "dir_", ",", "s1_", ",", "s2_", ",", "g1_", ",", "g2_", ",", "moves_", 
      ",", "pm1_", ",", " ", "pm2_", ",", " ", "\[Epsilon]_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[CapitalDelta]ex", ",", " ", "\[CapitalDelta]ey", ",", " ", 
        RowBox[{"path", " ", "=", " ", "moves"}], ",", " ", 
        RowBox[{"path1", "=", " ", "pm1"}], ",", " ", 
        RowBox[{"path2", "=", " ", "pm2"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"s1", " ", "=", " ", 
          RowBox[{
          "starting", " ", "position", " ", "of", " ", "robot", " ", "1", " ",
            "for", " ", "this", " ", "move"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"s2", " ", "=", " ", 
          RowBox[{
          "starting", " ", "position", " ", "of", " ", "robot", " ", "2", " ",
            "for", " ", "this", " ", "move"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
         "moves", " ", "to", " ", "contact", " ", "wall", " ", "in", " ", 
          "direction", " ", 
          RowBox[{
          "dir", ".", "\[IndentingNewLine]", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", "  ", "If"}], " ", "one", " ", "robot", " ",
           "is", " ", "already", " ", "touching", " ", "the", " ", "wall", 
          " ", "in", " ", "direction", " ", "dir"}]}], ",", " ", 
        RowBox[{
         RowBox[{"just", " ", "moves", " ", "the", " ", "second", " ", 
          RowBox[{
          "robot", ".", " ", "\[IndentingNewLine]", " ", "Movements"}], " ", 
          "are", " ", "chosen", " ", "to", " ", "minimize"}], " ", "|", 
         "\[CapitalDelta]ex", "|", " ", "and", " ", "|", "\[CapitalDelta]ey", 
         "|"}], ",", " ", 
        RowBox[{
        "the", " ", "error", " ", "from", " ", "the", " ", "desired", " ", 
         "spacing", " ", "of", " ", "the", " ", "robots"}], ",", " ", 
        RowBox[{
         RowBox[{"where", " ", "\[CapitalDelta]ex"}], " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"g2x", "-", "g1x"}], ")"}], " ", "-", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"r2x", "-", "r1x"}], ")"}], "  ", "and", " ", 
            "\[CapitalDelta]ey"}]}], " ", "=", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"g2y", "-", "g1y"}], ")"}], " ", "-", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"r2y", "-", "r1y"}], ")"}], " ", ".", "  ", "If"}], " ",
             "robots", " ", "would", " ", "end", " ", "up", " ", 
            "overlapping"}]}]}]}], ",", " ", 
        RowBox[{
         RowBox[{"returns", " ", "multiple", " ", "possibilities"}], " ", "+", 
         RowBox[{"/", 
          RowBox[{"-", " ", "\[Epsilon]"}]}]}]}], "  ", "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
         RowBox[{"STEP", " ", "1"}], ":", " ", 
         RowBox[{"is", " ", "base", " ", "case", " ", "1", " ", 
          RowBox[{"possible", "?", "  ", "If"}], " ", "so"}]}], ",", " ", 
        RowBox[{"do", " ", "it", " ", "and", " ", "return"}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[CapitalDelta]ex", ",", " ", "\[CapitalDelta]ey"}], "}"}], 
        " ", "=", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"g2", "-", "g1"}], ")"}], "-", 
         RowBox[{"(", 
          RowBox[{"s2", "-", "s1"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"-", "0.0001"}], "\[LessEqual]", " ", "\[CapitalDelta]ex", 
           "\[LessEqual]", " ", "0.0001"}], " ", "&&", " ", 
          RowBox[{
           RowBox[{"-", "0.0001"}], "\[LessEqual]", " ", "\[CapitalDelta]ey", 
           " ", "<", " ", "0.0001"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"path", ",", " ", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{
               "g2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               "-", "  ", 
               RowBox[{
               "s2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
               ",", " ", 
              RowBox[{
               RowBox[{
               "g2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
               "-", " ", 
               RowBox[{
               "s2", "\[LeftDoubleBracket]", "2", 
                "\[RightDoubleBracket]"}]}]}], "}"}]}], "]"}], ";", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"path1", ",", "  ", "g1"}], "]"}], ";", " ", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"path2", ",", " ", "g2"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Return", "[", " ", 
           RowBox[{"{", " ", 
            RowBox[{
             RowBox[{"distanceMoved", "[", " ", "path", "]"}], ",", "g1", ",",
              "g2", ",", "path", ",", "path1", ",", "path2", ",", " ", 
             "True"}], " ", "}"}], "  ", "]"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"OTHERWISE", ",", " ", 
         RowBox[{
         "move", " ", "in", " ", "the", " ", "desired", " ", "direction", " ",
           "to", " ", "contact", " ", "a", " ", 
          RowBox[{"wall", ".", "  ", "\[IndentingNewLine]", 
           RowBox[{"We", "'"}]}], "ll", " ", "need", " ", "to", " ", "rotate",
           " ", "the", " ", "coordinate", " ", "frames", " ", "so", " ", 
          "the", " ", "movement", " ", "is", " ", "up"}], ",", " ", 
         RowBox[{
         "and", " ", "ensure", " ", "robot", " ", "1", " ", "is", " ", "the", 
          " ", "first", " ", "to", " ", 
          RowBox[{"contact", ".", "\[IndentingNewLine]", "then"}], " ", 
          RowBox[{"we", "'"}], "ll", " ", "call", " ", "wallFrictionMoveUp"}],
          ",", " ", "\[IndentingNewLine]", 
         RowBox[{"then", " ", "we", " ", "take", " ", "the", " ", "answer"}], 
         ",", " ", 
         RowBox[{
         "and", " ", "reassign", " ", "robot", " ", "1", " ", "and", " ", "2",
           " ", "to", " ", "match", " ", "original", "\[IndentingNewLine]", 
          "then", " ", "rotate", " ", "answer", " ", "into", " ", "original", 
          " ", "coordinate", " ", "frame"}]}], "*)"}], "\[IndentingNewLine]", 
       
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "r1", ",", "r2", ",", "newPathEntries", ",", "s1t", ",", "s2t", ",",
            "g1t", ",", "g2t", ",", "movest", ",", " ", "pm1st", ",", " ", 
           "pm2st"}], "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"if", " ", "move", " ", "is", " ", "up"}], ",", " ", 
           RowBox[{"call", " ", "wallFrictionMoveUp"}], ",", " ", 
           RowBox[{"otherwise", " ", "rotate", " ", "frame"}], ",", " ", 
           RowBox[{"then", " ", "unrotate", " ", "answers"}]}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"dir", "\[Equal]", "\"\<u\>\""}], ",", " ", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"Print", "[", "\"\<up selected:\>\"", "]"}], ";"}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"newPathEntries", "=", " ", 
              RowBox[{"wallFrictionMoveUp", "[", 
               RowBox[{
               "s1", ",", "s2", ",", "g1", ",", "g2", ",", "moves", ",", 
                "pm1", ",", " ", "pm2", ",", "\[Epsilon]"}], "]"}]}], ";"}]}],
            "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"if", " ", "move", " ", "is", " ", "down"}], ",", " ", 
            RowBox[{"rotate", " ", "frame", " ", "180", " ", "deg"}], ",", 
            " ", 
            RowBox[{"then", " ", "unrotate", " ", "answers"}]}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"dir", "\[Equal]", "\"\<d\>\""}], ",", " ", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"Print", "[", "\"\<down selected:\>\"", "]"}], ";"}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"s1t", ",", "s2t", ",", "g1t", ",", "g2t"}], "}"}], 
              "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate180", ",", 
                RowBox[{"{", 
                 RowBox[{"s1", ",", "s2", ",", "g1", ",", "g2"}], "}"}]}], 
               "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"movest", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate180inplace", ",", "moves"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"pm1st", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate180", ",", "pm1"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"pm2st", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate180", ",", "pm2"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"newPathEntries", "=", " ", 
              RowBox[{"wallFrictionMoveUp", "[", 
               RowBox[{
               "s1t", ",", "s2t", ",", "g1t", ",", "g2t", ",", "movest", ",", 
                "pm1st", ",", " ", "pm2st", ",", "\[Epsilon]"}], "]"}]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{"undo", " ", "the", " ", "change"}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "newPathEntries", "\[LeftDoubleBracket]", "2", 
               "\[RightDoubleBracket]"}], " ", "=", " ", 
              RowBox[{"rotate180", "[", 
               RowBox[{
               "newPathEntries", "\[LeftDoubleBracket]", "2", 
                "\[RightDoubleBracket]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "newPathEntries", "\[LeftDoubleBracket]", "3", 
               "\[RightDoubleBracket]"}], " ", "=", " ", 
              RowBox[{"rotate180", "[", 
               RowBox[{
               "newPathEntries", "\[LeftDoubleBracket]", "3", 
                "\[RightDoubleBracket]"}], " ", "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "newPathEntries", "\[LeftDoubleBracket]", "4", 
               "\[RightDoubleBracket]"}], " ", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate180inplace", ",", " ", 
                RowBox[{
                "newPathEntries", "\[LeftDoubleBracket]", "4", 
                 "\[RightDoubleBracket]"}]}], " ", "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "newPathEntries", "\[LeftDoubleBracket]", "5", 
               "\[RightDoubleBracket]"}], " ", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate180", ",", " ", 
                RowBox[{
                "newPathEntries", "\[LeftDoubleBracket]", "5", 
                 "\[RightDoubleBracket]"}]}], " ", "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "newPathEntries", "\[LeftDoubleBracket]", "6", 
               "\[RightDoubleBracket]"}], " ", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate180", ",", " ", 
                RowBox[{
                "newPathEntries", "\[LeftDoubleBracket]", "6", 
                 "\[RightDoubleBracket]"}]}], " ", "]"}]}], ";"}]}], 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"newPathEntries", "=", 
              RowBox[{"Table", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                  "aPathEntry", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], ",", 
                  RowBox[{"Map", "[", 
                   RowBox[{"rotate180", ",", 
                    RowBox[{
                    "aPathEntry", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}], " ", ",", 
                  RowBox[{"Map", "[", 
                   RowBox[{"rotate180", ",", 
                    RowBox[{
                    "aPathEntry", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Map", "[", 
                   RowBox[{"rotate180inplace", ",", 
                    RowBox[{
                    "aPathEntry", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}]}], "]"}]}], " ", "}"}], 
                "\[IndentingNewLine]", "  ", ",", 
                RowBox[{"{", 
                 RowBox[{"aPathEntry", ",", " ", "newPathEntries"}], "}"}]}], 
               "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"if", " ", "move", " ", "is", " ", "right"}], ",", " ", 
            RowBox[{"rotate", " ", "frame", " ", "90", " ", "deg"}], ",", " ", 
            RowBox[{"then", " ", "unrotate", " ", "answers"}]}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"dir", "\[Equal]", "\"\<r\>\""}], ",", " ", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"Print", "[", "\"\<right selected:\>\"", "]"}], ";"}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"s1t", ",", "s2t", ",", "g1t", ",", "g2t"}], "}"}], 
              "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate90", ",", 
                RowBox[{"{", 
                 RowBox[{"s1", ",", "s2", ",", "g1", ",", "g2"}], "}"}]}], 
               "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"movest", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate90inplace", ",", "moves"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"pm1st", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate90", ",", "pm1"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"pm2st", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate90", ",", "pm2"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"newPathEntries", "=", " ", 
              RowBox[{"wallFrictionMoveUp", "[", 
               RowBox[{
               "s1t", ",", "s2t", ",", "g1t", ",", "g2t", ",", "movest", ",", 
                "pm1st", ",", " ", "pm2st", ",", "\[Epsilon]"}], "]"}]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{"undo", " ", "the", " ", "change"}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"newPathEntries", "=", " ", 
                RowBox[{
                "newPathEntries", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}]}], ";"}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "newPathEntries", "\[LeftDoubleBracket]", "2", 
               "\[RightDoubleBracket]"}], " ", "=", " ", 
              RowBox[{"rotate270", "[", 
               RowBox[{
               "newPathEntries", "\[LeftDoubleBracket]", "2", 
                "\[RightDoubleBracket]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "newPathEntries", "\[LeftDoubleBracket]", "3", 
               "\[RightDoubleBracket]"}], " ", "=", " ", 
              RowBox[{"rotate270", "[", 
               RowBox[{
               "newPathEntries", "\[LeftDoubleBracket]", "3", 
                "\[RightDoubleBracket]"}], " ", "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "newPathEntries", "\[LeftDoubleBracket]", "4", 
               "\[RightDoubleBracket]"}], " ", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate270inplace", ",", " ", 
                RowBox[{
                "newPathEntries", "\[LeftDoubleBracket]", "4", 
                 "\[RightDoubleBracket]"}]}], " ", "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "newPathEntries", "\[LeftDoubleBracket]", "5", 
               "\[RightDoubleBracket]"}], " ", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate270", ",", " ", 
                RowBox[{
                "newPathEntries", "\[LeftDoubleBracket]", "5", 
                 "\[RightDoubleBracket]"}]}], " ", "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "newPathEntries", "\[LeftDoubleBracket]", "6", 
               "\[RightDoubleBracket]"}], " ", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate270", ",", " ", 
                RowBox[{
                "newPathEntries", "\[LeftDoubleBracket]", "6", 
                 "\[RightDoubleBracket]"}]}], " ", "]"}]}]}]}], 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"newPathEntries", "=", 
              RowBox[{"Table", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                  "aPathEntry", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], ",", 
                  RowBox[{"Map", "[", 
                   RowBox[{"rotate90", ",", 
                    RowBox[{
                    "aPathEntry", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}], " ", ",", 
                  RowBox[{"Map", "[", 
                   RowBox[{"rotate90", ",", 
                    RowBox[{
                    "aPathEntry", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Map", "[", 
                   RowBox[{"rotate90inplace", ",", 
                    RowBox[{
                    "aPathEntry", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}]}], "]"}]}], " ", "}"}], 
                "\[IndentingNewLine]", "  ", ",", 
                RowBox[{"{", 
                 RowBox[{"aPathEntry", ",", " ", "newPathEntries"}], "}"}]}], 
               "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
            RowBox[{"if", " ", "move", " ", "is", " ", "left"}], ",", " ", 
            RowBox[{"rotate", " ", "frame", " ", "270", " ", "deg"}], ",", 
            " ", 
            RowBox[{"then", " ", "unrotate", " ", "answers"}]}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"dir", "\[Equal]", "\"\<l\>\""}], ",", " ", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"Print", "[", "\"\<left selected:\>\"", "]"}], ";"}], 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"s1t", ",", "s2t", ",", "g1t", ",", "g2t"}], "}"}], 
              "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate270", ",", 
                RowBox[{"{", 
                 RowBox[{"s1", ",", "s2", ",", "g1", ",", "g2"}], "}"}]}], 
               "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"movest", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate270inplace", ",", "moves"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"pm1st", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate270", ",", "pm1"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"pm2st", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate270", ",", "pm2"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"newPathEntries", "=", " ", 
              RowBox[{"wallFrictionMoveUp", "[", 
               RowBox[{
               "s1t", ",", "s2t", ",", "g1t", ",", "g2t", ",", "movest", ",", 
                "pm1st", ",", " ", "pm2st", ",", "\[Epsilon]"}], "]"}]}], ";",
              "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
               RowBox[{"newPathEntries", "=", " ", 
                RowBox[{
                "newPathEntries", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}]}], ";"}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "newPathEntries", "\[LeftDoubleBracket]", "2", 
               "\[RightDoubleBracket]"}], " ", "=", " ", 
              RowBox[{"rotate90", "[", 
               RowBox[{
               "newPathEntries", "\[LeftDoubleBracket]", "2", 
                "\[RightDoubleBracket]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "newPathEntries", "\[LeftDoubleBracket]", "3", 
               "\[RightDoubleBracket]"}], " ", "=", " ", 
              RowBox[{"rotate90", "[", 
               RowBox[{
               "newPathEntries", "\[LeftDoubleBracket]", "3", 
                "\[RightDoubleBracket]"}], " ", "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "newPathEntries", "\[LeftDoubleBracket]", "4", 
               "\[RightDoubleBracket]"}], " ", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate90inplace", ",", " ", 
                RowBox[{
                "newPathEntries", "\[LeftDoubleBracket]", "4", 
                 "\[RightDoubleBracket]"}]}], " ", "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "newPathEntries", "\[LeftDoubleBracket]", "5", 
               "\[RightDoubleBracket]"}], " ", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate90", ",", " ", 
                RowBox[{
                "newPathEntries", "\[LeftDoubleBracket]", "5", 
                 "\[RightDoubleBracket]"}]}], " ", "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
              "newPathEntries", "\[LeftDoubleBracket]", "6", 
               "\[RightDoubleBracket]"}], " ", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"rotate90", ",", " ", 
                RowBox[{
                "newPathEntries", "\[LeftDoubleBracket]", "6", 
                 "\[RightDoubleBracket]"}]}], " ", "]"}]}]}]}], 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"undo", " ", "the", " ", "change"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"newPathEntries", "=", 
              RowBox[{"Table", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                  "aPathEntry", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], ",", 
                  RowBox[{"Map", "[", 
                   RowBox[{"rotate270", ",", 
                    RowBox[{
                    "aPathEntry", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "]"}], " ", ",", 
                  RowBox[{"Map", "[", 
                   RowBox[{"rotate270", ",", 
                    RowBox[{
                    "aPathEntry", "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Map", "[", 
                   RowBox[{"rotate270inplace", ",", 
                    RowBox[{
                    "aPathEntry", "\[LeftDoubleBracket]", "4", 
                    "\[RightDoubleBracket]"}]}], "]"}]}], " ", "}"}], 
                "\[IndentingNewLine]", "  ", ",", 
                RowBox[{"{", 
                 RowBox[{"aPathEntry", ",", " ", "newPathEntries"}], "}"}]}], 
               "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Return", " ", "[", "newPathEntries", "]"}]}]}], 
        "\[IndentingNewLine]", "]"}]}]}], 
     RowBox[{"(*", 
      RowBox[{"end", " ", "inner", " ", "module"}], "*)"}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
   RowBox[{"(*", 
    RowBox[{"end", " ", "outer", " ", "module"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"wallFrictionMoveUp", "[", 
     RowBox[{
     "r1in_", ",", "r2in_", ",", "g1in_", ",", "g2in_", ",", "moves_", ",", 
      "pm1_", ",", " ", "pm2_", " ", ",", " ", "\[Epsilon]_"}], "]"}], ":=", 
    " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "r1", ",", "r2", ",", "g1", ",", "g2", ",", "\[CapitalDelta]gx", ",", 
        "\[CapitalDelta]gy", ",", "m1", ",", "m2", ",", "\[CapitalDelta]tgx", 
        ",", "\[CapitalDelta]tgy", ",", "\[IndentingNewLine]", 
        "\[CapitalDelta]ey", " ", ",", "\[CapitalDelta]ex", " ", ",", 
        "\[IndentingNewLine]", 
        RowBox[{"L", "=", " ", "1"}], " ", 
        RowBox[{"(*", 
         RowBox[{"size", " ", "of", " ", "workspace"}], "*)"}], ",", 
        "\[IndentingNewLine]", "\[CapitalDelta]r", 
        RowBox[{"(*", 
         RowBox[{
         "current", " ", "x", " ", "and", " ", "y", " ", "difference"}], 
         "*)"}], ",", "\[IndentingNewLine]", 
        RowBox[{"path1", "=", " ", "pm1"}], 
        RowBox[{"(*", 
         RowBox[{"desired", " ", "moves", " ", "for", " ", "r1"}], "*)"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"path2", "=", " ", "pm2"}], 
        RowBox[{"(*", 
         RowBox[{"desired", " ", "moves", " ", "for", " ", "r2"}], "*)"}], 
        ",", "\[IndentingNewLine]", 
        RowBox[{"path", " ", "=", " ", "moves"}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"isMirrored", " ", "=", " ", "False"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"isFlipped", " ", "=", " ", "False"}]}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "robot", " ", "1", " ", "must", " ", "be", " ", "the", " ", "top", 
         " ", "left", " ", 
         RowBox[{"robot", ".", " ", "If"}], " ", "it", " ", "is", " ", "not", 
         " ", "the", " ", "top", " ", "robot"}], ",", " ", 
        RowBox[{"flip", " ", "entries"}], ",", " ", 
        RowBox[{
        "if", " ", "it", " ", "is", " ", "not", " ", "the", " ", "left", " ", 
         "robot"}], ",", " ", 
        RowBox[{"mirror", " ", 
         RowBox[{"entries", ".", " ", "Remember"}], " ", "to", " ", "switch", 
         " ", "again", " ", "at", " ", 
         RowBox[{"end", "!"}], "\[IndentingNewLine]", " ", "then", " ", 
         "move", " ", "robot", "  ", "while", " ", "first", " ", "robot", " ",
          "is", " ", "touching", " ", "wall"}]}], "*)"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
          "r1in", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "<", 
          RowBox[{
          "r2in", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
            "r1in", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
            ">", 
            RowBox[{
            "r2in", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"r1", ",", "r2", ",", "g1", ",", "g2"}], "}"}], "=", 
             RowBox[{"{", 
              RowBox[{"r2in", ",", "r1in", ",", "g2in", ",", "g1in"}], 
              "}"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"isFlipped", " ", "=", " ", "True"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{"r1", ",", "r2", ",", "g1", ",", "g2"}], "}"}], "=", 
             " ", 
             RowBox[{"Map", "[", 
              RowBox[{"mirror", ",", " ", 
               RowBox[{"{", 
                RowBox[{"r2in", ",", "r1in", ",", "g2in", ",", "g1in"}], 
                "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"path", " ", "=", " ", 
             RowBox[{"Map", "[", 
              RowBox[{"mirrorInplace", ",", " ", "moves"}], "]"}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"isFlipped", " ", "=", " ", "True"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"isMirrored", " ", "=", " ", "True"}]}]}], "]"}], ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
             "r1in", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             ">", 
             RowBox[{
             "r2in", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
             ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{"r1", ",", "r2", ",", "g1", ",", "g2"}], "}"}], "=", 
              " ", 
              RowBox[{"Map", "[", 
               RowBox[{"mirror", ",", " ", 
                RowBox[{"{", 
                 RowBox[{"r1in", ",", "r2in", ",", "g1in", ",", "g2in"}], 
                 "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"path", " ", "=", " ", 
              RowBox[{"Map", "[", 
               RowBox[{"mirrorInplace", ",", " ", "moves"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"isMirrored", "=", " ", "True"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"r1", ",", "r2", ",", "g1", ",", "g2"}], "}"}], "=", 
             RowBox[{"{", 
              RowBox[{"r1in", ",", "r2in", ",", "g1in", ",", "g2in"}], 
              "}"}]}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\[CapitalDelta]gx", ",", "\[CapitalDelta]gy"}], "}"}], " ", 
        "=", " ", 
        RowBox[{"g2", "-", "g1"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "If", " ", "the", " ", "second", " ", "robot", " ", "is", " ", 
          "already", " ", "touching", " ", "the", " ", "up", " ", "wall"}], 
         ",", " ", 
         RowBox[{"just", " ", 
          RowBox[{"return", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
          "r2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
          "\[Equal]", " ", "1"}], ",", " ", 
         RowBox[{"Return", " ", "[", 
          RowBox[{"{", 
           RowBox[{
           "Infinity", ",", " ", "r1", ",", " ", "r2", ",", " ", "path", ",", 
            " ", "path1", ",", " ", "path2", " ", ",", " ", "False"}], "}"}], 
          "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"if", " ", "the", " ", "goal", " ", "\[CapitalDelta]gx"}], 
         ",", 
         RowBox[{"\[CapitalDelta]gy", " ", "is", " ", "achievable"}], ",", 
         " ", 
         RowBox[{"do", " ", "it", " ", "in", " ", "one", " ", 
          RowBox[{"move", ".", " ", "Otherwise"}]}], ","}], " ", "*)"}], " ", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
            "r2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "-",
             " ", 
            RowBox[{
            "r1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "-",
             "1"}], "\[LessEqual]", "  ", "\[CapitalDelta]gx", " ", 
           "\[LessEqual]", "  ", "1"}], "  ", "&&", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
            "r2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "-",
             " ", 
            RowBox[{
            "r1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
           " ", "\[LessEqual]", " ", "\[CapitalDelta]gy", "\[LessEqual]", 
           "  ", "0"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", "\"\<Achievable\>\"", " ", "]"}], ";"}], 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"in", " ", "Achievable", " ", "range"}], "*)"}], 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
          "move", " ", "r1", " ", "and", " ", "r2", " ", "so", " ", "that", 
           " ", "r1", " ", "will", " ", "touch", " ", "the", " ", "up", " ", 
           "wall", " ", "in", " ", "the", " ", "line", " ", "of", " ", "the", 
           " ", "goal"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"m1", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{"1", "-", 
                RowBox[{
                "r1", "\[LeftDoubleBracket]", "2", 
                 "\[RightDoubleBracket]"}]}], 
               RowBox[{"2", "-", 
                RowBox[{
                "g1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                "-", " ", 
                RowBox[{
                "r1", "\[LeftDoubleBracket]", "2", 
                 "\[RightDoubleBracket]"}]}]], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                "g1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                "-", 
                RowBox[{
                "r1", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}]}], ")"}]}], ",", 
             RowBox[{"1", "-", 
              RowBox[{
              "r1", "\[LeftDoubleBracket]", "2", 
               "\[RightDoubleBracket]"}]}]}], "}"}]}], ";", 
          RowBox[{"r1", " ", "+=", "  ", "m1"}], ";", " ", 
          RowBox[{"r2", " ", "+=", " ", "m1"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
             "r2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             ">", "1"}], ",", 
            RowBox[{
             RowBox[{"r1", " ", "-=", " ", "m1"}], ";", " ", 
             RowBox[{"r2", " ", "-=", " ", "m1"}], ";", "  ", 
             RowBox[{"m1", " ", "=", 
              RowBox[{"{", " ", 
               RowBox[{
                RowBox[{"1", "-", 
                 RowBox[{
                 "r2", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}]}], ",", 
                RowBox[{"1", "-", 
                 RowBox[{
                 "r1", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}]}]}], "}"}]}], ";", " ", 
             RowBox[{"r1", " ", "+=", " ", "m1"}], ";", " ", 
             RowBox[{"r2", "+=", " ", "m1"}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
             "r2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "<", "0"}], ",", " ", 
            RowBox[{
             RowBox[{"r1", " ", "-=", " ", "m1"}], ";", " ", 
             RowBox[{"r2", " ", "-=", " ", "m1"}], ";", " ", 
             RowBox[{"m1", " ", "=", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", " ", 
                 RowBox[{
                 "r2", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}]}], ",", " ", 
                RowBox[{"1", "-", 
                 RowBox[{
                 "r1", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}]}]}], "}"}]}], ";", " ", 
             RowBox[{"r1", " ", "+=", " ", "m1"}], ";", " ", 
             RowBox[{"r2", " ", "+=", " ", "m1"}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
           "move", " ", "r2", " ", "to", " ", "get", " ", "correct", " ", 
            "spacing"}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"m2", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[CapitalDelta]gx", "-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                "r2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                "-", 
                RowBox[{
                "r1", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}]}], ")"}]}], ",", 
             RowBox[{"\[CapitalDelta]gy", "-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                "r2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                "-", 
                RowBox[{
                "r1", "\[LeftDoubleBracket]", "2", 
                 "\[RightDoubleBracket]"}]}], ")"}]}]}], " ", "}"}]}], ";", 
          RowBox[{"r2", " ", "+=", " ", "m2"}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{
            "if", " ", "r2", " ", "is", " ", "getting", " ", "out", " ", "of",
              " ", "bound"}], ",", " ", 
            RowBox[{
            "change", " ", "m1", " ", "and", " ", "m2", " ", "so", " ", 
             "that", " ", "it", " ", "would", " ", "stay", " ", "in", " ", 
             "the", " ", "bound"}]}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
              "r2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              "\[GreaterEqual]", " ", "1"}], ",", " ", 
             RowBox[{
              RowBox[{"r1", " ", "-=", " ", "m1"}], ";", " ", 
              RowBox[{"r2", "-=", " ", "m2"}], ";", " ", 
              RowBox[{"r2", "-=", "m1"}], ";", " ", 
              RowBox[{"m1", " ", "=", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", "-", "\[CapitalDelta]gx"}], ")"}], "-", 
                  RowBox[{
                  "r1", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}]}], ",", 
                 RowBox[{"1", "-", 
                  RowBox[{
                  "r1", "\[LeftDoubleBracket]", "2", 
                   "\[RightDoubleBracket]"}]}]}], "}"}]}], ";", " ", 
              RowBox[{"r1", "+=", " ", "m1"}], ";", " ", 
              RowBox[{"r2", "+=", "m1"}], ";", 
              RowBox[{"m2", "=", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\[CapitalDelta]gx", "-", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    "r2", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    "r1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ")"}]}], ",", 
                 RowBox[{"\[CapitalDelta]gy", "-", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    "r2", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    "r1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], ")"}]}]}], " ", "}"}]}], ";",
               " ", 
              RowBox[{"r2", "+=", " ", "m2"}], ";"}]}], "]"}], 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
              "r2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              "\[LessEqual]", " ", "0"}], ",", " ", 
             RowBox[{
              RowBox[{"r1", " ", "-=", " ", "m1"}], ";", " ", 
              RowBox[{"r2", "-=", " ", "m2"}], ";", " ", 
              RowBox[{"r2", "-=", "m1"}], ";", " ", 
              RowBox[{"m1", " ", "=", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\[CapitalDelta]gx", "-", 
                  RowBox[{
                  "r1", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}]}], ",", 
                 RowBox[{"1", "-", 
                  RowBox[{
                  "r1", "\[LeftDoubleBracket]", "2", 
                   "\[RightDoubleBracket]"}]}]}], "}"}]}], ";", " ", 
              RowBox[{"r1", "+=", " ", "m1"}], ";", " ", 
              RowBox[{"r2", "+=", "m1"}], ";", 
              RowBox[{"m2", "=", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\[CapitalDelta]gx", "-", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    "r2", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    "r1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ")"}]}], ",", 
                 RowBox[{"\[CapitalDelta]gy", "-", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    "r2", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    "r1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], ")"}]}]}], " ", "}"}]}], ";",
               " ", 
              RowBox[{"r2", "+=", " ", "m2"}]}]}], "]"}]}], ";"}], 
         "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"not", " ", "achievable", " ", "range"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "move", " ", "the", " ", "robots", " ", "to", " ", "minimize", " ", 
           "the", " ", 
           RowBox[{"error", ".", "  ", "Gets"}], " ", "the", " ", "minimum", 
           " ", "distance", " ", "to", " ", "the", " ", "wall", " ", "to", 
           " ", "make", " ", "minimize", " ", "the", " ", 
           RowBox[{"error", "."}]}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"Print", "[", "\"\<not achieveable\>\"", "]"}], ";"}], 
          "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
              "r2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              "-", " ", 
              RowBox[{
              "r1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              "-", "1"}], ">", "   ", "\[CapitalDelta]gx"}], " ", ",", " ", 
            RowBox[{"\[CapitalDelta]tgx", " ", "=", " ", 
             RowBox[{
              RowBox[{
              "r2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              "-", " ", 
              RowBox[{
              "r1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              "-", "1"}]}], ",", "  ", 
            RowBox[{
            "\[CapitalDelta]tgx", " ", "=", "  ", "\[CapitalDelta]gx"}]}], 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", " ", 
           RowBox[{
            RowBox[{"\[CapitalDelta]gy", " ", ">", " ", "0"}], ",", "  ", 
            RowBox[{"\[CapitalDelta]tgy", " ", "=", " ", "0"}], ",", " ", 
            RowBox[{
            "\[CapitalDelta]tgy", " ", "=", " ", "\[CapitalDelta]gy"}]}], 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"\[CapitalDelta]gy", "  ", "<", " ", 
             RowBox[{
              RowBox[{
              "r2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
              "-", " ", 
              RowBox[{
              "r1", "\[LeftDoubleBracket]", "2", 
               "\[RightDoubleBracket]"}]}]}], ",", "  ", 
            RowBox[{"\[CapitalDelta]tgy", " ", "=", " ", 
             RowBox[{
              RowBox[{
              "r2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
              "-", " ", 
              RowBox[{
              "r1", "\[LeftDoubleBracket]", "2", 
               "\[RightDoubleBracket]"}]}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"m1", " ", "=", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", " ", 
             RowBox[{"1", "-", " ", 
              RowBox[{
              "r1", "\[LeftDoubleBracket]", "2", 
               "\[RightDoubleBracket]"}]}]}], "}"}]}], ";", " ", 
          RowBox[{"r1", "+=", " ", "m1"}], ";", " ", 
          RowBox[{"r2", "+=", " ", "m1"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
             "r2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             ">", "1"}], ",", 
            RowBox[{
             RowBox[{"r1", " ", "-=", " ", "m1"}], ";", " ", 
             RowBox[{"r2", " ", "-=", " ", "m1"}], ";", " ", 
             RowBox[{"m1", " ", "=", 
              RowBox[{"{", " ", 
               RowBox[{
                RowBox[{"1", "-", 
                 RowBox[{
                 "r2", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}]}], ",", 
                RowBox[{"1", "-", 
                 RowBox[{
                 "r1", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}]}]}], "}"}]}], ";", " ", 
             RowBox[{"r1", " ", "+=", " ", "m1"}], ";", " ", 
             RowBox[{"r2", "+=", " ", "m1"}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
             "r2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "<", "0"}], ",", " ", 
            RowBox[{
             RowBox[{"r1", " ", "-=", " ", "m1"}], ";", " ", 
             RowBox[{"r2", " ", "-=", " ", "m1"}], ";", " ", 
             RowBox[{"m1", " ", "=", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", " ", 
                 RowBox[{
                 "r2", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}]}], ",", " ", 
                RowBox[{"1", "-", 
                 RowBox[{
                 "r1", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}]}]}], "}"}]}], ";", " ", 
             RowBox[{"r1", " ", "+=", " ", "m1"}], ";", " ", 
             RowBox[{"r2", " ", "+=", " ", "m1"}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"m2", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"\[CapitalDelta]tgx", "-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                "r2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
                "-", 
                RowBox[{
                "r1", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}]}], ")"}]}], ",", 
             RowBox[{"\[CapitalDelta]tgy", "-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                "r2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
                "-", 
                RowBox[{
                "r1", "\[LeftDoubleBracket]", "2", 
                 "\[RightDoubleBracket]"}]}], ")"}]}]}], " ", "}"}]}], ";", 
          RowBox[{"r2", " ", "+=", " ", "m2"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
             "r2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             ">", "1"}], ",", " ", 
            RowBox[{
             RowBox[{"r1", " ", "-=", " ", "m1"}], ";", " ", 
             RowBox[{"r2", "-=", " ", "m2"}], ";", " ", 
             RowBox[{"r2", "-=", "m1"}], ";", " ", 
             RowBox[{"m1", " ", "=", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"Min", "[", 
                  RowBox[{
                   RowBox[{"Abs", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "\[CapitalDelta]tgx"}], ")"}], "-", 
                    RowBox[{
                    "r1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", 
                   RowBox[{
                   "r1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}]}], ",", 
                RowBox[{"1", "-", 
                 RowBox[{
                 "r1", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}]}]}], "}"}]}], ";", " ", 
             RowBox[{"r1", "+=", " ", "m1"}], ";", " ", 
             RowBox[{"r2", "+=", "m1"}], ";", 
             RowBox[{"m2", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Min", "[", 
                 RowBox[{
                  RowBox[{"\[CapitalDelta]tgx", "-", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "r2", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    "r1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ")"}]}], ",", " ", 
                  RowBox[{"1", "-", 
                   RowBox[{
                   "r2", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], "]"}], ",", 
                RowBox[{"\[CapitalDelta]tgy", "-", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                   "r2", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "-", 
                   RowBox[{
                   "r1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], ")"}]}]}], " ", "}"}]}], ";",
              " ", 
             RowBox[{"r2", "+=", " ", "m2"}]}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
             "r2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
             "<", "0"}], ",", " ", 
            RowBox[{
             RowBox[{"r1", " ", "-=", " ", "m1"}], ";", " ", 
             RowBox[{"r2", "-=", " ", "m2"}], ";", " ", 
             RowBox[{"r2", "-=", "m1"}], ";", " ", 
             RowBox[{"m1", " ", "=", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Min", "[", 
                 RowBox[{
                  RowBox[{"Abs", "[", 
                   RowBox[{"\[CapitalDelta]tgx", "-", 
                    RowBox[{
                    "r1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}], ",", " ", 
                  RowBox[{"Abs", "[", 
                   RowBox[{"1", "-", 
                    RowBox[{
                    "r2", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], "]"}]}], "]"}], ",", 
                RowBox[{"1", "-", 
                 RowBox[{
                 "r1", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}]}]}], "}"}]}], ";", " ", 
             RowBox[{"r1", "+=", " ", "m1"}], ";", " ", 
             RowBox[{"r2", "+=", "m1"}], ";", 
             RowBox[{"m2", "=", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Max", "[", 
                 RowBox[{
                  RowBox[{"\[CapitalDelta]tgx", "-", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "r2", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    "r1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ")"}]}], ",", " ", 
                  RowBox[{"-", 
                   RowBox[{
                   "r2", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}]}], "]"}], ",", 
                RowBox[{"\[CapitalDelta]tgy", "-", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                   "r2", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "-", 
                   RowBox[{
                   "r1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], ")"}]}]}], " ", "}"}]}], ";",
              " ", 
             RowBox[{"r2", "+=", " ", "m2"}]}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"path", ",", " ", "m1"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"r2", " ", "-=", " ", "m2"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"isMirrored", ",", 
         RowBox[{"If", "[", 
          RowBox[{"isFlipped", ",", " ", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"path1", ",", " ", 
              RowBox[{"mirror", "[", "r2", "]"}]}], "]"}], ";", " ", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"path2", ",", 
              RowBox[{"mirror", "[", "r1", "]"}]}], "]"}]}], ",", " ", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"path1", ",", " ", 
              RowBox[{"mirror", "[", "r1", "]"}]}], "]"}], ";", " ", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"path2", ",", 
              RowBox[{"mirror", "[", "r2", "]"}]}], "]"}]}]}], "]"}], ",", 
         RowBox[{"If", "[", 
          RowBox[{"isFlipped", ",", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"path1", ",", " ", "r2"}], "]"}], ";", " ", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"path2", ",", "r1"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"AppendTo", "[", 
             RowBox[{"path1", ",", "r1"}], "]"}], ";", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"path2", ",", "r2"}], "]"}]}]}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"r2", " ", "+=", " ", "m2"}], ";", "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"path", ",", " ", "m2"}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Change", " ", "the", " ", "robots", " ", "back", " ", "if", " ", 
         "they", " ", "were", " ", "mirrored"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"isMirrored", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"path", " ", "=", " ", 
           RowBox[{"Map", "[", 
            RowBox[{"mirrorInplace", ",", " ", "path"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"r1", ",", "r2"}], "}"}], " ", "=", " ", 
           RowBox[{"Map", "[", 
            RowBox[{"mirror", ",", 
             RowBox[{"{", 
              RowBox[{"r1", ",", "r2"}], "}"}]}], "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Change", " ", "the", " ", "robots", " ", "back", " ", "if", " ", 
         "they", " ", "were", " ", "flipped"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"isFlipped", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"path1", ",", " ", "r2"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"path2", ",", "r1"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Return", "[", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"If", "[", " ", 
              RowBox[{
               RowBox[{"m2", " ", "\[Equal]", " ", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], ",", "Infinity", ",", 
               RowBox[{
                RowBox[{"distanceMoved", "[", " ", "path", "]"}], "+", " ", 
                RowBox[{"admissibleHeuristic", "[", 
                 RowBox[{"r2", ",", "r1", ",", "g2", ",", "g1"}], "]"}]}]}], 
              "]"}], ",", "r2", ",", "r1", ",", "path", ",", "path1", ",", 
             " ", "path2", ",", " ", "False"}], "}"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"path1", ",", " ", "r1"}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"path2", ",", "r2"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Return", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"If", "[", " ", 
              RowBox[{
               RowBox[{"m2", " ", "\[Equal]", " ", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "0"}], "}"}]}], ",", " ", "Infinity", ",", 
               
               RowBox[{
                RowBox[{"distanceMoved", "[", " ", "path", "]"}], "+", " ", 
                RowBox[{"admissibleHeuristic", "[", 
                 RowBox[{"r1", ",", "r2", ",", "g1", ",", "g2"}], "]"}]}]}], 
              "]"}], ",", "r1", ",", "r2", ",", "path", ",", "path1", ",", 
             "path2", " ", ",", "False"}], " ", "}"}], "  ", "]"}]}]}], 
        "]"}]}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "rotate", " ", "the", " ", "coordinate", " ", "frame", " ", "90", " ", 
     "degrees"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rotate90", "[", "r_", "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "-", " ", 
       RowBox[{"r", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
      ",", " ", 
      RowBox[{"r", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
     "}"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", "changes", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rotate90inplace", "[", "r_", "]"}], ":=", 
    RowBox[{"{", " ", 
     RowBox[{
      RowBox[{"r", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
      ",", " ", 
      RowBox[{"-", 
       RowBox[{
       "r", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], 
     "}"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rotate270", "[", "r_", "]"}], " ", ":=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"r", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
      ",", 
      RowBox[{"1", "-", " ", 
       RowBox[{
       "r", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], 
     "}"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rotate270inplace", "[", "r_", "]"}], " ", ":=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"r", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
      ",", " ", 
      RowBox[{"r", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
     "}"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rotate180", "[", "r_", "]"}], " ", ":=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "-", 
       RowBox[{"r", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
      ",", 
      RowBox[{"1", "-", " ", 
       RowBox[{
       "r", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
     "}"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rotate180inplace", "[", "r_", "]"}], " ", ":=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"r", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
      ",", 
      RowBox[{"-", " ", 
       RowBox[{
       "r", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
     "}"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mirror", "[", "r_", "]"}], " ", ":=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "-", 
       RowBox[{"r", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
      ",", 
      RowBox[{"r", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
     "}"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mirrorInplace", "[", "r_", "]"}], ":=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"r", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
      ",", 
      RowBox[{"r", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
     "}"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"distanceMoved", "[", "moves_", "]"}], ":=", " ", 
    RowBox[{"Total", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Norm", "[", "m", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"m", ",", "moves"}], "}"}]}], "]"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Function", " ", "that", " ", "does", " ", "an", " ", "A", "*", " ", 
     "search", " ", "to", " ", "find", " ", "the", " ", "shortest", " ", 
     "path"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"optimal2robotPath", "[", 
     RowBox[{
     "s1_", ",", "s2_", ",", " ", "g1_", ",", "g2_", ",", "\[Epsilon]_"}], 
     "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "optimalPathList", ",", "bestMoveSeq", ",", " ", "dist1", ",", " ", 
        RowBox[{"iter", "=", "0"}]}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"{", 
        RowBox[{
         StyleBox[
          RowBox[{"e", 
           StyleBox["stimatedPathLength", "Text",
            FontWeight->"Bold"]}]], ",", "r1", ",", "r2", ",", "MOVES"}], 
        "}"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"optimalPathList", "=", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"Infinity", ",", "s1", ",", "s2", ",", 
           RowBox[{"{", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], "}"}], ",", 
           RowBox[{"{", "s1", "}"}], ",", 
           RowBox[{"{", "s2", "}"}], ",", "False"}], "}"}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"dist1", " ", "=", " ", 
        RowBox[{"distanceMoved", "[", " ", 
         RowBox[{
          RowBox[{"admissibleHeuristic", "[", 
           RowBox[{"s1", ",", "s2", ",", " ", "g1", ",", "g2"}], "]"}], "+", 
          "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"optimalPathList", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "7"}], "\[RightDoubleBracket]"}], " ", 
          "\[NotEqual]", "  ", "True"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "pathToExplore", ",", "r1", ",", "r2", ",", "wallMoves", ",", 
             "moves", ",", "pm1", ",", " ", "pm2", ",", " ", 
             "isPathComplete"}], "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{"body", " ", "of", " ", "while", " ", "loop"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"pathToExplore", " ", "=", " ", 
             RowBox[{"First", "[", "optimalPathList", "]"}]}], ";", " ", 
            RowBox[{"(*", 
             RowBox[{"pop", " ", "off", " ", "first", " ", "entry"}], "*)"}], 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"optimalPathList", "=", " ", 
             RowBox[{"Delete", "[", 
              RowBox[{"optimalPathList", ",", "1"}], "]"}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"r1", " ", "=", " ", 
             RowBox[{
             "pathToExplore", "\[LeftDoubleBracket]", "2", 
              "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"r2", " ", "=", " ", 
             RowBox[{
             "pathToExplore", "\[LeftDoubleBracket]", "3", 
              "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"moves", "=", " ", 
             RowBox[{
             "pathToExplore", "\[LeftDoubleBracket]", "4", 
              "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"pm1", " ", "=", " ", 
             RowBox[{
             "pathToExplore", "\[LeftDoubleBracket]", "5", 
              "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"pm2", " ", "=", " ", 
             RowBox[{
             "pathToExplore", "\[LeftDoubleBracket]", "6", 
              "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"isPathComplete", " ", "=", " ", 
             RowBox[{
             "pathToExplore", "\[LeftDoubleBracket]", "7", 
              "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"iter", " ", "+=", " ", "1"}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"isPathComplete", " ", "\[NotEqual]", " ", "True"}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Table", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{
                  RowBox[{"wallMoves", " ", "=", " ", 
                   RowBox[{"wallFrictionMoveDir", "[", 
                    RowBox[{
                    "dir", ",", "r1", ",", "r2", ",", "g1", ",", "g2", ",", 
                    "moves", ",", "pm1", ",", " ", "pm2", ",", " ", 
                    "\[Epsilon]"}], "]"}]}], ";", "\[IndentingNewLine]", 
                  RowBox[{"optimalPathList", "=", 
                   RowBox[{"AppendTo", "[", 
                    RowBox[{"optimalPathList", ",", "wallMoves"}], "]"}]}], 
                  ";"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{"dir", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    "\"\<u\>\"", ",", "\"\<d\>\"", ",", "\"\<l\>\"", ",", 
                    "\"\<r\>\""}], "}"}]}], "}"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"optimalPathList", " ", "=", " ", 
                RowBox[{"SortBy", "[", 
                 RowBox[{"optimalPathList", ",", " ", "First"}], "]"}]}], 
               ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
             "]"}]}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"return", " ", "the", " ", "best", " ", "movement"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
           "optimalPathList", "\[LeftDoubleBracket]", "1", 
            "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "4", 
           "\[RightDoubleBracket]"}], ",", " ", 
          RowBox[{
           RowBox[{
           "optimalPathList", "\[LeftDoubleBracket]", "1", 
            "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "5", 
           "\[RightDoubleBracket]"}], ",", " ", 
          RowBox[{
           RowBox[{
           "optimalPathList", "\[LeftDoubleBracket]", "1", 
            "\[RightDoubleBracket]"}], "\[LeftDoubleBracket]", "6", 
           "\[RightDoubleBracket]"}]}], "}"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6939408528236227`*^9, 3.693940888469677*^9}, {
   3.6939411305091133`*^9, 3.693941178437819*^9}, {3.693941387876739*^9, 
   3.6939413899004917`*^9}, {3.693941656965639*^9, 3.693941681444265*^9}, {
   3.693941786064103*^9, 3.693941802688339*^9}, {3.693941835689363*^9, 
   3.6939420230542583`*^9}, {3.6939420804095287`*^9, 3.69394220605469*^9}, {
   3.69394230325594*^9, 3.693942380441125*^9}, 3.694163599973598*^9, {
   3.6941707339115133`*^9, 3.6941708591178207`*^9}, {3.694171348574038*^9, 
   3.694171365971092*^9}, {3.694171399959486*^9, 3.694171476406212*^9}, {
   3.694171519220065*^9, 3.694171542443083*^9}, {3.6941717436032553`*^9, 
   3.694171751146134*^9}, {3.694171902501532*^9, 3.6941719175283003`*^9}, 
   3.6941721333534937`*^9, {3.694172366858963*^9, 3.694172475176903*^9}, {
   3.694172510680943*^9, 3.694172536105095*^9}, {3.694172590711431*^9, 
   3.6941726232159843`*^9}, 3.6941726573278637`*^9, {3.694173016287388*^9, 
   3.694173065879181*^9}, {3.6941731495712976`*^9, 3.694173288609469*^9}, {
   3.694175601608252*^9, 3.694175608959155*^9}, {3.6941818589940863`*^9, 
   3.694181883908156*^9}, 3.694189617187634*^9, 3.694373329087708*^9, {
   3.6944577291886044`*^9, 3.6944579604868402`*^9}, {3.6944580908461933`*^9, 
   3.69445816056343*^9}, {3.6944590515411797`*^9, 3.694459057212715*^9}, {
   3.694789332143281*^9, 3.6947893625847692`*^9}, {3.694797839893197*^9, 
   3.694797986266018*^9}, {3.694798020460239*^9, 3.694798110533209*^9}, {
   3.694802568905859*^9, 3.6948025759023943`*^9}, {3.694952267818956*^9, 
   3.694952387671607*^9}, {3.69495242737435*^9, 3.6949524933882837`*^9}, {
   3.694952716828657*^9, 3.694952875425663*^9}, {3.694952961359168*^9, 
   3.69495311078391*^9}, {3.694953177959278*^9, 3.694953206904295*^9}, 
   3.694953353572682*^9, {3.69495374669226*^9, 3.6949537480438547`*^9}, {
   3.694953989397366*^9, 3.69495432042314*^9}, {3.6949543709899073`*^9, 
   3.694954402358076*^9}, {3.6949544336109457`*^9, 3.694954489316423*^9}, {
   3.694954519838024*^9, 3.694954619638063*^9}, {3.694954676439558*^9, 
   3.6949549862473917`*^9}, {3.694955026267868*^9, 3.694955089067938*^9}, {
   3.694955263726976*^9, 3.6949552675503683`*^9}, {3.694955317972886*^9, 
   3.694955348540511*^9}, {3.694955389960005*^9, 3.694955546827735*^9}, {
   3.694955905292438*^9, 3.694956138265617*^9}, {3.6949561742960587`*^9, 
   3.694956339677886*^9}, {3.694956481622334*^9, 3.6949567563090343`*^9}, {
   3.694956795713811*^9, 3.694956926826346*^9}, {3.694956977884089*^9, 
   3.694957174068321*^9}, {3.694957349151458*^9, 3.694957381496011*^9}, {
   3.694981421904965*^9, 3.694981434264557*^9}, {3.694981502435019*^9, 
   3.694981509186743*^9}, {3.6949827486900253`*^9, 3.6949827590582523`*^9}, {
   3.694982827370994*^9, 3.694982832648131*^9}, {3.6949828780827103`*^9, 
   3.6949829576756973`*^9}, {3.694983018442698*^9, 3.6949830212590523`*^9}, {
   3.694983854991313*^9, 3.694983877417363*^9}, {3.694984043135763*^9, 
   3.694984044141467*^9}, {3.694984389561797*^9, 3.694984437264772*^9}, {
   3.6949847596682*^9, 3.694984911493659*^9}, {3.694984957002645*^9, 
   3.69498496866507*^9}, 3.6949864345263557`*^9, {3.694986541891062*^9, 
   3.694986589061227*^9}, {3.694986666712188*^9, 3.6949867112138777`*^9}, {
   3.694986883071473*^9, 3.6949869251433687`*^9}, {3.69498695674946*^9, 
   3.694986958598103*^9}, {3.6949870106651287`*^9, 3.694987051101959*^9}, {
   3.6949870813993473`*^9, 3.6949872322657433`*^9}, {3.6949872635489893`*^9, 
   3.694987266097929*^9}, {3.6949872991364193`*^9, 3.69498733320438*^9}, {
   3.694987380288198*^9, 3.694987415337792*^9}, {3.694987497384099*^9, 
   3.694987530625642*^9}, {3.695114132261832*^9, 3.695114247436159*^9}, {
   3.695114302337232*^9, 3.695114383601592*^9}, {3.695114460485672*^9, 
   3.6951144985194893`*^9}, {3.6951145715752687`*^9, 
   3.6951146459410954`*^9}, {3.695114914419959*^9, 3.695114915116577*^9}, {
   3.695115017420889*^9, 3.695115018785763*^9}, {3.695115293525174*^9, 
   3.695115293993541*^9}, {3.695115382705942*^9, 3.695115414742238*^9}, {
   3.6951333867619953`*^9, 3.6951334311980963`*^9}, 3.695133478801249*^9, {
   3.6951336230798492`*^9, 3.695133634115988*^9}, {3.695133703290842*^9, 
   3.695133718051303*^9}, {3.695133810130382*^9, 3.695133825810014*^9}, {
   3.6951338584057207`*^9, 3.695133884143395*^9}, {3.6951339403553867`*^9, 
   3.695133941458097*^9}, {3.69513423096178*^9, 3.695134231654674*^9}, {
   3.695134643114645*^9, 3.6951346434458303`*^9}, {3.695134831350284*^9, 
   3.695134853876893*^9}, {3.695134907097835*^9, 3.6951349119046392`*^9}, {
   3.695134952165106*^9, 3.695135007544053*^9}, {3.6951350460919933`*^9, 
   3.6951350502816553`*^9}, {3.695135114746902*^9, 3.6951351563867073`*^9}, {
   3.695135215504397*^9, 3.695135219797923*^9}, {3.695135299605201*^9, 
   3.695135367288703*^9}, {3.695135433880102*^9, 3.6951354481919127`*^9}, {
   3.6951355107577868`*^9, 3.695135511981627*^9}, {3.695135747320032*^9, 
   3.695135747951415*^9}, {3.695135862087146*^9, 3.695135866518602*^9}, {
   3.6951359073372097`*^9, 3.695135914691043*^9}, 3.695135951951088*^9, {
   3.695136054858759*^9, 3.695136072862482*^9}, {3.6951361151681013`*^9, 
   3.6951361690937433`*^9}, {3.695136219265359*^9, 3.695136290339938*^9}, {
   3.6951363264918213`*^9, 3.6951363811083107`*^9}, {3.695136443006104*^9, 
   3.69513645214433*^9}, {3.695136840968021*^9, 3.69513688583282*^9}, {
   3.695136920862331*^9, 3.695136935382739*^9}, {3.69513741693909*^9, 
   3.6951374185148478`*^9}, {3.69513745049783*^9, 3.6951375855740547`*^9}, {
   3.695147689239015*^9, 3.695147763713726*^9}, {3.695147799177663*^9, 
   3.695147802009328*^9}, {3.695147851779582*^9, 3.695147857152445*^9}, {
   3.695148018869647*^9, 3.695148035640382*^9}, {3.695148146201255*^9, 
   3.695148168299041*^9}, {3.695148219492519*^9, 3.695148245994914*^9}, {
   3.695148282655971*^9, 3.695148315423513*^9}, {3.6951486744618597`*^9, 
   3.6951486998679733`*^9}, {3.695149203882124*^9, 3.695149211250046*^9}, {
   3.6951498369151897`*^9, 3.695149878423071*^9}, {3.695150342610035*^9, 
   3.6951503428009367`*^9}, {3.695150377088316*^9, 3.6951504009073687`*^9}, {
   3.69515047343148*^9, 3.695150579048259*^9}, {3.6951506350294323`*^9, 
   3.695150673207161*^9}, {3.695150830569168*^9, 3.695150844865888*^9}, {
   3.6951508978807364`*^9, 3.695150937610647*^9}, {3.6951511652811604`*^9, 
   3.695151242626869*^9}, 3.6953966366060257`*^9, {3.695471085896965*^9, 
   3.695471088296464*^9}, {3.695471323503928*^9, 3.695471326260983*^9}, {
   3.695478289964625*^9, 3.695478296729035*^9}, {3.6954783633978148`*^9, 
   3.695478367493156*^9}, {3.6954789728915052`*^9, 3.695478975939292*^9}, {
   3.695479257495571*^9, 3.6954793569462357`*^9}, {3.695479702577841*^9, 
   3.695479718501836*^9}, {3.6954797784820967`*^9, 3.695479793568891*^9}, {
   3.695479895858411*^9, 3.6954799569808807`*^9}, {3.695480257573141*^9, 
   3.69548025787694*^9}, {3.695480307150652*^9, 3.6954803128834763`*^9}, {
   3.695480375532711*^9, 3.6954803764900312`*^9}, {3.695480470909746*^9, 
   3.69548054685798*^9}, {3.6954809610418653`*^9, 3.695480962353393*^9}, {
   3.695481024699416*^9, 3.695481122181431*^9}, {3.6954811678133383`*^9, 
   3.695481170875988*^9}, {3.695482098515862*^9, 3.695482098841221*^9}, {
   3.695482761714617*^9, 3.6954827974500837`*^9}, {3.695482828261257*^9, 
   3.695482994301621*^9}, {3.695483252241049*^9, 3.695483263394676*^9}, {
   3.695483305453971*^9, 3.695483351217512*^9}, {3.69548381894867*^9, 
   3.695483843485095*^9}, {3.6954838879243107`*^9, 3.6954839618541403`*^9}, {
   3.695484008126157*^9, 3.695484032181066*^9}, {3.695484084960411*^9, 
   3.6954841555511923`*^9}, {3.695484216252211*^9, 3.695484232715179*^9}, 
   3.695484330982102*^9, {3.69549427029095*^9, 3.69549428084568*^9}, {
   3.6955067386771097`*^9, 3.695506774703062*^9}, {3.6955073550906477`*^9, 
   3.695507400916543*^9}, 3.6955074406954536`*^9, {3.695507540803385*^9, 
   3.695507555456018*^9}, {3.6955474506884117`*^9, 3.695547480941148*^9}, {
   3.695576443923888*^9, 3.69557644727636*^9}, {3.695645090927307*^9, 
   3.6956450913175783`*^9}, {3.69564515910039*^9, 3.695645216198867*^9}, {
   3.6956506134173107`*^9, 3.695650679002578*^9}, {3.695650743880548*^9, 
   3.695650927951334*^9}, {3.6956511113398848`*^9, 3.695651147834529*^9}, {
   3.6956558012652903`*^9, 3.695655804838427*^9}, {3.695655837990233*^9, 
   3.695655856141406*^9}, {3.695749832400282*^9, 3.69574990325404*^9}, {
   3.695751327929574*^9, 3.695751341306918*^9}, {3.695822526149757*^9, 
   3.695822608560431*^9}, {3.695822676770955*^9, 3.695822756831212*^9}, {
   3.695822839305072*^9, 3.695822843290681*^9}, {3.6958229134022627`*^9, 
   3.695822947392231*^9}, {3.695823434736682*^9, 3.6958235239854507`*^9}, {
   3.6958239130641947`*^9, 3.695823929420844*^9}, {3.69582399024702*^9, 
   3.695824021515864*^9}, {3.6959402239573517`*^9, 3.6959402517950487`*^9}, {
   3.695998712427988*^9, 3.695998718774261*^9}, {3.695998871092621*^9, 
   3.695998875457654*^9}, {3.696095524224514*^9, 3.696095547456152*^9}, {
   3.696096227155026*^9, 3.696096363326599*^9}, {3.696097023880077*^9, 
   3.696097057033454*^9}, {3.696097395919751*^9, 3.696097406607299*^9}, {
   3.6960986339957943`*^9, 3.69609864399922*^9}, {3.696098678322283*^9, 
   3.696098680427602*^9}, {3.696098726798232*^9, 3.6960987302823677`*^9}, {
   3.6960995237169847`*^9, 3.6960995492284517`*^9}, {3.6960996499607077`*^9, 
   3.6961000202066793`*^9}, {3.6961006205376663`*^9, 
   3.6961006302804947`*^9}, {3.6961007617601233`*^9, 3.696100873946089*^9}, 
   3.696100954020831*^9, {3.696101073229007*^9, 3.696101077074892*^9}, {
   3.696183871239448*^9, 3.69618397871594*^9}, {3.69618402260739*^9, 
   3.696184112865005*^9}, {3.6961843667356253`*^9, 3.696184376015024*^9}, {
   3.696184407507903*^9, 3.6961844099682407`*^9}, 3.6961846612955647`*^9, 
   3.696184744616888*^9, {3.696184940625711*^9, 3.696185203716408*^9}, 
   3.696185263959114*^9, {3.6961853140212917`*^9, 3.6961853287239113`*^9}, {
   3.696185434195457*^9, 3.696185486382208*^9}, {3.696185613704336*^9, 
   3.6961856644521837`*^9}, {3.696185781511042*^9, 3.6961857869276876`*^9}, {
   3.696186275692547*^9, 3.696186329228956*^9}, {3.6961870934353447`*^9, 
   3.6961870978617887`*^9}, {3.6961871803924026`*^9, 3.696187190073091*^9}, {
   3.696248520552981*^9, 3.69624856152451*^9}, {3.696248889010866*^9, 
   3.696248948155212*^9}, {3.696249213933255*^9, 3.696249224075479*^9}, {
   3.696249342859386*^9, 3.696249371146927*^9}, {3.696249807923431*^9, 
   3.696249819395149*^9}, {3.696252247627393*^9, 3.696252248345614*^9}, {
   3.6962525067041473`*^9, 3.6962525094401197`*^9}, {3.696253551438973*^9, 
   3.696253562406337*^9}, {3.6962538889064503`*^9, 3.6962539375692053`*^9}, {
   3.696261576948176*^9, 3.696261778994083*^9}, {3.696262264588214*^9, 
   3.696262269002935*^9}, {3.696263031214798*^9, 3.696263031853006*^9}, 
   3.6962630894937162`*^9, {3.696263259648288*^9, 3.6962632613096333`*^9}, {
   3.696264438484576*^9, 3.696264441707724*^9}, {3.696267900167506*^9, 
   3.696267902332087*^9}, {3.696269109818372*^9, 3.696269122529334*^9}, {
   3.6962691919026213`*^9, 3.696269196429139*^9}, {3.696269238917575*^9, 
   3.696269244676887*^9}, {3.696273033507286*^9, 3.696273036202135*^9}, {
   3.69627327591143*^9, 3.6962732777125483`*^9}, {3.696344574129465*^9, 
   3.69634459669189*^9}, {3.696347357536491*^9, 3.696347490383354*^9}, {
   3.696347536872691*^9, 3.696347542633708*^9}, {3.696348181715405*^9, 
   3.6963481912275248`*^9}, {3.696350482097086*^9, 3.696350487595327*^9}, {
   3.69635061452734*^9, 3.696350617815154*^9}, {3.696350648960331*^9, 
   3.696350658471527*^9}, {3.696350721350988*^9, 3.6963507439442883`*^9}, {
   3.696350993561509*^9, 3.6963510709155407`*^9}, {3.696351127940382*^9, 
   3.696351265731701*^9}, {3.6963514556621637`*^9, 3.696351475518982*^9}, {
   3.696351606896888*^9, 3.696351643519766*^9}, {3.6963522515383472`*^9, 
   3.696352252223336*^9}, {3.6963537586795883`*^9, 3.696353762430258*^9}, {
   3.6963546575485773`*^9, 3.69635481075883*^9}, {3.696354885304042*^9, 
   3.696354888024048*^9}, {3.6963597707725773`*^9, 3.696359791699663*^9}, {
   3.696596749399186*^9, 3.696596759399189*^9}, {3.696599028938037*^9, 
   3.69659903680936*^9}, {3.696613869445801*^9, 3.69661387286445*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"movesAndPositions", ",", "path", ",", 
       RowBox[{"(*", 
        RowBox[{"paths", " ", "for", " ", "each", " ", "robot"}], "*)"}], 
       "path1", ",", "path2", ",", "\[IndentingNewLine]", 
       RowBox[{"r", " ", "=", " ", 
        RowBox[{"1", "/", "40"}]}], " ", 
       RowBox[{"(*", 
        RowBox[{
        "radius", " ", "of", " ", "start", " ", "and", " ", "end", " ", 
         "markers"}], "*)"}], ",", "\[IndentingNewLine]", 
       RowBox[{"thickness", " ", "=", " ", "0.002"}], ",", "rotateSolution", 
       ",", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"left", " ", "robot"}], "*)"}], " ", "ps1", ",", "pe1", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"right", " ", "robot"}], "*)"}], " ", "ps2", ",", "pe2", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"current", " ", "particle", " ", "position"}], "*)"}], " ", 
       "pm1", ",", "pm2", ",", "offset", ",", "\[IndentingNewLine]", 
       RowBox[{"c1", "=", "Blue"}], ",", 
       RowBox[{"c2", " ", "=", "Magenta"}], ",", "\[IndentingNewLine]", 
       "mvNum", ",", "\[IndentingNewLine]", "mvFrac"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "ensure", " ", "robots", " ", "do", " ", "not", " ", "overlap"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"EuclideanDistance", "[", 
           RowBox[{"s1", ",", "s2"}], "]"}], "<", "\[Epsilon]"}], ",", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
            "s1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "<", 
            RowBox[{
            "s2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
           ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
              "s1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              ">", 
              RowBox[{"2", "\[Epsilon]"}]}], ",", 
             RowBox[{
              RowBox[{
              "s1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              " ", "=", 
              RowBox[{
               RowBox[{
               "s2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               " ", "-", " ", "\[Epsilon]"}]}], ",", 
             RowBox[{
              RowBox[{
              "s2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              " ", "=", 
              RowBox[{
               RowBox[{
               "s1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               " ", "+", "\[Epsilon]"}]}]}], "]"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
              "s2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              ">", 
              RowBox[{"2", "\[Epsilon]"}]}], ",", 
             RowBox[{
              RowBox[{
              "s2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              "=", " ", 
              RowBox[{
               RowBox[{
               "s1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               "-", " ", "\[Epsilon]"}]}], ",", 
             RowBox[{
              RowBox[{
              "s1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              " ", "=", 
              RowBox[{
               RowBox[{
               "s2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               "+", " ", "\[Epsilon]"}]}]}], "]"}]}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"EuclideanDistance", "[", 
           RowBox[{"e1", ",", "e2"}], "]"}], "<", "\[Epsilon]"}], ",", " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
            "e1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "<", 
            RowBox[{
            "e2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
           ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
              "e1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              ">", 
              RowBox[{"2", "\[Epsilon]"}]}], ",", 
             RowBox[{
              RowBox[{
              "e1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              " ", "=", 
              RowBox[{
               RowBox[{
               "e2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               " ", "-", " ", "\[Epsilon]"}]}], ",", 
             RowBox[{
              RowBox[{
              "e2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              " ", "=", 
              RowBox[{
               RowBox[{
               "e1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               " ", "+", "\[Epsilon]"}]}]}], "]"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
              "e2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              ">", 
              RowBox[{"2", "\[Epsilon]"}]}], ",", 
             RowBox[{
              RowBox[{
              "e2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              "=", " ", 
              RowBox[{
               RowBox[{
               "e1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               "-", " ", "\[Epsilon]"}]}], ",", 
             RowBox[{
              RowBox[{
              "e1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
              " ", "=", 
              RowBox[{
               RowBox[{
               "e2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
               "+", " ", "\[Epsilon]"}]}]}], "]"}]}], "]"}]}], "]"}], ";"}], 
      "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"ps1", " ", ",", "pe1", ",", "ps2", ",", "pe2"}], "}"}], " ", 
       "=", " ", 
       RowBox[{"{", 
        RowBox[{"s1", ",", "e1", ",", "s2", ",", "e2"}], "}"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"path", ",", "path1", ",", "path2"}], "}"}], " ", "=", " ", 
       RowBox[{"optimal2robotPath", "[", 
        RowBox[{
        "ps1", ",", "ps2", ",", "pe1", ",", "pe2", ",", "\[Epsilon]"}], " ", 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"mvNum", " ", "=", " ", 
       RowBox[{"Floor", "[", 
        RowBox[{"progress", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Length", "[", "path", "]"}], "-", "1"}], ")"}]}], "]"}]}],
       " ", ";", "\[IndentingNewLine]", 
      RowBox[{"mvFrac", " ", "=", " ", 
       RowBox[{"FractionalPart", "[", 
        RowBox[{"progress", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Length", "[", "path", "]"}], "-", "1"}], ")"}]}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"pm2", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"mvFrac", ">", "0"}], ",", 
         RowBox[{
          RowBox[{"path2", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{"mvNum", "+", "1"}], ",", ";;"}], 
           "\[RightDoubleBracket]"}], "+", 
          RowBox[{"mvFrac", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"path2", "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{"mvNum", "+", "2"}], ",", ";;"}], 
              "\[RightDoubleBracket]"}], "-", 
             RowBox[{"path2", "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{"mvNum", "+", "1"}], ",", ";;"}], 
              "\[RightDoubleBracket]"}]}], ")"}]}]}], ",", 
         RowBox[{"path2", "\[LeftDoubleBracket]", 
          RowBox[{
           RowBox[{"mvNum", "+", "1"}], ",", ";;"}], 
          "\[RightDoubleBracket]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"pm1", " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"mvFrac", ">", "0"}], ",", 
         RowBox[{
          RowBox[{"path1", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{"mvNum", "+", "1"}], ",", ";;"}], 
           "\[RightDoubleBracket]"}], "+", 
          RowBox[{"mvFrac", "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"path1", "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{"mvNum", "+", "2"}], ",", ";;"}], 
              "\[RightDoubleBracket]"}], "-", 
             RowBox[{"path1", "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{"mvNum", "+", "1"}], ",", ";;"}], 
              "\[RightDoubleBracket]"}]}], ")"}]}]}], ",", 
         RowBox[{"path1", "\[LeftDoubleBracket]", 
          RowBox[{
           RowBox[{"mvNum", "+", "1"}], ",", ";;"}], 
          "\[RightDoubleBracket]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{"(*", "workspace", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Darker", "[", "Red", "]"}], ",", " ", 
            RowBox[{"Rectangle", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "0.025"}], 
               RowBox[{"{", 
                RowBox[{"1", ",", "1"}], "}"}]}], ",", 
              RowBox[{"1.025", 
               RowBox[{"{", 
                RowBox[{"1", ",", "1"}], "}"}]}]}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Lighter", "[", 
             RowBox[{"Gray", ",", "0.8"}], "]"}], ",", " ", 
            RowBox[{"Rectangle", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}]}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"White", ",", " ", 
            RowBox[{"Rectangle", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"\[Epsilon]", ",", " ", "\[Epsilon]"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"1", "-", "\[Epsilon]"}], ",", 
                RowBox[{"1", "-", "\[Epsilon]"}]}], "}"}]}], "]"}]}], "}"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Lighter", "[", 
             RowBox[{"Gray", ",", "0.8"}], "]"}], ",", " ", 
            RowBox[{"Disk", "[", 
             RowBox[{"ps2", ",", "\[Epsilon]"}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Lighter", "[", 
             RowBox[{"Gray", ",", "0.8"}], "]"}], ",", " ", 
            RowBox[{"Disk", "[", 
             RowBox[{"pe2", ",", "\[Epsilon]"}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"PointSize", "[", "0.01", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Arrowheads", "[", ".02", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Thickness", "[", "thickness", "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"starting", " ", "poses"}], ",", " ", 
            RowBox[{
            "dashed", " ", "line", " ", "from", " ", "start", " ", "to", " ", 
             "end"}]}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"c1", ",", 
            RowBox[{"{", " ", 
             RowBox[{
              RowBox[{"Opacity", "[", ".3", "]"}], ",", "Dashed", ",", 
              RowBox[{"Arrow", "[", 
               RowBox[{"{", 
                RowBox[{"ps1", ",", "pe1"}], "}"}], "]"}]}], "}"}], ",", 
            RowBox[{"Point", "@", "ps1"}], ",", 
            RowBox[{"EdgeForm", "[", 
             RowBox[{"Directive", "[", 
              RowBox[{"c1", ",", 
               RowBox[{"Thickness", "[", "thickness", "]"}]}], "]"}], "]"}], 
            ",", 
            RowBox[{"FaceForm", "[", "None", "]"}], ",", 
            RowBox[{"Rectangle", "[", 
             RowBox[{
              RowBox[{"ps1", "-", 
               RowBox[{
                RowBox[{"2", "/", "3"}], "r", " ", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "1"}], "}"}]}]}], ",", 
              RowBox[{"ps1", "+", 
               RowBox[{
                RowBox[{"2", "/", "3"}], "r", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "1"}], "}"}]}]}]}], "]"}], ",", 
            RowBox[{"Circle", "[", 
             RowBox[{"pe1", ",", "r"}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"c2", ",", 
            RowBox[{"{", " ", 
             RowBox[{
              RowBox[{"Opacity", "[", ".3", "]"}], ",", "Dashed", ",", 
              RowBox[{"Arrow", "[", 
               RowBox[{"{", 
                RowBox[{"ps2", ",", "pe2"}], "}"}], "]"}]}], "}"}], ",", 
            RowBox[{"Point", "@", "ps2"}], ",", 
            RowBox[{"EdgeForm", "[", 
             RowBox[{"Directive", "[", 
              RowBox[{"c2", ",", 
               RowBox[{"Thickness", "[", "thickness", "]"}]}], "]"}], "]"}], 
            ",", 
            RowBox[{"FaceForm", "[", "None", "]"}], ",", 
            RowBox[{"Rectangle", "[", 
             RowBox[{
              RowBox[{"ps2", "-", 
               RowBox[{
                RowBox[{"2", "/", "3"}], "r", " ", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "1"}], "}"}]}]}], ",", 
              RowBox[{"ps2", "+", 
               RowBox[{
                RowBox[{"2", "/", "3"}], "r", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "1"}], "}"}]}]}]}], "]"}], ",", " ", 
            RowBox[{"Circle", "[", 
             RowBox[{"pe2", ",", "r"}], "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
           "plot", " ", "path", " ", "of", " ", "particle", " ", "1"}], 
           "*)"}], "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"c1", ",", "\[IndentingNewLine]", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Arrow", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"path1", "\[LeftDoubleBracket]", 
                  RowBox[{"i", ",", ";;"}], "\[RightDoubleBracket]"}], ",", 
                 RowBox[{"path1", "\[LeftDoubleBracket]", 
                  RowBox[{
                   RowBox[{"i", "+", "1"}], ",", ";;"}], 
                  "\[RightDoubleBracket]"}]}], "}"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", "mvNum"}], "}"}]}], "]"}], ",", 
            "\[IndentingNewLine]", " ", 
            RowBox[{"Arrow", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"path1", "\[LeftDoubleBracket]", 
                RowBox[{
                 RowBox[{"mvNum", "+", "1"}], ",", ";;"}], 
                "\[RightDoubleBracket]"}], ",", "pm1"}], "}"}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                 "pm1", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}], "\[Equal]", "0"}], "||", 
                RowBox[{
                 RowBox[{
                 "pm1", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}], "\[Equal]", "0"}], "||", 
                RowBox[{
                 RowBox[{
                 "pm1", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}], "\[Equal]", "1"}], "||", 
                RowBox[{
                 RowBox[{
                 "pm1", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}], "\[Equal]", "1"}]}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Point", "@", "pm1"}], " ", ",", 
                 RowBox[{"PointSize", "[", "0.005", "]"}], ",", "White", ",", 
                 
                 RowBox[{"Point", "@", "pm1"}]}], " ", "}"}], ",", 
               RowBox[{"Point", "@", "pm1"}]}], "]"}], " ", "}"}]}], 
           "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Inset", "[", 
             RowBox[{
              RowBox[{"RegionPlot", "[", 
               RowBox[{
                RowBox[{"x", "<", 
                 RowBox[{"-", "3"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", 
                  RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"y", ",", 
                  RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
                RowBox[{"Epilog", "\[Rule]", 
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{"(*", 
                   RowBox[{"reachable", " ", "region"}], "*)"}], 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"LightBlue", ",", 
                    RowBox[{"EdgeForm", "[", "Blue", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Rectangle", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "pm2", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "-", "1", "-", 
                    RowBox[{
                    "pm1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{
                    RowBox[{
                    "pm2", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    "pm1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "0"}], "}"}]}], "]"}]}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{"Black", ",", " ", 
                    RowBox[{"Text", "[", 
                    RowBox[{"\"\<Reachable Region\>\"", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox[
                    RowBox[{"1", "+", 
                    RowBox[{
                    "pm2", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "+", "\[Epsilon]", "-", "1"}], 
                    "2"], ",", 
                    FractionBox[
                    RowBox[{
                    RowBox[{
                    "pm2", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    "pm1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}], "2"]}], "}"}]}], "]"}]}], 
                    "*)"}], "\[IndentingNewLine]", "}"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"{", 
                    RowBox[{"LightGreen", ",", 
                    RowBox[{"EdgeForm", "[", "Blue", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.5", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Rectangle", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", "1"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "pm2", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    "pm1", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ",", 
                    RowBox[{"1", "+", " ", 
                    RowBox[{
                    "pm2", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "-", 
                    RowBox[{
                    "pm1", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], "}"}]}], "]"}]}], 
                    "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
                   
                   RowBox[{"(*", 
                    RowBox[{"current", " ", "deltas"}], "*)"}], 
                   "\[IndentingNewLine]", "Red", ",", 
                   RowBox[{"Rectangle", "[", 
                    RowBox[{
                    RowBox[{"pm2", "-", "pm1", "-", 
                    RowBox[{
                    RowBox[{"4", "/", "3"}], "r", " ", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}]}], ",", 
                    RowBox[{"pm2", "-", "pm1", "+", 
                    RowBox[{
                    RowBox[{"4", "/", "3"}], "r", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1"}], "}"}]}]}]}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"(*", 
                    RowBox[{"goal", " ", "deltas"}], "*)"}], 
                   "\[IndentingNewLine]", "Green", ",", "\[IndentingNewLine]", 
                   RowBox[{"Disk", "[", 
                    RowBox[{
                    RowBox[{"pe2", "-", "pe1"}], ",", 
                    RowBox[{"2", "r"}]}], "]"}]}], "\[IndentingNewLine]", 
                  "\[IndentingNewLine]", "}"}]}], ",", 
                RowBox[{"FrameLabel", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<\[CapitalDelta]x\>\"", ",", 
                   "\"\<\[CapitalDelta] y\>\""}], "}"}]}], ",", 
                RowBox[{"ImageSize", "\[Rule]", "250"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"1.5", ",", ".5"}], "}"}]}], "]"}], ","}], 
           "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
           "plot", " ", "path", " ", "of", " ", "particle", " ", "2"}], 
           "*)"}], "\[IndentingNewLine]", " ", 
          RowBox[{"{", 
           RowBox[{"c2", ",", "\[IndentingNewLine]", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Arrow", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"path2", "\[LeftDoubleBracket]", 
                  RowBox[{"i", ",", ";;"}], "\[RightDoubleBracket]"}], ",", 
                 RowBox[{"path2", "\[LeftDoubleBracket]", 
                  RowBox[{
                   RowBox[{"i", "+", "1"}], ",", ";;"}], 
                  "\[RightDoubleBracket]"}]}], "}"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", "mvNum"}], "}"}]}], "]"}], ",", 
            "\[IndentingNewLine]", " ", 
            RowBox[{"Arrow", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"path2", "\[LeftDoubleBracket]", 
                RowBox[{
                 RowBox[{"mvNum", "+", "1"}], ",", ";;"}], 
                "\[RightDoubleBracket]"}], ",", "pm2"}], "}"}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                 "pm2", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}], "\[Equal]", "0"}], "||", 
                RowBox[{
                 RowBox[{
                 "pm2", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}], "\[Equal]", "0"}], "||", 
                RowBox[{
                 RowBox[{
                 "pm2", "\[LeftDoubleBracket]", "1", 
                  "\[RightDoubleBracket]"}], "\[Equal]", "1"}], "||", 
                RowBox[{
                 RowBox[{
                 "pm2", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}], "\[Equal]", "1"}]}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Point", "@", "pm2"}], " ", ",", 
                 RowBox[{"PointSize", "[", "0.005", "]"}], ",", "White", ",", 
                 
                 RowBox[{"Point", "@", "pm2"}]}], " ", "}"}], ",", 
               RowBox[{"Point", "@", "pm2"}]}], "]"}], "}"}]}], 
           "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"mvNum", "+", "1"}], "\[Equal]", " ", 
                RowBox[{"Length", "[", "path", "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"mvNum", "=", " ", 
                  RowBox[{
                   RowBox[{"Length", "[", "path", "]"}], "-", "2"}]}], ",", 
                 RowBox[{"mvFrac", "=", "1"}]}], "}"}]}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"Darker", "[", "Red", "]"}]}], ",", " ", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"StringForm", "[", 
                 RowBox[{"\"\<Move `` of ``\>\"", ",", " ", 
                  RowBox[{"mvNum", "+", "1"}], ",", 
                  RowBox[{
                   RowBox[{"Length", "[", "path", "]"}], "-", "1"}]}], "]"}], 
                ",", 
                RowBox[{"FontSize", "\[Rule]", "18"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"1.55", ",", ".9"}], "}"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Text", "[", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"StringForm", "[", 
                 RowBox[{"\"\<Total Distance `` \>\"", ",", " ", 
                  RowBox[{"Round", "[", 
                   RowBox[{
                    RowBox[{"N", "[", 
                    RowBox[{"Total", "[", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"EuclideanDistance", "[", 
                    RowBox[{
                    RowBox[{
                    "path", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "2", ",", " ", 
                    RowBox[{"Length", "[", "path", "]"}]}], "}"}]}], "]"}], 
                    " ", "]"}], " ", "]"}], ",", ".01"}], "]"}]}], "]"}], ",", 
                RowBox[{"FontSize", "\[Rule]", "18"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"1.55", ",", ".8"}], "}"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"offset", " ", "=", " ", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1.55", ",", ".5"}], "}"}], "-", 
               RowBox[{
                FractionBox["1", "2"], 
                RowBox[{"path", "\[LeftDoubleBracket]", 
                 RowBox[{
                  RowBox[{"mvNum", "+", "2"}], ",", ";;"}], 
                 "\[RightDoubleBracket]"}]}]}]}], ";", "\[IndentingNewLine]", 
             
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Opacity", "[", "0.3", "]"}], ",", " ", 
               RowBox[{"Arrow", "[", 
                RowBox[{"{", 
                 RowBox[{"offset", ",", 
                  RowBox[{"offset", "+", 
                   RowBox[{"path", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"mvNum", "+", "2"}], ",", ";;"}], 
                    "\[RightDoubleBracket]"}]}]}], "}"}], "]"}]}], "}"}]}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"Point", "[", 
             RowBox[{"offset", "+", 
              RowBox[{"mvFrac", 
               RowBox[{"(", 
                RowBox[{"path", "\[LeftDoubleBracket]", 
                 RowBox[{
                  RowBox[{"mvNum", "+", "2"}], ",", ";;"}], 
                 "\[RightDoubleBracket]"}], ")"}]}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Arrow", "[", 
             RowBox[{"{", 
              RowBox[{"offset", ",", "  ", 
               RowBox[{"offset", "+", 
                RowBox[{"mvFrac", 
                 RowBox[{"(", 
                  RowBox[{"path", "\[LeftDoubleBracket]", 
                   RowBox[{
                    RowBox[{"mvNum", "+", "2"}], ",", ";;"}], 
                   "\[RightDoubleBracket]"}], ")"}]}]}]}], " ", "}"}], 
             "]"}]}], "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
         "}"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "800"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "0.05"}], ",", "2.05"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", ".05"}], ",", "1.05"}], "}"}]}], "}"}]}]}], 
       "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Control", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"progress", ",", "1", ",", "\"\<progress\>\""}], "}"}], ",",
          "0", ",", "1", ",", 
         RowBox[{"1", "/", "420"}], ",", "Slider", ",", 
         RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}], ",",
       "\[IndentingNewLine]", 
      RowBox[{"Control", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Epsilon]", ",", 
           RowBox[{"1", "/", "1000"}], ",", "\"\<\[Epsilon]\>\""}], "}"}], 
         ",", 
         RowBox[{"1", "/", "1000"}], ",", 
         RowBox[{"1", "/", "10"}], ",", 
         RowBox[{"1", "/", "1000"}], ",", "Slider", ",", 
         RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}]}], 
     "}"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s1", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"3", "/", "4"}], ",", 
         RowBox[{"1", "/", "5"}]}], "}"}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], "+", " ", "\[Epsilon]"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], "-", " ", "\[Epsilon]"}], ",", 
     "Locator", ",", 
     RowBox[{"Appearance", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s2", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "/", "4"}], ",", 
         RowBox[{"4", "/", "5"}]}], "}"}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], "+", " ", "\[Epsilon]"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], "-", " ", "\[Epsilon]"}], ",", 
     "Locator", ",", 
     RowBox[{"Appearance", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"e1", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"2", "/", "3"}], ",", 
         RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], "+", " ", "\[Epsilon]"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], "-", " ", "\[Epsilon]"}], ",", 
     "Locator", ",", 
     RowBox[{"Appearance", "\[Rule]", "None"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"e2", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "/", "2"}], ",", 
         RowBox[{"2", "/", "3"}]}], "}"}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], "+", " ", "\[Epsilon]"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "1"}], "}"}], "-", " ", "\[Epsilon]"}], ",", 
     "Locator", ",", 
     RowBox[{"Appearance", "\[Rule]", "None"}]}], "}"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"s1", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"3", "/", "4"}], ",", 
           RowBox[{"1", "/", "5"}]}], "}"}]}], "}"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], "+", " ", "\[Epsilon]"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], "-", " ", "\[Epsilon]"}], ",", 
       "Locator", ",", 
       RowBox[{"Appearance", "\[Rule]", "None"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"s2", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "/", "4"}], ",", 
           RowBox[{"1", "/", "5"}]}], "}"}]}], "}"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], "+", " ", "\[Epsilon]"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], "-", " ", "\[Epsilon]"}], ",", 
       "Locator", ",", 
       RowBox[{"Appearance", "\[Rule]", "None"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"e1", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"3", "/", "4"}], ",", 
           RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], "+", " ", "\[Epsilon]"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], "-", " ", "\[Epsilon]"}], ",", 
       "Locator", ",", 
       RowBox[{"Appearance", "\[Rule]", "None"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"e2", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "/", "4"}], ",", 
           RowBox[{"1", "/", "2"}]}], "}"}]}], "}"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], "+", " ", "\[Epsilon]"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], "-", " ", "\[Epsilon]"}], ",", 
       "Locator", ",", 
       RowBox[{"Appearance", "\[Rule]", "None"}]}], "}"}]}], "*)"}], 
   "\[IndentingNewLine]", ",", " ", 
   RowBox[{"SaveDefinitions", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`e1$$ = {
     Rational[2, 3], 
     Rational[1, 2]}, $CellContext`e2$$ = {
     Rational[1, 2], 
     Rational[2, 3]}, $CellContext`progress$$ = 1, $CellContext`s1$$ = {
     Rational[1, 4], 
     Rational[4, 5]}, $CellContext`s2$$ = {
     Rational[3, 4], 
     Rational[1, 5]}, $CellContext`\[Epsilon]$$ = 0.001, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`progress$$], 1, "progress"}, 0, 1, 
      Rational[1, 420]}, {{
       Hold[$CellContext`\[Epsilon]$$], 
       Rational[1, 1000], "\[Epsilon]"}, 
      Rational[1, 1000], 
      Rational[1, 10], 
      Rational[1, 1000]}, {
      Hold[
       Row[{
         Manipulate`Place[1], 
         Manipulate`Place[2]}]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`s1$$], {
        Rational[3, 4], 
        Rational[1, 5]}}, 
      Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
      Dynamic[{1, 1} - $CellContext`\[Epsilon]$$]}, {{
       Hold[$CellContext`s2$$], {
        Rational[1, 4], 
        Rational[4, 5]}}, 
      Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
      Dynamic[{1, 1} - $CellContext`\[Epsilon]$$]}, {{
       Hold[$CellContext`e1$$], {
        Rational[2, 3], 
        Rational[1, 2]}}, 
      Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
      Dynamic[{1, 1} - $CellContext`\[Epsilon]$$]}, {{
       Hold[$CellContext`e2$$], {
        Rational[1, 2], 
        Rational[2, 3]}}, 
      Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
      Dynamic[{1, 1} - $CellContext`\[Epsilon]$$]}}, Typeset`size$$ = {
    800., {207., 212.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = False, $CellContext`progress$1046738$$ = 
    0, $CellContext`\[Epsilon]$1046739$$ = 0, $CellContext`s1$1046740$$ = 
    0, $CellContext`s2$1046741$$ = 0, $CellContext`e1$1046742$$ = 
    0, $CellContext`e2$1046743$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     2, StandardForm, "Variables" :> {$CellContext`e1$$ = {
          Rational[2, 3], 
          Rational[1, 2]}, $CellContext`e2$$ = {
          Rational[1, 2], 
          Rational[2, 3]}, $CellContext`progress$$ = 1, $CellContext`s1$$ = {
          Rational[3, 4], 
          Rational[1, 5]}, $CellContext`s2$$ = {
          Rational[1, 4], 
          Rational[4, 5]}, $CellContext`\[Epsilon]$$ = Rational[1, 1000]}, 
      "ControllerVariables" :> {
        Hold[$CellContext`progress$$, $CellContext`progress$1046738$$, 0], 
        Hold[$CellContext`\[Epsilon]$$, $CellContext`\[Epsilon]$1046739$$, 0], 
        Hold[$CellContext`s1$$, $CellContext`s1$1046740$$, 0], 
        Hold[$CellContext`s2$$, $CellContext`s2$1046741$$, 0], 
        Hold[$CellContext`e1$$, $CellContext`e1$1046742$$, 0], 
        Hold[$CellContext`e2$$, $CellContext`e2$1046743$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`movesAndPositions$, $CellContext`path$, \
$CellContext`path1$, $CellContext`path2$, $CellContext`r$ = 
         1/40, $CellContext`thickness$ = 
         0.002, $CellContext`rotateSolution$, $CellContext`ps1$, \
$CellContext`pe1$, $CellContext`ps2$, $CellContext`pe2$, $CellContext`pm1$, \
$CellContext`pm2$, $CellContext`offset$, $CellContext`c1$ = 
         Blue, $CellContext`c2$ = 
         Magenta, $CellContext`mvNum$, $CellContext`mvFrac$}, \
{$CellContext`ps1$, $CellContext`pe1$, $CellContext`ps2$, $CellContext`pe2$} = \
{$CellContext`s1$$, $CellContext`e1$$, $CellContext`s2$$, $CellContext`e2$$}; \
{$CellContext`path$, $CellContext`path1$, $CellContext`path2$} = \
$CellContext`optimal2robotPath[$CellContext`ps1$, $CellContext`ps2$, \
$CellContext`pe1$, $CellContext`pe2$, $CellContext`\[Epsilon]$$]; \
$CellContext`mvNum$ = 
         Floor[$CellContext`progress$$ (Length[$CellContext`path$] - 
            1)]; $CellContext`mvFrac$ = 
         FractionalPart[$CellContext`progress$$ (Length[$CellContext`path$] - 
            1)]; $CellContext`pm2$ = 
         If[$CellContext`mvFrac$ > 0, 
           Part[$CellContext`path2$, $CellContext`mvNum$ + 1, 
             Span[1, All]] + $CellContext`mvFrac$ (
             Part[$CellContext`path2$, $CellContext`mvNum$ + 2, 
               Span[1, All]] - 
             Part[$CellContext`path2$, $CellContext`mvNum$ + 1, 
              Span[1, All]]), 
           Part[$CellContext`path2$, $CellContext`mvNum$ + 1, 
            Span[1, All]]]; $CellContext`pm1$ = 
         If[$CellContext`mvFrac$ > 0, 
           Part[$CellContext`path1$, $CellContext`mvNum$ + 1, 
             Span[1, All]] + $CellContext`mvFrac$ (
             Part[$CellContext`path1$, $CellContext`mvNum$ + 2, 
               Span[1, All]] - 
             Part[$CellContext`path1$, $CellContext`mvNum$ + 1, 
              Span[1, All]]), 
           Part[$CellContext`path1$, $CellContext`mvNum$ + 1, 
            Span[1, All]]]; Graphics[{{
            Darker[Red], 
            Rectangle[(-0.025) {1, 1}, 1.025 {1, 1}]}, {
            Lighter[Gray, 0.8], 
            Rectangle[{0, 0}, {1, 1}]}, {White, 
            
            Rectangle[{$CellContext`\[Epsilon]$$, $CellContext`\[Epsilon]$$}, \
{1 - $CellContext`\[Epsilon]$$, 1 - $CellContext`\[Epsilon]$$}]}, {
            Lighter[Gray, 0.8], 
            Disk[$CellContext`ps2$, $CellContext`\[Epsilon]$$]}, {
            Lighter[Gray, 0.8], 
            Disk[$CellContext`pe2$, $CellContext`\[Epsilon]$$]}, 
           PointSize[0.01], 
           Arrowheads[0.02], 
           Thickness[$CellContext`thickness$], {$CellContext`c1$, {
             Opacity[0.3], Dashed, 
             Arrow[{$CellContext`ps1$, $CellContext`pe1$}]}, 
            Point[$CellContext`ps1$], 
            EdgeForm[
             Directive[$CellContext`c1$, 
              Thickness[$CellContext`thickness$]]], 
            FaceForm[None], 
            
            Rectangle[$CellContext`ps1$ - (2/3) $CellContext`r$ {1, 
              1}, $CellContext`ps1$ + (2/3) $CellContext`r$ {1, 1}], 
            Circle[$CellContext`pe1$, $CellContext`r$]}, {$CellContext`c2$, {
             Opacity[0.3], Dashed, 
             Arrow[{$CellContext`ps2$, $CellContext`pe2$}]}, 
            Point[$CellContext`ps2$], 
            EdgeForm[
             Directive[$CellContext`c2$, 
              Thickness[$CellContext`thickness$]]], 
            FaceForm[None], 
            
            Rectangle[$CellContext`ps2$ - (2/3) $CellContext`r$ {1, 
              1}, $CellContext`ps2$ + (2/3) $CellContext`r$ {1, 1}], 
            Circle[$CellContext`pe2$, $CellContext`r$]}, {$CellContext`c1$, 
            Table[
             Arrow[{
               Part[$CellContext`path1$, $CellContext`i, 
                Span[1, All]], 
               Part[$CellContext`path1$, $CellContext`i + 1, 
                Span[1, All]]}], {$CellContext`i, 1, $CellContext`mvNum$}], 
            Arrow[{
              Part[$CellContext`path1$, $CellContext`mvNum$ + 1, 
               Span[1, All]], $CellContext`pm1$}], {
             If[
              Or[
              Part[$CellContext`pm1$, 1] == 0, Part[$CellContext`pm1$, 2] == 
               0, Part[$CellContext`pm1$, 1] == 1, Part[$CellContext`pm1$, 2] == 
               1], {
               Point[$CellContext`pm1$], 
               PointSize[0.005], White, 
               Point[$CellContext`pm1$]}, 
              Point[$CellContext`pm1$]]}}, {$CellContext`c2$, 
            Table[
             Arrow[{
               Part[$CellContext`path2$, $CellContext`i, 
                Span[1, All]], 
               Part[$CellContext`path2$, $CellContext`i + 1, 
                Span[1, All]]}], {$CellContext`i, 1, $CellContext`mvNum$}], 
            Arrow[{
              Part[$CellContext`path2$, $CellContext`mvNum$ + 1, 
               Span[1, All]], $CellContext`pm2$}], {
             If[
              Or[
              Part[$CellContext`pm2$, 1] == 0, Part[$CellContext`pm2$, 2] == 
               0, Part[$CellContext`pm2$, 1] == 1, Part[$CellContext`pm2$, 2] == 
               1], {
               Point[$CellContext`pm2$], 
               PointSize[0.005], White, 
               Point[$CellContext`pm2$]}, 
              Point[$CellContext`pm2$]]}}, {
           If[$CellContext`mvNum$ + 1 == 
              Length[$CellContext`path$], {$CellContext`mvNum$ = 
               Length[$CellContext`path$] - 2, $CellContext`mvFrac$ = 1}]; 
            Darker[Red], 
            Text[
             Style[
              StringForm[
              "Move `` of ``", $CellContext`mvNum$ + 1, 
               Length[$CellContext`path$] - 1], FontSize -> 18], {1.55, 0.9}], 
            Text[
             Style[
              StringForm["Total Distance `` ", 
               Round[
                N[
                 Total[
                  Table[
                   EuclideanDistance[
                    Part[$CellContext`path$, $CellContext`i], {0, 
                    0}], {$CellContext`i, 2, 
                    Length[$CellContext`path$]}]]], 0.01]], FontSize -> 18], {
             1.55, 0.8}], $CellContext`offset$ = {1.55, 0.5} - (1/2) 
              Part[$CellContext`path$, $CellContext`mvNum$ + 2, 
                Span[1, All]]; {
              Opacity[0.3], 
              
              Arrow[{$CellContext`offset$, $CellContext`offset$ + 
                Part[$CellContext`path$, $CellContext`mvNum$ + 2, 
                  Span[1, All]]}]}, 
            
            Point[$CellContext`offset$ + $CellContext`mvFrac$ 
              Part[$CellContext`path$, $CellContext`mvNum$ + 2, 
                Span[1, All]]], 
            
            Arrow[{$CellContext`offset$, $CellContext`offset$ + \
$CellContext`mvFrac$ Part[$CellContext`path$, $CellContext`mvNum$ + 2, 
                 Span[1, All]]}]}}, ImageSize -> 800, 
          PlotRange -> {{-0.05, 2.05}, {-0.05, 1.05}}]], 
      "Specifications" :> {{{$CellContext`progress$$, 1, "progress"}, 0, 1, 
         Rational[1, 420], ControlType -> Slider, Appearance -> "Labeled", 
         ControlPlacement -> 1}, {{$CellContext`\[Epsilon]$$, 
          Rational[1, 1000], "\[Epsilon]"}, 
         Rational[1, 1000], 
         Rational[1, 10], 
         Rational[1, 1000], ControlType -> Slider, Appearance -> "Labeled", 
         ControlPlacement -> 2}, 
        Row[{
          Manipulate`Place[1], 
          Manipulate`Place[2]}], {{$CellContext`s1$$, {
           Rational[3, 4], 
           Rational[1, 5]}}, 
         Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
         Dynamic[{1, 1} - $CellContext`\[Epsilon]$$], ControlType -> Locator, 
         Appearance -> None}, {{$CellContext`s2$$, {
           Rational[1, 4], 
           Rational[4, 5]}}, 
         Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
         Dynamic[{1, 1} - $CellContext`\[Epsilon]$$], ControlType -> Locator, 
         Appearance -> None}, {{$CellContext`e1$$, {
           Rational[2, 3], 
           Rational[1, 2]}}, 
         Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
         Dynamic[{1, 1} - $CellContext`\[Epsilon]$$], ControlType -> Locator, 
         Appearance -> None}, {{$CellContext`e2$$, {
           Rational[1, 2], 
           Rational[2, 3]}}, 
         Dynamic[{0, 0} + $CellContext`\[Epsilon]$$], 
         Dynamic[{1, 1} - $CellContext`\[Epsilon]$$], ControlType -> Locator, 
         Appearance -> None}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{851., {255., 260.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>({$CellContext`s1$$ = {1/4, 4/5}, $CellContext`s2$$ = {
        3/4, 1/5}, $CellContext`optimal2robotPath[
         Pattern[$CellContext`s1, 
          Blank[]], 
         Pattern[$CellContext`s2, 
          Blank[]], 
         Pattern[$CellContext`g1, 
          Blank[]], 
         Pattern[$CellContext`g2, 
          Blank[]], 
         Pattern[$CellContext`\[Epsilon], 
          Blank[]]] := 
       Module[{$CellContext`optimalPathList, $CellContext`bestMoveSeq, \
$CellContext`dist1, $CellContext`iter = 
          0}, $CellContext`optimalPathList = {{
            Infinity, $CellContext`s1, $CellContext`s2, {{0, 
             0}}, {$CellContext`s1}, {$CellContext`s2}, 
             False}}; $CellContext`dist1 = \
$CellContext`distanceMoved[$CellContext`admissibleHeuristic[$CellContext`s1, \
$CellContext`s2, $CellContext`g1, $CellContext`g2] + 0]; 
         While[Part[$CellContext`optimalPathList, 1, 7] != True, 
           
           Module[{$CellContext`pathToExplore, $CellContext`r1, \
$CellContext`r2, $CellContext`wallMoves, $CellContext`moves, \
$CellContext`pm1, $CellContext`pm2, $CellContext`isPathComplete}, \
$CellContext`pathToExplore = 
             First[$CellContext`optimalPathList]; \
$CellContext`optimalPathList = 
             Delete[$CellContext`optimalPathList, 1]; $CellContext`r1 = 
             Part[$CellContext`pathToExplore, 2]; $CellContext`r2 = 
             Part[$CellContext`pathToExplore, 3]; $CellContext`moves = 
             Part[$CellContext`pathToExplore, 4]; $CellContext`pm1 = 
             Part[$CellContext`pathToExplore, 5]; $CellContext`pm2 = 
             Part[$CellContext`pathToExplore, 6]; $CellContext`isPathComplete = 
             Part[$CellContext`pathToExplore, 7]; AddTo[$CellContext`iter, 1]; 
            If[$CellContext`isPathComplete != True, 
              Table[$CellContext`wallMoves = \
$CellContext`wallFrictionMoveDir[$CellContext`dir, $CellContext`r1, \
$CellContext`r2, $CellContext`g1, $CellContext`g2, $CellContext`moves, \
$CellContext`pm1, $CellContext`pm2, $CellContext`\[Epsilon]]; \
$CellContext`optimalPathList = 
                 AppendTo[$CellContext`optimalPathList, \
$CellContext`wallMoves]; 
                Null, {$CellContext`dir, {
                 "u", "d", "l", "r"}}]; $CellContext`optimalPathList = 
               SortBy[$CellContext`optimalPathList, First]; Null]]]; Return[{
            Part[
             Part[$CellContext`optimalPathList, 1], 4], 
            Part[
             Part[$CellContext`optimalPathList, 1], 5], 
            Part[
             Part[$CellContext`optimalPathList, 1], 6]}]], $CellContext`g1 = {
        1/2, 2/3}, $CellContext`\[Epsilon]$$ = 
       0.001, $CellContext`distanceMoved[
         Pattern[$CellContext`moves, 
          Blank[]]] := Total[
         Table[
          
          Norm[$CellContext`m], {$CellContext`m, $CellContext`moves}]], \
$CellContext`admissibleHeuristic[
         Pattern[$CellContext`s1, 
          Blank[]], 
         Pattern[$CellContext`s2, 
          Blank[]], 
         Pattern[$CellContext`g1, 
          Blank[]], 
         Pattern[$CellContext`g2, 
          Blank[]]] := Max[
         EuclideanDistance[$CellContext`g1, $CellContext`s1], 
         EuclideanDistance[$CellContext`g2, $CellContext`s2]], \
$CellContext`wallFrictionMoveDir[
         Pattern[$CellContext`dir, 
          Blank[]], 
         Pattern[$CellContext`s1, 
          Blank[]], 
         Pattern[$CellContext`s2, 
          Blank[]], 
         Pattern[$CellContext`g1, 
          Blank[]], 
         Pattern[$CellContext`g2, 
          Blank[]], 
         Pattern[$CellContext`moves, 
          Blank[]], 
         Pattern[$CellContext`pm1, 
          Blank[]], 
         Pattern[$CellContext`pm2, 
          Blank[]], 
         Pattern[$CellContext`\[Epsilon], 
          Blank[]]] := 
       Module[{$CellContext`\[CapitalDelta]ex, \
$CellContext`\[CapitalDelta]ey, $CellContext`path = $CellContext`moves, \
$CellContext`path1 = $CellContext`pm1, $CellContext`path2 = \
$CellContext`pm2}, {$CellContext`\[CapitalDelta]ex, $CellContext`\
\[CapitalDelta]ey} = ($CellContext`g2 - $CellContext`g1) - ($CellContext`s2 - \
$CellContext`s1); If[
           And[-0.0001 <= $CellContext`\[CapitalDelta]ex <= 0.0001, 
            Inequality[-0.0001, LessEqual, $CellContext`\[CapitalDelta]ey, 
             Less, 0.0001]], 
           AppendTo[$CellContext`path, {
             Part[$CellContext`g2, 1] - Part[$CellContext`s2, 1], 
              Part[$CellContext`g2, 2] - Part[$CellContext`s2, 2]}]; 
           AppendTo[$CellContext`path1, $CellContext`g1]; 
           AppendTo[$CellContext`path2, $CellContext`g2]; Return[{
              $CellContext`distanceMoved[$CellContext`path], $CellContext`g1, \
$CellContext`g2, $CellContext`path, $CellContext`path1, $CellContext`path2, 
              True}]]; 
         Module[{$CellContext`r1, $CellContext`r2, \
$CellContext`newPathEntries, $CellContext`s1t, $CellContext`s2t, \
$CellContext`g1t, $CellContext`g2t, $CellContext`movest, $CellContext`pm1st, \
$CellContext`pm2st}, 
           If[$CellContext`dir == 
             "u", $CellContext`newPathEntries = \
$CellContext`wallFrictionMoveUp[$CellContext`s1, $CellContext`s2, \
$CellContext`g1, $CellContext`g2, $CellContext`moves, $CellContext`pm1, \
$CellContext`pm2, $CellContext`\[Epsilon]]; Null]; 
           If[$CellContext`dir == 
             "d", {$CellContext`s1t, $CellContext`s2t, $CellContext`g1t, \
$CellContext`g2t} = 
              Map[$CellContext`rotate180, {$CellContext`s1, $CellContext`s2, \
$CellContext`g1, $CellContext`g2}]; $CellContext`movest = 
              Map[$CellContext`rotate180inplace, $CellContext`moves]; \
$CellContext`pm1st = 
              Map[$CellContext`rotate180, $CellContext`pm1]; \
$CellContext`pm2st = 
              Map[$CellContext`rotate180, $CellContext`pm2]; \
$CellContext`newPathEntries = \
$CellContext`wallFrictionMoveUp[$CellContext`s1t, $CellContext`s2t, \
$CellContext`g1t, $CellContext`g2t, $CellContext`movest, $CellContext`pm1st, \
$CellContext`pm2st, $CellContext`\[Epsilon]]; 
             Part[$CellContext`newPathEntries, 2] = $CellContext`rotate180[
                Part[$CellContext`newPathEntries, 2]]; 
             Part[$CellContext`newPathEntries, 3] = $CellContext`rotate180[
                Part[$CellContext`newPathEntries, 3]]; 
             Part[$CellContext`newPathEntries, 4] = 
              Map[$CellContext`rotate180inplace, 
                Part[$CellContext`newPathEntries, 4]]; 
             Part[$CellContext`newPathEntries, 5] = 
              Map[$CellContext`rotate180, 
                Part[$CellContext`newPathEntries, 5]]; 
             Part[$CellContext`newPathEntries, 6] = 
              Map[$CellContext`rotate180, 
                Part[$CellContext`newPathEntries, 6]]; Null]; 
           If[$CellContext`dir == 
             "r", {$CellContext`s1t, $CellContext`s2t, $CellContext`g1t, \
$CellContext`g2t} = 
              Map[$CellContext`rotate90, {$CellContext`s1, $CellContext`s2, \
$CellContext`g1, $CellContext`g2}]; $CellContext`movest = 
              Map[$CellContext`rotate90inplace, $CellContext`moves]; \
$CellContext`pm1st = 
              Map[$CellContext`rotate90, $CellContext`pm1]; \
$CellContext`pm2st = 
              Map[$CellContext`rotate90, $CellContext`pm2]; \
$CellContext`newPathEntries = \
$CellContext`wallFrictionMoveUp[$CellContext`s1t, $CellContext`s2t, \
$CellContext`g1t, $CellContext`g2t, $CellContext`movest, $CellContext`pm1st, \
$CellContext`pm2st, $CellContext`\[Epsilon]]; 
             Part[$CellContext`newPathEntries, 2] = $CellContext`rotate270[
                Part[$CellContext`newPathEntries, 2]]; 
             Part[$CellContext`newPathEntries, 3] = $CellContext`rotate270[
                Part[$CellContext`newPathEntries, 3]]; 
             Part[$CellContext`newPathEntries, 4] = 
              Map[$CellContext`rotate270inplace, 
                Part[$CellContext`newPathEntries, 4]]; 
             Part[$CellContext`newPathEntries, 5] = 
              Map[$CellContext`rotate270, 
                Part[$CellContext`newPathEntries, 5]]; 
             Part[$CellContext`newPathEntries, 6] = 
              Map[$CellContext`rotate270, 
                Part[$CellContext`newPathEntries, 6]]]; 
           If[$CellContext`dir == 
             "l", {$CellContext`s1t, $CellContext`s2t, $CellContext`g1t, \
$CellContext`g2t} = 
              Map[$CellContext`rotate270, {$CellContext`s1, $CellContext`s2, \
$CellContext`g1, $CellContext`g2}]; $CellContext`movest = 
              Map[$CellContext`rotate270inplace, $CellContext`moves]; \
$CellContext`pm1st = 
              Map[$CellContext`rotate270, $CellContext`pm1]; \
$CellContext`pm2st = 
              Map[$CellContext`rotate270, $CellContext`pm2]; \
$CellContext`newPathEntries = \
$CellContext`wallFrictionMoveUp[$CellContext`s1t, $CellContext`s2t, \
$CellContext`g1t, $CellContext`g2t, $CellContext`movest, $CellContext`pm1st, \
$CellContext`pm2st, $CellContext`\[Epsilon]]; 
             Part[$CellContext`newPathEntries, 2] = $CellContext`rotate90[
                Part[$CellContext`newPathEntries, 2]]; 
             Part[$CellContext`newPathEntries, 3] = $CellContext`rotate90[
                Part[$CellContext`newPathEntries, 3]]; 
             Part[$CellContext`newPathEntries, 4] = 
              Map[$CellContext`rotate90inplace, 
                Part[$CellContext`newPathEntries, 4]]; 
             Part[$CellContext`newPathEntries, 5] = Map[$CellContext`rotate90, 
                Part[$CellContext`newPathEntries, 5]]; 
             Part[$CellContext`newPathEntries, 6] = Map[$CellContext`rotate90, 
                Part[$CellContext`newPathEntries, 6]]]; 
           Return[$CellContext`newPathEntries]]], \
$CellContext`wallFrictionMoveUp[
         Pattern[$CellContext`r1in, 
          Blank[]], 
         Pattern[$CellContext`r2in, 
          Blank[]], 
         Pattern[$CellContext`g1in, 
          Blank[]], 
         Pattern[$CellContext`g2in, 
          Blank[]], 
         Pattern[$CellContext`moves, 
          Blank[]], 
         Pattern[$CellContext`pm1, 
          Blank[]], 
         Pattern[$CellContext`pm2, 
          Blank[]], 
         Pattern[$CellContext`\[Epsilon], 
          Blank[]]] := 
       Module[{$CellContext`r1, $CellContext`r2, $CellContext`g1, \
$CellContext`g2, $CellContext`\[CapitalDelta]gx, \
$CellContext`\[CapitalDelta]gy, $CellContext`m1, $CellContext`m2, \
$CellContext`\[CapitalDelta]tgx, $CellContext`\[CapitalDelta]tgy, \
$CellContext`\[CapitalDelta]ey, $CellContext`\[CapitalDelta]ex, \
$CellContext`L = 
          1, $CellContext`\[CapitalDelta]r, $CellContext`path1 = \
$CellContext`pm1, $CellContext`path2 = $CellContext`pm2, $CellContext`path = \
$CellContext`moves, $CellContext`isMirrored = False, $CellContext`isFlipped = 
          False}, If[
          Part[$CellContext`r1in, 2] < Part[$CellContext`r2in, 2], 
           If[
           Part[$CellContext`r1in, 1] > 
            Part[$CellContext`r2in, 
              1], {$CellContext`r1, $CellContext`r2, $CellContext`g1, \
$CellContext`g2} = {$CellContext`r2in, $CellContext`r1in, $CellContext`g2in, \
$CellContext`g1in}; $CellContext`isFlipped = 
             True, {$CellContext`r1, $CellContext`r2, $CellContext`g1, \
$CellContext`g2} = 
             Map[$CellContext`mirror, {$CellContext`r2in, $CellContext`r1in, \
$CellContext`g2in, $CellContext`g1in}]; $CellContext`path = 
             Map[$CellContext`mirrorInplace, $CellContext`moves]; \
$CellContext`isFlipped = True; $CellContext`isMirrored = True], 
           If[Part[$CellContext`r1in, 1] > 
             Part[$CellContext`r2in, 
               1], {$CellContext`r1, $CellContext`r2, $CellContext`g1, \
$CellContext`g2} = 
              Map[$CellContext`mirror, {$CellContext`r1in, $CellContext`r2in, \
$CellContext`g1in, $CellContext`g2in}]; $CellContext`path = 
              Map[$CellContext`mirrorInplace, $CellContext`moves]; \
$CellContext`isMirrored = 
              True, {$CellContext`r1, $CellContext`r2, $CellContext`g1, \
$CellContext`g2} = {$CellContext`r1in, $CellContext`r2in, $CellContext`g1in, \
$CellContext`g2in}]; 
           Null]; {$CellContext`\[CapitalDelta]gx, $CellContext`\
\[CapitalDelta]gy} = $CellContext`g2 - $CellContext`g1; 
         If[Part[$CellContext`r2, 2] == 1, 
           
           Return[{Infinity, $CellContext`r1, $CellContext`r2, \
$CellContext`path, $CellContext`path1, $CellContext`path2, False}]]; If[
           And[
           Part[$CellContext`r2, 1] - Part[$CellContext`r1, 1] - 
             1 <= $CellContext`\[CapitalDelta]gx <= 1, 
            Part[$CellContext`r2, 2] - 
             Part[$CellContext`r1, 2] <= $CellContext`\[CapitalDelta]gy <= 
            0], $CellContext`m1 = {((1 - Part[$CellContext`r1, 2])/(2 - 
               Part[$CellContext`g1, 2] - Part[$CellContext`r1, 2])) (
               Part[$CellContext`g1, 1] - Part[$CellContext`r1, 1]), 1 - 
              Part[$CellContext`r1, 2]}; 
           AddTo[$CellContext`r1, $CellContext`m1]; 
           AddTo[$CellContext`r2, $CellContext`m1]; 
           If[Part[$CellContext`r2, 1] > 1, 
             SubtractFrom[$CellContext`r1, $CellContext`m1]; 
             SubtractFrom[$CellContext`r2, $CellContext`m1]; $CellContext`m1 = \
{1 - Part[$CellContext`r2, 1], 1 - Part[$CellContext`r1, 2]}; 
             AddTo[$CellContext`r1, $CellContext`m1]; 
             AddTo[$CellContext`r2, $CellContext`m1]]; 
           If[Part[$CellContext`r2, 1] < 0, 
             SubtractFrom[$CellContext`r1, $CellContext`m1]; 
             SubtractFrom[$CellContext`r2, $CellContext`m1]; $CellContext`m1 = \
{-Part[$CellContext`r2, 1], 1 - Part[$CellContext`r1, 2]}; 
             AddTo[$CellContext`r1, $CellContext`m1]; 
             AddTo[$CellContext`r2, $CellContext`m1]]; $CellContext`m2 = \
{$CellContext`\[CapitalDelta]gx - (Part[$CellContext`r2, 1] - 
              Part[$CellContext`r1, 1]), $CellContext`\[CapitalDelta]gy - (
              Part[$CellContext`r2, 2] - Part[$CellContext`r1, 2])}; 
           AddTo[$CellContext`r2, $CellContext`m2]; 
           If[Part[$CellContext`r2, 1] >= 1, 
              SubtractFrom[$CellContext`r1, $CellContext`m1]; 
              SubtractFrom[$CellContext`r2, $CellContext`m2]; 
              SubtractFrom[$CellContext`r2, $CellContext`m1]; $CellContext`m1 = \
{(1 - $CellContext`\[CapitalDelta]gx) - Part[$CellContext`r1, 1], 1 - 
                 Part[$CellContext`r1, 2]}; 
              AddTo[$CellContext`r1, $CellContext`m1]; 
              AddTo[$CellContext`r2, $CellContext`m1]; $CellContext`m2 = \
{$CellContext`\[CapitalDelta]gx - (Part[$CellContext`r2, 1] - 
                 Part[$CellContext`r1, 1]), $CellContext`\[CapitalDelta]gy - (
                 Part[$CellContext`r2, 2] - Part[$CellContext`r1, 2])}; 
              AddTo[$CellContext`r2, $CellContext`m2]; Null] 
            If[Part[$CellContext`r2, 1] <= 0, 
              SubtractFrom[$CellContext`r1, $CellContext`m1]; 
              SubtractFrom[$CellContext`r2, $CellContext`m2]; 
              SubtractFrom[$CellContext`r2, $CellContext`m1]; $CellContext`m1 = \
{$CellContext`\[CapitalDelta]gx - Part[$CellContext`r1, 1], 1 - 
                 Part[$CellContext`r1, 2]}; 
              AddTo[$CellContext`r1, $CellContext`m1]; 
              AddTo[$CellContext`r2, $CellContext`m1]; $CellContext`m2 = \
{$CellContext`\[CapitalDelta]gx - (Part[$CellContext`r2, 1] - 
                 Part[$CellContext`r1, 1]), $CellContext`\[CapitalDelta]gy - (
                 Part[$CellContext`r2, 2] - Part[$CellContext`r1, 2])}; 
              AddTo[$CellContext`r2, $CellContext`m2]]; Null, 
           If[Part[$CellContext`r2, 1] - Part[$CellContext`r1, 1] - 
              1 > $CellContext`\[CapitalDelta]gx, \
$CellContext`\[CapitalDelta]tgx = 
             Part[$CellContext`r2, 1] - Part[$CellContext`r1, 1] - 
              1, $CellContext`\[CapitalDelta]tgx = $CellContext`\
\[CapitalDelta]gx]; 
           If[$CellContext`\[CapitalDelta]gy > 
             0, $CellContext`\[CapitalDelta]tgy = 
             0, $CellContext`\[CapitalDelta]tgy = \
$CellContext`\[CapitalDelta]gy]; 
           If[$CellContext`\[CapitalDelta]gy < 
             Part[$CellContext`r2, 2] - 
              Part[$CellContext`r1, 2], $CellContext`\[CapitalDelta]tgy = 
             Part[$CellContext`r2, 2] - 
              Part[$CellContext`r1, 2]]; $CellContext`m1 = {
             0, 1 - Part[$CellContext`r1, 2]}; 
           AddTo[$CellContext`r1, $CellContext`m1]; 
           AddTo[$CellContext`r2, $CellContext`m1]; 
           If[Part[$CellContext`r2, 1] > 1, 
             SubtractFrom[$CellContext`r1, $CellContext`m1]; 
             SubtractFrom[$CellContext`r2, $CellContext`m1]; $CellContext`m1 = \
{1 - Part[$CellContext`r2, 1], 1 - Part[$CellContext`r1, 2]}; 
             AddTo[$CellContext`r1, $CellContext`m1]; 
             AddTo[$CellContext`r2, $CellContext`m1]]; 
           If[Part[$CellContext`r2, 1] < 0, 
             SubtractFrom[$CellContext`r1, $CellContext`m1]; 
             SubtractFrom[$CellContext`r2, $CellContext`m1]; $CellContext`m1 = \
{-Part[$CellContext`r2, 1], 1 - Part[$CellContext`r1, 2]}; 
             AddTo[$CellContext`r1, $CellContext`m1]; 
             AddTo[$CellContext`r2, $CellContext`m1]]; $CellContext`m2 = \
{$CellContext`\[CapitalDelta]tgx - (Part[$CellContext`r2, 1] - 
              Part[$CellContext`r1, 1]), $CellContext`\[CapitalDelta]tgy - (
              Part[$CellContext`r2, 2] - Part[$CellContext`r1, 2])}; 
           AddTo[$CellContext`r2, $CellContext`m2]; 
           If[Part[$CellContext`r2, 1] > 1, 
             SubtractFrom[$CellContext`r1, $CellContext`m1]; 
             SubtractFrom[$CellContext`r2, $CellContext`m2]; 
             
             SubtractFrom[$CellContext`r2, $CellContext`m1]; $CellContext`m1 = \
{-Min[
                  
                  Abs[(1 - $CellContext`\[CapitalDelta]tgx) - 
                   Part[$CellContext`r1, 1]], 
                  Part[$CellContext`r1, 1]], 1 - Part[$CellContext`r1, 2]}; 
             AddTo[$CellContext`r1, $CellContext`m1]; 
             AddTo[$CellContext`r2, $CellContext`m1]; $CellContext`m2 = {
                
                Min[$CellContext`\[CapitalDelta]tgx - (
                 Part[$CellContext`r2, 1] - Part[$CellContext`r1, 1]), 1 - 
                 Part[$CellContext`r2, 
                  2]], $CellContext`\[CapitalDelta]tgy - (
                Part[$CellContext`r2, 2] - Part[$CellContext`r1, 2])}; 
             AddTo[$CellContext`r2, $CellContext`m2]]; 
           If[Part[$CellContext`r2, 1] < 0, 
             SubtractFrom[$CellContext`r1, $CellContext`m1]; 
             SubtractFrom[$CellContext`r2, $CellContext`m2]; 
             SubtractFrom[$CellContext`r2, $CellContext`m1]; $CellContext`m1 = {
                Min[
                 
                 Abs[$CellContext`\[CapitalDelta]tgx - 
                  Part[$CellContext`r1, 1]], 
                 Abs[1 - Part[$CellContext`r2, 1]]], 1 - 
                Part[$CellContext`r1, 2]}; 
             AddTo[$CellContext`r1, $CellContext`m1]; 
             AddTo[$CellContext`r2, $CellContext`m1]; $CellContext`m2 = {
                
                Max[$CellContext`\[CapitalDelta]tgx - (
                 Part[$CellContext`r2, 1] - Part[$CellContext`r1, 1]), -
                 Part[$CellContext`r2, 
                   1]], $CellContext`\[CapitalDelta]tgy - (
                Part[$CellContext`r2, 2] - Part[$CellContext`r1, 2])}; 
             AddTo[$CellContext`r2, $CellContext`m2]]; Null]; 
         AppendTo[$CellContext`path, $CellContext`m1]; 
         SubtractFrom[$CellContext`r2, $CellContext`m2]; 
         If[$CellContext`isMirrored, 
           If[$CellContext`isFlipped, AppendTo[$CellContext`path1, 
              $CellContext`mirror[$CellContext`r2]]; 
            AppendTo[$CellContext`path2, 
              $CellContext`mirror[$CellContext`r1]], 
            AppendTo[$CellContext`path1, 
              $CellContext`mirror[$CellContext`r1]]; 
            AppendTo[$CellContext`path2, 
              $CellContext`mirror[$CellContext`r2]]], 
           If[$CellContext`isFlipped, 
            AppendTo[$CellContext`path1, $CellContext`r2]; 
            AppendTo[$CellContext`path2, $CellContext`r1], 
            AppendTo[$CellContext`path1, $CellContext`r1]; 
            AppendTo[$CellContext`path2, $CellContext`r2]]]; 
         AddTo[$CellContext`r2, $CellContext`m2]; 
         AppendTo[$CellContext`path, $CellContext`m2]; 
         If[$CellContext`isMirrored, $CellContext`path = 
            Map[$CellContext`mirrorInplace, $CellContext`path]; \
{$CellContext`r1, $CellContext`r2} = 
            Map[$CellContext`mirror, {$CellContext`r1, $CellContext`r2}]; 
           Null]; If[$CellContext`isFlipped, 
           AppendTo[$CellContext`path1, $CellContext`r2]; 
           AppendTo[$CellContext`path2, $CellContext`r1]; Return[{
              
              If[$CellContext`m2 == {0, 0}, 
               Infinity, $CellContext`distanceMoved[$CellContext`path] + \
$CellContext`admissibleHeuristic[$CellContext`r2, $CellContext`r1, \
$CellContext`g2, $CellContext`g1]], $CellContext`r2, $CellContext`r1, \
$CellContext`path, $CellContext`path1, $CellContext`path2, False}], 
           AppendTo[$CellContext`path1, $CellContext`r1]; 
           AppendTo[$CellContext`path2, $CellContext`r2]; Return[{
              
              If[$CellContext`m2 == {0, 0}, 
               Infinity, $CellContext`distanceMoved[$CellContext`path] + \
$CellContext`admissibleHeuristic[$CellContext`r1, $CellContext`r2, \
$CellContext`g1, $CellContext`g2]], $CellContext`r1, $CellContext`r2, \
$CellContext`path, $CellContext`path1, $CellContext`path2, 
              False}]]], $CellContext`mirror[
         Pattern[$CellContext`r, 
          Blank[]]] := {1 - Part[$CellContext`r, 1], 
         Part[$CellContext`r, 2]}, $CellContext`mirrorInplace[
         Pattern[$CellContext`r, 
          Blank[]]] := {-Part[$CellContext`r, 1], 
         Part[$CellContext`r, 2]}, $CellContext`rotate180[
         Pattern[$CellContext`r, 
          Blank[]]] := {
        1 - Part[$CellContext`r, 1], 1 - 
         Part[$CellContext`r, 2]}, $CellContext`rotate180inplace[
         Pattern[$CellContext`r, 
          Blank[]]] := {-Part[$CellContext`r, 1], -
         Part[$CellContext`r, 2]}, $CellContext`rotate90[
         Pattern[$CellContext`r, 
          Blank[]]] := {1 - Part[$CellContext`r, 2], 
         Part[$CellContext`r, 1]}, $CellContext`rotate90inplace[
         Pattern[$CellContext`r, 
          Blank[]]] := {
         Part[$CellContext`r, 2], -
         Part[$CellContext`r, 1]}, $CellContext`rotate270[
         Pattern[$CellContext`r, 
          Blank[]]] := {
         Part[$CellContext`r, 2], 1 - 
         Part[$CellContext`r, 1]}, $CellContext`rotate270inplace[
         Pattern[$CellContext`r, 
          Blank[]]] := {-Part[$CellContext`r, 2], 
         Part[$CellContext`r, 1]}}; Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.696613921497096*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\

Contour Plot\
\>", "Section",
 CellChangeTimes->{{3.696608750471386*^9, 3.696608792071826*^9}, {
  3.696609144983279*^9, 3.696609149550158*^9}}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{{3.6966091514137278`*^9, 3.696609153344668*^9}, {
  3.696609247462015*^9, 3.696609247894002*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"s1", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "/", "4"}], ",", 
       RowBox[{"4", "/", "5"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s2", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"3", "/", "4"}], ",", 
       RowBox[{"1", "/", "5"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"g1", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "/", "2"}], ",", 
       RowBox[{"2", "/", "3"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Epsilon]", " ", "=", " ", "0.001"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"distanceVals", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", "y", ",", 
           RowBox[{"distanceMoved", "[", 
            RowBox[{"First", "@", 
             RowBox[{"optimal2robotPath", "[", 
              RowBox[{"s1", ",", "s2", ",", " ", "g1", ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", "y"}], "}"}], ",", "\[Epsilon]"}], "]"}]}], 
            "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "\[Epsilon]", ",", 
           RowBox[{"1", "-", "\[Epsilon]"}], ",", "0.01"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", "\[Epsilon]", ",", 
           RowBox[{"1", "-", "\[Epsilon]"}], ",", "0.01"}], "}"}]}], "]"}], 
       ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.696609500780052*^9, 3.6966095250952597`*^9}, {
  3.696609581523547*^9, 3.696609612794346*^9}, {3.696609645689085*^9, 
  3.696609650648962*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListContourPlot", "[", 
  RowBox[{"distanceVals", ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"InterpolationOrder", "\[Rule]", "3"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6966093107946453`*^9, 3.696609317773464*^9}, 
   3.6966093480580883`*^9, {3.6966094100029707`*^9, 3.6966094142413683`*^9}, {
   3.6966094794385977`*^9, 3.696609480772698*^9}, {3.6966095272742577`*^9, 
   3.696609580279361*^9}, 3.696609632124337*^9, {3.696609731433222*^9, 
   3.696609772788293*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1:eJxk3V3ItnuD1/VhiGgjwiaomArKzDYixI02pMDIDCKsm4QQNyQGhQgboY00
qCCE3JDZCFoZSKyMu8Ib4Q4RoxdsKq1Re/FlLHW6muVz5TXH+4EVmFjRuu+H
z//g/722Lr+zeHzWs37ncX/WdZ7n8T/+rp/4Lf/0b/rRH/mRH/nPf/mP/MiX
n//P7/1Lf+rX/MSHX9mf/9k//tf/6N/3O/6N0X/bL3v5JX/tv/7N6F/3K/7A
z/xLf+jb0X/89/zqP/h//r8fR2+/9Jf/db/vb/80+vv49b/xH/w8+t/6W/+a
f+Zv+Pt//+i/++f+yr/2z/8Xf2D07/937//ov/0n/pPR/8g/+xf/xC/+uf90
9J/8xV//A6O//uW/8odG/9+/9vU/+N1/+KdH/8P/wG/4/n/Sfz36d/zNf+5/
/Mu/9r8Z/T/95a//gdF/y5e//PpHRv+Gr/9A/rvR/+Hv/sN/53/8L/7M6Otf
+ZXf/zf80dFf/+t+9I+P/le//l/++9F/5Pv/9D/3b/4Po7/80/7+b2n0py8/
ftGfGP1P/sQv+v4f+dP/x5e//Ov+5Oh/+1f9zt/8C3/16R/O86dGf13vV/3p
0d/H9/+Bp/+eL3/5d/7s6D/6/X/6x3/Znxn9L/zCX/3+//X03/j1BfA/j/76
X/fj/0teH0//8OefHf3v/fiXF9SfG/2Pfvnb/71PL1/+637Nnx/99S//pad/
+HL8udF/+ss/jl/xv47+rV/+9l+e/uHr92X0f/nlL/+S/23013+8P/P0138c
v/nnR/+Z37Z+/4r+bvTf++Xl/euf/pe//OXf9/QPr4en/47vX/0//0/9hdG/
5cd++0//sd/z9H/1x778B57+m7785V/9g9Ff/tM/9bue/v7/85/9bevTP7y+
Xkd//a/7qae//uWff/r/+9kv/4P+99Effup3/eSP/fan//0vf/s/+/T/9eW/
7pf+xdH/2Ne/gaf/nZ/88j/o6R9e/2+j/6Evf/s/+fTX/7qffvrrX/6xXxj9
9R/vb3z66z+OP/gL2WPJHkv2WLLHkj3W7LFmjzV7bKN/09c9tuyxZY89e+zZ
Y88eR/Y4sseRPc7scWaPM3tc2ePKHlf2uLPHnT3ud07o/uSH5ofmh+aH5ofm
h+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH
5ofmh+aH5ofmh+aH5sf8+niaH5ofmh+aH5ofmh+aH5of8+v3ZTQ/ND80PzQ/
ND80P+br4Wl+aH5ofmh+aH5ofszX1+tofmh+aH5ofmh+aH5ofmh+zNf/22h+
aH5ofmh+aH7MeyzZY8keS/ZYsseaPdbssWaPbTQ/5j227LFnjz177NnjyB5H
9jiyx5k9zuxxZo8re1zZ48oed/a4s8f97veKOqH7kx+aH5ofmh+aH5ofmh+a
H5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5of
mh+aH5ofmh/z6+Npfmh+aH5ofmh+aH5ofmh+zK/bl9H80PzQ/ND80PzQ/Jiv
h6f5ofmh+aH5ofmh+TFfX6+j+aH5ofmh+aH5ofmh+aH5MV//b6P5ofmh+aH5
ofkx77FkjyV7LNljyR5r9lizx5o9ttH8mPfYsseePfbssWePI3sc2ePIHmf2
OLPHmT2u7HFljyt73Nnjzh73u/eh+ntFndD9yQ/ND80PzQ/ND80PzQ/ND80P
zQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/N
D82P+XXxND80PzQ/ND80PzQ/ND80P+bX78tofmh+aH5ofmh+aH7M18PT/ND8
0PzQ/ND80PyYr6/X0fzQ/ND80PzQ/ND80PzQ/Jiv/7fR/ND80PzQ/ND8mPdY
sseSPZbssWSPNXus2WPNHttofsx7bNljzx579tizx5E9juxxZI8ze5zZ48we
V/a4sseVPe7scWeP+93nFn0fqr9X1Andn/zQ/ND80PzQ/ND80PzQ/ND80PzQ
/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/Jhf
H0/zQ/ND80PzQ/ND80PzQ/Njfv2+jOaH5ofmh+aH5ofmx3wdPM0PzQ/ND80P
zQ/Nj/n6eh3ND80PzQ/ND80PzQ/ND82P+fp/G80PzQ/ND80PzY95jyV7LNlj
yR5L9lizx5o91uyxjebHvMeWPfbssWePPXsc2ePIHkf2OLPHmT3O7HFljyt7
XNnjzh539rjffc7dzy36PlR/r6gTuj/5ofmh+aH5ofmh+aH5ofmh+aH5ofmh
+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5Mb8+nuaH
5ofmh+aH5ofmh+aH5sf8+n0ZzQ/ND80PzQ/ND82P+Xp4mh+aH5ofmh+aH5of
8/X1Opofmh+aH5ofmh+aH5ofmh/zdf82mh+aH5ofmh+aH/MeS/ZYsseSPZbs
sWaPNXus2WMbzY95jy177Nljzx579jiyx5E9juxxZo8ze5zZ48oeV/a4ssed
Pe7scb/7XpTu5979HKPvS/X3jLrRn/zQ/ND80PzQ/ND80PzQ/ND80PzQ/ND8
0PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND8mF8fT/ND80Pz
Q/ND80PzQ/ND82N+/b6M5ofmh+aH5ofmh+bHfD08zQ/ND80PzQ/ND82P+bp6
Hc0PzQ/ND80PzQ/ND80PzY/5+n8bzQ/ND80PzQ/Nj3mPJXss2WPJHkv2WLPH
mj3W7LGN5se8x5Y99uyxZ489exzZ48geR/Y4s8eZPc7scWWPK3tc2ePOHnf2
uN99j7bfi+rn3P3cou9D9feKOqH7kx+aH5ofmh+aH5ofmh+aH5ofmh+aH5of
mh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH/Pr42l+aH5ofmh+
aH5ofmh+aH7Mr9+X0fzQ/ND80PzQ/ND8mK+Hp/mh+aH5ofmh+aH5MV9fr6P5
ofmh+aH5ofmh+aH5ofkxX/9vo/mh+aH5ofmh+THvsWSPJXss2WPJHmv2WLPH
mj220fyY99iyx5499uyxZ48jexzZ48geZ/Y4s8eZPa7scWWPK3vc2ePOHve7
+y76Pdp+L6qfc/dzi74P1d8r6oTuT35ofmh+aH5ofmh+aH5ofmh+aH5ofmh+
aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH7Mr4+n+aH5ofmh+aH5
ofmh+aH5Mb9+X0bzQ/ND80PzQ/ND82O+Hp7mh+aH5ofmh+aH5sd8fb2O5ofm
h+aH5ofmh+aH5ofmx3z9v43mh+aH5ofmh+bHvMeSPZbssWSPJXus2WPNHmv2
2EbzY95jyx579tizx549juxxZI8je5zZ48weZ/a4sseVPa7scWePO3vc7+7T
630X/R5tvxfVz7n7uUXfh+rvFXVC9yc/ND80PzQ/ND80PzQ/ND80PzQ/ND80
PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80P+bXx9P80PzQ/ND80PzQ
/ND80PyYX78vo/mh+aH5ofmh+aH5MV8PT/ND80PzQ/ND80PzY76+XkfzQ/ND
80PzQ/ND80PzQ/Njvv7fRvND80PzQ/ND82PeY8keS/ZYsseSPdbssWaPNXts
o/kx77Fljz177Nljzx5H9jiyx5E9zuxxZo8ze1zZ48oeV/a4s8edPe5393X3
Pr3ed9Hv0fZ7Uf2cu59b9H2o/l5RJ3R/8kPzQ/ND80PzQ/ND80PzQ/ND80Pz
Q/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzY359PM0PzQ/ND80PzQ/N
D80PzY/59fsymh+aH5ofmh+aH5of8/XwND80PzQ/ND80PzQ/5uvrdTQ/ND80
PzQ/ND80PzQ/ND/m6/9tND80PzQ/ND80P+Y9luyxZI8leyzZY80ea/ZYs8c2
mh/zHlv22LPHnj327HFkjyN7HNnjzB5n9jizx5U9ruxxZY87e9zZ4353Dkjv
6+59er3vot+j7fei+jl3P7fo+1D9vaJO6P7kh+aH5ofmh+aH5ofmh+aH5ofm
h+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmx/z6eJofmh+aH5ofmh+a
H5ofmh/z6/dlND80PzQ/ND80PzQ/5uvhaX5ofmh+aH5ofmh+zNfX62h+aH5o
fmh+aH5ofmh+aH7M1//baH5ofmh+aH5ofsx7LNljyR5L9liyx5o91uyxZo9t
ND/mPbbssWePPXvs2ePIHkf2OLLHmT3O7HFmjyt7XNnjyh539rizx/3u3Kie
A9L7unufXu+76Pdo+72ofs7dzy36PlR/r6gTuj/5ofmh+aH5ofmh+aH5ofmh
+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+TG/Pp7mh+aH5ofmh+aH
5ofmh+bH/Pp9Gc0PzQ/ND80PzQ/Nj/l6eJofmh+aH5ofmh+aH/P19TqaH5of
mh+aH5ofmh+aH5of8/X/Npofmh+aH5ofmh/zHkv2WLLHkj2W7LFmjzV7rNlj
G82PeY8te+zZY88ee/Y4sseRPY7scWaPM3uc2ePKHlf2uLLHnT3u7HG/O2ew
50b1HJDe19379HrfRb9H2+9F9XPufm7R96H6e0Wd0P3JD80PzQ/ND80PzQ/N
D80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND82P+fXxND80PzQ/ND80
PzQ/ND80P+bX78tofmh+aH5ofmh+aH7M18PT/ND80PzQ/ND80PyYr6/X0fzQ
/ND80PzQ/ND80PzQ/Jiv/7fR/ND80PzQ/ND8mPdYsseSPZbssWSPNXus2WPN
Httofsx7bNljzx579tizx5E9juxxZI8ze5zZ48weV/a4sseVPe7scWeP+925
tD1nsOdG9RyQ3tfd+/R630W/R9vvRfVz7n5u0feh+ntFndD9yQ/ND80PzQ/N
D80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzY/59fE0PzQ/ND80
PzQ/ND80PzQ/5tfvy2h+aH5ofmh+aH5ofszXw9P80PzQ/ND80PzQ/Jivr9fR
/ND80PzQ/ND80PzQ/ND8mK//t9H80PzQ/ND80PyY91iyx5I9luyxZI81e6zZ
Y80e22h+zHts2WPPHnv22LPHkT2O7HFkjzN7nNnjzB5X9riyx5U97uxxZ4/7
3TnmPZe25wz23KieA9L7unufXu+76Pdo+72ofs7dzy36PlR/r6gTuj/5ofmh
+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+TG/Pp7mh+aH
5ofmh+aH5ofmh+bH/Pp9Gc0PzQ/ND80PzQ/Nj/l6eJofmh+aH5ofmh+aH/P1
9TqaH5ofmh+aH5ofmh+aH5of8/X/Npofmh+aH5ofmh/zHkv2WLLHkj2W7LFm
jzV7rNljG82PeY8te+zZY88ee/Y4sseRPY7scWaPM3uc2ePKHlf2uLLHnT3u
7HG/e+5FzzHvubQ9Z7DnRvUckN7X3fv0et9Fv0fb70X1c+5+btH3ofp7RZ3Q
/ckPzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzY/59fE0
PzQ/ND80PzQ/ND80PzQ/5tfvy2h+aH5ofmh+aH5ofszXw9P80PzQ/ND80PzQ
/Jivr9fR/ND80PzQ/ND80PzQ/ND8mK//t9H80PzQ/ND80PyY91iyx5I9luyx
ZI81e6zZY80e22h+zHts2WPPHnv22LPHkT2O7HFkjzN7nNnjzB5X9riyx5U9
7uxxZ4/73XOS+tyLnmPec2l7zmDPjeo5IL2vu/fp9b6Lfo+234vq59z93KLv
Q/X3ijqh+5Mfmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5of
8+vjaX5ofmh+aH5ofmh+aH5ofsyv35fR/ND80PzQ/ND80PyYr4en+aH5ofmh
+aH5ofkxX1+vo/mh+aH5ofmh+aH5ofmh+TFf/2+j+aH5ofmh+aH5Me+xZI8l
eyzZY8kea/ZYs8eaPbbR/Jj32LLHnj327LFnjyN7HNnjyB5n9jizx5k9ruxx
ZY8re9zZ484e97vn6ml+6D4Hgx+659T23EF+6J4L0vu8e99e78Po92r7Pal+
7t3PMfq+VH/PqBv9yQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/N
D82P+fXxND80PzQ/ND80PzQ/ND80P+bX78tofmh+aH5ofmh+aH7M18PT/ND8
0PzQ/ND80PyYr6/X0fzQ/ND80PzQ/ND80PzQ/Jiv/7fR/ND80PzQ/ND8mPdY
sseSPZbssWSPNXus2WPNHttofsx7bNljzx579tizx5E9juxxZI8ze5zZ48we
V/a4sseVPe7scWeP+91zWPtcvT4nqc+96DnmPZe25wz23KieA9L7unufXu+7
6Pdo+72ofs7dzy36PlR/r6gTuj/5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5
ofmh+aH5ofkxvz6e5ofmh+aH5ofmh+aH5ofmx/z6fRnND80PzQ/ND80PzY/5
eniaH5ofmh+aH5ofmh/z9fU6mh+aH5ofmh+aH5ofmh+aH/P1/zaaH5ofmh+a
H5of8x5L9liyx5I9luyxZo81e6zZYxvNj3mPLXvs2WPPHnv2OLLHkT2O7HFm
jzN7nNnjyh5X9riyx5097uxxv3tud5/D2ufq9TlJfe5FzzHvubQ9Z7DnRvUc
kN7X3fv0et9Fv0fb70X1c+5+btH3ofp7RZ3Q/ckPzQ/ND80PzQ/ND80PzQ/N
D80PzQ/ND80PzQ/ND82P+fXxND80PzQ/ND80PzQ/ND80P+bX78tofmh+aH5o
fmh+aH7M18PT/ND80PzQ/ND80PyYr6/X0fzQ/ND80PzQ/ND80PzQ/Jiv/7fR
/ND80PzQ/ND8mPdYsseSPZbssWSPNXus2WPNHttofsx7bNljzx579tizx5E9
juxxZI8ze5zZ48weV/a4sseVPe7scWePe/w5xw/ND93nsvJD80P3ORj80D2n
tucO9hypngvS+7x7317vw+j3avs9qX7u3c8x+r5Uf8+oG/3JD80PzQ/ND80P
zQ/ND80PzQ/ND80PzQ/ND80PzY/59fE0PzQ/ND80PzQ/ND80PzQ/5tfvy2h+
aH5ofmh+aH5ofszXw9P80PzQ/ND80PzQ/Jivr9fR/ND80PzQ/ND80PzQ/ND8
mK//t9H80PzQ/ND80PyY91iyx5I9luyxZI81e6zZY80e22h+zHts2WPPHnv2
2LPHkT2O7HFkjzN7nNnjzB5X9riyx5U97uxxZ497/LnGD82PPre7z2Htc/X6
nKQ+96LnmPdc2p4z2HOjeg5I7+vufXq976Lfo+33ovo5dz+36PtQ/b2iTuj+
5Ifmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmx/z6eJofmh+aH5ofmh+aH5of
mh/z6/dlND80PzQ/ND80PzQ/5uvhaX5ofmh+aH5ofmh+zNfX62h+aH5ofmh+
aH5ofmh+aH7M1//baH5ofmh+aH5ofsx7LNljyR5L9liyx5o91uyxZo9tND/m
PbbssWePPXvs2ePIHkf2OLLHmT3O7HFmjyt7XNnjyh539rizxz3+HOOH5ofm
R5/b3eew9rl6fU5Sn3vRc8x7Lm3PGey5UT0HpPd19z693nfR79H2e1H9nLuf
W/R9qP5eUSd0f/JD80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/Njfn08zQ/ND80P
zQ/ND80PzQ/Nj/n1+zKaH5ofmh+aH5ofmh/z9fA0PzQ/ND80PzQ/ND/m6+t1
ND80PzQ/ND80PzQ/ND80P+br/200PzQ/ND80PzQ/5j2W7LFkjyV7LNljzR5r
9lizxzaaH/MeW/bYs8eePfbscWSPI3sc2ePMHmf2OLPHlT2u7HFljzt73Nnj
Hn9u8UPzQ/ND80PzQ/ND80P3uUl9DkbPNe85tT13sOdI9VyQ3ufd+/Z6H0a/
V8uPfs7dzy36PlR/r6gTuj/5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+TG/Pp7m
h+aH5ofmh+aH5ofmh+bH/Pp9Gc0PzQ/ND80PzQ/Nj/l6eJofmh+aH5ofmh+a
H/P19TqaH5ofmh+aH5ofmh+aH5of8/X/Npofmh+aH5ofmh/zHkv2WLLHkj2W
7LFmjzV7rNljG82PeY8te+zZY88ee/Y4sseRPY7scWaPM3uc2ePKHlf2uLLH
nT3u7HGPP6f4ofmh+aH5ofnR53b3Oax9rl6fk9TnXvQc855L23MGe25UzwHp
fd29T6/3XfR7tP1eVD/n7ucWfR+qv1fUCd2f/ND80PzQ/ND80PzQ/ND80PzQ
/ND8mF8fT/ND80PzQ/ND80PzQ/ND82N+/b6M5ofmh+aH5ofmh+bHfD08zQ/N
D80PzQ/ND82P+fp6Hc0PzQ/ND80PzQ/ND80PzY/5+n8bzQ/ND80PzQ/Nj3mP
JXss2WPJHkv2WLPHmj3W7LGN5se8x5Y99uyxZ489exzZ48geR/Y4s8eZPc7s
cWWPK3tc2ePOHnf2uMefS/zQ/ND80PzQ/ND86HO7+xzWPlevz0nqcy96jnnP
pe05gz03queA9L7u3qfX+y76Pdp+L6qfc/dzi74P1d8r6oTuT35ofmh+aH5o
fmh+aH5ofmh+aH7Mr4+n+aH5ofmh+aH5ofmh+aH5Mb9+X0bzQ/ND80PzQ/ND
82O+Hp7mh+aH5ofmh+aH5sd8fb2O5ofmh+aH5ofmh+aH5ofmx3z9v43mh+aH
5ofmh+bHvMeSPZbssWSPJXus2WPNHmv22EbzY95jyx579tizx549juxxZI8j
e5zZ48weZ/a4sseVPa7scWePO3vc488hfmh+aH5ofmh+aH5ofvS53X0Oa5+r
1+ck9bkXPce859L2nMGeG9VzQHpfd+/T630X/R5tvxfVz7n7uUXfh+rvFXVC
9yc/ND80PzQ/ND80PzQ/ND80P+bXx9P80PzQ/ND80PzQ/ND80PyYX78vo/mh
+aH5ofmh+aH5MV8PT/ND80PzQ/ND80PzY76+XkfzQ/ND80PzQ/ND80PzQ/Nj
vv7fRvND80PzQ/ND82PeY8keS/ZYsseSPdbssWaPNXtso/kx77Fljz177Nlj
zx5H9jiyx5E9zuxxZo8ze1zZ48oeV/a4s8edPe7x5w4/ND80PzQ/ND80PzQ/
ND/63O4+h7XP1etzkvrci55j3nNpe85gz43qOSC9r7v36fW+i36Ptt+L6ufc
/dyi70P194o6ofuTH5ofmh+aH5ofmh+aH5of8+vjaX5ofmh+aH5ofmh+aH5o
fsyv35fR/ND80PzQ/ND80PyYr4en+aH5ofmh+aH5ofkxX1+vo/mh+aH5ofmh
+aH5ofmh+TFf/2+j+aH5ofmh+aH5Me+xZI8leyzZY8kea/ZYs8eaPbbR/Jj3
2LLHnj327LFnjyN7HNnjyB5n9jizx5k9ruxxZY8re9zZ484e9/hzhh+aH5of
mh+aH5ofmh+aH5offW53n8Pa5+r1OUl97kXPMe+5tD1nsOdG9RyQ3tfd+/R6
30W/R9vvRfVz7n5u0feh+ntFndD9yQ/ND80PzQ/ND80PzY/59fE0PzQ/ND80
PzQ/ND80PzQ/5tfvy2h+aH5ofmh+aH5ofszXw9P80PzQ/ND80PzQ/Jivr9fR
/ND80PzQ/ND80PzQ/ND8mK//t9H80PzQ/ND80PyY91iyx5I9luyxZI81e6zZ
Y80e22h+zHts2WPPHnv22LPHkT2O7HFkjzN7nNnjzB5X9riyx5U97uxxZ497
/LnCD80PzQ/ND80PzQ/ND80PzQ/Njz63u89h7XP1+pykPvei55j3XNqeM9hz
o3oOSO/r7n16ve+i36Pt96L6OXc/t+j7UP29ok7o/uSH5ofmh+aH5ofmx/z6
eJofmh+aH5ofmh+aH5ofmh/z6/dlND80PzQ/ND80PzQ/5uvhaX5ofmh+aH5o
fmh+zNfX62h+aH5ofmh+aH5ofmh+aH7M1//baH5ofmh+aH5ofsx7LNljyR5L
9liyx5o91uyxZo9tND/mPbbssWePPXvs2ePIHkf2OLLHmT3O7HFmjyt7XNnj
yh539rizxz3+HOGH5ofmh+aH5ofmh+aH5ofmh+aH5ofuc7z7XNY+Z6/PTeKH
7rnmPaeWH7rnSPVcEH7o3rfX+zD6vdp+T6qfe/dzjL4v1d8z6kZ/8kPzQ/ND
80PzY359PM0PzQ/ND80PzQ/ND80PzY/59fsymh+aH5ofmh+aH5of8/XwND80
PzQ/ND80PzQ/5uvrdTQ/ND80PzQ/ND80PzQ/ND/m6/9tND80PzQ/ND80P+Y9
luyxZI8leyzZY80ea/ZYs8c2mh/zHlv22LPHnj327HFkjyN7HNnjzB5n9jiz
x5U9ruxxZY87e9zZ4x5/bvBD80PzQ/ND80PzQ/ND80PzQ/ND80Pzo8/t7nNY
+1y9Piepz73oOeY9l7bnDPbcqJ4D0vu6e59e77vo92j7vah+zt3PLfo+VH+v
qBO6P/mh+aH5ofkxvz6e5ofmh+aH5ofmh+aH5ofmx/z6fRnND80PzQ/ND80P
zY/5eniaH5ofmh+aH5ofmh/z9fU6mh+aH5ofmh+aH5ofmh+aH/P1/zaaH5of
mh+aH5of8x5L9liyx5I9luyxZo81e6zZYxvNj3mPLXvs2WPPHnv2OLLHkT2O
7HFmjzN7nNnjyh5X9riyx5097uxxjz8n+KH5ofmh+aH5ofmh+aH5ofmh+aH5
ofmh+dHndvc5rH2uXp+T1Ode9BzznkvbcwZ7blTPAel93b1Pr/dd9Hu0/V5U
P+fu5xZ9H6q/V9QJ3Z/80PzQ/JhfH0/zQ/ND80PzQ/ND80PzQ/Njfv2+jOaH
5ofmh+aH5ofmx3w9PM0PzQ/ND80PzQ/Nj/n6eh3ND80PzQ/ND80PzQ/ND82P
+fp/G80PzQ/ND80PzY95jyV7LNljyR5L9lizx5o91uyxjebHvMeWPfbssWeP
PXsc2ePIHkf2OLPHmT3O7HFljyt7XNnjzh539rjHnwv80PzQ/ND80PzQ/ND8
0PzQ/ND80PzQ/ND80Pzoc7v7HNY+V6/PSepzL3qOec+l7TmDPTeq54D0vu7e
p9f7Lvo92n4vqp9z93OLvg/V3yvqhO5Pfmh+zK+Pp/mh+aH5ofmh+aH5ofmh
+TG/fl9G80PzQ/ND80PzQ/Njvh6e5ofmh+aH5ofmh+bHfH29juaH5ofmh+aH
5ofmh+aH5sd8/b+N5ofmh+aH5ofmx7zHkj2W7LFkjyV7rNljzR5r9thG82Pe
Y8see/bYs8eePY7scWSPI3uc2ePMHmf2uLLHlT2u7HFnjzt73OPPAX5ofmh+
aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+9LndfQ5rn6vX5yT1uRc9x7zn0vac
wZ4b1XNAel9379PrfRf9Hm2/F9XPufu5Rd+H6u8VdUL3Jz/m18fT/ND80PzQ
/ND80PzQ/ND8mF+/L6P5ofmh+aH5ofmh+TFfD0/zQ/ND80PzQ/ND82O+vl5H
80PzQ/ND80PzQ/ND80PzY77+30bzQ/ND80PzQ/Nj3mPJHkv2WLLHkj3W7LFm
jzV7bKP5Me+xZY89e+zZY88eR/Y4sseRPc7scWaPM3tc2ePKHlf2uLPHnT3u
cd3zQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/c53n0uKz90n5vU
52DwQ/ec2p472HOkei5I7/PufXu9D4Mfut+T4ofu5xh9X6q/Z9SN/uTH/Pr6
s6P5ofmh+aH5ofmh+aH5Mb9+X0bzQ/ND80PzQ/ND82O+Hp7mh+aH5ofmh+aH
5sd8fb2O5ofmh+aH5ofmh+aH5ofmx3z9v43mh+aH5ofmh+bHvMeSPZbssWSP
JXus2WPNHmv22EbzY95jyx579tizx549juxxZI8je5zZ48weZ/a4sseVPa7s
cWePO3vc4zrnh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH7nO8
+aH7nL0+N4kfuuea95zanjvYc6R6Lkjv8+59e/zQ/V4tP3Q/9+7nGH1fqr9n
1I3+5Ifmh+aH5ofmh+aH5ofmx/z6fRnND80PzQ/ND80PzY/5eniaH5ofmh+a
H5ofmh/z9fU6mh+aH5ofmh+aH5ofmh+aH/P1/zaaH5ofmh+aH5of8x5L9liy
x5I9luyxZo81e6zZYxvNj3mPLXvs2WPPHnv2OLLHkT2O7HFmjzN7nNnjyh5X
9riyx5097uxxj+uaH5ofmh/znwPfjuaH5ofmh+aH5ofmh+aH5ofmh+aH5ofm
h+aH5kef293nsPa5en1OUp970XPMey5tzxnsuVE9B6T3dfc+vd530e/R9ntR
/Zy7n1v0faj+XlEn5tfX85Mfmh+aH5ofmh+aH5of8+v3ZTQ/ND80PzQ/ND80
P+br4Wl+aH5ofmh+aH5ofszX1+tofmh+aH5ofmh+aH5ofmh+zNf/22h+aH5o
fmh+aH7MeyzZY8keS/ZYsseaPdbssWaPbTQ/5j227LFnjz177NnjyB5H9jiy
x5k9zuxxZo8re1zZ48oed/a4s8ed6/jDaH5ofsz/3vjtaH5ofmh+aH5ofmh+
aH5ofmh+aH5ofmh+aH5ofmh+9LndfQ5rn6vX5yT1uRc9x7zn0vacwZ4b1XNA
el9379PrfRf9Hm2/F9XPufu5Rd+H6u8VdUL3Jz80PzQ/ND80PzQ/5tfvy2h+
aH5ofmh+aH5ofszXw9P80PzQ/ND80PzQ/Jivr9fR/ND80PzQ/ND80PzQ/ND8
mK//t9H80PzQ/ND80PyY91iyx5I9luyxZI81e6zZY80e22h+zHts2WPPHnv2
2LPHkT2O7HFkjzN7nNnjzB5X9riyx5U97uxxZ487/973YTQ/ND/m9xm+Hc0P
zQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND82PPre7z2Htc/X6nKQ+96Ln
mPdc2p4z2HOjeg5I7+vufXq976Lfo+33ovo5dz+36PtQ/b2iTuj+5Ifmh+aH
5ofmx/z6fRnND80PzQ/ND80PzY/5eniaH5ofmh+aH5ofmh/z9fU6mh+aH5of
mh+aH5ofmh+aH/P1/zaaH5ofmh+aH5of8x5L9liyx5I9luyxZo81e6zZYxvN
j3mPLXvs2WPPHnv2OLLHkT2O7HFmjzN7nNnjyh5X9riyx5097uxx532CD6P5
ofkxvy/97Wh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH70ud19
Dmufq9fnJPW5Fz3HvOfS9pzBnhvVc0B6X3fv0+t9F/0ebb8X1c+5+7lF34fq
7xV1QvcnPzQ/ND80P+bX78tofmh+aH5ofmh+aH7M18PT/ND80PzQ/ND80PyY
r6/X0fzQ/ND80PzQ/ND80PzQ/Jiv/7fR/ND80PzQ/ND8mPdYsseSPZbssWSP
NXus2WPNHttofsx7bNljzx579tizx5E9juxxZI8ze5zZ48weV/a4sseVPe7s
cWePO+8rfxjND82P+XPMb0fzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND
80PzQ/ND80P3Od59Lmufs9fnJvU5GD3XvOfU8kPzQ/ND9z7v3rfX+zD6vVp+
zK+Pp/s5Rt+X6u8ZdaM/+aH5ofkxv35fRvND80PzQ/ND80PzY74enuaH5ofm
h+aH5ofmx3x9vY7mh+aH5ofmh+aH5ofmh+bHfP2/jeaH5ofmh+aH5se8x5I9
luyxZI8le6zZY80ea/bYRvNj3mPLHnv22LPHnj2O7HFkjyN7nNnjzB5n9riy
x5U9ruxxZ487e9z5HPLDaH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+
aH5ofmh+aH5ofmh+aH7oPse7z2Xtc/b63KQ+B6PnmvND80PzQ/dckN7n3fv2
eh8GP+bXx9P93LufY/R9qf6eUTf6kx+aH/Pr92U0PzQ/ND80PzQ/ND/m6+Fp
fmh+aH5ofmh+aH7M19fraH5ofmh+aH5ofmh+aH5ofszX/9tofmh+aH5ofmh+
zHss2WPJHkv2WLLHmj3W7LFmj200P+Y9tuyxZ489e+zZ48geR/Y4sseZPc7s
cWaPK3tc2ePKHnf2uLPHne+tfBjND82P+XuS347mh+aH5ofmh+aH5ofmh+aH
5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+ZHn9vd57D2uXp9TlKfe9FzzHsubc8Z
7LlRPQek93X3Pr3ed9Hv0fZ7Uf2cu59b9H2o/l5RJ3R/8mN+/b6M5ofmh+aH
5ofmh+bHfD08zQ/ND80PzQ/ND82P+fp6Hc0PzQ/ND80PzQ/ND80PzY/5+n8b
zQ/ND80PzQ/Nj3mPJXss2WPJHkv2WLPHmj3W7LGN5se8x5Y99uyxZ489exzZ
48geR/Y4s8eZPc7scWWPK3tc2ePOHnf2uPM9xw+j+aH5MX+v/tvR/ND80PzQ
/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80Pzoc7v7HNY+V6/P
SepzL3qOec+l7TmDPTeq54D0vu7ep9f7Lvo92n4vqp9z93OLvg/V3yvqhO5P
fmh+aH5ofmh+aH5ofszXw9P80PzQ/ND80PzQ/Jivr9fR/ND80PzQ/ND80PzQ
/ND8mK//t9H80PzQ/ND80PyY91iyx5I9luyxZI81e6zZY80e22h+zHts2WPP
Hnv22LPHkT2O7HFkjzN7nNnjzB5X9riyx5U97uxxZ48734v/MJofmh/zfVjf
juaH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+ZH
n9vd57D2uXp9TlKfe9FzzHsubc8Z7LlRPQek93X3Pr3ed9Hv0fZ7Uf2cu59b
9H2o/l5RJ+bX7/OTH5ofmh+aH5ofmh/z9fA0PzQ/ND80PzQ/ND/m6+t1ND80
PzQ/ND80PzQ/ND80P+br/200PzQ/ND80PzQ/5j2W7LFkjyV7LNljzR5r9liz
xzaaH/MeW/bYs8eePfbscWSPI3sc2ePMHmf2OLPHlT2u7HFljzt73Nnjzn1U
H0bzY77Ovsl9u9+O5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofm
h+aH5ofmh+aH5ofmR5/b3eew9rl6fU5Sn3vRc8x7Lm3PGey5UT0HpPd19z69
3nfR79H2e1H9nLufW/R9qP5eUSd0f/JD80PzQ/ND82O+Hp7mh+aH5ofmh+aH
5sd8fb2O5ofmh+aH5ofmh+aH5ofmx3z9v43mh+aH5ofmh+bHvMeSPZbssWSP
JXus2WPNHmv22EbzY95jyx579tizx549juxxZI8je5zZ48weZ/a4sseVPa7s
cWePO3vcue/2w2h+zP9e9k3Oefh2ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/
ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/dJ/jzQ/ND80P3edg9FzznlPbcwf5
Mb8+nu593r1vr/dh9Hu1/Z4UP/q5Rd+H6u8VdUL3Jz80PzQ/ND/m6+Fpfmh+
aH5ofmh+aH7M19fraH5ofmh+aH5ofmh+aH5ofszX/9tofmh+aH5ofmh+zHss
2WPJHkv2WLLHmj3W7LFmj200P+Y9tuyxZ489e+zZ48geR/Y4sseZPc7scWaP
K3tc2ePKHnf2uLPHnXMaPozmx/x7/Dc5F+jb0fzQ/ND80PzQ/ND80PzQ/ND8
0PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQfW5Sn4PR
c817Ti0/5tfH0z0XpPd597693ofR79Xyo59z93OLvg/V3yvqhO5Pfmh+aH7M
18PT/ND80PzQ/ND80PyYr6/X0fzQ/ND80PzQ/ND80PzQ/Jiv/7fR/ND80PzQ
/ND8mPdYsseSPZbssWSPNXus2WPNHttofsx7bNljzx579tizx5E9juxxZI8z
e5zZ48weV/a4sseVPe7scWePO+f6fBjNj/l9329yjty3o/mh+aH5ofmh+aH5
ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+dHndvc5
rH2uXp+T1Ode9BzznkvbcwZ7blTPAel93b1Pr/dd9Hu0/V5UP+fu5xZ9H6q/
V9QJ3Z/80PyYr4en+aH5ofmh+aH5ofkxX1+vo/mh+aH5ofmh+aH5ofmh+TFf
/2+j+aH5ofmh+aH5Me+wZI8leyzZY8kea/ZYs8eaPbbR/Jj32LLHnj327LFn
jyN7HNnjyB5n9jizx5k9ruxxZY8re9zZ484ed86B+zCaH/PnhN/k3NFvR/ND
80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80Pz
Q/ND80Pzo8/t7nNY+1y9Piepz73oOeY9l7bnDPbcqJ4D0vu6e59e77vo92j7
vah+zt3PLfo+VH+vqBO6P/kxXw9P80PzQ/ND80PzQ/Njvr5eR/ND80PzQ/ND
80PzQ/ND82O+/t9G80PzQ/ND80PzY95jyQ5L9liyx5I91uyxZo81e2yj+THv
sWWPPXvs2WPPHkf2OLLHkT3O7HFmjzN7XNnjyh5X9rizx5097pwb+mE0P+bv
lXyTc6q/Hc0PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80P
zQ/ND80PzQ/ND80PzQ/ND82PPre7z2Htc/X6nKQ+96LnmPdc2p4z2HOjeg5I
7+vufXq976Lfo+33ovo5dz+36PtQ/b2iTuj+5Ifmh+aH5ofmh+aH5sd8fb2O
5ofmh+aH5ofmh+aH5ofmx3z9v43mh+aH5ofmh+bHvMeSPZbssGSPJXus2WPN
Hmv22EbzY95jyx579tizx549juxxZI8je5zZ48weZ/a4sseVPa7scWePO3vc
OWf6w2h+zN9D/CbPNfh2ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/
ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80P/rc7j6Htc/V63OS+tyLnmPe
c2l7zmDPjeo5IL2vu/fp9b6Lfo+234vq59z93KLvQ/X3ijoxXw/PT35ofmh+
aH5ofmh+zNfX62h+aH5ofmh+aH5ofmh+aH7M1//baH5ofmh+aH5ofsx7LNlj
yR5Ldliyx5o91uyxZo9tND/mPbbssWePPXvs2ePIHkf2OLLHmT3O7HFmjyt7
XNnjyh539rizx53nEnwYzY/5e+vf5Dk43+a6+DiaH5ofmh+aH5ofmh+aH5of
mh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5offW53
n8Pa5+r1OUl97kXPMe+5tD1nsOdG9RyQ3tfd+/R630W/R9vvRfVz7n5u0feh
+ntFndD9yQ/ND80PzQ/Nj/n6eh3ND80PzQ/ND80PzQ/ND82P+fp/G80PzQ/N
D80PzY95jyV7LNljyR5Ldlizx5o91uyxjebHvMeWPfbssWePPXsc2ePIHkf2
OLPHmT3O7HFljyt7XNnjzh539rjzHJsPo/kx3+f0TZ6b9m3+PerjaH5ofmh+
aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5o
fmh+aH5ofmh+9LndfQ5rn6vX5yT1uRc9x7zn0vacwZ4b1XNAel9379PrfRf9
Hm2/F9XPufu5Rd+H6u8VdUL3Jz80PzQ/ND/m6+t1ND80PzQ/ND80PzQ/ND80
P+br/200PzQ/ND80PzQ/5j2W7LFkjyV7LNljzQ5r9lizxzaaH/MeW/bYs8ee
PfbscWSPI3sc2ePMHmf2OLPHlT2u7HFljzt73NnjznPPPozmx3xf7Dd5zua3
+b3742h+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5o
fmh+aH5ofmh+aH5ofmh+aH5ofmh+9LndfQ5rn6vX5yT1uRc9x7zn0vacwZ4b
1XNAel9379PrfRf9Hm2/F9XPufu5Rd+H6u8VdUL3Jz80PzQ/5uvrdTQ/ND80
PzQ/ND80PzQ/ND/m6/9tND80PzQ/ND80P+Y9luyxZI8leyzZY80ea3ZYs8c2
mh/zHlv22LPHnj327HFkjyN7HNnjzB5n9jizx5U9ruxxZY87e9zZ485zMj+M
5sd8jsI3eS7zt3mf9uNofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5o
fmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+9LndfQ5rn6vX5yT1
uRc9x7zn0vacwZ4b1XNAel9379PrfRf9Hm2/F9XPufu5Rd+H6u8VdUL3Jz80
P+br63U0PzQ/ND80PzQ/ND80PzQ/5uv/bTQ/ND80PzQ/ND/mPZbssWSPJXss
2WPNHmv2WLPDNpof8x5b9tizx5499uxxZI8jexzZ48weZ/Y4s8eVPa7scWWP
O3vc2ePOc5U/jOaH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofm
h+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmx/z6eLrP8e5z
WfucvT43qc/B4IfuObU9d7DnSPVckN7n3fv2eh9Gv1fb70n1c+9+jtH3pfp7
Rt3oT37M19fraH5ofmh+aH5ofmh+aH5ofszX/9tofmh+aH5ofmh+zHss2WPJ
Hkv2WLLHmj3W7LFmj200P+Y9tuyxZ489e+zZ48geR/Y4sseZPc7scWaPK3tc
2ePKHnf2uLPHPV6H/ND80PzQ/Ji/B/JxND80PzQ/ND80PzQ/ND80PzQ/ND80
PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80P+bX
x9P80H2Od5/L2ufs9blJ/NA917zn1PbcwZ4j1XNBep9379vrfRj9Xm2/J9XP
vfs5Rt+X6u8ZdaM/+aH5ofmh+aH5ofmh+aH5ofkxX/9vo/mh+aH5ofmh+THv
sWSPJXss2WPJHmv2WLPHmj220fyYd9iyx5499uyxZ48jexzZ48geZ/Y4s8eZ
Pa7scWWPK3vc2ePOHvd43fFD80PzQ/Nj/t7gx9H80PzQ/ND80PzQ/ND80PzQ
/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND8
0PyYXx9P80PzQ/c53n0ua5+zxw/d52D0XPOeU9tzB3uOVM8F6X3evW+v92H0
e7X9nlQ/9+7nGH1fqr9n1I3+5Ifmh+aH5ofmh+aH5ofmx3z9v43mh+aH5ofm
h+bHvMeSPZbssWSPJXus2WPNHmv22EbzY95jyw579tizx549juxxZI8je5zZ
48weZ/a4sseVPa7scWePO3vc43XGD80PzQ/ND80PzY/5dfx5ND80PzQ/ND80
PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/
ND80PzQ/5tfH0/zQ/ND80H2Od5/Lyg/d5yb1ORg917zn1PbcwZ4j1XNBep93
79vrfRj9Xm2/J9XPvfs5Rt+X6u8ZdaM/+aH5ofmh+aH5ofmh+TFf/2+j+aH5
ofmh+aH5Me+xZI8leyzZY8kea/ZYs8eaPbbR/Jj32LLHnh327LFnjyN7HNnj
yB5n9jizx5k9ruxxZY8re9zZ484e93hd8UPzQ/ND80PzQ/Nj/veez6P5ofmh
+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5
ofmh+aH5ofmh+TG/Pp7mh+aH5ofmh+5zvPmh+5y9Pjepz8HoueY9p7bnDvYc
qZ4L0vu8e99e78Po92r7Pal+7s0P3fel+ntG3ehPfmh+aH5ofmh+aH7M1//b
aH5ofmh+aH5ofsx7LNljyR5L9liyx5o91uyxZo9tND/mPbbssWePPTvs2ePI
Hkf2OLLHmT3O7HFmjyt7XNnjyh539rizxz1eR/zQ/JifM/PNaH7M97F+HM2P
+ffkz6P5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh
+aH5ofmh+aH5ofmh+aH5ofmh+TG/Pp7mh+aH5ofmh+ZHn9vd57D2uXp9TlKf
e9FzzHsubc8Z7LlRPQek93X3Pr3ed9Hv0fZ7Uf2cu59b9H2o/l5RJ3R/8kPz
Q/ND80PzY77+30bzQ/ND80PzQ/Nj3mPJHkv2WLLHkj3W7LFmjzV7bKP5Me+x
ZY89e+zZY88OR/Y4sseRPc7scWaPM3tc2ePKHlf2uLPHnT3u8brhh+bH/Fyy
b0bzYz734ONofszvq34ezQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80P
zQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND82P+fXxND80PzQ/ND80PzQ/
+tzuPoe1z9Xrc5L63IueY95zaXvOYM+N6jkgva+79+n1vot+j7bfi+rn3P3c
ou9D9feKOqH7kx+aH5ofmh/z9f82mh+aH5ofmh+aH/MeS/ZYsseSPZbssWaP
NXus2WMbzY95jy177Nljzx579jiyw5E9juxxZo8ze5zZ48oeV/a4ssedPe7s
cY/XCT80P+bnWH4zmh/zOTkfR/Nj/hzu82h+aH5ofmh+aH5ofmh+aH5ofmh+
aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofsyvj6f5
ofmh+aH5ofmh+aH50ed29zmsfa5en5PU5170HPOeS9tzBntuVM8B6X3dvU+v
9130e7T9XlQ/5+7nFn0fqr9X1Andn/zQ/ND8mK//t9H80PzQ/ND80PyY91iy
x5I9luyxZI81e6zZY80e22h+zHts2WPPHnv22LPHkT2O7HBkjzN7nNnjzB5X
9riyx5U97uxxZ497vC74ofkxP/f4m9H8mM9V+ziaH/P3Nj6P5ofmh+aH5ofm
h+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH
5ofmh+bH/Pp4mh+aH5ofmh+aH5ofmh+aH31ud5/D2ufq9TlJfe5FzzHvubQ9
Z7DnRvUckN7X3fv0et9Fv0fb70X1c+5+btH3ofp7RZ3Q/ckPzY/5+n8bzQ/N
D80PzQ/Nj3mPJXss2WPJHkv2WLPHmj3W7LGN5se8x5Y99uyxZ489exzZ48ge
R3Y4s8eZPc7scWWPK3tc2ePOHnf2uMfrgB+aH5ofmh/zOZwfR/Nj/p7f59H8
0PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ
/ND80PzQ/ND80PzQ/JhfH0/zQ/ND80PzQ/ND80PzQ/Njfv2+vHtud5/D2ufq
9TlJfe5FzzHvubQ9Z7DnRvUckN7X3fv0et9Fv0fb70X1c+5+btH3ofp7RZ3Q
/cmP+fp/G80PzQ/ND80PzY95jyV7LNljyR5L9lizx5o91uyxjebHvMeWPfbs
sWePPXsc2ePIHkf2OLPDmT3O7HFljyt7XNnjzh539rjH7vzQ/ND80PyYz23+
OJof8/fCP4/mh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofm
h+aH5ofmh+aH5ofmh+aH5ofmh+aH5sf8+niaH5ofmh+aH5ofmh+aH5of8+v3
ZTQ/+tzuPoe1z9Xrc5L63IueY95zaXvOYM+N6jkgva+79+n1vot+j7bfi+rn
3P3cou9D9feKOqH7kx+aH5ofmh+aH5of8x5L9liyx5I9luyxZo81e6zZYxvN
j3mPLXvs2WPPHnv2OLLHkT2O7HFmjzM7nNnjyh5X9riyx5097uxxj535ofmh
+aH5MZ/z/3E0P+b7iD6P5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH
5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+bH/Pp4mh+aH5ofmh+aH5of
mh+aH/Pr92U0PzQ/+tzuPoe1z9Xrc5L63IueY95zaXvOYM+N6jkgva+79+n1
vot+j7bfi+rn3P3cou9D9feKOjFf/89Pfmh+aH5ofmh+zHss2WPJHkv2WLLH
mj3W7LFmj200P+Y9tuyxZ489e+zZ48geR/Y4sseZPc7scWaHK3tc2ePKHnf2
uLPHPXblh+aH5ofmx/xcmI95nXzKfaefR/ND80PzQ/ND80PzQ/ND80PzQ/ND
80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzY359PM0P
zQ/ND80PzQ/ND80PzY/59fsymh+aH5offW53n8Pa5+r1OUl97kXPMe+5tD1n
sOdG9RyQ3tfd+/R630W/R9vvRfVz7n5u0feh+ntFndD9yQ/ND80PzY95jyV7
LNljyR5L9lizx5o91uyxjebHvMeWPfbssWePPXsc2ePIHkf2OLPHmT3O7HFl
hyt7XNnjzh539rjHjvzQ/ND80PzQ/Jj/veJTzin4PJofmh+aH5ofmh+aH5of
mh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+a
H/Pr42l+aH5ofmh+aH5ofmh+aH7Mr9+X0fzQ/ND80PzQfY53n8va5+z1uUl9
DkbPNe85tfzQ/Jivr/f3devet9f7MPq92n5Pqp9793OMvi/V3zPqRn/yQ/ND
82PeY8keS/ZYsseSPdbssWaPNXtso/kx77Fljz177Nljzx5H9jiyx5E9zuxx
Zo8ze1zZ48oOV/a4s8edPe6xGz80PzQ/ND80P+bfQz/lXJvPo/mh+aH5ofmh
+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5
ofmh+aH5Mb8+nuaH5ofmh+aH5ofmh+aH5sf8+n0ZzQ/ND80PzQ/ND93nePe5
rH3OXp+b1Odg9Fxzfmh+zNfX+3NAdO/z7n17vQ+j36vt96T6uXc/x+j7Uv09
o270Jz80P+Y9luyxZI8leyzZY80ea/ZYs8c2mh/zHlv22LPHnj327HFkjyN7
HNnjzB5n9jizx5U9ruxxZYc7e9zZ4x478UPzQ/ND80PzY37f8lPOQfs8mh+a
H5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5of
mh+aH5ofmh+aH5of8+vjaX5ofmh+aH5ofmh+aH5ofsyv35fR/ND80PzQ/ND8
0PyYr4en+1zWPmevz03qczD4ofkxX1/vz43S/NC9z7v37fU+jH6vtt+T6ufe
/Ryj70vN/1773o3+5Me8x5I9luyxZI8le6zZY80ea/bYRvNj3mPLHnv22LPH
nj2O7HFkjyN7nNnjzB5n9riyx5U9ruxxZ4c7e9xjF35ofmh+aH5ofsyfc33K
uZmfR/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80Pz
Q/ND80PzQ/ND80PzQ/ND80PzY359PM0PzQ/ND80PzQ/ND80PzY/59fsymh+a
H5ofmh+aH5of8/XwdJ/j3eey9jl7fW4SPzQ/5uvr/TmDmh+654L0Pu/et9f7
MPq92n5Pqp9793OM+X2Q979n1I3+5Me8x5I9luyxZI81e6zZY80e22h+zHts
2WPPHnv22LPHkT2O7HFkjzN7nNnjzB5X9riyx5U97uxxZ4d77MAPzQ/ND80P
zY/5exGfcs7y59H80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ
/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/JhfH0/zQ/ND80PzQ/ND80PzQ/Nj
fv2+jOaH5ofmh+aH5ofmx3w9PM2PPre7z2Htc/X6nKQ+96LnmPdc2p4z2HOj
eg5I7+vufXq976Lfo+33ovo5dz+36PtQ/b2iTsx7LNljyR5L9liyx5o91uyx
Zo9tND/mPbbssWePPXvs2ePIHkf2OLLHmT3O7HFmjyt7XNnjyh539rizxz3+
ufND80PzQ/ND82P+Ht2nnMv/eTQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/
ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80P+bXx9P80PzQ/ND8
0PzQ/ND80PyYX78vo/mh+aH5Mf+59N1ofmh+zNfD0/zQ/Ohzu/sc1j5Xr89J
6nMveo55z6XtOYM9N6rngPS+7t6n1/su+j3afi+qn3P3c4u+D9XfK+rEvMeS
PZbssWSPNXus2WPNHttofsx7bNljzx579tizx5E9juxxZI8ze5zZ48weV/a4
sseVPe7scWePe/xz5ofmh+aH5ofmx/y96095jsvn0fzQ/ND80PzQ/ND80PzQ
/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND8
mF8fT/ND80PzQ/ND80PzQ/ND82N+/b6M5ofmh+bH/O+x3+XPpaf5MV8PT/ND
80Pzo8/t7nNY+1y9Piepz73oOeY9l7bnDPbcqJ4D0vu6e59e77vo92j7vah+
zt3PLfo+VH+vqBPzHkv2WLLHmj3W7LFmj200P+Y9tuyxZ489e+zZ48geR/Y4
sseZPc7scWaPK3tc2ePKHnf2uLPHPf658kPzQ/ND80PzY75P51Oe+/V5ND80
PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/
ND80PzQ/ND80PzQ/5tfH0/zQ/ND80PzQ/ND80PzQ/Jhfvy+j+aH5ofkxv+/x
Xf499ml+zNfD0/zQ/ND80Pzoc7v7HNY+V6/PSepzL3qOec+l7TmDPTeq54D0
vu7ep9f7Lvo92n4vqp9z93OLvg/V3yvqxLzHkj3W7LFmjzV7bKP5Me+xZY89
e+zZY88eR/Y4sseRPc7scWaPM3tc2ePKHlf2uLPHnT3u8c+RH5ofmh+aH/MO
H3Nf56c8J/LzaH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+
aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+zK+Pp/mh+aH5ofmh+aH5ofmh+TG/
fl9G80PzQ/Njfp/8u7zv8TQ/5uvhaX5ofmh+aH5ofvS53X0Oa5+r1+ck9bkX
Pce859L2nMGeG9VzQHpfd+/T630X/R5tvxfVz7n7uUXfh+rvFXVi3mPNHmv2
WLPHNpof8x5b9tizx5499uxxZI8jexzZ48weZ/Y4s8eVPa7scWWPO3vc2eMe
/9z4ofmh+aH5Mbv9MecAfMpzhT+P5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH
5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+bH/Pp4mh+aH5of
mh+aH5ofmh+aH/Pr92U0PzQ/ND/mz1W/y/vkT/Njvh6e5ofmh+aH5ofmh+ZH
n9vd57D2uXp9TlKfe9FzzHsubc8Z7LlRPQek93X3Pr3ed9Hv0fZ7Uf2cu59b
9H2o/l5RJ+Y91uyxZo9tND/mPbbssWePPXvs2ePIHkf2OLLHmT3O7HFmjyt7
XNnjyh539rizxz3+OfFD80PzQ/Nj/j3vY86N+ZTn0H8ezQ/ND80PzQ/ND80P
zQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/N
D82P+fXxND80PzQ/ND80PzQ/ND80P+bX78tofmh+aH7M38P5Lp+rPs2P+Xp4
mh/zn0tP80PzQ/ND82O+vt4/t7vPYe1z9fqcpD73oueY91zanjPYc6N6Dkjv
6+59er3vot+j7fei+jl3P7fo+1D9vaJOzHus2WMbzY95jy177Nljzx579jiy
x5E9juxxZo8ze5zZ48oeV/a4ssedPe7scY9/LvzQ/ND80PyY3xf8mHPGPo3m
h+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH
5ofmh+aH5ofmh+aH5ofmx/z6eJofmh+aH5ofmh+aH5ofmh/z6/dlND80PzQ/
5u9tfpfv4TzNj/l6eJof87/HPs0PzQ/ND82P+fp6ntPNjz63u89h7XP1+pyk
Pvei55j3XNqeM9hzo3oOSO/r7n16ve+i36Pt96L6OXc/t+j7UP29ok7Mezw/
+THvsWWPPXvs2WPPHkf2OLLHkT3O7HFmjzN7XNnjyh5X9rizx5097vHPgR+a
H5ofmh/z50gfcy7lp9H80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND8
0PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND8mF8fT/ND80PzQ/ND80Pz
Q/ND82N+/b6M5ofmh+bH/D3/7/K9zaf5MV8PT/Njft/jaX7Mfy79YDQ/ND/m
6+t1ND80P/rc7j6Htc/V63OS+tyLnmPec2l7zmDPjeo5IL2vu/fp9b6Lfo+2
34vq59z93KLvQ/X3ijqh+5Mf8x579tizx549juxxZI8je5zZ48weZ/a4sseV
Pa7scWePO3vc4383PzQ/ND80P+bvHXzMOcafRvND80PzQ/ND80PzQ/ND80Pz
Q/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/Nj
fn08zQ/ND80PzQ/ND80PzQ/Nj/n1+zKaH5ofmh+aH5ofmh/z9fA0P+b3yZ/m
x/zvsT8YzQ/Nj/n6eh3ND80PzQ/d53j3uax9zl6fm9TnYPRc855Tyw/ND80P
zY95j/f3Xcx7vP9eVD/n7ucWfR+qv1fUiXmPLXvs2WPPHnv2OLLHkT2O7HFm
jzN7nNnjyh5X9riyx5097uxxj/+d/ND80PzQ/Ji/p/Yx595/Gs0PzQ/ND80P
zQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/N
D80PzQ/ND82P+fXxND80PzQ/ND80PzQ/ND80P+bX78tofmh+aH5ofmh+zN/z
f5of8/dw/kI+V32aH/P7Hj8YzY/5z6Wn+aH5ofmh+aH5ofsc7z6Xtc/Z63OT
+hyMnmvOD80PzQ/Nj3mP9/fpzXu8/x7tvMf7z7n7uUXfh+rvFXVi3mPPHnv2
2LPHkT2O7HFkjzN7nNnjzB5X9riyx5U97uxxZ497/O/ih+aH5ofmh+aH5sf8
z+3zaH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+
aH5ofmh+aH5ofmh+aH5ofmh+zK+Pp/mh+aH5ofmh+aH5ofmh+TG/fl9G80Pz
Q/ND80PzQ/Njvh6e5ofmh+aH5ofmh+bHfH29juaH5ofmh+aH5ofuc7z7XNY+
Z6/PTepzMPih+aH5ofkx7/H+vu55j/f3Xcx7vP9e1LzHmj3evw8177Fljz17
7Nljzx5H9jiyx5E9zuxxZo8ze1zZ48oeV/a4s8edPe7xv4Mfmh+aH5ofmh+a
H7Ozn0fzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND
80PzQ/ND80PzQ/ND80PzQ/ND82N+fTzND80PzQ/ND80PzQ/ND82P+fX7Mpof
mh+aH5ofmh+aH/P18DQ/ND80PzQ/ND80P+br6zV/Lj3ND80PzQ/ND80P3ed4
97msfc5en5vED80PzQ/Nj3mP9+eAzHu8v09v3uP992jnPdbs8f5zi3mPLXu8
d2LeY88eR/Y4sseRPc7scWaPM3tc2ePKHlf2uLPHnT3u8ffND80PzQ/Nj/m+
yY95DuOn/F72eTQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80
PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80P+bXx9P80PzQ/ND80PzQ/ND80PyY
X78vo/mh+aH5MZ9r913OKXqaH/P18DQ/5u/5P82P+Xs4PxjNj/l98qf5Mf97
7NP80PzQ/ND80PzQ/Ohzu/sc1j5Xr89J6nMveo55z6XtOYM9N6rngPS+7t6n
1/su+j3afi+qn3P3c4u+D9XfK+rEvMeRPY7scWSPM3uc2ePMHlf2uLLHlT3u
7HFnj3v8ffJD80PzQ/Njvs/+Y57b+ynv430ezQ/ND80PzQ/ND80PzQ/ND80P
zQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80P/f/TdebhVLxv
wFe0oVLaZamkiFalUt1pp1QKhVaKUBHtJaUNJZJSKJE94SBLi3CONRz7Esp2
bMfaYqt453td7/3M70zv+1fXp2fMmZn7mfnMPNuN/kBGfyCjPwTrB83oD2T0
BzL6Axn9gYz+QEZ/IKM/kNEfgvW3mjD6Axn9gYz+EFwHtYaxrh3N6A/B+4Fm
9IfgvDCa0R+C4zbrCKM/BPtVaUZ/CLZ70Iz+EHwuNRBGfyCjP5DRH8joD2T0
BzNvNzMPKzOvHjNPEjPvBXMdc+a6tMx1BpnrRjHXAWHO62bO02POu2COo2WO
i2L2czP7LZjtUMzvCqYnBOPRxohHGyMe7Yx4tDPi0c6IRwcjHh2MeHQw4tHJ
iEcnIx6d5LjQH8joD2T0BzL6Q3BdlgBGnvcwRr9PJGH0BzL6Axn9gYz+QEZ/
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
PwrbDozk92i8hJq0+75CKtT799CdwPPL/WHm7MvRZu5V4KivPGt7VwB8a9qg
0vC1ClzM7Ttfl/uB/e2LkuUa1RC0vbnAZLg/1FScmHWxphpiS24GeS/wB42K
iUvm23+Fe89UXY8seQmvNS595QXRv7+7bqfmkWnvoLN7fC9Lhzq/TTO0c9Jr
QBX65vx0DgTp4mHswTkf4GP1xgajF4Hk+3Gk9vBgjmoQsF1twmwOJUGX2Dk9
l2NB5Htyfb9VglpbEEgl7Q8U1UyGHUcmR85dH0y+L6+nHEirjgqGvaeernA9
nALGHh32G5aEkO/NgOip/F0OIaDjHpBSY5MKk8/91RNeGUq+P+2WKSxYdCQU
jIukRk69yYajvzzc7vx9Ce9HL97eZcqDTRsyynyO+kN7/YfGiN08mO/aLxOT
9gpkPmk6nFrNI+c/VWWKwjy5asIBWQcG9934StjaIpRTUUZfLzcd4XuBpvTf
zxqrPvvabpqjM20S9an955vJ3ha/9wr090lsC6bqV2rZnfhzUX6wr6YldjdV
vz7w4+Zsf+oP73cdOxEWQ6+DHWH86dqgEM3Z32NvTpWlWX/Va+OXcXzojHZ/
Ffjf9f2/9S3E+FL3tiXB5HtM/0Ti1ZFGwXR7XqL79p23gsn7T0zFn47CdyHk
e6t03ctBS6Fg8t5UMEPN/rtSEAwMJW03NaoGn885jjNVQuD2u6xJfUnVYGTt
Hd87Oxjc9FUSJW99hWczM5883x4M4Utujyqd/Q0W5qXp5NsGg0yb8buglG9Q
y5kt+8g7GHoOXX67YXEN3Gnry9O1CQLZU+8C3jTWQPM7/89XHoXCPcdx7+6M
rCXtIEnrhE1vGHFgw4nvmTZaYXApeM4yVTcOCAdsavPWDSPtD02qvdJxGq/h
qd5BmwleacDfsi7v6t3XpD1i5JzVRbs2hcO+K3enT/dLh1J1ufPT5YMgULzH
z4aK5xndz/rWzsEgZcRfNpaKp/ip82oZXSHgHlqTFryKB+O2fXB0zg8n7Rnb
9nbYD+i8gQe7SxwOBGZAtphyRfuiCNK+saetLf2cRQR43HNL4wdlkvPZNdv2
zHXpr4QHHt7vWrSkhi7ninr/FKPP/6VhtPAaUx7hjgeHSlt20byGLRrqSR3f
Bpui21JXg2g/b05fOe14CM3eiaPUa4JAonpD55QUep11I9FBKatIOm9gesbO
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
qDxplQxWYzZMP+JXCquuRQTfs/0AwPLNm/6VD3uEZy19wKLzYsXkFcy71pUE
DkOJwmY1dN4s01eH2aWJLYT/LtoV5V9Ns7JB85NH1PYadyYaZi1PJu9bR+Sk
hu9L+QQx6mU7o5XrwPbv+HLvC8kQu395Uu3+OjBvSwxdtSsZyvd969XYxCPt
RnMsuMKPWksJe3SMEJ1hVQcdQ/MOXDJLhjNN3XskqeNxndizKif8E0jN/Th7
P3U8uL35sYYlL6n9paf1nOQ3JUPu+PYvvaPLwGfvXJ+Pf5JJf/xFW0/HlqMp
8FTRsIxrVQY533seJCSnkP55Vmt6kEZ1Crz8al84UFIGeyVcJcI9k+GxSqTm
hVY6j1jN9/7Ma4n078/cu/WvxVeat2lPDBzTxoesLyHTYsanQFSFim3GrTpo
v+Wp5KOTQt737NdOed8VkgK6q1iuJlF1cEvqrPdm3xQwueV6XWkDj7SbrTrl
OXHBnzLChyarR23KqYOgweFGC+amkP7a7Hm8A4/f00zGCaqYSj+h9rdDRFha
wjAVzm/w9bNQLwfzAP3xXs6pZDwC55l9yeZyav8nXnAVXpbDzQtvvUYkpoDU
jk0nxX/SedOS95U99zaj9x+2e+mNSy40X5iwVjKjhw8jduVp36tKIf2j9yPe
vTxqSbPkuOAfagP/jktxldt3Z24YzcPels094ULzWc39aWHWneCpmqG0NpRN
vit2zrhgGBXBhsdFH836R8bCs6QJ+7Ipxve2Q1LWx77Fsqnvx5SrvdR7kn/z
m7tT37KJVx8dTnoS+Z4NinkzNGLEEiFk/iljnY2pULVioDWusg5eym9vGDyb
St63pwj3nhj9gU2eu+YNY4RHsNkgfvfSw2P330NG+9N9X76mQuPf3KXJI+sh
+NLOUTeocnwOnZrf+ZuTTR1vSkDmevEk6Dh06Z7pZza5zzY9n/e8tJAN6rke
ZR82J8MBC63PvkVsUs+0Cpznz6lkg93l8CMyt6l69mtV5OQqNrlOrzmL1zyp
Z4PJiRtHDTip4Bxy3TqmgU3aW33P+jRJt7Eh/plbtr0wB/7EzHtr2s4m7W+v
ZjkEhf1kw+/cuXJ+G9LA9aKZm2wPm7S/jdkZuXXRXzZUO9g+yr6RDo1tyoHT
ulLhwOj1G2uBB50NuafyB9n0euN3xqW/HMGBewtcFUelZMDa56vbT43ikPY1
D7O2aT1jOVC7QJl/WCiLHKd+eKDBkmEVkHNhMLZjPIe01+R9ixqaN4Vij7pp
VZANhTI3122fxiHtNaErd+YsluGAkXTykRv2n6FLtuulnRyHtNfkWGYvFFfg
wPXPSRN1P+VA3H3jAzfmc8j3uu82J+F4FQ784l7es28oF64rO87bu5hDvtdv
uBnPXbScA4bmMze7ABdq7+Ykd6lxyPd6YO7kTbZrOPBppM3z35AP3app7P3A
Id9LVo17Pjls5MBgq0SrVk0+LJFTvOm8hUOvZxuQcPKgFgcOX/V+Hnu9AHru
W+fd1uaQ99+Dx5XWC+lwgCsut271rEIw8OHHbNXlkPdfbR/zMst9HBio/Xi1
MqUQ6j81NuQbcsj7Lxk3vGDjqTiFekj+JD7kf5ADvGTFH0+Mi2D7z9nJLn2p
EF434VOiKfX8v31cNftQKpitG+avRN3vruddl8sf5ZD3oRNaZnohJtT1b1u1
x1K4GMad+71jkxmHvA/ZuBRoXzPngK76hiP7Aoqhdf+ckGWnOMT3z3vjls2z
4kBdz/1eg80l5PhyDijn71vPA5tBls9PGw7xYZ7TKZXAsxTLdIrYNJbAtw8h
Rk4XOcSHauYV6wYuceCg7/k7L+6WwnTrih8/7DjEB71Pv22fb88Bub7Fzl/n
l0FMmJruipsc4oPfzWEzltziQGryaJUl2WVwPGH4zj2OHPK8HJJK15vixIEG
z4Rnjy3L4f7wL3BAlw0vAiICvo+ogMTxc7x0q1LhyIu7S+T/8uGHVvYTTRcO
GU9xYr3684PU9sjli8Y9qKDKfQYLRomNrYCLV3uCFh5lw47yg1eOvKoA8Yxd
2dLuHDLeYkjrov8BqhwZr9dG2w2hitTzGXlgisln/QctIP3Yfs1V6u+ffyh9
5xZRAdFjunPunGLDnuEvbMQ0vkDT0i0n859wSH+/GXt/4jeqHNlEqJY9RJW/
uGAyTGH3FygM899keYkNpv7DNbq+foF5md9bjKnnBvb3p67Vu9JOlSPvNxsx
4f5tNun/FZ7asjrFjU3645xkTxu4e7NJf1zZ+s1nRYLYpD+EzLO9Pkw0V6gN
zqZO0ZgZxSbt14teBCp+TWST9mvd0NM6O6nnLbZfXiznelnnsEl7k4Jz6utt
JWzS3vQ7Zun3imo2+Z7/Uf47eF4jm3xfud7ct1hLnp6n1Z5i9XB8JD2Pa7uQ
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
Wum/7Wc2lSxU4YPapyWn387LIOMNt3+XexPhl0748FyJtmApmtnjbP/8t32n
/sRDamv4YHt6cV4atb3wkL95zEE+zMlr9y2htp8avOzcIns+DD9lrrdnbgYZ
b1Yy0yn20Mt0wiE5IZKWUjQfPXlh6kGFDKjotZp56QEfjpxWP5uemA4GvevS
XoRSx2M9lL9Im4p/z9jTHA4fjgWMuX5kTzosmG2RYTK5DUQ0ZoXdGU7nVXl0
tPfx0JV0wrMdcm9c/PVvHpbdKfNfnatphdahjOkLhTPg4clz574ubocz0r1W
RdfSYVFgi+wvnXboW62QfnEgDfKqD2aL2bZDicS9tqqhdDJeXv2sbNxoO5r9
ymLsVQf+XbdfpyLL7r/zQy4YfC8aEkqzjnyEZymH5u3HO5b7zGiDpPc3U684
ZJD39d7jfgHb52WS93XcXuTzfVnvmfTv3d/hdM1ogM5bNinvdrVUeRtcTu0a
cys4C+Y37LxswjUA73Ufuu4fz4CXB2s/eI76Cn+VFmacL8wAyXJeZf/Zr6Sd
oXgoZ76kLAtYpw+OylufCdVBYlsCa7/CvYux17p6MiHrkLyXizwLlDfaGro9
zYCJuuYWZ6jnOf59+IJrFbETvhE+YrZvTb0RD2a2Bt4JPJ8BGU2mPa6lraC1
1nPEnFOZ0P1+pEIMdb36GlVs4oQy4faEWq086noFu3G+anpkwAyz91Yt1PXy
/PHHgmeXAVEjcyacntkGEasbZx3aSef1HHHWxnVXMp3388CbwT/rl9IMqxNf
/KG2Dzs+Y9fQvTYIz8ppN2BnAPeG3u+miDaYblCzJl4tA348dwvOL2iDjdNP
L5u1nc77xlm+871+Cp0XbtOehRvvq/2bJ+5W7tnoS/GtdN5q+yrX/84PecXu
iozSUJpPyZUO9XNonuJiWps763/yzkmlrC24RHON4p6cF3o0y6ysNzy5pA2E
JQ6krizIJN9zO3t4t3ZczyLfc8lGW34Zh2fDUptLI696n4LC9qW7KvWzyPg3
bDcSEvH4zpt9gLAYb6dw+GQWvPs11T8kKhP+FPGHu2pT+7c9bvV3VhaU3nYI
ep/wDd7P2LY6wSMLjHWCA70m1MC3iTl7V23MBlZb67T9UixYMk0pKqUuE+bs
m+GVTz0fcf9q78e6xcyuAaGqbkUL0yzyPMXyy8OrzmhR9ednoc2xgZgsKH9w
uqiZup6OO8x3v92aBbZd1tMGqOspnX54jXVlJozbY3tQLI1P1Q9H9cneWXSe
+sGCGisRmvvcrb4EUuVKU8ddaWnkQyi/ri5hVBb8Xd+d0CDWRr1X6fM/22ZC
gUVxz7fFbbBW0W/5Wk867/ga30XnHEbQvHpyUmyG7b95yhW271u4yIU+H6n0
k6y/7nwQNX69P0k1m3xfq/tFKp7vyCbf133zHP3U3nwGGaPDovyQC6TdLiVf
vOMl6wzhrS3skhdjWWDw0r60a3Q27JifIHxxSw309vtMeHItG9Scx68euFwD
cfmKs71/ZUOFuNgV+cga8FUPqq16QO3voLLCKUkW+E9LkvmtnA0G4z3YKlR8
cP8nVRfFX46tgVMZlXoBEtmQNj8h4/eNVlLe4G8+nmXIA73bpsrJzdngbujW
6P+IT8ovZoXbah2jtz849RwrnSp/tFzCl0edH7Yf8LeHmm0Ky4E6h88Wzteu
k3ZIlt2opc2H7Agrh979GzuSBRZfjJ2lTn+GJAepxs66GhjX5qX8qyIHbD+t
THwqzgKPWj+VgabPsPmSRarJlFoIqb0YvezCZzCfzJlzj6pPuD+xM7f+NK2r
hc8SrRpjOz6T9wEsr2vT/TyNOr+JGzZ5nVPJgbev1CSOevDpdcaS+fcNV9Pb
z/y1f7gjVa6w9PHxXJsc0r7hPeWZp8/aXNK+UXK9NYrzKhc+bjOVMTt6m7Sr
Rl2w3X5O+DasWuk9+seXXDLPIyU7kF34LA9Mkw6vNrviTLYXboiXTxFiwfSK
/e885fOAHxydHkldH9MZk8xWmeSAySvlS/aatbAx4dPspm85sPbsEVe4WgsZ
UuEH+QdzIVKSMyIsohZmZL+edDwlB3wl9Xe3UueL+z860nPut9RaKJ/QH1AQ
lANXH4zvN1rYSspX/x0sdTDggbxq1OfNNrngcPi347THfFK+qVRtvdcEevvp
1/y1N1DlOjsfsPaOyyPtKclzw40rx+XDwKOP/StbdEDYOU/k4tc82JldNE9y
yR1Qij4iLyucT67H+KyGk5OocuQc7an224fnw6m06xUiWo6kHXpdx6bNm8rv
wY5GHeXVnVwyT0K4UHxwWRsXfBMDJ9yb6wmzvlpPqijnknHusP5u9/1iLgyG
FIvPkPAj+1N9bSqk+TsKjLYea5nB5pJxyv3beeJ+H7mwYmhr9w3nILgwIXho
6A2XjCv1PDay0yqYC1WzIt8NDguHrfq86y7PuGRc4a7xGvK61bkg47rW4H1N
LcSHWPRPP5QHU2onmJ+bWAcFT1zrnMXygF3+++gOKj54PJ08u9tzNerA2mvi
r72X8sj7MJbPWbliWNd+HtwZCHRZGJ8H6kE+1VnU9cfyqVp3RX430duL8xvn
9VDlS+9scvvRkEfat/QDytK+U/FBX4x5MWFtcnce4Xh76+GqNXkQMqfT8svG
OugRmdMbbcKFsNW1yxrP1gHv/KI48VQuae/pXpZfe6OZC2uDdQefB9bBtKfL
Vfz1uMCWODMpmqpPKhEBRY+ov8f5oxdXTe00MOXCxyNTQ62CedA8YpHBfjMu
mU+aKPv5jrQFF+xlNbdZ9PFgU8DVvcqWXDK/tH3QZVzXKS6IyF1YcFSzEbKr
N5pIWHHp9ZonVEgXnuHCE0m2sq5XI9zq/K02wpZL5p+GfXF3tV/DhXgDWz2P
/kaYFHzr/OO1XDIftefdXeMRqlzorSg+/kK7CZRuaC6TWc4l81MfGhaUdStx
wVjJLzfPrwmKlos3j1Hmkvmqw+dfKlSbRdW/zsnF83uaIKq7ZYLWbC6Zv+p6
c9z87ClcSN/NZUdqNYOtvHUUdyqXzGfVnNZq6SNGne+c3nhT32Y4klTXfU+c
S+a3RiZeUQ8YyoM62yWau382g8LeK0ZnhLhkvqvV6V/bK7/ngcinJaKnNVvg
/URu1LkfeeT7DvttCkoSptcl1kHlz6hHG3h58P7x0Y+fXrTA8eunStdGccn3
XH1HmWkVVZ/uucbl3qLq4/ZrVbrTornAslxeeO5jC3AOzN5dVkHX11VLtobc
DOcSDkp+LuZA3d+nil61bNnUCtZnQ+yVI7hwWcFvxwGJVvj5pfLj4a955Hk9
XML7S1MIl/DRlmlCm+vywC3lFUvjcSts7b3uaxjGhSlJWZprTFphbkXpL3Gq
HN83nObnGR4M5BKWVGrIWUKdX2yoq7BNYyvYJtwa8AjigvSdeSunx7WCS2DZ
nlbq/iDr0c3rSyrz4xL+JLH7566mPDA6UTRYokbdb4Xb9fL8qfv9oodpz2g+
7OZ1XxpszCPfXwPhLjVaL7iEw2oLvPyb88AmXOfLSSfqe+503aN+qnyX09iZ
ZUZ8+KUY0b2dKsfvq9Wjm+6FeXEJK3/taLm8hAsBc0O3z87iQ9fsYX7KC7nk
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
BgqhZ3bbBVZwA0jzhvxXU8f/OmXb3FmDzRDSHbdMvbAQTNXbq16uaIHSYduH
ha0vIs9v1W2/La0LCgnj+f9oX7HtS1EDWGb6SIavKoJHE7seb6Kur3E0+839
ukLwfF61rZi6viMXFRqdoer/UpaLhFkSnYcv72rX6G3U9sgPZ68b20NtP23B
8pWVEnReDM8BrdkZIXQejbdpNiOkJxZB/oPpn/fe7YA+nTaV5+GF8CazKk7y
XQesXN53e3ACvS76X2GDT8/C/11HPVlcfvfmjHY4tkN48RLJIsgS7lr9trwD
aopenwbqeoole0stFO0EsXz2HkNJep3cw7mTd2+O+ndd3cuXZjVd1qX3v0P8
dneTTAf82nPwux11fxYl1B4aUOyEhxNqRiTHFMJtAzk9A0P6732PxbiLK9H8
1Dey3Y0q555580buZDHUDG0o8ko1gyqzUEWdr0Xk+xjHgR0ZHaiuM20P4Sq/
e1/vBrDg2xW3Q+Gji0HKPn/0+BAWKc/dvL7ponoqWGfo5rSML4bQ6Lgdf4ez
wetq4wm+XDE9Ts3q2KWC9cVwetPEUVXNbNj3cmPm801FwLs7Nf9ScQMMyP2U
ubq5iPTnj90xcnmDWTHpN14ROiSTZVMMb1j6+V45HNB57jvL2bUI3mk4zu8U
4kHXq2Qn5/wi0p/vfaZseiGPqv/j77Hi5vGgIGnPisL6IvK9eW3MI7vnJ6nr
vWgo3qqlmZxPlmral1Bq+5N5Tz4toO6XhowJm62p+tWTf/TY39vU9d0SbjMq
iU+2n1bDEVIIo//+z4K0E1Wfm+HniZMBhZpFcH/H4W4/qn4s0nxwf380nSfy
86rvL9L+H3kk727wumXrTu+fGx6wW4H6vVT1cYkfqfv5gpRKm2dDO4RWcL5O
3FYEt3J0DE7N6IBQ2bmiyjF0HrG7S0vGjN32b54xo5Rjl0wi28FSNu74n3iq
XFQ3TIGqL+s/xM6U3VcE9h+Kdz42pNdVe6Y56ZCaEs0anlrSmVR5lVTvu++d
xVAx91HQ/TpbMk5wYfH64ZstLAkL83puw0UWPLI0eXYgvhiqHC5vCbvKIuXd
3y5mnl2ZBvYnvpY2BRaDyaRJ58Qi0iC/YHfQyuhi0u/8x+SQy9wvxRA1+GDm
Opd0cMp5ujnfvhhSZ2TJvVLmwapN7RG/hopJP9OyJ8H9x8aXgNOVC/tPWWTA
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
jYYgvxn4KRlMcbNgI74Eb1mcZMmG/wcD+aye
     "], {{{
        EdgeForm[], 
        RGBColor[0.148, 0.33, 0.54], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNmGuQlmMYxx+UchqHPmt331OKdD9yGIYOwwcistqVQ0WGScsaRvLBICUd
twNJMpTwCSGRbSnSMqoVM4zio0PHrW11sEv8/3P9zPThmvt+7sN1X8f/db1v
zYSHahtPzLJs6glZdpLGjaUs61fOsi81XlmTZVeJtldn2Q7RY9UxPznPsguK
WbYzZdnaSpbViUaL6nWnWXSr6Kj2j4ju0PwtnV+n/dUaf4LHZNEh7R8WLRIN
0Jvni77S+Vt09mN4Wo67RXeJNoiKOlMSfaC9m0Q3it6uyrKzxO+dqpD9POT3
25bhdmT6U/NO0SZ4+sxq+Jjfx9Ln1IJ00vg+a+bfWgr5LNsn6Gu9/ebZvPuz
xiGy1VDRA+Jxiqh3Ifg9KGosxNl3q+L8/fo+WdRTdEwyTRDvfxktm2X0/us1
cebR6rDdZMYr8Us98liuesZmyDa/tRL2Kos+L4U8pyBTL1EDcl6kt9s05hrv
y8MXD+dxzuetUz18zbMX996QHKOwoW05ivHDSthimOgXyXmb3h4jahElvTFI
9Hwx5h5fEJ0lu//WN8sqGpeL3tTdNSnuflrCjyn8PVrjbsn4nGiG6Gp9r9L6
NRqHi67VfIjGXdrbKbqhEj4aijzdeu9v0UuimdrfK5pVDlkGEZNjdL+Pzk5K
cd98rq/EG36rHtlakG8Rdy8UfUb8WeaB+l7IuuXZjcyO84+I9Z74eoWoznFW
inxao71a0c2ic4gfx5FzoYRPb+HM/7zWkjvOT+fprhS8PiE/R+GfmxnXMG/B
R+tKIe8h7GCZR1ZCbuv5GXrtwq7eW8hZ69hX61Xl4LNf4wHRXFGHaB7fEwuR
A9b7e9F3okt09+JizLcRn5OIUeu7nvxfWRO2cn7Mt781X5AiRyaTkx3FsONB
jU26c1A0X/R0Cv/P1fi04rtTa00ax+lsl86OLQUv83yNOHK8XVcVej2DbubX
CU+/eQ7vztZ3hVjy+ancsd9GkPtjeesv0bmc8dk+YOwUUY2+nxUVyoEzj8J/
ueTqUYg46YH9PLdfqstxzzlRJMZq4GGfWe4W/DuDM96bXo670/hej49rWJ/O
XjW62/ZDiNUD+HQu8s6ARxE+BfSfxt0+2Mp6ViNPFZhuuWcSYy3oc5r9JEzo
GhRnipzbp/XLZL/2FP7twCd3EieOl5XEiOPoMd61r4xnxhbjl7HduH6P6L1K
xPMq508e6/fmgcmtnHGsv09dWMV5Y8JgYtdx+20hvj1vxt6uP71515j5mviO
0L1lecS/Y//SYsSrc7UT3azjaXng9xelyPdLyBG/Zx17gcOOh4nExDL4r8gD
F2rJ84Hk6DeFGDcXYm55XxQtKUYNcC3YWgg828zZBupAb3Rso25MwDauX58S
N46fLdxPkPmap9cT82/h4fdHYk/7wWc2c996j0P3kezbBxOok63g0RH6CWOz
fe1Y8/xdvt8m/5zLvai/xhfHjHPS+eh+Zwc9ShOx7dh6UL54XGuNKc5v4M74
Usjnvsn+e7kYPqvgL/utmIdtLs/jjP23tBi1w3If5t4y7l7KvtfGo/sX4Lfx
ohlcq6NG/JDChz9qnJeiP5iTAr+N537HvI7xRj3x6Bhzn3YnurvH+oe6+A54
ZVs10i845twHNdGruc/aRB9lmfqC+Y3Y6skUuNCfs+7N5jCfx7r3W/Gjv9fS
g32VoqYsKEbftjoF9n2QQob+8GgCgy3PePxgPb5OIff2FNhhDOkeFHV/HH7b
kSL39qSQaz/yXJFHPNdq/OM4/JtEzLhubURvv2WeXfBtxke2xVbiy+fdX+wp
R5+0l9F12JhVR+9mGVw/2kW/9o3a437oO+xvPDlIPPrOUmLJPcwjedjhqTxq
fwd19lp8aD79U/h0QApdjQnuHe7G79blEPYeQ+32/gHG0cxH0S/sKwfNpt7t
R/ZadGlnbRvyGzt8r517r6boY19J4U/HgGNjAHIOS4EDW7HhduqGMXwhclre
p6j9T6TAMOPJYvCqDYxx7P9L/O9FB8swht8Fzgdjun20G/947rWJYNEWeG1D
lwa+Pa/D5rZRA35vA4+3IP9g8PVictv+s92r5bMmjT3yWP+HXB1wXIw7D9zL
zcff//dK9fTj7kU6yRefGQKOGc92EsOO5aHUbtdw99xHwAD3xu6LnLeDsaFt
OYXfft5fR39oW3WTU6en4Gl+rkVnUK9dt3/nzWn0AL+VY83vPn/c2+6TjUGO
heX85lxOf+H5YuRx/TiT3wj+rfAM/Mx/Kvy95tryAudHUJ8tx9/Y3PbbCKYa
p+2Tbtb30F84BjZQc8aSH0vBxs/BZK//AfYagzfCzzi3lxifBf+X8NdAfLQQ
3L2DfmUg/vXe9fzWsMzHiAfn6EwwxLwbUvSFE1OsP8feeni6/h7jnuvkHLDt
POy/GPusIB5s5x7EYU+Np+eRK4U8dLBeZXqseuJtJH2QbTWFGHH89EuBX+UU
undh37+IKb/dDm7sw16zqQ39eGs2eG5Mss1bU/Q3m6hrt1E3G6lL39PLGUec
N93UTt9dkEeOvJmHrWahi/vJmcyngC2O9aPIajldZzvJqTby2ni0BF2sWy2Y
ZmxzfzecHm8oOTGM7+HMjxD/ln8le17vgqffdi/t31cziPERxLDXd7L3J/HS
yfnp7B2G/yLy4Ci6NKHPfPJ9B/9ZeL2DvRr4mN9/UKoDzA==
           "]], 
          PolygonBox[CompressedData["
1:eJwlkr1L1WEUxw+hhaUVuJfe27WkhPMsmRFxby2mm0g2K4pUKoqgg+jd86U9
3yJsCkXFGpxNsS3CVBzVSGuI/gD9HL7DBz48z/k95+V3qtv7WnovmFmCEsi7
WdNNs0V44iJ8CZ7iGQLfZc3OIIs3JHnHLbOHeDcx16vMPhHfhv+B+9zXw1/8
B3RnyAVf8cfQSOzhDbPbeA0c4c84u+MiPGqqxd+To6nG7DhnNo5vuN6arzZb
xXOut4pQgT8g5h+5J6EKL3fdRcxVfBMu830vbOE/4VtGNUatK663H8Es/gZ2
6W8QxvBRGMYPoIiPuzxP/KSL8AJM4XuuXN9hH9+B7YxyRu5pV67IMeGqMWqN
mVzDR1y5Y8av8JdQiQ/Ba9dMYjZHMIOvcbbAe2W8/znq4ew/d23M8G3SWdzF
DL7gV5L+VfzjcvyEs7qsavyFlybNcgouJRF+Dy7iy7DE283wAV9IyrUOH/GW
pF3ZhFa81bUrsQMF/Llr16KnF66eoreYcQ9+6ppd7FTs1pxrttHjPN6Z9PZd
euzCf7tqix6il7GoN6cZFPH+pNg4G0iqOWqPHZvDzwFJjIDp
           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.3217905195878953, 0.4167953902705063, 0.6299058926384258], 
        
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
pbmWHiMvunDRjxi0MlqG2WWgxb50S79N9/p3AH8z+Fe60+8AP27wncGdlp9s
7X1t+HOW7rXYt9pi1L6Iy5fsXKA1OqiO6kquZH5De8cpa0ub4lFbU5CvdkZY
eshgpMEV0/X5VBuvwPnGGYxFr3HUHU/+OO2Moe/HwB/HDsfAR5MXvsDkLjQ9
1lj6pOUnGpxId5rsvMDge+gTKBP+Pe0eh34c2gTo49Dp8ajv20db+rNBxPpy
MeptSdYP6HMEnc6bTW+wMSobdRu0sPYPW9ouw/nVRmPDP7P0IPVFvyvDcaXt
DQ4Y3tDSRhlOO4EM5VVfdVtbG/VsTuda2sFoPxrtbktnBJ5fbOlAg8pGHxC4
PocZF+k7inw9q7/bdK4b9bYl42S669CItu5G/kl0bg+P+tcy3kf2wN01j422
32j70t1X2jEOZaK+NygddZu3hS4ZR9CngpU9YjyVor5X03r8acT99Ai8TbCh
bNGQttRmt6ifUbtq3TNaTobrsMegfobT9oKrbEDUzw8PWtqb85HOSSprQN3n
Ir4HnBRxm+xnbA5jw5H4wCjs+gR+rHkz1KCi+mRw2epcMZiX4Xc6C/HPBCsr
b1CQ7mtkWYMyBnOt7FKG1xsf8/PZNEuHIVOyX7ay1Rm+bj3EGqu699t4Z1n5
kMB5KrIuzUWedChr5YMMrgeEDzYoneWyJGd4zM+HY2MuQ21p3exl+RFW3tPS
hwLXaVTgZeJZleEyJa+cQRf4VW++4p9BKOzlQ+DpCU+nmK/bZelPCWwlm3WP
+V3CA7JH2Gmy4RBsKDk6c6vu9Vned/X7FUvXBi5re+B9W8r9w/KY3yGtjHnd
pdTXuBQydgmMj/JzGBfZ8kGr08jsMyzm/SlijCdHfW2eFPX1TOvaYksXRX2d
XmhpZ/On16qar0Z8ns1nbs/HL4RPCHzeTbN0q9X5xeq+a+lS7ut0b7cm6veq
r0Xd98Zc43+Kr2MNqlj98xa7qgY+fzV3n8JXv4WnEeOi9p9knotnAfNN+hy1
NqqZnGNR1+tpZDViHhZh7xuwuWQVY4x64JPyTa3h/5PhfIX4cgVsXB6fmM64
aHyuIFt+q32v9NPed0zgceDZwMdjHvO2CH3mEaeepi/fmt4bUiwGRD0GzCEO
5IBLxiBipmLnPOQ0gGcuuM5gVQ2qVHNdnkIftZNFXuvwy6yTuqPVXWf1LI95
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
iJ+ybwV8TWUjsaHs9h/XAa1Z
           "]], 
          PolygonBox[CompressedData["
1:eJwtlm1MllUYx09lpVNSN5AHAuLhzZK673OvV3WVWWBpW85hUtRmzZeEhNTZ
klQk+eAKfClrbShgPNjMPshbZmu13hRWrXxtabnMEl1Ytgwr3er373o+/Mfv
Ps91rnOu61znOsSfrJlVfblz7jU0DNUHzqWmO7drnHNVcFvkXCtqRlvQ3tC5
ednOzUf74Gps0rAfh56BBxjLyHEuE52Gf0TpcAydhFvR9VnOfXqtc+vh2YGt
1YnmwOtQLb6eRy/Cn2Djsm1Nrf2Zd+6KPOcWor3wdMbaM51LoBnwwdD21o+O
wKOwqWftbHSR79N89zG3ON+5q4inHm0tdO6yIufWwh2oHD7P2EZ4fZRktAYe
w/wXcsznaHgHY/Ox70M9cAK1J3Om3P0cWuzKySl4CWM34quvwLkFcBc+WuMW
UzfcxVhn0od8zUZLsD2MKuBfsTmE7UF0Fm5irFExoBZ0gDV2E3sZ2g8/hc3o
XOeWoSr4L8Zqc+xM/oY3RRa7YngF7kbvF1kOtsNrAztbnYnOph4f6/A1iBrg
Tsa+47fnUAs8DZ93Z9qZ6GyaA/tNNdUAn2fOIHufSf4vwW+wxrZkDIplH2Mj
+f1NcvIufCa0s7yJ/Q7Cy7CZWGhntjyyMf0WoLOh1Whz0qd8L4wsd5qzSGcV
We7noTK4MrDaUw2rlvtZM4P1V6EvFB8+G7OsZtvgw4wt4Ld+NABvZc5K5v6A
2uFHsHmd2G9Bpcqvt1zNJJ7N8C/ezq4GHYVrUEGu5XQpXBLa3K8z+AtvRrex
9u3oVfgubKZd59xOdA9cpzvIXTqAGuBVaC58CR+VcBUawfdiVA1XhHZXhvM9
F14Umq32/Cj8rbe96Qz6vMWk2E6gBLyRsePs9Xu0AX4psLuqHDTCjd5+W4HW
eFtDa2kPT+j+MzY1bj7k62G0i1geRPcpF5zJDmojhfMp1n2LrFZ6UCwyiXtR
BnxlZHd5AhoGF6mG4YdQOnzEW6/QmensqlEaa6eixXCe+hq2d6BRkfmQryaU
C4+PkmuxnxD+jTkn8FXC2BB80dtaquk/VLuR+dId1V0tQRXE9iGaDh/zVlvy
cRx+IDLfMXQ//Cc5HMPZj0VD8ETGXIHtMR/+nbG3Y2Yj28mR5Uo9Yio8K7La
1pxJcClKh2tRue6Ft1rsQQndL2+1rJ6o3pgSWWw6g9TIbGTbizrgQnQyx2pw
PJzLmT7NXoZL8J3J9XQGgXxFtrbG9Nse9lzC/kvRe/BYfLyMvyGU6k3iCyhN
tR5ZbjRfsZR5q331tDnw5/iYErMe1A1vYWxy3HpqC3yBPa3IsZ6n3jeFsRnM
H+B7gjeJT6Eb4N7Aal171F7VQ9VLz3H/Poa71WOy7E16B94W2t1sRgn4o9Bs
1TO64F58bo9bzbd5s5GtfHTAxd5iVY14b2+m3k718J/gM+whEbMYvwzsDdNb
loX+CU3iOjSS+Xu8nZV62AdwkbfY9Gbp7foqsNy/hfYH1hP+7w2oBn4Mm/xc
60mPw1eHdrbawznsU/hezvez6JrQfMjXTnQgsDusu6wc3wtXertruuPl6n2B
2aqGD6lfersbWlNrjwit9rWG1toQWm9TD1QvzAtt7aOoILQ3Qm+Fcrxb72Fo
/1uoB65WbwvtbVCN/RtajpQr1XAKfCtjxzLszZoE3xxa71VNx+HV3nqZeoZ6
x0pvb+k3qE79zxur5pq87Ul7k88iuC6y/x305i+F/wMN64UL
           "]]}]}, {
        EdgeForm[], 
        RGBColor[
        0.48118206225954907`, 0.4728115873755604, 0.5362060720263354], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
IX1n4Gr+/qNz52Db1KpN5iP/U+h212Ksyb6ryXLjpJc2sK5qKQ3QcliUOTTg
iQ7J//Psg/crYs4O2LEyf59vv1wU0CXgQuawgFEB1cYv8ndF2FUzQqam12V5
8OzAuqOQfoAFhaT7VtdvrNnw7Ux1rUactX2VdYH3gtr0kXXC51zI9f6iQvrK
+FYZsND0r+zHtvbxSOntDJ6AStvToZA6tLSQa13moZXY5Oa5wHyVth37rHfk
6xMwOn7XBFxclryDh493SH4+GdC3Q64dwbdCnCOloZO4m+nqYvrF4oSfk2K8
fRPj9aqmnL+Yu6BvlPnIs0T5ZxxMUC6xfZdoF+CPwGZaGfCr9hPh1YarjG8V
Onp1hFs35rp0ufNQn+i/gwK+q017ZoY2zf4BDwccEFAI2Z0WZboVU998r45+
qCnX7081JV7w79qY5R6xLPm/s8xKxxcy+oM6EjyPiAd81LtfwNSA55tyLM5t
SrviQO2b79SBy9R/l1vHwdozM7THRmvzYe/+ErA8YIV25qQ//Z5knuXGV5pn
hfycbBprevoZ3k10fgBvU0Os3ULWiw35m/SfA34yRMefHm2oi74e2pQ4Jjte
G6PMSVG20JBj+3Dlijnnv7U574yKMmOi7MimlM/vtJO+VgdgI9J/4/RBDFEH
Mv5Yjw0KOK46ZZp+xA8327Rjq1Oen1Cm++jLp47zor5bot5zmvLbU9I2Jn63
wscf4bf6oNBHj9hH9PvfpJ92LJMu8l0pX66SNxOMk/6j3/a3/5Ej5OYH5eRH
ZYbfvzgWGBNXms735fJ1ojoQ/YcebWkIT86xXRc1paw/rg1/o+sF1g2MiYPr
Unc/7tgnTwt9WKwfXwydskaEzxWyD8boax4Y69Sj26UfuE6fGb7Vo9rlHsuR
+vDxFx8T4YB2mbbKfaOBlj3aPP8znfJ8+wmdEXBlVfpp8OGU6YPhd8f6xLfa
vZ6W1dle9iQGxPh8MdpxZGP6sAcFDA6YHN8mBawIWKM69zDYk/jNfSHqPkZ6
oGtCfPslYKLhcuPD9Au113ezccBGAQ9E+9sEH9rWZtvBdax4aMvPVZl+rHsb
x7XLPRviLY1D63LppK4JlqP+QeY5zrbQjpWGk6TvWL+D81x5Bq9KqrOtN1Tl
PgF9hn+0VXxrqR/hrpjb/h3w94DdA3oG/Efo6Tds95tirrtxkyw7WH/G48Hr
BWFnPdaYv/FttK7PPEOM3xf17R2wV8DE0LMtIu2qCH9zX4z9sEHS00LcLfVv
4COlXub7Z6KOvh2D/gj/5x4V5fED4g+sDFgtvmuqUnbwDZbbb/jwOlBHdcoL
ctDV/RP2eM9RzkoDfpdn1LFJfL+/a7aDevAjdqrPvqAf2MemHujAdlgc+m4I
/pyGlAvKgoP9rqvNDw58kp3rE8evpq+SdvLdL9+o9zzbUWY9ldY12/0T9N3d
lekPwhdUEjbvjexnBvzeOX8TX8N0fuOPp4/ZU6DeAYHjyOqU7TOV72naC73V
rQf5m/yrpfV69mWtZ4k+y0sMLzV+pj7JTerTH3mp36kLnyk+0evFAZ3ErxNv
i6C1ZcDNnTO8pXPGfzPPtQHXBKw2PiPaMD2gIvTkrZ0zf6suCbeIg/TWEd4W
4U3yhXpWi/da02/02/+s6zfTW0jPreJuLawpTuhZJU3nKFPI3ujK5BE8gR/4
h9vImzbyZ3fHHv15ujpmQ/tkE/sFP2+7gLYB9xeyzx9FV8fYKI3xeJFj5Hdl
eLj6oNQxUaE8jVQGkedh6rZ2jqdOyhnj9H+OtaJrCGwa+v83x9ti20X7qBO9
w/g5Sxpp2wzXAge5R3qIv6cW0pf+bCHbNUwazrKdlB+jzHytz/2ygLGVmf61
PvhlpvN9rHyAH02uG9iL+af9QDsLroHYUxkjjrGG3xqnTbQN3/Tc0EEv4ztp
m/oOvfdoY/ZlbUDXytSl7I2hM9m/YdwzfsdX5Tr2x4A74tuuAbtUpo5njmDe
4xzFAOfKH01jHlyuvxkf8XruAYL/2/h2WcDYgMuNLwtYN9q2Tn363I9ol+di
8C2Pdx0NHTdV5vzOnF/vPhv7ftB/Z2Xu8+E/7RWwb9ecZ1s5154k/rUD6uyD
ennfTb6tGbrvBuaKCO8JHv0UvHqyMb91M/8Y8xJ/QH8tde3TNX8TR1e3VF/v
1zV9tlMNe1nmjpCb7QLHlELO7y2c4/czD3mnmOfWQtKFT4q5DNvzG3n4SDF9
7v8pJl+wg26uTL8DfBsX0F9+wld42MI88P8781xuP/AbHLdUZh767wj9/NOC
jhsj7eFC7vdtrJzs3Ji+1J0i3CNgIHZzhLdWJp5W7jveHvHblLd13Y9t7TfS
v9NfAj3sm9KnyN3a7qMSn1KZ+4akTfEb6fDjW3mCTPbXjrtbvbSB+W+3/K+e
vSJfN/cJn++aPLhMXK3kQ0v3KikLrbfaJmiHnzcql+tK8zrmaW27xjuGGBfs
86ypzXFLIeXvoULKP7LPng/j7OOKHGt/C/gg4v+tSP8Aa/u/BnxYkek7VWY6
aeT5JGC3iH9qHFz8vtc5GXvmZm0TbPDdtKHIT/hZRcb/at3gPDTGw/zIe0pD
yvj92o7gAQf+hD27Zh3gX1CReLDDdpJ+cO2s/vgofq8lH+DHPuIE96XqJfQT
e2onOWZHm4a+ulidXVOZfFxTm63G9K6GF6sHd5Gf1AvfdpYG+POxPPpQXvKt
RL8vY20taYSWFtqTfNtHOwe6e8o3+LeWeaF5N/VSs63aU17vZhpx9k9Pd67c
oD5/E79TfXuH+XcV1xTTaBP5T7VMj/i9vbLYJ8bevjEGezemzO7kuCMP8rqD
7ZzyJzzri2tnxwjfFtiHu5t/J7/1sJ6bHN87qitOFc9QZXkd+w99e6m6s87+
5fdQ869Xn/IGrluV71uVv9uslzjz8xquDdZ1rFD2VvP9TZputo03S9sO4tzR
Ok6RRsoyLzI/NkTYLtaZE8P22STC7m0zjf2Ht8I+ertL7nu9EtCETVGV4Tz8
tBG+FOGLAZsb3yLC2V3yzNybEb7RJc+Mvhbhq13yDOnrXfI3OMFH+mZVieeF
LokHfFsI3cW5dVXie92y86SpID1zxbelOGd3Dx6E3M6J8OX43ViVecA3p0vi
5Bzk1pyRbJtnU682/hfTrxG29tuW5iPP0C7pr16vS55pLXrua0vPuJLvFL+v
2yVpaKhKOojP8XeD9HT3W0E6ZwUcGTAg4DnjpB3l7+e7ZF1F63u2S/p2yDO3
e55VWdg9eTNE/jB3nRFwZsAgaRosL44LONY8G5lvjumz7ZfZ5jlKeprpoN8G
BhyjPLxk/Gh/v2z9g01/STwvmucFcT4vnhdMH2ib6m3XIOmBLs5ozu+Scsb3
5+TPc9HmtzaOdWKER4RMPxNpfSPsb5y0buanHHXye9OqlLsXlUdwbBc8fHvj
zMN36OLMJWNjvn3D2uHXzknbHNtKue0t+2LQ0SPiL3VPHJuJ53n51812gPPU
gOMDTuiS65M3Yhy+3ibl76zanH/+wR5Q2xzDnC+80jOJjNt/mAdb9g3LIcvb
VeW5Tsbz6Z4b5/z43sGLIyKtJ/zpkvx51nG6tWP15C4px8jwUGlE7s+UFura
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
xt77w64fKT/Nvuac1lbFxMF/MqxZyDOKnFWkD1gL067PtQvYu2VdfqQ2G2vo
A23LYteao/VJHqBfcrp1Ued++u+X6rtcrB3OmLhAWkcaJ21KY9rFtzemr26B
beGtFvwp+Asfd52OLPZ3LY/PiLcr9tX/tqgx38j9qjFlB7/dTs5zzL28y7pU
O6V5/mfM9XKuYS5Z5jyxv7p5f/Xu19ox36jHv1Vm0Muf2xZo/rIpdeDPTdkX
j+g/ed4zGJzF4D0a2kR/D9Te5PzxQu1Z9qPv840d3tp5zjUL/fGFPjb2rb9r
zDdF1yqkrC3Td7JIvnOHYmljvjv8dWPKSx/9kgOlB7pul/83NqafC1/REcXs
2wNdA/CmI3Mw7zo+5nxMGu+APqBd9YJtoU3IEjY3ds38ppwTPmrKM3SsZ/CZ
vWc633k7lPdHmesIH3UuZE7k/VK+Py9ueMHY7+z4P8RzechKO+eQh7SV2zqf
YNfxxiW23eqmlOmfmvLNS+inHQ9qT7Y1TthOaG9Z6CmVTuwd3qLk3c2Hnfeb
31qdqh3ZwThp5Ccv9muZ447x96R2CrgA4rxvWSYf4Ac2Du+NTvfbE9oQj9kP
nQS+kT6okHWcXMiy4KJ8qXoXuZymDVZmn3aybIV9Pd06K6yX9R/zDm9p4oPj
nAh7u7Sp2nZVm4c4Z8WPdU31f/Rx0XU=
           "]], 
          PolygonBox[CompressedData["
1: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
8r+fylT3P7uheMY=
           "]], 
          
          PolygonBox[{{11881, 11880, 11860, 5708, 11859}, {12015, 6407, 12016,
            12009, 12010}}]}]}, {
        EdgeForm[], 
        RGBColor[
        0.6405736049312027, 0.5288277844806144, 0.44250625141424504`], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
voaPGn86yg4OeCrgyYADA57omHX2UV89Hun9A/4lPvAeYnq/gMc6Zj3q790j
y+nzMHEd0DFxbBc0fRB0bludtH5YlXlHRtlfA14KGB/pCQFl1Zl+uWOWHxHw
ovWuqM6xb1qd+S9Y9oL1Dg943vThwmHmvSSOF53XOuf2eetA95aB982qXIM/
bKyOae9hTz4Q8c51aQc+2DHz6usyb6Fl1CF+f0Any4nXW6eTPFBn/n3mbRX9
vlWVfe8bMvBK5I+J8NEI92VNOub8/tN12bNj0jDatdjf9XgoYC/zWadnXDd0
7n4BYwL26Jh0gmOb6Pe96HNAda7TAYX1tj7tHoaH6J/yHit1/2P2OUb69rXe
ka1pux4f4V8ai4pWCbg6ZL81+mgLeD766x3hC1WZfrEq4+Rhy4Or0bnf2/Gw
BoyNuYeH3q9K2h+1f/oe4FgWVSV93FVB75PGydtO3oMXsffWb5d3inv3Cr0R
8X16pTwcpEz8a920CanL/O/lGsCn5fIqddYTz2PS86hzC53Q9Izr8X8d8+1M
ubw+Rll81Plm3vfvkTQcLB1P2+5g53//whooswe4Xo9b9oz1aTdG3Kzjk+Kj
zbbKI/SNkd8OjnDfGP+GMZYxvNmIOm9XJV9eWZ367R/Vuf9dF3B9QFNt9FMT
+2ttlv1enXU3i/S/I3/T2jxDsv7XdMs5/LF76NmALaLs9aizeW2m91KHjIu8
NwLetOy1msRHHmVjDSk/PmDtgJujz5ugrSbf074TsGbEb4zwhoC1arKcNPiO
Czg2YOuabEP9t8QH3nUCZlUn3v7ipN7r9k/7f4vjmICWoO/ZCJtrc8yvRnyT
CLeMcIuAq2ryzpK7y9Vacw7QmT9FeFvgbh/lHWpyLpnTZyK8tlvuucxb30i/
FfW2ivCHaDO6R77Z7hN1X4q8jWqzb2ig7Wh5lTrgvjXatovwKdfqael7JcKN
a+2j8F7R9+C038r3gawf88+abVmbtDMG1qst0i/wxth5eK4m6WitzTzS+8jn
jHfdSN9SnfPLmGdX5xzMNl0c8FhAz2j/rwi7R/hohI8ELIrz841By4dtefdL
GfncDzcaZ3yMc8PatEHRJdjo37XEOkf+99wj1yRfXF+dfYG/R22WUefnlkw/
av/9Aq6vzfcBpe7dxwsl7s37e0d5ZoRbw4NVKT+l1mN/61+d+undgH/EOK4I
+I1zS3XmvWP98eqWy6tzz9tUOqGJeVkv4PGanJ8NanOsT9Yk38GPR/tGnLfi
X7XkOpN3VE3yAfxwi3zH3JN+2fIjA14M+GvAETXJX0ea/jJwXR/h8gjfrk75
QXbGKztvCW/XZN760rnen+iGZnRHf89rG7pe0A/Ovsplm3sE+8UN1qfdE46Z
+sQftx/q3KgvjLo3GH/Ccto8V5X7EDiJt1Rn+hp5nL2Kd4u8aW8OGB568Zto
93XAV7V5BzcsYI/g5VE98ixxYXXiaRbXxe5za2h/YJesYbimNsiaptmLvwu8
o8zH3lnLPe8/tbmP0y99QsO3tUnPiEiP7JjtVphfyGNf/742cU+LdRrMeFqy
nLbDtQ9+qM267Nk/1uZeSz/D7esc24ID/CPt63DHs7q0FsaE3fBrlP+vNufv
QueEvfnnyPvJPujrv7U5RkLGiR1Bu19qc59cNWAVQ2zK1dznfqvNPthjqQve
w5zn1R0L/fxo/mq2Z10ucm0ucr2gj/cFPdrl20RsaWx37Ok99VXisyS+h+nV
xQnuHVpzvXZvTT54wHqjXbsfXFfWd4VjL4ybNf1SfsIHONq+mGPWCbtwc9/G
9MOeCto2DrhMIP736mz3kLp+o0j/LeDS6rSd6AebaaF8Bi0Pyh/Yf5eKo4/t
sL8uqU67dKH1LzEffh7qHfSQ1my3sW05pyyQb7CVHls35xQ7n7nE3npInntQ
HmV899tuhG0fkE763sh+/+aaXSIN91l/gTbOXwp2kby3v/YNfHKAc7+H8rCK
beCv03qn/E7one2LtI2A32sTB+8+ussb+8lv8N0Y+Rm+3ld+g+8GxLwsZ49w
vS5Xb2/impEe6bhHOcZLncNWeRLe/F65/EFc4NyiNeeUuYWe/ZUX6ML+fEw7
9UF5CZ5dLfTedYHv2uqUo0OUhQMdI3P0dFXqu2eqUlafrcp4k7JLHD89Z5RJ
nmdI4+PnvNSiv4E3PtOUJeZsqnH2Xc5R+MdWa0ybZtXG9O9g658jzsmeoybZ
F+cj/DfYsPhuOBe/7hn7f4Hj14DLu+X54qoIixqTFmjivMOZBXlDDurFCd3j
Q5c9FXjGRjjBOHnQBX3YtZwBOf/RJ3Rz9sDnN03/MOOiH8bN2bHgr+HMeY17
CGNss7zVskJdzrWcRfHhYHfj4y/4+km/bNnG1uV8BK+85Dct6KjjW7LPwtmX
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
vtuSdK8mrzDH/3KeD5VnD7FNQY5ZV/o+2Lr7W3+M6/CY87G6c8JcrmEe7dc0
72HXcB/DfY13kD/HyiPryAfHyp/w4t6238cxMJY3WnLODpHGY+Tlo+U7+K9I
3O3FB/+id/5Sm2UHO7bnpP1Q+WIr1xo9iN5B79OWu0L0yVXuhVu4F25l+hp1
71au9TvaTtdrG/fThh5g+gr3o03dhzY3faW4SUMHd1XcZ11uXfT+1fbD+YH9
/Vv33HO1E7hX+NF9seDTZ8/8wfTF5n3nno0//Hv32O9sD56vLTtf/N+aLvT1
jXk/uM9/717Vx735MulFVn5yr4aun2tXnm+YP84znHc3c99mj/n9T/v2b4bM
GWcU5p11WMWzHOkiz2VXivNq8f7d/qFpvPOJHG5tn5wB3zKf+R5v+dvG33Yd
OT/hf+Bchd/hOuPXubZ/nEnM39qwn/FrLe9rnb7S9pVzPMNwpnFsgi8txzZC
t3K2QP6wl5DBX7Wd9jdOeID6d3/llfSBtt1bGcKHgPzhB9jH8t89u3BGR7Y5
yzytjLCfkP+T7caoA6hD+dMFPVGbMoKslCg3hX2bfYjz+EHio92zyu8z4vtf
9UqcRdbt4m9H8NsVP/+p/0da8sz6cEsC8QdbcjwFv8tmnsXwd+Kzx9aa6tx+
5TwjH+hQ9OdVytMfb77kBeTuddNjxXWldcaaT52mVu3X1lw3+lpuX9NcS+SB
PY89CV8QZ290GfehT7oOmztexv2kc0D+ff622D9bVq7xE+LZ2zVlHOB+QV2I
nbqOPPCEeP5rn7The47p+un4TYSb/PYFn91Mv/GYEeeh6QFfCcS/DFgSMKS0
qGjHgOXmTQvoHOe9hoAHIn+ngM8ib6nl060zwzfdXwUsi/Q5AWeXJC7aUP+I
xthDAl4IGFoedQPnl4Bt8f3z7fL3AT8ELI+y3cuzzhfiBPducSb7Is5Tu0Z4
RoRdAhoCppZkPWjnbmS5OF+riDWojDWvyDrLpfmLwLtbefZD3S+t/7n9QP9U
+wXvd1F2QcD5AecFrDD+TcC5ATMDvjY90zrkfxtwVknOG7jPqMjf2poScHnY
E5fpx6Rsl9Lse4cY26cxpsUBNVFvYkBtwIdB63ZB8/YBkyLdKaCuIvv6Vppm
uA5fG053bBdKP/M7vDx/u+PrsmzznWNZHv3tHn1/GeHdxTnXzPPxUa80oCRg
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
f73DLnkweGf9CIfEnO6DnmlK/8w1+mg2cV+9XJ35lTLPHvB9zNN3HdJuJ00c
/zS0QMdO9kv/zDN2JnP9qfRBT2VFzi/zB7+MlWfgh2/lCWR0btS9I2CNoHd1
72DQYeTdXpnz9K5z8r6yc3JJ6hjmY6794r+l70r7ZJ7RH3OibHZl+hjft+0U
z5pL2Ns75Pn3VPU2+9fI0gTiI0qT1pHFOR911qfdlsoCMsH5td5zPToTfXm0
4THGZ5fmWrPmBwVtv0e7AyMsMk7eBc3pmzg3wmO1r7CzOouffg6Oev8X8Jeq
xDVO24a8VcxHvkco4/yXy0vaK13cu9nDRzhG6hxrP8dV5DnyBddiVXHiu/y7
PLNx96TrGMd3rHHyLuye72GwIfBRrh6wWlXiOdR4nfOHXv+lOc+zPzenjq9X
z69hW3Q0Oq+neu9iv01mD5ztuYc5hf8fVAb4PQ50w7ZNyecbS/eqjgM6eG8D
rRd0z7k50vnBrnvR+M/S9mNzjulC3/x0cC9DP4LrMMd1hPocXl4hn8M3hziH
rM8P0s/8jHQPHeFdy73qnwt8C0Rf49QN7FHcX7RTJ59UkjwNP2NbdNI2W+6+
yJ442flkXvERolPwE/6o/cAcsucOd+8AP/cQ9EG9Sm0HbAx8yieUZL+L7PtD
7fpTPdudZnp3x8E93RRt88lCvTYt/X7lft9d3zD72yTxgA8c1AHPR+bTF/bG
FO1D7lk4k7I/c5+AfX6KgK5n3NB7YkneEeDjeLkiZfQoQ2RzhXN+fvfUaW+o
15j/Nz0/IKcHK18vyzPwTp28DN/Ck8jknNLEf6T9rVCfokt3dz9nvcF5kHgv
sH/oOEmaoR0aOftjhw1zTpibdxzTCdosX2h3TNAeLJSfaJ3DlSn49S5tAWx0
zgTN0eezjck/X4hvDe0jbJKbKtMXgx8GXw0+mDMF4tybrenZl2+w36ha6d/F
T8GdCXfE/9b25JudIeWph3co149Tlj58/quJO4h9W/K3yYe2zzviMz3Dcs7h
7g1fP3d86PEdA8fSspX3ysPaZ9/Yf69Zh/6oNyrk+RjOs83pb+YMyp0C/uoK
92DuU9C5nHFe036E9p28c6GvVx0LdtNEfVG10rKT9MA7W3kn8orjpj5+bM6D
3CVc0pRnp781Jd3Qz5jf1FaC924rT/81PljeA+zunIxon3fb3Gv3Ude97BkP
+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
5Bh5Z3dbcd4/43t9LOb70fb53oo3PNwxnxXhmWXpE+HdFXKInGMPo5fQE3ep
q9HRj7TP94f4/Boq8+6zc2Xmkwd+7LCHvOM52HdW/K5MT2mAloN75/ugfXqn
Lcxez57P+Hj7whiZizOUI8Iuxk903pi/R4qzLTjQZXdqx/NffPRFn7to81NW
ps6jDjx7YGPeX3fXPw3996nT8OtW2hd9sr5Xyx/rKXcz5J+35SF4s0r+5MzJ
fTF318jFBNe6jz4cfI9LnX/GN075Yy/4XP4927PrmeLiPmVrbTp4/h/yPW/9
ePvHPd8yebvQ9nPj95fnu5H7ypOfTpTnh8u/C7zfpi/uuJv0ZyKXv9sXZ4Hj
lXHeJT6p3B+k7I93nO8pc7zn4v7xeOuPt+3x7kGlysYS+zzD8Ezj8MAS52e4
NLIu4Af3+xU5Ht64IFvzlUfOXU+4tgdqZ62mPumvXmIOmLdx0na0+p93CqvI
h/DjBHmNtXtanxxz06cl33NtFOHssJUXRv8Lm/PtxM6+7RjvGFlXftuD34to
b3ic8aVN+dZ7cVPyEHtSP/GCv60l5535v8K1Hluy8l63g7jecUys6a+uFfV5
L/arcd4pfFeebx7Yg/HpL3Yvxz/LHn6SOpM5ntuc9T+McKn/ccl/XT4U4T89
w2/jOxJ8KcXYqZ4JyecdM++lHm6f97u0maTvFB/qPuZTzptg7jy477jRtrx/
2sdydMxNvh/Z1nA74938n6PC/7R1rV/5f2n8NxX/j8Z/IvCfavyXFT6oU/VD
XVe78nd92PfgIeyf5uZ8z9MU4ae9Up8s6ZV0oCf2dew3On7+q5h3VuOb8/9W
+d/Vob2T/kes38c3RZwD7y3N7xp4G36s58v2FZlPHvr8OOeTfObtNOfuY+P4
KpGJ+5SL4b555l1wm+8lOc/Md89l7z1TXYpMYU9hV81SlriP5657lnPLHMMH
75vf3JJ3x/0j/LAi/bsfVKR/kfq0m+Taso7V7t3oRNaji2tyvu9Dubfhzpt9
qFtZ+mA/8vyPnb5bwK6V6RP40Hz6P6My76m7qj9pP9xxc4ZnjU/0f8xO8r/K
iPMfGvzPHf/txH9rFP4fjzT/fcf/PPF/Hfwf3yfCJOsukY8+tR7/m8f/+L3W
mv/F905r/hcW/5VV+I8//svvPQE6FllGfeq+I09OMJ+2/E8g/+nI/7Gd439i
Ff5jcKbp9f3vnPH+xwbfZhb+n3Oa6R7imWa8hzjJaxR3d/Gda9+NytA5ylE3
Zens+pX/27bIuX1XOMFxnGndLs4T/y1X+G/FTs4jv7X0iv9PPNk69c5TtevE
OvA/czWuVUfTp5hXbZ/lztvp4ujketbZZpJ5ddJbYbvxtiszLDd+irih5fG2
/F/kh9py3SrFcYbjK+iUhj+Ns15a+C0cxkf7U6WdMfHbNK/6H8WnSeOp0lkn
7RMdY+G/IZkP+t9OGUVWZ3i+xJbeXRsTWxOfB2/o8Y+c597NXvW7v+vIPkjZ
YP2EyMzZyh1ho3HOiu97djugMdvyOy70v51n+Ue0ufBr4lPZuTJ9JcBOlemb
AHasTP8IPp5B+nn+T9ue39nkPvID9Qv3rdzl8pZ5Vcupd7/2GDoO+h7Wjsef
sUtl9n+3euIuaYOuR4vTX9WmDrzVsyM6j7fgvAn/oS3nApv3VmkdUplzyZuI
daVp3dB3y7AdW/Lt9FzPpJ+qh6Y4jlMcS5Nzzxrc4ZwwF5Mrs80U52pny05q
Sv/nyU2J7wzrdOidb3mreufa7fCn9Rss3Xc6D+DiOw/oPtaz/3uu48nin9mU
Y9zRcXLexhfIm/SP3FPQsZytT6/M8/VG7iOc4anH3R26f444dnBcix3bZNsu
FoiDDzsDHzRnjHbSyL62m2dxePkpbTbe0LVz/o/RnujgHsk9Gd/K8V6CvfIe
99F5npuGer4abnqB9iHp47SXsLv+qe2BDbNIexj7aWf37v4RPujd6gMBt8S+
/i1+5Oa8v6AMO+gz7TfsON41LNF25b3+SPejBb7fJ96iXYF9MUWb51OBOHbQ
cPdr9u2u7tfsc1OsRx/YWuM8LxQ7R6S/C7xDGUtz+o3medYeLb17Gd/TMSx0
fPjaW1vSt7lZS/pY8ENxF4Ev6DH9Qdu7z+O7vcc9Gvm7RB6BV7iLov6jvpHl
O407lMseyib2+7baHZ96/uV+sKdte9jXLeqNo+UH9MNuvfP98Ta909d/v+MY
ZVi4Bx9p2QOOdw/TI12PGn0Z87Q1sTn55u5GbDl8781pr/XRf/WJ64Ntc5c6
B9m7z7MVfHaStjP20h2eOTlv8tvs/NY2v5XNm769PbsOVjaQC+4s+KaMd9zI
GPoemcMXeb86ED2DHqb8k+Z8U/Flc77N4QzCOQ+Z66T8IqNLtPcnmV+n3H6q
/f+cdyv0Xafvk764D+f3Bge6jkNcS+725+ujWFvdzbrUeR5D5jgv4wvBt8Ye
xZtS6je0JM/0bMn95UD3GN5sPOBdEW8EFijHvMHhexbedGHr1knboub81vC9
5my3p20PbEp+5Tf20BMj1RXoGN5wQgvfSfC9AN8NINOs9R/fM5SmP4W7f+7v
8KNxluQNAd8p8aZgoHqTdeG7fO4S+G7oS/3T+Km5C7jGsaOjWduPte3hNd49
P6J84E8f4lqwJp815zdOS5vzXoVvxrjPOc31rFPW2nxDfoo2OLZ4z+b8LmyT
5pQlZIo3jbO9q9nBuWVeWcNvHTffoPD91WmOEz9ci2+KhitryBy/e8h7kA2b
0ie6tWvc0bZ/fINXnOeoP/ioIvkRnqiX9+BN3reODtgzYKfmXIvRzXkntNB1
5Ny/1HMK8vKIc4W8sRfjh2aPxA/V2T2zwX2TvfBzz7W8gThHG6eT/AmfNmpL
YFPUu291VqbBTz/9HCNj5b5riPPYWVlD5uodI7jZyz/zHI3c3Krs7CI90FXf
krQ2teS4HnZsfNfO75PzOyEL5NkRhiONH6ivBZuOd2ud3Ge4/1vXfXWyc8BY
6pQj1pw15R4Z2wS/4CDpWyq/fdqc/kPkiLeYt1rnD9mvzDGhR0ZJD7IF/8A7
K8pzbJ85B5v1Tv/Lhr2TH+bLE/Wu/2Tl4mPlCd451f1mlLjhA+SbvYx3PPAp
cspbr7LeyT9de+f3uIvlc+SF7yPXkA5ohva/eF+DTYnvA58GNA92jMxHae/k
x7V6573j3vowi5xzfJkPeSdJPuMe5dixJ25zPidqHxXeQM1T9z0sTtrvKC/B
U0WuJ30gZ9g/zB17Nd+z8IZljvWR32bfsiKfvN3jm8rCd5zcg/Mt0OLm9PV8
35x+J+iDtkf0peDD5X0I76y5N5jofQ3fgZN3j3cS2Fa8JcSfOdt5wn56UD5B
7y50T+Wtagfngf6w7bhz5367u/5mZI63zQvkZ9ryHpT9mfegD7pXLxQfZaMd
F+Mjj77ge2STuxn8eaw36857392lGdof0sZhHlk73nYw/+hOzgbsszu6Dujx
Ud5l8U3V7tqX6Op/6UvG74tuv1r9fpa+c95b1eo7Yr+oV/74Jugzbbel3vXg
R69UR+Bz486M9198owYvM+YG5wQb6SbtpHbay8wn+z86n/wa7+vot6tnOM5H
vHVg/rGbGTu8wvjZw9DXC7SpqQPedVpSf3aKsJOygEwM1R7GLoZv4B/ev/EN
4Wx5crb9YIcyxkr5inzy5riP8T6bb+7YA4c5tzXuyX/szcV5b8WYKpry7r6y
KXGUiKeoKc++JU0p2+gk9k9srdu9txitDuMuhDm80XkE/z32AT7qg5M7yPna
yqwPdwXcE8A/yB9nhe21uZj7ht5pu5T3znm4zbno6L1YrXw+X16nP/rl/uha
9xRsg9HyNeszUFuPfi70jTkyDl/zlgIdzTjwq3PP+4Ey+77+r8/d4wZ758P3
htXKcpVycY883UVZg88mKvd8j/2E9hhj6+ZaM3bsJN4GYOMwH92ck+GuI+Oc
o31Iv/A+d0Pwf6nzzHxXNeWbsOqm3B/bqZfYN85SHv4ftoj9Uw==
           "]], 
          PolygonBox[CompressedData["
1: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
sw38f1l686g=
           "]], 
          
          PolygonBox[{{11457, 11456, 11428, 4208, 11427}, {11694, 5107, 11695,
            11686, 11687}}]}]}, {
        EdgeForm[], 
        RGBColor[0.7999651476028564, 0.5848439815856684, 0.3488064308021547], 
        
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNnXd8lMXzx4NgQnKXQBIIvRMkubsUugoqoKggdgHpHQQpIlJVECmCCNKb
FaVKRyyIKErvxS7NhmBFAenwm8933vcjf8xrd2dnZ2ZnZ2fL89xzFTr2ebD3
dTExMbsKxcTkt/R4WkzMrwZNisXEtCkYE7PBoG1Bz39KWWlrg08ofwaN0nbk
Nxq0N/jcoF98TEwhgySDhMSYmIDBgmBMzFgr/2kwzqAwNE8a/GXwIvgu6TEx
+Qw6k6p8Xbq3+wuaz5H7GXq2RscPDD40eMRgrUEzyg8bvE/9doOuBtuoawb9
FoNOBpsNmoNfS5/Fv5XBVoPO0LY0+NhgPW06Gmyi/An0KnfANur7H/Rf6QsG
vxv8Td/Vt9EGJwx+I690jMEpg4kG/xqcNngZXIzZ5Wpl0zvd6yYY/AOPUQbH
DZ4xOGrwA3mlzxoUsDbdDa5Pd9yP4JUOI6/6x6AR35cMTiK3E2N0xsqT0Gss
/fqDcezK2OUnVfk3+j2G9AXy4jsee0THXnIuWXmmwUWDCwbTDc4b/GcwOd7l
9891Ozxu6TkrTzU4C0yBVmP6kUGLgm6Ppw2OGKyz8qPgmzPmorvD4HaDhQbz
DRYYNKR8O+UGBvUN5hksMlhs0Ij0TvILoG8I/Xzy8seHDN6jvfi8ja8+RH0D
6tRmDbQP4rvy4S7ouQhZb8HjNoN3zBZzqsTELLW0rpXfMKhncCt0oplrcIvB
m+KXERNzV6z5TFXnuRC+d9GXdwxqGb/ZBrWruJz68PnD2jS2tn9Wdf5zkSHa
OdCLr/ifqOrzqAtzSfOxG/3ZzBzsiL4F4l23l639KYPTwKQqjnsLWbHyA/DR
epUnV3Ee18NnG3K3Mnc17hr/HeiwnbFfhz9oLBQzHmG+P0o7yY2LdxtIj4no
NwWZ/xnstLru8G6RGROzWzwyPSZ0JC7sgEayt2AP9X+XwWMFnYfinOKdYqv6
MZfxiiV/PX3/D9lrcl2fJbne/jFkqP1G5KovilOKUaOJFSeYD5oXQw1imfs9
DNKZp2OJS5qvlUgrk08n/wJ50VahXBnaisgSj+cNRhqUB1eB8lhifBXoR8N/
JDTlwVegnWhvgF66xqW77kOsfMjgsME2g3BCTEwkweOI4skMg50GOwyyEzy2
zCC+qCx8VoLzOYxNzlM/Ld7jzLQ8sWYqsSaLttuRK5nbSbPI/wftZGJe1Xhf
A6TvYIODyKmGjEEGRQ2KGKQaDCSfFu/6FaNdUWhFMwC6geBEX86grMGIeF9/
tfb2h89geD1lkGKQDJ8UePWnLplyCuU05A6Gr/g/h6znGa9B5ot9bEwG53q/
s+m7bJaDLQZDMzTX+5xLvdaWSLyveS8y1hpzrUUZ2K8csiVP62Qo3tdCyciC
h9qHqVddJjzOQDeJ8dqKr5zO0y7Xyrst3YXd+mOH6oavYbA33v1K/iM/ys9a
1y3dfSbqL8MNfjL4Od7b7Yv3tns01gnOb7/la1pai/w+ynuQt5fyPnj8ZvH0
bourv1d1/j9j/1+wyXPgfiGvNb0Auol+GDrFss5rzsvfFQvk89ozKCYchU70
P2LrYwa/klc6kvwI6o6R/4X649B0QwfZSbhR4NXH3djiDeKc1qxq2F/jMMli
6FWNWabvSSYwjhozjV0owfdGL0d9AfyWeN8jRcdf+4pZ8R4LMhOcTjSKCZr/
OQYZCV63Od4hExr53Enkyif/BpdJm5cSnI947CLNJf+lwY2W/8rSbwy+Nrg5
wfN1Lf2WsvA34QPyhQOWXkbnS9SJJspHbdRevG+Cv2TVAaf0CyvXxrdqw1M0
X0BXG5oD2Fd2Xprpa/otrLXvsB/QHqcbfr7d4HE7T8QbFDSob3Cbwdvklc4z
6G0QMEgwWGDQ0GC+QR+DIHW9qBevfgaFDJIMihoUMRhk8AS4RMrCDzQYbJAG
barBAPCDqCuKPMltgE7zyT9tUMKgODyGGBQzGEpdceqVf4ZytL4vuqgPGw06
GLQ3aBs2sLRl2O0wD1ntwKu+JzaLg1cxZKeh8xD6MpB+DqCcYvAUaXIh36do
z1gq3tdG7VMUe0vGO157x1UFPV6vLugxe2VBXxeEXwmuPG21BypHWXnFde2N
y8T7HknlcuTLQXPR9h2XDGYazCJVuQiyVhT0NUVl5Uugn3QL2hlxYdDPinMr
eyxSTOpP/wobPEkqn3g07D7U29JFQW8rHsWN37sFfU3Unln54vRR/UsDimGH
NdSXACf6KL4EupVgzEsalCJ91qCVyR6m8Q57eRj1XXW2NrjOIJ9BZ4MuQFfw
HfGTTQaPGVxv0N2gh0EsuHy0ifKJgVdv5kgv+HQyuJrkvhQHj87Qq+5xfKwn
MgoYdAPyo9Mm9JH/bjPYahAubD4Y9rpBlvY1+Mny/cPul4fx2WHY40eDUGFv
u8Ugs7CXld9MeQs6b0a3jshWeUDY5T9habcs45lmfbR0IHjVP8n4KzaUwrfl
Q08xN1LoX3ds2o65eCnJ08tJnu9AXriFEYvZqTY/Lb2S5HjVK98R2140uJDk
81b5dvB8Fn94BnxbZDYPewxsFvaxjEWfHoyRys1tr1PLfP12S3uZ7JDpMNbS
JtbmvPFqHPZYp9jSF1CM6cPYxzO2TzFH+gPRuSK6AP4ieylmPoHdY+jXnSbj
rKWNwg7KN7B0vOkx0fRZgE06MFYLwC+LuO90w97aKxRnDn1AHCod7/FCcUN3
LVcsFlzlTHiZs+Qs0ivgtXfTWUj7sx629tSw9PFM37vp3Kb6l3SOsvTJTN8j
62yl/aL2iTrjiVZlnaO0v9QeUGc71V9BnuRrH6ozmOpFp/OScNpX6pymfbnO
Lrpb0hlEe0+dxXTW0D2Y6tIB4T7jjFU1T3uVb4i/do+mNuqbzroZ4NNpq3ON
5HyCDMkSfhZxVDp/Dr+N6CSeoj9ndVMNzgJTOY++xVkxjlimuwXdITxgcD/x
cUSu3+cMyfXy/cTAB6hfQ34NbVdRf5/BvZSV113BEoO7WU+aEvNXw1M0nbk7
2pLubVfSfgpnWOl+L21Vtxwe9xgsM2hssBRcU/BbuScU7ybQqV0TUtFsg2Yr
NI2h64wuwi+Bt/QX7Tb2N0uhv5s+vkM/t7H3Ec1j8W5nncd7GcTLbw0SDHob
BMjHUx+M9zsW4cVLd6E6W+jORXjVa0zPG0yr4m1Fq/uk6eBUp7Zqt5T1d4bB
BYPEeL9/1T5NZ5Vl9G0J+kflJdNWZeGT8JWC8X6/oVR3UMrLp84hezlrucYh
Bf7itZxyKnsDzf2yeWKB4oDusxLoywV0Vp+Ej8dOyxkf8RJ+HnXT6bfaBbDh
AurmoW8SfVHfFYtKI1e2TcQmknmRPUoi49E33vNPwKMv+D7YpCd20d2J9lgV
wWvce0AXZJx6Uw7gB/G0TYTvE/B7HHwCftEbnj2oDxH3FBPDxDeV38/1WPph
rsc6xcBovFOqWCYZ/eiLdP4YvdcTaxQ3dD/WHb/NIh4qVgr3GPgM4pVimmKX
dFG5B30XnWKr2kk/xVDJ34HNg/Rb9wtaJ4rhDzpLDic/HP/obXNpf7rfBegO
/t84v397hPw/cV5/AJqHqYvi1X6fwak4pxeP3+I8pvwe5/ekP1n6Y5zjmxLD
fojze0/hAxm2NtuZOpjheN3fRu+Dj8b5/e0peDcnr/S0pTnE3lzi2H3IVfpH
nOf/jPN4+pelJ+O8D9L/P4MzcX7PeD/0aicaxe2HkdcCWeIjGtHGm67NTOeE
DL+XPRTnd7OiFc/T9K8RfVS8la7ZVbyPR+nno9C3YL5Poy9ToVc7xcFjRvNL
nMdDlZX/Nc7xipXqi+4Zz8b5neMVSy8bVIOn5rHuQa/GeZ3K1at4/XXWh4es
L/kz/A5AZ896xGDxlzzJUhw/zjieYCwbMkZHDApZ+0eNT2FLD8f5ffoR6ESv
dUF42asB0BCan+PcT3TWvROfke1+Bqd+S/496PAr/Y7ixP84fO7CPlo7/47z
cX+IvHB/MoYPMNZ/Uz/U0uIGxQzSDAYbDAGGgh9kUNSgiEEJg6cNniGvtCRt
h+ThUxReOQY7zT7Zlg6El/gsN9wygxToilJX2CDZYGms8y+OvKfJS6dUgwHw
Uz6FstqJp9o+BV64WTY2ew23yNL+cV4nvHA1LN0X62tzyPwiXMXzWyinIqcI
MlJoPznXaUZbusfaV4ffkljvg3TIlS8a7Lb8pTi/H7+Mjd413OpYr1d70awy
WBnrthAoL7mbTe/alm7P8LLwK2JdN5WVl97b2GPUpE/q28OWfmDwSKyP/YPE
BNFGqvjeYlSux7oxuT5vhxk8G+dz9kfyos2CfjmyJTeCXMlPwf7JjJX6qL7u
SPe2igM1sFN1/ET1soPqdqY77ZpYbyseu2Ldh3LxmRTGXLZKo+0qbKZydexZ
jba52H8H+yjpofHpjw/ornInd5IFMtxe12f4XNPcGhnn8WBEnM+v58kfI/8r
NKIdRf556lX3M+2ei/P5PQybDqeses3FF+N8XH6B/3PQDINuOLTCj0aW5v97
sR7HHjQYDy/N7/MGFwymG0yjrPy9+JhsJvy5PLQzoBkPj5eonxrnMVa2vt/g
vliPvcJN0VyI83j+H7Km0m4VPi76s+CnoPcobKa+KLaOof+ywzj5m41BV2uX
ZekNBp0sXzXD/UzzUs+f6hKzvzX68lbX3mgqWFrKoJ3ly1i6MNfpp+f6c7QI
czwbf9bzrMpG19Ho0zN8PdO6djDOn/GJXu2+t/J3cb5OfBPnsiU3jC6i0Roz
O87n+Hj6ovEYG+dr6J/09wR9lp+/x9j9Sf/HQf8n+YcZ3/djnccLcb6+X2S8
NG6KLTPBjYXmD2T8jm1/Bz8GH1jFuCRbn1tqXmX4OP6XZ0wnMa569+Iisnrp
HtZgb7r7jd5baMNarHVd6/Ee6kVXjbVd67HoxOsC7eQjrWjTinVcPNtAs4+9
lmQOSbJYYZCW5LTn8L+dvGOg+a21XXvuGgaXq1q8s35dqerPPPMZxLAnr87e
oBO4q9hOz0Fly27ECvE8W9Xtdc7SmlWu3TuesXJTzYOq/rz3OmToGXN+yher
+ny5VNXlzkS3mqQqn2euyB476Es3+ryXfWZ79JJ+DzAHFR8nxvn+U3vDiaQv
x/k+bBL5d6HXPDxF3cu0mxDne8KTpJrv4r8GnzwDn9PwnxB3bX88IQ/9u7R5
H1+VT2vPo3mkfU8280z7um7Ypyt+0tNgd7rbUPbTWLXD3+QrPYjNu4jTuyh3
xcZdoNkFn93wFK4D663s15H9YQdkaNw7ARp/1avdHvxWd4+HuH/UOrKTdSgr
zvcyO2I9H8FGucS3aZQj2DmErSYCwoVJI+TVRnFXa1YN5rLWcK1bPQ16GDyG
DtJlD/jdlHdDo3ikPYr2J9WJDzXgXR3+mts59EHPEnX3VZ3zmZ4p65nSdHDV
KO/i/NWdsvJZxAjxOWn+3cTk/1PV7ZCDLXLpm+TqPqwWcycLG00GpsBnKm1V
Xpzhe5hlGW6PGvRH8bWWwSyDinEeTyuRH0VZa6XWyTKkZcmXI6/1tTR0wism
VoaPYvYNcR57q5J/kbxiegZ+n0m+KvXjkT0GPuI/DBnjaZOB7LLoNSfO93Wz
8ZOJ+EMwMybmVUsLZXqfqzOGs/CLmfhUJnxD5IXT3kN7kPL0dwQ42aYCdeXA
lcduFeKu7V0qgO/J/cBuoAd+oOene7lTmIaP5HKnsJ/7CKUHyOt+QM/79AxQ
z7T1HPEpyl9xd6D0SfIHuLuItv0SvJ5ZDqDtE9CIbzzzVfHyC/AHkPU18lSX
kO60/ZH1NfAk8nVPoPvkZ7krKJXn7uA57g2UliWv5za6i9Zz62doV5K0FPmn
odF9hJ7t6j5Zz25nML80z2YyB2fAM8qvBKn4fB/v72voHYux+GaVOMcNBv8N
NpJ9etNf9VvPj3WfovsV3RWPJ6/x0l3QPsa1B/Naz61DtHkq0/UemOnvT+je
J5vx74UPPJvp7zQMy3Sf2QN+Kn6hNj3xIdXpmbnucXTPNBl+uhOaCE6yB9Jn
9asn41sw3fHfUTeEvut9ljhifkHGuCBtBuIz3wEDsNHQTH9e/3Smv3+RhU66
834RO+2jj3uxlcr70SeO9SWHM4vWt3HECo1LOvFE+63tsR7no+uGYrjWjp20
17q1Jdbn8NZYP2uVivMzteb05liPGznso0S/nbVHfLTeCa99ltZgnZm1/iqO
bIt1nhHywklWJjEjRLwRjXT/PNb13xjr+RuIWdJhU6zvm/awp6tKnfCl0Vnx
TvcBz6J/dfY52sdshJ/a7WGvJnw6Nvss1nXbjH772P+ovdpWRVY1dNiNHbbR
v93sAWSLKvRFPNcbfBzrcU37rv3sqTQ+n8Z6rN4Q63nhakEj2nLEwnWxHidF
+0ms14tOZ+b11H0CL/FRXvW189BUyBNrpU95eCsv/jqjl2Ld0Jq01sofsq/S
OVjj+lGsrx3lyJdDt33p1/aVG+hHOjRraTMt1/WZketl4SXnA8bvQ+RrD1eS
8XufvZx4pjNGUf1EP4xxfxZ7t8PmOodpzDqQ/5zybNa7WvjJD7TVvZH2itoz
tmS81mMX3a21iHW8cK2wi+4hdaehezjdDek+rTn9Vb/F/ygynoFGZZ2n3sfe
H8BLfHTHo/Pd94xla2QNBKe7Ke3BtN/SXkv7mFrYfBZ9qsmcl/3HMAZj8W/1
cTD9bEm/1M9D4A9CIxsMpTwYuR9Dv46+rcMm30M3iP4/Tdt09BiLTT6Cvjl2
k410htV+UXvFNvj/BsZpE2OnudiRcifywinudDfoFutt1a4tPFrj/+3xh89p
3xGeG/AR0esO5ht0+Ax64XXu17zeDuxA1k7k7mBcBjBmil9dDDrHenkAfVtL
fz/Edz5hTBVntkLfiT5tQWYX6h5D1k762Jr+dUWnbuS70K4TPMTzMOOhsdAZ
QmcJvWdzhHcZDvMew0+81/BCovmLwe8G5Q0qGHwctP2GpWUNyhh8a/CUwTcG
+w32GdS0s/B6o6to+U+CXha+RpLz+iPRed8r3lb/m8EIy5eDb2mDDw33QdBl
rA16uanlV9LuS4M6xu9GZEm3iui3Luj6ip/4Pm/QwyDW4DGDl8P+PsZ4S+PA
q168bjL4ir6Kr/jtp0+1kly/j4Kuk2RIVjlkPY+dPgKnutrW5gvLHzA4GIqJ
aWzpoZDLlcyeBiNpp/YlDN6zdmsMrk+OiXnT9Cxg6SVLZxpcNDhvMM3gnMEF
g+ngvqsUE1OvckzMLZU9LitWKk6q/H0lr1ebqQZn4TUDHipPMfgPUH5yYW93
q7U/SKqy+PU2Pfvw+5aSBu8HXW+NyxeMzZfYVPaMo68F9Z5SovfvXcatPDaQ
7b9OdPrPzUb3WXrU0qmMl8atVKL7heTVwba18Sv56m+J3k5+JT85aDDI4PtE
Hz/RHsBXa5HXeJVlDCvhsxXRaRS+MMSgmEGaQUNrd8TSBpaesHQ0dPWtfMjS
2yy93eAotKo/gW6qk063WnqLwXeWr5fkvGWP1UEva17VtfRn639by/9o6c3Y
R3ZSneaccEU0L6zdiqDzVV9vQe5v2CVs5a2Whizdluh54dpbetnaXTJol+hl
5UUTsfrtiZ4XbQTIAv+iwTiDv7DFYWxwwtofN7jHyp+a3scsvyHk7XYkettn
8Bv5e1GDVUHvg3z0W/z4BHNe8eEtG/sD5gMbLB3MOKhdR4NOBleDPgYVGa9G
JutHS+9Icvgh0cdkRaLrtdzgJdOpnbWbEHI5wqte+XuRK5/dbbDH4C6Nh6V3
JrmcUYz9IHTRODRJ9L7/GnRfGIwP3m1tfoGHxmdgoo/9GHxuNPLVtgn9ky+s
wgbSayXtJCfVIEX9sPplQdfpJ/o9IG89fMXzMH4svXrSp8ex2Wj0OMG4SebF
oPue/KJuZR8TjY3i0Rs2FvktbWTpnYV9zfiJ9UO497JiYpYWi4lZaOm4sNNM
sLRSts2BEtYHS280fl8avzqVvY3a3mFpQ4PbDY5aeUbY36ObZukP1Isu1drf
YXxKZjut6kSvVGXRnTLZA4rHxPxr6dtWvs3gLYN8pvdrlr5qEJvsuLn0R/16
3eCqwSsGc4iPM4izV8DNLuw85xnUJ0YrVqv9dcnOQzJqJbvf7i/s8VxyRBeT
7PIlo2ay04mmNvQqH2VtbohNlG9Q2NfpBpRvUYy29DuDsWajPuqLpTdb+o3h
vi7k/T5o6a3Qqs2t6H2Y+8S6lv+2kLeJFPb3H1826GXwuMFeg3qFXY7oZklH
6V7Y6ScZZMH3LWx9GzIOIeMgunyPLirfaOlXln5ZyGX1NkggDZCvbfCF1R8w
qFPYaVWORz/R3FTY+ype0ku0+9nTSAfZqw88xTuefvWiD6LdB8+C1J1nzKex
Zp4j/0nY7bHe0n2M3358oUHha/JUnm+wgPGbj183BLfY4B3mz0J89nbazodu
VdjHYbGlC8NOv4T51Ageh2wO3WZzqL5BP5sP9UrFxDyZ7eXDlbx+MfSLkLOI
8h3IVllz/Bujvbmy+7l8/HJhny+v4rP58W35+M3Qf13J07rEB7WRf1yijXz8
Kn1eSB+l00H01r7iNvYYq+mv+q02mmvSpZP155uStq/NdtmvoVcD+qi+an7F
MscKJvv8jGN+x1F+B5slWfkD47W3tO0ts70sfGKy5wslO63aiqfa72Me1Ej2
vZP2Y4oLL1v7OWbzF7K9z7Oou4wNVd5HO/mK7PWVwU2VPQYqVXln2OXuDfv+
6yx+FzBcMNlttxA7ClefOfY2ZeETkt13EigrH5/s5Xjq5jHeifRZefFXeZH1
oafZZEm221Bt5tHmbez6Nbpr/HthE/XviUTf8/UzyGfQ2aALa5HWKa1HRXlW
tor1rEiS4w6xNmm9LGTwjtEnWVrYYEnQcVrDn2XvUJz9UjHWXu0dtC5uNtjC
nkByVie6rD8NHkjyvUpiousq/kfh97TB3+xlHmQvMxSdpN8gg8EG9xg0Zd8n
fBHqfoBPlF8JeG7FDlvYJxRhDV9Je+mWbLA06H09Qruh6PEXequd9nfRdV1r
fjJ8O0f7m+j7haL09/4kb6s9UgeDTYm+9xiEDpvAb0z03xEEsY3yShcHfR+q
/cRTjJX2IalJPq6d6d87jI/G6SBjKBm55seTjDYn7OOk/Yx0/NWgseGbJDmv
FexT1N+HknwckuArHfomum46b3yH7gPQNQk9O9IfjX9H0k70TX1sD734iN+a
sK9Z74Z9LFbQv59Cvq/9PeTyRK8zzi/sw7UfTw67nqXCvt+Vr0T3/Uqj+/uD
2Ht4op9phyX6HlDn55/xNfVV8obyHFnPk59M9H1+/0TfL/4CvfaQx+ChPanO
j7sS/bwgu3wL7zLIVF7nX51ttM/Umbsy/ib/kc/pPKq9ofarO+GnM3Ij9pM/
Mp5F8/hNKvbfhQ6PMZ4aV+nXE7x0vIN9+A/4h3x8KftV9UkyCoW9/1XDPt/S
kPkL/NSHXgbxib5fTSAv3PP4k85qmjuaN4exnWQ9SRvRF6T/lfLYIx1cOuWx
BsfhJ75FmfeKJeItP5aOikM6v0RjR3FkbzH/OGf92xzyuCCfGpjk58Cj6NgT
naTPMcZA9pd/lIL3z4yh7NOA8+ZhysMYl6PIPoJvNMY/5Ds3cz4Mhn2OJVp6
t8E5y99l6WHuInQnIbq6nDkLYzv5yGD8MY0xfJZxHEi/xLcQNla7zfR9Y8jP
n/J9+aXWAsWL6xI9dupMqvg5zugiRj/G0g1BH4PPgj4GuiNSDBM+Oj7d8bXr
GTPVfWqwF1+QTaslud/lJjmPsYzrHuqqJ7n9SmPr7/Dlb6HZC58q6JIOXu32
MiZlaC/ZuiuQP22zPpy3/NaQ0+9GnuZUtmKgQQHL5zfolujrku4pFP9/CHn5
QsjvVdSXffQ1lv5Kfg10OI79dP4Ubh96V8Iu0uvzoOuvfqxEjs60uvfQnYdi
25Wgn/0VHzOT/G5A64nOfRc4+4W4N9gCvWKrztpfMe5a67Xmf0Ve9zF9kfEE
eeEU68Yxphe5a9A9QzZ3AlnYagf2eoJ24q04HoPcfOQ7o49070g5BtpV2Fb9
vRryNeBKyH3hT/S4Av5SyNcKrR0ZzBn5v+bQZnCyzeWQx+r8YZcpu2lN6Rjm
d1Zhn4ta94vTNhN7ql8af8XLrviA5kJa2GmKht1efRkXzY97k/xOS7FOPhFg
zDX293DG1z7gKcahEPbvjjz5juKnYudz+KvuzUqho+7fpOd9Sb5P0FxRKvso
rzgjX9dc0dyVD2xDXjI26s54SZ5ipdbz4+ghfZLwgX7k1S/N/3sZc80D3QUp
juruUHr9GnLfOBZy/t2Qobj2fOK1+9xjyJQe36DXPciXHpq3Gm/5/7mQ7y/O
h7wv2xiHcdSLrhh7RcU64bUm35DocURzeRdjmMs4akw07/aT38/YDWX8tU5s
CjmPXSGf+92wWRV4a45+zfh9BT/N/b3YvCt+orhbCjt1w39UVwB+ig+KBSPx
D63P2itqz50AT+mYiI9pTBTDdKcuv/gZHxmOXlWwjWi0d1jLfeB25N6Hb2oc
ZfcUfOJiyO2YxD2t7mhL4k+/0247fRCfH/Ev9U+/s9Y7jnpupPsEnQEncY7S
+byGwZtJvtd5w+DtJN9vvWXwWpKvd7oX1X3zq3nyr1CeleR3+DNpo/3Z3CQ/
N75tMM9gfmU/T87jLH1bnroG4NRGa9ub8H0NWdJJa+jrSX6vXBOZtUhnJ/nv
Ht9C7q1mo4PiFfbfRs6Fp/joN4XK67eSb6NvLXjo/lp7T+2V3wM3B7zSOuSr
mb32WPvdhdwGdai/kbxw85J8//o2et9Mf2ZgpxqkNcnPT/K9iNq9hW1kI80L
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
ZrmOc/GzYqwpWltewIayxaRs92/9RkG/CZE/DlC+kseOQvhM1F+SbL1JMNyF
HE97E4+GoKf0Pca6o3krn9b43czcio55IWLXk8SnwuQ1lpKn+PQ17b6hv3/R
55P0W/l81sfrSvs8HI3/VGSMK1M+gW2aGhQo7XaRTc5onyF5EZ9XMaV9nuUj
VVnzMn9pn6/XUX4NiNK+Tp3oCkCbHxnKC7crx+XvyWEPob2ApfUN1hS12GJp
ibSYmPeKerkDexudaTuwX1F5M7hNrGfCty/rdyryAfX1V/IjDZ6nPBI/U1n7
Bck/UtzPKr+CV/1h8ENJnyY/FN9R/QjGV/Sj4C15j5reHxu0NFjPOeRjpabf
Wduf/lfGy9orrDPYYPBZqp9bLpvPnbb6k5Y+VNTt8H5Rp9Oe8iO1K+u8xGdd
UZfXoqjzFr5VWac5Y+UWZZ1fC8pqo1T1Orvdyrtk8zhHKJ5txNay50PIf9jg
T5P9V6rvTbW3ac3+qRWpym1IPwU2gBvM/vaQwSyTf8ngssFMgxkGF8HNArfS
fHGHydkV8TPMeYMLeehE0xb+2p+1JW0Hri1yW2KLj/GTdtB9DH4d/WxH/XrG
TePXgnrRpeR4Ob+lueajn1j9jVne9/X0fz22aAn/9eRbRX0BUFvhPsCusq98
QGfRTw0eAa/6T1L97Co/uiFgOiZYvLc0w2CT5ataWt5gneXLWVrG4EPLlw54
+SPLl7W0lMH7li9J20yDzdSJZq1BM8s3NziV4OnpBM+3IN8cnpL1EfSPSF7A
+YhHGfT5OMHpKlp+vaUVLN2i/9CxdKulZ+D7qEFbgwtWbmNpmHrRXUxwvOpF
f5o26tsHCd4n2eIzy6dbWtngU8tXCrhdNia4zSqgj/QS3YYEpxXdJ+hYBv1l
u4v4pPztX/opO7yPTMn+0MamWVEfK6VrDZobfES6lvw65uYnOR6TNuR4OUqr
th9Cr3lzroz70FlSlaPzSnPgA+gfYd6vw1flNzr/y1/ycQeou0DNsfZ55vNl
5o/uw/V7Nv1O7qfo/URF/56WvvOub3Z9gB99yNhoLM4neHvZqB3zRnwvMUfz
6nshz7xtw5y8wLxV+7ncoSyKOJ+L1MmnZHPZfj97GO1n/s52/f/J9nOPzrfb
mR+611GcHV/Oz7MvlvO99I/cv7TkXKaY25x7G8leYn1eyt56OHc7uuN5gTNh
Zc59o8tdO8uNKef1o8lXQl5VzkSVwY2BRu11J6Hz7g/o0xiZkq124zmTTyjn
53TdCTzKHYLivu42qnG/MREa0bbg/Kg+qc1L4MeTF0+dHZYgLxOc6rS2aK0t
mea+c457siWcx96p6HpX5JynuD821deBsdhHdiht7cukuV9+wRmkL3CAZ0yK
cZJTCnnvs7bth0bnH82Bsmk+L8qRloX3Wvy+ZY7fhdyT43K+ZP+ketGJ/kt0
iMqVTM2b0qQqa7+2H7nv0N87gcX0XWM5jrFVX8dyR9CGe7bWxOy23CHeQP04
aMdR/rDoNfl9kak+V+BeRzZujC8s43z5DGe1g9x/RO9NDrH/0LcBDrGm6hyv
u8uNBlPKeOyI3odNZU5qzZ9UxvcCv9n8ednS70hPU1eN+8LqtJkKr8nUi8eW
VL9X2Iys/6DpDF71wk2hXXTPMZmYWh0ZNcjPAGaC0z3FVoNtzO2u5B9kPyif
2cp9RmfkbSUfsvX4fqvPyvL6bbSfTgyaQb/OY5tvs32/8b2l35AXLiXbv5mg
byecR1/Rj2P/8yK67eB+bR17uRbs5driFw1L+L4yur9U+XaDBiU8L7zuXzZh
zyPsK1Xfjj3h56k+zvVLeN0hxl7ljYz754y9+MgXAtl+V5SQ7Xw+hy4B/IUs
l3EYvpu4B4reB21mLD9hTWnFvrMFsXM9uP/f19J//d+P7rKXRnwMNBZVLP07
1e+qZTeNn/aUGk/1rx32+hSbSd4a6h8o6muD4vT0iNv+b/gsifid6uKI7xPa
2XpxydJ/OcvoTKM9l+52tU5qXiVzL6J4+TJ3brqrit4nFebOIToPl9Jmmu7t
bS7OyPE2E7nz12/5v+WOQvcKyys6f/FaxD1YCnjxGwDtt+DUZkVF5zUhxdee
RO5vFIPKVXC568rb2TTF35GaneLfBBjCGfOj8l7fwmBUjufHWLqyovPWXUZn
s8V4a9fd0rIVvM3a8s5feeFm8b6V3qkagI7fwb8cOqh+FjpojSiMrS6DU92/
FsseMdpm5b1PelfgJYNSrHt6HtIn4nfSgyJ+3irHWawpOq+k78/T/4bmQ5X0
/+NZfjf9WorfaxbnDlh3yCOs/heDYwb3FrMYZ2lTS09Yek8xz4u+GG1OUC+6
5zm7SdbNvG8kGRWsbqTBqDS3URnukBXb/yS+DwenurLk1ZePbAwGWbo2x/te
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
/AMZ+fGN67DPPObA/wHc2Owo
           "]], 
          PolygonBox[CompressedData["
1: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
           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.9094818994048739, 0.6437047485121846, 0.3193938881551089], 
        
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNnWeYlUXSsAeYYQYYooDkJDAzZ7IK5px1zTkrSFAQBMw5KxhBUSSYs8ju
q65hXRNGFMWcc9w1YMRVVPzqtu7zwY+6qru6u7q6uruq03POwBETd5vQsqSk
pF/7kpJWgd/sU1LyVsAxAe91Lil5N2DTLiUle3YqKfm+Y0nJHoFPDtpJAR8E
fLFGScl/As4OODHi75t2jjTSPg04PeCTgP8GnLtGppN3s+C9eZfExN+zPuKE
+wScHtDX8GnGTzPeO+DsgAEBZwX0Fw8wfKbxgdLI+1Zdxn+oy3Ty9ROo54yA
U60D/mvXpx661me8l+mnGj7FMn2V7Qzrhd+Xtve/6uGzgDMCPlR/W0Q7Pwq8
ZeCtuqRe/mN+0qCTd7vA2wd8js47Z3gH0ylf5Aemfz5R56eJP7VeylEePpSj
zo8Dbx14m4BPOicUaZ9HmbMCzhSQ/3PDZxj/wjyf26f0Z7FtHxgfXp/ybhj4
06BtG+HPOme5Lxwr20nb1nZ+Zru3VsatTP9c/fZU971sM/EeAQvUDW29IuLL
A64M+NVwkfabdPJRz53CAsveap/81Qch3ykBJwsfrJG0W8xX7D/Ct8kHnvO7
ZHvmG29Vn/UOCfxdzKfdO+WcAhP/NmBm15KS5oDLuyZtD+fe7VH+DvtpW8Pz
xdtK38r60dm7zqcTOmfZrU3bxjA02nKS7empHk+x3ImWPShkvSHy7hP465gz
nYL2Yl3O85PVObC6c3/IaiUlQwMWRpm65uTfuznj0B+3X9D9Wp2TViV9TH2G
zwn8UV3maRnhNe23taxjdeXrroxFWYl3065gR260bxiLtxiHfoNx6Ddrg242
Tvgm4zetYp+6W0+xbnT0vvPuJMM3Wob8yx1zB0Z4TfuUvv1MG/GpY/ksx/M+
0c/7BizrmPjnjhn+3Hm23eCM/9Qx854ceukSurqyPuPQ9+6UtnqvgB8i/qO0
nwxD39t04j8IjC/KTQx+7QImrJb1Uuf2AdOjL/aL9KsC7xT4roCdO+Uc2CLS
twy4Wxppt0W++YHvrMs8H5hvi+YMNwW+Q16X1WVbaTN10KbOAceslnV/oW1p
G/Ejla2tGFmp956AXTplGcoeHdA+4KiASQGv1uW4WFKX8tGXlLs34D7nH/Ru
jiHiu5m+unmhU8/d0p53LrwU+GjnCHNldecDec+qz/F9ZuBzHdtnB54ceEpA
x9XSNm87OPt4ojJXBmwzONOw5UfZnkqBdpN3W/OQF54dbG8nddDZejpZV3vT
O0ibYr6O0ibLczvlOdOxypi9V538M2BXMXHs4kcBpwZURdsOxsbUJ+0U7STh
j81zUJfMgx08TRppj3VJG3GQwLx5zPBCy6wd4+aryDtMe0I69maY9OGBf6lL
P9+pPn34qfqzs/SdZxsu+tLTrP8vn+m8pM2n6ws/FRfXHR8bL4ZP1ZduV582
bHR92tCPTPtQm1q0rR+ado7jgXFxoO3EZtCux21vm0ivCBgvMP6hfaLMWw9O
OnnGmd7WPC9E3ywJGBdwa+hk28AX12Xf3WP/3WNf7iLs7Pi+ri7LPhy4XN7U
sdXgrJO6oR9h2suuqVhbYadnavtmarex39iIjxwPc+qz7PT65AmddGR+PqC5
c9K2si70cpBj5ohOmY92faIOGP/PSycdO3tF17S74LUMN+lXscXIvUS9HhZy
nxE2aHJd2pWXnV9Tg/ZNwLSA0wM+7Zj5lkoj7eKAi7Shl3RcaXd/MH6xaT+s
EiY/vn1K1Hde4FHW+5J1v6R9oz//XZ/z/8HA0yPvpfoAfMGMjkk70na8GPBV
xL8OOL9jxl+SD7Sp0gHq/UoZf5Tvi/JBLz9J+9FyX9vey7TbFwW+O2RaHHnv
qU99vmBZ+hJ7f0vAgc0Z3iHwAx3CzwTcH3BYwKiAFgF7SNtTWkvp4NEBrTpk
2X8F7CXsKW2M6aPNP8ow/EsCRgbU1mUdvQO/FfjtgGMDLrAf6c8XHMuMywtd
i31nGmHyPm8byQPtQun9Yhz2dU0Mb+rYyPTv7O+qqPudoG8c+NnADUF7LvCf
MRZLupWUzO2a7dvb9u2g78MHEv7b4NwbrN01+4kxvXfwuiH4jK/LfmB8F2UE
M877RXpfx+0Sy71oP63p3HhUn/RIfZaB/oLpS+R3fcesaxN59XVO9BET378u
4zsGbrR9tLO/e4QB4rMN91Nnxf1Ff2lnGYb2kuOadn/ueHueOVGX9R5alzI/
b/uv65iybixcr8zocgd1eLr10mfYi8O1O4xv7OFSx/ou2sedtY/Mgd1Mh84+
jX7ZcXCOh6Wm7yIv8lOWebaT+f9jma+dfzvrR1lz/DXOtNWX1CXfL90P7hjz
Z+eI79S8cv4z94/QFpbbDuKtA86rS/q1gafVpe06mrkrzyJv4vjOMZF2WeQ5
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
pbbp81ubTj7C5ZWZt6Qy/dCf8imtzDwl1gH/ysqU9Tb9G7LQVvJeJ60YJ7xM
u8aejbbe0m7lerddZa6v3wi9vx6w/tDUzc8B+7muZ438U8SXdU8/TRrxH7tn
OvR9XE9/2z3X36z9f2uX60rWjLu6Ll9qOvmWWm6Z/OAFT/YZP4iJkxd+33XP
9s9VT7T/VvVRaTtozxz1R76f7evLuq/ch3zfPfnv6Z5mD3lTBzpBR0U+K+S1
pzJ9L3wnP9r3e7tcX891H4ytWOD7AO7meLvAm5L7vIfkjg0ab0ke6LTyjcv9
pvfyHq6nNNLIwz6Pex/utLnf/VfAg53yPQK0dt4Z3mK+++X9gHnB1MmblQel
8V6GO52HOuUekn1lhfdA7C2hLfaed35d3nkW75TAxHtK66ncxTrgD99/Ww94
H2UuxvsrC/mL4f6moTt0yB3mvpb9tzy5Q4bGW4dK7zwJg3nz0EFcvE+9zXcb
d3RZmd7BO1Foj9Tlu4MP67Je7qfpw2PrM8w9/HxludM3GR1XuXMtvtFoZ33U
xX0YPJeo6+Kd/N7qgPaQp9k7tBeML+m0ss/2ckwU34/sYfx+78/WtFxRL/ta
Zk957GHeYnxP4384Zhm7sw3/IayQdlFtzuELA08NWB7h82sTCI+tTRux/+o5
x6aEzT0/8MiGtK3Q2SOwruzkvgZMvGPgfcOm7xPw74AHxcT3cV3M+hh+XwdM
7Z6yHlK5UkbwoRH/RlsyTf98ibbpR+3KpabB4xthqnwPlR98CY+oTN6HaXNH
VqYf4rwBv4QtGGkaef9cxUaMMP9P7s2pd1/b9VBAQ23u14bV5jq//ZBcz6Oj
RwIe1YayB0Kvd7je7xD5Hpb2kDolL/uw+aHrhYEXBH5MGmkHGX5MWCiNOjtY
7/7yfFh4xL58xDoI43f3HpR++OO2uYf/pG2245O2K89iSEM/YOLQH7RskceD
9m9793f4evSy36DU08OGoXV0nNwhIDO06d1X+qLp4hn29SXa9bauCY4MGLWK
fz5S+njDE/T9rBvGScfXHq5PptzoyvSlYwLG6lNLV6GNMTzasmMtP06+5eLx
1o1Of9EnMYd+a7fy/OU35+MK96DMwaWOV/wn+ThfWa4/hc45y9fib/RzM/Tf
Y5UJeanvctMvacgyJwU+tDbPdnaoTX20q1zp/4hPNDxRH/ud/u8ifeCF+uef
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
rQq5PmoTeL7jjXHHHOjaJ+fE9Y4Nxsg16o8xQl03l6dtLS2kn2hbSP1vaF7k
Zawjc+kq8+aCxuR9YWO2kfDfAj6L+bFtec6Rb5w7X/dI+nbOn/OlFefVUucZ
c3OU8/FL+4o++9h5yfz8wj79XDv1ufFPW2c68xj+X1nHV9pe/AO8qaNFwOxC
7pnnFFLuHbQdVxRyP3dl4LmF3G/OK6QO0AVz/lbXyKyVv9fW/VmT7aadyEI/
sbdH98hEGvTzbNeXwlfKNqg27XK7wGsYhjYv9Nst6rq6MXXxtxjbO/bMMBge
t7n32rp39s1Y59vfzIetKZOOr+BcgHss3sQ8EXK/HHItqEk6NPamExyb7cpT
z5+p652sk7p36Jl1/Me07Xtm/6D3XXpm335lOykHfeeembbUvt+1Z84L3mz1
MP6N5bfWJtG+HeRNHbdLY7/yH+c36fNYt7VJ/zHJddOr5VlncSy8bPvZM7+k
Hgjjm/H37AXhy56WejZzfrBuIT/7bfZ9D4S+XgnakzW55njUM9d/qk/0+ohn
svhS1mnwZL0xXh7wIo3y5D2yPPXetjz3/vQD74ced3/EPqmteeiX3d0nsV+a
ID9kxE6869kS+3feGbEvoy2ceZB+ZWPu8ac2Zh3koc6J+nr4Q5ss/VXlYXzA
lzMKbAr9in7R7SUxT2aH/s8tpP5f1U6vp+/Ah/DW7HnXHzfq2zbVRm2inbpB
W0f8Bs8jyMPbNPbzvGW70Lqo83lppJFvE88voFMfaTdqVzd1HYndu0XZuC/l
3nSzVc633tDH4WPmOgeZi7RjPfPf5NiAL7Lxfo5zAQBZoJ0TZTYOfscG7h2w
Z+iqT+D2hayjrpDlXrTczcoH39sc/9ibe5wfzJOr26QNw5bd6xtJ5lAbfcGz
NenHjnIO43fZ6xb98HXue7s05vq6c2MC4d8bcg7u5hydr79j/JZoO5ln2GTO
xLDL22h/yHOM+y/2ddtI29b0bbRRW/fM/Xpx3058G2lg9krbiolTJ22eZxto
C23HJhXzXi2NtFdtOzogbbueK+0X4e2lfa5de9s9KDKf7N6UPepx0t82jXOC
jdrk+GKcvdsr8Xu9Mkz6W7Z/g9DnHVFHfWOmvdMry23geQN5KgNuZa5RR68c
J+R7030sed+zDsbmLealTDM+PsJrB55cyLOPswrJewP7+xrD6KamMfVcHXh+
4DvVQWfPKrqw5zcvZdZX38TJjx5pzybKiKzzzLdem+ynO3qu1DeYco+V5/qc
tTi6QX/o8/jmfCtyXOA7I61TRcpCGLygPPm+HuHXAlaLOrsG/CN4duKcpVe2
oZNl5pdnGxZYnjD6+XvE11XG19TpG7YVXn/vmbxvK0+90id3Kjv18A1+8bvS
E4bk+Vo38YmetZ1o/ATDJ0lvW5F99tcaK/T1fq/sx/fExMdFn20SskwIvLG6
QUeEob/jWQh0aPCDbzvbtsB2o2N0vVC9rasvnFbIfdl5hdyX7BJwd8DOYuKs
y9Dh9vLb3jh57jJfh0LW16mQeQizLr9eWa9T3o3dD5xTyLXz+YXUyfvq5X11
9J5wono7NuCtgLd5rx66v1cbdHqUHx18TitkHNtEOmvn4RU5x9tUpE7Q85mR
b0zkP6OQ+4D7euaeaYdV2ne/tPusZ/eeK/dC90rHRixwjUN7brB9813bsp57
vDzXfui8SyHjAwrZxg9s752r2JuN2qzcAx1kOcpv73ykvvObs+zU5hybO0i/
Vtuzof06zzG9kfzQ+672J/2MXb7dtedt2umtHOO3Gb7DebOt8S1N39Zydxjf
Ul/JOSp7WM5S7zDP7epjvmPmHvPsqgy3mQfabtKZx//XM+cfmHi3gI4VOZ/h
VfCbq4uEGr/RJHyx34ldvMr3ZLzHYu3Du3a+5+L7rvNM57tZvhe7wG+2it9u
XSDPanGN+S+2zH6+k+I+H/+Mn4Z/eUWuJ1inLK3Idn1bkX6DvTRnnE2FPLfc
upBnm9Dw5bublzJbmZcy8NlVHX1TkWep9OU05URm4tB3Vo+U+cZ8u1ruK9P/
Oov1e7jid3FT/f6G37kZ5N0l3wry/ecMv8+ZYRzdnW/ZBr9fJO3AutTtzoG/
qs9vtb4OvFNdfl93QF3efw7zO7FzrIv70uv91q3M7x7L/A5yunXUr5JG3kvt
t0tsP7JPE4bannrzXCpMl0Z5+PAd7JF1+X3kuXVJK5c+xDbCZ2F9/sbCY4Gv
rs/fp3iqPoHwk4GPG5J3QscKq3l3Az7OuyLOy9lns4dez3P017X/nHF84Fky
dwasi/Alx2sDpwzJtzW8kSCNPKyZOG/e2vVT64ocd6yXjzb/FPNzfgBv6sC3
UCdzr32U6aAPxaZ06ZV+dX19IfOO+dzBuUcYGj52gbbpdtPv0EfCk7lNOvmK
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
i7Nazi05s+Sd3tdVOa6/qco8nNvyxu1hy1H+bMuS/2Z5U8c50v86/xyYNorf
3jvAsuzH149863mnwl0T57PcR7GmqNIuTTM8VPlvlD93mSvcA2zgvQrz74Uq
3zpUJc/z5Us6+ajzEO9CKXtwU67td2zK/IMtQ1vPs73DyvLO9CXnMnN4bWGY
82W6ewTm2L3RH+sE/b7AfZryTVDfpuyjx70LXWh/HSTtYGlPOG8YM4cYJ9xX
PgMDD1ce6uauYuOAjdQNOtpUGmnXGwZv0jfHw1T1eYM00gbZ/7SbMV6q7drU
PDf0XXn/Ae08dYV+5ql/dHtJdd5JXxp4YiG/GZ5UyPUgvpm788v8nyb+r4nz
bc62WQ+uJyZeX5f/ecf/H1KGsrwfwK6vpW0/SDr2/vSyPLfFfhxYmmnQOVPY
SB2sbdmibyC8ZkDrqlxHXi9wzlnGPUlV4uK5J2Hy/uo6BPsCf3hz/kT9nykD
9/zsx9lPc+bMmeupZenLrrDeA0rTr/G2cm3lmqWf+8V0yp1m2X21f6zVaNPb
nptA21d7RH3srRvVCWU5851ayN8343fOmt1PFfdVTZbZ0HEET8bcCs+73vIs
k/RP5IlcayvvMNf6ww1PL+R3GJcWsi20gz7hDqJUfUI/0D6CL/yZn2+I33Q8
MKbYJ1ymnLSLeHG8wA++raryLJ0z9pYRLrdP6a+SqjzfZw8GblGV+biP4K6A
96sjS/Mu9rDS1C86Zd3LHeAI7wEb7E9k4Nx2U+fbJvY/42Cduvw/1PXqkvfJ
8m+hDMjCuGH84IPO0c5j72fop66pTh/JmxTevuzsd+tbBT6lLMcT46Fa24i9
/NC6PnDs1Tv+TpFOOjIjL+fgm4uJj9Mf4Zfe9SyZNp1iOer7F2u4kP3BwJ2r
cn/bJXDbqqSzH0DnFVW5Jv/V+YG/Yk6c6by4xv5pJdB319gX+H/uRdintJUn
fODBGSZnUJwJ8b7lJtf+1Dfd9pJGn7zn2fr+6pl+RP8t7fdNtGF/nb+XZd34
3TZVWTe8b7A9xX0U9bSxveQhfKD2G9lOd55hAx71DQq+bqo+DHv7jL89/3Rl
hhf5e/Fj/R3/5yrzfyCeqMz/ghhpXso8KY20p0wbIf0pwyPM86S84PmseZ+S
12hpY6x/tDIU/E37Wn8Hv9Z43Sq0gr95X/zte+I1AYO75/9kDOmevA6zffNr
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
ils=
           "]], 
          PolygonBox[CompressedData["
1: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
+a1UTBTKF+abKSXOCSg3sC7rWLuUvl6Gbw6du1DMO153feS3UG/47fB7kWNN
tXFCe5U16MzaLUF94F20Ga/pN/V19RXzXfgYmqq3ijl808QxjmKdWvRxnL15
DNWE/5Tx3kixvo/CcyodS8tnle/agrIPznGfneEVMdtKZ/BJeGmlfVut8Tq4
irI0fb/D+l+hu5mywmaO4RfCBxOO7TTmL+H7sr77lIN4FB5KnQ+b+MwNhlei
omZu4xn5HhmPVWdIZ0kxvWJ7xUifwr+OfFfpzekD74jsOykG3hY5R6Nczcuo
Uv4PfY6j/zI0FZ6Z9duhsnvgr+ljS0v2P+fvDFwHm53Itw1rw8Mzvut1xqbo
d/pYV2ifN6v7jj26vcIx1nB4f2hfXXVq8fvg0LH9WHSZfHlsNgrb7kEH4Urq
LKfuMhSPfAZ1FnVGn5G/EjqWVUx7SXUOqEt1jku5riGh2x6HroAbZ+zrKEfU
UGPPem73ouZw+8i+pe5w3eUzI+ca9Gbp7WqOjb8scQ43Db8Z+m2Uz/yW8mnM
sTPqh65GT1HnjjLnUJ6EF8W8N89qj8JzKfu51D7E/QnnZJSb0R4YD++K2deQ
Td6DL085VpNNu1f30a86ZlHssrrSd7v2jPaOfEj5kj2o3zHlnLJyy4opz085
pzKm2n6LQ49JYwvob0nMMXK76jlpbu0i+x5aE63NcL65WWcX/Ub+QWhbq6w7
PAJNUC4L9YTnVsdbihH+BI+J/LbrDrtHd1nk3LNyJE/CY0LnTpXTvCp0DKxY
WDH9YcWvSec6FJMoNhlUnd/QnC6FV9JGRYlzVn8Vh35btYfL4acj52JU55nI
e057TznnQ3Cj0G/ZKdQwdE5duXXlqJWrvgQbn8Na3YmurrTEd6HfwdembHvF
BIoNfqk3sLFz1r+As5U+i2qjG9yOPXiglWO48+Eq+phU4Bxyb3hkaFuqrBd8
adKxvXI8yvWck/VeVhtq66bQa6M16AFXJHyXf4HqKZ8pHyLHd9YIeHDWsVhD
zv+YrHNkWiut2Wy4a6VjJ81Bc4mlnTs+yXvUQn9riHxWlRON6b2ijxklPjMN
4C1J5x6UA3016TFoLKpzJnLMr9h/CTqT8hutt/oYmgjfmXKupo1iXuXeY449
5ANPijmnpNySch4TlCvA5/sza7cU7YSvzPjtkI8qX/WBuH3H0Wg+HMZ8d+sN
11s+MOO+H0A3ZhzDKZbTm9As4ztTd6dy1lOyzqEql7oBnYT/N+6+FYN/HLfE
ykl/As9j/gVlfqMfTtgHlC+oGOQBuHfk3IF84D/AJ+POvSkH9R/4Duo0L/Md
MwPumfbfeh5CA+AS1vxovnNmxfAPKfsOO7Hfv+DrIvviiqkVW69hDkvaOoZY
pb0UOXciH0W+yibKgpjrvKj8fMq+kP4GskO5jMi+gGIExQpdGeOyXMeU3eCb
Eo6VHkGDE5ZYMeAg5RLizpUuRV3g11L+24pipq3wNZU+W3rTh1e6juqqj4vh
e5POFSnHNRN+mbEez/Ee114vC/32yyalcEHCsahyvvlwg9BnXT54fXhjyrba
hZ6Hl8W9V/aiJzQ+1vhAC/uIr8LrM/ZtT6Bt8PaM+Vr2wx75GnyzJN978h14
h/4+k+8y/bYRdYQ7oRfizjEp16QcynydHdro3dJ97oLXUWdfnr/Rtxqjxqq/
UTwG/yrpXI3+JtYl6TFr7PrmKXh+wrkIvUF6i76l7Kt8xyiKVbSHtJfkkw+E
v8x4b2sM++Hv4v5bmL7Rt4urczHPog3oZ8q+z3fO+CedxZjfFuX8lsa8x7XX
dQZ0FsZmffcoJrxN8WDGZ09/o+wBj0o41lLO+UH4xbhtJRu+BJ+J+28f6vO0
5pqx7eXDfAXXSPtuUc5fuf/6ad9d8qlrwv8FcnhlRg==
           "]], 
          
          PolygonBox[{{10502, 1539, 10543, 10544, 10545}, {10870, 10869, 
           10871, 2403, 10872}, {11501, 4368, 11500, 11504, 11505}, {11698, 
           11697, 11725, 5068, 11699}, {10592, 10591, 10642, 1644, 
           10563}}]}]}, {
        EdgeForm[], 
        RGBColor[0.9349438071798984, 0.7073595179497459, 0.398325802257685], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNnQeUVEXThmeHjQpLWFyWDIrM7O5sEj4FJGcREBAjKiYUDOQcBQHFrGQD
WSTnpCIGzICAknMSMRLMiv5/vdZzz+45U6e6q6uqq6tz3753qt/bq1PPcCgU
mlc8FCpm+N6CUKhDjVCoveHGRmhkMBdQeE4xpys+z6C4QS+D3gYNDGYbNISm
tEuRaQS9j0Ffg1SgBLTZ8ImnJ/KSfd2gqUET8p1HuA+yyve5jFDovMEFg58N
nicsmtKeBV8grThykn8B2s/ALxlOs19omMFwg7ZxodBygxVxnv4iPC/C/6tB
M9M13+ANg+rRUKiU4VaGFxhuYdDcoJtBnMH9BmHC3YAHoIVIV1p3g3iDBw3q
Wd7XGuwNOd4X8nAPS0s0SIC/B+EEZEWrH3W9FQ2nGH7U4BKDYuiOJ/9i2DAP
v8vPJQ36FfPyNKN8zSlrU/j6wpcK7otMM3jmo/sB8nsRn71ksCjLfJsSCi3M
8vq+hPrvSVi2PlLM7U42mIjcbwZ/Gkw2+MNgdhlrfwazDBoSFu3u8qHQRUvv
avifDA+L9q/hew3/n+G/SVfaHJNphI47jXaXwV8ZDspPNIHCd5T3vO8gLj3i
l657yEN5Ciuu/KZbeBp2XCT8N2HxTge/TPhudIlWPs/bdIbhUJ7bHpfnNnQp
73Z0wabfDW4n/jv6AlvklzmUUfb+TfmmYots6mxpGwxuMlhfxuM3lvG02vB2
Jk18taAp7WSu53cq1+tJ+U+kzl6i7idRb5NJnwTPJOJKa5rj+d9reB153Qh0
KuO0afjpfxluwxTsCMozhbTalOtP0qYgdzXpVxOX3evQv7aM801Gbo3FOxp0
AK+FT+E1xDXG3Fzex5IU2q7acGPre9dqHNSYEPa2rnHokIUPhn18FCjckLFP
fG+EnacR498lpInegPHyQNj76hHDh8M+rqkvLgo7LITWEP3iV39eEvb+esLw
8bCPU8pTdklmpeF2BiuAtgbLDerY+LPbmuCukMevN1hGWWSjbLgmzvnEsz/k
41X9OLdjIXmI3sBoB0jbx9i2ytLaF/P8j4Z9DGnGuCM7j4WdLprCGrNmGp4R
9nFTcYVF07gzi3CYcWhO2MfHYNxUfHbYfTs/7PVW32Bf2Otsf9jD9RmDXrfw
PIOyVpe7DadFfQydRX7SpbBoZSxtl4VLR70cR8KFc1kTfLWYelB9qN4WU2+L
w4Vjqsp7BF+o7udjbzxlUJ6rDd9QzP1XmnxLRN1+2d6AsjSgzTSLOr2p4bWG
OxqsMfjK6uHqOK/D66nztsAK2sRK6kjhHcZf23h3hlxPJ3R1Mr1vGu4W9fT/
wXNv1Oe46wyvN9zZ4EaDdeBO2PAldmjO2FLM57KWatcGrSjnDdihekkyeJh6
1Tz4EPFHSE+ElkQ5ZWMHeJJI0/y2gLa2mnTlsbAY/QMbWkBrRL++Nup5ysat
wDbs2IZuhfdYmerG+Xy+lH7TRr4waK02gP6FlFP89Zj3F8PTCrnrkV2Dnavx
2zX0O8nuJj/pWoxsXfqv+ud15LkUG5aiU/XzaTFfm8j/n1MHWynjFmhK07z+
GbyfEu8G7TP4HiCf1tixjnpWe9lAG1BbUH2r3tVW1hdpF6/TL9Xub2F81Tir
OU7zym2Gn6gQCo03+M7gSYMfDCYY/AhWfGDpUGiAwX6DizFb+xn+N+Zx0feV
dtnv4Y9a/GmDZ0o7TWnKpz+8kvkOftHFK5kIWHKZBlngZw2uML7LsfWCxc+X
9nmuao7HG+V4mvSJ91lkpUu0GtCfKlI+8TxHPsLZhMdZ2rfklU2ayvwU5ZKd
8kmaQRnwIIOyBhMMfoRX4R+I18A2+eIA/APx6QHCPyDzZGm38Ur4n0bfT8BT
6KwJzwTK9yTx77D9W8r5E+UWfpqw7C5NXQwg/6AsA7FvADyqt8GUT/Sn0XW2
gvuiJjbJ7itVVvnS0mIGn5Z32gT4rgzKh0xNwirXWfyrNd/HBvcZfAJWXDoV
zzKcWcFpHwEfGkShKU08iosegZ6FvNYfyk9rEK3/3mN9+j5Y8XcMqhv/pvLu
645lCm0Ulo4odih/tev6Zbw+b7b1ZVWj32T4o3JWHoN7DDaX9zqLkCae5nnu
o08o32bs/ZD8x1bw9vi8wQv4dDx9QfTq4MvhVbxaBV+jBmUSfMC6/APW2gqf
K+3rQq1JqyK3sbzTzlFW0eSLjfj4I9bWSpfceXwhGfF/xJpdPDeRLj7Jv13e
85G+atgqvrvR/SFh+WAT49Q7rNHfpV66kn434Q+Iv1tkLb+JeBfs1jh3K3AL
dtyG7tux9yPaWBdom+DbiNxthN9hb/Abe4XnGJ/OAxcYL7pZfX9m8IDB52DF
HyxC+8TgPoOPDbYZfGHwEO3lI+j3wyPeT8u53vuLxO+H9in670XuPvQ9jE5B
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
phLES2G34qIXr+J5Fif+S57Ppz8b/tJsamj2fpXtc1Y95pON2T5XbMp2v6nv
naAPqg0F64ZTxE/QPmTv1mz3wc5sn2M01zQu4XN7oxKF4cakHaN8gXxL9Kl+
VE/BWkRz+XL8Kv8uox2nGk/JKh6X34L1i7B0LKXflqJPqG9IRrIlqxSmlYa3
NLqWkt4Pny4jrQzxJaSn4us+tKnl2NEHem9o12Nzz2zv170N9832vjvA8BDo
Sm8Dr2T6k18/9KVS58n5Xqe/5Xnb+q990OYH47ugnIuo/97oOE59jmT+1Piq
ueK0jdFfl/TxfRtz0EMGrxqtjsErJZ3eQ33X4BpoShNtG/xb4VFfHmq6hzF3
PoxOzUUbmZOrGv0xg0oGo+DNgF9p4tHzqTeZJ8RXGX7JVYNPfVh27Ep1u/7H
HKi58HF4xlTy8qmcYwyqgh83GM1zMOl+uaTruLqk08Ygr/Bo4vfHXPaOmOsf
iy0P4wOVc3merxtm5Lm+l/GXyr/D4BGDJ/N9PByW77LJBkmA9IiWgV+GY4fy
kf9+4h5qR9YInaDJN/JVxUqF/pL/pDMRvRnoK8/YXZ54d8bhLdTfFupT9aGy
qD4/hy4+tSHlUwEI9I2gfYnWgzyVt9YqqhfVT0XqvBI6RhKXPz5Hv+7CdmLd
U5W6qmbwVarXj/wq3tzqbtMZi481+Abe04SnsZ6bznrlFerjH+JB3QRrmb8M
/jaYWtJ1fmswDj1/o0t55pHvP+i+SL7fYIfWW7Wre32/DI94+1m7+c7wiJiv
U6vQ1pXPePJS3lOw5Q+DyQaTwIr/SdoUwpPBiqvOpfdN+vXjtPW/KcNU8hhL
+f5bD1L2KaQH6+Np9KerwdOhTyVtOv67GlptZKtTV2Opr2von1cTV1sYC8/j
8I1Dbjp5Sf9j9DuVSXqvwsaSjOcaG1/BdpVhWr63iafyva89Qj8qKOI/YcXz
De6Muc+7xZw2mTyCMstO2XU5tk0hfTK0cdRZecZR9S212bPc59Z+JrgD/rGF
Pyrld+iDu/ii6b73h+x5RBeP7ux/Usp5skmPkibQ2lq0b6nDtuxVNkO/Gxzw
Be8BBHs5yWWRx8fIaQ+ju+OHYp7nkZjvn7SP0n3BydaWCwwmVfe7fe0q+r34
mtzf38w+oUaRO+vvs38Qj/SLnk/fmWiw29b679iaf1eW814Jn/qQ9oRB2c4Q
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
g7vAir9ncCrfxlvDOw2/bHxvGP/0LD870Hp4ouFki++0tV92lstI9g6DWRZf
ZPwzDU8ymGfhiYY7ZPnc1MVwV/L8wCByha2TDT608GaDuy/39K6ki7bFZN40
PZ8bHnWl9T+DSgbdLH6v0QcbLm/xtTVsPXilg8JrDJpb2nTLt7PhB6P+PzoP
GH6O7xc8Yfh5wqJdiPoeqpKV8ZWojy36lswk3qfTe3UvR72/v2Z4WdTnjpVR
1yv99xgeHPVvOOhbDl9Z3hvNzi+z3Efv4ucbLB4125pkub0qw7oaXhcf4CPx
d0Gmr9lUzmzro/MQk/nHZO8znGnwPwu3MFxa9WH1UlX1m+XrhY6Ge2X5GqKr
4WaZ3lbuNrzENlklbU1aKuL3NXUH8i+DimZLBYORBjusHfxutM2Ga+X496/T
clxO8osN/qzubUCyw6/0sqgelJYacV6FFxHfHfP712/G/O7ln+T9a8zvZx+M
Oe0v6NI3Apv+5L7mHwYLTV+JiOsVVry44SoR/45B1YjTU+HRdyv0/YmJUdc3
Ep0jsFm218n0PezVhptmen9qbHh9DeetCGyo4TTBOtIG0yYH0iYrUKcTLN7Z
6H0M7+UdN73rdlmOfyP975iXpwt1Ll+qnHfQF9Qv1P/1LX5947eCyV2b43dq
yuf4+DCNO7dT8dvf+Oh39JbI8e+7n4+53j9J7xD171np/yj+jfh3exIs/EfE
/3Pjb8PHrRwn8Jd8dZzwceLHDB7M8+/p3mr43nx/b6+T4RY1na95Tb9brDvG
3Q3fB4941TbUllobHM3zd+F35Lmc5JW33g/Ue4LH8nwcGIlNr+b5vW69A30M
e4aT33FsOwlvy5oeFm5lsD3Pn3W+l+fxU/COgl/hSrzPq/d6b8j3dyOvNbys
wPOYXuDj2FMGTxtk5vo9mCzD0wo8/wkFnqaxTrw9C3x8us9wDYs/YfDkFR6+
gvjwAu9DvQr8LpfudNUzfKWlTTCoaXDW4JzBM9CuRM+ThKWvDu8hV8/3vGti
a+UCzyvOcP1cv7ei+2sTSBffkwXuyxGGz8b8O8n6XvJJxmH5KS/Pv/+s70Dr
zpDu/1TI9XprSd3pP9N+NH0/GEzL9TuZupupO6a6Pznc8Naon91uMbw51+9q
6tveulOou4WPGV4T9e9gLDe8jrBo77H21hq8StT/v0f/M/YC47a+XZGuM01r
z5dF/T+i9F9R/8qfUf82lL4RtYTxXON6jaj/v0a24TPWbz+w/nva8EGDdy28
P8vbTGvaTeU8/y55FcP/5Po3kU8Y7mhl72Twk5X9RsOda3idqe5EvxEIaGon
PxE+S7gT48wG5M9S508DT8H3I1jxdgXu76sLnN4RG64q8PZVpcBpSlP96L+y
9E31YnkuN4F2NAG9T4EnUI/38ExWz2Zro1O6q3FOovOSSYw/fwCTeY9AzweW
sE7Us4vFrBX1TEBY5wRm0n/fcHky5M9htL4szbnmewmcfVraFSH/9orStPbU
c4ga0JX+LrySeT/BsXTofPYDaMI6Y92c4Ge0m4nrbDGgiUcyokvn5YmF57aK
byqiVzpLJhaWT88utIbW84xSlF3p47D98pA/lxkbclp1sOg669L5l9b6elaj
dbn0KaxnMVqj617btTxLm8r7JXpPQuvBZM5edf6n9bTW3TrnE56Pn+XjK8ET
CKsuVA86i6xOOVXG8fhWthWHZwFl0/5AdaWzTOlWvnNZk87DR+8kuD6BwjqT
LoPsMkB7E+0lRGtLXLw6w9pIWLpup35UT1ovL00oPBu7i3rtSh0rrn276qEd
em9Hp/TJr+1JuwedHxEW1lo9gbX1HPLtSh4fwicbdkf9LOhTw7sMVlt4r8Yq
wrtI30jeA3i3q2/M5buiO2ivd8JbDX+pzqVnFe1hVUJhm1iZUNjOVuC/1MTC
vlWafhT0E2G1xbhMz+MANioPrTXPsh7WurgLPn8Xm+7ARtG64Mu7ivSnLvDe
QdsL2t170JSmfhWln6nd1aTtdY/5e5MP6Z1mvg2ib4QMifj/Nw02/GqO39Ed
ZXhVjt+ReNlwtxy/3zjS8MYcvy/zTo7fudHzaD2XzjL5B0xtpuHnc/yOxRDD
q9EjfVqjX8EcKnifdbvWVXexLtP+5EPWZ0rXnPsBPH/Bp7vLusN8q+EvIv4N
320RX0NqH6Mx/Ur0K59rYn5XqmrM87jIWu5G5hGtJzX/as7RHDwsx+8v32f4
0xy/D/KZ4e05ftdmR47P08pLed6U49/dr5vjca2jlN6K9bnWYlojaq34Y8zH
64mM462Y08W3h3tNut+0EJrSdA9Xc39zdLVmrdU7x/874U7DXXP8HnhjZFsg
9wF3lTbn+D1X3f85m+PpC9FfJtfvu+p+fXHW/JJ9mjlRayztpzqyB1wZ8/cf
XzHcL+L/tdbX8JSYvx85OuZx0Xsb7sF3evW93noR/1ZXM8MfRfybWh9GHBTe
bDg34ucO2RF/d1rvSD5ruKHFL2j8Ntwh5vfR6hp+IOZ31Doafjri37+daPiD
fPfzCsNr+Satvk07K8J3eA13ivk3BTobbm3xHKM/LP0RP+9oF/Gyr6OtvMfe
Ue34kKU9aTqPR7y91byicA8e7L/vZN+ptqt4TdarN6Iz2O90Zs0iH68lrxzu
5umO3mb2sJK/Oub3J2Mx/waHvsXxneF/8922rw0nxPz+6c9GrxzzO6lJhg+b
rRP0Tc2I16Xy01rlnMV7Gf1sxL8Jom+D7DN8Ntv1nDf8Q7bf1/02289JTnFW
orOz4LnHY5xt6/x7bNi/Q/w4oO8FjzEYH/ZvE48zGA1N3xDWt4EfK0KrWoQ+
mvATYa9H6dC3uPU97LMhx+dCHv4p5N8JV3pf4+sT9v9N1PdNG4X928MNwYqP
NBgV9m8UzyatAaDvL88CFNb/Ou5CZ2/os+GVP0Zz5i+bK1EelVPfYA78MZZ4
B85C13A+qbPJ44DOVHW2ujXJxjaDHknuj8fRIdpD0AXdk5xX343+OeTfYR6H
n5XXI3xDe2TEv+WudPUlff9XftO3xU/QNi5E3O5K+OU86cE34M/hb9FvQs94
6kX53YwNojfEP/L1tfhPfvwp4t8U/zHicflP/zMhn+q/IfRfFPp/CNWf/idD
/3eh/71Qfek/OvQ/HE2R0fexpUNx0ZsY7h/2/9voF/Z23buIzj7oVZ76r4z9
6GqG7oFh/68R/S/IgLDHFS5NvAxyDWgrCgvLvj7Y35u8SpBfI9Iboqc/ug5j
r+wujc1K038U6Lvp+m+N7yP+XfZvIv6t9Lqkz8CnotWBV2lnIh7/KuJ9oRN9
5Npw4f+Uqn/8GPLv52dYey1vsDbJ67sSfSHIox5+LEVdyObGYbdb5WpM/fyA
nbK3LzLiHxH274UPhzf4vxTx7IGvAnzqiw/R5r+gTattbzF4EKx4QbKnB3yK
XwVNeLvhIYYvMxic7OGhBukGOQafWXrMcDnow8Dl4PmUdPEpnJ3s8c+TnCYd
27AvP9ntyksujG8lno4Nyn9dkvu5Avy5yc4j/gL0SW8u+eTCp3BZyiFdtSif
ynl9lqfVNlzR8Pok178OrLjolQw2WHijxhELVyMepIsu2jukK/62QR3OVOsZ
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
TQbxScSlX/fBlecI9Bwjr8fJrx1383RHT2cwusOtM5YKyAR3vhVXO9J5ic4y
xqCjGjSds+iOehbhZ5IL76wrrnOZK7AnuKd+BbaNIs+R2P8n5fuNsr1k8LDZ
d0jtM8vrYSptUzTVx2HqRvWmupoGj3jvpx51Z/D5ZL8bfwFQ23ke/AJh+V76
VL8TseN3/N+UNtSEtnMEOcn/gq0vJnt//xXZl+D5pUjai8RV1imUtwnlUHmm
UL6ppAdjhvI8io0taVNqW0F9qC7+O9NP9jOp4dSf6q45bacZfUN9T/0uDz/n
E36J+CRoQR0oTed8BdCVPgy/KJ/ezHFPZHn5XoJfNM1jK1N8bllB/G36zS3Q
l5MWzEPq/5pH9R1R3QHVNylvJnwL4bdID+bbm0gP0t6GdyV5Sn8l2tso7Muh
PlT3OjfNpo08T1jnVcFZoNpT0L6yae/PAVm0+VHUgfJRvai/jKZORhOvDM9o
9Nainl/EHrWXq6DVoj0Oob1Por0UYO8LyMSw+QXSr0ouPGuejK7B6BhCGwrO
kg8THwoMgXZblsu0z/K56FLGt/F8C1bPO88l+ruMet/xs0x/t2tlps9jms/a
2RyTxZ1h3R1WetukwrRviRdHv+53Fwfr3YofE/3dxwnwt08qfKfk+0R/3/EH
sOLFkSsR8nPMG5D5Eb4OFv4p0c+FzxpeZ7aGdU6X6e+16R2zRMPvQ1e6zvku
JPqZXS/slD9kl3TpvU6dZep8NngvTnqkT/kpX9khvT04H1Xe5/Cb7Pueuf97
eCVzFt3KIzgP/RmZp0mXrPyic90JRfwhe5LIS2evxZK8PKlZ7u+jmX5e+wB0
ya/CVzcQXk15pCc4d95BOW8gXeXrCF4DdCDtfKKfacpvpSN+Vqv7F8p/BXaf
x6/yb0KWnyn/mun1G/hDZb6ADxIpUxJlCs6kJSPZPzO9/D/SZlaSj/J7Crr8
WQy5eIMEcHcgvkjaLHi/Tyz0jeZpzV06L9Z7Qqm0t5Ihf79I74gpXXsb8fSF
R7wXKI/esQzynk38OcopmXfI50baitrr8kyXXZ3peaWSn/rfeeRVNtWH+Ldl
+vny9kxvd4nkt5b0jpS3B3SN4xmMC4rrPcvZtFPZIFsEqlPR1qArqP+O9LOS
+EDvciqfdch1pO/9yJhxDruVxyz8oTwTsLUz7UN8vfGf/Fw24uvhtIj76zn0
zKHvqu/9P9DG8T0=
           "]], 
          PolygonBox[CompressedData["
1:eJwtmQeYVdXVhg8DDAwBZGBowlBUvPeeuffOTAQERDCCv6CCtAQULPRiFLDR
UQwGEAwiKL2LSqQLEaUqSK/CgLRgiQkqomAJiQr/++U7z8P78M0++6yz99pr
r11u3R4DOzyWEQTB18WCoAT//zsMgp/gF/gVquYFQRXIhVpQHapBPbgRTiWD
4IbsINhaIQiK0B/xzsasINgAh9FlqJMVvaN3X4kHQZIP7SoeBJPQI/KD4Mtr
g+AcDM+3TdkugEL4JzY+wNb78Dl6VUEQTK0bBPmwAn2QsgNRm9X2cdgsjf3X
sP9HdAY2ikV9UF/qUyenNHZKYR99nDpvl+RZZhBcQE9PBMFk9PewMuEyPasG
36J3xYKgFA7LhJ3oq9i4ApfhP1CRMvmzD2Sj74bd6BT+bRVzHdX9L/wMR2FT
ln12BH0GtqK3wCn0PngP/S7sRe8JrdfDbvQx2JxlG0WqSx/fhQNwEOIQgxDy
4NPQvtQ3zqIvwHb0NjiP/iq0ls/P6VtJj203WI1+Gp88BUNgKAzDJ7n4uxYM
jbtP6pt8Lt/3y/fYjoW+6N7Uebe439G7c+A59J9gFnoU71xbNghGwwJ0NlSA
ilAJulNnIe/fCi3Rb8BLJRxTC9A9U0GwtmIQtIOH0Ot4Zz+2CsvhS/RexVY5
l61FX2JMJjBg30CJuJG+AFd49jp/D8T2Y7AEvRzOob+EZej12DiDreEwHz07
aV9dviYIXkVPpc5x2tqE+tPRc+Pu61iYjf4ddOL5emiPfjFuX8on8s2VdBBc
rEY5/Jp2HdWVD9uh3+Gbp8u6DWpLDcoCns2h/eXRsyibCWvgbViUZ99+Bhuj
sjVRzCh25sfd1zLwMroyHMNWEeSgq6k/GS6rgl4JR0rYR/LVIM11bFeHxxV3
lHWgPR3hBnRe3Fp9rqexjNsX8ql8W453ykJ5uCaifBQDioVfo9yknFImignF
Rg5UVv8VP5EN2WqDzSeKewwGai7HPbZqk9o2lTovRz6Sr5QzlDsWwyPoR1UW
1VHdfpQtKu4Y7Iu+zBzoRi7ZCtm0qzVlvYp7DJrG3Sa1TTlCuWJw3LlPdXqg
yxOjQ8mfpyAH/RJlWSWcwyaje1D2e2J5PfRG/4uYfJT2Z8HBmOeA5kJTaIG+
iW/9NprzmvvvUlaEraOwHj2Asv5Rn9S3BdgcWYkxgznoQubohupB0BkK0J2h
DnO3NvwB3Zecm1EnCObVpg/oF2APf/eB8egRBdaqMxTdMt/vymYLdC5lg2sR
J1AT3QHmYqsx3IueBem6tjkDXReKavkdvfsNc+pJfJUNh9GTsLm6BuMME9Ej
8621pmhtqYePOjEc66EJugZll6p5TlVHz6VsLrl5jpCmbE0N25yDngdVarpM
z7IK3PayUBr9U771m7lB8CN6M/FQnFhYwHqxBL2KsuE1bWMl+rO053ICPkV3
IiZmsh79Ch3RzWnDJdr6PfwOvYV3RtS0jc0aG2xmlPI39K2m+OBo+SBoRL7p
kPSaqLVRPlyO/pgx7836tgvOovtSZxp1C6APuhltOFmZ/6vgN3QT2MvffaER
+qbQsX097bsNPaEwCD6ph59hPLoXbczFd2NgLHoQbapC3yvDA+jFlC3g2XxY
hJ7JOy1vtI0Z6Fow7nrsQy56VKFtV9M30LfyzQTf3kEbbkCPSTq3qg+j0U0o
i5d2HdW9pcCxpJhphB6YcFtyoCN6JTbfvNFtWIHuCWtvIJdCD/RD2PgOW5Pg
gdBjpLGKw1l020LXPU9726A7Je37OdAvaZ/Jd32gIXpA0s8C1oTn0GcYgwWM
xXw4rVybcNsqQQf0wEL3XW16DH0PNgoYm33Yuwt9C5yo7DFrih6c8P5EPn8w
Ec1Z5tofIB/9W9iJ3gUZ6Pah+yaf3Rt6T6e9XRryoRXcCW3hXqhJnZ34vheU
DL0nK4jqtIre0bsNoCFk0oYSme6j+tqesnbQGu6K6qjuPcrN8Cx9KF2VfATT
067TOsphN0V1VLcjdIIPsdkW22vgI/RJ2IjuAkXo+sTYi7j7ItyK3k/ZLTxr
AvuUe+Ou+wP5cFvcfVRfe0FvuI32l6L9mdAMvTrutb4N77wfN9Jqw1b0dmhc
0jlWuXZv3N9S2R70hJjnxhewEp3iG8lojdJa1Rf6RD6Sr96JO1drTf1b3G3q
FdVR3XVxt117nlVx+6RjlNOV23uGziXd2b/1QK/Ap9vw7UOwDD0LHkUfhpXS
CcdeRWiL3klZA2K9IexCXwvZxNpTkEAXJ4au8qwn8ZSr3EbZq8TnKzAMvSft
d2fB5+h20Jxni6G3YhcftGLtWgaX0Q2I8fHXOwfUVz5J21Yh9Eh7jDXW2qMf
ibtMzzQnuutbhZ6LsiFbq9Lum/qgvvwj7bZcgavoRxLuaza0QfdJu22leGdU
2kgrJkejp8HPPP8vTE07RhWr8uEM9T1t36qO6p4IvXfXnvw4ukXMa09Nxv9+
9Mi0bcln8p3a9L+2QYA/a+Z77mqN0lrVnzZWoK3XwN3oHWnnou18c3s6oqrH
eFvae/wwijHFWvXQuVNzWHN5YuizQyeYgK6kMwvUgbo6G7AHOMZe4Dh8gD4P
R9FH4Gt0N3LYc+Sz2tAWPYyyEjxbwP5kEHoLFFWyja3oj+Fz9J055FX0Enyw
sJjXhNd0VqLNc3nWGK7yPJO/l6ErEG9VNV4xn52mQH/0xZRtvQXFeb4w5rVl
nmyi76VN19G2P8MD6KGU3cyzhjAkZpuyrZiuhn4Qe4toeyZtfBLdHR6Gp2EI
dIHmFV1HdX+OOXYrsN+qRTwmYj7r6Yyns97olPdqNbA3Bt0+6bV2H2t0O/QD
KfuqKfwefSs0hfuhK8yjTk/Wip3wHnoytEZ/gY2J6JZJ+34j9hqiX4Sv+LsN
daai74At5e0D+aJrZPvhqG9Dor6NhFFQBR9k4It5+DMHPT9mX2pPNC/mMj3T
GFVEh2nnAq1BWotG8o0R8Aw8C9tYc/9d12f0D9BLsbEZW9fhsw3oHTGfnUvC
h+jh0KiYx2gY+iQ2TsAl+D5C+jL8B0ZTpwt1N8LL6KmwqZi/MQndO+mxl0+e
0DsJr1294Rf07Dyf1UbAXPRufHCSsToFe9CDQ88N7QEG6iyc8lz4GLan3Af1
5XpYhy7DN8rh78FQB/1hynVPwA70pmj+aE5sRr+d8N1CZ9qzF70tZl9oTmhu
FFHns0qeM8fQgyirz7NDxFc7xR4c5e9B8Dp6b8ptPw370B/B39FnNWfRtRQD
5R0TKXTjpGOxH9ycdB3V1RlAZ4EDKds6AwfRO1Pui3y0Cz0n6b2MYlSxupay
/jzrB2+jO9OmsrTtTaq1Rz+T8tlCZ/IRyi0xr4VaA7QWfJXns/k0+C7PPpFv
usB+9DHKiuAbuADHKbufZ13hBDqZ9Fy4D2qil4sKnjNL0Z1i3kt35psDYkZa
MdRT+URnIL69EC7leQ5pLq2Gt5Iu07NmcBz9Le8MpO26NLuA/omypeUcA6Wp
XwpKlLfNkuiL2hNn+J3v0Idijp1x8Am6WKH3vluuYx0ocJmejYfTMftEvrkM
Gdj7NOZnurM4g66W9DONsca6YtK++ImyEopN7Scy3Aa15Sj2mpfzncEG9KmE
fakz7Bn0x3m+G7iDOifRBxMei/vgMDqe9t5WOaMe+kv5rJzvVA5pDxL32Vln
5P66S4nZVzqzno85RyhXTIGXYT28o3tDxSLMIEamKw/CfDiY9FjkcN47qv1+
0nNNZx6dfXQG1FlQY74/6Zw2MrIhW1NSzu2K0dnoraypZ2v6TKWz1YaU1zbN
0Y0prylaW7QGlUB3yffdlc7AOgvPSjnWteZNRs9NOdePhoXo2knPLcVArmIp
5rn7R0hrPwqlM3yHuE9rU8xzpSUUxuwT+WYmzIJiSY+lfHxe+9OU77bO0+db
0Ct15ot8KF/qzkZ3N7pDmKK7GeXXDOeM3THvibU31hmzWcxneJ3ldQbviX5S
e7JizjlPxLxn0d5FZ7xu6kvKuUE55nDKMaJY0Rz4QXdJfHMe3y7Gfm1T3H2Y
GbVRbdWdhe4u5IMD2hvHnMuUM0aga8OkwHv4OujHk177tOfohf4nMfgFnIMv
YSz8CZ6HP8N5+Fr3tvAt3EEOb1DaZ+yWod85F9VR3W6UnebZULgP/Tlln0Xf
0LcuwUW4CgHPn+X/Z2AMPBd940JUR3VHw6iojur+TJvHZ/uO/Ef0W7rDZn1Z
CX9F30idOpk+wxRDLw39bAW8ie5MWXOen+b5F7qrpmyNbMBqOERMtsh1TB9E
f6j7XN2Za+0KvUZqrdQaOTHmMj3bqr0ezIWl+hbM0flZ56XivuPTXd/s0M/e
gFnoN0K3bTm8jl4My9BvwSL0wtD6r7Ag9J2n7j4VE4vRK9TuLPtgWWgfjonG
UGM5nbLXebYEXg29Zmvt1p3H++gjCecirQFF6IehdKbPbLejq6c8N+Tzyinf
UeuuehgMhx9jvhvVnDgX852G7jbGQRt029CxoN8I7kZ3552sTH+jBfqJhH8L
0Jn7ccVJgXN3V/gHembMd0na02hvUzfaWzeAhqFjSLFUMdp7Vwj9W8Q9UD50
G9XWETAyYkQUU4qtSTARXoS/6HyqeKYtY2E5en7Cd08LYRH66Zj3vprTT6FX
5vnuewBMQ6/Ks1aZ7srH8844mAAvJGxDtprB/eipWnMz/RuJfiv5hJh7IzeK
wXy/MyFqo9p6NuG+qY27ozar7ZPhJXgl4bZrDkyJ5vDzURvUlvejWN2sc5Xu
InSeiWJcsb4O1kZzQnNjfujYU0zPQ19LDEwmFi5BbfThAo+V9qiH0M1TfqY7
1tvRleK+69aaWRG9JHSsK8ZfQw9I+OyoM9k9Cec45Trdse2Iew3QWqA9nPZy
m3hno36XgQ2h97Day1bgWbb2Q3HfBemOQncVlbR/zPYdZ7mU96jaq+pOfZj2
H5Q1yvF6pbNZHjYPl3KOS6BvpqxhdKbQ2WJj0meJPOydRufFvBZRPchBVwb+
BRMhN+Y1+KNoD669uMr0TDm5Fvr2uO+alSNuQ/89advy8S9J3yHqLlFn/rZp
31np7kp3iq3RVXXmiNqotjZO+SykPt+U8h247sJ15qqv/Tb7o7Ix39m9p/vC
fN896E5Ld1v6jetAtEfUXlE+rRB9Q99qmvBdTklohO4FZdG/gf9LeE+hvYXu
4L9FP4YPb8vymvAI+kH9JoZuS9mjmsMJ29IdV310DyiT6RzRMuEzrM6yGqMr
6E4Jzx3lcOXyLVEsKyYUG+/A36IYXhfFiGJlvX57i1gf1VHdV0LnxtdgWug7
nv/d9UAvdF++UZ5vlYPW6H4J3x2o7C7lzzzvZbUH1F7wqTz/VqPf3Ibod5DQ
uV45eAa6a+jcKB/IF+NC+0I5/AX0nXGfhfUbi35rORT6t1/9Zrk/9J247saV
I35APxm6rWrzX9A9Ex4L+fAO5fqE264xaqUcELqvGpPnQ99h6y5bOagWz/8f
Z3XFAw==
           "]], 
          
          PolygonBox[{{10952, 2488, 10891, 10950, 10951}, {10720, 1884, 10744,
            10722, 10723}, {10929, 10928, 10890, 2481, 10927}, {10806, 10805, 
           10817, 2088, 10808}, {11246, 11245, 11251, 3488, 11247}, {10524, 
           1560, 10612, 10613, 10614}, {10927, 2481, 10926, 10958, 10959}, {
           11679, 11678, 11718, 5081, 11719}, {11390, 3988, 11367, 11387, 
           11388}, {10640, 10639, 10641, 1568, 10534}}]}]}, {
        EdgeForm[], 
        RGBColor[0.960405714954923, 0.7710142873873074, 0.4772577163602611], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
bAtt+jat3PsB2kedM8ydjmq9oewETvntflSs+DGOf0pLl02O3wK/o/I99XO/
Jf4jrfd3vhcPjxUrxow59QxsuBy4yfgP2Ge/L9SbI98Ldvn9sdRvCtyHpOF+
/TjSW8SFSMD2+Ug1tNJnW4Pv74zlGN+VuIcrfJ7sNm227i6FHpsh+6Ea8S1I
6RvhSb/rLkvr3sf4FvvuxxpCmROtO/VjHWKt4V4qjnSPKItEO9b3tgOR3pC6
gH8cqP7fAVwU6W6Ww3oVqO4uCvS+wrcKvo+mrNdCQ4F1pR48S2jrNc690vHi
2+O31RudY8y1cvuYviUPeavsjyr36YcGy9/tN1rybfQbBussZWffY173PY41
8XbH6hXDbfZPmc9lngtn/N7yUaQa2uj7WYnfbPgfQLnPWfI84zf5P6dVk5hH
POdqXfdmpeUv+m1eoDmuTdrOSG+oz0XSJXs2HvV5wrNhgmPBmDS6rh/33ELT
8s2Sb7/cS0Ggs/pq7qNQ3zQpyL820Dl+fSBa8mTfZMnHM+DtUN9h74TiIW+S
b1a+t60KVPu4T7mHmT/MHZ7Noc+OokC6L7aO65yrzNkDvnPy7vms9xj33GzX
7ex5Q8xa8kGob52DwOtdJ5/i/xKB7izjA935FtmWtHWhTpud/7caeA5vdrx5
r2IMrot0z54QiXaiabv8fw9jPq9GvHfV6Mwssr+YC9n/iCiTtlDuMu9Z7t2l
ge6wywPl6xHHbI+/ofktnW9dyPt/vA8X/g==
           "]], 
          PolygonBox[CompressedData["
1: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
/Tl9fOYxd5rbvMTL9O3/b0tFGw==
           "]], 
          
          PolygonBox[{{10069, 244, 10083, 10092, 10093}, {11519, 11518, 11546,
            4595, 11547}, {11158, 3193, 11167, 11159, 11160}, {10111, 346, 
           10124, 10132, 10133}, {10378, 1067, 10380, 10353, 10354}, {10037, 
           142, 10046, 10047, 10048}, {10018, 10017, 10036, 142, 10019}, {
           10133, 10132, 10153, 447, 10126}, {10006, 41, 10016, 10017, 
           10018}, {10968, 10967, 10966, 2593, 10981}, {10058, 10057, 10068, 
           244, 10053}, {10093, 10092, 10110, 345, 10086}}]}]}, {
        EdgeForm[], 
        RGBColor[0.9858676227299475, 0.8346690568248687, 0.5561896304628372], 
        
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
zKnD7kGHsorNYn1lH2ZOMm+3+K3NN/cO0K3AN85TwNOxNwNwDPOHRmv96GjF
IN9yjDueJx358V1A39NPG3PKnSdyqkErvce6fd61o8L1hfWjyTzIi/VgNmAb
YGu5vqmLY35/cT4eMGG06stS6Po88ANZ0c02Le+0xeMprjnsk5TBezT5bhxP
dw17xnde4lhgHFDmVvPi91itvwfqPObaTteHu5yHCzwv+O1P+hLnZbPf7sRJ
51DSc/q5199mj/nNvBn4Y/hzwDXuFduWNi4dwWOh+bI/fuyayG+pen8Ldrvu
dLsenHBtZA8oWEfeZ5XPrfb+Cc/XeI28O82zzrje4/XmTRmdfnPxLTjg/kYe
k01D2jbfi7W4zz31cCTfbbUvVzj+6G/Gxic+cyDWt9U/YvV22oqxyTOkIw2/
Aw+4pg9Yd+7vdN9/O1I9Z++5zt97m1zf2beKfWxLrLh9OVb/Yx98OlIOFvsk
bUS9KYMyp/j7ssJ5NtZ9lbIoc7ZpeWbGmIsxeMC6kO5590be51SsN1gJYrgn
qxz4aVbyl5ovaXmG/zi2R4rF1yLZbrxzeJtpbvPd5pp+jjHnzIli3m83Hc//
D4g/u6w=
           "]], 
          PolygonBox[CompressedData["
1:eJwtlnlslkUQh7ctFDmkEA+k3BR43++oIvclJIZDgaBSWymHEiWoQYscAaMg
R6UqRihKAKNVCUQIRkVAbuQ0XgkBgsplEakQMESN0HJVfX6Z+eNJft+8u7O7
M7OzX7snJ48syQwhbIE6MCcKYUxGCDXoyehWcQgtIQeawF5sCSYkYRu6GEbB
SCiAkzCMb5/DdfRN+BT9IFxD70qH8G2TECbADnSRxrDWeNacgv4PW3nTENJQ
ix6UH8JVdA0MRPdgzHLG34AR6DQsC2aL0Uci29siOIceDkv4Vg6D0O3x8Q6+
3oZ26IxYE0OoDw1gNmNm+Zl0tlKY7zZ96wAppiQhz8+ss/eC3ooXPpc0tTO0
RF/EdgGOwo+Ql29n0R60l58ji805zr8RvQIOoL+G8sjOqLMqRkMiG6Ox82E9
+jPFF9bAWvgksrnKkXJ1GOJM87kHncUZM6EhNIKyyHyVwmvoZtAlWEwV26eh
ta+nsetgL3ocLEcXwpVgMVasG7nv5pAb257WeAwVy4q05T4DFqQt5vV9T9rb
LVDPc6LctM23XCmmrdHtsTXNsppqg17o+9ceF6DnRlZLOq9iGWmPuNsG/dA/
wPceM8Wuq84LudAChkZWK4vhfs/ZUZ+juU38LlSjazznvdxHV7dVe86V+zOM
PVQ3hG7ZjEmEcDe/86ETRHAezsFZqILdigHjn4OD6FcothaNuJ8NqUH0cWzf
8W0iHEIfjm2s1qhEP8IaD0MhFMH7zGnG/DthBXoGbMbXlzANPSVlehNMTtka
WktjXkT3wUd+tq3ZBv1PZHdLd+x39FhsY3xNrZ3HHm4jPzNhODqPHE9tHEJj
aId+ANv0LMuhctkf7vMe08prprnHSLHqAvdCV+jmSHeHHo50T+jlMVVs74HO
kIDYfchXH+gNg2CwI10Aj0IRFMJjMMptBW4rcpu+FcNoGAZD/Qw6i2KoWCrm
L6VsTz19Ta29UbVOLD+k2a5TvhlzlrFzYBe6kBj1zqHuiFcB+itivC/D7txm
9G7Yn2G2LejjzBl8q/mQr+kpy/UG9jBJ/lKmR8BIdBaUNSD2oEZ2Imk6D06h
q7y/q2dUojfB+Qzr6cciy7lyrzGn9Y05HZnbCS6gu0d2d9Qj1Svfiqy3yMcX
kfUg3U2dYSu6DQMvNrA9tURv1/2va3dgB/p02t4CvRm/pK3mVfuK4TexxVCx
7Aur0atSFkvdmZXoScypyLGYPpu2nqPeI1tp2t44vXXV8Ax6KTVcnm01r9pX
j1OvGwuL9dZEpvVGLkL3TFlsdYZu6JLIfKknTlQ/1p7q2Jl0tn7EqC/0hwHS
acu17ojuymivrTEwFlozphVkQz24C5pBLrSApbGd/Rj3aQb6odju3kmYHlsP
UC8YBcXwLrYBdWxPa2PzketraK2Zsc3VmGXqT8y5TiyuQVXC9qy9d4ROqh04
UI+eC7e7raPvUXvNTNo3jbkDPSRhvXAFLEPvh32wBbY60jthF6yGVd5j1GtW
wkdu07c/klZ7EVxCH8J2Bd+X4SB6U8K0croePTCyt0BvQl+9Tdg+hgr4wKnw
NbTWHtjtY9b4nna6Td8qk3Z3OsCv6N+SpnUnqtDvJeysN2ED+kzCYnkVKtGX
4Ea2xfgi+lTCvtXACXQJOXgeXoZZelvT1kvXcefrp82mb7P1VsAEeMp7knrT
NJjqNn0bD0+4zxKfo7lzYC68Aa/rXYU33aZv82C+16Rqcxw87oxzn/JdBgvc
h3y9CqVuK3Mf89ymb6pZ1a7ehBfQNSk7m3raFXRtZP8l9aa09T0t9DPpbEeJ
UXW25fwIuka/VbOKa8LujO5OtX/7M2m1EsPfSRujsbXwr963hOVKOfkLneH1
K5u+dfa3Jfa3pdjvlt5wveXbfb7mXEYfS1gutceffI1ar3nV/v+6bLsw
           "]], 
          
          PolygonBox[{{10787, 1988, 10809, 10811, 10812}, {10228, 654, 10239, 
           10247, 10248}, {10080, 10079, 10085, 286, 10081}, {10054, 185, 
           10077, 10079, 10080}}]}]}, {
        EdgeForm[], 
        RGBColor[1., 0.9062544976159105, 0.6679771830298322], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
J/n2elq9fwJ9Gv8RihjsAQ==
           "]], 
          PolygonBox[CompressedData["
1:eJwtk11ozmEYxp/3ffeRjwMH1CKZlOf5T7Jm5qORJDuwWqiFfGzvlCNbSnFC
Yvk4kDlZRk0KW62EHLCR8rEdKIWUTEoJOR6vj974XV0Orvr9r/t57vt+nvv5
Lyz2bO3OhxA2ogp0KYZQzIXQifrg49FcJnYQ3oFm8N2DjsJnUC28AJ2GH6QQ
rpPoGhqDR/DGc86p3DPxLlCwDxXg6cl8HuXgk9G5X6Nh1cd7VgjhKToGv8Jb
wtoJ4o/hzXhdxCbQPvhm9N6VrHkO78LbS2wP2glvT+bdqB0+x5renM+gs3Tg
dRT+74GnontTzc9wd3IvWqO1JbzLxP6iWXzf5ftrzjlvw+1ZCJOVIbxDW+C5
rPme9x3oLuQptraKXuE30b0r5zf4I2teEj+APsCTeK1513gLz0+urTtYB29K
PtsvvDXwojrur5oZojnwYbz3xI+gQ/A8vC5iRVQDrybnUPCMt0V7iinHYngZ
3o3gNfXwPXoepPcc8SfwKCrzPYDuwFczn60ZDWaemWanN3Ef/pN5b0AleCle
I5/LUYr2FFOP1dRvwxvAuohadL/Rb1OeYqqhWlfQEJyv89nV0xTfbclnn41a
dV/sGWVvO2pWbrz1Fb6jfrgpupZ6Um/1eD/ynmGEH6FplX7zevv7o/+FMdYX
4Sa8n6wtoUa4F40X/KZPwJ/UT6XfyBfNOnnWyvkieYaapXKsgls4w4oqv4mG
zDVUS2fo1FvMfPda0w+PJP+LOtOw3kPy2W+RrxauYc+G4JlqtmeT/yX1eApu
SO5dZ87gh5nvVjPX7MvRufQmf8P/APLJoYU=
           "]], 
          PolygonBox[{{10032, 167, 10035, 10011, 10012}}]}]}, {
        EdgeForm[], 
        RGBColor[1., 0.95, 0.75], 
        GraphicsGroupBox[{
          
          PolygonBox[{{10031, 67, 10008}, {10012, 67, 10032}, {10032, 67, 
           10031}}]}]}}, {{}, 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[{10008, 10031, 10032, 10012}]}, "2.75`"], 
        Annotation[#, 2.75, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          
          LineBox[{10007, 10028, 10024, 10029, 10038, 10062, 10055, 10063, 
           10070, 10097, 10112, 10136, 10128, 10138, 10155, 10177, 10169, 
           10178, 10194, 10214, 10228, 10248, 10241, 10250, 10243, 10252, 
           10266, 10286, 10279, 10288, 10281, 10290, 10292, 10294, 10296, 
           10298, 10310, 10324, 10326, 10328, 10330, 10332, 10334, 10336, 
           10350, 10364, 10366, 10368, 10370, 10372, 10374, 10377, 10379, 
           10355, 10340, 10315, 10302, 10269, 10256, 10231, 10218, 10197, 
           10187, 10158, 10152, 10115, 10109, 10073, 10067, 10041, 10035, 
           10011}], 
          
          LineBox[{10023, 10044, 10054, 10080, 10081, 10082, 10087, 10118, 
           10119, 10120, 10125, 10161, 10164, 10200, 10203, 10234, 10237, 
           10272, 10275, 10316, 10319, 10356, 10359, 10390, 10393, 10408, 
           10411, 10426, 10427, 10428, 10431, 10446, 10449, 10462, 10465, 
           10546, 10567, 10646, 10651, 10674, 10682, 10740, 10754, 10773, 
           10787, 10812, 10815, 10790, 10776, 10779, 10782, 10759, 10743, 
           10747, 10750, 10691, 10680, 10685, 10688, 10663, 10654, 10657, 
           10660, 10588, 10577, 10582, 10585, 10471, 10468}]}, "2.5`"], 
        Annotation[#, 2.5, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwNzr1KAmAAQNFPhyIc2oKiRYt0CamQaggkcJEmQ+wHCQrERYXWCqkIwqEm
7RECwbVaKue2oLkGa3AWWusMh7ve+GGjUI+EEPaYSoaQYI55MmTZJE+OLYrU
qFCnSoMmbW7ocMsdXZ554IVHXnmizzsDPvnmix9GjKVC+NNxDUwQJcY0iyyQ
JsUSK2RYZZ0c2xQpscs+ZQ6occIZTc655IprWhxzRJ4NZpnk19uQD97occ8F
p+xQYI1lZvgH++k2Yg==
           "]], 
          LineBox[CompressedData["
1:eJwNz0FHAwAYgOFvl35BjMg0atUfSBs7deiULCMmI3atTv2DXTrvsMuI0qHT
WHSZokuXySS1JmlKIyLGKEXP4Tm+h3dme7ewk4iIDeYyETlWKLFFmQpVDmjS
4oE+3/ySmo9Is8oae+xTo84xp7S44Jouj7yQWojIUqNOkzM63NDlljvu6dHn
iWcGvDHkg0++GJFYjJgkzRLL5MgzS5IppplgrPnhjyvOaXPJCQ0OOaLEOkU2
effyyj8usD8h
           "]], 
          LineBox[CompressedData["
1:eJwNzz9KggEcANBfNElHMK1Pt7QtaIim0slJ8QJtIiRRRES0RFeIhkqiY4h0
DU37gygSEeIgTVFveAd4yUGrergUERXmGxEzvvnikyljRnzwxpAXekyIQsQy
q6yxxTZV6jQ54YZb7njgnBZHHHPKGRdc8sgTXZ7pM2DBD6lixAoJeXbYpUad
Bk2uuOaeNh26vPLOL3+kNx3IkGWdhBx59tinRJl/ru811w==
           "]]}, "2.25`"], 
        Annotation[#, 2.25, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwN0DsoxAEAx/G/YrVJ8i5vFqUsHt14m7uU/WSRyKLz6EKSOJLH4hULqSOG
mxg8UmxypERhMlFXVvkMn77bb/hVxoaigzlBEIxQUBsEpZRRTgWVtNBOB52E
CNNNP70MkGCFBVZJssYhZ6Q55553XvngjU+y5NYFwZ/maSENVNFINU2EiNBF
lD5GiTPGIltssM0mO+xxRIpjTrnkgitueCDDI89880OWkno/EWeMCRJMMs0M
s8wxT5Illqkhhxc7T9xyTZoTDthlnSTDxAjTRjH5/Prmiwx3pNhninF6iNBK
M0X8A6nKUFw=
           "]], 
          LineBox[CompressedData["
1:eJwNz09HwwEcwOHvDr2CGCPjR6n1AlJjpw6dEhUx6TCdt1PvoEvnHXYZY7ND
p7HokqJLl2Qm/ZmkLMWIiLHUoefwHD+HT1KqbJZTEbHFcCHinZ1cxDYbFGnS
oE6bC8445ZI/fhgztRgxQ4Y0sxTIs8wSCdME35ovPhnxwRuvPPPEgAfuuKVP
jxuuOaFDjSorZHnx8kiPK87pckyLGlUOqLDOGglZfucjJgy4p0uHIw7ZZ49d
iqySZ45/IMc+zg==
           "]], 
          LineBox[CompressedData["
1:eJwNzMlKFWAAgNFfrQghIiRMI60W4ZBJCS7KElpFYKb4BMKtEBwIIkK0lN6g
hWbZ4AuYSFlqqUg4pFgO99pkhBEhYiqSRDmcxVl8m+9IeXVpVVwIoZ/43BBO
kcYhEogjsHUihB/MM8oIwwzxjHZauE8zTdzhNvXUcYUIlynmEkWc4ywFnCGL
TFJJ4QDJ7GInO0hgJSeEZWaJEWWGp7TSQD0RyjlPIemksnk8hP/M8YVeunnE
Q+7SSAXXKKOUAk5zlMMksps/2SGs8YlZ3tBLG0+oo5ab3OA6NVRxi1Ye0MRj
XtLFC3qYZopJYqyywm+WiDJBN520cI9KKiijiHxySSOZeP5lhfCXLfbrJPax
lz0cJIdsMsjjIiVcJUIxFzjJMVJIZMNznQna6aCT53Txih5e08cAg7xliGFG
GOUdY4zzng9MMsU0M0SJ8ZHPfOUb35nnJ79YYJElltkGDvGLVg==
           "]], 
          
          LineBox[{11392, 11388, 11390, 11393, 11414, 11419, 11441, 11449, 
           11477, 11483, 11509, 11515, 11541, 11545, 11579, 11584, 11615, 
           11619, 11643, 11647, 11676, 11680, 11731, 11730, 11729, 11728, 
           11727, 11726, 11724, 11723, 11722, 11721, 11720, 11719, 11679, 
           11672, 11645, 11639, 11617, 11611, 11581, 11575, 11543, 11537, 
           11513, 11507, 11482, 11475, 11448, 11439, 11418, 11410, 11392}]}, 
         "2"], Annotation[#, 2, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          
          LineBox[{10002, 10001, 10026, 10025, 10059, 10056, 10091, 10089, 
           10129, 10170}], 
          LineBox[CompressedData["
1:eJwN02tM1gUUB+A/bd22coTELKXmB6epITggSpdOqESBCNd11eCFeEEMzCs3
51xzYlYG3njlpijaBV+stYzMS4CUpWit2loXqtXa8lZZzrUknw/P2c6Xc86H
3xkfqiqojAmCYK8yemIQxDOFJHLJZzFLWMoylrOClVRTQy0RWmiljXY62MFO
OtnFbrroZ4BjDPIxn3CCkwxxit84w1nOcZ4L/MGf3DwpCG4hjtHEcysJjGEG
s5jNHDLJoohSwpRRzkIqWMQ6XmUjr9FIEx100sUeeniX9zjA+/QywHE+5TNO
cJKv+Zbv+J7r7gqCFFJJJ4OZ3M9s5lBIJkVkEeIBinmQEubyHNmEmUcZ8ykn
h4XkUkEez1NAJQuo4hkW8ywvsISlLGM5K6mhjlWsZg0vspZ1rGcDr7CRRraw
j7c5zjCjJgdBLCmkMp88nuRpKqhkLQ1sYjNb2Mo2momwnRZaaaOdDnawk052
sZsu9rCX13mDN3mLbqIMcYn/uHGKLDGBZB4ijxJKySeb6UxkMlO5nZsYRSxx
xDNi5mX+JUafQCJJpJHDAspZRBMR3qGXIb7iHBe5dmoQXE8id3IP95LPI5QS
po7VNBIhygG+4Bv+4jKxd7uJdGbyFIWsoJ5ttDPIMQbop4+POMoRDnOIDzlI
L1/yO2c4ywWuMML/XJPkn4kjngQmMIk00sngPuaSzTxyKKSIECVUU0Mt9TSx
ic1spZsoffQzwCA/MMxP/MwVRhgzLQhuYyzjSGIayaSQSRaP8hiP8wRhyqih
ljrq2cDLtNBKG+30sJ9DHOYIRznFaYb5kYv8zT9c4oZkWWUs40hkPBnM4GEK
CFFMCWGqqaOBl2hmO93sI8p++ujnNJ/zC78yQkyKfdzBdFJJI51c8ghRTCVV
1LOKBtbTTIQoPXzAQa4C04Qa+w==
           "]], 
          
          LineBox[{10794, 10760, 10795, 10793, 10821, 10820, 10836, 10835, 
           10851, 10850, 10852, 10853, 10872, 10870, 10868, 10894}], 
          
          LineBox[{10744, 10722, 10725, 10728, 10731, 10734, 10737, 10751, 
           10770, 10784, 10805, 10817, 10831, 10833, 10845, 10847, 10863, 
           10865, 10889, 10891, 10950, 10948, 10946, 10944, 10942, 10940, 
           10938, 10936, 10934, 10932, 10930, 10928, 10890, 10887, 10864, 
           10861, 10846, 10843, 10832, 10829, 10816, 10803, 10783, 10769, 
           10744}], 
          LineBox[CompressedData["
1:eJwl0E8rwwEcwOHvtNw4bA47LOW8304kdrbrRCmHzWFxRf4crPYKtH6EC69A
kmXbq9jEypsgQnkBnnJ4zp/6zDX31nczEbFGWoq45IE+Q15444NMEpElR5GE
RVaoUWebA445JeWWe54Y88kPU+WIPPMss0GDfU5IueaRHn0G3HBOiyO22KTC
AjNM86vxxSvPdLnjgg5tDtmhwSpVligzS4FJJvj24J0xIwZ0ueKs9P/vD8r+
N6A=
           "]]}, "1.75`"], Annotation[#, 1.75, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          
          LineBox[{11136, 11094, 11137, 11135, 11173, 11172, 11201, 11200, 
           11229, 11228, 11230, 11231, 11257, 11256, 11277, 11276, 11301, 
           11300, 11302, 11303, 11326, 11327, 11350, 11351, 11372, 11373, 
           11398, 11399, 11424, 11425, 11454, 11455, 11488, 11489, 11522, 
           11523, 11557, 11559, 11591, 11593, 11622, 11623, 11653, 11654, 
           11652, 11651, 11650, 11683}], 
          LineBox[CompressedData["
1:eJwV0OlLF3YABvCvaevSlZpdMpjZ8D5DKlxEunWZDTq2MYv6Jd2HlZWVq1ab
uaK0BBH7B9TUoBdREhGDuTOpdxW9KAiia+vOWrnt04vP8/Lh4UlZWbVwc1QI
YZnoKQjhHN100kIz9dRRy252UcMmNhBhGWWUkk82ySQxkB/CG17Tzx1ucYU+
fuISnXTQThstNFNPHTXsYDvVRFhOOWUUMZlCChjPWGIYRBSBp3khPOYmN7jO
Nf7kdy7Qw3nO0UUH7bTRSguHqecQdeykmm1sZRWVLOILFlBOCdP5lGJyyCSD
dCaQSALxvMv1H7e5wXWu0ctFummjmUZqqaaSCsooZRoFpJFCEnFEve/PCeFv
7tLHGVppYBdVLGUxUykkgVieZIfwiKtcpot2GjjCdrYQoYJySikii2TiiWYg
K4SH3KGPXs7QxQkaOMZRDvMja6lkJRHKmMXnfEYGk0hlIiMYyhA+YDAxvMwM
4QXPeUY3TZzgOEdp5BA/sI3v2ch6IqxjBWv5hq9ZyJfMZy6lzKGE2RSSRzq5
pJHDSGKJYTjRDOOPjBB+oYdezvIzpznFSTpopZ0mljOTGUynmCkUMZl88sgl
h2yyyCSDdNL4hEmkMpEUPuYjkpnAeMYxljEkMZpEEohnFCP5kDhiGcFwhjGU
IQwmhmgGEfgvPYR/GeAdb/mHN7ymn1e85AXPecoT/uIRD3nAfe6xWu9GOuni
V357v8nfcWSTzyzmsYSvWM0a9nKQA3zHfvbxLbXsYTc17KCaY/wPtkXXyw==

           "]]}, "1.5`"], Annotation[#, 1.5, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwN02lMzwEYB/CfmZljMWfYHHMMUTlzRlhSzPGCSqXRJnPElvMVoYQXacRL
/q78Uy/IsZg5mqMXzQtz5M45GyPXlvPz4vN8336f7Xn6Lc1bsKZFEATTja/D
g+AxT3jKc55xjOOUE+Y0lVRxkr0Us5qVzGUOUQyhNa14OywIXlHLNY4Sophd
5LGGNFJJYCpDGEwHIvgVFQTNvOQFN7jOSU6wnQLSWMQExtGXfoxnIpOYTDxT
mEoC05hOKuksJoNMslhCNjvYSSFF7GYP5ZwiTAWVVFHLTW5xmzvU0chr3vCW
d7znN3/5R2DvjnSmC13pRnd60JOhRBNDLCMYyShGM41EZpLELJJJYTbpZLGE
bJayjHVsYCOb2MwW9lLCfg5wkEOEOcNZqjnHeeq5zwMe8okf/CRwH82yhezA
ACIZxBiSiCeZBFJII5ccVrCeIraymzJOEaKCGl7yiEYaeMVHvtPED4LoIGhD
a9rRmd70og+DiCaKGOJIIJGFzCeVTFaznDzyKaSIYko4zBFClHOeC1zkCndp
oImvfKOZtjG60Z4u9CeKscQxjniSmEcGmWSRwyry2co2CthFCfso5RAhwlRT
Qy113KOBD3zmDy1jg6ATkQxjNInMJp1s1rKBAgoppYwQYWq4xGWuUkc9T3jB
Z77QRDMRI/wBAxnOJGawiDTSySKXVeSzhQIKKaWMck5zjov8BwQS2VQ=
           "]]}, 
         "1.25`"], Annotation[#, 1.25, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwV0mloz3EcwPGfa2bkaKGEzTaltf8ORETbRLPS7HAUshKrLcamuYoHjmJy
bh4Y8mBMtthoxgNy3+wBkWKSdjFHiSyTvPbg9Xn47fP59p6wan1ucZ8gCEYY
UUlB0J8BhNGWGATtdNBJF1/4yje+85lmntHIZU5zkj3sZC2F5JFLGqmESGAc
Y4kgnN+hIPhJKx+op4b97GUtRWSxgHgmEUZ/2hKC4CN3ucUZzlLDOe5wnwc8
5BGPecJTWumgk098potwbw8igsEkECKRJJJJIZsccsljCUsppoRSNnKAwxyl
gkqO0UATV7nWew8ddPKJbv7Qw1+G+LOhDGM40cQQSxzJTGYKU5nDXOaRwTJW
sJJ8SiljE5s5yBFqOE8tdVznJre4zWve8o4Wuunp3UtLIxnFaCaSwAxSSSOd
THLIZRH5FLCOMjazhV2UU0EV1dRxgYtc4Tr3ecZzmnnFO1p4Txc/+NfbfLJ+
GEgkYwgxjVlMJ4Ms8pjPbBKJYTyxRBFHNEnMIJWZZJLNYnJYzhoKKaCErWxn
G7vYRwXHOcUJqqmnkUvc4B5PecEbXtJCO7/om6Jb+hFJFPFMJ52F5JHNClZT
xAY2sYPdlHOI/VRSRS0NNPEf9Na4Zg==
           "]], 
          
          LineBox[{12544, 12553, 12543, 12552, 12561, 12572, 12584, 12593, 
           12607, 12620, 12625, 12608, 12595, 12585, 12577, 12562, 12544}]}, 
         "1"], Annotation[#, 1, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwN0TtIFHAAx/F/kxYYBuXsieQgpGEutQUmmFMkcvkgXfIBd1Y0phzeIJaG
ZC6RD7pTnEQtwQLBglIqQi2XIOipQvkY8gqC+gyf+fuDX6Q5fiF2IIQwxaHS
EDIlIfzmD5/4zBe+8Z0NNvnKKis8Y5EZphllhH766OQmbbRyiSjnqOAUZUTI
J5ssdk+EsMUbXjHLNMPcJ0mCdlq4SA21RGkjRgdX6aaHXm5xmz4e8JAUaR4z
zxOe8pYVVlnjHe/Z4xf7ZDhocw6HyaWAQo5TRDmnqaSK81RTx2WaaKadGHE6
6CLJHQa5xxBjpEgzzixzPOcFL1lijXW2+MFPtvnLP474/SjHyKOYUiqoIko9
DTQS5xoJkgwwyBgp0owzzwLLvOYDH9lhn5yTuhRSzBnOUkMdV2jlOjdI0M0A
d5lgkkf8B9rWgXE=
           "]], 
          LineBox[{12722, 12708, 12704, 12700, 12706, 12685, 12702}], 
          
          LineBox[{12513, 12531, 12539, 12559, 12567, 12582, 12590, 12605, 
           12613, 12630, 12639, 12640, 12632, 12614, 12615, 12616, 12617, 
           12618, 12606, 12591, 12583, 12570, 12569, 12568, 12560, 12540, 
           12532, 12514, 12513}]}, "0.75`"], 
        Annotation[#, 0.75, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwV0EkuAwAYhuFfQi1awxGoGDfYYSGmEzQNNjYSIloV1qLdl+oBBBsOoFEu
YDiAIVxAjQdg47F4knf55ete3swUmiJiibHRiC6aaaGVBI2RiDfeeeWBR564
54ZrapxzxCH7lCmyQ441FsgyzST99NJGkp/hiF9Sup0OOuljgEGGmGKGWeaY
Z5F18mxQYJcSe1Q4oMoxJ1xQ55IrbrnjmRc++OSL7/+NPkmRpodxJsiQZYVV
ttimSIkKVU45o8YfS5M/VQ==
           "]], 
          LineBox[{12701, 12684, 12705, 12699, 12703, 12707, 12721}]}, 
         "0.5`"], Annotation[#, 0.5, "Tooltip"]& ], {}, {}}}], {
    DisplayFunction -> Identity, AspectRatio -> 1, DisplayFunction :> 
     Identity, Frame -> True, FrameLabel -> {None, None}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {"DefaultBoundaryStyle" -> Automatic}, 
     PlotRange -> {{0.001, 0.991}, {0.001, 0.991}}, PlotRangeClipping -> True,
      PlotRangePadding -> {
       Scaled[0.02], 
       Scaled[0.02]}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{
             
             RasterBox[{{{0.148, 0.33, 0.54}}, {{0.3217905195878953, 
              0.4167953902705063, 0.6299058926384258}}, {{
              0.48118206225954907`, 0.4728115873755604, 
              0.5362060720263354}}, {{0.6405736049312029, 0.5288277844806144, 
              0.442506251414245}}, {{0.7999651476028564, 0.5848439815856684, 
              0.3488064308021547}}, {{0.9094818994048739, 0.6437047485121846, 
              0.3193938881551089}}, {{0.9349438071798984, 0.707359517949746, 
              0.3983258022576851}}, {{0.960405714954923, 0.7710142873873075, 
              0.4772577163602612}}, {{0.9858676227299475, 0.8346690568248687, 
              0.5561896304628372}}, {{1., 0.9062544976159105, 
              0.6679771830298322}}, {{1., 0.95, 0.75}}}, {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}}]]}, {
              CapForm[None], {{
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -92.04545454545456}, {
                    Rational[
                    15, 2], -92.04545454545456}}, {{-7.5, \
-92.04545454545456}, {7.5, -92.04545454545456}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -71.59090909090911}, {
                    Rational[
                    15, 2], -71.59090909090911}}, {{-7.5, \
-71.59090909090911}, {7.5, -71.59090909090911}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -51.13636363636364}, {
                    Rational[
                    15, 2], -51.13636363636364}}, {{-7.5, \
-51.13636363636364}, {7.5, -51.13636363636364}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -30.6818181818182}, {
                    Rational[
                    15, 2], -30.6818181818182}}, {{-7.5, -30.6818181818182}, {
                  7.5, -30.6818181818182}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -10.227272727272748`}, {
                    Rational[
                    15, 2], -10.227272727272748`}}, {{-7.5, \
-10.227272727272748`}, {7.5, -10.227272727272748`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 10.22727272727272}, {
                    Rational[15, 2], 10.22727272727272}}, {{-7.5, 
                  10.22727272727272}, {7.5, 10.22727272727272}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 30.681818181818187`}, {
                    Rational[15, 2], 30.681818181818187`}}, {{-7.5, 
                  30.681818181818187`}, {7.5, 30.681818181818187`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 51.1363636363636}, {
                    Rational[15, 2], 51.1363636363636}}, {{-7.5, 
                  51.1363636363636}, {7.5, 51.1363636363636}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 71.59090909090907}, {
                    Rational[15, 2], 71.59090909090907}}, {{-7.5, 
                  71.59090909090907}, {7.5, 71.59090909090907}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 92.04545454545453}, {
                    Rational[15, 2], 92.04545454545453}}, {{-7.5, 
                  92.04545454545453}, {7.5, 92.04545454545453}}]]}}}, {
             Antialiasing -> False, 
              StyleBox[
               LineBox[{{7.5, -112.5}, {7.5, 112.5}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -71.5909090909091}, 
                    Offset[{4., 0}, {7.5, -71.5909090909091}]}, {{
                    7.5, -30.681818181818183`}, 
                    Offset[{4., 0}, {7.5, -30.681818181818183`}]}, {{7.5, 
                    10.227272727272736`}, 
                    Offset[{4., 0}, {7.5, 10.227272727272736`}]}, {{7.5, 
                    51.13636363636363}, 
                    Offset[{4., 0}, {7.5, 51.13636363636363}]}, {{7.5, 
                    92.04545454545453}, 
                    Offset[{4., 0}, {7.5, 92.04545454545453}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.75\"", 0.75, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -71.5909090909091}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.25\"", 1.25, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -30.681818181818183`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.75\"", 1.75, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 10.227272727272736`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"2.25\"", 2.25, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 51.13636363636363}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"2.75\"", 2.75, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 92.04545454545453}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"M10DefaultDensityGradient\"", ",", "#1"}], 
                   "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.30457754193907677`", ",", "2.759224717328892`"}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"0.5`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.75`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"1.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"1.25`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"1.5`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"1.75`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"2.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"2.25`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"2.5`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"2.75`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.696609638141736*^9, {3.696609715216153*^9, 3.696609719383151*^9}, {
   3.6966097516466093`*^9, 3.696609773762312*^9}, 3.696614015111457*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"optimal2robotPath", "[", 
  RowBox[{
  "s1_", ",", "s2_", ",", " ", "g1_", ",", "g2_", ",", "\[Epsilon]_"}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"s1", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "/", "4"}], ",", 
       RowBox[{"4", "/", "5"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s2", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"3", "/", "4"}], ",", 
       RowBox[{"1", "/", "5"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"g1", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "/", "2"}], ",", 
       RowBox[{"2", "/", "3"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Epsilon]", " ", "=", " ", "0.001"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numMoves", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", "y", ",", 
           RowBox[{
            RowBox[{"Length", "[", 
             RowBox[{"First", "@", 
              RowBox[{"optimal2robotPath", "[", 
               RowBox[{"s1", ",", "s2", ",", " ", "g1", ",", 
                RowBox[{"{", 
                 RowBox[{"x", ",", "y"}], "}"}], ",", "\[Epsilon]"}], "]"}]}],
              "]"}], "-", "1"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "\[Epsilon]", ",", 
           RowBox[{"1", "-", "\[Epsilon]"}], ",", "0.01"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", "\[Epsilon]", ",", 
           RowBox[{"1", "-", "\[Epsilon]"}], ",", "0.01"}], "}"}]}], "]"}], 
       ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.696609500780052*^9, 3.6966095250952597`*^9}, {
  3.696609581523547*^9, 3.696609612794346*^9}, {3.696609645689085*^9, 
  3.696609650648962*^9}, {3.696609834727414*^9, 3.696609875719789*^9}, {
  3.6966099864321747`*^9, 3.696609994975519*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListContourPlot", "[", 
  RowBox[{"numMoves", ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Contours", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7"}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.696609965130673*^9, 3.696609968774691*^9}, {
  3.696610037023973*^9, 3.696610070936337*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1:eJxk3V/Ir3uD1/VhiOggwiaomArKzIII6aADMTAygwhrkRDmgcSgEGEjdFAG
FYSQBzIHQTsDiZ2xKlwIK0SMImwqrVH745+xtPFuts+d91z/L6zAxIr2Wg+v
78X3fR/dvmfz+Oxnf37Xeu379/td3+vv+Inf8k/9ph/9kR/5kX/m7/mRH/ny
8//5PX/xT/6an/jwK/vzP//H/tof/Xt/+785+m/5ZS+/5K/+N74Z/et++e//
mX/pD347+o/97l/9B/7P//fj6O2X/v1/ze/9Wz+N/j5+/W/8FZ9H/9t/81/1
T/91f9/vG/13/txf/tf/+f/i94/+ff/e/R//t//4fzr6H/5n/8If/8U/95+N
/hO/+Ot/YPTXv/yX/+Do//vXvv6Hv+sP/fTof+gf+A3f/0/6r0f/9r/xz/6P
f+nX/jej/6e/9PU/MPpv+vKXX//w6N/w9R/Ifzf6P/pdf+hv/0/+xZ8Zff2r
v/L7/4Y/Mvrrf92P/rHR/9rX/8t/P/oPf/+f/uf+rf9h9Jd/2t//LY3+9OXH
L/rjo/+Jn/hF3/8jf/r/+PKXf92fGP3v/Krf8Zt/4a88/cN5/uTor+v9qj81
+vv4/j/w9N/15S//jp8d/Ue+/0//+C/706P/hV/4K9//v57+67++AP7n0V//
6378f8nr4+kf/vwzo//9H//ygvqzo/+RL3/7v+fp5ct/3a/5X0d//ct/8ekf
vhx/bvSf+vKP45f/udH/8pe//Zenf/j6fRn9X375y7/kfxv99R/vzzz99R/H
b/750X/6t67fv6K/G/13f3l5//qn/5Uvf/n3Pv3D6+Hpv+37V//P/5N/fvRv
+bHf9tN/9Hc//V/90S//gaf/hi9/+Vf/YPSX//RP/c6nv////Gd/6/r0D6+v
19Ff/+t+6umvf/nnn/7/fvbL/6D/ffSHn/qdP/ljv+3p/+DL3/7PPv1/ffmv
+6V/YfQ/+vVv4Ol/9ye//A96+ofX/9vof/DL3/5PPv31v+6nn/76l3/sF0Z/
/cf7G5/++o/jD/xC9liyx5I9luyxZI81e6zZY80e2+jf9HWPLXts2WPPHnv2
2LPHkT2O7HFkjzN7nNnjzB5X9riyx5U97uxxZ4/7nRO6P/mh+aH5ofmh+aH5
ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh
+aH5ofmh+aH5ofmh+TG/Pp7mh+aH5ofmh+aH5ofmh+bH/Pp9Gc0PzQ/ND80P
zQ/Nj/l6eJofmh+aH5ofmh+aH/P19TqaH5ofmh+aH5ofmh+aH5of8/X/Npof
mh+aH5ofmh/zHkv2WLLHkj2W7LFmjzV7rNljG82PeY8te+zZY88ee/Y4sseR
PY7scWaPM3uc2ePKHlf2uLLHnT3u7HG/+72iTuj+5Ifmh+aH5ofmh+aH5ofm
h+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH
5ofmh+aH5sf8+niaH5ofmh+aH5ofmh+aH5of8+v2ZTQ/ND80PzQ/ND80P+br
4Wl+aH5ofmh+aH5ofszX1+tofmh+aH5ofmh+aH5ofmh+zNf/22h+aH5ofmh+
aH7MeyzZY8keS/ZYsseaPdbssWaPbTQ/5j227LFnjz177NnjyB5H9jiyx5k9
zuxxZo8re1zZ48oed/a4s8f97n2o/l5RJ3R/8kPzQ/ND80PzQ/ND80PzQ/ND
80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80Pz
Q/Njfl08zQ/ND80PzQ/ND80PzQ/Nj/n1+zKaH5ofmh+aH5ofmh/z9fA0PzQ/
ND80PzQ/ND/m6+t1ND80PzQ/ND80PzQ/ND80P+br/200PzQ/ND80PzQ/5j2W
7LFkjyV7LNljzR5r9lizxzaaH/MeW/bYs8eePfbscWSPI3sc2ePMHmf2OLPH
lT2u7HFljzt73Nnjfve5Rd+H6u8VdUL3Jz80PzQ/ND80PzQ/ND80PzQ/ND80
PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80P+bX
x9P80PzQ/ND80PzQ/ND80PyYX78vo/mh+aH5ofmh+aH5MV8HT/ND80PzQ/ND
80PzY76+XkfzQ/ND80PzQ/ND80PzQ/Njvv7fRvND80PzQ/ND82PeY8keS/ZY
sseSPdbssWaPNXtso/kx77Fljz177Nljzx5H9jiyx5E9zuxxZo8ze1zZ48oe
V/a4s8edPe53n3P3c4u+D9XfK+qE7k9+aH5ofmh+aH5ofmh+aH5ofmh+aH5o
fmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+zK+Pp/mh
+aH5ofmh+aH5ofmh+TG/fl9G80PzQ/ND80PzQ/Njvh6e5ofmh+aH5ofmh+bH
fH29juaH5ofmh+aH5ofmh+aH5sd83b+N5ofmh+aH5ofmx7zHkj2W7LFkjyV7
rNljzR5r9thG82PeY8see/bYs8eePY7scWSPI3uc2ePMHmf2uLLHlT2u7HFn
jzt73O++F6X7uXc/x+j7Uv09o270Jz80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/
ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/5tfH0/zQ/ND8
0PzQ/ND80PzQ/Jhfvy+j+aH5ofmh+aH5ofkxXw9P80PzQ/ND80PzQ/Njvq5e
R/ND80PzQ/ND80PzQ/ND82O+/t9G80PzQ/ND80PzY95jyR5L9liyx5I91uyx
Zo81e2yj+THvsWWPPXvs2WPPHkf2OLLHkT3O7HFmjzN7XNnjyh5X9rizx509
7nffo+33ovo5dz+36PtQ/b2iTuj+5Ifmh+aH5ofmh+aH5ofmh+aH5ofmh+aH
5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmx/z6eJofmh+aH5of
mh+aH5ofmh/z6/dlND80PzQ/ND80PzQ/5uvhaX5ofmh+aH5ofmh+zNfX62h+
aH5ofmh+aH5ofmh+aH7M1//baH5ofmh+aH5ofsx7LNljyR5L9liyx5o91uyx
Zo9tND/mPbbssWePPXvs2ePIHkf2OLLHmT3O7HFmjyt7XNnjyh539rizx/3u
vot+j7bfi+rn3P3cou9D9feKOqH7kx+aH5ofmh+aH5ofmh+aH5ofmh+aH5of
mh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh/z6+Npfmh+aH5ofmh+
aH5ofmh+zK/fl9H80PzQ/ND80PzQ/Jivh6f5ofmh+aH5ofmh+TFfX6+j+aH5
ofmh+aH5ofmh+aH5MV//b6P5ofmh+aH5ofkx77FkjyV7LNljyR5r9lizx5o9
ttH8mPfYsseePfbssWePI3sc2ePIHmf2OLPHmT2u7HFljyt73Nnjzh73u/v0
et9Fv0fb70X1c+5+btH3ofp7RZ3Q/ckPzQ/ND80PzQ/ND80PzQ/ND80PzQ/N
D80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/Nj/n18TQ/ND80PzQ/ND80
PzQ/ND/m1+/LaH5ofmh+aH5ofmh+zNfD0/zQ/ND80PzQ/ND8mK+v19H80PzQ
/ND80PzQ/ND80PyYr/+30fzQ/ND80PzQ/Jj3WLLHkj2W7LFkjzV7rNljzR7b
aH7Me2zZY88ee/bYs8eRPY7scWSPM3uc2ePMHlf2uLLHlT3u7HFnj/vdfd29
T6/3XfR7tP1eVD/n7ucWfR+qv1fUCd2f/ND80PzQ/ND80PzQ/ND80PzQ/ND8
0PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND8mF8fT/ND80PzQ/ND80Pz
Q/ND82N+/b6M5ofmh+aH5ofmh+bHfD08zQ/ND80PzQ/ND82P+fp6Hc0PzQ/N
D80PzQ/ND80PzY/5+n8bzQ/ND80PzQ/Nj3mPJXss2WPJHkv2WLPHmj3W7LGN
5se8x5Y99uyxZ489exzZ48geR/Y4s8eZPc7scWWPK3tc2ePOHnf2uN+dA9L7
unufXu+76Pdo+72ofs7dzy36PlR/r6gTuj/5ofmh+aH5ofmh+aH5ofmh+aH5
ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5Mb8+nuaH5ofmh+aH5ofm
h+aH5sf8+n0ZzQ/ND80PzQ/ND82P+Xp4mh+aH5ofmh+aH5of8/X1Opofmh+a
H5ofmh+aH5ofmh/z9f82mh+aH5ofmh+aH/MeS/ZYsseSPZbssWaPNXus2WMb
zY95jy177Nljzx579jiyx5E9juxxZo8ze5zZ48oeV/a4ssedPe7scb87N6rn
gPS+7t6n1/su+j3afi+qn3P3c4u+D9XfK+qE7k9+aH5ofmh+aH5ofmh+aH5o
fmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofsyvj6f5ofmh+aH5ofmh
+aH5ofkxv35fRvND80PzQ/ND80PzY74enuaH5ofmh+aH5ofmx3x9vY7mh+aH
5ofmh+aH5ofmh+bHfP2/jeaH5ofmh+aH5se8x5I9luyxZI8le6zZY80ea/bY
RvNj3mPLHnv22LPHnj2O7HFkjyN7nNnjzB5n9riyx5U9ruxxZ487e9zvzhns
uVE9B6T3dfc+vd530e/R9ntR/Zy7n1v0faj+XlEndH/yQ/ND80PzQ/ND80Pz
Q/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/Njfn08zQ/ND80PzQ/N
D80PzQ/Nj/n1+zKaH5ofmh+aH5ofmh/z9fA0PzQ/ND80PzQ/ND/m6+t1ND80
PzQ/ND80PzQ/ND80P+br/200PzQ/ND80PzQ/5j2W7LFkjyV7LNljzR5r9liz
xzaaH/MeW/bYs8eePfbscWSPI3sc2ePMHmf2OLPHlT2u7HFljzt73Nnjfncu
bc8Z7LlRPQek93X3Pr3ed9Hv0fZ7Uf2cu59b9H2o/l5RJ3R/8kPzQ/ND80Pz
Q/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND82N+fTzND80PzQ/N
D80PzQ/ND82P+fX7Mpofmh+aH5ofmh+aH/P18DQ/ND80PzQ/ND80P+br63U0
PzQ/ND80PzQ/ND80PzQ/5uv/bTQ/ND80PzQ/ND/mPZbssWSPJXss2WPNHmv2
WLPHNpof8x5b9tizx5499uxxZI8jexzZ48weZ/Y4s8eVPa7scWWPO3vc2eN+
d455z6XtOYM9N6rngPS+7t6n1/su+j3afi+qn3P3c4u+D9XfK+qE7k9+aH5o
fmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofsyvj6f5ofmh
+aH5ofmh+aH5ofkxv35fRvND80PzQ/ND80PzY74enuaH5ofmh+aH5ofmx3x9
vY7mh+aH5ofmh+aH5ofmh+bHfP2/jeaH5ofmh+aH5se8x5I9luyxZI8le6zZ
Y80ea/bYRvNj3mPLHnv22LPHnj2O7HFkjyN7nNnjzB5n9riyx5U9ruxxZ487
e9zvnnvRc8x7Lm3PGey5UT0HpPd19z693nfR79H2e1H9nLufW/R9qP5eUSd0
f/JD80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND82N+fTzN
D80PzQ/ND80PzQ/ND82P+fX7Mpofmh+aH5ofmh+aH/P18DQ/ND80PzQ/ND80
P+br63U0PzQ/ND80PzQ/ND80PzQ/5uv/bTQ/ND80PzQ/ND/mPZbssWSPJXss
2WPNHmv2WLPHNpof8x5b9tizx5499uxxZI8jexzZ48weZ/Y4s8eVPa7scWWP
O3vc2eN+95ykPvei55j3XNqeM9hzo3oOSO/r7n16ve+i36Pt96L6OXc/t+j7
UP29ok7o/uSH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+bH
/Pp4mh+aH5ofmh+aH5ofmh+aH/Pr92U0PzQ/ND80PzQ/ND/m6+Fpfmh+aH5o
fmh+aH7M19fraH5ofmh+aH5ofmh+aH5ofszX/9tofmh+aH5ofmh+zHss2WPJ
Hkv2WLLHmj3W7LFmj200P+Y9tuyxZ489e+zZ48geR/Y4sseZPc7scWaPK3tc
2ePKHnf2uLPH/e65epofus/B4IfuObU9d5AfuueC9D7v3rfX+zD6vdp+T6qf
e/dzjL4v1d8z6kZ/8kPzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80Pz
Q/Njfn08zQ/ND80PzQ/ND80PzQ/Nj/n1+zKaH5ofmh+aH5ofmh/z9fA0PzQ/
ND80PzQ/ND/m6+t1ND80PzQ/ND80PzQ/ND80P+br/200PzQ/ND80PzQ/5j2W
7LFkjyV7LNljzR5r9lizxzaaH/MeW/bYs8eePfbscWSPI3sc2ePMHmf2OLPH
lT2u7HFljzt73Nnjfvcc1j5Xr89J6nMveo55z6XtOYM9N6rngPS+7t6n1/su
+j3afi+qn3P3c4u+D9XfK+qE7k9+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+
aH5ofmh+aH7Mr4+n+aH5ofmh+aH5ofmh+aH5Mb9+X0bzQ/ND80PzQ/ND82O+
Hp7mh+aH5ofmh+aH5sd8fb2O5ofmh+aH5ofmh+aH5ofmx3z9v43mh+aH5ofm
h+bHvMeSPZbssWSPJXus2WPNHmv22EbzY95jyx579tizx549juxxZI8je5zZ
48weZ/a4sseVPa7scWePO3vc757b3eew9rl6fU5Sn3vRc8x7Lm3PGey5UT0H
pPd19z693nfR79H2e1H9nLufW/R9qP5eUSd0f/JD80PzQ/ND80PzQ/ND80Pz
Q/ND80PzQ/ND80PzQ/Njfn08zQ/ND80PzQ/ND80PzQ/Nj/n1+zKaH5ofmh+a
H5ofmh/z9fA0PzQ/ND80PzQ/ND/m6+t1ND80PzQ/ND80PzQ/ND80P+br/200
PzQ/ND80PzQ/5j2W7LFkjyV7LNljzR5r9lizxzaaH/MeW/bYs8eePfbscWSP
I3sc2ePMHmf2OLPHlT2u7HFljzt73NnjHn/O8UPzQ/e5rPzQ/NB9DgY/dM+p
7bmDPUeq54L0Pu/et9f7MPq92n5Pqp9793OMvi/V3zPqRn/yQ/ND80PzQ/ND
80PzQ/ND80PzQ/ND80PzQ/ND82N+fTzND80PzQ/ND80PzQ/ND82P+fX7Mpof
mh+aH5ofmh+aH/P18DQ/ND80PzQ/ND80P+br63U0PzQ/ND80PzQ/ND80PzQ/
5uv/bTQ/ND80PzQ/ND/mPZbssWSPJXss2WPNHmv2WLPHNpof8x5b9tizx549
9uxxZI8jexzZ48weZ/Y4s8eVPa7scWWPO3vc2eMef67xQ/Ojz+3uc1j7XL0+
J6nPveg55j2XtucM9tyongPS+7p7n17vu+j3aPu9qH7O3c8t+j5Uf6+oE7o/
+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5Mb8+nuaH5ofmh+aH5ofmh+aH
5sf8+n0ZzQ/ND80PzQ/ND82P+Xp4mh+aH5ofmh+aH5of8/X1Opofmh+aH5of
mh+aH5ofmh/z9f82mh+aH5ofmh+aH/MeS/ZYsseSPZbssWaPNXus2WMbzY95
jy177Nljzx579jiyx5E9juxxZo8ze5zZ48oeV/a4ssedPe7scY8/x/ih+aH5
0ed29zmsfa5en5PU5170HPOeS9tzBntuVM8B6X3dvU+v9130e7T9XlQ/5+7n
Fn0fqr9X1Andn/zQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PyYXx9P80PzQ/ND
80PzQ/ND80PzY379vozmh+aH5ofmh+aH5sd8PTzND80PzQ/ND80PzY/5+nod
zQ/ND80PzQ/ND80PzQ/Nj/n6fxvND80PzQ/ND82PeY8leyzZY8keS/ZYs8ea
PdbssY3mx7zHlj327LFnjz17HNnjyB5H9jizx5k9zuxxZY8re1zZ484ed/a4
x59b/ND80PzQ/ND80PzQ/NB9blKfg9FzzXtObc8d7DlSPRek93n3vr3eh9Hv
1fKjn3P3c4u+D9XfK+qE7k9+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofsyvj6f5
ofmh+aH5ofmh+aH5ofkxv35fRvND80PzQ/ND80PzY74enuaH5ofmh+aH5ofm
x3x9vY7mh+aH5ofmh+aH5ofmh+bHfP2/jeaH5ofmh+aH5se8x5I9luyxZI8l
e6zZY80ea/bYRvNj3mPLHnv22LPHnj2O7HFkjyN7nNnjzB5n9riyx5U9ruxx
Z487e9zjzyl+aH5ofmh+aH70ud19Dmufq9fnJPW5Fz3HvOfS9pzBnhvVc0B6
X3fv0+t9F/0ebb8X1c+5+7lF34fq7xV1QvcnPzQ/ND80PzQ/ND80PzQ/ND80
PzQ/5tfH0/zQ/ND80PzQ/ND80PzQ/Jhfvy+j+aH5ofmh+aH5ofkxXw9P80Pz
Q/ND80PzQ/Njvr5eR/ND80PzQ/ND80PzQ/ND82O+/t9G80PzQ/ND80PzY95j
yR5L9liyx5I91uyxZo81e2yj+THvsWWPPXvs2WPPHkf2OLLHkT3O7HFmjzN7
XNnjyh5X9rizx5097vHnEj80PzQ/ND80PzQ/+tzuPoe1z9Xrc5L63IueY95z
aXvOYM+N6jkgva+79+n1vot+j7bfi+rn3P3cou9D9feKOqH7kx+aH5ofmh+a
H5ofmh+aH5ofmh/z6+Npfmh+aH5ofmh+aH5ofmh+zK/fl9H80PzQ/ND80PzQ
/Jivh6f5ofmh+aH5ofmh+TFfX6+j+aH5ofmh+aH5ofmh+aH5MV//b6P5ofmh
+aH5ofkx77FkjyV7LNljyR5r9lizx5o9ttH8mPfYsseePfbssWePI3sc2ePI
Hmf2OLPHmT2u7HFljyt73Nnjzh73+HOIH5ofmh+aH5ofmh+aH31ud5/D2ufq
9TlJfe5FzzHvubQ9Z7DnRvUckN7X3fv0et9Fv0fb70X1c+5+btH3ofp7RZ3Q
/ckPzQ/ND80PzQ/ND80PzQ/Nj/n18TQ/ND80PzQ/ND80PzQ/ND/m1+/LaH5o
fmh+aH5ofmh+zNfD0/zQ/ND80PzQ/ND8mK+v19H80PzQ/ND80PzQ/ND80PyY
r/+30fzQ/ND80PzQ/Jj3WLLHkj2W7LFkjzV7rNljzR7baH7Me2zZY88ee/bY
s8eRPY7scWSPM3uc2ePMHlf2uLLHlT3u7HFnj3v8ucMPzQ/ND80PzQ/ND80P
zY8+t7vPYe1z9fqcpD73oueY91zanjPYc6N6Dkjv6+59er3vot+j7fei+jl3
P7fo+1D9vaJO6P7kh+aH5ofmh+aH5ofmh+bH/Pp4mh+aH5ofmh+aH5ofmh+a
H/Pr92U0PzQ/ND80PzQ/ND/m6+Fpfmh+aH5ofmh+aH7M19fraH5ofmh+aH5o
fmh+aH5ofszX/9tofmh+aH5ofmh+zHss2WPJHkv2WLLHmj3W7LFmj200P+Y9
tuyxZ489e+zZ48geR/Y4sseZPc7scWaPK3tc2ePKHnf2uLPHPf6c4Yfmh+aH
5ofmh+aH5ofmh+ZHn9vd57D2uXp9TlKfe9FzzHsubc8Z7LlRPQek93X3Pr3e
d9Hv0fZ7Uf2cu59b9H2o/l5RJ3R/8kPzQ/ND80PzQ/ND82N+fTzND80PzQ/N
D80PzQ/ND82P+fX7Mpofmh+aH5ofmh+aH/P18DQ/ND80PzQ/ND80P+br63U0
PzQ/ND80PzQ/ND80PzQ/5uv/bTQ/ND80PzQ/ND/mPZbssWSPJXss2WPNHmv2
WLPHNpof8x5b9tizx5499uxxZI8jexzZ48weZ/Y4s8eVPa7scWWPO3vc2eMe
f67wQ/ND80PzQ/ND80PzQ/ND80Pzo8/t7nNY+1y9Piepz73oOeY9l7bnDPbc
qJ4D0vu6e59e77vo92j7vah+zt3PLfo+VH+vqBO6P/mh+aH5ofmh+aH5Mb8+
nuaH5ofmh+aH5ofmh+aH5sf8+n0ZzQ/ND80PzQ/ND82P+Xp4mh+aH5ofmh+a
H5of8/X1Opofmh+aH5ofmh+aH5ofmh/z9f82mh+aH5ofmh+aH/MeS/ZYsseS
PZbssWaPNXus2WMbzY95jy177Nljzx579jiyx5E9juxxZo8ze5zZ48oeV/a4
ssedPe7scY8/R/ih+aH5ofmh+aH5ofmh+aH5ofmh+aH7HO8+l7XP2etzk/ih
e655z6nlh+45Uj0XhB+69+31Pox+r7bfk+rn3v0co+9L9feMutGf/ND80PzQ
/ND8mF8fT/ND80PzQ/ND80PzQ/ND82N+/b6M5ofmh+aH5ofmh+bHfD08zQ/N
D80PzQ/ND82P+fp6Hc0PzQ/ND80PzQ/ND80PzY/5+n8bzQ/ND80PzQ/Nj3mP
JXss2WPJHkv2WLPHmj3W7LGN5se8x5Y99uyxZ489exzZ48geR/Y4s8eZPc7s
cWWPK3tc2ePOHnf2uMefG/zQ/ND80PzQ/ND80PzQ/ND80PzQ/ND86HO7+xzW
Plevz0nqcy96jnnPpe05gz03queA9L7u3qfX+y76Pdp+L6qfc/dzi74P1d8r
6oTuT35ofmh+aH7Mr4+n+aH5ofmh+aH5ofmh+aH5Mb9+X0bzQ/ND80PzQ/ND
82O+Hp7mh+aH5ofmh+aH5sd8fb2O5ofmh+aH5ofmh+aH5ofmx3z9v43mh+aH
5ofmh+bHvMeSPZbssWSPJXus2WPNHmv22EbzY95jyx579tizx549juxxZI8j
e5zZ48weZ/a4sseVPa7scWePO3vc488Jfmh+aH5ofmh+aH5ofmh+aH5ofmh+
aH5ofvS53X0Oa5+r1+ck9bkXPce859L2nMGeG9VzQHpfd+/T630X/R5tvxfV
z7n7uUXfh+rvFXVC9yc/ND80P+bXx9P80PzQ/ND80PzQ/ND80PyYX78vo/mh
+aH5ofmh+aH5MV8PT/ND80PzQ/ND80PzY76+XkfzQ/ND80PzQ/ND80PzQ/Nj
vv7fRvND80PzQ/ND82PeY8keS/ZYsseSPdbssWaPNXtso/kx77Fljz177Nlj
zx5H9jiyx5E9zuxxZo8ze1zZ48oeV/a4s8edPe7x5wI/ND80PzQ/ND80PzQ/
ND80PzQ/ND80PzQ/ND/63O4+h7XP1etzkvrci55j3nNpe85gz43qOSC9r7v3
6fW+i36Ptt+L6ufc/dyi70P194o6ofuTH5of8+vjaX5ofmh+aH5ofmh+aH5o
fsyv35fR/ND80PzQ/ND80PyYr4en+aH5ofmh+aH5ofkxX1+vo/mh+aH5ofmh
+aH5ofmh+TFf/2+j+aH5ofmh+aH5Me+xZI8leyzZY8kea/ZYs8eaPbbR/Jj3
2LLHnj327LFnjyN7HNnjyB5n9jizx5k9ruxxZY8re9zZ484e9/hzgB+aH5of
mh+aH5ofmh+aH5ofmh+aH5ofmh+aH5offW53n8Pa5+r1OUl97kXPMe+5tD1n
sOdG9RyQ3tfd+/R630W/R9vvRfVz7n5u0feh+ntFndD9yY/59fE0PzQ/ND80
PzQ/ND80PzQ/5tfvy2h+aH5ofmh+aH5ofszXw9P80PzQ/ND80PzQ/Jivr9fR
/ND80PzQ/ND80PzQ/ND8mK//t9H80PzQ/ND80PyY91iyx5I9luyxZI81e6zZ
Y80e22h+zHts2WPPHnv22LPHkT2O7HFkjzN7nNnjzB5X9riyx5U97uxxZ497
XPf80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80H2Od5/Lyg/d5yb1
ORj80D2ntucO9hypngvS+7x7317vw+CH7vek+KH7OUbfl+rvGXWjP/kxv77+
zGh+aH5ofmh+aH5ofmh+zK/fl9H80PzQ/ND80PzQ/Jivh6f5ofmh+aH5ofmh
+TFfX6+j+aH5ofmh+aH5ofmh+aH5MV//b6P5ofmh+aH5ofkx77FkjyV7LNlj
yR5r9lizx5o9ttH8mPfYsseePfbssWePI3sc2ePIHmf2OLPHmT2u7HFljyt7
3Nnjzh73uM75ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+xxv
fug+Z6/PTeKH7rnmPae25w72HKmeC9L7vHvfHj90v1fLD93Pvfs5Rt+X6u8Z
daM/+aH5ofmh+aH5ofmh+aH5Mb9+X0bzQ/ND80PzQ/ND82O+Hp7mh+aH5ofm
h+aH5sd8fb2O5ofmh+aH5ofmh+aH5ofmx3z9v43mh+aH5ofmh+bHvMeSPZbs
sWSPJXus2WPNHmv22EbzY95jyx579tizx549juxxZI8je5zZ48weZ/a4sseV
Pa7scWePO3vc47rmh+aH5sf858C3o/mh+aH5ofmh+aH5ofmh+aH5ofmh+aH5
ofmh+dHndvc5rH2uXp+T1Ode9BzznkvbcwZ7blTPAel93b1Pr/dd9Hu0/V5U
P+fu5xZ9H6q/V9SJ+fX1/OSH5ofmh+aH5ofmh+bH/Pp9Gc0PzQ/ND80PzQ/N
j/l6eJofmh+aH5ofmh+aH/P19TqaH5ofmh+aH5ofmh+aH5of8/X/Npofmh+a
H5ofmh/zHkv2WLLHkj2W7LFmjzV7rNljG82PeY8te+zZY88ee/Y4sseRPY7s
cWaPM3uc2ePKHlf2uLLHnT3u7HHnOv4wmh+aH/O/N347mh+aH5ofmh+aH5of
mh+aH5ofmh+aH5ofmh+aH5offW53n8Pa5+r1OUl97kXPMe+5tD1nsOdG9RyQ
3tfd+/R630W/R9vvRfVz7n5u0feh+ntFndD9yQ/ND80PzQ/ND82P+fX7Mpof
mh+aH5ofmh+aH/P18DQ/ND80PzQ/ND80P+br63U0PzQ/ND80PzQ/ND80PzQ/
5uv/bTQ/ND80PzQ/ND/mPZbssWSPJXss2WPNHmv2WLPHNpof8x5b9tizx549
9uxxZI8jexzZ48weZ/Y4s8eVPa7scWWPO3vc2ePOv/d9GM0PzY/5fYZvR/ND
80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/Ojz+3uc1j7XL0+J6nPveg5
5j2XtucM9tyongPS+7p7n17vu+j3aPu9qH7O3c8t+j5Uf6+oE7o/+aH5ofmh
+aH5Mb9+X0bzQ/ND80PzQ/ND82O+Hp7mh+aH5ofmh+aH5sd8fb2O5ofmh+aH
5ofmh+aH5ofmx3z9v43mh+aH5ofmh+bHvMeSPZbssWSPJXus2WPNHmv22Ebz
Y95jyx579tizx549juxxZI8je5zZ48weZ/a4sseVPa7scWePO3vceZ/gw2h+
aH7M70t/O5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh99bnef
w9rn6vU5SX3uRc8x77m0PWew50b1HJDe19379HrfRb9H2+9F9XPufm7R96H6
e0Wd0P3JD80PzQ/Nj/n1+zKaH5ofmh+aH5ofmh/z9fA0PzQ/ND80PzQ/ND/m
6+t1ND80PzQ/ND80PzQ/ND80P+br/200PzQ/ND80PzQ/5j2W7LFkjyV7LNlj
zR5r9lizxzaaH/MeW/bYs8eePfbscWSPI3sc2ePMHmf2OLPHlT2u7HFljzt7
3NnjzvvKH0bzQ/Nj/hzz29H80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ
/ND80PzQ/NB9jnefy9rn7PW5SX0ORs817zm1/ND80PzQvc+79+31Pox+r5Yf
8+vj6X6O0fel+ntG3ehPfmh+aH7Mr9+X0fzQ/ND80PzQ/ND8mK+Hp/mh+aH5
ofmh+aH5MV9fr6P5ofmh+aH5ofmh+aH5ofkxX/9vo/mh+aH5ofmh+THvsWSP
JXss2WPJHmv2WLPHmj220fyY99iyx5499uyxZ48jexzZ48geZ/Y4s8eZPa7s
cWWPK3vc2ePOHnc+h/wwmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5of
mh+aH5ofmh+aH5ofmh+6z/Huc1n7nL0+N6nPwei55vzQ/ND80D0XpPd59769
3ofBj/n18XQ/9+7nGH1fqr9n1I3+5Ifmx/z6fRnND80PzQ/ND80PzY/5enia
H5ofmh+aH5ofmh/z9fU6mh+aH5ofmh+aH5ofmh+aH/P1/zaaH5ofmh+aH5of
8x5L9liyx5I9luyxZo81e6zZYxvNj3mPLXvs2WPPHnv2OLLHkT2O7HFmjzN7
nNnjyh5X9riyx5097uxx53srH0bzQ/Nj/p7kt6P5ofmh+aH5ofmh+aH5ofmh
+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofnR53b3Oax9rl6fk9TnXvQc855L23MG
e25UzwHpfd29T6/3XfR7tP1eVD/n7ucWfR+qv1fUCd2f/Jhfvy+j+aH5ofmh
+aH5ofkxXw9P80PzQ/ND80PzQ/Njvr5eR/ND80PzQ/ND80PzQ/ND82O+/t9G
80PzQ/ND80PzY95jyR5L9liyx5I91uyxZo81e2yj+THvsWWPPXvs2WPPHkf2
OLLHkT3O7HFmjzN7XNnjyh5X9rizx5097nzP8cNofmh+zN+r/3Y0PzQ/ND80
PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND/63O4+h7XP1etz
kvrci55j3nNpe85gz43qOSC9r7v36fW+i36Ptt+L6ufc/dyi70P194o6ofuT
H5ofmh+aH5ofmh+aH/P18DQ/ND80PzQ/ND80P+br63U0PzQ/ND80PzQ/ND80
PzQ/5uv/bTQ/ND80PzQ/ND/mPZbssWSPJXss2WPNHmv2WLPHNpof8x5b9tiz
x5499uxxZI8jexzZ48weZ/Y4s8eVPa7scWWPO3vc2ePO9+I/jOaH5sd8H9a3
o/mh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofnR
53b3Oax9rl6fk9TnXvQc855L23MGe25UzwHpfd29T6/3XfR7tP1eVD/n7ucW
fR+qv1fUifn1+/zkh+aH5ofmh+aH5sd8PTzND80PzQ/ND80PzY/5+nodzQ/N
D80PzQ/ND80PzQ/Nj/n6fxvND80PzQ/ND82PeY8leyzZY8keS/ZYs8eaPdbs
sY3mx7zHlj327LFnjz17HNnjyB5H9jizx5k9zuxxZY8re1zZ484ed/a4cx/V
h9H8mK+zb3Lf7rej+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5
ofmh+aH5ofmh+aH50ed29zmsfa5en5PU5170HPOeS9tzBntuVM8B6X3dvU+v
9130e7T9XlQ/5+7nFn0fqr9X1Andn/zQ/ND80PzQ/Jivh6f5ofmh+aH5ofmh
+TFfX6+j+aH5ofmh+aH5ofmh+aH5MV//b6P5ofmh+aH5ofkx77FkjyV7LNlj
yR5r9lizx5o9ttH8mPfYsseePfbssWePI3sc2ePIHmf2OLPHmT2u7HFljyt7
3Nnjzh537rv9MJof87+XfZNzHr4dzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80P
zQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80P3ed480PzQ/ND9zkYPde859T23EF+
zK+Pp3ufd+/b630Y/V5tvyfFj35u0feh+ntFndD9yQ/ND80PzY/5eniaH5of
mh+aH5ofmh/z9fU6mh+aH5ofmh+aH5ofmh+aH/P1/zaaH5ofmh+aH5of8x5L
9liyx5I9luyxZo81e6zZYxvNj3mPLXvs2WPPHnv2OLLHkT2O7HFmjzN7nNnj
yh5X9riyx5097uxx55yGD6P5Mf8e/03OBfp2ND80PzQ/ND80PzQ/ND80PzQ/
ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND90n5vU52D0
XPOeU8uP+fXxdM8F6X3evW+v92H0e7X86Ofc/dyi70P194o6ofuTH5ofmh/z
9fA0PzQ/ND80PzQ/ND/m6+t1ND80PzQ/ND80PzQ/ND80P+br/200PzQ/ND80
PzQ/5j2W7LFkjyV7LNljzR5r9lizxzaaH/MeW/bYs8eePfbscWSPI3sc2ePM
Hmf2OLPHlT2u7HFljzt73Nnjzrk+H0bzY37f95ucI/ftaH5ofmh+aH5ofmh+
aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofvS53X0O
a5+r1+ck9bkXPce859L2nMGeG9VzQHpfd+/T630X/R5tvxfVz7n7uUXfh+rv
FXVC9yc/ND/m6+Fpfmh+aH5ofmh+aH7M19fraH5ofmh+aH5ofmh+aH5ofszX
/9tofmh+aH5ofmh+zDss2WPJHkv2WLLHmj3W7LFmj200P+Y9tuyxZ489e+zZ
48geR/Y4sseZPc7scWaPK3tc2ePKHnf2uLPHnXPgPozmx/w54Tc5d/Tb0fzQ
/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND8
0PzQ/ND86HO7+xzWPlevz0nqcy96jnnPpe05gz03queA9L7u3qfX+y76Pdp+
L6qfc/dzi74P1d8r6oTuT37M18PT/ND80PzQ/ND80PyYr6/X0fzQ/ND80PzQ
/ND80PzQ/Jiv/7fR/ND80PzQ/ND8mPdYssOSPZbssWSPNXus2WPNHttofsx7
bNljzx579tizx5E9juxxZI8ze5zZ48weV/a4sseVPe7scWePO+eGfhjNj/l7
Jd/knOpvR/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND
80PzQ/ND80PzQ/ND80PzQ/Ojz+3uc1j7XL0+J6nPveg55j2XtucM9tyongPS
+7p7n17vu+j3aPu9qH7O3c8t+j5Uf6+oE7o/+aH5ofmh+aH5ofmh+TFfX6+j
+aH5ofmh+aH5ofmh+aH5MV//b6P5ofmh+aH5ofkx77FkjyU7LNljyR5r9liz
x5o9ttH8mPfYsseePfbssWePI3sc2ePIHmf2OLPHmT2u7HFljyt73Nnjzh53
zpn+MJof8/cQv8lzDb4dzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80P
zQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/Njz63u89h7XP1+pykPvei55j3
XNqeM9hzo3oOSO/r7n16ve+i36Pt96L6OXc/t+j7UP29ok7M18Pzkx+aH5of
mh+aH5of8/X1Opofmh+aH5ofmh+aH5ofmh/z9f82mh+aH5ofmh+aH/MeS/ZY
sseSHZbssWaPNXus2WMbzY95jy177Nljzx579jiyx5E9juxxZo8ze5zZ48oe
V/a4ssedPe7scee5BB9G82P+3vo3eQ7Ot7kuPo7mh+aH5ofmh+aH5ofmh+aH
5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+ZHn9vd
57D2uXp9TlKfe9FzzHsubc8Z7LlRPQek93X3Pr3ed9Hv0fZ7Uf2cu59b9H2o
/l5RJ3R/8kPzQ/ND80PzY76+XkfzQ/ND80PzQ/ND80PzQ/Njvv7fRvND80Pz
Q/ND82PeY8keS/ZYsseSHdbssWaPNXtso/kx77Fljz177Nljzx5H9jiyx5E9
zuxxZo8ze1zZ48oeV/a4s8edPe48x+bDaH7M9zl9k+emfZt/j/o4mh+aH5of
mh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+a
H5ofmh+aH5offW53n8Pa5+r1OUl97kXPMe+5tD1nsOdG9RyQ3tfd+/R630W/
R9vvRfVz7n5u0feh+ntFndD9yQ/ND80PzY/5+nodzQ/ND80PzQ/ND80PzQ/N
j/n6fxvND80PzQ/ND82PeY8leyzZY8keS/ZYs8OaPdbssY3mx7zHlj327LFn
jz17HNnjyB5H9jizx5k9zuxxZY8re1zZ484ed/a489yzD6P5Md8X+02es/lt
fu/+OJofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+a
H5ofmh+aH5ofmh+aH5ofmh+aH5offW53n8Pa5+r1OUl97kXPMe+5tD1nsOdG
9RyQ3tfd+/R630W/R9vvRfVz7n5u0feh+ntFndD9yQ/ND82P+fp6Hc0PzQ/N
D80PzQ/ND80PzY/5+n8bzQ/ND80PzQ/Nj3mPJXss2WPJHkv2WLPHmh3W7LGN
5se8x5Y99uyxZ489exzZ48geR/Y4s8eZPc7scWWPK3tc2ePOHnf2uPOczA+j
+TGfo/BNnsv8bd6n/TiaH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+a
H5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5offW53n8Pa5+r1OUl9
7kXPMe+5tD1nsOdG9RyQ3tfd+/R630W/R9vvRfVz7n5u0feh+ntFndD9yQ/N
j/n6eh3ND80PzQ/ND80PzQ/ND82P+fp/G80PzQ/ND80PzY95jyV7LNljyR5L
9lizx5o91uywjebHvMeWPfbssWePPXsc2ePIHkf2OLPHmT3O7HFljyt7XNnj
zh539rjzXOUPo/mh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5
ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5Mb8+nu5zvPtc
1j5nr89N6nMw+KF7Tm3PHew5Uj0XpPd597693ofR79X2e1L93LufY/R9qf6e
UTf6kx/z9fU6mh+aH5ofmh+aH5ofmh+aH/P1/zaaH5ofmh+aH5of8x5L9liy
x5I9luyxZo81e6zZYxvNj3mPLXvs2WPPHnv2OLLHkT2O7HFmjzN7nNnjyh5X
9riyx5097uxxj9chPzQ/ND80P+bvgXwczQ/ND80PzQ/ND80PzQ/ND80PzQ/N
D80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/Nj/n1
8TQ/dJ/j3eey9jl7fW4SP3TPNe85tT13sOdI9VyQ3ufd+/Z6H0a/V9vvSfVz
736O0fel+ntG3ehPfmh+aH5ofmh+aH5ofmh+aH7M1//baH5ofmh+aH5ofsx7
LNljyR5L9liyx5o91uyxZo9tND/mHbbssWePPXvs2ePIHkf2OLLHmT3O7HFm
jyt7XNnjyh539rizxz1ed/zQ/ND80PyYvzf4cTQ/ND80PzQ/ND80PzQ/ND80
PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/
ND/m18fT/ND80H2Od5/L2ufs8UP3ORg917zn1PbcwZ4j1XNBep9379vrfRj9
Xm2/J9XPvfs5Rt+X6u8ZdaM/+aH5ofmh+aH5ofmh+aH5MV//b6P5ofmh+aH5
ofkx77FkjyV7LNljyR5r9lizx5o9ttH8mPfYssOePfbssWePI3sc2ePIHmf2
OLPHmT2u7HFljyt73Nnjzh73eJ3xQ/ND80PzQ/ND82N+HX8ezQ/ND80PzQ/N
D80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80P
zQ/ND82P+fXxND80PzQ/dJ/j3eey8kP3uUl9DkbPNe85tT13sOdI9VyQ3ufd
+/Z6H0a/V9vvSfVz736O0fel+ntG3ehPfmh+aH5ofmh+aH5ofszX/9tofmh+
aH5ofmh+zHss2WPJHkv2WLLHmj3W7LFmj200P+Y9tuyxZ4c9e+zZ48geR/Y4
sseZPc7scWaPK3tc2ePKHnf2uLPHPV5X/ND80PzQ/ND80PyY/73n82h+aH5o
fmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+
aH5ofmh+aH5ofsyvj6f5ofmh+aH5ofscb37oPmevz03qczB6rnnPqe25gz1H
queC9D7v3rfX+zD6vdp+T6qfe/ND932p/p5RN/qTH5ofmh+aH5ofmh/z9f82
mh+aH5ofmh+aH/MeS/ZYsseSPZbssWaPNXus2WMbzY95jy177Nljzw579jiy
x5E9juxxZo8ze5zZ48oeV/a4ssedPe7scY/XET80P+bnzHwzmh/zfawfR/Nj
/j3582h+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5o
fmh+aH5ofmh+aH5ofmh+aH5ofsyvj6f5ofmh+aH5ofnR53b3Oax9rl6fk9Tn
XvQc855L23MGe25UzwHpfd29T6/3XfR7tP1eVD/n7ucWfR+qv1fUCd2f/ND8
0PzQ/ND8mK//t9H80PzQ/ND80PyY91iyx5I9luyxZI81e6zZY80e22h+zHts
2WPPHnv22LPDkT2O7HFkjzN7nNnjzB5X9riyx5U97uxxZ497vG74ofkxP5fs
m9H8mM89+DiaH/P7qp9H80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND
80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/Njfn08zQ/ND80PzQ/ND82P
Pre7z2Htc/X6nKQ+96LnmPdc2p4z2HOjeg5I7+vufXq976Lfo+33ovo5dz+3
6PtQ/b2iTuj+5Ifmh+aH5sd8/b+N5ofmh+aH5ofmx7zHkj2W7LFkjyV7rNlj
zR5r9thG82PeY8see/bYs8eePY7scGSPI3uc2ePMHmf2uLLHlT2u7HFnjzt7
3ON1wg/Nj/k5lt+M5sd8Ts7H0fyYP4f7PJofmh+aH5ofmh+aH5ofmh+aH5of
mh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH/Pr42l+
aH5ofmh+aH5ofmh+9LndfQ5rn6vX5yT1uRc9x7zn0vacwZ4b1XNAel9379Pr
fRf9Hm2/F9XPufu5Rd+H6u8VdUL3Jz80PzQ/5uv/bTQ/ND80PzQ/ND/mPZbs
sWSPJXss2WPNHmv2WLPHNpof8x5b9tizx5499uxxZI8jOxzZ48weZ/Y4s8eV
Pa7scWWPO3vc2eMerwt+aH7Mzz3+ZjQ/5nPVPo7mx/y9jc+j+aH5ofmh+aH5
ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh
+aH5ofkxvz6e5ofmh+aH5ofmh+aH5ofmR5/b3eew9rl6fU5Sn3vRc8x7Lm3P
Gey5UT0HpPd19z693nfR79H2e1H9nLufW/R9qP5eUSd0f/JD82O+/t9G80Pz
Q/ND80PzY95jyR5L9liyx5I91uyxZo81e2yj+THvsWWPPXvs2WPPHkf2OLLH
kR3O7HFmjzN7XNnjyh5X9rizx5097vE64Ifmh+aH5sd8DufH0fyYv+f3eTQ/
ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80
PzQ/ND80PzQ/ND80P+bXx9P80PzQ/ND80PzQ/ND80PyYX78v757b3eew9rl6
fU5Sn3vRc8x7Lm3PGey5UT0HpPd19z693nfR79H2e1H9nLufW/R9qP5eUSd0
f/Jjvv7fRvND80PzQ/ND82PeY8keS/ZYsseSPdbssWaPNXtso/kx77Fljz17
7Nljzx5H9jiyx5E9zuxwZo8ze1zZ48oeV/a4s8edPe6xOz80PzQ/ND/mc5s/
jubH/L3wz6P5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5
ofmh+aH5ofmh+aH5ofmh+aH5ofmh+TG/Pp7mh+aH5ofmh+aH5ofmh+bH/Pp9
Gc2PPre7z2Htc/X6nKQ+96LnmPdc2p4z2HOjeg5I7+vufXq976Lfo+33ovo5
dz+36PtQ/b2iTuj+5Ifmh+aH5ofmh+bHvMeSPZbssWSPJXus2WPNHmv22Ebz
Y95jyx579tizx549juxxZI8je5zZ48wOZ/a4sseVPa7scWePO3vcY2d+aH5o
fmh+zOf8fxzNj/k+os+j+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh
+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofkxvz6e5ofmh+aH5ofmh+aH
5ofmx/z6fRnND82PPre7z2Htc/X6nKQ+96LnmPdc2p4z2HOjeg5I7+vufXq9
76Lfo+33ovo5dz+36PtQ/b2iTszX//OTH5ofmh+aH5of8x5L9liyx5I9luyx
Zo81e6zZYxvNj3mPLXvs2WPPHnv2OLLHkT2O7HFmjzN7nNnhyh5X9riyx509
7uxxj135ofmh+aH5MT8X5mNeJ59y3+nn0fzQ/ND80PzQ/ND80PzQ/ND80PzQ
/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND8mF8fT/ND
80PzQ/ND80PzQ/ND82N+/b6M5ofmh+ZHn9vd57D2uXp9TlKfe9FzzHsubc8Z
7LlRPQek93X3Pr3ed9Hv0fZ7Uf2cu59b9H2o/l5RJ3R/8kPzQ/ND82PeY8ke
S/ZYsseSPdbssWaPNXtso/kx77Fljz177Nljzx5H9jiyx5E9zuxxZo8ze1zZ
4coeV/a4s8edPe6xIz80PzQ/ND80P+Z/r/iUcwo+j+aH5ofmh+aH5ofmh+aH
5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofm
x/z6eJofmh+aH5ofmh+aH5ofmh/z6/dlND80PzQ/ND90n+Pd57L2OXt9blKf
g9FzzXtOLT80P+br6/193br37fU+jH6vtt+T6ufe/Ryj70v194y60Z/80PzQ
/Jj3WLLHkj2W7LFkjzV7rNljzR7baH7Me2zZY88ee/bYs8eRPY7scWSPM3uc
2ePMHlf2uLLDlT3u7HFnj3vsxg/ND80PzQ/Nj/n30E851+bzaH5ofmh+aH5o
fmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+
aH5ofmh+zK+Pp/mh+aH5ofmh+aH5ofmh+TG/fl9G80PzQ/ND80PzQ/c53n0u
a5+z1+cm9TkYPdecH5of8/X1/hwQ3fu8e99e78Po92r7Pal+7t3PMfq+VH/P
qBv9yQ/Nj3mPJXss2WPJHkv2WLPHmj3W7LGN5se8x5Y99uyxZ489exzZ48ge
R/Y4s8eZPc7scWWPK3tc2eHOHnf2uMdO/ND80PzQ/ND8mN+3/JRz0D6P5ofm
h+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH
5ofmh+aH5ofmh+bH/Pp4mh+aH5ofmh+aH5ofmh+aH/Pr92U0PzQ/ND80PzQ/
ND/m6+HpPpe1z9nrc5P6HAx+aH7M19f7c6M0P3Tv8+59e70Po9+r7fek+rl3
P8fo+1Lzv9e+d6M/+THvsWSPJXss2WPJHmv2WLPHmj220fyY99iyx5499uyx
Z48jexzZ48geZ/Y4s8eZPa7scWWPK3vc2eHOHvfYhR+aH5ofmh+aH/PnXJ9y
bubn0fzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND8
0PzQ/ND80PzQ/ND80PzQ/ND8mF8fT/ND80PzQ/ND80PzQ/ND82N+/b6M5ofm
h+aH5ofmh+bHfD083ed497msfc5en5vED82P+fp6f86g5ofuuSC9z7v37fU+
jH6vtt+T6ufe/Rxjfh/k/e8ZdaM/+THvsWSPJXss2WPNHmv2WLPHNpof8x5b
9tizx5499uxxZI8jexzZ48weZ/Y4s8eVPa7scWWPO3vc2eEeO/BD80PzQ/ND
82P+XsSnnLP8eTQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80
PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80P+bXx9P80PzQ/ND80PzQ/ND80PyY
X78vo/mh+aH5ofmh+aH5MV8PT/Ojz+3uc1j7XL0+J6nPveg55j2XtucM9tyo
ngPS+7p7n17vu+j3aPu9qH7O3c8t+j5Uf6+oE/MeS/ZYsseSPZbssWaPNXus
2WMbzY95jy177Nljzx579jiyx5E9juxxZo8ze5zZ48oeV/a4ssedPe7scY9/
7vzQ/ND80PzQ/Ji/R/cp5/J/Hs0PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80P
zQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/Nj/n18TQ/ND80PzQ/
ND80PzQ/ND/m1+/LaH5ofmh+zH8ufTeaH5of8/XwND80P/rc7j6Htc/V63OS
+tyLnmPec2l7zmDPjeo5IL2vu/fp9b6Lfo+234vq59z93KLvQ/X3ijox77Fk
jyV7LNljzR5r9lizxzaaH/MeW/bYs8eePfbscWSPI3sc2ePMHmf2OLPHlT2u
7HFljzt73NnjHv+c+aH5ofmh+aH5MX/v+lOe4/J5ND80PzQ/ND80PzQ/ND80
PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/
5tfH0/zQ/ND80PzQ/ND80PzQ/Jhfvy+j+aH5ofkx/3vsd/lz6Wl+zNfD0/zQ
/ND86HO7+xzWPlevz0nqcy96jnnPpe05gz03queA9L7u3qfX+y76Pdp+L6qf
c/dzi74P1d8r6sS8x5I9luyxZo81e6zZYxvNj3mPLXvs2WPPHnv2OLLHkT2O
7HFmjzN7nNnjyh5X9riyx5097uxxj3+u/ND80PzQ/ND8mO/T+ZTnfn0ezQ/N
D80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80P
zQ/ND80PzQ/ND82P+fXxND80PzQ/ND80PzQ/ND80P+bX78tofmh+aH7M73t8
l3+PfZof8/XwND80PzQ/ND/63O4+h7XP1etzkvrci55j3nNpe85gz43qOSC9
r7v36fW+i36Ptt+L6ufc/dyi70P194o6Me+xZI81e6zZY80e22h+zHts2WPP
Hnv22LPHkT2O7HFkjzN7nNnjzB5X9riyx5U97uxxZ497/HPkh+aH5ofmx7zD
x9zX+SnPifw8mh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5of
mh+aH5ofmh+aH5ofmh+aH5ofmh+aH5of8+vjaX5ofmh+aH5ofmh+aH5ofsyv
35fR/ND80PyY3yf/Lu97PM2P+Xp4mh+aH5ofmh+aH31ud5/D2ufq9TlJfe5F
zzHvubQ9Z7DnRvUckN7X3fv0et9Fv0fb70X1c+5+btH3ofp7RZ2Y91izx5o9
1uyxjebHvMeWPfbssWePPXsc2ePIHkf2OLPHmT3O7HFljyt7XNnjzh539rjH
Pzd+aH5ofmh+zG5/zDkAn/Jc4c+j+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh
+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofkxvz6e5ofmh+aH
5ofmh+aH5ofmx/z6fRnND80PzY/5c9Xv8j750/yYr4en+aH5ofmh+aH5ofnR
53b3Oax9rl6fk9TnXvQc855L23MGe25UzwHpfd29T6/3XfR7tP1eVD/n7ucW
fR+qv1fUiXmPNXus2WMbzY95jy177Nljzx579jiyx5E9juxxZo8ze5zZ48oe
V/a4ssedPe7scY9/TvzQ/ND80PyYf8/7mHNjPuU59J9H80PzQ/ND80PzQ/ND
80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80Pz
Q/Njfn08zQ/ND80PzQ/ND80PzQ/Nj/n1+zKaH5ofmh/z93C+y+eqT/Njvh6e
5sf859LT/ND80PzQ/Jivr/fP7e5zWPtcvT4nqc+96DnmPZe25wz23KieA9L7
unufXu+76Pdo+72ofs7dzy36PlR/r6gT8x5r9thG82PeY8see/bYs8eePY7s
cWSPI3uc2ePMHmf2uLLHlT2u7HFnjzt73OOfCz80PzQ/ND/m9wU/5pyxT6P5
ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh
+aH5ofmh+aH5ofmh+aH5Mb8+nuaH5ofmh+aH5ofmh+aH5sf8+n0ZzQ/ND82P
+Xub3+V7OE/zY74enubH/O+xT/ND80PzQ/Njvr6e53Tzo8/t7nNY+1y9Piep
z73oOeY9l7bnDPbcqJ4D0vu6e59e77vo92j7vah+zt3PLfo+VH+vqBPzHs9P
fsx7bNljzx579tizx5E9juxxZI8ze5zZ48weV/a4sseVPe7scWePe/xz4Ifm
h+aH5sf8OdLHnEv5aTQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/
ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/5tfH0/zQ/ND80PzQ/ND8
0PzQ/Jhfvy+j+aH5ofkxf8//u3xv82l+zNfD0/yY3/d4mh/zn0s/GM0PzY/5
+nodzQ/Njz63u89h7XP1+pykPvei55j3XNqeM9hzo3oOSO/r7n16ve+i36Pt
96L6OXc/t+j7UP29ok7o/uTHvMeePfbssWePI3sc2ePIHmf2OLPHmT2u7HFl
jyt73Nnjzh73+N/ND80PzQ/Nj/l7Bx9zjvGn0fzQ/ND80PzQ/ND80PzQ/ND8
0PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PyY
Xx9P80PzQ/ND80PzQ/ND80PzY379vozmh+aH5ofmh+aH5sd8PTzNj/l98qf5
Mf977A9G80PzY76+XkfzQ/ND80P3Od59Lmufs9fnJvU5GD3XvOfU8kPzQ/ND
82Pe4/19F/Me778X1c+5+7lF34fq7xV1Yt5jyx579tizx549juxxZI8je5zZ
48weZ/a4sseVPa7scWePO3vc438nPzQ/ND80P+bvqX3MufefRvND80PzQ/ND
80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80Pz
Q/ND80PzQ/Njfn08zQ/ND80PzQ/ND80PzQ/Nj/n1+zKaH5ofmh+aH5of8/f8
n+bH/D2cP5/PVZ/mx/y+xw9G82P+c+lpfmh+aH5ofmh+6D7Hu89l7XP2+tyk
Pgej55rzQ/ND80PzY97j/X168x7vv0c77/H+c+5+btH3ofp7RZ2Y99izx549
9uxxZI8jexzZ48weZ/Y4s8eVPa7scWWPO3vc2eMe/7v4ofmh+aH5ofmh+TH/
c/s8mh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5ofmh+aH5of
mh+aH5ofmh+aH5ofmh+aH5of8+vjaX5ofmh+aH5ofmh+aH5ofsyv35fR/ND8
0PzQ/ND80PyYr4en+aH5ofmh+aH5ofkxX1+vo/mh+aH5ofmh+aH7HO8+l7XP
2etzk/ocDH5ofmh+aH7Me7y/r3ve4/19F/Me778XNe+xZo/370PNe2zZY88e
e/bYs8eRPY7scWSPM3uc2ePMHlf2uLLHlT3u7HFnj3v87+CH5ofmh+aH5ofm
x+zs59H80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ
/ND80PzQ/ND80PzQ/ND80PzQ/JhfH0/zQ/ND80PzQ/ND80PzQ/Njfv2+jOaH
5ofmh+aH5ofmx3w9PM0PzQ/ND80PzQ/Nj/n6es2fS0/zQ/ND80PzQ/ND9zne
fS5rn7PX5ybxQ/ND80PzY97j/Tkg8x7v79Ob93j/Pdp5jzV7vP/cYt5jyx7v
nZj32LPHkT2O7HFkjzN7nNnjzB5X9riyx5U97uxxZ497/H3zQ/ND80PzY75v
8mOew/gpv5d9Hs0PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/N
D80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/Nj/n18TQ/ND80PzQ/ND80PzQ/ND/m
1+/LaH5ofmh+zOfafZdzip7mx3w9PM2P+Xv+T/Nj/h7OD0bzY36f/Gl+zP8e
+zQ/ND80PzQ/ND80P/rc7j6Htc/V63OS+tyLnmPec2l7zmDPjeo5IL2vu/fp
9b6Lfo+234vq59z93KLvQ/X3ijox73FkjyN7HNnjzB5n9jizx5U9ruxxZY87
e9zZ4x5/n/zQ/ND80PyY77P/mOf2fsr7eJ9H80PzQ/ND80PzQ/ND80PzQ/ND
80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND80PzQ/ND//913cuKbVcV
xvGOD2FTH0IEO4d0xaYPYDN9RWzkBbQhXnpiK5QcOAgVEEQQwQsqXlATY0yi
5anULXXZe62mYEuq5vnNwfgmaYV/9qhZu8631vqvsS5z8gfmD8wfffso5g/M
H5g/MH9g/sD8gfkD80fffs8m8wfmD8wffR7U85jXrpg/+v5QzB/9vbBi/ujP
bV5M5o9+X7WYP/p1j2L+6Melq8n8gfkD8wfmD8wfuW53rsOa6+rlOkm57kXO
Y57z0uY8gzlvVM4Dku9153t6+d5FPkebz0Xlfe68b5HXobKvSE/0PA6RxyHy
OEYex8jjGHlskccWeWyRxx557JHHPr8Xf2D+wPyB+aPPy3IS67y/iPs+p5P5
A/MH5g/MH5g/MH9g/sD8gfkD8wfmD8wfmD8wf2D+wPyB+QPzB+YPzB+YPzB/
YP7A/IH5A/MH5g/MH5g/MH/07aOYPzB/YP7A/IH5A/MH5g/MH337PZvMH5g/
MH/0ebPPYx7UYv7o+0Mxf/T3iIv5oz/nfzGZP/pzOMX80a+TF/NHP4+9iuNS
MX9g/sD8gfmj7//rut25Dmuuq5frJOW6FzmPec5Lm/MM5rxROQ9Ivted7+nl
exf5HG0+F5X3ufO+RV6Hyr4iPdHzOEQex8jjGHkcI48t8tgijy3y2COPPfLY
5/fgD8wfmD8wf/R5vE4m80d/TuB0Mn9g/sD8gfkD8wfmD8wfmD8wf2D+wPyB
+QPzB+YPzB+YPzB/YP7A/IH5A/MH5g/MH5g/MH9g/sD8gfkD8wfmj759FPMH
5g/MH5g/MH9g/sD8gfmjb79nk/kD8wfmj77OwnnMm13MH31/KOaPPu9EMX/0
98IuJvNHf26zmD/6fdVi/ujXPa7iPLaYPzB/YP7A/NH3/1qnmz9y3e5chzXX
1ct1knLdi5zHPOelzXkGc96onAck3+vO9/TyvYt8jjafi8r73HnfIq9DZV+R
nuh5HCOPY+RxjDy2yGOLPLbIY4889shjn7+XPzB/YP7A/NHnfTyZzB/9ubLT
yfyB+QPzB+YPzB+YPzB/YP7A/IH5A/MH5g/MH5g/MH9g/sD8gfkD8wfmD8wf
mD8wf2D+wPyB+QPzB+YPzB+YP/r2UcwfmD8wf2D+wPyB+QPzB+aPvv2eTeYP
zB+YP/q6POexzkIxf/T9oZg/+jxFxfzR3yO+mMwf/Tn/Yv7oz+EU80e/Tn4V
1z2K+aMfl64n8wfmj77/30zmD8wfuW53rsOa6+rlOkm57kXOY57z0uY8gzlv
VM4Dku9153t6+d5FPkebz0Xlfe68b5HXobKvSE/0PI6RxzHy2CKPLfLYIo89
8tgjj33+Hv7A/IH5A/NHnyf4ZDJ/9OeQTyfzB+YPzB+YPzB/YP7A/IH5A/MH
5g/MH5g/MH9g/sD8gfkD8wfmD8wfmD8wf2D+wPyB+QPzB+YPzB+YPzB/YP7o
20cxf2D+wPyB+QPzB+YPzB+YP/r2ezaZPzB/YP7o67idx7o8xfzR94di/ujz
2hXzR5934mIyf/T3wor5oz+3Wcwf/b7qVVwnL+aPfh57HcelYv7o+//NZP7A
/IH5I9ftznVYc129XCcp173IecxzXtqcZzDnjcp5QPK97nxPL9+7yOdo87mo
vM+d9y3yOlT2FemJnscx8tgijy3y2CKPPfLYI499jssfmD8wf2D+6PPKn0zm
j/7eyulk/sD8gfkD8wfmD8wfmD8wf2D+wPyB+QPzB+YPzB+YPzB/YP7A/IH5
A/MH5g/MH5g/MH9g/sD8gfkD8wfmD8wfffso5g/MH5g/MH9g/sD8gfkD80ff
fs8m8wfmD8wffd3P81jHrZg/+v5QzB99HtRi/ujzFF1M5o/+HnExf/Tn/Iv5
oz+HcxX3VYv5o1/3uI7z2GL+6Pv/zWT+wPyB+QPzB+aPnse6rl6uk5TrXuQ8
5jkvbc4zmPNG5Twg+V53vqeX713kc7T5XFTe5877FnkdKvuK9ETPY4s8tshj
izz2yGOPPPY5Dn9g/sD8gfmjr0NyEt/rRbzneDqZPzB/YP7A/IH5A/MH5g/M
H5g/MH9g/sD8gfkD8wfmD8wfmD8wf2D+wPyB+QPzB+YPzB+YPzB/YP7A/IH5
A/NH3z6K+QPzB+YPzB+YPzB/YP7A/NG337PJ/IH5A/NHXyf6PNb9LOaPvj8U
80efN7uYP/q8dheT+aPPO1HMH/29sGL+6M9tXsVzOMX80a+TX8d1j2L+6Pv/
zWT+wPyB+QPzB+aPXLc712HNdfVynaRc9yLnMc95aXOewZw3KucByfe68z29
fO8in6PN56LyPnfet8jrUNlXpCd6HlvksUUee+SxRx77/Dn+wPyB+QPzB+aP
7rEX8V786WT+wPyB+QPzB+YPzB+YPzB/YP7A/IH5A/MH5g/MH5g/MH9g/sD8
gfkD8wfmD8wfmD8wf2D+wPyB+QPzB+YPzB99+yjmD8wfmD8wf2D+wPyB+QPz
R99+zybzB+YPzB+YPzB/YP7o+0Mxf2D+wPyB+QPzB+aPvn9dxnvExfyB+QPz
B+YPzB+YPzB/9P3/Jo5LxfyB+QPzB+aPnse6bnfPY11Xr+exrnvR87iLPNZ5
Bnse95HH+l53z+Mh8lifo+15HCKP9b5Fz+MYeaye6HlskcceeeyRxz7r+APz
B+YPzB+YP3rf8yLmUTmdzB+YPzB/YP7A/IH5A/MH5g/MH5g/MH9g/sD8gfkD
8wfmD8wfmD8wf2D+wPyB+QPzB+YPzB+YPzB/YP7A/IH5o28fxfyB+QPzB+YP
zB+YPzB/YP7o2+/ZZP7A/IH5A/MH5g/MH31/KOYPzB+YPzB/YP7A/NH3r8uY
d6KYPzB/YP7A/IH5A/MH5o++/9/EeWwxf2D+wPyB+aPncRt5rOt29zxuI491
naSex13ksc5L2/O4jzzWeUB6Hg+Rx/reRc/jEHms97l7HsfIY+0r0hM9jz3y
2COP+v/8gfkD8wfmD8wf/TrZi5h363Qyf2D+wPyB+QPzB+YPzB+YPzB/YP7A
/IH5A/MH5g/MH5g/MH9g/sD8gfkD8wfmD8wfmD8wf2D+wPyB+QPzB+aPvn0U
8wfmD8wfmD8wf2D+wPyB+aNvv2eT+QPzB+YPzB+YPzB/9P2hmD8wf2D+wPyB
+QPzR9+/LmOeomL+wPyB+QPzB+YPzB+YP/r+fxPXPYr5ox+XPp7MH5g/eh63
kcdt5LGu293zWNfV63ncRR7rPOY9j/vIY503qufxEHms7+n1PA6Rx/pcVM/j
GHms16Gyr0hP9Dz2yKP+yx+YPzB/YP7A/NHvy7+IeX5PJ/MH5g/MH5g/MH9g
/sD8gfkD8wfmD8wfmD8wf2D+wPyB+QPzB+YPzB+YPzB/YP7A/IH5A/MH5g/M
H5g/MH9g/ujbRzF/YP7A/IH5A/MH5g/MH5g/+vZ7Npk/MH9g/sD8gfkD80ff
H4r5A/MH5g/MH5g/MH/0/esy5kUt5g/MH5g/MH9g/sD8gfmj7/83cZ+1mD/6
dZCP47y2mD96HreRx23kcRt53EYe6zrePY91nT38Setg9DzWeWp7Hus8Uj2P
9T3vnsf6HkbPY31Oquex3sfI61LZZ3ySN770+W++9pXrt549HpS/9v1vTPb5
OD598Ox/rz5Ptr/jLzwdUD58dRyp/ZCX+vjfmexzP+/zZMcT7HiCx/GyeBwv
/zU96PeNcX8w2efqfe74hB2fcNaP43F9Po7HZ9O7ft/I8c3JPlfv837/9824
//vmUj+O98VPh8ev/2d63u8b2/XzyT5X7/M+P+3zmJ/2ecxP+3z+vPOI/H3D
N/XzthM89qfzV8eBH8+fN15+7niO+3zqp/PnfZ4/P/bX4rG/ns+f81/j5ed8
gfkC84XzphzXeP9+2gF/snw+jhc13jheFI/jxUfxXPxHczx+wvzkvM04j3vv
pz/108nqc7yRw8XksZ0V8x0ex6di/sPjeHUZ17Ev53mk7zOOLz9bvq96zKd4
HP+K+RWP41Mx3+KxfV/N74Od1/o+33rt8X/8fPm+6jF/47H9FvM5HttlMb/j
sf0V8z0e2+P1/L7YebjvOzafXyx/T9Zj5+3qv/x4Fv6ZXy7jZT12nq/+h4+n
5a//ahkv67G+QP3VY/lbv17Gy3qsj1D/dBb/398s42U91neo/+rr3z2+8ey3
y3hZj/Up3X+/W8bLeqyvUT/akN8v42U91gep/+JTI/OHZbysx/om9d87Pv6P
Py7jZT3WZ6l/+vN+9KdlvKzH+jL1n31sy45/XsbLeqyPU//0z/25vyzjZT3W
96l/Kn/jr8t4WY/1if186G/LeFmP9ZXqR1/29jJe1mN9qPrRx729jJf1WN+q
fpwHvrOMl/VYn6t+nNe9s4yX9VhfrH6cvv19GS/rsT5a/TjPe3cZL+uxvlv9
OC98dxkv67E+vZ9//mMZL+uxvl79OC98bxkv67HrAOrHed57y3hZj103UD/O
C/+5jJf12HUG9WP7fn8ZL+ux6xLqx/b9/jJe1mPXMdSP7fuDZbysx657qNcX
5XhZj/VNvR/5cBkv67E+SL2+J8fLeqxvUq+PyfGyHuuL1Ot7crysx/oo9fqY
HC/rsb5Ivb4nx8t6rI9Sr2/J8bIe64vU62tyvKzv2/PL2XdjfTDWx2J9KtZn
Yn0k1gfq23q/+XL2fdmHYX0X1idhfZG/39/n9+Xf67oCzs9dn8Kjfyp2vQqP
/uY6vu/N5NHv3MS/R/HoV4pd38KjXyl2vav//cWuf/V/z2LXw/DoN4pdH8Oj
Xyh2vQyPfuE28ike/cJt5F08+oW7yOMu8riLPO4ij7vI4y7yuI887iOP4r4O
9ctn337K4z7yuI88HiKPh8jjIfJ4iDweIo+HyOMQeRwij0PkcYg8DpHHIfI4
RB7HyOMYeRwjj2PkcYw8jpHHFnlskUfx2D+KXW/seWyRxx557JHHHnnsz/4P
IKu/vA==
     "], {{{}, {}, {}, {
        EdgeForm[], 
        RGBColor[0.50875, 0.48250000000000004`, 0.52], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
8m9bflH+8OSM9bJtyb9kmTYzqtmujTzps40pd5bsBW+P+inV1G9YwAfVHB93
RXpnwC685xH8dq5P+C7yOzm+eWbHGP/AticEPBHweDXPgEcoJzJxNgRHHXu7
O6rZN2fLn32/5Cjtge7P1eW7eYyLAcYh96tv1eXZaIDj7k3zjLU3HW/g3hL/
RjXfqXvTlDLvYBaa8528huYct/0dV8c4juEB/Tq2nW6/b+lH8tMdn88p55GO
U97x6+k8sK5+6OUccoy6LNSc7xs+b4z0km598YdY97x5+jhUWvwO757G2xH2
iy4vOycRD/212UL6vb/5sc4PvLPCXpu5EJ8MMSUuapvzHd+6gFer+V7sa4zT
ujw3cYah/lBpODO9X5fnKPLvWf6gLs9p4Hkftt42a8iX96Zn1iVfeL5Szfej
VxegAYc8vEjBe73vKQNtOD98VpfnkqeD7qlqvnP4tCnvPz5ZzXclnzJdzjzv
LP4v0l+rubZ8Xpfryt7iqYf/p/ZxvP3SP+/I/h00fwUsX5/z3NO2/6Iu55Xf
qskHfoz7dxz7pIPMf1KX5x7ORJyvPjb/TzXfPf23mrhPFsDTL+/F/mMK3YuR
f6Ga77jOrsvz2kfynC1f6A6S56f2+4k2HKWeBX10mDzhx3uqvH9Lnj4K1jN+
Xq/m+8tr6dd642GwOs4QBqk39K/ZZrB1+L9W3x5ify9Vs//WGCJ+BktLnBA/
axqTvDPBuxPbtaTNsfc++v6ZasbCcwHPVvMbgT8j/aOa3wnwPjU46pjneMeA
OW4t5wrkhccK0vxQl+sCtF/X5TtfX9UlT/jxzRDvYcP/d3HkwcGXdevbgG/q
chzCY25drm/fyHe8coBrdqye7nhlDWON5Xnc+65JHzpvsxa22IYyNNSTf98y
cxfz1tvKcab9H+68xRwy2DmAc/0gU/YKz2k/voViPMxx3D1fzfggNpodb6wD
v1TzneNfHXdPWj/XftHvCdcK8N9qH+poy90j7b+sy/X7NO01dgG7n27dd9rs
LNv+bPtv7Ic28NpLefbRT78rOzqg1xeOYeaCAxzjjHV0Ha2+K0mPPVj/iAnW
yc+lgfZL5f3CeWAf+yJOiJG/jCliizj9Sj1oR/3+0gxzbR4esGN92m6H+lyD
sRe4h6t5N/gI/onySvW5XrA2rVCfuG+i7utq3mF9V827y++ruZ6sXJ97CnjA
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
DLThPHxuNb9pvU+7Ufez+J9sv5884Mu90fnVPB8/Ll/mN+ZM5rhf9Rc0d+nr
7ZTtXOXjnM5+4YxqzqH/BPxryrxKfLK/Y5+ya0BNIcc5Y5w9H3W7BIyVF3zO
DhhfzfP23dqDvlmjf63PdZo+4HW5+F+sY46Ef20h4+wC9eS7XtZL1sqfsEt9
7gFJzzPPuZ7nuXsL3PGA+0Wan+3rPPtjTeY5MHtKZP5R+z8mjrpp9blvY993
jjL8WJ/9PKbNH5RmmnXQ/CD9j8rL98h8l8d3zPiQu8f9q1lmXw6PJ/Uvfoae
59R818faeIc+Ze68Xdz+sZ94grHbkn39pB0Yv8yru+jrX4yB+8URW/j8zAX8
/q8+xc/sS3cL2KOae0P2m8xtrB1/BPxuerEyP6UuZ1Vz/8le9W/jh/XkLPui
jnugPeX5kHn6+UP+8GQ9+su25P+0vKft97Iv+hln+r151k3WTPYzxNJVjtn1
jCtw1NdJw/hlXLMGs5627rkAxjk4zrqc4XaopjwTlOkA9Ub/SfK5yjggXljf
/lc/f1/8q+ULjLcfjLm6iPX6QrYlnSQfZK0Tz53B6dVcA5CFc+WOlsGzLhRs
C4/LtD/jmLH5teOz1vHL2Jus3rTjvMp43lm7QUff9EPdTo7x0+X1sOMLX1yk
jr/V57jby7qLxBEvB7bkbz7w2w/7um7+Yf2F2uUH543vjUFib3f5/G5s7CHu
QenG63fi429jpn0112nW6P8Wsj/64ht7vrUf0JL3JqcGjK7mPQp5cKVCrins
ATgPcy7eppprykKFXE/ItylkeeFC7g3Ac+fCnce2tqPcJ6BYSL7w5HwO397V
vHv6XBlOsUy+jTLQpkMh5+4lI+1YmL9uLyme+Z6z9FYBW8p7G/kvVcg1hjZL
RnmJap61OxdyLrhPPvBYopB6Xa9unap5fu9czXuI423fqZDt7pUneO4M2I80
uichbd0vL1bI+Yo9Cmsv3yWS59y9dECXauIWE9/FPk+y/5Ms32dsEod818je
o10heVKGRxfp4b24/cIX3Zg/wZ1Wzb0U44W5jnluV2N/F/vg7oo7sO1M593b
VbPtqcYL+3R0bCokXKPep1n/pTTU4X/ue/D91tVcM3e1v9YYIn6gLxondyhH
X9v1ti3xgP/xPXbvUE0/3CEtsbdUQMdq3pncqR59pR1mHWtbj+BVLmSs9jFu
btdO2GuZQs5hSxey3XDbDpMX/XcvJB/WKvKsW8tG2rWQ8yA8uhVyfQN3keOY
8/tw7yZb71y5q+R5B8+IT/SegufDnIPY8x1sHtxH0vC9Medlzic8p4X3GvJH
DtZX+ucegHNRk7Srer6e5f0xfPDzDvq6o3bG3sy3O1q3RTXvERhrizs2GBe3
6B/GYTf7RWdob5Z+We1DHb//sWsh9wldCrlm36+9ptXPtzvpVG2LjWn/ve1/
0KYPuuYMVaYhzj3b6td7HTc7OvYZv4xjxhfjfIRzBfMEet+lDYgbziXMb20L
2YZxD20X55DO6sE+B3lGyJMYvMN55U51maquSxlL8+6A9T/2P7ma9/KnCOSZ
Exer5pkLvfaK9nsXcr1gPd2zkLjfXUv2KaSPOHNx9joy5vrlA3dUS9bNW6MK
uVfavZB7wpZCrk3N8oGOdQP+e9nXE9ZDR9vdCtl+b3lC0y76W6Sad1b9CzmP
Hh3Qz5T5fEAhbcmY586B+4YNqnl/0iag5JxwjDS9orx+1fN2IdflQwppi8W1
zSHiDy5k+37yg09/efWXP/hKIfe4jP1HTSmzBzww8gcVMk/KPoE7TdbUdgL6
gTvIPmtMa81vGnWbVPMuDPkW1X/guSPbzHF0o2NpkPzheUAh9yx/61v26XsU
8qxMHXh43CCfPaTBj+hVLeRvHACPicNPe+hrfPqLvPEp9M22e8J2ByrDAYX5
Z6ED1es6dSBOiBH2Ff0itlbAxy1p8zbaHd9NavWveGLgiIAjC7lesG4eLm6j
at7bMFctjP+qef7fzfHFOCNeNpRn0dgqyecIeS5sO+4PjirkGnSkMXCMfIvi
qYeurX0eKR4+7A8L8r7ZOWAR45c5gfhk/b3VNZj9Pfv8udX5zzl47sE6DQ13
NDyT4/kez/AYRz86ljZSL/TvYVwy37HXY41mP0jf8IIPNuJOd2PHxaGF3PfW
OT4OVdZjbdMq90D9cpW+WUQcdFc51jgXNFVz/180pcxZ4BjH8MK2a2u5JC1j
D17H2S9pe/NXyn89efazDeOyv365zrFzrT4Z6Jwy0HG3iHWbqDuxg48O00eL
aJ/DxNfrv4JxdrV2Jo4OtR00RWOhn764Rv4DlYMYWaJHzOXdY14PWLwS600l
v03eoCm/H+ab4+e0/8HOI88EPGv+WfGccf+s5D0GKeW/Khm/yPhSIc/hKwWs
GPC644kxxH3AKtU8z/4v2vxayfPGL5U8H1J+rZBtWufeVwuJO9+2K1dTlueU
h7M85/jfo+2LyoBd/lPNexLO0H9Ush66FwpJd5hxhr7PS3+e/NFpf/X6u5Ip
ZezBXPK0eh4ur4PEPyOflex7hWqecc429rDDG4U8Z/1WSRtQd462WkFa8q/q
01e0w1HaYnRD7GMDlg34Nso7RrpTQFP48JpIGyN92XbMB99U8vtnvnU+MOr+
CZoDIr23kt/o3qPt99L+r9gXbf+nf/ZWfmR/s5BntuUDlqsmrr8+O8Z6xtR4
acap1/Laop/+xL9HaMeXzb9sv/ton72140raCNw++roUOlwXuhQb04/4EN+e
Z3zhx3cK+RsqjGPG9fSAt82/Lb6lmvMedxLkmy2/F3VDA94NqFTz7MwZ+rMo
nxzwacDPlZzjONeyR2fP9VUl92ucRb6LfPdqnit6mI4xv4dxDw9keUd5KvZT
DXg/yscXUhb4ceb4vpIyIduQgJnKSH6w+s4o5LyLbD9VUrdx+qtFXcljD+bB
t9TlJ/U5Vvx07XqI421OwCmFtMHnxKI49pvsr4m1j6N8UsDsQuLYt86tpN5l
dafuxICPjJe3jJm37Jd86/zC2D3dtmOc9/Az43dPbbiHY5zxTbsvou5UZZwV
MDzgQ302KuCTQu6t2WN/UckU/32pv07VV18G3WmF5Ad+WevwMzp/XUleIwup
d0U5kfeDKJ9QSB+i5whlQY5hhazHNsTKt5WM42sdx20Crm/IGMd2fKPOGMZ2
j1by9zDOj/pfAy5oyD4ftR4fzJUeml+ka/19DXT4M8oTAv5oyN9uWCZwXfXT
t/b3b9TVRP+XR3plQG3k6xoTd0VD4i9rSLrL7ee8gJ8D/hdwobJhX+zKN/8P
2393bc1Y4Xc1fleWi00nmO9uvKDvr/KFJzIytvju/yf7PLch9T1PWS6RD7o+
Vkn7YKeLovxbQ/bJb5d8Wsnfs2Dc87sVjDvmyIkBfwd8Frg5lfztir/EXaru
0ECL7bpV8zctFgr73Bi4GwIWjvxNDVneozHl+lkeE+UzrJK/D/JBJeVERuJo
98ZsA/0D+ghf0Q9+fFDZkY/f5sBH+OcqfXWF/gN/hbhzKvkbLT9WUnfOtZx5
L1OPf42HruqCDf9SzmXtl/6xx+eV/P0GUnx8qvR/2uYibXyx+Qu1O2OGGGU9
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
h8++iTugPgHbVPKOforr3b2u00sFbtvG1OUL14plGnN9ObGSfOHJurJjY66t
37se7RzlrtLShrZLN2a+nc8C2DfRN3eTyMIeYJuo69OYe4WOjSnHNj7j4FkH
NNR/oXz3SLeEz0dan2eQzttfV/K+i2cDbX1+xB7wdnWnX/h0aky9F/F5wc3u
SebY/w6NuYZu35h7AfRCv+3Ff63t+0Z5u8bMk4Lv0pi6szcC7hfHM7/zXN+/
c13n2Q934zzTvEQ66Ds35r0E9x+vBU2Phrx/Y5/0aiXrXtMXyIo/7rPd/cqy
vfKMjr1Ot8ifyreujemvb9Wnm/rh34/0Mbx20r9z3UvsoE4PqBN9YcPO2vI+
46iv8bOtft1W333lGOmrr3mehR/Zf/FfhJ8pwwjl4B57a8+PW1vuHbBL0O7a
mPuoYZ4phwfs1pj7Kep+cm8FjnMnz2G5v+X55X6B218eP7ofAw+O57d7N+Yz
MJ5/7dWYZfLcJXNXvFklY34XZfje2Kf8vn3xfxA8S+KsCw+eyfAsa6T4veTJ
GXnLSp6TbzLdcgGdt9IW2KT12ccs9Z0lnvxP6rq7uu9urKHXn+q8ubKjA3f3
QwIGB/w36vZtzOfz3IfzvxXQ8ox3n8b59fCBZnN53KhPbtMv25hSXtJnlYxP
+PxX/h30/V3ajDgkzvB/b2PgPX11vDbZwr6GKjPPKniezXNt3nvCL5tW8t4a
Hx6gH9+VHl3BQf+3Y4zn3jyLot312mWovN9T99/Ufz91xwZDrT9euW7SX/sY
M8QKd9fcZ890XF9iX9xPXhG4y9nLF/LMxH6cubsSUG7IOR7899ZDR36MdNBw
Z3xNJe9rl2vIcw1nAu4L36rkXSJtviskP+ab/zTMf4+C9yxWCVhZfOt8RH6l
hpxnmGPos6psnP3ok755xjC8Jc8eI1ryjp67ep5pIEtLQ553ljMPjvPGj4XU
d6w80YfncqxnyEqfzG+nKsMY9V1O/ZbXPt/Z5gz7aW5IndH9zUrerU2q5J3r
ig15zuJcNb2SNNgJ3AoNea5c0fqVpKGe+3Lun16s5N0RdwPcEVyjXMj6pW1X
sA9kuk8Z4cfc8pN00DMHTlK+yZFeXcn7P/xIfrJl/LPqAj46T7+tbAqee2N0
Rt83Klkmf46+RBf6abCv8cqJDdENX71tDF2jLOjeU/w4bbO8Nm7RzlXtTv4H
/YlfeRdkjYDVG/IunLvuK4PPVZVMKXOX/3ol17M1zbN+8Q7JxbbluSTvrPAc
7aVK2p9nBqs15DsJ0PLOAs8+r5J+om0YV5dV8g52A2km2Q57YldsRb/IwhrK
/fAa5l+xvIp+x//w5hn3pfKHN+N4HfET1fcK8aspI7qsqU0m2C99ri1trfaZ
IA36X6lOPM+9tDL/HdWXtAH3+uRJX67kPe5EaSZaRn+e0V8hv/VM4bmadsAe
V+kTxgg+HatfacezQd77Yswyxn8qJN0k/UkZn+8m/54N898b66nvkHE15eQd
GO6QNjTdyDw6XqKe+Guy+A3022Ttjp2ZP/+UljZX6d/1W31vv622uFRf4lPk
+EffXWYZPLLxvuoa+op1gOfErG08A2ct4Dn3BPtcs5L/0bWzeyP+a+8+86y3
/CcNd9pPuGawXqxOf5W8O2INZJ14TCDP74ocro+PqOR/+jzqnuOQSt73ch9G
/mDLF8oPvvxX2Gj3cOzZ7lGul9QPnmspOzogJ/uEae5X0IX/W2KOOyzg0Eru
1/mfI/aGp5ieLP971bfbAvU7ule+RyDPfyGd3pKyjW3J/uiX/9l5Vl0OIpbV
B114X53/teKd9eedd5GH+9U1KmnL9gHHBQzCR03531e0OT/yvwT8GvBsuabm
mXL+fw/vM/FeE/8txJ7rEW3bpZLnGPZj59vugoD/BVxoHn89rh/5zyX2cg/p
l+eV7VH9uLf7pMds85w6PqvcF6nH7tr+QXntacy0lslPUF/o95KG/l/URy9Y
P0G/7mU9uv2qDsh/uPMnsfCA9mfPy33gfwJWCni6MfdQ7I+easwy+UOJiYDD
zD9vmf964j+fXhX4j6hXGvPdNc4x/O/SgZW8239GHHeW/I/SPpW80/xvJdvQ
9sjGxD9qHW0PsD17uSeVizt+7ulXDtivkned+1cSjy7o9Iy6oMNB5sE9ox+I
twuMuVXk/5T6riL/C8TvZ99Pmn9CmpWlm2osY0/+m4//OOO/zvhPNP4Pjf/l
O1Ab0C93uPuq+xFR97K6X6g89Pu4/ezr2GRc0s9ajl3mtMONgRfl85K8qFvb
sb6L7XaVB2P8PuU7Wh9yh86d8IryOXwBXq8oG+9l4tcWfbf3An56XF1Wkg/2
Jz5eNGbw0RP6aSX7ge4l+3pRmn2le1E8bYkX5GP88v9hD8fYfSjgN8cm8U2c
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
31o9pv+7qws6nKmO+JHvJlu/k+uqbZH5dOu+tt9u6j63MP87vNOtHyvNNHnM
0ed8F4hP+Z1MfjfuM3F8b8fvRbB+8TsQ/E4C3yYwBlq/N+N9EYA874rwPgq/
N8RvDa1omTy/k8Oaxu/T8G4CvxnF+y1DW/I9g+Nb8rejeHeB368iDx1lfuuU
325Y0pQyv+OATPwuBTI+rv14x4Gx2Mk1lzWI9QdZ+C0j+v9G/IrKRvv71JNv
Tom9H9QR3ViHyS/nWkwf6Mp3dnxfyLdzPwo/iWvWJk8Y28Q1Y433RfgNsFfU
dXX1XUWb8FtkvP9DmTy6dlTfx+37Cfs62/gZb0r5U/3W+htJpHy/yG+YwANe
H4tjHPI7WXxLwne3yzjGGev8NhJ24vc++K0m3hlDrheUD9la/cE447eX+H0Q
fo+EsYaOvG/BmOb3ONB/DXVHZ+bmIa6d+Pol/X2PMjKX0tfz9k0Zv1LPbz3R
D3z5HSdkpO//GHvE3FD50w97RfaJ7AOvc91mL8td4GjvA1lDuXe/ROAunnWP
51PcJ94Xabtiri2LFHNNYG1YuJjQVtzGxVxHWD82KGb/M11TNiomnvyGxSyz
V1iomLwobywNd1ljAk4r570Uz+h4Nsd9JM8xeA5S5zMO9jjogT6nlvO+knqe
+xR8lsc+4it5wpt7LvjBq1RMu3DmIN+mmPsYzh7sF3nOMMY799OV6Qv51PvM
BTmwwc0LrKmLaK8LWnK9vjDSXsW0CzZpo/7Xu8Z/7F6F+7H3vSPjOR3P4rgT
586Be4KFKnmunBE075STB7ywY5tK0kFDu4ptq+bHKhuyLqK+1zfN15/0Wv16
o7750L3BJsWED/TzhvoXfRp8FoOt5xhXPMNs8hyHHU/xOQX17Bt7aQfiq7Mx
1qjNrzZO3jVWuKfGn/eX8/kdPmefSDtwtD2sW/g7oL5b2nOLYtqU/ObFLHO/
zvNW7mZHeZfKc1aeU/GMaptinj/vDNwd5Xwe2jdw2xVzr7ao/zU4MupO8u54
+2I+9+S56Wxx1NGGuq/tn73cZvJpX0xen2oTZOCucivPux2V8+5yyr2lumzp
M2Xy/O8hz4uJrU2LyZv9IOMU/req+0f2D90U27VXjluVCRraLqnu2ID/Tpyt
LjzTRccd5HuL/YxUX+7C7ypnW3h8aLxsavxsqmw812Mff5nzzxeO2RqfyVKH
zb/U7v9Iy978NGlp87c45qg+QbdtMZ8tk9KWPDLh45H6cTt9cZcyck+/g77D
T7eX8+74DvVGf+6Yxzp2Tjc+iBPuIz63TP/wwmd3G0t9lOdTZWi1Twdp+irn
tt5twJP7De5XGit5nmcsH+14/jTO2J805v5+8aa8hx8ikOf8xRlgqYCOAd0C
ujblM9f3ynnXxJyydFO+J7FMU+ZHWp7VmOe3jxoT18W5iHsmnk1w13ROS545
zm1JfvDlHpK2rCm0H6QsPCOY3Zj8OG8gN/Jz5ujQlOeNjurCWrWENJxh0JV7
F+7/eebUXr7wZN3i7v8D+6RvypzpoeX5E7JtrL6bq9Nm9nuCfbet5J3pIpXU
AV3eLeedCs/jeNb/ebSb05jnLqCPOO5RuE95s5zjcKS2Yt5CbmThfMs5l3dD
rlXujaXDtp2bco6DlrMxZ2XO25yX0XWGdjxZP+KvTk151jtReZCtt37ssoAv
T5Z+oH5bxLSd+WHGSkd5LiXfEeap+0ze9NHJPjvrH+rwESnl3tafJM3H+hl/
Y+8lm/Is2cE8OJ7zdm/Kd0FOM897AtyFL+w6x9r2djnvT3mvhedRPM/iPZMz
zfP8k3cmeP75Vjnvide1/cKug9Dw/PRs6c+2TZNjjTHXZMp9OXfv3LvPLKdM
yLZsU47HkmPyHeViHa4qE/L0cl0G30PdxqgvadnYG2D8MU5Hy3+0NiAPj17K
QFySbiD9KdKi75vqfK5xu5K6nWu+rXYYoI7oV6zkux3YhOfr78qbcXCK8UYM
DdVvjM0t9CtjmpQyPuZdo/Hy2Vw6aI7X17RljA+RH/fz08vpI549niWP5UyX
1z8ryHdd6d9yzK3juFtZfRmvR+jHBn0xVn/QFz4iho7Wd/3k11P8WcYV8dRP
mqKytSjfUbYDP7Fzfhd9aef832L+v7gu4BD/x5j8rsV8R4d3aHgOOaWcz1vZ
1w0LOCHg1oBbyjkm+X/iWa41rEHQ047/Od6pmO927VzMd7oo71HMd4h4p4h3
db6zflH7uq2cdOBpe7v8WNt2tz1tecdot2LiZhhjg8s5Zm5kXxlwTcDV5bTv
AcVcd/cvZjt0RNcP1Qv94PmjfMnvbl8840a+29S9vfldiskDW8EDXsMDDvUd
Jvb4I8Rho+/VlXbM2UMdH7zD899ivrOzXzHPMvtGuqe2QmfeGd6rmO9VkqeO
Mv44vpzrBfMjfrk54KZyjp22rg/vS7dPMd/z2ruYuuBD9PlQGZF1iLacKZ8b
5UW/v9j3CfL8QL120Q4Huu/B3u+qI/z2Va8/HNfIerN1rfMEvvlLG2CPfbUJ
MrSVHlvtY/3e6oJNrtHPzBMDnFsYd0e4vz884DjnZOa/o6Pcv5hnjyOLuXeH
dmHjhzgaVM7YwhYHFXP/h36HFHMff3Axx9V1rJP6vc56+qA9fULHHvEgY3WQ
MpRsC48/1Rv9Hyumjo/SB32X578v/6zlo4p5PkH26+XFHN+vmGch6qer77Hl
PJ9yFrnaPvZ3PGAHzlH95HOdvI6zHe0PUa9aaeiH8XWYcY7e2PwY7f6G6THa
uY19HGBs/O36hd7XatuaBexLCt3B9kndpIDJxTyv4deB5ewTGQrKQQw0ybON
6ydy4ueFlKOfsmAjeExXz8naZwNjBZ6HacOBxtKR2pxYIdaYWxqcu8lPpi/1
R/deyr2B/ija/nBjsmDMNVrey5gmnonz34x1xtB7jt/jinl2ObaY55Lr8Ekx
z2ODi/PPVaRDiul3fH5NMc/NnI0HiAfHWfjaYp53NrbNYvKCbmBx/nn7WPse
IJ9j5HGtbTnr3VTMcx55zm03BtxZzDPDHQFXlPO515Xl3C9eGnBJOc83faW9
wbabqdsN5tF9UHH++XOQct4o/Q3iFpVmU9tvZrmdPP62X/ofqG5tpd9Em94a
cFsxzzeTyvkchGcjdygnZ5+bi3nmRd/LWsJPkV7ekmdg8LcUMxaICZ6Rwgce
xMnt2mNb6baSH31uY783idtSmTbR1keV87lev3I+m7mqnPbEd0P1/xba5Sb1
G6j/aEd7nvsdLY/X5Pea5SnKgCycBSkjb7190Wcfcdtqn6u0UR/b0uahYq4V
rF+spdMCHjT/oHj2CfcE3BswsZzPri4LuL+Ya+V90lDPvoBnoTy3PMKYIV7u
KqY+6HWk0PpsE37/ypO4qzP2trMdZ+cj5Uebu4t5rgbPmoYcU4s5fxxj3DOe
mCsmi+9vXTvXX9Y21ifG7mPqsLPy32uZPM9vL1e+XaS5337pk73F4eXU+QhT
yi/a5nL1Qo+7lfkK8fC+R12oO6ScZ7pDyznP4JeHAx4p5jqzt30+YL/4aDd9
Ns38A/rob+0KvxfkOSHg4nK+O36YOOoeNA72sO2ltp8gLc9aH9VWyHCwa9xz
8nlBfR9QBmR7UTtQv6M63qPu6I2fuR/dI2B3+/jLeWaC5UvsA7scrE0eUYa9
FrDN89JA+7B2Q5+C8z5jmbudHgHdA7qU0oedI32mmOvZ0wLr31MBF5bzGwTe
Sf9du11UzvfOWeMPLGf8EDuPF/M9b9733n+BNtDzPjfvdf+3nHRPFHPP9F/b
7StuP/NP2ccB9n9BOb+P+NX8+di+mOsxsm8X5e0Dvu4RNi/munWY8l8gj+eK
uU7T7oVi7gWeL+Z76si9XznbHmb9S/IBd3Y5vw84Rz1os28527PneE76I2xz
ofqjO3ZkD/NkMb8N+VX5G0o5PhmbfBNwbjm/C3i1mGvwKwHnlbMN9K8Vc0/w
qvye0k+vF3Pv8pr6HKpMtP3Z9nxrwbcLe5fzWxrKe5VTpv20Pfe+3Ofvqq4/
qe/L6vWSMrG3APeoft2nnD44yBj6SV1oy73/g8Y26UPG+nPKeLC2Pky5H7DN
buWMwwPV8Vlp6eMhddiznGvqzGKuJ6wfbUu5Do0v53cd+I357o2AN4u5B8Dm
jaXU5agF9DlSPaGlTX/9/oP2eE0797M9fPAh9+Lcj3N3/odj5Hf92M8+CqWk
xdfTi7m+ta5zlN9WNvg2lTJPOm+/0ibOLpF/P+CtYu5p0OUt2w5U3jeL8/dB
A6wvlXI9Lsq3KE/2GtdZX5QGPLoQB7sEvKtdZxpj/dX/WOVlf7JQKdfuG+QJ
vzalXNtpCw/K0EHzTsCMYu598NfCpfTZIPm9I+5GeS9Syj3HzdLfaD08Bhfn
76tmKOckbY2d2Re1i3z7Us4nBzgvXRX7nvegbUmZ2ywg23HqRttbbH+Q89wz
2oS2Q421RYw36OmHfUhLOb9rOUtYrpy4dupCG75p4htivmti/DEOGdPnOXYY
t68bi/2N+T0dO6yh7CWWLOVctK/z6hn22+z8tJ91i5Vyj7NoKcfrfx2zT2oP
6CoB5XI+d2OvRJvFS5mfYpk8OPaCVfujL/YJrGlLlXJO2Md5pluUly3lGsRz
qm7lfDa1Yzmfd+6kLujRoZQy0P9Y8eDuth59l5Cuo3j6o9+O4siDp31VnR5R
FuY6njf0DdhW2av2tYT80ete+XYq5RrJcxDWzGVKubdgbe/susneCDrK5FlX
x2hH9iesr0uXMn+/ZfYYXUtpm2nOi7s5n+2lj+HRw36x9xLa/H7H5c7l5NNN
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
LWrB2I688spC8M78ja7dpO6BYV9H956sDU5y7yR5YN826m6s9l1Xecban66d
e8jXCUucmfHi31D7MQb/xvI3WJkK6mOw/SuE6SzcxuriBvnppo6vUs/YnPf4
0tznQsS5W1K7qRDx4MbUtqxFDZO6IGPiyg2FGFMj7FqL2jQ1lgywhfCDVxXC
RlvVot43RRtNFucWTXgLETev9kxOLYT/zNWidoOtN/ecska9ibpTS7/UqZar
xd+p8m/U+Pdoy/v/IOD/Q3yUX8b85sffafK3LfytLueZc320MixfC96uUS7k
JH5eXwg+0DV8XVeIeHOtjZhzjXDkGdcp+3WeUfZklecq9dNFua9xP/WSzWpR
77pBPUObmgL3cyn1tYX2w27U7ZZxvIU25d6Sx2BP6krUaf6thl3JRabbiPHT
CnHfby9EXLlemsjAPmobzZR3a2VmD3nAzbbtPC9TtTlyXavdu3oujlP+oZ71
orxjy2VrocOt1MPm6mGK9JG/eWoLCuH/zxBmimd5C8/Olq4R38lnOnlPJ+gH
hkj/zjT+XyFizMJCxFZizMeOz1YfvdTJbX7xibu69y71sP0SuuiuLsBLXIIO
udWH8kXtjxrg39WoP2PnTWthix7iIrZ9JC93iucOz8BS6gFfgE/41Ub/l0L8
VkqNtrO6zqh74uxXqX0tbnS4QPluF/9Z0jxbfhfIcy/XdxbmTHEcJi+cjU1q
IQ+yUFdDzr+qQZOc4ctC3IOt9BfAUD+h5kp8/qIQuQLxmLcv8fkT7YI9yHuI
8SPUP7on7l4gfujwTiZGfyb8J+65W1j2cP53UNfvpjz13vSd3y7ofykP3Jme
wiHXlco2Q/v31P67aufh8vmJ/KBjcppZhcBPbnSe/EFnY3GCe5ay3iP98+Wh
t/Os/6xtL/M7zj71QGqBz1bDDyyjD6euR1wmxvxX30/rz1Xjri0r3CB9J+Nv
E9x3hcgZ+I6xTy2dOvoL1fjbkx/FiXzfKCO/0b+U1l+0Ac8c66OF4bzjg/6p
Bk74gS9iK/GIOMk9JWYTs+hPcEysIQbhByfrEzhj+JrtXPtenuH9KOMAsl3s
Grxf7Bf+n5cP5LrYvcBdKM+LbKOV82hjwnKea+4uZ/tgZWIMr38WIs5yN7mT
v2mjZ6pRk8d/t/AOk/v8pG0HajfW/lD23wuxb33ti/34buDenz0DE4Vn39PV
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
S52pjfDY9SztCd4R8lMRHti79alnS3dV8Z5lO3sJumfZZ18r937sXuhcqM8n
B1vZO41vbqWPBZ5Y90I5YiH95x0Ty/D3k8tRo6LWO1idt19C73zXUudruzbZ
vcSIrdOerSpRI6N29d+/b0pteiV+16YWS3+a41eEO64S9arr3M/fOLxVDp/x
jvY8SdsOaxqXozZ0cjl86ZvC03/D8dbipOZEDelE8b5lH/iT7LPOeTzVM8me
bpXAMd85aI/VXzX5kXWXOE/rqBfeu8h2rP6tg3t4syI7b1XyevL7K2zEWeZ4
I/AOfrYcecxE4VjfRBjq19T4h1YCjrh9hHuftc/ckfaJacTDNW3EQ+Iib3ne
1+RM2AX73FKJ2i71whM9C9Abos3gHzlGeRbAM78csebdcvzOgV8FD7UA8jLy
NHAXxE8doKkGAA/kN+Nt5HmsvykfJ1Qihg2Tzn81zdS2dP69csQ1YhB+/1X1
M1SekeMdz8+rwrySWosUn65O36XT98ZK/GZALYG6DjWLoyvx9y3kHYPlldwd
X9XSmig10JvcSw0CHl4Tnvi7gnwPs89ZJU7zu+6sSsR74j7jEZWI/ec6Zh6Y
4fpSfj8HJzKvJJ3XpVX2DJ9kny/1DmL6KtJi/wjxfWafuZPlrdF9J9vHh+A/
yOuaal6dqpHjkPOQ+1yrLbBJUbtj46Hq7Q3PxDDxdvWeb6VtT9S+J3n/uM/Y
9WpxnuZ9JG97Q5yvC/euON/WtuC6qhxvtqnlyAdeLkcOQP8lx/i7F8vhA6eU
I6/H/7GX87CFcK+49xXPzLGesVfVPTiOFs9kcTW9E6aWF9fwuoj7JeFfFGbK
Enwe7fpc37jzfAOSt5O/cz+4o7wBNq9EPbLp94IulZijntO5EnWsj8oRRxaU
I24w/tj+mY7Pco4YM1mcm6X2XTn8+7flwLuZa9yJY7wXnaW3cSVwLBQPe4gZ
i1L7sRy+D38JzjHiPTTtOaQSdbQn7PMe/9Z19v9UjnvG/g0r8Z6m3naoe550
D3sPrsS7G5gNUvtBmvjm7/2OEc8Gwr2sb0YeeD9H/olFxCvi0SbKR43ri7T2
ZTnyeOpcR6U2qBJz5ztPfvF5OWCPrETt7nn1dKW4vimH3/w6tU+kC31qfEek
NrASa/jnr2znS3u48OzjXn6Q2oflsD+/H21RifnTXNvSuatdv9rxK8qH/B96
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
mGP9fKzDc/UNvr5Pf/+Rq47hyEHGQv37uT5+0LXAb86IpWPUAb7S36B9Ls8Y
ZWSVg/2f0wfo+UP/tsxX5yBNPec484kj2+UDx34gLpRjCW32STlfbOy5daV4
YnIL19hS5S6Tn/N3ZS7OS2IM+q6Qr5yHPJ2rPnOpL5NnlTLqa0/Orpm52Jfs
T56/vJSLu/hOrtMynjjLWudM5WzdWZmM5zdpXpQfeFk5xBr20DnytFcn52B9
z09oT5F+pjp2Vh562TvT1HOZdsNm2+ZDV+t8yHhJnh3zsc+ucQ4viYPuWnX8
LfyjPsrrrLPHWrlnd3SP00Yecteqs416KV9xHn8rf63619pe7ZphfZK/k9P/
IvwqjjPh5xp9U2yzjshVmuRj7sz7Sdvgn3SdPCXtdNfCammbSP+M64K1NU29
v1lOcwz7bBXPzD7bMu1bY3IzY+vR7jPO/g1SvXaC9fNRJ5bsTNzNRyygTbwp
998grkM+4squ+chTzzT20iaW7KIM6sjZMB/xCV275SOedcwHvK28G+yHrp4y
t7Acbp39PSYfvzXljOes7ZHq5xkbKowZoxOcK5wnfr98xIpyzKC9f4Lz5T3P
8TC2t6WhnzOtUhpoe4qjjzjdPh82e0Pbvam9sNt6+cgz+LvUda1Tkqvu6/m1
Tz7+7yLnftd83BPK94ZhCU7Px/3hc3m6addd9cGmyqtru4M2PVPfvJ1gVD7O
V87B3fORG3XKh182ykduCNyor+Y4dubwby5yNPIWcrl2+bgPUCenoz1bmn/1
x376h3Yt+6HbSd454tcTR84DHhu+rk1rOY7ZtsHv5Bo433XAd1X4oqd+6SVu
ZD7izYh82Bc7f6p9sTPxh7gA3Tn5qJ+jfYgx3fOxtqhj7+72j5IGfyHvf/oE
36Ajr51H6yf4P1dXA/W1dJ9u714/1r3/jnflt33uy7Pe8rd973mvHi7NO96p
uU/zXV+XfMyJfIfnyzyruU0ZZ8l3nLrQuYl0t9lffq68qbz08WztDnH7ON+9
tSlz4dzv5Foi570gH3+Dhb051voF+ukC8VXi6ec7uQPy8bdZ8u5V9il5CLgD
pR+XjxwDevwLz4Hyleu95atS9jjXQvlbPNYpZztnfA99i085ixg7e559Ub63
ne08meNZ+cj5hwvUOYv2yoe9iY1biYd2K8uzXQc5103nfNwZ0LFHPu4btPfM
h4wPlXO2eonzxGbuYZwfnB23ygsf8g7JR4w5OJUT8xE3iBPEi0usQ3NoPuLD
JdKBvzzBFfmIiZPkpY9YAv1h8iC/LKMcZyjpZ3xN5UXGz44FHsZwseM4Lh8x
lLh7XT7OLuLDKQkG5+MMujYffeBn5+McmyXsah/x4eR8nFGnWNImjhPjr8xH
fsp66JNgrj6eo44yH+2O6mGM5CEXabfG4pCDDPJfYiZ5InFzWj7yx5bi6DvG
OiV5/rGWtHfQ1q2sX2ab++405VymTNrYqCzjCucF77Hakf4dpIevqbafbJ2S
WE/OT44+3vqEfOT1+OigfPipr/PrIx30F2rnQdp2a/smSA/vT67Lla4D2sjp
qx0bq+sg9dE/wb5tlI0OcoqTbP+XX+RjH16fj3hxdT7OfMprrIOfUQPXXvyA
fMQT4gZrDVv1EzcwHzF5Z+lnJjhRnnIcGiDdSdIOlK69eqAjnsHX2/XBmTNO
m3FGscbKz1oo6+TjeQznM2cFZwb79n3PG2jgqeN4kH9CKjeWDzznw4fu+wv1
EbqQ9ZHnB+cC9PAR4z5RJ+1N7Oes5qxjP6xTD/r65yPf7ec42I9D9AE87KGb
8qH/xgRDlQvNLY7jZmFPaTeRZqjy6uSr5zmkRt+p5fHlY7zIu8053Kq+zq6L
DfTLSfoR33BmsOfZI+yV1ranu07aulZai2vj2ujnnGdIc1U+7g5/a4+rxLdR
F3o4l+g7Xtrp0rXRnuBPsJ82NP1LSVeCZf7/6l/9H9ZX+vfCp5fiLFjl+J/K
xz5/Mh9nxxPWoVkp3XHSPGX7d3l/d+7U2Rt/5WPdLs3HfOF7znX2rPxLxZ8g
jj72/EsJXlbvZepeaf23BLUr9Ekq12jjq5w7NnraMYD/U6C+Rl3PqO8PcVc5
RsazzLk/6TynO6/V8pVtvFo8865VEWf5v46dOXCmvGh7kD5kzfydj739fIIX
LGkPsA+atdL/k4+4g5yTpB9oSbtdIeWtSferFcF/ojbundr3Jbg/wdgEpQQX
VAQeXJ+KkP+3Op5zHAP021p990o+4hW+WL8i9uJ6FTG/l+2Df53jZP6zbPfT
lv2V82o+9iL8c7TZWud7jX2nSHu1PvtLWbOUP8h5Y48N09xPSbBRIfz9jH6Z
rm/wbZ2KOBc2SuXGFbG/wdHmnNiwIs4AzoLXhTfygaM8zfomFXEeIKNTgvdS
/V37oXtT+3BmYaO6FXGOwLebPNBvlso7U3mHujlfWMucSa85Duw0RHvM0qas
rbsSbJ5o6yV4Jx9y39We6Pwvp1DfO/LU0tboReemFTHHoeqjfbvj7ZLgk1T/
2HkxJ+5/HyXYqyLw1PesiHZdeZnn+wk6p/YH2hqb3yR+94roq6P96dsj1T/M
B/3G2vYWZeyhnOn68CplYHPsyJnE/jxaO73qXDbQ/vhhE+1/q/bFzjdoc8ZF
GzverV3vtr2Fc+vifDfVbrdre2jx39Ou62Xywjcvlf/Lhw27VsTc33PsXbUt
cjfw7Lpee36oTffUJsyftX2y6xsY7DpvW4i9/kqCaQl+TfCbJe2pwpQEvyRY
muCpBNsVAqg3KQS+aSqXpXJlgsuUc1WCPzhT5YUHuj/sm66e3+RpkfpaJniW
8yTBzAR/q/tXx9JEvU8m+DfBrATrEqxOcGWC3xM0Zw+nslkh8H+oC9nPVYT8
6dLT/4y6wV/uWJjHtoXQ96TtVfY/ow54mqlrmWP9x7Hv5FnKmXpNKtc6nz8T
/JXgamGGuFaJ7oVU7pDKNgleTvXW8v4lP+U18tH3Uip3TOUlCSY61u2dI3M9
K8GWCYYn+Ji1mMouCbYST3871wBr4Sp9NUO5Lzou5nSd87rOOWLznVPfG6ls
Xwh43XnvkuBN+5tqo2XyrtNnHRLurVTuWoj5z1A37eUVIQNbPF8Rc/pb+611
rKxZ7HSFPr9S/1xRw0dP66f1E5yUYIMEA62DOzVB3QSbFGKezBcfDEr12tLv
qJ3pg2+Q+DMSbJ7g9ATvpL6OqdwtwROumyedC3Nc7nzfroh2a/37kjIZ0wvO
dQfXwS7aATtunOp1EgwpRJ1yaCFsjc1f0wf4gvYHCfZI7Q8rgraOe35n/QLd
c9oVnYOl2chzorbz3ND6ya5JbM64l3uWc6bX0w7YA72dC6H73VTvlMr3Unma
dsbem1oHt7v90L1fEfXdpaF/mHXKzfT1Kv3dUbu/bf1tbXxiggEJaiWY7Vr7
V7md1TPUsWziOPEbYzjTvbJFIfYKe+Yj7T9U+j21K3Os57zPtH6mvMPdX1tI
j6yP1IO+d5SLnD1dQ5s7x87akXEOsw88cZh4PKciYsedxuFdmTfrKrXbVkS+
06Yi8qk2tlvbJnc8qSJi2kCBeD8gwckVEdsGVYScdhURC3fV37vYR7xBxpvi
lhszX1H/sIqIc6clOKUi4veG6mccbdRHLnFigpsrIlbdxBrmzKiIHGhIRcT4
weoCj77TK2Lew6R9s5xbVUQOcapjf81xoYOc5wRx9O0kHXF9qDo2crzkDDck
uNH67rYHaR/mf2tFxOAuzmOAdvxXfbX009yK8Bvl9RWRbwzU/uvV6APPM4sH
8vHMAV8u1/bkAHun8tNU3pOPvGBL8Yxhb/2xgXJZ77NdE3Mdx3qFsOfG2vRG
7b2Hc7zR+sn6qrY2Kee2p4g/WbvVrWG7TZRLvnNGgjOVvacywW2u327QntcL
uzt3/Ece2V4f4Z//8kplM/YtlD3ccgt13qI/umgLbHJbgrMqwk7DpR1u+zZp
4OmVYH6CBRWRp92svOMrYr1wV7g7lT0SdE9wToJsgoy6bk+wj3Njjps533q2
oWuQYKRwjri7KkIuMrsl2DfBnQnqJxghT2WCQoLzpblTvm6W3R3zLc59pHwj
HNttjg87nJ1gK2FLcYtca6y5XtrgAPWh97wE+QS5BKMT7JdgXoJ7rFPub9+5
0lJWWKf/Xmkoe1pvr293Uk4P5bJ/OTdYW8O05abOcU99U6GO8+TpoR1HO85R
FXFPPTDBwgTFirinlvTbOdIwxzHaeIG0B1geaL239fuUM0ZZWWXkxBWV08s5
znec52nH+eKxwaGF6vz6m3w8h/w6H88SqYPr5p3gLs8AzgLemdX1HsX7Me5j
vAcjHvAsmXtdB3H08a6M+wbP60d5Jxjp/ehMaYZ7n+HZVBf5ueN1lA563hlw
7vB+6jxj/qaOgzHyroj7DO9EPkvweT6e93NPed/6WTXaHyjzFnWWn7VRlp+1
UfJsjnvmbo5ns3z1+0PG/q7jP1u5yOTO2kme/znu8zwvOTd5h3eufeA/0kaj
nEs353OOfaP0QXf7PtGeHytntLju+eo73+mOcblyRmr7X/PxnInn4Y/n4855
tLjLxHdXBu9zuB+W36Pe4bj20c7na+vPrDPP/Z3jvc6zR4157y/uXX0xXDn4
6gL74evpmD90/vPF0XebY+nq3D/RjvPUxbhv1G883+Quurv+uEEc7fvy8X5r
YT7edS20/WU+3nN9kY/nz1/l49kw9Pfn4/l0b2nvk+ZL6X5K8HM+vgn4XBnM
i3OO8XH2886GdyDf5+M9weJ8vANi741X1wLH1Ev5Y9XxoDzldwwPyv+9Mr/L
x/79Nh/vA6DjXOV8fTQf3/0dYf930nwn70XqXKAtFin/IOf2tWProx0esOyj
PdD7jbKxwRTt8Ii60ftQPt5p8L5rRYIf8vFejHKS9cOke9g6Je9DfpQG2snW
wbGfWUusqUuUO1HbsWbm64ex+mK+c+zl2A5XxyXaEf4ljoFx8i7pl3zsG/YJ
33k8Ls0h2v9I5/iYtFO0wVTrv1hHRnnfHSX9ocpZopzH7GOOP2nDIxznI+J/
tI97Ns8xuGs3tT4pwSGFON8527lHEa/Ig7iPkTORy2zoHQv8m8Y54l4d6Tfy
DneaPNyH3jd+E0+5U3B3f015Q8SDI75wTyBPuKMi7k20qX9ijOQ+wx2O3I6c
jryvtvc8dJylTvKGut69GhQihtUvBH5TZZJPvVuD5yzb3G/JgU5X/obO9xZj
OHN91bEPFl/He+1y+YY5r3nOeZRjL+cao51TPe9YdxvbyYG4U5EfbV6o7p9n
nkDfR9JeVKxVa5sEExL8VJn8m6Bvqv9ZVavW1QlmVIWcesp/MbVfSNCqYdAd
JB+08PxVFfIZA/e3EfruA3WOUu8CcwLsSo7wvwSf6sP6+vET8edq9/nmD/iE
vI576P/MMc5V9kfaiDHf6fy3dO7YYIRjGem4RriuNnfNsFbw6Tv6Eb/gk1td
D7epn+f95ES5QuRDnyf4wpI2OdGXFfGe4AtxX9iGB95sKosJlqT64gSTE0xK
8GOCTCH6ycUeTdAo1bdOUCkP9N/ivwQTtCe2zDi2fCofcBzkeZ8l+EYe6B9M
UFAe7fH2X5jga9ufyfupY0D/Y9KNl445fpVgnPNhXguVX+k4P9MuY6QbK9/9
2oKxXu3auaYq5vpI6mtYCFv8pG1WJJiY4JIE39u+RLhYXFUh+B6WHzkPa5+M
9jzPOTE3npdwj2KvPpSgVAgZ+L98x2L/cmer7f7cxPXwkPoetr5E/omO7YcE
jVP78VRuU4hnYo+LY06XOq9tpHlMG2+jnX90PfwgLTw/64tHXBMl109RvT/I
8702+c418m2N+nf24aNFroPt037eIcHzyf5r9QP++CrBhQnGJahM/YtT+WCC
L8WNTbCkKvDF1P91KsfLU5Qevq0TPJbqjya4LMG0BL8lKDSMfmQ+laBJqm+X
oJE80P+YYHKCSdLQvzSVixJUNAwZn6f6BQnGJPhBnknCRHGXJ1iV4IoEjyRo
qJ4fpFkhvpF6mVcp1R9K5RfOFR3fJJjgPBc5B8b/bYKL7Fvi/OFnTk+m9rYN
Y87M/Vfnv1J7/JJgaoIpCX62PUW4VFzjhiHjCWUhk/ryBLvyP0RTeWOCGxLU
1i7na9/HE26bhiED3BjxvMN+uhTvtLs3DL8y18fV94T1x+Sf6tgYfzP4U9k0
lU9XRR3cSm19mX3gl+q3pvruEu09UdqV+gb/Puk62MY1s7V6f9V2P2uTn1wX
P9ao/2QffnxYH3+Xyov1DW3wVal8rirWPWu+ZSqfTWUL8c+KW5PKqxL8kWC6
Je0dU1/rBC+l+rUJ/k7wT4LXE+yU8O0bBv1qedZL7fUTzNVfuzQMn9GeY/9q
dVwpsE5/r4rxMBbGOrMq9iZ79EXHwRgYy8tVUf/bMc2U7m/rjGln/i+svMTw
HZ0jsXuG+larn/OAWI99mjcM2zwjHTZYo72w1TPKe0G+19WHLuZ9fVXMdXaC
fxPUSrh2CV5L9VcTrBM/y3K29bbSQfO066u5662542GPVblP4blOeayx711n
v2vPVeIucU28kqBNw9DTRhu2dvyv6Ut89WZV2O5657NBw9hj7DXqyHlZWdeL
u0EeeN/Q72/q+9naYI6++sdxryeuljLbOvedtBW2WCctPOSgPDfj+VtFIc7z
B4z/FeYAZ5P3mFeNMJel3jXB3uZQlMRE6iOlGWE+QX2k/dDtk+DAQsSYA5RD
rsY7tfMKEU/Q/ZVxvkchYD9xxMxxxmlkIu8zdSOnqznBucohJhLrxosnZxht
fbR0yEdXd3HQjCpEztXdPnJL3vVhj60sscO+6t/H+TLXc6yfYx72nXP93vjZ
qxDtscbgC8ylzk8wxvoYc7WehciZ9peuVAOPnG+Nz9D0NE8gR+D9Ge8JeB/Z
1nxrf2Xx3opn7Lyr5b3wFHODqop4zkeOhb3hweZj1F0URx+yLtS2+ILcoXcq
++hf6iv011h9tsLcgv5uheqct7f8ZfqSPOe7Hs6T/0J1VYo/Xxt8pw3OlRa/
Ixe/7Kse9HXXX93sP6gQ8yY3mpDqFxUif6JsbP1n6Q62TonNLpbmIm1NHdyV
hXjfeYVrb4JyJie4tBDvcQ9PcEQh3sOBay7+EGUfLO94+fsWYgyMk/vyJOXB
zzv1w7Uftifv4/ko9+jDpOV+PdEx8Y728kLImVxjPMg5TB3IQOdv4srv8XlH
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
Hlx/54794aHNOP7R3tidvl+0G/7CBy9VRh+2ezaVLYohs7+8tJ9xrbWQ5hnp
Gdez6mc8jKu59E+7d9ZLMDDBAOu11Nk6lS9Xxjwp2zj3l+0bKP0A7TKgBi/j
bu0exFasH2y4Tju2te8V2+v0ydPa/HhjzbXGz3XGCnDkQock+kMroyRvOjiV
R1RGnDu8MvIi8qfGlQHbijusMuLLb8Y98E2wT2XE5uMqI0/apjL4+1eG/n7K
gAc56EbWb46XcTevjLEdKv5wdUHXtDLyFHKaYyojfh/Nuq6MGH8k+6Yy4hmx
DtpmldVyn7YNzZ/KYCyM/Snn+bjj3k5cE3WiG97jlI8M4vmVlZEzHOkY/stx
xNN/YmXE5hNSOaAyciVwtPHH8ZWxN1pWRt60vSVtzhXOl3JuV+4ndhPPyTHI
BQcmOKky8jFyRHKygbbRCe3O0qPvH32C3haVoauFbfyAPf8o502VkYe0dk7T
ra/UN6yVa1O5izqOlvco62vMlY7R5mv0BfqeMa9B/lXKx3a/226jPnSwLn/X
x7/b3s41sdQ1gb/AXVMZec3VlTHfda75fq7DtfrjX/dEe+mv0V7r6af24ma6
Jn9xz7QXx3znJOiYYLZ+raXcjVJ5SoLBCWY4lnaWO1nvry8Y027KQd4s5XVI
sGuC68RtoJ8HJTg5QW3rNyXYM8Ee6kT3hkJtaVkP6zu32erq4DyudS4ny7+h
ejaQh/dC7yV4P8GN6kPXZgmGJTg9wfUJdk/QKcGQBEMTbGy9jnaYK10n+zeR
5gZ56etsHVxb18EMaU9NULcy9iA+ZB9uoqxTpZ+hbXdTXyd11HEsu2njudpp
sH17VUZu1MU69rw5wabqPM25biau3N5U+pvlv1nem6Sp69i4926urZjjjTVs
eLp9nZ03feSu5LCji/GOkXeAtyX4oBDv40Z4rvPbrfJdaCdzePZ/R+8DxAB+
W1f+bR7tE+zjd1HcF7hr8TwIPL8D5Xdd3Hng4fd13P246/D7ujbKO0Ee+Hc1
rnCvaCcd7V0cYy1p0cN9jHdJ//2usRD3oZMsaXNPeqsQv5/iN07T1dnaMTG2
lwTqgzwXOR+5g/Z3zox9N20xV/kvSX+l8hhHJ/uvL8Tvqvh92Zvi6EMG9y5+
LzdYW2Pz9tp6J+d8rfOl7zXpX9W+HbTRUPH085yHO+aX4sFxrvMcbEEhnlld
J98u4ujrpY9ecTyvqGewa6C9Y+rknPh92w2W1zs35viGetF5quUb1sv+GKRN
luuLzjXknaI/XrF9o/2sq47OeZj6luuH3ezjHRF31B3UeZp6aXNnZW3wm7m3
E7xjnXK49TPs4/dz/E7uZuEWcZRdrMP3rryczXMcYxfpbi3Eu7YPE3wk7VnS
31mId6t3qA+9b6kLvTcV4vd+N9k+RxmjlMc+Zb++b8meZQ93VS/12wuxv3kf
zbvfzwrx3v0Odd9uG5qzHdt76hqpnvfEvyvt7fJ3UU9Xed93DJ+p69ME8wvx
jv3eQrxr5luBTwrxXvmuBHdrB+rd7IPmY2no7yEvff+zTnmevsdmrJ/9pJ1X
iPWC7Trb7qGsPey7SR2jtedd6uumjT8W3007MUae17CnLtCen1u/pxDv9svv
+O91zvvbd6+0X9Tg/UzcPGn201bsw17a7nzn2Et58533p+JHe4aPKsZzgW6p
7J6gRzGeYXT3GQC50X95k/GOnIdcaLX1NeLp5z52rDwz7OPu9ZRxkT5yBXIG
7gPc1frZR67AHeglea+S/0X7iPncU183pnLfI4870rH84XiITxsWI8ZxNyJn
Ivd5trI6t31BeeQd3LO4Y5FnzLRdrq+1PcN5kB89Xlmd13Mf7e8cnlfeAGn/
kp5nFsTN6x33EOfxmnXuSNypiPvkPuX72CnCyeL+lQ4a8gPouZsNlr581xos
H+/0+HsxvKsdpF2Rxbtunr3+99v0QpzJnM39xdG3nuOp5V3wZPln6TfGcqq+
eEObM8faxcCd6lznOsb1BWyBHbiXHq/t3qyMXOQN+W/QZrPUM1t5b0i3zvXz
j/LXV+ZgbTBE311TWX0/v0ZfrLUOrk4x8qGNitW5EbiNxLN+yH3eqoz86G1L
2mfWwN0i38YJNk9wZ2pvVoy+d6S9qzLwm6sLWp5zjUjwfoIPKmPNblSs1rtc
XcttDxNO02abFkPPHal+e4K6xcANV++7Cd5LcJb1+qlvfirvVSe6zxbOknaT
RHNbZYxtM+dyh+PdxDG/J//Z6hnuHPlbQbz/5m8abVUMfei6pzLa1OulcosE
d1dGOa8y6h8m+CjBOZajrG8pDbTImSdulHQfV8ZzjhNcT8gZqT25p3EuXKm9
lmu/G11nGyoHGaP1UT3Hdo5ykLegMuzWoBgwX1uel8r/Jfg0wbnK+ETceeLK
7XOVw/PohfbDd756WRfo/kzcp/rnA8dxj/PGjp+o62P9vqlrgL9DxX5n3+OL
8jcg/L6M393xjpPfxW3le05+a0b9Hvug2Uca+vn90+f2dVMO5Rf+dovfcPEb
0QX+Vorf8fJbL35Hy29JGygDWfmK6t+B8b0b35s8pD708ntAfv9L+1N/s8R3
MPw2it+U8ZtbflfG7834LSu/p+N3uYzha/v3lyanvvvl5fe2+zmejOPdynky
d36T/KW//YLnPmUw1+7Ol29WfvQ3ZQ/5GyzmAVDn97T8/pbfhfE7OX5Dy+9r
+V0csEhcL+m+8/dj0PN7XX4bBn35d7mL5TtbX22l/bArsrjL/Pe3Twrx9xH4
W1B8b8H3BPyef51ykY++gnzwf6vfGAu/Z8MXfAP0k78X66t/HnauK5TVW8AW
2AFb4g/syfdE/OYMOX21VR919XK+D9v/iPq/0YfI763MxdpyiT64T38vVB/1
HvoL3/AbOL5N4XdyfLPA7+f4duhXf0sHrrH90D3hb+oaS0P/odYp+W0r34vw
N8HWKgs5P2tfvvXA3vzNI74N4jsavvHhb20dqa5t1cP6Pdg1zDj5poYx8B0O
tL8rA1n8zTX+zhNykLed5yj7d5V7Gj6+wWB8a9UHPXKgR9ZS9aDvUeU+ZT95
AOfDb54NnBFPOO/DnDu6jnBsfPfB9x/8TTTguXz1t0Z8Z8TfjKPkb5RR51si
vlHib5BR8rflqB8rDbT8LbM/xT0rHd8xsU+/dK8ih78t1cw1yXrClqwx5vao
c3vEdYccZDynDY92bOh+2nHx99n4roh9QZ3vhY7X9s3Ux1zLf4sOmr+le8E+
vuNhDbDXWolvZfsP/Ybu/q4f/LS942rp3I/Vh9SP04/8To1vTzj7OM9vM5bX
NRYTd9sXI/95XSB33MkYdnKCU+yHbmfxte072fog8aeYZ+xWjLzgHWW1N3cb
mspTjfe7FCN27qz8nW3DB3+nYryXG2Rut9xYC19Hc6AOqRxSjBxpsPoHO4au
xrMu0iOT8Zzq/DexjZyOjmdX9QxyXhsor5y7kasMlXdjddP+yHi+ZzFgL3HE
3TMSnFmMvIb8ZndzqdMSDLOsq13o6yzt6eZ85ErEavB72P+BedIYY/pn6tpc
fbQ/tx8dpyuH99W8I16onbHxe8b5YdLsLq6T4x5uXsWcPjY3AreleMbCuD50
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
9aljtNdEfbixaRPzE+TLPDtKngvETZAP6yTnzv211SDtNV9fZL5jR2yBTdo6
5g9rX3C0m2uf6Ntg15Eh5ldZ/tA5yD2T7yb8LuBRebWRN+sd8ZG+zqsezi3m
Gec3yp9F+r8q2x8iT+Y396+PA/9RlXhwh1rP3nSNMmk7yvofS0N6mHlozlIO
dzfuWweI+4J49hNiN6wH3DmIubBuvFflnaB+N6D8bpVjPM9x/mpA+5L3EO5F
/62S/vPzbpV7/uXSzJPHEOm4K3FPIt6PXgeq2/XqTz++Zv569UVvfstDPAY9
0ZezCzGNeoyGMnta55L3YvYcbPBX+1pvAz1xgS2RflrlnZzyp5Y/EddZHuxZ
nHc4Q3ImADj7NUhzoPKwG/YboU0P1m5btBU2g4Z6ZOC3c/Vd9Ed34gJXyZOx
YY/ljIz8FtbvLk90hu9I+Y3QLtwtO5S0GXHKU7VBe21HrIHf33BP5Pcy3Mfq
e0dz/QAf5b6APZtYDx17A7blbLezuHPleUvZ+rse5vVC6TgL8vscbM7vPOp7
UrNtykv1iWNtC4/Pf/tScs/i/MaadIe4SdoT2eepy2Rxk6Rlr2LOcXbCx5cq
C3532tcLpKeut3J2dSygWaT+XZWzi7I6lYxpMLeIQWD3j5y3H1aJA8gPkx5a
/Jz5QmzifW0zWFthu8u1H3XMFWjxf3yfc9IH8oMvPDuWrTGpjtqducOZ43Dz
11u+VTvQlzHyG22f6r/hGqoM5M+Xbwdx1A1z7LBXM2V3lO7/MDCXlQ==
           "]], 
          PolygonBox[CompressedData["
1:eJwtlnmYz1UUh+/M/MaYMTPMfEnW7OeLIfuSPfsSYx+lyFNRSYtKi6K02LVr
UdqUUmlXKXul7PsakhCKTIui5T0+/nif5/3d5dxz7z33O1N52I19RiWHEOZA
AvpbCJemhHAZDMAnwoQiIRyCKXj/OISfohCOwAC8K/yAH4Bu+BDGLGXuMhiK
94TfWKCA333xgabYg6HAHabiMfTB+8GgFOWQ77mYxi6By00xPJaP6YVfaVpr
OQzD68CipBAWQ228HjyNN4Ka+HhYmBrCBexnAj4J3sK7wEN4XdPcJZCHj/Wc
UzVnHH6Px8DLw134HVCY0Ji78fvgQKrG3Is/aIrtbfeb9uB78TO6Au9t2vsK
zqgb3gGm4b9CV59r6hsK7fE2Jj9Dfi3wtjCF31OhFd4SLFlt3teZO9kf6Y66
4O1MY32N1vjVcCJFdzAY7w4n6SuETngPk/sddsZr+Z0k6Yz9rBuYzqoa/U1M
OXvuHqMj3hxqJCunxngzqJ6stkZ4U9Ne/I7qm2J4LB/TED8fRlKXRSEXvxVm
JHTmY/A7TXfxCb9vxz+EdRnMLRbCAvxTrx/8FG0f4x+Z/Al4H38Xrs/QnA/w
J2F7GuvAY/gjfib4fHgcf9XvID2EV+B1/Hl4keRawrNeS5CWoZjz8be9BvHV
jH/T7xZKpKnmJvtdmN6WrzEDf8+Um895B3/UlIvPme59plwi1puJzzXl4mvO
w58x5eJ7eMpr3zR2DDznucKuouf2gL8EiXTt4QX8Zn+DCdXENXgVf7+cfQH3
U93PCmrSXwtG4sO93vAYRvhd+/tNUo1U89o2vb31xKhsiuGxfExVvJzXG32F
UB6/CWondMej8RtMa3nbKHwOjEhXzi/js0x78z3NxsvC9KCYHruiKbbvoQL+
gJ17+/Aw3pE38X2kN9IJv81US34Gt+CVTLl7DZbB2zFmL2P3wcV4G9gTqa0t
ngvT8OkQ4ev9fWaFcBw24Vu8prOpU35vxHfA2Gy1bcU3mPryYa2/JdhcgnOB
X7x2iJlH7JW5IRTBV/v5Z2mNdXigrQV9syEFLwOrGL8ayuLfMWZfttbciX8J
EzO5K1iGfw4zeS+nYbGvbcq9L+O34UtNY5fQv8jPyvTWfM5CfCUsz1ROq/Av
TGP9DX6Gp8bK/SpIxhPxuVzJLw3Pgin4VMjGTzFndA5rw2n8H98j42fx+288
KVYsb/vXaxWK52jOn/jAWH+rjkIB3srPINKdtcbbx7pLr4EOHsv0t8Rr2mv7
GHTm7OfBcfxaU637G7gOL8acyZFyzsTTYVKktgz8jCl3v5P/8BOmWJ5joeca
a69eMzn4CtqGZOoMv8Z/h2Y5qoGT+F+mvXvbH3gv5hxk7iHIxwfF2usxKE3/
N76HTN3xV/iF9G+lbxvUw2vCJnwz1MJLw/BINeO1Y7Ax0pgYrwNbIsWoi1f1
Gsc3QDW8XKxaWwPl8cqwLtKYKnjJWG9jBpTCi8a6e1/zPLw57MJ3w0Vey7Hc
76xlrDk+19+Av4WS/k0NevOl8Ma07aBvJzTBG8L2SG2N8Mi/X0FzfG6FWLmu
hYp471hneRj64H1juf/P0w//2fQWM+EIXj/WWfoaDfCmsdb2PTTDDzBmXHH+
/sIhfLvpLS2AXf42TG/t7J37ty/WXfgZ5/n/Wqa15jL/IH7YFMtr8ii+2xSr
HG178UuY82OkmuiJd4/1v5m39cCrx7orv9MaPtYUuwPs92+DKdbZnPE1pm+R
19C3/u2MdVZ+p5X822ma69+UPfgbpr91/o1+Df8fCgKOHQ==
           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.9625, 0.77625, 0.48374999999999996`], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJwt1Hf811MUx/Hb3vtHlNJQ31+lvbVVmtopUpGRtJdKe4cks+xQMkJ2yGrI
FhkhsxAZoYgynufx+/3xfrzOOZ9zz7333Hs/VUeM7zcub0ppHeWjVZmUNhZK
6QY8QPtKpbQfO9JWiV3xWXqxWErPYzN6OU9KjfA5aiK+CZdSlYIpLcIfaHzp
lH7C32kD+yA2zh0bNRbS5gIpzcOmMZd4S/yNmpdJ6TC2p2xraB3z0BY5LXAJ
PWiuK/AX6qr+jziXBqs5C6+kUvZ1NZ5B16jTA1fQZPFrI0b71VmOP9MudX7F
x+jPoik9iW1y1xBrWUBd5C/GtlRLvAO+QNWL21v0iVbryWZsRcPltMM5tNfa
5uPjNEb9jVg1+mJf2fgJfVEypc/wFrqzcEq347mxT4d1ERbMTqlOuZRK4zD+
UPGh+CkNMHY33kpZxq7G16l3iZTewuvoI3u/MeahTfL34Ew6lD+l6Xg99ZSz
MvZHq6ytARYy35qyKeXHSvyV7k5lPCn6yK6ID1B9+3oI88lrLT/hZfyK9j4D
p8VYc02JM6S1RVK6D0dEr+zlfHyDtunnq3hT9NFebsZ34izs5U38PO6ou/oV
vh09FX8X85pvh3kLYE+ar1c98G/f/nOv/sE6NMS+6mJ3ypi3b/SGDqrzPn4Y
fdGfj+McaLo13IbHq5VfzcJ4YqzJFqtkcs4jzuU4fI9f3tgP8I7ohT3ehSV9
y5ZTAnfxl5trJ5bj1xYvi3fzR8pfh/fQHvOuwWq+jZFTNTtnjpgrCwfTUvYg
HECL2f3xdJrF7oDtaSa7Ha6Pd6X+WmzNnyHeCsfxd+jDWOzHXyTeF++N85B/
P15M/Z3dxHhTvs2R0xkvifMydiSexp8u3jLWy39FfDSeGvdYz+thbd8myKmF
9WgSuy5u8W2pc9+OV9Eib21ZvMXor7M7lMk5szi72vgdzXMH9uEfce/l/IVb
6Zg3+BI+FfnsZ+Ltxt3zHnvi07TTXX0Cu9EK8U74LRXzH/geO+fG43u29Y23
zgw25B+1hub4CBVWZwOe4ttYOdWxMl3KroRNaCq7MTagyez62CzeBrtpds77
iXdUAYvya4oXwbL80eIn4KRYt/5PxeK+ZeQUi3rRX/EJ8R75o8Qrxv2Ms2GX
x6O+TdGfI9iLv0D8TPyav14Pv8G2/MvF28Ta+dud3Sj8ly7wpvKI94le68kA
rE6Hra0GPhz/Dn14NJNzD+I+XBg9iXw5NWONxk9Uvw72jrHq9Meu/LniXbAT
zWZ3xPK+LWOfzS5Dtdil4v7HHVIzCxvxp4g3xAq5+419Z+XmlMMW/GnizeO9
8I+Yd1D8D2i3nhzD82iYNQ/P5Own9lUNa8bbMLZG9IY/139sNp7FXyI+ELvT
PHY33BtnoJ9fxnuKuu7ztsiPe2zegVhF3mj5J2fn/LvjH35OvLu49+whmZy+
RH96xRuiA+q8hn2MWWhsb/wfED0dJQ==
           "]], 
          PolygonBox[CompressedData["
1:eJwllne811MYx0+/363buq1fkvZ+Tre0U1rapV1S0VRG+7b30qaUhBBKIhQi
lBl1VYQQChEKEcrqliLv5/X54/2673u+ZzxnPedXcWhWr7GJEMIGSINyFsKd
/F0JZfBM6J8rhBz+N7wevMX/A6E2XjeGMCkVwkSog5enbFVQH2XxvnCWAXKg
D55BnUhdg4J4KdNYNaAE/iLk5GfMAiG8hJenzijqjoRyUXW8biZcgo+Hawh8
O0zAm0FkrGzia+KxQuWCISyBXXgdWMO381AX/xsaFQ1hLZzBa8GAXJpzDXwU
7EmG8DaMxK+DcwnNqR/+KVxaKISZ8Bk+DIZQdzAMNa2Rr5X3WRMvCunEPgqK
4bfB5jwhFKbwdrwtrKDvTGiN32DqaxAMwbt5zHxbBV3xMbA3qRhH4w/Burwh
JPOF8LCvFWs2nrUbB5l4JW8ftEe+VyNMc8uG4Xgr6syi7kxoiS+n7ATxLYRl
+FKTV4Al+EewLUNr8LGvJW2m0nYKXIEvNNV9LXcIC3yvKFvEt4XQC+8K8/Fb
oQveBmanFENrvDnMwKdDM7xnVNsF0APvAHPxOdAez2KMfUmtyVj8asrmpVSn
I945aiwv64R3j+rLY+iG94Ul+GLogz9GH7ewlvvhcfxNuMDZvA924vNMc+sH
c/3uQJd0rdlKvDh91PC1hxS+lbLRnO+88Cz+BGyk75awCd9i+uZlm/H1cIT9
nAbr8HFQM01z9LlWpc+x9D0GquAbTX15m0c9NlOsDeBVfIfJP2SM7fgLJveY
tuGPmM6Oz3kDPsnnlKYxJ+I3wamk7tzN+CzT3P/i/5l4SdPZPgCX4XfD1nSt
yWp8mqmu9zkVf9A0t+Kw1mM1ubdZg2f7fSqoNd+Nz4a5jHcM5uDfw6bCIRQo
EsIP+GRTLijN9yl4YE2aFQvhMPf7ot9f/l+a0h73w++h7BBjNWXMe/Fro/be
z2hv/IKp7SQ4jz/td5q1Wg3P4F/BUc5+G2L4Gs9Fm2GMtxcSeD6oRl9VoSSe
F9Lw9XxPx1vRpnpCOas5XiAqN3qb/HhhqJ5SziyEP2ca23Pk8557KBueUp8l
vO+ovn3OSfxJ09n1mJ/yu2jam/rko4r4WdPcikAO/j50z9Cd/gDvCcZ+L4Ne
eDS19Rxa3fQm+NtwBqrgq2Biutb0Lrya6ZvnnMr4t6a18j37Dj9nyr0X4R/P
RaZcfRL24O+Y3GN6F7/RlKs8x3qunW7aaz8TM/DPTbnY9+QLPHfUXvgdzINf
T9nApHK45/LBptzqZYPwf02x+B7+h/c3zd3P/AC8t88noRzcHb/fdHY85z7g
58f01nmdHvh7vmbEns0c9vvZN631Fs7rn/hpk3eEU/jlxDghpZxdE68d9bZ6
WS28aVQunAZNPJeZ7kIH8s18/Kqo3O05swVeNurtHAFlot5Efxt3Q0O8kekt
HEy8TfEro/r2HN4Yv8P0NvmervCzGvWWZPmZ9LMa5Z6DquEdqbM7oTPTCe8M
KxN609rhXTyfJFTWHq8clbtGQyW8dFSsfqZLRb1x/tZ5mw54xai6/pugAv47
ZQeL6A3/w+M3zW0XNMAbRr1Fk6EBftj3kLNxmj05hP9iWvvjnMeT+Mum3x47
4RX8J1NuyYKfPVfC8gzt6QFfb9Pa+Zzb4J+Y+vY6B01vuL/lfsdb4I1Nsflv
qPr4EdhRSDF9iR+HecRSBo75XYuK3X9j1cN/NcXic/4N32c6W54j9+KLTGfB
f1Msxl83zcV/A72Bf2Pq28c8ip8wzd3H/BEvFvVWec4pireLelv9TW6L/w/5
K3NU
           "]]}]}, {
        EdgeForm[], 
        RGBColor[1., 0.95, 0.75], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
6DajTir7WUN3wxlDD+izxDpuaA9/jvye0OdJe/rJzxND7dGcOG0pr8p92HDE
0CbWPZvXu4ROhhBDsKEjEN3BEGRo70d3IK+Q9d0cQ+E4l6+8QKD+bAcCGMvt
8KN89Xsb5G3gX7GOiH/F+NrP+NU7hjPM42TLm20oGOfqdYS6qV6tDYcMrUhb
U8/WfvVui6wQflQH6R/E5oChhWE/tOQtact9yA8Sw5Pvx6Yl6QHGRR/6vCX1
OMCc9uqt9Xm6YZphlSHCZKstjbT00zhHLzSUMBQ3LIAvjkz0IuTFDPMNpQwl
DYsNkwx3DZMNRckvhu0i9IojW8AaPxkb2f4J/Qf0RMNHcW7NnAr9F7zKHkn5
xxtuG+5gOwG6CONlLvvSVGynQf9DnEnEuof/KfAT8PcXsaeAyeiONowy/EaM
wvSv6j6P+qu91e7/Eu8+8YOZA8uMrmNp3XhXFtWrO3UT3Q1e6IFce0m4Iczw
ltmUMSzFNhybbtBdsYvCdin6HxtKG5b40R+Tp7ERTnzF0Hv5FfTxEvp8HvUs
grwkfTyXPMlTYC/b0HjHL8dHafyE4z+MfOl1jndlWEn+cnytoK1v0va/0f6/
xrn6aQyrjjpP6K6m+6Tub9o/tfftZQ/bQ3492r0euvXh1R+6V25D5vnRfa5W
vO/c1gwd3VPfw2YLPjbjZxNrmO4ZJ6BPsOYdh9c6pfed2qP0/vNbeK0/khVG
pnl8lLWtGXXZS5lqUkY9K9RzVW+dVZyTxJDdMXwXwf8xytEevY6U7xj6R6l3
beLUpk51oL+EH2dtP9bwOxB9K861xV2/ua22vgfttb3O0Tqr6oz5O3N5HOl4
6JH0s/p7DGPgFvl3mKtjkI0lfwzjROug1sP9xGlILJ359OxA51Wdj3WGbgwa
IWvCeGlKH9f36/MGyD7Ax058eGeTJvG+8/5OdHYQfzcxGuBrB/Eakdcw3nd+
78P6foG9uR17dTf2cO3fb1s9yxl+MjqjpZni3PniZ8M7Rpc3/IiedKR7OdbR
0rmM3jvIlZ/d8Hqc24dkX8Fwhf3njTi37+zivOLF3I1MvOSvxTn/5bHdgUx5
BeLcvnrK6G9iHV0ImXjJTxu+jXVrq/iT2O3jLJOddfdb9tgchpxxbs9Uea/G
urjfkC+9isgroKd65MD2AHXT+nWG+GqD/X77sXjp5Ipz+0LuOLdfvBHny5uE
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
HfU6Y+lpdAoyHguj69HSO42e5JL9EO3WhR+jnQ+V72y0Gzvyc4pYxWmLksT0
2kV557AtQv2KkSe55rzuQd6cVqp7SApkytO81lk1nH1b+7fkKpvWzbLke+tE
6Ri3dpYh1lnKLZ/SW0FsyYuhvyTGt7+W9hv/P1J/+VKsS9FuPkj+NmNP49cb
myMYa7VN9oeldww1jP7d0luGm4bqMY6+bagV43RGYvsL+dUM6+jbE8x1yZR3
k/Y/yTyUj9r4qUNc8VrXtb7rXCG7GsStSXlqUM8LRn8f7fpO/Pfw3yF7i3Fw
CVyMdu1xG1+18FGKthOt9CJ1/B29MsiUV4758BPjUePyFDhJ/aYyL3QWiGON
j2Vv1x6fYBjC/L4KrXQofas+7sHaM5S8n9EfHO3OE0PJv4L9YPpW5RoA3T/a
1V+ygcilNwh/A9CR7oe0kfR7G3rRjt/Rpr1pP+n0M/RBfgF5X+hxtNtt9PqS
PzDatx5fIl4/fPTB/3fEPY/sAvY9aZPz2P1AuXsi60XcscT+mTpexq4n7an1
oZuhK+3cPdrN7w7RbpxqvH6LXld0T6MjeZdo19/dkMm+k6EjfX8MP+3xeYK8
rtjKR2d8iG8V7fbF1tFuX2wNr3kwIdrNi7bRbt87iv920G1J21G37tRpHG0/
nja/TFscxk8b0rbQt4kznnK3I84dyjAePa+Mx6lbe9pabX6L+CpHJGkU9E3y
xxh+gx8NbiJ/zZAh2q0jt/A5hnzZaP3Q+qK1SutN+mjfmVrzIG20mwNDkacD
af1k6ZGlQTct9GB4jafEaDe+BiFPTZoGWkhFfkra1+NTwY+gLsPRGYC8P3QS
SPSTpUSWQPxE6H7RvnkiPp56DCdGX/LiQRwyzSWtNzH0g8Z/NLzSXuT3waYX
NsrXWA03hKHTG70o+rUn/RpBn/fCZ0/supEXHu2bQ92RidY80Zw4QYwU0W4u
BEW7cRVsCI1280R5Ichk04m8EOoZR9lCyeuMH2/+dcFHZ+yDo31jV3qBfn5D
4AOi3RzoQvnD4NuTr3N7DG2jupzC/hRxRGeKduM7M+moaDeONea2RLnxtMnS
L6PcuNHcehnl1oMXpOJfRblU+ZrXmovZDFujnB/50xzNTt546Gz41LyVj83E
lI3GsPhNyMWnQfc/YmpsbY9yY+2TKNe+yymv7GpHufZS3rIoV8cx1HcbdrJP
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
vi3Ezavjoe4cLIjOy5zT3NM5tKnRewx7Dc0NzQz7DO1YO44Zfra5Wt78XQl2
9DshjlcqXut6BfIl11qnuad3JxeYtzqva97qrO7x38NXNpt3DTfMfnCoWzuH
hDrZL8FOnsgcTlJ50JFuYqhvXZduFbP5NditsyqDyqL7wkXWJunIr/S0hwwN
dXvKj5RXNsNCXd518oZSnmHQ14h/FfkAytWfepWm3h0M7ekDxS/DXqS1VWt3
q1C3Rreg7d8ivwzrb8tQtx63gvbsWiNrDX8YHwfQa4Ff8Vrj26DTFvoI5VE5
y7APHCX/KH0vumOoG0MnoZV2MnQmPRXq+lTndfXjKeTSK8f40Ng4gb3awzvf
n6dd2jPGSqTwrfftkHltdwJb5Z3DR0ra3NuD1d8D6ReND+3DFy12aStDmRBH
K/X26UvwFyz93lAqxEG07hq6L2hOaG5o/9M9TXu17pE6H2jP/irU3UO+Rn4a
Pelrny2MnmeXFV3ZyK9oyRS3NGVRvbX+5GWfVpsWZE06Rv+ofQuk8OWdgv+O
sn+Pn7zM+UKUSf5K0xaK9Tpnhf2UIxvlqsJe/y55Wg9epz28O6VopV7ePnid
qS4xlq8GuzVBa8Mp4nfGn9YZr321BjUh3Uue5qPes2pOyldZfOu+spKzlGTe
OW4fY17zSOvF9WC3rmjOah4PD3VroNa9E8huIFfsxvRHI/rV4xvDq+xdKH8X
xoTOcN1I1ceqZ8UQV+9rwY6uFOJopSqT2nUEsSuSJ/0byIcTdw/lqoyd7Lca
0oW6tb0043UJ+BiZ1qe0oW5d+t3sbhlqhDhe8jSGQaFu7UxNOog5s8n0vjSk
MnqjpRtC3BxLh+1QPxv5ka5saqMn/UTmpOZiSnSHoK8z9GrOxzoP6rmG7vx6
N6j3f/q8jt716TMV4vUeUZ9xOQjtfdbmdfKlt5qzud43612i3qnoHWNW0izo
fMp9Q+8VvfxsxNvjx3vvHUVnJ5biqozaZ1Q/nRMesTdrfKyxNNrStey77xnq
G+LRXRfidKJCnV4UNp8aIuFFrzJEGL3a0nr0t/x8FuJ8x4Q62TbkkehGYL8a
2XbKsA2btZRPZVkf4sqjcqv8jeg39XdNzh3eXFT6mPNLOvp/GHOiCW3wAB8P
0VF+euIk0F4a1xkY2+sZIxuYm8PRH46OaLW3+lttnpP+V7+rf/W5AfWp7qh5
eQelz+vo/f8J7q76LI/3mZ5j3GmVr8/26F3/4TD3Ga0j0PqMVG58yJf09Lkf
0Sewl64+M5QHu9zQiqH8fJQlLzbHkendWkne67UmXhueTaiOLbl7tyHGEejD
3MdVfj2PKkjZVbZW2B0Eh7jnp+WZQhrarCUx9DxF777TUIZD+D/k98xA7ax2
kKw47zD1fnwBtGR6L6vPmO0Aep6l97x6/6/PBOj9ryBa73EzYON9dk205Jnp
y92UWZ/l2op9ZvxJti3M9/xL75W3QysvPf63k6f5soU5s5P4u6jjQeq3kPro
Pa3e4+qdcFH6piT1XQgvWs9v9BynCOXbQnn12ZBT9IlQCJnaz2tXyfQ5Ee9z
JHqfehq6EO9XiyAT/XmIu5t8wZq62VCHtXUTtOZtdUM1Q7EQd98oztrwGWfo
6uith1aq9T81a7D8ai1XW6VhzU+NXPaV8ZcGnc206RbstpJqrqsM80N8dzPx
RSlLFfxpTdPdWWuUUvG6R+tOqTOmznptoHWHVBoAvYGyqw55Q9wdKR++1V5V
oT+D/wKZR6+jraohl6wSa3Fl9rnUtEES+5W3DtYgvs5TutfqrrsQWs+jdXbU
3VlnSe3jFVh/V7OuS6bzr87BK7Ap7uejJLKP8VWavOK0p/b0UsQtSVoK3Y+J
HUD76V6/gljLibeS+OlYU7dRtgr0SSXKuYb+T8U5YC1tI/nb+JNfPY/Qnbos
dpWoo+J4d8GytMcyZCuJtQz5UuSrKIfejfbk/ZT6W88RNBaCqFN7xkwYZyzv
vBVO6o2pruh45zM9V/Gev3jntRSk0tM807OAvuy92jP1zKin3/7s8aJ/C3Z3
So0h+dXzmk7oyLY7ZekGrbWoboibM3rW8LnfGI0l/jrGo84I8cz7OPL6ItuC
H81B7eOylZ8I4kQyb6Wj9UHPOvRcoRn7tvZwj38C3w/ffTkPxCNT3X7l/qzn
IjpH6x4pWulzZM+Io+cckum+2ZL8FtC6myr/ZrBbg3QGrQavttTzLN3ndCe8
SZ70JAum/9szBtpBd0CuckpffhTnJWUJxl8Ifahnhmqz3qS9oPvQjp8wvjVm
o+nrXqxFGoet0fN8dMJ3R2K2Rs+7D2tc1KCu1WlztZfaSvrefb0HYz7K0N7Q
wRBkOGbT+ajhzUD3WQN95qAnaS9ooQefRehF3nfcX3tD9yIVf8LQ0dDBcNtw
xzDe0If87+Eln4Bee8Nxw6dBtl4YIrkr9sVOnzvpx/Pu78mT/JShk+Ek9DeG
zsQ/gby74Sx16IisE/H/oAydkZ2inj2wuUTci/g5g7wvZbhIuU9Qj77I+lGW
LvjOYshsGENctUst6597lk4xTDZMMtyFbm04bGiD7B7yv9C/h84h9A7Btwp2
e5XKpL2rLT6OBLvP7+idwI/U6wfaVZ9X0/eZ9Pm1dsYfoz+OYCv/kh8lb6Rh
lCGjIRP0aNJMyDUedQ8cS70mGv6kvSfS5mNok9HkTST/CLHa4m80ekcpR1t8
/knbHKe8x2jvbw1d6Sv1WTfk35A3zcbXm4Y8humGvPAHDS0NBwwzDPnIm2Uo
YMhvmEmqvIaGf23efGDpbUtrWloLXdkkI5fsjqX30ZXNdGKqLLMNBdEvbJhj
mIufZPIeBDo7xdxj+NqQ1eqy29KvDI0M+yl7C8qZj3rUJn4t5LOowwHq24KY
il3I0BxfLeALUsbfzMevhqrwc8ivEeTq/rvl/RHoYtVGpvpLXs/ou5bWtfRe
oKMlq2/4K9DJlL5n/N/QyhPfAJloz0b6qyyNCHbrxWn6W30teXiwyzvNWFC/
R6IbgV5X8o8xVzSO1EfvB7l+Uir+H+pcjTa4Gejo6sjE/0Y9bwW69pjB2FE/
/0m975Inner0S50g12aKoTo2wF919BpQDuXXwZf0/4Svy1jQmGgS5Nah46wB
gt4XSTaeOZeduaO1JAdrSU54zb/X0ZsALf03oCdCT8I2nWGrxUxraUvDc40Z
S7cFOXk69CdiIz49+ZOJKz/PsJN9c/inhu1BTj8DduJlO476ZDPsCvKtQ6+x
9uw02eeGOKO/wI987AhyOjvgnxGvBTZevuqidfRFkIujeLeJN5420ZzT3NO6
pFixwS5eTLCjPzPZl4ZURm+yNDWp+C2Wpgl27SadlMFOnhJ+oyHJ6A2WJgY7
fgMylXu4YYRhPfnKU3lfBrkyJ+FrI7zaVXVKQ+zNwCtXavIk20J/qv+iLF0T
5PZk1WdtkKvfuiDXrvHU9XPy42nvOOaa7D/FRrbRlDkh2JV7DTEkTyBPvteg
uxafCcTMSH+rr7R3aG/Jgkz9r/7QezPt4XrfqHdTmt+FoXVH1BohHb1j034g
nPKTfRvs2ycKY699Wvdh7du6J+l8UAxe8j/Ql31hdOsgVzz5UPyz2Mm+KLzy
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
Oi/qjPw/w9zM9w==
           "]]}]}}, {{}, 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          
          LineBox[{7, 107, 207, 307, 407, 507, 607, 707, 807, 907, 1007, 1107,
            1207, 1307, 1407, 1507, 1607, 1707, 1807, 1907, 2007, 2107, 2207, 
           2307, 2407, 2507, 2607, 2707, 2807, 2907, 3007, 3107, 3207, 3307, 
           3407, 3507, 3607, 3707, 3807, 3907, 4007, 4107, 4207, 4307, 4407, 
           4507, 4607, 4707, 4807}], 
          LineBox[CompressedData["
1:eJwNzTswAgAAxvEPUUQiYwNbHmOjodFg6gzuiM6EUh5R6SFUDE61GRuMDY0N
LVQyNhqMhsYGPdwZ+g+/7X/ft3QQdAdGJPmwihzyKKCLHvrYIdqFB294Rw11
OEalZazgGTnkUUAXPfQxwB88Y9Ie9uFFHQ18oIlPrBnYwC+2x6UqFiekNNrY
NEplLJikCL7hmpReYZqS/GjBaZZe8A/vNF9wzEhP6GDLIlVgn5VS+MGGVSrB
OieF8IX1eakIg006xBGO4YMfJwggiFOc4RwXCOESVwgjgiiuEUMcCSRxgxRu
cYd7pJFBFg94xBAaDz7c
           "]], 
          LineBox[{4901, 4902, 4903, 4904, 4905, 4906}]}, "5"], 
        Annotation[#, 5, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwNwz0oBGAAANDvFOX/v87mJmdjMhgMFtncyqQY/RVFURRFURRFURRFURRF
URRFURRFURRFURRFkffqxRpbEy2REEKbuSUh5Bm1yGJjxi21zHIrrLTKamus
tc6E9TbYZLPtdthpl9322Guf/Q446JDDjjjqmONOOOmU084465zzLrjoksuu
uOqa62646Zbb7rjrnvseeOiRx5546pnnXnjpldfeeOud9z746JPPvvjqm+9+
+OmX3/7465+ReAhJJptijoUWmG+euWabZaYZpptmqlH/Abz9TL0=
           "]], 
          LineBox[CompressedData["
1:eJwV0GlrzwEAAOCfKHs/Jjvt/M9Odtlmm90zO+2eco1yb4qaoiiKsprairKi
KIrayoqymqIoippC1FZTVpQVRVH2ePF8gSe+b6Ctf1kQBB8IDwXBKlYTQSRR
RBNLDHEkkEwiKSQRIo1M0skig2xyKCCXQvIoIp9iSiinlArKqKSaempooJZG
6miimXZa6KCVTrropodedrCTXexmD3vpYx/7OcBBDnGYIxzlGP0McJwTnGSQ
U5zmDGc5x3kucJFLXGaIYa4wwihXucZ1xrjBTW5xmzvc5R73GWeCB0zykEc8
ZoppnvCUZzznBS95xWveMMNb3vGej3xiljnm+cwXFvjKN76zyA9+8ovf/OEv
/whSg2A5K1hJGBGsYS2RRBFNDLHEsY54EkgkiWRSCJHKetJIJ4NMsshmAxvJ
IZc88ilgE4UUUcxmSiiljC2UU0ElVVRTQy11bKWebTTQSBPNtNDKdtpop4NO
uuimh97/D46WAMtEeQo=
           "]]}, "4"], Annotation[#, 4, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwN0T0wggEAh/F/isjHS40G1x3eYmxsMBraGPrgrjuLwV0Gg9HQmBiNBqPB
aOgu0RhCERIqJNx1qs3iGX7rszzulfWFmEVSDD8u6RtfaOITDXzgHW+oo4Yq
XvGCZ1TwhDIe8YB7lHCHWxRRwA2ucYU8LnGBc+SwCiv2nZIfpTFpAwYOR6V5
1A1pC+M4HpEW0RqWEjCRHZKi+BuU9uBD3iGtwY6DAWkO5X5pEy4c2aUAGn1S
HBNI9UpBdGzSLmYxAy88MJG1Smc4RQbLWEIEYYTQ7aGBNn6RxDYSMDGNKUwi
w5ATpBFBGCF0edRBGztIwot/Iz5KFQ==
           "]], 
          
          LineBox[{8, 108, 208, 308, 408, 508, 608, 708, 808, 908, 1008, 1108,
            1208, 1308, 1408, 1508, 1608, 1708, 1808, 1908, 2008, 2108, 2208, 
           2308, 2408, 2508, 2608, 2708, 2808, 2908, 3008, 3108, 3208, 3308, 
           3408, 3508, 3608, 3708, 3808, 3908, 4008, 4108, 4208, 4308, 4408, 
           4508, 4608, 4708, 4808, 4908, 5007, 5006, 5005, 5004, 5003, 5002, 
           5001}]}, "3"], Annotation[#, 3, "Tooltip"]& ], {}, {}, {}, {}}}], {
    DisplayFunction -> Identity, AspectRatio -> 1, DisplayFunction :> 
     Identity, Frame -> True, FrameLabel -> {None, None}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {"DefaultBoundaryStyle" -> Automatic}, 
     PlotRange -> {{0.001, 0.991}, {0.001, 0.991}}, PlotRangeClipping -> True,
      PlotRangePadding -> {
       Scaled[0.02], 
       Scaled[0.02]}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{
             
             RasterBox[{{{0.50875, 0.48250000000000004`, 0.52}}, {{0.9625, 
              0.77625, 0.48374999999999996`}}}, {{
                Rational[-15, 2], -25}, {
                Rational[15, 2], 25}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], -25}, {
                  Rational[-15, 2], -25}, {
                  Rational[-15, 2], 25}, {
                  Rational[15, 2], 25}}, {{
                 7.5, -25}, {-7.5, -25}, {-7.5, 25}, {7.5, 25}}]]}, {
              CapForm[None], {{
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -25.}, {
                    Rational[15, 2], -25.}}, {{-7.5, -25.}, {7.5, -25.}}]]}, {
               
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 0.}, {
                    Rational[15, 2], 0.}}, {{-7.5, 0.}, {7.5, 0.}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 25.}, {
                    Rational[15, 2], 25.}}, {{-7.5, 25.}, {7.5, 25.}}]]}}}, {
             Antialiasing -> False, 
              StyleBox[
               LineBox[{{7.5, -25.}, {7.5, 25.}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, 0.}, 
                    Offset[{4., 0}, {7.5, 0.}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 0.}], {-1, 0.}, Automatic, {1, 
                    0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 50}, BaseStyle -> {}], Alignment -> Left,
            AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}}, 
           ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"M10DefaultDensityGradient\"", ",", "#1"}], 
                   "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{"3.`", ",", "5.`"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"1", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"2", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"3", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"4", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"5", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"6", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"7", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.6966099169127827`*^9, 3.696609970008493*^9, 
  3.696610072164768*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{808, 587},
WindowMargins->{{Automatic, 31}, {13, Automatic}},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September 9, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 82762, 1784, 4689, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[83345, 1808, 35334, 876, 1873, "Input"],
Cell[118682, 2686, 35220, 702, 532, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[153939, 3393, 155, 5, 99, "Section"],
Cell[154097, 3400, 162, 2, 46, "Input"],
Cell[154262, 3404, 1780, 48, 223, "Input"],
Cell[CellGroupData[{
Cell[156067, 3456, 534, 9, 28, "Input"],
Cell[156604, 3467, 296214, 5111, 376, "Output"]
}, Open  ]],
Cell[452833, 8581, 152, 4, 28, "Input"],
Cell[452988, 8587, 1905, 50, 165, "Input"],
Cell[CellGroupData[{
Cell[454918, 8641, 426, 10, 28, "Input"],
Cell[455347, 8653, 191333, 3257, 376, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

